apiVersion: dataplex.gcp.upbound.io/v1beta1
kind: LakeIAMPolicy
metadata:
  annotations:
    meta.upbound.io/example-id: dataplex/v1beta1/lakeiampolicy
    upjet.upbound.io/manual-intervention: "Dependent resource skipped: Policy data refers to an existing user account. Note: One can only use Predefined Dataplex roles or Basic roles for LakeIAMPolicy policyData."
  labels:
    testing.upbound.io/example-name: binding
  name: binding
spec:
  forProvider:
    lakeSelector:
      matchLabels:
        testing.upbound.io/example-name: my-second-lake
    location: us-central1
    policyData: |
      {
        "bindings":[
          {
            "members":[
              "user:jane@example.com"
            ],
            "role": "roles/dataplex.admin"
          }
      ]
      }
---
apiVersion: dataplex.gcp.upbound.io/v1beta1
kind: Lake
metadata:
  annotations:
    meta.upbound.io/example-id: dataplex/v1beta1/lake
    upjet.upbound.io/manual-intervention: "Dependent resource skipped: Policy data refers to an existing user account. Note: One can only use Predefined Dataplex roles or Basic roles for LakeIAMPolicy policyData."
  labels:
    testing.upbound.io/example-name: my-second-lake
  name: my-second-lake
spec:
  forProvider:
    description: my second Lake for DCL
    displayName: my second Lake for DCL
    labels:
      my-second-lake: exists
    location: us-central1