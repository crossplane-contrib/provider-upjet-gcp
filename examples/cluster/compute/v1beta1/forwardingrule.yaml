# SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
#
# SPDX-License-Identifier: CC0-1.0

apiVersion: compute.gcp.upbound.io/v1beta1
kind: ForwardingRule
metadata:
  annotations:
    meta.upbound.io/example-id: compute/v1beta1/forwardingrule
  labels:
    testing.upbound.io/example-name: forwarding-rule
  name: forwarding-rule
spec:
  forProvider:
    ipProtocol: TCP
    loadBalancingScheme: INTERNAL_MANAGED
    networkSelector:
      matchLabels:
        testing.upbound.io/example-name: forwarding-rule
    networkTier: PREMIUM
    portRange: "80"
    region: us-central1
    subnetworkSelector:
      matchLabels:
        testing.upbound.io/example-name: forwarding-rule-ilb
    targetSelector:
      matchLabels:
        testing.upbound.io/example-name: forwarding-rule

---

apiVersion: compute.gcp.upbound.io/v1beta1
kind: Firewall
metadata:
  annotations:
    meta.upbound.io/example-id: compute/v1beta1/forwardingrule
  labels:
    testing.upbound.io/example-name: forwarding-rule-iap
  name: forwarding-rule-iap
spec:
  forProvider:
    allow:
    - protocol: tcp
    direction: INGRESS
    networkSelector:
      matchLabels:
        testing.upbound.io/example-name: forwarding-rule
    sourceRanges:
    - 130.211.0.0/22
    - 35.191.0.0/16
    - 35.235.240.0/20

---

apiVersion: compute.gcp.upbound.io/v1beta1
kind: Firewall
metadata:
  annotations:
    meta.upbound.io/example-id: compute/v1beta1/forwardingrule
  labels:
    testing.upbound.io/example-name: forwarding-rule-ilb
  name: forwarding-rule-ilb
spec:
  forProvider:
    allow:
    - ports:
      - "80"
      - "443"
      - "8080"
      protocol: tcp
    direction: INGRESS
    networkSelector:
      matchLabels:
        testing.upbound.io/example-name: forwarding-rule
    sourceRanges:
    - 10.0.0.0/24
    targetTags:
    - http-server

---

apiVersion: compute.gcp.upbound.io/v1beta1
kind: Instance
metadata:
  annotations:
    meta.upbound.io/example-id: compute/v1beta1/forwardingrule
  labels:
    testing.upbound.io/example-name: forwarding-rule
  name: forwarding-rule
spec:
  forProvider:
    bootDisk:
    - initializeParams:
      - image: debian-cloud/debian-11
    machineType: e2-small
    networkInterface:
    - networkSelector:
        matchLabels:
          testing.upbound.io/example-name: forwarding-rule
      subnetworkSelector:
        matchLabels:
          testing.upbound.io/example-name: forwarding-rule-ilb
    zone: us-central1-a

---

apiVersion: compute.gcp.upbound.io/v1beta1
kind: InstanceTemplate
metadata:
  annotations:
    meta.upbound.io/example-id: compute/v1beta1/forwardingrule
  labels:
    testing.upbound.io/example-name: forwarding-rule
  name: forwarding-rule
spec:
  forProvider:
    disk:
    - autoDelete: true
      boot: true
      sourceImage: debian-cloud/debian-11
    machineType: e2-small
    metadata:
      startup-script: |
        #! /bin/bash
        set -euo pipefail

        export DEBIAN_FRONTEND=noninteractive
        apt-get update
        apt-get install -y nginx-light jq

        NAME=$(curl -H "Metadata-Flavor: Google" "http://metadata.google.internal/computeMetadata/v1/instance/hostname")
        IP=$(curl -H "Metadata-Flavor: Google" "http://metadata.google.internal/computeMetadata/v1/instance/network-interfaces/0/ip")
        METADATA=$(curl -f -H "Metadata-Flavor: Google" "http://metadata.google.internal/computeMetadata/v1/instance/attributes/?recursive=True" | jq 'del(.["startup-script"])')

        cat <<EOF > /var/www/html/index.html
        <pre>
        Name: $NAME
        IP: $IP
        Metadata: $METADATA
        </pre>
        EOF
    networkInterface:
    - accessConfig:
      - {}
      networkSelector:
        matchLabels:
          testing.upbound.io/example-name: forwarding-rule
      subnetworkSelector:
        matchLabels:
          testing.upbound.io/example-name: forwarding-rule-ilb
    tags:
    - http-server
    region: us-central1

---

apiVersion: compute.gcp.upbound.io/v1beta1
kind: Network
metadata:
  annotations:
    meta.upbound.io/example-id: compute/v1beta1/forwardingrule
  labels:
    testing.upbound.io/example-name: forwarding-rule
  name: forwarding-rule
spec:
  forProvider:
    autoCreateSubnetworks: false

---

apiVersion: compute.gcp.upbound.io/v1beta1
kind: RegionBackendService
metadata:
  annotations:
    meta.upbound.io/example-id: compute/v1beta1/forwardingrule
  labels:
    testing.upbound.io/example-name: forwarding-rule
  name: forwarding-rule
spec:
  forProvider:
    backend:
    - balancingMode: UTILIZATION
      capacityScaler: 1
      groupRef:
        name: forwarding-rule
    healthChecksSelector:
      matchLabels:
        testing.upbound.io/example-name: forwarding-rule
    loadBalancingScheme: INTERNAL_MANAGED
    protocol: HTTP
    region: us-central1

---

apiVersion: compute.gcp.upbound.io/v1beta1
kind: RegionTargetHTTPProxy
metadata:
  annotations:
    meta.upbound.io/example-id: compute/v1beta1/forwardingrule
  labels:
    testing.upbound.io/example-name: forwarding-rule
  name: forwarding-rule
spec:
  forProvider:
    region: us-central1
    urlMapSelector:
      matchLabels:
        testing.upbound.io/example-name: forwarding-rule

---

apiVersion: compute.gcp.upbound.io/v1beta1
kind: RegionURLMap
metadata:
  annotations:
    meta.upbound.io/example-id: compute/v1beta1/forwardingrule
  labels:
    testing.upbound.io/example-name: forwarding-rule
  name: forwarding-rule
spec:
  forProvider:
    defaultServiceSelector:
      matchLabels:
        testing.upbound.io/example-name: forwarding-rule
    region: us-central1

---

apiVersion: compute.gcp.upbound.io/v1beta1
kind: RegionInstanceGroupManager
metadata:
  annotations:
    meta.upbound.io/example-id: compute/v1beta1/forwardingrule
  labels:
    testing.upbound.io/example-name: forwarding-rule
  name: forwarding-rule
spec:
  forProvider:
    autoHealingPolicies:
    - healthCheckSelector:
        matchLabels:
          testing.upbound.io/example-name: forwarding-rule
      initialDelaySec: 300
    baseInstanceName: forwarding-rule
    distributionPolicyZones:
    - us-central1-a
    - us-central1-f
    name: forwarding-rule
    namedPort:
    - name: custom
      port: 8888
    region: us-central1
    targetSize: 2
    version:
    - instanceTemplateSelector:
        matchLabels:
          testing.upbound.io/example-name: forwarding-rule

---

apiVersion: compute.gcp.upbound.io/v1beta1
kind: RegionHealthCheck
metadata:
  annotations:
    meta.upbound.io/example-id: compute/v1beta1/forwardingrule
  labels:
    testing.upbound.io/example-name: forwarding-rule
  name: forwarding-rule
spec:
  forProvider:
    checkIntervalSec: 1
    tcpHealthCheck:
    - port: 80
    timeoutSec: 1
    region: us-central1

---

apiVersion: compute.gcp.upbound.io/v1beta1
kind: HealthCheck
metadata:
  annotations:
    meta.upbound.io/example-id: compute/v1beta1/forwardingrule
  labels:
    testing.upbound.io/example-name: forwarding-rule
  name: forwarding-rule
spec:
  forProvider:
    checkIntervalSec: 1
    tcpHealthCheck:
    - port: 80
    timeoutSec: 1

---

apiVersion: compute.gcp.upbound.io/v1beta1
kind: Subnetwork
metadata:
  annotations:
    meta.upbound.io/example-id: compute/v1beta1/forwardingrule
  labels:
    testing.upbound.io/example-name: forwarding-rule-ilb
  name: forwarding-rule-ilb
spec:
  forProvider:
    ipCidrRange: 10.0.1.0/24
    networkSelector:
      matchLabels:
        testing.upbound.io/example-name: forwarding-rule
    region: us-central1

---

apiVersion: compute.gcp.upbound.io/v1beta1
kind: Subnetwork
metadata:
  annotations:
    meta.upbound.io/example-id: compute/v1beta1/forwardingrule
  labels:
    testing.upbound.io/example-name: forwarding-rule-proxy
  name: forwarding-rule-proxy
spec:
  forProvider:
    ipCidrRange: 10.0.0.0/24
    networkSelector:
      matchLabels:
        testing.upbound.io/example-name: forwarding-rule
    purpose: INTERNAL_HTTPS_LOAD_BALANCER
    region: us-central1
    role: ACTIVE
