# SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
#
# SPDX-License-Identifier: CC0-1.0

apiVersion: gameservices.gcp.upbound.io/v1beta1
kind: GameServerConfig
metadata:
  annotations:
    meta.upbound.io/example-id: gameservices/v1beta1/gameserverconfig
    upjet.upbound.io/manual-intervention: "Error 404: Method not found"
  labels:
    testing.upbound.io/example-name: game-server-config
  name: game-server-config
spec:
  forProvider:
    configId: game-server-config
    deploymentIdSelector:
      matchLabels:
        testing.upbound.io/example-name: game-server-config
    description: a config description
    fleetConfigs:
    - fleetSpec: '${jsonencode({ "replicas" : 1, "scheduling" : "Packed", "template"
        : { "metadata" : { "name" : "tf-test-game-server-template" }, "spec" : { "ports":
        [{"name": "default", "portPolicy": "Dynamic", "containerPort": 7654, "protocol":
        "UDP"}], "template" : { "spec" : { "containers" : [{ "name" : "simple-udp-server",
        "image" : "gcr.io/agones-images/udp-server:0.14" }] } } } } })}'
      name: something-unique
    scalingConfigs:
    - fleetAutoscalerSpec: '${jsonencode({"policy": {"type": "Webhook","webhook":
        {"service": {"name": "autoscaler-webhook-service","namespace": "default","path":
        "scale"}}}})}'
      name: scaling-config-name
      schedules:
      - cronJobDuration: 3.500s
        cronSpec: 0 0 * * 0
      selectors:
      - labels:
          one: two

---

apiVersion: gameservices.gcp.upbound.io/v1beta1
kind: GameServerDeployment
metadata:
  annotations:
    meta.upbound.io/example-id: gameservices/v1beta1/gameserverconfig
    upjet.upbound.io/manual-intervention: "Error 404: Method not found"
  labels:
    testing.upbound.io/example-name: game-server-config
  name: game-server-config
spec:
  forProvider:
    description: a deployment description
