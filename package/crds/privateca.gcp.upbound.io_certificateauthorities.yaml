---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.11.1
  creationTimestamp: null
  name: certificateauthorities.privateca.gcp.upbound.io
spec:
  group: privateca.gcp.upbound.io
  names:
    categories:
    - crossplane
    - managed
    - gcp
    kind: CertificateAuthority
    listKind: CertificateAuthorityList
    plural: certificateauthorities
    singular: certificateauthority
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: CertificateAuthority is the Schema for the CertificateAuthoritys
          API. A CertificateAuthority represents an individual Certificate Authority.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: CertificateAuthoritySpec defines the desired state of CertificateAuthority
            properties:
              deletionPolicy:
                default: Delete
                description: DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource.
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  config:
                    description: The config used to create a self-signed X.509 certificate
                      or CSR. Structure is documented below.
                    items:
                      properties:
                        subjectConfig:
                          description: Specifies some of the values in a certificate
                            that are related to the subject. Structure is documented
                            below.
                          items:
                            properties:
                              subject:
                                description: Contains distinguished name fields such
                                  as the location and organization. Structure is documented
                                  below.
                                items:
                                  properties:
                                    commonName:
                                      description: The common name of the distinguished
                                        name.
                                      type: string
                                    countryCode:
                                      description: The country code of the subject.
                                      type: string
                                    locality:
                                      description: The locality or city of the subject.
                                      type: string
                                    organization:
                                      description: The organization of the subject.
                                      type: string
                                    organizationalUnit:
                                      description: The organizational unit of the
                                        subject.
                                      type: string
                                    postalCode:
                                      description: The postal code of the subject.
                                      type: string
                                    province:
                                      description: The province, territory, or regional
                                        state of the subject.
                                      type: string
                                    streetAddress:
                                      description: The street address of the subject.
                                      type: string
                                  required:
                                  - commonName
                                  - organization
                                  type: object
                                type: array
                              subjectAltName:
                                description: The subject alternative name fields.
                                  Structure is documented below.
                                items:
                                  properties:
                                    dnsNames:
                                      description: Contains only valid, fully-qualified
                                        host names.
                                      items:
                                        type: string
                                      type: array
                                    emailAddresses:
                                      description: Contains only valid RFC 2822 E-mail
                                        addresses.
                                      items:
                                        type: string
                                      type: array
                                    ipAddresses:
                                      description: Contains only valid 32-bit IPv4
                                        addresses or RFC 4291 IPv6 addresses.
                                      items:
                                        type: string
                                      type: array
                                    uris:
                                      description: Contains only valid RFC 3986 URIs.
                                      items:
                                        type: string
                                      type: array
                                  type: object
                                type: array
                            required:
                            - subject
                            type: object
                          type: array
                        x509Config:
                          description: Describes how some of the technical X.509 fields
                            in a certificate should be populated. Structure is documented
                            below.
                          items:
                            properties:
                              additionalExtensions:
                                description: Specifies an X.509 extension, which may
                                  be used in different parts of X.509 objects like
                                  certificates, CSRs, and CRLs. Structure is documented
                                  below.
                                items:
                                  properties:
                                    critical:
                                      description: Indicates whether or not this extension
                                        is critical (i.e., if the client does not
                                        know how to handle this extension, the client
                                        should consider this to be an error).
                                      type: boolean
                                    objectId:
                                      description: Describes values that are relevant
                                        in a CA certificate. Structure is documented
                                        below.
                                      items:
                                        properties:
                                          objectIdPath:
                                            description: An ObjectId specifies an
                                              object identifier (OID). These provide
                                              context and describe types in ASN.1
                                              messages.
                                            items:
                                              type: number
                                            type: array
                                        required:
                                        - objectIdPath
                                        type: object
                                      type: array
                                    value:
                                      description: The value of this X.509 extension.
                                        A base64-encoded string.
                                      type: string
                                  required:
                                  - critical
                                  - objectId
                                  - value
                                  type: object
                                type: array
                              aiaOcspServers:
                                description: Describes Online Certificate Status Protocol
                                  (OCSP) endpoint addresses that appear in the "Authority
                                  Information Access" extension in the certificate.
                                items:
                                  type: string
                                type: array
                              caOptions:
                                description: Describes values that are relevant in
                                  a CA certificate. Structure is documented below.
                                items:
                                  properties:
                                    isCa:
                                      description: When true, the "CA" in Basic Constraints
                                        extension will be set to true.
                                      type: boolean
                                    maxIssuerPathLength:
                                      description: Refers to the "path length constraint"
                                        in Basic Constraints extension. For a CA certificate,
                                        this value describes the depth of subordinate
                                        CA certificates that are allowed. If this
                                        value is less than 0, the request will fail.
                                        Setting the value to 0 requires setting zero_max_issuer_path_length
                                        = true.
                                      type: number
                                    nonCa:
                                      description: When true, the "CA" in Basic Constraints
                                        extension will be set to false. If both is_ca
                                        and non_ca are unset, the extension will be
                                        omitted from the CA certificate.
                                      type: boolean
                                    zeroMaxIssuerPathLength:
                                      description: When true, the "path length constraint"
                                        in Basic Constraints extension will be set
                                        to 0. If both max_issuer_path_length and zero_max_issuer_path_length
                                        are unset, the max path length will be omitted
                                        from the CA certificate.
                                      type: boolean
                                  required:
                                  - isCa
                                  type: object
                                type: array
                              keyUsage:
                                description: Indicates the intended use for keys that
                                  correspond to a certificate. Structure is documented
                                  below.
                                items:
                                  properties:
                                    baseKeyUsage:
                                      description: Describes high-level ways in which
                                        a key may be used. Structure is documented
                                        below.
                                      items:
                                        properties:
                                          certSign:
                                            description: The key may be used to sign
                                              certificates.
                                            type: boolean
                                          contentCommitment:
                                            description: The key may be used for cryptographic
                                              commitments. Note that this may also
                                              be referred to as "non-repudiation".
                                            type: boolean
                                          crlSign:
                                            description: The key may be used sign
                                              certificate revocation lists.
                                            type: boolean
                                          dataEncipherment:
                                            description: The key may be used to encipher
                                              data.
                                            type: boolean
                                          decipherOnly:
                                            description: The key may be used to decipher
                                              only.
                                            type: boolean
                                          digitalSignature:
                                            description: The key may be used for digital
                                              signatures.
                                            type: boolean
                                          encipherOnly:
                                            description: The key may be used to encipher
                                              only.
                                            type: boolean
                                          keyAgreement:
                                            description: The key may be used in a
                                              key agreement protocol.
                                            type: boolean
                                          keyEncipherment:
                                            description: The key may be used to encipher
                                              other keys.
                                            type: boolean
                                        type: object
                                      type: array
                                    extendedKeyUsage:
                                      description: Describes high-level ways in which
                                        a key may be used. Structure is documented
                                        below.
                                      items:
                                        properties:
                                          clientAuth:
                                            description: Corresponds to OID 1.3.6.1.5.5.7.3.2.
                                              Officially described as "TLS WWW client
                                              authentication", though regularly used
                                              for non-WWW TLS.
                                            type: boolean
                                          codeSigning:
                                            description: Corresponds to OID 1.3.6.1.5.5.7.3.3.
                                              Officially described as "Signing of
                                              downloadable executable code client
                                              authentication".
                                            type: boolean
                                          emailProtection:
                                            description: Corresponds to OID 1.3.6.1.5.5.7.3.4.
                                              Officially described as "Email protection".
                                            type: boolean
                                          ocspSigning:
                                            description: Corresponds to OID 1.3.6.1.5.5.7.3.9.
                                              Officially described as "Signing OCSP
                                              responses".
                                            type: boolean
                                          serverAuth:
                                            description: Corresponds to OID 1.3.6.1.5.5.7.3.1.
                                              Officially described as "TLS WWW server
                                              authentication", though regularly used
                                              for non-WWW TLS.
                                            type: boolean
                                          timeStamping:
                                            description: Corresponds to OID 1.3.6.1.5.5.7.3.8.
                                              Officially described as "Binding the
                                              hash of an object to a time".
                                            type: boolean
                                        type: object
                                      type: array
                                    unknownExtendedKeyUsages:
                                      description: An ObjectId specifies an object
                                        identifier (OID). These provide context and
                                        describe types in ASN.1 messages. Structure
                                        is documented below.
                                      items:
                                        properties:
                                          objectIdPath:
                                            description: An ObjectId specifies an
                                              object identifier (OID). These provide
                                              context and describe types in ASN.1
                                              messages.
                                            items:
                                              type: number
                                            type: array
                                        required:
                                        - objectIdPath
                                        type: object
                                      type: array
                                  required:
                                  - baseKeyUsage
                                  - extendedKeyUsage
                                  type: object
                                type: array
                              policyIds:
                                description: Describes the X.509 certificate policy
                                  object identifiers, per https://tools.ietf.org/html/rfc5280#section-4.2.1.4.
                                  Structure is documented below.
                                items:
                                  properties:
                                    objectIdPath:
                                      description: An ObjectId specifies an object
                                        identifier (OID). These provide context and
                                        describe types in ASN.1 messages.
                                      items:
                                        type: number
                                      type: array
                                  required:
                                  - objectIdPath
                                  type: object
                                type: array
                            required:
                            - caOptions
                            - keyUsage
                            type: object
                          type: array
                      required:
                      - subjectConfig
                      - x509Config
                      type: object
                    type: array
                  deletionProtection:
                    type: boolean
                  desiredState:
                    description: Desired state of the CertificateAuthority. Set this
                      field to STAGED to create a STAGED root CA.
                    type: string
                  gcsBucket:
                    description: The name of a Cloud Storage bucket where this CertificateAuthority
                      will publish content, such as the CA certificate and CRLs. This
                      must be a bucket name, without any prefixes (such as gs://)
                      or suffixes (such as .googleapis.com). For example, to use a
                      bucket named my-bucket, you would simply specify my-bucket.
                      If not specified, a managed bucket will be created.
                    type: string
                  ignoreActiveCertificatesOnDeletion:
                    description: This field allows the CA to be deleted even if the
                      CA has active certs. Active certs include both unrevoked and
                      unexpired certs. Use with care. Defaults to false.
                    type: boolean
                  keySpec:
                    description: Used when issuing certificates for this CertificateAuthority.
                      If this CertificateAuthority is a self-signed CertificateAuthority,
                      this key is also used to sign the self-signed CA certificate.
                      Otherwise, it is used to sign a CSR. Structure is documented
                      below.
                    items:
                      properties:
                        algorithm:
                          description: The algorithm to use for creating a managed
                            Cloud KMS key for a for a simplified experience. All managed
                            keys will be have their ProtectionLevel as HSM. Possible
                            values are SIGN_HASH_ALGORITHM_UNSPECIFIED, RSA_PSS_2048_SHA256,
                            RSA_PSS_3072_SHA256, RSA_PSS_4096_SHA256, RSA_PKCS1_2048_SHA256,
                            RSA_PKCS1_3072_SHA256, RSA_PKCS1_4096_SHA256, EC_P256_SHA256,
                            and EC_P384_SHA384.
                          type: string
                        cloudKmsKeyVersion:
                          description: The resource name for an existing Cloud KMS
                            CryptoKeyVersion in the format projects/*/locations/*/keyRings/*/cryptoKeys/*/cryptoKeyVersions/*.
                          type: string
                      type: object
                    type: array
                  labels:
                    additionalProperties:
                      type: string
                    description: 'Labels with user-defined metadata. An object containing
                      a list of "key": value pairs. Example: { "name": "wrench", "mass":
                      "1.3kg", "count": "3" }.'
                    type: object
                  lifetime:
                    description: 'The desired lifetime of the CA certificate. Used
                      to create the "notBeforeTime" and "notAfterTime" fields inside
                      an X.509 certificate. A duration in seconds with up to nine
                      fractional digits, terminated by ''s''. Example: "3.5s".'
                    type: string
                  location:
                    description: Location of the CertificateAuthority. A full list
                      of valid locations can be found by running gcloud privateca
                      locations list.
                    type: string
                  pemCaCertificate:
                    description: The signed CA certificate issued from the subordinated
                      CA's CSR. This is needed when activating the subordiante CA
                      with a third party issuer.
                    type: string
                  pool:
                    description: The name of the CaPool this Certificate Authority
                      belongs to.
                    type: string
                  poolRef:
                    description: Reference to a CAPool to populate pool.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  poolSelector:
                    description: Selector for a CAPool to populate pool.
                    properties:
                      matchControllerRef:
                        description: MatchControllerRef ensures an object with the
                          same controller reference as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  project:
                    description: The ID of the project in which the resource belongs.
                      If it is not provided, the provider project is used.
                    type: string
                  skipGracePeriod:
                    description: If this flag is set, the Certificate Authority will
                      be deleted as soon as possible without a 30-day grace period
                      where undeletion would have been allowed. If you proceed, there
                      will be no way to recover this CA. Use with care. Defaults to
                      false.
                    type: boolean
                  subordinateConfig:
                    description: If this is a subordinate CertificateAuthority, this
                      field will be set with the subordinate configuration, which
                      describes its issuers. Structure is documented below.
                    items:
                      properties:
                        certificateAuthority:
                          description: This can refer to a CertificateAuthority that
                            was used to create a subordinate CertificateAuthority.
                            This field is used for information and usability purposes
                            only. The resource name is in the format projects/*/locations/*/caPools/*/certificateAuthorities/*.
                          type: string
                        certificateAuthorityRef:
                          description: Reference to a CertificateAuthority in privateca
                            to populate certificateAuthority.
                          properties:
                            name:
                              description: Name of the referenced object.
                              type: string
                            policy:
                              description: Policies for referencing.
                              properties:
                                resolution:
                                  default: Required
                                  description: Resolution specifies whether resolution
                                    of this reference is required. The default is
                                    'Required', which means the reconcile will fail
                                    if the reference cannot be resolved. 'Optional'
                                    means this reference will be a no-op if it cannot
                                    be resolved.
                                  enum:
                                  - Required
                                  - Optional
                                  type: string
                                resolve:
                                  description: Resolve specifies when this reference
                                    should be resolved. The default is 'IfNotPresent',
                                    which will attempt to resolve the reference only
                                    when the corresponding field is not present. Use
                                    'Always' to resolve the reference on every reconcile.
                                  enum:
                                  - Always
                                  - IfNotPresent
                                  type: string
                              type: object
                          required:
                          - name
                          type: object
                        certificateAuthoritySelector:
                          description: Selector for a CertificateAuthority in privateca
                            to populate certificateAuthority.
                          properties:
                            matchControllerRef:
                              description: MatchControllerRef ensures an object with
                                the same controller reference as the selecting object
                                is selected.
                              type: boolean
                            matchLabels:
                              additionalProperties:
                                type: string
                              description: MatchLabels ensures an object with matching
                                labels is selected.
                              type: object
                            policy:
                              description: Policies for selection.
                              properties:
                                resolution:
                                  default: Required
                                  description: Resolution specifies whether resolution
                                    of this reference is required. The default is
                                    'Required', which means the reconcile will fail
                                    if the reference cannot be resolved. 'Optional'
                                    means this reference will be a no-op if it cannot
                                    be resolved.
                                  enum:
                                  - Required
                                  - Optional
                                  type: string
                                resolve:
                                  description: Resolve specifies when this reference
                                    should be resolved. The default is 'IfNotPresent',
                                    which will attempt to resolve the reference only
                                    when the corresponding field is not present. Use
                                    'Always' to resolve the reference on every reconcile.
                                  enum:
                                  - Always
                                  - IfNotPresent
                                  type: string
                              type: object
                          type: object
                        pemIssuerChain:
                          description: Contains the PEM certificate chain for the
                            issuers of this CertificateAuthority, but not pem certificate
                            for this CA itself. Structure is documented below.
                          items:
                            properties:
                              pemCertificates:
                                description: Expected to be in leaf-to-root order
                                  according to RFC 5246.
                                items:
                                  type: string
                                type: array
                            type: object
                          type: array
                      type: object
                    type: array
                  type:
                    description: 'The Type of this CertificateAuthority. ~> Note:
                      For SUBORDINATE Certificate Authorities, they need to be activated
                      before they can issue certificates. Default value is SELF_SIGNED.
                      Possible values are SELF_SIGNED and SUBORDINATE.'
                    type: string
                required:
                - config
                - keySpec
                - location
                type: object
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: CertificateAuthorityStatus defines the observed state of
              CertificateAuthority.
            properties:
              atProvider:
                properties:
                  accessUrls:
                    description: URLs for accessing content published by this CA,
                      such as the CA certificate and CRLs. Structure is documented
                      below.
                    items:
                      properties:
                        caCertificateAccessUrl:
                          description: The URL where this CertificateAuthority's CA
                            certificate is published. This will only be set for CAs
                            that have been activated.
                          type: string
                        crlAccessUrls:
                          description: The URL where this CertificateAuthority's CRLs
                            are published. This will only be set for CAs that have
                            been activated.
                          items:
                            type: string
                          type: array
                      type: object
                    type: array
                  createTime:
                    description: 'The time at which this CertificateAuthority was
                      created. A timestamp in RFC3339 UTC "Zulu" format, with nanosecond
                      resolution and up to nine fractional digits. Examples: "2014-10-02T15:01:23Z"
                      and "2014-10-02T15:01:23.045123456Z".'
                    type: string
                  id:
                    description: an identifier for the resource with format projects/{{project}}/locations/{{location}}/caPools/{{pool}}/certificateAuthorities/{{certificate_authority_id}}
                    type: string
                  name:
                    description: The resource name for this CertificateAuthority in
                      the format projects//locations//certificateAuthorities/*.
                    type: string
                  pemCaCertificates:
                    description: This CertificateAuthority's certificate chain, including
                      the current CertificateAuthority's certificate. Ordered such
                      that the root issuer is the final element (consistent with RFC
                      5246). For a self-signed CA, this will only list the current
                      CertificateAuthority's certificate.
                    items:
                      type: string
                    type: array
                  state:
                    description: The State for this CertificateAuthority.
                    type: string
                  updateTime:
                    description: 'The time at which this CertificateAuthority was
                      updated. A timestamp in RFC3339 UTC "Zulu" format, with nanosecond
                      resolution and up to nine fractional digits. Examples: "2014-10-02T15:01:23Z"
                      and "2014-10-02T15:01:23.045123456Z".'
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
