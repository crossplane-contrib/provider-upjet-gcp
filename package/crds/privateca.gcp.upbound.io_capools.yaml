---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.11.1
  creationTimestamp: null
  name: capools.privateca.gcp.upbound.io
spec:
  group: privateca.gcp.upbound.io
  names:
    categories:
    - crossplane
    - managed
    - gcp
    kind: CAPool
    listKind: CAPoolList
    plural: capools
    singular: capool
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: CAPool is the Schema for the CAPools API. A CaPool represents
          a group of CertificateAuthorities that form a trust anchor.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: CAPoolSpec defines the desired state of CAPool
            properties:
              deletionPolicy:
                default: Delete
                description: DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource.
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  issuancePolicy:
                    description: The IssuancePolicy to control how Certificates will
                      be issued from this CaPool. Structure is documented below.
                    items:
                      properties:
                        allowedIssuanceModes:
                          description: IssuanceModes specifies the allowed ways in
                            which Certificates may be requested from this CaPool.
                            Structure is documented below.
                          items:
                            properties:
                              allowConfigBasedIssuance:
                                description: When true, allows callers to create Certificates
                                  by specifying a CertificateConfig.
                                type: boolean
                              allowCsrBasedIssuance:
                                description: When true, allows callers to create Certificates
                                  by specifying a CSR.
                                type: boolean
                            required:
                            - allowConfigBasedIssuance
                            - allowCsrBasedIssuance
                            type: object
                          type: array
                        allowedKeyTypes:
                          description: If any AllowedKeyType is specified, then the
                            certificate request's public key must match one of the
                            key types listed here. Otherwise, any key may be used.
                            Structure is documented below.
                          items:
                            properties:
                              ellipticCurve:
                                description: Represents an allowed Elliptic Curve
                                  key type. Structure is documented below.
                                items:
                                  properties:
                                    signatureAlgorithm:
                                      description: The algorithm used. Possible values
                                        are ECDSA_P256, ECDSA_P384, and EDDSA_25519.
                                      type: string
                                  required:
                                  - signatureAlgorithm
                                  type: object
                                type: array
                              rsa:
                                description: Describes an RSA key that may be used
                                  in a Certificate issued from a CaPool. Structure
                                  is documented below.
                                items:
                                  properties:
                                    maxModulusSize:
                                      description: The maximum allowed RSA modulus
                                        size, in bits. If this is not set, or if set
                                        to zero, the service will not enforce an explicit
                                        upper bound on RSA modulus sizes.
                                      type: string
                                    minModulusSize:
                                      description: The minimum allowed RSA modulus
                                        size, in bits. If this is not set, or if set
                                        to zero, the service-level min RSA modulus
                                        size will continue to apply.
                                      type: string
                                  type: object
                                type: array
                            type: object
                          type: array
                        baselineValues:
                          description: A set of X.509 values that will be applied
                            to all certificates issued through this CaPool. If a certificate
                            request includes conflicting values for the same properties,
                            they will be overwritten by the values defined here. If
                            a certificate request uses a CertificateTemplate that
                            defines conflicting predefinedValues for the same properties,
                            the certificate issuance request will fail. Structure
                            is documented below.
                          items:
                            properties:
                              additionalExtensions:
                                description: Specifies an X.509 extension, which may
                                  be used in different parts of X.509 objects like
                                  certificates, CSRs, and CRLs. Structure is documented
                                  below.
                                items:
                                  properties:
                                    critical:
                                      description: Indicates whether or not this extension
                                        is critical (i.e., if the client does not
                                        know how to handle this extension, the client
                                        should consider this to be an error).
                                      type: boolean
                                    objectId:
                                      description: Describes values that are relevant
                                        in a CA certificate. Structure is documented
                                        below.
                                      items:
                                        properties:
                                          objectIdPath:
                                            description: An ObjectId specifies an
                                              object identifier (OID). These provide
                                              context and describe types in ASN.1
                                              messages.
                                            items:
                                              type: number
                                            type: array
                                        required:
                                        - objectIdPath
                                        type: object
                                      type: array
                                    value:
                                      description: The value of this X.509 extension.
                                        A base64-encoded string.
                                      type: string
                                  required:
                                  - critical
                                  - objectId
                                  - value
                                  type: object
                                type: array
                              aiaOcspServers:
                                description: Describes Online Certificate Status Protocol
                                  (OCSP) endpoint addresses that appear in the "Authority
                                  Information Access" extension in the certificate.
                                items:
                                  type: string
                                type: array
                              caOptions:
                                description: Describes values that are relevant in
                                  a CA certificate. Structure is documented below.
                                items:
                                  properties:
                                    isCa:
                                      description: When true, the "CA" in Basic Constraints
                                        extension will be set to true.
                                      type: boolean
                                    maxIssuerPathLength:
                                      description: Refers to the "path length constraint"
                                        in Basic Constraints extension. For a CA certificate,
                                        this value describes the depth of subordinate
                                        CA certificates that are allowed. If this
                                        value is less than 0, the request will fail.
                                      type: number
                                    nonCa:
                                      description: When true, the "CA" in Basic Constraints
                                        extension will be set to false. If both is_ca
                                        and non_ca are unset, the extension will be
                                        omitted from the CA certificate.
                                      type: boolean
                                    zeroMaxIssuerPathLength:
                                      description: When true, the "path length constraint"
                                        in Basic Constraints extension will be set
                                        to 0. if both max_issuer_path_length and zero_max_issuer_path_length
                                        are unset, the max path length will be omitted
                                        from the CA certificate.
                                      type: boolean
                                  type: object
                                type: array
                              keyUsage:
                                description: Indicates the intended use for keys that
                                  correspond to a certificate. Structure is documented
                                  below.
                                items:
                                  properties:
                                    baseKeyUsage:
                                      description: Describes high-level ways in which
                                        a key may be used. Structure is documented
                                        below.
                                      items:
                                        properties:
                                          certSign:
                                            description: The key may be used to sign
                                              certificates.
                                            type: boolean
                                          contentCommitment:
                                            description: The key may be used for cryptographic
                                              commitments. Note that this may also
                                              be referred to as "non-repudiation".
                                            type: boolean
                                          crlSign:
                                            description: The key may be used sign
                                              certificate revocation lists.
                                            type: boolean
                                          dataEncipherment:
                                            description: The key may be used to encipher
                                              data.
                                            type: boolean
                                          decipherOnly:
                                            description: The key may be used to decipher
                                              only.
                                            type: boolean
                                          digitalSignature:
                                            description: The key may be used for digital
                                              signatures.
                                            type: boolean
                                          encipherOnly:
                                            description: The key may be used to encipher
                                              only.
                                            type: boolean
                                          keyAgreement:
                                            description: The key may be used in a
                                              key agreement protocol.
                                            type: boolean
                                          keyEncipherment:
                                            description: The key may be used to encipher
                                              other keys.
                                            type: boolean
                                        type: object
                                      type: array
                                    extendedKeyUsage:
                                      description: Describes high-level ways in which
                                        a key may be used. Structure is documented
                                        below.
                                      items:
                                        properties:
                                          clientAuth:
                                            description: Corresponds to OID 1.3.6.1.5.5.7.3.2.
                                              Officially described as "TLS WWW client
                                              authentication", though regularly used
                                              for non-WWW TLS.
                                            type: boolean
                                          codeSigning:
                                            description: Corresponds to OID 1.3.6.1.5.5.7.3.3.
                                              Officially described as "Signing of
                                              downloadable executable code client
                                              authentication".
                                            type: boolean
                                          emailProtection:
                                            description: Corresponds to OID 1.3.6.1.5.5.7.3.4.
                                              Officially described as "Email protection".
                                            type: boolean
                                          ocspSigning:
                                            description: Corresponds to OID 1.3.6.1.5.5.7.3.9.
                                              Officially described as "Signing OCSP
                                              responses".
                                            type: boolean
                                          serverAuth:
                                            description: Corresponds to OID 1.3.6.1.5.5.7.3.1.
                                              Officially described as "TLS WWW server
                                              authentication", though regularly used
                                              for non-WWW TLS.
                                            type: boolean
                                          timeStamping:
                                            description: Corresponds to OID 1.3.6.1.5.5.7.3.8.
                                              Officially described as "Binding the
                                              hash of an object to a time".
                                            type: boolean
                                        type: object
                                      type: array
                                    unknownExtendedKeyUsages:
                                      description: An ObjectId specifies an object
                                        identifier (OID). These provide context and
                                        describe types in ASN.1 messages. Structure
                                        is documented below.
                                      items:
                                        properties:
                                          objectIdPath:
                                            description: An ObjectId specifies an
                                              object identifier (OID). These provide
                                              context and describe types in ASN.1
                                              messages.
                                            items:
                                              type: number
                                            type: array
                                        required:
                                        - objectIdPath
                                        type: object
                                      type: array
                                  required:
                                  - baseKeyUsage
                                  - extendedKeyUsage
                                  type: object
                                type: array
                              policyIds:
                                description: Describes the X.509 certificate policy
                                  object identifiers, per https://tools.ietf.org/html/rfc5280#section-4.2.1.4.
                                  Structure is documented below.
                                items:
                                  properties:
                                    objectIdPath:
                                      description: An ObjectId specifies an object
                                        identifier (OID). These provide context and
                                        describe types in ASN.1 messages.
                                      items:
                                        type: number
                                      type: array
                                  required:
                                  - objectIdPath
                                  type: object
                                type: array
                            required:
                            - caOptions
                            - keyUsage
                            type: object
                          type: array
                        identityConstraints:
                          description: Describes constraints on identities that may
                            appear in Certificates issued through this CaPool. If
                            this is omitted, then this CaPool will not add restrictions
                            on a certificate's identity. Structure is documented below.
                          items:
                            properties:
                              allowSubjectAltNamesPassthrough:
                                description: If this is set, the SubjectAltNames extension
                                  may be copied from a certificate request into the
                                  signed certificate. Otherwise, the requested SubjectAltNames
                                  will be discarded.
                                type: boolean
                              allowSubjectPassthrough:
                                description: If this is set, the Subject field may
                                  be copied from a certificate request into the signed
                                  certificate. Otherwise, the requested Subject will
                                  be discarded.
                                type: boolean
                              celExpression:
                                description: A CEL expression that may be used to
                                  validate the resolved X.509 Subject and/or Subject
                                  Alternative Name before a certificate is signed.
                                  To see the full allowed syntax and some examples,
                                  see https://cloud.google.com/certificate-authority-service/docs/cel-guide
                                  Structure is documented below.
                                items:
                                  properties:
                                    description:
                                      description: Description of the expression.
                                        This is a longer text which describes the
                                        expression, e.g. when hovered over it in a
                                        UI.
                                      type: string
                                    expression:
                                      description: Textual representation of an expression
                                        in Common Expression Language syntax.
                                      type: string
                                    location:
                                      description: Location of the CaPool. A full
                                        list of valid locations can be found by running
                                        gcloud privateca locations list.
                                      type: string
                                    title:
                                      description: Title for the expression, i.e.
                                        a short string describing its purpose. This
                                        can be used e.g. in UIs which allow to enter
                                        the expression.
                                      type: string
                                  required:
                                  - expression
                                  type: object
                                type: array
                            required:
                            - allowSubjectAltNamesPassthrough
                            - allowSubjectPassthrough
                            type: object
                          type: array
                        maximumLifetime:
                          description: The maximum lifetime allowed for issued Certificates.
                            Note that if the issuing CertificateAuthority expires
                            before a Certificate's requested maximumLifetime, the
                            effective lifetime will be explicitly truncated to match
                            it.
                          type: string
                      type: object
                    type: array
                  labels:
                    additionalProperties:
                      type: string
                    description: 'Labels with user-defined metadata. An object containing
                      a list of "key": value pairs. Example: { "name": "wrench", "mass":
                      "1.3kg", "count": "3" }.'
                    type: object
                  location:
                    description: Location of the CaPool. A full list of valid locations
                      can be found by running gcloud privateca locations list.
                    type: string
                  project:
                    description: The ID of the project in which the resource belongs.
                      If it is not provided, the provider project is used.
                    type: string
                  publishingOptions:
                    description: The PublishingOptions to follow when issuing Certificates
                      from any CertificateAuthority in this CaPool. Structure is documented
                      below.
                    items:
                      properties:
                        publishCaCert:
                          description: When true, publishes each CertificateAuthority's
                            CA certificate and includes its URL in the "Authority
                            Information Access" X.509 extension in all issued Certificates.
                            If this is false, the CA certificate will not be published
                            and the corresponding X.509 extension will not be written
                            in issued certificates.
                          type: boolean
                        publishCrl:
                          description: When true, publishes each CertificateAuthority's
                            CRL and includes its URL in the "CRL Distribution Points"
                            X.509 extension in all issued Certificates. If this is
                            false, CRLs will not be published and the corresponding
                            X.509 extension will not be written in issued certificates.
                            CRLs will expire 7 days from their creation. However,
                            we will rebuild daily. CRLs are also rebuilt shortly after
                            a certificate is revoked.
                          type: boolean
                      required:
                      - publishCaCert
                      - publishCrl
                      type: object
                    type: array
                  tier:
                    description: The Tier of this CaPool. Possible values are ENTERPRISE
                      and DEVOPS.
                    type: string
                required:
                - location
                - tier
                type: object
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: CAPoolStatus defines the observed state of CAPool.
            properties:
              atProvider:
                properties:
                  id:
                    description: an identifier for the resource with format projects/{{project}}/locations/{{location}}/caPools/{{name}}
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
