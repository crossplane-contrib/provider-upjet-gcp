---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.11.1
  creationTimestamp: null
  name: devices.cloudiot.gcp.upbound.io
spec:
  group: cloudiot.gcp.upbound.io
  names:
    categories:
    - crossplane
    - managed
    - gcp
    kind: Device
    listKind: DeviceList
    plural: devices
    singular: device
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: Device is the Schema for the Devices API. A Google Cloud IoT
          Core device.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: DeviceSpec defines the desired state of Device
            properties:
              deletionPolicy:
                default: Delete
                description: DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource.
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  blocked:
                    description: If a device is blocked, connections or requests from
                      this device will fail.
                    type: boolean
                  credentials:
                    description: The credentials used to authenticate this device.
                      Structure is documented below.
                    items:
                      properties:
                        expirationTime:
                          description: The time at which this credential becomes invalid.
                          type: string
                        publicKey:
                          description: A public key used to verify the signature of
                            JSON Web Tokens (JWTs). Structure is documented below.
                          items:
                            properties:
                              format:
                                description: The format of the key. Possible values
                                  are RSA_PEM, RSA_X509_PEM, ES256_PEM, and ES256_X509_PEM.
                                type: string
                              key:
                                description: The key data.
                                type: string
                            required:
                            - format
                            - key
                            type: object
                          type: array
                      required:
                      - publicKey
                      type: object
                    type: array
                  gatewayConfig:
                    description: Gateway-related configuration and state. Structure
                      is documented below.
                    items:
                      properties:
                        gatewayAuthMethod:
                          description: Indicates whether the device is a gateway.
                            Possible values are ASSOCIATION_ONLY, DEVICE_AUTH_TOKEN_ONLY,
                            and ASSOCIATION_AND_DEVICE_AUTH_TOKEN.
                          type: string
                        gatewayType:
                          description: Indicates whether the device is a gateway.
                            Default value is NON_GATEWAY. Possible values are GATEWAY
                            and NON_GATEWAY.
                          type: string
                      type: object
                    type: array
                  logLevel:
                    description: The logging verbosity for device activity. Possible
                      values are NONE, ERROR, INFO, and DEBUG.
                    type: string
                  metadata:
                    additionalProperties:
                      type: string
                    description: The metadata key-value pairs assigned to the device.
                    type: object
                  registry:
                    description: The name of the device registry where this device
                      should be created.
                    type: string
                  registryRef:
                    description: Reference to a Registry in cloudiot to populate registry.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  registrySelector:
                    description: Selector for a Registry in cloudiot to populate registry.
                    properties:
                      matchControllerRef:
                        description: MatchControllerRef ensures an object with the
                          same controller reference as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                type: object
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: DeviceStatus defines the observed state of Device.
            properties:
              atProvider:
                properties:
                  config:
                    description: The most recent device configuration, which is eventually
                      sent from Cloud IoT Core to the device. Structure is documented
                      below.
                    items:
                      properties:
                        binaryData:
                          description: The device configuration data.
                          type: string
                        cloudUpdateTime:
                          description: The time at which this configuration version
                            was updated in Cloud IoT Core.
                          type: string
                        deviceAckTime:
                          description: The time at which Cloud IoT Core received the
                            acknowledgment from the device, indicating that the device
                            has received this configuration version.
                          type: string
                        version:
                          description: The version of this update.
                          type: string
                      type: object
                    type: array
                  gatewayConfig:
                    description: Gateway-related configuration and state. Structure
                      is documented below.
                    items:
                      properties:
                        lastAccessedGatewayId:
                          description: The ID of the gateway the device accessed most
                            recently.
                          type: string
                        lastAccessedGatewayTime:
                          description: The most recent time at which the device accessed
                            the gateway specified in last_accessed_gateway.
                          type: string
                      type: object
                    type: array
                  id:
                    description: an identifier for the resource with format {{registry}}/devices/{{name}}
                    type: string
                  lastConfigAckTime:
                    description: The last time a cloud-to-device config version acknowledgment
                      was received from the device.
                    type: string
                  lastConfigSendTime:
                    description: The last time a cloud-to-device config version was
                      sent to the device.
                    type: string
                  lastErrorStatus:
                    description: The error message of the most recent error, such
                      as a failure to publish to Cloud Pub/Sub. Structure is documented
                      below.
                    items:
                      properties:
                        details:
                          description: A list of messages that carry the error details.
                          items:
                            type: string
                          type: array
                        message:
                          description: A developer-facing error message, which should
                            be in English.
                          type: string
                        number:
                          description: The status code, which should be an enum value
                            of google.rpc.Code.
                          type: number
                      type: object
                    type: array
                  lastErrorTime:
                    description: The time the most recent error occurred, such as
                      a failure to publish to Cloud Pub/Sub.
                    type: string
                  lastEventTime:
                    description: The last time a telemetry event was received.
                    type: string
                  lastHeartbeatTime:
                    description: The last time an MQTT PINGREQ was received.
                    type: string
                  lastStateTime:
                    description: The last time a state event was received.
                    type: string
                  numId:
                    description: A server-defined unique numeric ID for the device.
                      This is a more compact way to identify devices, and it is globally
                      unique.
                    type: string
                  state:
                    description: The state most recently received from the device.
                      Structure is documented below.
                    items:
                      properties:
                        binaryData:
                          description: The device state data.
                          type: string
                        updateTime:
                          description: The time at which this state version was updated
                            in Cloud IoT Core.
                          type: string
                      type: object
                    type: array
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
