---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.11.1
  creationTimestamp: null
  name: tagtemplates.datacatalog.gcp.upbound.io
spec:
  group: datacatalog.gcp.upbound.io
  names:
    categories:
    - crossplane
    - managed
    - gcp
    kind: TagTemplate
    listKind: TagTemplateList
    plural: tagtemplates
    singular: tagtemplate
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: TagTemplate is the Schema for the TagTemplates API. A tag template
          defines a tag, which can have one or more typed fields.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: TagTemplateSpec defines the desired state of TagTemplate
            properties:
              deletionPolicy:
                default: Delete
                description: DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource.
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  displayName:
                    description: The display name for this field.
                    type: string
                  fields:
                    description: Set of tag template field IDs and the settings for
                      the field. This set is an exhaustive list of the allowed fields.
                      This set must contain at least one field and at most 500 fields.
                      The change of field_id will be resulting in re-creating of field.
                      The change of primitive_type will be resulting in re-creating
                      of field, however if the field is a required, you cannot update
                      it. Structure is documented below.
                    items:
                      properties:
                        description:
                          description: A description for this field.
                          type: string
                        displayName:
                          description: The display name for this field.
                          type: string
                        fieldId:
                          description: The identifier for this object. Format specified
                            above.
                          type: string
                        isRequired:
                          description: Whether this is a required field. Defaults
                            to false.
                          type: boolean
                        order:
                          description: The order of this field with respect to other
                            fields in this tag template. A higher value indicates
                            a more important field. The value can be negative. Multiple
                            fields can have the same order, and field orders within
                            a tag do not have to be sequential.
                          type: number
                        type:
                          description: The type of value this tag field can contain.
                            Structure is documented below.
                          items:
                            properties:
                              enumType:
                                description: Represents an enum type. Exactly one
                                  of primitive_type or enum_type must be set Structure
                                  is documented below.
                                items:
                                  properties:
                                    allowedValues:
                                      description: The set of allowed values for this
                                        enum. The display names of the values must
                                        be case-insensitively unique within this set.
                                        Currently, enum values can only be added to
                                        the list of allowed values. Deletion and renaming
                                        of enum values are not supported. Can have
                                        up to 500 allowed values. Structure is documented
                                        below.
                                      items:
                                        properties:
                                          displayName:
                                            description: The display name for this
                                              field.
                                            type: string
                                        required:
                                        - displayName
                                        type: object
                                      type: array
                                  required:
                                  - allowedValues
                                  type: object
                                type: array
                              primitiveType:
                                description: Represents primitive types - string,
                                  bool etc. Exactly one of primitive_type or enum_type
                                  must be set Possible values are DOUBLE, STRING,
                                  BOOL, and TIMESTAMP.
                                type: string
                            type: object
                          type: array
                      required:
                      - fieldId
                      - type
                      type: object
                    type: array
                  forceDelete:
                    description: This confirms the deletion of any possible tags using
                      this template. Must be set to true in order to delete the tag
                      template.
                    type: boolean
                  project:
                    description: The ID of the project in which the resource belongs.
                      If it is not provided, the provider project is used.
                    type: string
                  region:
                    description: Template location region.
                    type: string
                required:
                - fields
                type: object
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: TagTemplateStatus defines the observed state of TagTemplate.
            properties:
              atProvider:
                properties:
                  fields:
                    description: Set of tag template field IDs and the settings for
                      the field. This set is an exhaustive list of the allowed fields.
                      This set must contain at least one field and at most 500 fields.
                      The change of field_id will be resulting in re-creating of field.
                      The change of primitive_type will be resulting in re-creating
                      of field, however if the field is a required, you cannot update
                      it. Structure is documented below.
                    items:
                      properties:
                        name:
                          description: 'The resource name of the tag template field
                            in URL format. Example: projects/{project_id}/locations/{location}/tagTemplates/{tagTemplateId}/fields/{field}'
                          type: string
                      type: object
                    type: array
                  id:
                    description: an identifier for the resource with format {{name}}
                    type: string
                  name:
                    description: 'The resource name of the tag template in URL format.
                      Example: projects/{project_id}/locations/{location}/tagTemplates/{tagTemplateId}'
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
