---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: routines.bigquery.gcp.upbound.io
spec:
  group: bigquery.gcp.upbound.io
  names:
    categories:
    - crossplane
    - managed
    - gcp
    kind: Routine
    listKind: RoutineList
    plural: routines
    singular: routine
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: Routine is the Schema for the Routines API. A user-defined function
          or a stored procedure that belongs to a Dataset
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: RoutineSpec defines the desired state of Routine
            properties:
              deletionPolicy:
                default: Delete
                description: |-
                  DeletionPolicy specifies what will happen to the underlying external
                  when this managed resource is deleted - either "Delete" or "Orphan" the
                  external resource.
                  This field is planned to be deprecated in favor of the ManagementPolicies
                  field in a future release. Currently, both could be set independently and
                  non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  arguments:
                    description: |-
                      Input/output argument of a function or a stored procedure.
                      Structure is documented below.
                    items:
                      properties:
                        argumentKind:
                          description: |-
                            Defaults to FIXED_TYPE.
                            Default value is FIXED_TYPE.
                            Possible values are: FIXED_TYPE, ANY_TYPE.
                          type: string
                        dataType:
                          description: |-
                            A JSON schema for the data type. Required unless argumentKind = ANY_TYPE.
                            ~>NOTE: Because this field expects a JSON string, any changes to the string
                            will create a diff, even if the JSON itself hasn't changed. If the API returns
                            a different value for the same schema, e.g. it switched the order of values
                            or replaced STRUCT field type with RECORD field type, we currently cannot
                            suppress the recurring diff this causes. As a workaround, we recommend using
                            the schema as returned by the API.
                          type: string
                        mode:
                          description: |-
                            Specifies whether the argument is input or output. Can be set for procedures only.
                            Possible values are: IN, OUT, INOUT.
                          type: string
                        name:
                          description: The name of this argument. Can be absent for
                            function return argument.
                          type: string
                      type: object
                    type: array
                  dataGovernanceType:
                    description: |-
                      If set to DATA_MASKING, the function is validated and made available as a masking function. For more information, see https://cloud.google.com/bigquery/docs/user-defined-functions#custom-mask
                      Possible values are: DATA_MASKING.
                    type: string
                  datasetId:
                    description: The ID of the dataset containing this routine
                    type: string
                  datasetIdRef:
                    description: Reference to a Dataset in bigquery to populate datasetId.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  datasetIdSelector:
                    description: Selector for a Dataset in bigquery to populate datasetId.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  definitionBody:
                    description: |-
                      The body of the routine. For functions, this is the expression in the AS clause.
                      If language=SQL, it is the substring inside (but excluding) the parentheses.
                    type: string
                  description:
                    description: The description of the routine if defined.
                    type: string
                  determinismLevel:
                    description: |-
                      The determinism level of the JavaScript UDF if defined.
                      Possible values are: DETERMINISM_LEVEL_UNSPECIFIED, DETERMINISTIC, NOT_DETERMINISTIC.
                    type: string
                  importedLibraries:
                    description: |-
                      Optional. If language = "JAVASCRIPT", this field stores the path of the
                      imported JAVASCRIPT libraries.
                    items:
                      type: string
                    type: array
                  language:
                    description: |-
                      The language of the routine.
                      Possible values are: SQL, JAVASCRIPT, PYTHON, JAVA, SCALA.
                    type: string
                  project:
                    description: |-
                      The ID of the project in which the resource belongs.
                      If it is not provided, the provider project is used.
                    type: string
                  remoteFunctionOptions:
                    description: |-
                      Remote function specific options.
                      Structure is documented below.
                    items:
                      properties:
                        connection:
                          description: |-
                            Fully qualified name of the user-provided connection object which holds
                            the authentication information to send requests to the remote service.
                            Format: "projects/{projectId}/locations/{locationId}/connections/{connectionId}"
                          type: string
                        connectionRef:
                          description: Reference to a Connection in bigquery to populate
                            connection.
                          properties:
                            name:
                              description: Name of the referenced object.
                              type: string
                            policy:
                              description: Policies for referencing.
                              properties:
                                resolution:
                                  default: Required
                                  description: |-
                                    Resolution specifies whether resolution of this reference is required.
                                    The default is 'Required', which means the reconcile will fail if the
                                    reference cannot be resolved. 'Optional' means this reference will be
                                    a no-op if it cannot be resolved.
                                  enum:
                                  - Required
                                  - Optional
                                  type: string
                                resolve:
                                  description: |-
                                    Resolve specifies when this reference should be resolved. The default
                                    is 'IfNotPresent', which will attempt to resolve the reference only when
                                    the corresponding field is not present. Use 'Always' to resolve the
                                    reference on every reconcile.
                                  enum:
                                  - Always
                                  - IfNotPresent
                                  type: string
                              type: object
                          required:
                          - name
                          type: object
                        connectionSelector:
                          description: Selector for a Connection in bigquery to populate
                            connection.
                          properties:
                            matchControllerRef:
                              description: |-
                                MatchControllerRef ensures an object with the same controller reference
                                as the selecting object is selected.
                              type: boolean
                            matchLabels:
                              additionalProperties:
                                type: string
                              description: MatchLabels ensures an object with matching
                                labels is selected.
                              type: object
                            policy:
                              description: Policies for selection.
                              properties:
                                resolution:
                                  default: Required
                                  description: |-
                                    Resolution specifies whether resolution of this reference is required.
                                    The default is 'Required', which means the reconcile will fail if the
                                    reference cannot be resolved. 'Optional' means this reference will be
                                    a no-op if it cannot be resolved.
                                  enum:
                                  - Required
                                  - Optional
                                  type: string
                                resolve:
                                  description: |-
                                    Resolve specifies when this reference should be resolved. The default
                                    is 'IfNotPresent', which will attempt to resolve the reference only when
                                    the corresponding field is not present. Use 'Always' to resolve the
                                    reference on every reconcile.
                                  enum:
                                  - Always
                                  - IfNotPresent
                                  type: string
                              type: object
                          type: object
                        endpoint:
                          description: |-
                            Endpoint of the user-provided remote service, e.g.
                            https://us-east1-my_gcf_project.cloudfunctions.net/remote_add
                          type: string
                        maxBatchingRows:
                          description: |-
                            Max number of rows in each batch sent to the remote service. If absent or if 0,
                            BigQuery dynamically decides the number of rows in a batch.
                          type: string
                        userDefinedContext:
                          additionalProperties:
                            type: string
                          description: |-
                            User-defined context as a set of key/value pairs, which will be sent as function
                            invocation context together with batched arguments in the requests to the remote
                            service. The total number of bytes of keys and values must be less than 8KB.
                            An object containing a list of "key": value pairs. Example:
                            { "name": "wrench", "mass": "1.3kg", "count": "3" }.
                          type: object
                          x-kubernetes-map-type: granular
                      type: object
                    type: array
                  returnTableType:
                    description: |-
                      Optional. Can be set only if routineType = "TABLE_VALUED_FUNCTION".
                      If absent, the return table type is inferred from definitionBody at query time in each query
                      that references this routine. If present, then the columns in the evaluated table result will
                      be cast to match the column types specificed in return table type, at query time.
                    type: string
                  returnType:
                    description: |-
                      A JSON schema for the return type. Optional if language = "SQL"; required otherwise.
                      If absent, the return type is inferred from definitionBody at query time in each query
                      that references this routine. If present, then the evaluated result will be cast to
                      the specified returned type at query time. ~>NOTE: Because this field expects a JSON
                      string, any changes to the string will create a diff, even if the JSON itself hasn't
                      changed. If the API returns a different value for the same schema, e.g. it switche
                      d the order of values or replaced STRUCT field type with RECORD field type, we currently
                      cannot suppress the recurring diff this causes. As a workaround, we recommend using
                      the schema as returned by the API.
                    type: string
                  routineType:
                    description: |-
                      The type of routine.
                      Possible values are: SCALAR_FUNCTION, PROCEDURE, TABLE_VALUED_FUNCTION.
                    type: string
                  sparkOptions:
                    description: |-
                      Optional. If language is one of "PYTHON", "JAVA", "SCALA", this field stores the options for spark stored procedure.
                      Structure is documented below.
                    items:
                      properties:
                        archiveUris:
                          description: Archive files to be extracted into the working
                            directory of each executor. For more information about
                            Apache Spark, see Apache Spark.
                          items:
                            type: string
                          type: array
                        connection:
                          description: |-
                            Fully qualified name of the user-provided Spark connection object.
                            Format: "projects/{projectId}/locations/{locationId}/connections/{connectionId}"
                          type: string
                        connectionRef:
                          description: Reference to a Connection in bigquery to populate
                            connection.
                          properties:
                            name:
                              description: Name of the referenced object.
                              type: string
                            policy:
                              description: Policies for referencing.
                              properties:
                                resolution:
                                  default: Required
                                  description: |-
                                    Resolution specifies whether resolution of this reference is required.
                                    The default is 'Required', which means the reconcile will fail if the
                                    reference cannot be resolved. 'Optional' means this reference will be
                                    a no-op if it cannot be resolved.
                                  enum:
                                  - Required
                                  - Optional
                                  type: string
                                resolve:
                                  description: |-
                                    Resolve specifies when this reference should be resolved. The default
                                    is 'IfNotPresent', which will attempt to resolve the reference only when
                                    the corresponding field is not present. Use 'Always' to resolve the
                                    reference on every reconcile.
                                  enum:
                                  - Always
                                  - IfNotPresent
                                  type: string
                              type: object
                          required:
                          - name
                          type: object
                        connectionSelector:
                          description: Selector for a Connection in bigquery to populate
                            connection.
                          properties:
                            matchControllerRef:
                              description: |-
                                MatchControllerRef ensures an object with the same controller reference
                                as the selecting object is selected.
                              type: boolean
                            matchLabels:
                              additionalProperties:
                                type: string
                              description: MatchLabels ensures an object with matching
                                labels is selected.
                              type: object
                            policy:
                              description: Policies for selection.
                              properties:
                                resolution:
                                  default: Required
                                  description: |-
                                    Resolution specifies whether resolution of this reference is required.
                                    The default is 'Required', which means the reconcile will fail if the
                                    reference cannot be resolved. 'Optional' means this reference will be
                                    a no-op if it cannot be resolved.
                                  enum:
                                  - Required
                                  - Optional
                                  type: string
                                resolve:
                                  description: |-
                                    Resolve specifies when this reference should be resolved. The default
                                    is 'IfNotPresent', which will attempt to resolve the reference only when
                                    the corresponding field is not present. Use 'Always' to resolve the
                                    reference on every reconcile.
                                  enum:
                                  - Always
                                  - IfNotPresent
                                  type: string
                              type: object
                          type: object
                        containerImage:
                          description: Custom container image for the runtime environment.
                          type: string
                        fileUris:
                          description: Files to be placed in the working directory
                            of each executor. For more information about Apache Spark,
                            see Apache Spark.
                          items:
                            type: string
                          type: array
                        jarUris:
                          description: JARs to include on the driver and executor
                            CLASSPATH. For more information about Apache Spark, see
                            Apache Spark.
                          items:
                            type: string
                          type: array
                        mainClass:
                          description: |-
                            The fully qualified name of a class in jarUris, for example, com.example.wordcount.
                            Exactly one of mainClass and main_jar_uri field should be set for Java/Scala language type.
                          type: string
                        mainFileUri:
                          description: |-
                            The main file/jar URI of the Spark application.
                            Exactly one of the definitionBody field and the mainFileUri field must be set for Python.
                            Exactly one of mainClass and mainFileUri field should be set for Java/Scala language type.
                          type: string
                        properties:
                          additionalProperties:
                            type: string
                          description: |-
                            Configuration properties as a set of key/value pairs, which will be passed on to the Spark application.
                            For more information, see Apache Spark and the procedure option list.
                            An object containing a list of "key": value pairs. Example: { "name": "wrench", "mass": "1.3kg", "count": "3" }.
                          type: object
                          x-kubernetes-map-type: granular
                        pyFileUris:
                          description: 'Python files to be placed on the PYTHONPATH
                            for PySpark application. Supported file types: .py, .egg,
                            and .zip. For more information about Apache Spark, see
                            Apache Spark.'
                          items:
                            type: string
                          type: array
                        runtimeVersion:
                          description: Runtime version. If not specified, the default
                            runtime version is used.
                          type: string
                      type: object
                    type: array
                type: object
              initProvider:
                description: |-
                  THIS IS A BETA FIELD. It will be honored
                  unless the Management Policies feature flag is disabled.
                  InitProvider holds the same fields as ForProvider, with the exception
                  of Identifier and other resource reference fields. The fields that are
                  in InitProvider are merged into ForProvider when the resource is created.
                  The same fields are also added to the terraform ignore_changes hook, to
                  avoid updating them after creation. This is useful for fields that are
                  required on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them, like an
                  autoscaler.
                properties:
                  arguments:
                    description: |-
                      Input/output argument of a function or a stored procedure.
                      Structure is documented below.
                    items:
                      properties:
                        argumentKind:
                          description: |-
                            Defaults to FIXED_TYPE.
                            Default value is FIXED_TYPE.
                            Possible values are: FIXED_TYPE, ANY_TYPE.
                          type: string
                        dataType:
                          description: |-
                            A JSON schema for the data type. Required unless argumentKind = ANY_TYPE.
                            ~>NOTE: Because this field expects a JSON string, any changes to the string
                            will create a diff, even if the JSON itself hasn't changed. If the API returns
                            a different value for the same schema, e.g. it switched the order of values
                            or replaced STRUCT field type with RECORD field type, we currently cannot
                            suppress the recurring diff this causes. As a workaround, we recommend using
                            the schema as returned by the API.
                          type: string
                        mode:
                          description: |-
                            Specifies whether the argument is input or output. Can be set for procedures only.
                            Possible values are: IN, OUT, INOUT.
                          type: string
                        name:
                          description: The name of this argument. Can be absent for
                            function return argument.
                          type: string
                      type: object
                    type: array
                  dataGovernanceType:
                    description: |-
                      If set to DATA_MASKING, the function is validated and made available as a masking function. For more information, see https://cloud.google.com/bigquery/docs/user-defined-functions#custom-mask
                      Possible values are: DATA_MASKING.
                    type: string
                  definitionBody:
                    description: |-
                      The body of the routine. For functions, this is the expression in the AS clause.
                      If language=SQL, it is the substring inside (but excluding) the parentheses.
                    type: string
                  description:
                    description: The description of the routine if defined.
                    type: string
                  determinismLevel:
                    description: |-
                      The determinism level of the JavaScript UDF if defined.
                      Possible values are: DETERMINISM_LEVEL_UNSPECIFIED, DETERMINISTIC, NOT_DETERMINISTIC.
                    type: string
                  importedLibraries:
                    description: |-
                      Optional. If language = "JAVASCRIPT", this field stores the path of the
                      imported JAVASCRIPT libraries.
                    items:
                      type: string
                    type: array
                  language:
                    description: |-
                      The language of the routine.
                      Possible values are: SQL, JAVASCRIPT, PYTHON, JAVA, SCALA.
                    type: string
                  project:
                    description: |-
                      The ID of the project in which the resource belongs.
                      If it is not provided, the provider project is used.
                    type: string
                  remoteFunctionOptions:
                    description: |-
                      Remote function specific options.
                      Structure is documented below.
                    items:
                      properties:
                        connection:
                          description: |-
                            Fully qualified name of the user-provided connection object which holds
                            the authentication information to send requests to the remote service.
                            Format: "projects/{projectId}/locations/{locationId}/connections/{connectionId}"
                          type: string
                        connectionRef:
                          description: Reference to a Connection in bigquery to populate
                            connection.
                          properties:
                            name:
                              description: Name of the referenced object.
                              type: string
                            policy:
                              description: Policies for referencing.
                              properties:
                                resolution:
                                  default: Required
                                  description: |-
                                    Resolution specifies whether resolution of this reference is required.
                                    The default is 'Required', which means the reconcile will fail if the
                                    reference cannot be resolved. 'Optional' means this reference will be
                                    a no-op if it cannot be resolved.
                                  enum:
                                  - Required
                                  - Optional
                                  type: string
                                resolve:
                                  description: |-
                                    Resolve specifies when this reference should be resolved. The default
                                    is 'IfNotPresent', which will attempt to resolve the reference only when
                                    the corresponding field is not present. Use 'Always' to resolve the
                                    reference on every reconcile.
                                  enum:
                                  - Always
                                  - IfNotPresent
                                  type: string
                              type: object
                          required:
                          - name
                          type: object
                        connectionSelector:
                          description: Selector for a Connection in bigquery to populate
                            connection.
                          properties:
                            matchControllerRef:
                              description: |-
                                MatchControllerRef ensures an object with the same controller reference
                                as the selecting object is selected.
                              type: boolean
                            matchLabels:
                              additionalProperties:
                                type: string
                              description: MatchLabels ensures an object with matching
                                labels is selected.
                              type: object
                            policy:
                              description: Policies for selection.
                              properties:
                                resolution:
                                  default: Required
                                  description: |-
                                    Resolution specifies whether resolution of this reference is required.
                                    The default is 'Required', which means the reconcile will fail if the
                                    reference cannot be resolved. 'Optional' means this reference will be
                                    a no-op if it cannot be resolved.
                                  enum:
                                  - Required
                                  - Optional
                                  type: string
                                resolve:
                                  description: |-
                                    Resolve specifies when this reference should be resolved. The default
                                    is 'IfNotPresent', which will attempt to resolve the reference only when
                                    the corresponding field is not present. Use 'Always' to resolve the
                                    reference on every reconcile.
                                  enum:
                                  - Always
                                  - IfNotPresent
                                  type: string
                              type: object
                          type: object
                        endpoint:
                          description: |-
                            Endpoint of the user-provided remote service, e.g.
                            https://us-east1-my_gcf_project.cloudfunctions.net/remote_add
                          type: string
                        maxBatchingRows:
                          description: |-
                            Max number of rows in each batch sent to the remote service. If absent or if 0,
                            BigQuery dynamically decides the number of rows in a batch.
                          type: string
                        userDefinedContext:
                          additionalProperties:
                            type: string
                          description: |-
                            User-defined context as a set of key/value pairs, which will be sent as function
                            invocation context together with batched arguments in the requests to the remote
                            service. The total number of bytes of keys and values must be less than 8KB.
                            An object containing a list of "key": value pairs. Example:
                            { "name": "wrench", "mass": "1.3kg", "count": "3" }.
                          type: object
                          x-kubernetes-map-type: granular
                      type: object
                    type: array
                  returnTableType:
                    description: |-
                      Optional. Can be set only if routineType = "TABLE_VALUED_FUNCTION".
                      If absent, the return table type is inferred from definitionBody at query time in each query
                      that references this routine. If present, then the columns in the evaluated table result will
                      be cast to match the column types specificed in return table type, at query time.
                    type: string
                  returnType:
                    description: |-
                      A JSON schema for the return type. Optional if language = "SQL"; required otherwise.
                      If absent, the return type is inferred from definitionBody at query time in each query
                      that references this routine. If present, then the evaluated result will be cast to
                      the specified returned type at query time. ~>NOTE: Because this field expects a JSON
                      string, any changes to the string will create a diff, even if the JSON itself hasn't
                      changed. If the API returns a different value for the same schema, e.g. it switche
                      d the order of values or replaced STRUCT field type with RECORD field type, we currently
                      cannot suppress the recurring diff this causes. As a workaround, we recommend using
                      the schema as returned by the API.
                    type: string
                  routineType:
                    description: |-
                      The type of routine.
                      Possible values are: SCALAR_FUNCTION, PROCEDURE, TABLE_VALUED_FUNCTION.
                    type: string
                  sparkOptions:
                    description: |-
                      Optional. If language is one of "PYTHON", "JAVA", "SCALA", this field stores the options for spark stored procedure.
                      Structure is documented below.
                    items:
                      properties:
                        archiveUris:
                          description: Archive files to be extracted into the working
                            directory of each executor. For more information about
                            Apache Spark, see Apache Spark.
                          items:
                            type: string
                          type: array
                        connection:
                          description: |-
                            Fully qualified name of the user-provided Spark connection object.
                            Format: "projects/{projectId}/locations/{locationId}/connections/{connectionId}"
                          type: string
                        connectionRef:
                          description: Reference to a Connection in bigquery to populate
                            connection.
                          properties:
                            name:
                              description: Name of the referenced object.
                              type: string
                            policy:
                              description: Policies for referencing.
                              properties:
                                resolution:
                                  default: Required
                                  description: |-
                                    Resolution specifies whether resolution of this reference is required.
                                    The default is 'Required', which means the reconcile will fail if the
                                    reference cannot be resolved. 'Optional' means this reference will be
                                    a no-op if it cannot be resolved.
                                  enum:
                                  - Required
                                  - Optional
                                  type: string
                                resolve:
                                  description: |-
                                    Resolve specifies when this reference should be resolved. The default
                                    is 'IfNotPresent', which will attempt to resolve the reference only when
                                    the corresponding field is not present. Use 'Always' to resolve the
                                    reference on every reconcile.
                                  enum:
                                  - Always
                                  - IfNotPresent
                                  type: string
                              type: object
                          required:
                          - name
                          type: object
                        connectionSelector:
                          description: Selector for a Connection in bigquery to populate
                            connection.
                          properties:
                            matchControllerRef:
                              description: |-
                                MatchControllerRef ensures an object with the same controller reference
                                as the selecting object is selected.
                              type: boolean
                            matchLabels:
                              additionalProperties:
                                type: string
                              description: MatchLabels ensures an object with matching
                                labels is selected.
                              type: object
                            policy:
                              description: Policies for selection.
                              properties:
                                resolution:
                                  default: Required
                                  description: |-
                                    Resolution specifies whether resolution of this reference is required.
                                    The default is 'Required', which means the reconcile will fail if the
                                    reference cannot be resolved. 'Optional' means this reference will be
                                    a no-op if it cannot be resolved.
                                  enum:
                                  - Required
                                  - Optional
                                  type: string
                                resolve:
                                  description: |-
                                    Resolve specifies when this reference should be resolved. The default
                                    is 'IfNotPresent', which will attempt to resolve the reference only when
                                    the corresponding field is not present. Use 'Always' to resolve the
                                    reference on every reconcile.
                                  enum:
                                  - Always
                                  - IfNotPresent
                                  type: string
                              type: object
                          type: object
                        containerImage:
                          description: Custom container image for the runtime environment.
                          type: string
                        fileUris:
                          description: Files to be placed in the working directory
                            of each executor. For more information about Apache Spark,
                            see Apache Spark.
                          items:
                            type: string
                          type: array
                        jarUris:
                          description: JARs to include on the driver and executor
                            CLASSPATH. For more information about Apache Spark, see
                            Apache Spark.
                          items:
                            type: string
                          type: array
                        mainClass:
                          description: |-
                            The fully qualified name of a class in jarUris, for example, com.example.wordcount.
                            Exactly one of mainClass and main_jar_uri field should be set for Java/Scala language type.
                          type: string
                        mainFileUri:
                          description: |-
                            The main file/jar URI of the Spark application.
                            Exactly one of the definitionBody field and the mainFileUri field must be set for Python.
                            Exactly one of mainClass and mainFileUri field should be set for Java/Scala language type.
                          type: string
                        properties:
                          additionalProperties:
                            type: string
                          description: |-
                            Configuration properties as a set of key/value pairs, which will be passed on to the Spark application.
                            For more information, see Apache Spark and the procedure option list.
                            An object containing a list of "key": value pairs. Example: { "name": "wrench", "mass": "1.3kg", "count": "3" }.
                          type: object
                          x-kubernetes-map-type: granular
                        pyFileUris:
                          description: 'Python files to be placed on the PYTHONPATH
                            for PySpark application. Supported file types: .py, .egg,
                            and .zip. For more information about Apache Spark, see
                            Apache Spark.'
                          items:
                            type: string
                          type: array
                        runtimeVersion:
                          description: Runtime version. If not specified, the default
                            runtime version is used.
                          type: string
                      type: object
                    type: array
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  This field is planned to replace the DeletionPolicy field in a future
                  release. Currently, both could be set independently and non-default
                  values would be honored if the feature flag is enabled. If both are
                  custom, the DeletionPolicy field will be ignored.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: |-
                  PublishConnectionDetailsTo specifies the connection secret config which
                  contains a name, metadata and a reference to secret store config to
                  which any connection details for this managed resource should be written.
                  Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: |-
                      SecretStoreConfigRef specifies which secret store config should be used
                      for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations are the annotations to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.annotations".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Labels are the labels/tags to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      type:
                        description: |-
                          Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                  This field is planned to be replaced in a future release in favor of
                  PublishConnectionDetailsTo. Currently, both could be set independently
                  and connection details would be published to both without affecting
                  each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
            x-kubernetes-validations:
            - message: spec.forProvider.definitionBody is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.definitionBody)
                || (has(self.initProvider) && has(self.initProvider.definitionBody))'
            - message: spec.forProvider.routineType is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.routineType)
                || (has(self.initProvider) && has(self.initProvider.routineType))'
          status:
            description: RoutineStatus defines the observed state of Routine.
            properties:
              atProvider:
                properties:
                  arguments:
                    description: |-
                      Input/output argument of a function or a stored procedure.
                      Structure is documented below.
                    items:
                      properties:
                        argumentKind:
                          description: |-
                            Defaults to FIXED_TYPE.
                            Default value is FIXED_TYPE.
                            Possible values are: FIXED_TYPE, ANY_TYPE.
                          type: string
                        dataType:
                          description: |-
                            A JSON schema for the data type. Required unless argumentKind = ANY_TYPE.
                            ~>NOTE: Because this field expects a JSON string, any changes to the string
                            will create a diff, even if the JSON itself hasn't changed. If the API returns
                            a different value for the same schema, e.g. it switched the order of values
                            or replaced STRUCT field type with RECORD field type, we currently cannot
                            suppress the recurring diff this causes. As a workaround, we recommend using
                            the schema as returned by the API.
                          type: string
                        mode:
                          description: |-
                            Specifies whether the argument is input or output. Can be set for procedures only.
                            Possible values are: IN, OUT, INOUT.
                          type: string
                        name:
                          description: The name of this argument. Can be absent for
                            function return argument.
                          type: string
                      type: object
                    type: array
                  creationTime:
                    description: |-
                      The time when this routine was created, in milliseconds since the
                      epoch.
                    type: number
                  dataGovernanceType:
                    description: |-
                      If set to DATA_MASKING, the function is validated and made available as a masking function. For more information, see https://cloud.google.com/bigquery/docs/user-defined-functions#custom-mask
                      Possible values are: DATA_MASKING.
                    type: string
                  datasetId:
                    description: The ID of the dataset containing this routine
                    type: string
                  definitionBody:
                    description: |-
                      The body of the routine. For functions, this is the expression in the AS clause.
                      If language=SQL, it is the substring inside (but excluding) the parentheses.
                    type: string
                  description:
                    description: The description of the routine if defined.
                    type: string
                  determinismLevel:
                    description: |-
                      The determinism level of the JavaScript UDF if defined.
                      Possible values are: DETERMINISM_LEVEL_UNSPECIFIED, DETERMINISTIC, NOT_DETERMINISTIC.
                    type: string
                  id:
                    description: an identifier for the resource with format projects/{{project}}/datasets/{{dataset_id}}/routines/{{routine_id}}
                    type: string
                  importedLibraries:
                    description: |-
                      Optional. If language = "JAVASCRIPT", this field stores the path of the
                      imported JAVASCRIPT libraries.
                    items:
                      type: string
                    type: array
                  language:
                    description: |-
                      The language of the routine.
                      Possible values are: SQL, JAVASCRIPT, PYTHON, JAVA, SCALA.
                    type: string
                  lastModifiedTime:
                    description: |-
                      The time when this routine was modified, in milliseconds since the
                      epoch.
                    type: number
                  project:
                    description: |-
                      The ID of the project in which the resource belongs.
                      If it is not provided, the provider project is used.
                    type: string
                  remoteFunctionOptions:
                    description: |-
                      Remote function specific options.
                      Structure is documented below.
                    items:
                      properties:
                        connection:
                          description: |-
                            Fully qualified name of the user-provided connection object which holds
                            the authentication information to send requests to the remote service.
                            Format: "projects/{projectId}/locations/{locationId}/connections/{connectionId}"
                          type: string
                        endpoint:
                          description: |-
                            Endpoint of the user-provided remote service, e.g.
                            https://us-east1-my_gcf_project.cloudfunctions.net/remote_add
                          type: string
                        maxBatchingRows:
                          description: |-
                            Max number of rows in each batch sent to the remote service. If absent or if 0,
                            BigQuery dynamically decides the number of rows in a batch.
                          type: string
                        userDefinedContext:
                          additionalProperties:
                            type: string
                          description: |-
                            User-defined context as a set of key/value pairs, which will be sent as function
                            invocation context together with batched arguments in the requests to the remote
                            service. The total number of bytes of keys and values must be less than 8KB.
                            An object containing a list of "key": value pairs. Example:
                            { "name": "wrench", "mass": "1.3kg", "count": "3" }.
                          type: object
                          x-kubernetes-map-type: granular
                      type: object
                    type: array
                  returnTableType:
                    description: |-
                      Optional. Can be set only if routineType = "TABLE_VALUED_FUNCTION".
                      If absent, the return table type is inferred from definitionBody at query time in each query
                      that references this routine. If present, then the columns in the evaluated table result will
                      be cast to match the column types specificed in return table type, at query time.
                    type: string
                  returnType:
                    description: |-
                      A JSON schema for the return type. Optional if language = "SQL"; required otherwise.
                      If absent, the return type is inferred from definitionBody at query time in each query
                      that references this routine. If present, then the evaluated result will be cast to
                      the specified returned type at query time. ~>NOTE: Because this field expects a JSON
                      string, any changes to the string will create a diff, even if the JSON itself hasn't
                      changed. If the API returns a different value for the same schema, e.g. it switche
                      d the order of values or replaced STRUCT field type with RECORD field type, we currently
                      cannot suppress the recurring diff this causes. As a workaround, we recommend using
                      the schema as returned by the API.
                    type: string
                  routineType:
                    description: |-
                      The type of routine.
                      Possible values are: SCALAR_FUNCTION, PROCEDURE, TABLE_VALUED_FUNCTION.
                    type: string
                  sparkOptions:
                    description: |-
                      Optional. If language is one of "PYTHON", "JAVA", "SCALA", this field stores the options for spark stored procedure.
                      Structure is documented below.
                    items:
                      properties:
                        archiveUris:
                          description: Archive files to be extracted into the working
                            directory of each executor. For more information about
                            Apache Spark, see Apache Spark.
                          items:
                            type: string
                          type: array
                        connection:
                          description: |-
                            Fully qualified name of the user-provided Spark connection object.
                            Format: "projects/{projectId}/locations/{locationId}/connections/{connectionId}"
                          type: string
                        containerImage:
                          description: Custom container image for the runtime environment.
                          type: string
                        fileUris:
                          description: Files to be placed in the working directory
                            of each executor. For more information about Apache Spark,
                            see Apache Spark.
                          items:
                            type: string
                          type: array
                        jarUris:
                          description: JARs to include on the driver and executor
                            CLASSPATH. For more information about Apache Spark, see
                            Apache Spark.
                          items:
                            type: string
                          type: array
                        mainClass:
                          description: |-
                            The fully qualified name of a class in jarUris, for example, com.example.wordcount.
                            Exactly one of mainClass and main_jar_uri field should be set for Java/Scala language type.
                          type: string
                        mainFileUri:
                          description: |-
                            The main file/jar URI of the Spark application.
                            Exactly one of the definitionBody field and the mainFileUri field must be set for Python.
                            Exactly one of mainClass and mainFileUri field should be set for Java/Scala language type.
                          type: string
                        properties:
                          additionalProperties:
                            type: string
                          description: |-
                            Configuration properties as a set of key/value pairs, which will be passed on to the Spark application.
                            For more information, see Apache Spark and the procedure option list.
                            An object containing a list of "key": value pairs. Example: { "name": "wrench", "mass": "1.3kg", "count": "3" }.
                          type: object
                          x-kubernetes-map-type: granular
                        pyFileUris:
                          description: 'Python files to be placed on the PYTHONPATH
                            for PySpark application. Supported file types: .py, .egg,
                            and .zip. For more information about Apache Spark, see
                            Apache Spark.'
                          items:
                            type: string
                          type: array
                        runtimeVersion:
                          description: Runtime version. If not specified, the default
                            runtime version is used.
                          type: string
                      type: object
                    type: array
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: |-
                  ObservedGeneration is the latest metadata.generation
                  which resulted in either a ready state, or stalled due to error
                  it can not recover from without human intervention.
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1beta2
    schema:
      openAPIV3Schema:
        description: Routine is the Schema for the Routines API. A user-defined function
          or a stored procedure that belongs to a Dataset
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: RoutineSpec defines the desired state of Routine
            properties:
              deletionPolicy:
                default: Delete
                description: |-
                  DeletionPolicy specifies what will happen to the underlying external
                  when this managed resource is deleted - either "Delete" or "Orphan" the
                  external resource.
                  This field is planned to be deprecated in favor of the ManagementPolicies
                  field in a future release. Currently, both could be set independently and
                  non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  arguments:
                    description: |-
                      Input/output argument of a function or a stored procedure.
                      Structure is documented below.
                    items:
                      properties:
                        argumentKind:
                          description: |-
                            Defaults to FIXED_TYPE.
                            Default value is FIXED_TYPE.
                            Possible values are: FIXED_TYPE, ANY_TYPE.
                          type: string
                        dataType:
                          description: |-
                            A JSON schema for the data type. Required unless argumentKind = ANY_TYPE.
                            ~>NOTE: Because this field expects a JSON string, any changes to the string
                            will create a diff, even if the JSON itself hasn't changed. If the API returns
                            a different value for the same schema, e.g. it switched the order of values
                            or replaced STRUCT field type with RECORD field type, we currently cannot
                            suppress the recurring diff this causes. As a workaround, we recommend using
                            the schema as returned by the API.
                          type: string
                        mode:
                          description: |-
                            Specifies whether the argument is input or output. Can be set for procedures only.
                            Possible values are: IN, OUT, INOUT.
                          type: string
                        name:
                          description: The name of this argument. Can be absent for
                            function return argument.
                          type: string
                      type: object
                    type: array
                  dataGovernanceType:
                    description: |-
                      If set to DATA_MASKING, the function is validated and made available as a masking function. For more information, see https://cloud.google.com/bigquery/docs/user-defined-functions#custom-mask
                      Possible values are: DATA_MASKING.
                    type: string
                  datasetId:
                    description: The ID of the dataset containing this routine
                    type: string
                  datasetIdRef:
                    description: Reference to a Dataset in bigquery to populate datasetId.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  datasetIdSelector:
                    description: Selector for a Dataset in bigquery to populate datasetId.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  definitionBody:
                    description: |-
                      The body of the routine. For functions, this is the expression in the AS clause.
                      If language=SQL, it is the substring inside (but excluding) the parentheses.
                    type: string
                  description:
                    description: The description of the routine if defined.
                    type: string
                  determinismLevel:
                    description: |-
                      The determinism level of the JavaScript UDF if defined.
                      Possible values are: DETERMINISM_LEVEL_UNSPECIFIED, DETERMINISTIC, NOT_DETERMINISTIC.
                    type: string
                  importedLibraries:
                    description: |-
                      Optional. If language = "JAVASCRIPT", this field stores the path of the
                      imported JAVASCRIPT libraries.
                    items:
                      type: string
                    type: array
                  language:
                    description: |-
                      The language of the routine.
                      Possible values are: SQL, JAVASCRIPT, PYTHON, JAVA, SCALA.
                    type: string
                  project:
                    description: |-
                      The ID of the project in which the resource belongs.
                      If it is not provided, the provider project is used.
                    type: string
                  remoteFunctionOptions:
                    description: |-
                      Remote function specific options.
                      Structure is documented below.
                    properties:
                      connection:
                        description: |-
                          Fully qualified name of the user-provided connection object which holds
                          the authentication information to send requests to the remote service.
                          Format: "projects/{projectId}/locations/{locationId}/connections/{connectionId}"
                        type: string
                      connectionRef:
                        description: Reference to a Connection in bigquery to populate
                          connection.
                        properties:
                          name:
                            description: Name of the referenced object.
                            type: string
                          policy:
                            description: Policies for referencing.
                            properties:
                              resolution:
                                default: Required
                                description: |-
                                  Resolution specifies whether resolution of this reference is required.
                                  The default is 'Required', which means the reconcile will fail if the
                                  reference cannot be resolved. 'Optional' means this reference will be
                                  a no-op if it cannot be resolved.
                                enum:
                                - Required
                                - Optional
                                type: string
                              resolve:
                                description: |-
                                  Resolve specifies when this reference should be resolved. The default
                                  is 'IfNotPresent', which will attempt to resolve the reference only when
                                  the corresponding field is not present. Use 'Always' to resolve the
                                  reference on every reconcile.
                                enum:
                                - Always
                                - IfNotPresent
                                type: string
                            type: object
                        required:
                        - name
                        type: object
                      connectionSelector:
                        description: Selector for a Connection in bigquery to populate
                          connection.
                        properties:
                          matchControllerRef:
                            description: |-
                              MatchControllerRef ensures an object with the same controller reference
                              as the selecting object is selected.
                            type: boolean
                          matchLabels:
                            additionalProperties:
                              type: string
                            description: MatchLabels ensures an object with matching
                              labels is selected.
                            type: object
                          policy:
                            description: Policies for selection.
                            properties:
                              resolution:
                                default: Required
                                description: |-
                                  Resolution specifies whether resolution of this reference is required.
                                  The default is 'Required', which means the reconcile will fail if the
                                  reference cannot be resolved. 'Optional' means this reference will be
                                  a no-op if it cannot be resolved.
                                enum:
                                - Required
                                - Optional
                                type: string
                              resolve:
                                description: |-
                                  Resolve specifies when this reference should be resolved. The default
                                  is 'IfNotPresent', which will attempt to resolve the reference only when
                                  the corresponding field is not present. Use 'Always' to resolve the
                                  reference on every reconcile.
                                enum:
                                - Always
                                - IfNotPresent
                                type: string
                            type: object
                        type: object
                      endpoint:
                        description: |-
                          Endpoint of the user-provided remote service, e.g.
                          https://us-east1-my_gcf_project.cloudfunctions.net/remote_add
                        type: string
                      maxBatchingRows:
                        description: |-
                          Max number of rows in each batch sent to the remote service. If absent or if 0,
                          BigQuery dynamically decides the number of rows in a batch.
                        type: string
                      userDefinedContext:
                        additionalProperties:
                          type: string
                        description: |-
                          User-defined context as a set of key/value pairs, which will be sent as function
                          invocation context together with batched arguments in the requests to the remote
                          service. The total number of bytes of keys and values must be less than 8KB.
                          An object containing a list of "key": value pairs. Example:
                          { "name": "wrench", "mass": "1.3kg", "count": "3" }.
                        type: object
                        x-kubernetes-map-type: granular
                    type: object
                  returnTableType:
                    description: |-
                      Optional. Can be set only if routineType = "TABLE_VALUED_FUNCTION".
                      If absent, the return table type is inferred from definitionBody at query time in each query
                      that references this routine. If present, then the columns in the evaluated table result will
                      be cast to match the column types specificed in return table type, at query time.
                    type: string
                  returnType:
                    description: |-
                      A JSON schema for the return type. Optional if language = "SQL"; required otherwise.
                      If absent, the return type is inferred from definitionBody at query time in each query
                      that references this routine. If present, then the evaluated result will be cast to
                      the specified returned type at query time. ~>NOTE: Because this field expects a JSON
                      string, any changes to the string will create a diff, even if the JSON itself hasn't
                      changed. If the API returns a different value for the same schema, e.g. it switche
                      d the order of values or replaced STRUCT field type with RECORD field type, we currently
                      cannot suppress the recurring diff this causes. As a workaround, we recommend using
                      the schema as returned by the API.
                    type: string
                  routineType:
                    description: |-
                      The type of routine.
                      Possible values are: SCALAR_FUNCTION, PROCEDURE, TABLE_VALUED_FUNCTION.
                    type: string
                  securityMode:
                    description: |-
                      Optional. The security mode of the routine, if defined. If not defined, the security mode is automatically determined from the routine's configuration.
                      Possible values are: DEFINER, INVOKER.
                    type: string
                  sparkOptions:
                    description: |-
                      Optional. If language is one of "PYTHON", "JAVA", "SCALA", this field stores the options for spark stored procedure.
                      Structure is documented below.
                    properties:
                      archiveUris:
                        description: Archive files to be extracted into the working
                          directory of each executor. For more information about Apache
                          Spark, see Apache Spark.
                        items:
                          type: string
                        type: array
                      connection:
                        description: |-
                          Fully qualified name of the user-provided Spark connection object.
                          Format: "projects/{projectId}/locations/{locationId}/connections/{connectionId}"
                        type: string
                      connectionRef:
                        description: Reference to a Connection in bigquery to populate
                          connection.
                        properties:
                          name:
                            description: Name of the referenced object.
                            type: string
                          policy:
                            description: Policies for referencing.
                            properties:
                              resolution:
                                default: Required
                                description: |-
                                  Resolution specifies whether resolution of this reference is required.
                                  The default is 'Required', which means the reconcile will fail if the
                                  reference cannot be resolved. 'Optional' means this reference will be
                                  a no-op if it cannot be resolved.
                                enum:
                                - Required
                                - Optional
                                type: string
                              resolve:
                                description: |-
                                  Resolve specifies when this reference should be resolved. The default
                                  is 'IfNotPresent', which will attempt to resolve the reference only when
                                  the corresponding field is not present. Use 'Always' to resolve the
                                  reference on every reconcile.
                                enum:
                                - Always
                                - IfNotPresent
                                type: string
                            type: object
                        required:
                        - name
                        type: object
                      connectionSelector:
                        description: Selector for a Connection in bigquery to populate
                          connection.
                        properties:
                          matchControllerRef:
                            description: |-
                              MatchControllerRef ensures an object with the same controller reference
                              as the selecting object is selected.
                            type: boolean
                          matchLabels:
                            additionalProperties:
                              type: string
                            description: MatchLabels ensures an object with matching
                              labels is selected.
                            type: object
                          policy:
                            description: Policies for selection.
                            properties:
                              resolution:
                                default: Required
                                description: |-
                                  Resolution specifies whether resolution of this reference is required.
                                  The default is 'Required', which means the reconcile will fail if the
                                  reference cannot be resolved. 'Optional' means this reference will be
                                  a no-op if it cannot be resolved.
                                enum:
                                - Required
                                - Optional
                                type: string
                              resolve:
                                description: |-
                                  Resolve specifies when this reference should be resolved. The default
                                  is 'IfNotPresent', which will attempt to resolve the reference only when
                                  the corresponding field is not present. Use 'Always' to resolve the
                                  reference on every reconcile.
                                enum:
                                - Always
                                - IfNotPresent
                                type: string
                            type: object
                        type: object
                      containerImage:
                        description: Custom container image for the runtime environment.
                        type: string
                      fileUris:
                        description: Files to be placed in the working directory of
                          each executor. For more information about Apache Spark,
                          see Apache Spark.
                        items:
                          type: string
                        type: array
                      jarUris:
                        description: JARs to include on the driver and executor CLASSPATH.
                          For more information about Apache Spark, see Apache Spark.
                        items:
                          type: string
                        type: array
                      mainClass:
                        description: |-
                          The fully qualified name of a class in jarUris, for example, com.example.wordcount.
                          Exactly one of mainClass and main_jar_uri field should be set for Java/Scala language type.
                        type: string
                      mainFileUri:
                        description: |-
                          The main file/jar URI of the Spark application.
                          Exactly one of the definitionBody field and the mainFileUri field must be set for Python.
                          Exactly one of mainClass and mainFileUri field should be set for Java/Scala language type.
                        type: string
                      properties:
                        additionalProperties:
                          type: string
                        description: |-
                          Configuration properties as a set of key/value pairs, which will be passed on to the Spark application.
                          For more information, see Apache Spark and the procedure option list.
                          An object containing a list of "key": value pairs. Example: { "name": "wrench", "mass": "1.3kg", "count": "3" }.
                        type: object
                        x-kubernetes-map-type: granular
                      pyFileUris:
                        description: 'Python files to be placed on the PYTHONPATH
                          for PySpark application. Supported file types: .py, .egg,
                          and .zip. For more information about Apache Spark, see Apache
                          Spark.'
                        items:
                          type: string
                        type: array
                      runtimeVersion:
                        description: Runtime version. If not specified, the default
                          runtime version is used.
                        type: string
                    type: object
                type: object
              initProvider:
                description: |-
                  THIS IS A BETA FIELD. It will be honored
                  unless the Management Policies feature flag is disabled.
                  InitProvider holds the same fields as ForProvider, with the exception
                  of Identifier and other resource reference fields. The fields that are
                  in InitProvider are merged into ForProvider when the resource is created.
                  The same fields are also added to the terraform ignore_changes hook, to
                  avoid updating them after creation. This is useful for fields that are
                  required on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them, like an
                  autoscaler.
                properties:
                  arguments:
                    description: |-
                      Input/output argument of a function or a stored procedure.
                      Structure is documented below.
                    items:
                      properties:
                        argumentKind:
                          description: |-
                            Defaults to FIXED_TYPE.
                            Default value is FIXED_TYPE.
                            Possible values are: FIXED_TYPE, ANY_TYPE.
                          type: string
                        dataType:
                          description: |-
                            A JSON schema for the data type. Required unless argumentKind = ANY_TYPE.
                            ~>NOTE: Because this field expects a JSON string, any changes to the string
                            will create a diff, even if the JSON itself hasn't changed. If the API returns
                            a different value for the same schema, e.g. it switched the order of values
                            or replaced STRUCT field type with RECORD field type, we currently cannot
                            suppress the recurring diff this causes. As a workaround, we recommend using
                            the schema as returned by the API.
                          type: string
                        mode:
                          description: |-
                            Specifies whether the argument is input or output. Can be set for procedures only.
                            Possible values are: IN, OUT, INOUT.
                          type: string
                        name:
                          description: The name of this argument. Can be absent for
                            function return argument.
                          type: string
                      type: object
                    type: array
                  dataGovernanceType:
                    description: |-
                      If set to DATA_MASKING, the function is validated and made available as a masking function. For more information, see https://cloud.google.com/bigquery/docs/user-defined-functions#custom-mask
                      Possible values are: DATA_MASKING.
                    type: string
                  definitionBody:
                    description: |-
                      The body of the routine. For functions, this is the expression in the AS clause.
                      If language=SQL, it is the substring inside (but excluding) the parentheses.
                    type: string
                  description:
                    description: The description of the routine if defined.
                    type: string
                  determinismLevel:
                    description: |-
                      The determinism level of the JavaScript UDF if defined.
                      Possible values are: DETERMINISM_LEVEL_UNSPECIFIED, DETERMINISTIC, NOT_DETERMINISTIC.
                    type: string
                  importedLibraries:
                    description: |-
                      Optional. If language = "JAVASCRIPT", this field stores the path of the
                      imported JAVASCRIPT libraries.
                    items:
                      type: string
                    type: array
                  language:
                    description: |-
                      The language of the routine.
                      Possible values are: SQL, JAVASCRIPT, PYTHON, JAVA, SCALA.
                    type: string
                  project:
                    description: |-
                      The ID of the project in which the resource belongs.
                      If it is not provided, the provider project is used.
                    type: string
                  remoteFunctionOptions:
                    description: |-
                      Remote function specific options.
                      Structure is documented below.
                    properties:
                      connection:
                        description: |-
                          Fully qualified name of the user-provided connection object which holds
                          the authentication information to send requests to the remote service.
                          Format: "projects/{projectId}/locations/{locationId}/connections/{connectionId}"
                        type: string
                      connectionRef:
                        description: Reference to a Connection in bigquery to populate
                          connection.
                        properties:
                          name:
                            description: Name of the referenced object.
                            type: string
                          policy:
                            description: Policies for referencing.
                            properties:
                              resolution:
                                default: Required
                                description: |-
                                  Resolution specifies whether resolution of this reference is required.
                                  The default is 'Required', which means the reconcile will fail if the
                                  reference cannot be resolved. 'Optional' means this reference will be
                                  a no-op if it cannot be resolved.
                                enum:
                                - Required
                                - Optional
                                type: string
                              resolve:
                                description: |-
                                  Resolve specifies when this reference should be resolved. The default
                                  is 'IfNotPresent', which will attempt to resolve the reference only when
                                  the corresponding field is not present. Use 'Always' to resolve the
                                  reference on every reconcile.
                                enum:
                                - Always
                                - IfNotPresent
                                type: string
                            type: object
                        required:
                        - name
                        type: object
                      connectionSelector:
                        description: Selector for a Connection in bigquery to populate
                          connection.
                        properties:
                          matchControllerRef:
                            description: |-
                              MatchControllerRef ensures an object with the same controller reference
                              as the selecting object is selected.
                            type: boolean
                          matchLabels:
                            additionalProperties:
                              type: string
                            description: MatchLabels ensures an object with matching
                              labels is selected.
                            type: object
                          policy:
                            description: Policies for selection.
                            properties:
                              resolution:
                                default: Required
                                description: |-
                                  Resolution specifies whether resolution of this reference is required.
                                  The default is 'Required', which means the reconcile will fail if the
                                  reference cannot be resolved. 'Optional' means this reference will be
                                  a no-op if it cannot be resolved.
                                enum:
                                - Required
                                - Optional
                                type: string
                              resolve:
                                description: |-
                                  Resolve specifies when this reference should be resolved. The default
                                  is 'IfNotPresent', which will attempt to resolve the reference only when
                                  the corresponding field is not present. Use 'Always' to resolve the
                                  reference on every reconcile.
                                enum:
                                - Always
                                - IfNotPresent
                                type: string
                            type: object
                        type: object
                      endpoint:
                        description: |-
                          Endpoint of the user-provided remote service, e.g.
                          https://us-east1-my_gcf_project.cloudfunctions.net/remote_add
                        type: string
                      maxBatchingRows:
                        description: |-
                          Max number of rows in each batch sent to the remote service. If absent or if 0,
                          BigQuery dynamically decides the number of rows in a batch.
                        type: string
                      userDefinedContext:
                        additionalProperties:
                          type: string
                        description: |-
                          User-defined context as a set of key/value pairs, which will be sent as function
                          invocation context together with batched arguments in the requests to the remote
                          service. The total number of bytes of keys and values must be less than 8KB.
                          An object containing a list of "key": value pairs. Example:
                          { "name": "wrench", "mass": "1.3kg", "count": "3" }.
                        type: object
                        x-kubernetes-map-type: granular
                    type: object
                  returnTableType:
                    description: |-
                      Optional. Can be set only if routineType = "TABLE_VALUED_FUNCTION".
                      If absent, the return table type is inferred from definitionBody at query time in each query
                      that references this routine. If present, then the columns in the evaluated table result will
                      be cast to match the column types specificed in return table type, at query time.
                    type: string
                  returnType:
                    description: |-
                      A JSON schema for the return type. Optional if language = "SQL"; required otherwise.
                      If absent, the return type is inferred from definitionBody at query time in each query
                      that references this routine. If present, then the evaluated result will be cast to
                      the specified returned type at query time. ~>NOTE: Because this field expects a JSON
                      string, any changes to the string will create a diff, even if the JSON itself hasn't
                      changed. If the API returns a different value for the same schema, e.g. it switche
                      d the order of values or replaced STRUCT field type with RECORD field type, we currently
                      cannot suppress the recurring diff this causes. As a workaround, we recommend using
                      the schema as returned by the API.
                    type: string
                  routineType:
                    description: |-
                      The type of routine.
                      Possible values are: SCALAR_FUNCTION, PROCEDURE, TABLE_VALUED_FUNCTION.
                    type: string
                  securityMode:
                    description: |-
                      Optional. The security mode of the routine, if defined. If not defined, the security mode is automatically determined from the routine's configuration.
                      Possible values are: DEFINER, INVOKER.
                    type: string
                  sparkOptions:
                    description: |-
                      Optional. If language is one of "PYTHON", "JAVA", "SCALA", this field stores the options for spark stored procedure.
                      Structure is documented below.
                    properties:
                      archiveUris:
                        description: Archive files to be extracted into the working
                          directory of each executor. For more information about Apache
                          Spark, see Apache Spark.
                        items:
                          type: string
                        type: array
                      connection:
                        description: |-
                          Fully qualified name of the user-provided Spark connection object.
                          Format: "projects/{projectId}/locations/{locationId}/connections/{connectionId}"
                        type: string
                      connectionRef:
                        description: Reference to a Connection in bigquery to populate
                          connection.
                        properties:
                          name:
                            description: Name of the referenced object.
                            type: string
                          policy:
                            description: Policies for referencing.
                            properties:
                              resolution:
                                default: Required
                                description: |-
                                  Resolution specifies whether resolution of this reference is required.
                                  The default is 'Required', which means the reconcile will fail if the
                                  reference cannot be resolved. 'Optional' means this reference will be
                                  a no-op if it cannot be resolved.
                                enum:
                                - Required
                                - Optional
                                type: string
                              resolve:
                                description: |-
                                  Resolve specifies when this reference should be resolved. The default
                                  is 'IfNotPresent', which will attempt to resolve the reference only when
                                  the corresponding field is not present. Use 'Always' to resolve the
                                  reference on every reconcile.
                                enum:
                                - Always
                                - IfNotPresent
                                type: string
                            type: object
                        required:
                        - name
                        type: object
                      connectionSelector:
                        description: Selector for a Connection in bigquery to populate
                          connection.
                        properties:
                          matchControllerRef:
                            description: |-
                              MatchControllerRef ensures an object with the same controller reference
                              as the selecting object is selected.
                            type: boolean
                          matchLabels:
                            additionalProperties:
                              type: string
                            description: MatchLabels ensures an object with matching
                              labels is selected.
                            type: object
                          policy:
                            description: Policies for selection.
                            properties:
                              resolution:
                                default: Required
                                description: |-
                                  Resolution specifies whether resolution of this reference is required.
                                  The default is 'Required', which means the reconcile will fail if the
                                  reference cannot be resolved. 'Optional' means this reference will be
                                  a no-op if it cannot be resolved.
                                enum:
                                - Required
                                - Optional
                                type: string
                              resolve:
                                description: |-
                                  Resolve specifies when this reference should be resolved. The default
                                  is 'IfNotPresent', which will attempt to resolve the reference only when
                                  the corresponding field is not present. Use 'Always' to resolve the
                                  reference on every reconcile.
                                enum:
                                - Always
                                - IfNotPresent
                                type: string
                            type: object
                        type: object
                      containerImage:
                        description: Custom container image for the runtime environment.
                        type: string
                      fileUris:
                        description: Files to be placed in the working directory of
                          each executor. For more information about Apache Spark,
                          see Apache Spark.
                        items:
                          type: string
                        type: array
                      jarUris:
                        description: JARs to include on the driver and executor CLASSPATH.
                          For more information about Apache Spark, see Apache Spark.
                        items:
                          type: string
                        type: array
                      mainClass:
                        description: |-
                          The fully qualified name of a class in jarUris, for example, com.example.wordcount.
                          Exactly one of mainClass and main_jar_uri field should be set for Java/Scala language type.
                        type: string
                      mainFileUri:
                        description: |-
                          The main file/jar URI of the Spark application.
                          Exactly one of the definitionBody field and the mainFileUri field must be set for Python.
                          Exactly one of mainClass and mainFileUri field should be set for Java/Scala language type.
                        type: string
                      properties:
                        additionalProperties:
                          type: string
                        description: |-
                          Configuration properties as a set of key/value pairs, which will be passed on to the Spark application.
                          For more information, see Apache Spark and the procedure option list.
                          An object containing a list of "key": value pairs. Example: { "name": "wrench", "mass": "1.3kg", "count": "3" }.
                        type: object
                        x-kubernetes-map-type: granular
                      pyFileUris:
                        description: 'Python files to be placed on the PYTHONPATH
                          for PySpark application. Supported file types: .py, .egg,
                          and .zip. For more information about Apache Spark, see Apache
                          Spark.'
                        items:
                          type: string
                        type: array
                      runtimeVersion:
                        description: Runtime version. If not specified, the default
                          runtime version is used.
                        type: string
                    type: object
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  This field is planned to replace the DeletionPolicy field in a future
                  release. Currently, both could be set independently and non-default
                  values would be honored if the feature flag is enabled. If both are
                  custom, the DeletionPolicy field will be ignored.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: |-
                  PublishConnectionDetailsTo specifies the connection secret config which
                  contains a name, metadata and a reference to secret store config to
                  which any connection details for this managed resource should be written.
                  Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: |-
                      SecretStoreConfigRef specifies which secret store config should be used
                      for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations are the annotations to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.annotations".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Labels are the labels/tags to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      type:
                        description: |-
                          Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                  This field is planned to be replaced in a future release in favor of
                  PublishConnectionDetailsTo. Currently, both could be set independently
                  and connection details would be published to both without affecting
                  each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
            x-kubernetes-validations:
            - message: spec.forProvider.definitionBody is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.definitionBody)
                || (has(self.initProvider) && has(self.initProvider.definitionBody))'
            - message: spec.forProvider.routineType is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.routineType)
                || (has(self.initProvider) && has(self.initProvider.routineType))'
          status:
            description: RoutineStatus defines the observed state of Routine.
            properties:
              atProvider:
                properties:
                  arguments:
                    description: |-
                      Input/output argument of a function or a stored procedure.
                      Structure is documented below.
                    items:
                      properties:
                        argumentKind:
                          description: |-
                            Defaults to FIXED_TYPE.
                            Default value is FIXED_TYPE.
                            Possible values are: FIXED_TYPE, ANY_TYPE.
                          type: string
                        dataType:
                          description: |-
                            A JSON schema for the data type. Required unless argumentKind = ANY_TYPE.
                            ~>NOTE: Because this field expects a JSON string, any changes to the string
                            will create a diff, even if the JSON itself hasn't changed. If the API returns
                            a different value for the same schema, e.g. it switched the order of values
                            or replaced STRUCT field type with RECORD field type, we currently cannot
                            suppress the recurring diff this causes. As a workaround, we recommend using
                            the schema as returned by the API.
                          type: string
                        mode:
                          description: |-
                            Specifies whether the argument is input or output. Can be set for procedures only.
                            Possible values are: IN, OUT, INOUT.
                          type: string
                        name:
                          description: The name of this argument. Can be absent for
                            function return argument.
                          type: string
                      type: object
                    type: array
                  creationTime:
                    description: |-
                      The time when this routine was created, in milliseconds since the
                      epoch.
                    type: number
                  dataGovernanceType:
                    description: |-
                      If set to DATA_MASKING, the function is validated and made available as a masking function. For more information, see https://cloud.google.com/bigquery/docs/user-defined-functions#custom-mask
                      Possible values are: DATA_MASKING.
                    type: string
                  datasetId:
                    description: The ID of the dataset containing this routine
                    type: string
                  definitionBody:
                    description: |-
                      The body of the routine. For functions, this is the expression in the AS clause.
                      If language=SQL, it is the substring inside (but excluding) the parentheses.
                    type: string
                  description:
                    description: The description of the routine if defined.
                    type: string
                  determinismLevel:
                    description: |-
                      The determinism level of the JavaScript UDF if defined.
                      Possible values are: DETERMINISM_LEVEL_UNSPECIFIED, DETERMINISTIC, NOT_DETERMINISTIC.
                    type: string
                  id:
                    description: an identifier for the resource with format projects/{{project}}/datasets/{{dataset_id}}/routines/{{routine_id}}
                    type: string
                  importedLibraries:
                    description: |-
                      Optional. If language = "JAVASCRIPT", this field stores the path of the
                      imported JAVASCRIPT libraries.
                    items:
                      type: string
                    type: array
                  language:
                    description: |-
                      The language of the routine.
                      Possible values are: SQL, JAVASCRIPT, PYTHON, JAVA, SCALA.
                    type: string
                  lastModifiedTime:
                    description: |-
                      The time when this routine was modified, in milliseconds since the
                      epoch.
                    type: number
                  project:
                    description: |-
                      The ID of the project in which the resource belongs.
                      If it is not provided, the provider project is used.
                    type: string
                  remoteFunctionOptions:
                    description: |-
                      Remote function specific options.
                      Structure is documented below.
                    properties:
                      connection:
                        description: |-
                          Fully qualified name of the user-provided connection object which holds
                          the authentication information to send requests to the remote service.
                          Format: "projects/{projectId}/locations/{locationId}/connections/{connectionId}"
                        type: string
                      endpoint:
                        description: |-
                          Endpoint of the user-provided remote service, e.g.
                          https://us-east1-my_gcf_project.cloudfunctions.net/remote_add
                        type: string
                      maxBatchingRows:
                        description: |-
                          Max number of rows in each batch sent to the remote service. If absent or if 0,
                          BigQuery dynamically decides the number of rows in a batch.
                        type: string
                      userDefinedContext:
                        additionalProperties:
                          type: string
                        description: |-
                          User-defined context as a set of key/value pairs, which will be sent as function
                          invocation context together with batched arguments in the requests to the remote
                          service. The total number of bytes of keys and values must be less than 8KB.
                          An object containing a list of "key": value pairs. Example:
                          { "name": "wrench", "mass": "1.3kg", "count": "3" }.
                        type: object
                        x-kubernetes-map-type: granular
                    type: object
                  returnTableType:
                    description: |-
                      Optional. Can be set only if routineType = "TABLE_VALUED_FUNCTION".
                      If absent, the return table type is inferred from definitionBody at query time in each query
                      that references this routine. If present, then the columns in the evaluated table result will
                      be cast to match the column types specificed in return table type, at query time.
                    type: string
                  returnType:
                    description: |-
                      A JSON schema for the return type. Optional if language = "SQL"; required otherwise.
                      If absent, the return type is inferred from definitionBody at query time in each query
                      that references this routine. If present, then the evaluated result will be cast to
                      the specified returned type at query time. ~>NOTE: Because this field expects a JSON
                      string, any changes to the string will create a diff, even if the JSON itself hasn't
                      changed. If the API returns a different value for the same schema, e.g. it switche
                      d the order of values or replaced STRUCT field type with RECORD field type, we currently
                      cannot suppress the recurring diff this causes. As a workaround, we recommend using
                      the schema as returned by the API.
                    type: string
                  routineType:
                    description: |-
                      The type of routine.
                      Possible values are: SCALAR_FUNCTION, PROCEDURE, TABLE_VALUED_FUNCTION.
                    type: string
                  securityMode:
                    description: |-
                      Optional. The security mode of the routine, if defined. If not defined, the security mode is automatically determined from the routine's configuration.
                      Possible values are: DEFINER, INVOKER.
                    type: string
                  sparkOptions:
                    description: |-
                      Optional. If language is one of "PYTHON", "JAVA", "SCALA", this field stores the options for spark stored procedure.
                      Structure is documented below.
                    properties:
                      archiveUris:
                        description: Archive files to be extracted into the working
                          directory of each executor. For more information about Apache
                          Spark, see Apache Spark.
                        items:
                          type: string
                        type: array
                      connection:
                        description: |-
                          Fully qualified name of the user-provided Spark connection object.
                          Format: "projects/{projectId}/locations/{locationId}/connections/{connectionId}"
                        type: string
                      containerImage:
                        description: Custom container image for the runtime environment.
                        type: string
                      fileUris:
                        description: Files to be placed in the working directory of
                          each executor. For more information about Apache Spark,
                          see Apache Spark.
                        items:
                          type: string
                        type: array
                      jarUris:
                        description: JARs to include on the driver and executor CLASSPATH.
                          For more information about Apache Spark, see Apache Spark.
                        items:
                          type: string
                        type: array
                      mainClass:
                        description: |-
                          The fully qualified name of a class in jarUris, for example, com.example.wordcount.
                          Exactly one of mainClass and main_jar_uri field should be set for Java/Scala language type.
                        type: string
                      mainFileUri:
                        description: |-
                          The main file/jar URI of the Spark application.
                          Exactly one of the definitionBody field and the mainFileUri field must be set for Python.
                          Exactly one of mainClass and mainFileUri field should be set for Java/Scala language type.
                        type: string
                      properties:
                        additionalProperties:
                          type: string
                        description: |-
                          Configuration properties as a set of key/value pairs, which will be passed on to the Spark application.
                          For more information, see Apache Spark and the procedure option list.
                          An object containing a list of "key": value pairs. Example: { "name": "wrench", "mass": "1.3kg", "count": "3" }.
                        type: object
                        x-kubernetes-map-type: granular
                      pyFileUris:
                        description: 'Python files to be placed on the PYTHONPATH
                          for PySpark application. Supported file types: .py, .egg,
                          and .zip. For more information about Apache Spark, see Apache
                          Spark.'
                        items:
                          type: string
                        type: array
                      runtimeVersion:
                        description: Runtime version. If not specified, the default
                          runtime version is used.
                        type: string
                    type: object
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: |-
                  ObservedGeneration is the latest metadata.generation
                  which resulted in either a ready state, or stalled due to error
                  it can not recover from without human intervention.
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: false
    subresources:
      status: {}
