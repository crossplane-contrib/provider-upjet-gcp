---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.11.1
  creationTimestamp: null
  name: jobs.dataflow.gcp.upbound.io
spec:
  group: dataflow.gcp.upbound.io
  names:
    categories:
    - crossplane
    - managed
    - gcp
    kind: Job
    listKind: JobList
    plural: jobs
    singular: job
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: Job is the Schema for the Jobs API. Creates a job in Dataflow
          according to a provided config file.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: JobSpec defines the desired state of Job
            properties:
              deletionPolicy:
                default: Delete
                description: DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource.
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  additionalExperiments:
                    description: List of experiments that should be used by the job.
                      An example value is ["enable_stackdriver_agent_metrics"].
                    items:
                      type: string
                    type: array
                  enableStreamingEngine:
                    description: Enable/disable the use of Streaming Engine for the
                      job. Note that Streaming Engine is enabled by default for pipelines
                      developed against the Beam SDK for Python v2.21.0 or later when
                      using Python 3.
                    type: boolean
                  ipConfiguration:
                    description: The configuration for VM IPs.  Options are "WORKER_IP_PUBLIC"
                      or "WORKER_IP_PRIVATE".
                    type: string
                  kmsKeyName:
                    description: 'The name for the Cloud KMS key for the job. Key
                      format is: projects/PROJECT_ID/locations/LOCATION/keyRings/KEY_RING/cryptoKeys/KEY'
                    type: string
                  labels:
                    additionalProperties:
                      type: string
                    description: 'User labels to be specified for the job. Keys and
                      values should follow the restrictions specified in the labeling
                      restrictions page. NOTE: Google-provided Dataflow templates
                      often provide default labels that begin with goog-dataflow-provided.
                      Unless explicitly set in config, these labels will be ignored
                      to prevent diffs on re-apply.'
                    type: object
                  machineType:
                    description: The machine type to use for the job.
                    type: string
                  maxWorkers:
                    description: The number of workers permitted to work on the job.  More
                      workers may improve processing speed at additional cost.
                    type: number
                  name:
                    description: A unique name for the resource, required by Dataflow.
                    type: string
                  network:
                    description: The network to which VMs will be assigned. If it
                      is not provided, "default" will be used.
                    type: string
                  onDelete:
                    description: One of "drain" or "cancel".  See above note.
                    type: string
                  parameters:
                    additionalProperties:
                      type: string
                    description: Key/Value pairs to be passed to the Dataflow job
                      (as used in the template).
                    type: object
                  project:
                    description: The project in which the resource belongs. If it
                      is not provided, the provider project is used.
                    type: string
                  region:
                    description: The region in which the created job should run.
                    type: string
                  serviceAccountEmail:
                    description: The Service Account email used to create the job.
                    type: string
                  skipWaitOnJobTermination:
                    description: See above note.
                    type: boolean
                  subnetwork:
                    description: The subnetwork to which VMs will be assigned. Should
                      be of the form "regions/REGION/subnetworks/SUBNETWORK". If the
                      subnetwork is located in a Shared VPC network, you must use
                      the complete URL. For example "googleapis.com/compute/v1/projects/PROJECT_ID/regions/REGION/subnetworks/SUBNET_NAME"
                    type: string
                  tempGcsLocation:
                    description: A writeable location on GCS for the Dataflow job
                      to dump its temporary data.
                    type: string
                  templateGcsPath:
                    description: The GCS path to the Dataflow job template.
                    type: string
                  transformNameMapping:
                    additionalProperties:
                      type: string
                    description: Only applicable when updating a pipeline. Map of
                      transform name prefixes of the job to be replaced with the corresponding
                      name prefixes of the new job. This field is not used outside
                      of update.
                    type: object
                  zone:
                    description: The zone in which the created job should run. If
                      it is not provided, the provider zone is used.
                    type: string
                required:
                - name
                - tempGcsLocation
                - templateGcsPath
                type: object
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: JobStatus defines the observed state of Job.
            properties:
              atProvider:
                properties:
                  id:
                    type: string
                  jobId:
                    description: The unique ID of this job.
                    type: string
                  state:
                    description: The current state of the resource, selected from
                      the JobState enum
                    type: string
                  type:
                    description: The type of this job, selected from the JobType enum
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
