---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: images.compute.gcp.upbound.io
spec:
  group: compute.gcp.upbound.io
  names:
    categories:
    - crossplane
    - managed
    - gcp
    kind: Image
    listKind: ImageList
    plural: images
    singular: image
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: Image is the Schema for the Images API. Represents an Image resource.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: ImageSpec defines the desired state of Image
            properties:
              deletionPolicy:
                default: Delete
                description: |-
                  DeletionPolicy specifies what will happen to the underlying external
                  when this managed resource is deleted - either "Delete" or "Orphan" the
                  external resource.
                  This field is planned to be deprecated in favor of the ManagementPolicies
                  field in a future release. Currently, both could be set independently and
                  non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  description:
                    description: |-
                      An optional description of this resource. Provide this property when
                      you create the resource.
                    type: string
                  diskSizeGb:
                    description: Size of the image when restored onto a persistent
                      disk (in GB).
                    type: number
                  family:
                    description: |-
                      The name of the image family to which this image belongs. You can
                      create disks by specifying an image family instead of a specific
                      image name. The image family always returns its latest image that is
                      not deprecated. The name of the image family must comply with
                      RFC1035.
                    type: string
                  guestOsFeatures:
                    description: |-
                      A list of features to enable on the guest operating system.
                      Applicable only for bootable images.
                      Structure is documented below.
                    items:
                      properties:
                        type:
                          description: |-
                            The type of supported feature. Read Enabling guest operating system features to see a list of available options.
                            Possible values are: MULTI_IP_SUBNET, SECURE_BOOT, SEV_CAPABLE, UEFI_COMPATIBLE, VIRTIO_SCSI_MULTIQUEUE, WINDOWS, GVNIC, SEV_LIVE_MIGRATABLE, SEV_SNP_CAPABLE, SUSPEND_RESUME_COMPATIBLE, TDX_CAPABLE.
                          type: string
                      type: object
                    type: array
                  imageEncryptionKey:
                    description: |-
                      Encrypts the image using a customer-supplied encryption key.
                      After you encrypt an image with a customer-supplied key, you must
                      provide the same key if you use the image later (e.g. to create a
                      disk from the image)
                      Structure is documented below.
                    items:
                      properties:
                        kmsKeySelfLink:
                          description: |-
                            The self link of the encryption key that is stored in Google Cloud
                            KMS.
                          type: string
                        kmsKeyServiceAccount:
                          description: |-
                            The service account being used for the encryption request for the
                            given KMS key. If absent, the Compute Engine default service
                            account is used.
                          type: string
                      type: object
                    type: array
                  labels:
                    additionalProperties:
                      type: string
                    description: Labels to apply to this Image.
                    type: object
                    x-kubernetes-map-type: granular
                  licenses:
                    description: Any applicable license URI.
                    items:
                      type: string
                    type: array
                  project:
                    description: |-
                      The ID of the project in which the resource belongs.
                      If it is not provided, the provider project is used.
                    type: string
                  rawDisk:
                    description: |-
                      The parameters of the raw disk image.
                      Structure is documented below.
                    items:
                      properties:
                        containerType:
                          description: |-
                            The format used to encode and transmit the block device, which
                            should be TAR. This is just a container and transmission format
                            and not a runtime format. Provided by the client when the disk
                            image is created.
                            Default value is TAR.
                            Possible values are: TAR.
                          type: string
                        sha1:
                          description: |-
                            An optional SHA1 checksum of the disk image before unpackaging.
                            This is provided by the client when the disk image is created.
                          type: string
                        source:
                          description: |-
                            The full Google Cloud Storage URL where disk storage is stored
                            You must provide either this property or the sourceDisk property
                            but not both.
                          type: string
                      type: object
                    type: array
                  sourceDisk:
                    description: |-
                      The source disk to create this image based on.
                      You must provide either this property or the
                      rawDisk.source property but not both to create an image.
                    type: string
                  sourceImage:
                    description: |-
                      URL of the source image used to create this image. In order to create an image, you must provide the full or partial
                      URL of one of the following:
                    type: string
                  sourceSnapshot:
                    description: |-
                      URL of the source snapshot used to create this image.
                      In order to create an image, you must provide the full or partial URL of one of the following:
                    type: string
                  storageLocations:
                    description: |-
                      Cloud Storage bucket storage location of the image
                      (regional or multi-regional).
                      Reference link: https://cloud.google.com/compute/docs/reference/rest/v1/images
                    items:
                      type: string
                    type: array
                type: object
              initProvider:
                description: |-
                  THIS IS A BETA FIELD. It will be honored
                  unless the Management Policies feature flag is disabled.
                  InitProvider holds the same fields as ForProvider, with the exception
                  of Identifier and other resource reference fields. The fields that are
                  in InitProvider are merged into ForProvider when the resource is created.
                  The same fields are also added to the terraform ignore_changes hook, to
                  avoid updating them after creation. This is useful for fields that are
                  required on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them, like an
                  autoscaler.
                properties:
                  description:
                    description: |-
                      An optional description of this resource. Provide this property when
                      you create the resource.
                    type: string
                  diskSizeGb:
                    description: Size of the image when restored onto a persistent
                      disk (in GB).
                    type: number
                  family:
                    description: |-
                      The name of the image family to which this image belongs. You can
                      create disks by specifying an image family instead of a specific
                      image name. The image family always returns its latest image that is
                      not deprecated. The name of the image family must comply with
                      RFC1035.
                    type: string
                  guestOsFeatures:
                    description: |-
                      A list of features to enable on the guest operating system.
                      Applicable only for bootable images.
                      Structure is documented below.
                    items:
                      properties:
                        type:
                          description: |-
                            The type of supported feature. Read Enabling guest operating system features to see a list of available options.
                            Possible values are: MULTI_IP_SUBNET, SECURE_BOOT, SEV_CAPABLE, UEFI_COMPATIBLE, VIRTIO_SCSI_MULTIQUEUE, WINDOWS, GVNIC, SEV_LIVE_MIGRATABLE, SEV_SNP_CAPABLE, SUSPEND_RESUME_COMPATIBLE, TDX_CAPABLE.
                          type: string
                      type: object
                    type: array
                  imageEncryptionKey:
                    description: |-
                      Encrypts the image using a customer-supplied encryption key.
                      After you encrypt an image with a customer-supplied key, you must
                      provide the same key if you use the image later (e.g. to create a
                      disk from the image)
                      Structure is documented below.
                    items:
                      properties:
                        kmsKeySelfLink:
                          description: |-
                            The self link of the encryption key that is stored in Google Cloud
                            KMS.
                          type: string
                        kmsKeyServiceAccount:
                          description: |-
                            The service account being used for the encryption request for the
                            given KMS key. If absent, the Compute Engine default service
                            account is used.
                          type: string
                      type: object
                    type: array
                  labels:
                    additionalProperties:
                      type: string
                    description: Labels to apply to this Image.
                    type: object
                    x-kubernetes-map-type: granular
                  licenses:
                    description: Any applicable license URI.
                    items:
                      type: string
                    type: array
                  project:
                    description: |-
                      The ID of the project in which the resource belongs.
                      If it is not provided, the provider project is used.
                    type: string
                  rawDisk:
                    description: |-
                      The parameters of the raw disk image.
                      Structure is documented below.
                    items:
                      properties:
                        containerType:
                          description: |-
                            The format used to encode and transmit the block device, which
                            should be TAR. This is just a container and transmission format
                            and not a runtime format. Provided by the client when the disk
                            image is created.
                            Default value is TAR.
                            Possible values are: TAR.
                          type: string
                        sha1:
                          description: |-
                            An optional SHA1 checksum of the disk image before unpackaging.
                            This is provided by the client when the disk image is created.
                          type: string
                        source:
                          description: |-
                            The full Google Cloud Storage URL where disk storage is stored
                            You must provide either this property or the sourceDisk property
                            but not both.
                          type: string
                      type: object
                    type: array
                  sourceDisk:
                    description: |-
                      The source disk to create this image based on.
                      You must provide either this property or the
                      rawDisk.source property but not both to create an image.
                    type: string
                  sourceImage:
                    description: |-
                      URL of the source image used to create this image. In order to create an image, you must provide the full or partial
                      URL of one of the following:
                    type: string
                  sourceSnapshot:
                    description: |-
                      URL of the source snapshot used to create this image.
                      In order to create an image, you must provide the full or partial URL of one of the following:
                    type: string
                  storageLocations:
                    description: |-
                      Cloud Storage bucket storage location of the image
                      (regional or multi-regional).
                      Reference link: https://cloud.google.com/compute/docs/reference/rest/v1/images
                    items:
                      type: string
                    type: array
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  This field is planned to replace the DeletionPolicy field in a future
                  release. Currently, both could be set independently and non-default
                  values would be honored if the feature flag is enabled. If both are
                  custom, the DeletionPolicy field will be ignored.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: |-
                  PublishConnectionDetailsTo specifies the connection secret config which
                  contains a name, metadata and a reference to secret store config to
                  which any connection details for this managed resource should be written.
                  Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: |-
                      SecretStoreConfigRef specifies which secret store config should be used
                      for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations are the annotations to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.annotations".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Labels are the labels/tags to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      type:
                        description: |-
                          Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                  This field is planned to be replaced in a future release in favor of
                  PublishConnectionDetailsTo. Currently, both could be set independently
                  and connection details would be published to both without affecting
                  each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: ImageStatus defines the observed state of Image.
            properties:
              atProvider:
                properties:
                  archiveSizeBytes:
                    description: |-
                      Size of the image tar.gz archive stored in Google Cloud Storage (in
                      bytes).
                    type: number
                  creationTimestamp:
                    description: Creation timestamp in RFC3339 text format.
                    type: string
                  description:
                    description: |-
                      An optional description of this resource. Provide this property when
                      you create the resource.
                    type: string
                  diskSizeGb:
                    description: Size of the image when restored onto a persistent
                      disk (in GB).
                    type: number
                  family:
                    description: |-
                      The name of the image family to which this image belongs. You can
                      create disks by specifying an image family instead of a specific
                      image name. The image family always returns its latest image that is
                      not deprecated. The name of the image family must comply with
                      RFC1035.
                    type: string
                  guestOsFeatures:
                    description: |-
                      A list of features to enable on the guest operating system.
                      Applicable only for bootable images.
                      Structure is documented below.
                    items:
                      properties:
                        type:
                          description: |-
                            The type of supported feature. Read Enabling guest operating system features to see a list of available options.
                            Possible values are: MULTI_IP_SUBNET, SECURE_BOOT, SEV_CAPABLE, UEFI_COMPATIBLE, VIRTIO_SCSI_MULTIQUEUE, WINDOWS, GVNIC, SEV_LIVE_MIGRATABLE, SEV_SNP_CAPABLE, SUSPEND_RESUME_COMPATIBLE, TDX_CAPABLE.
                          type: string
                      type: object
                    type: array
                  id:
                    description: an identifier for the resource with format projects/{{project}}/global/images/{{name}}
                    type: string
                  imageEncryptionKey:
                    description: |-
                      Encrypts the image using a customer-supplied encryption key.
                      After you encrypt an image with a customer-supplied key, you must
                      provide the same key if you use the image later (e.g. to create a
                      disk from the image)
                      Structure is documented below.
                    items:
                      properties:
                        kmsKeySelfLink:
                          description: |-
                            The self link of the encryption key that is stored in Google Cloud
                            KMS.
                          type: string
                        kmsKeyServiceAccount:
                          description: |-
                            The service account being used for the encryption request for the
                            given KMS key. If absent, the Compute Engine default service
                            account is used.
                          type: string
                      type: object
                    type: array
                  labelFingerprint:
                    description: |-
                      The fingerprint used for optimistic locking of this resource. Used
                      internally during updates.
                    type: string
                  labels:
                    additionalProperties:
                      type: string
                    description: Labels to apply to this Image.
                    type: object
                    x-kubernetes-map-type: granular
                  licenses:
                    description: Any applicable license URI.
                    items:
                      type: string
                    type: array
                  project:
                    description: |-
                      The ID of the project in which the resource belongs.
                      If it is not provided, the provider project is used.
                    type: string
                  rawDisk:
                    description: |-
                      The parameters of the raw disk image.
                      Structure is documented below.
                    items:
                      properties:
                        containerType:
                          description: |-
                            The format used to encode and transmit the block device, which
                            should be TAR. This is just a container and transmission format
                            and not a runtime format. Provided by the client when the disk
                            image is created.
                            Default value is TAR.
                            Possible values are: TAR.
                          type: string
                        sha1:
                          description: |-
                            An optional SHA1 checksum of the disk image before unpackaging.
                            This is provided by the client when the disk image is created.
                          type: string
                        source:
                          description: |-
                            The full Google Cloud Storage URL where disk storage is stored
                            You must provide either this property or the sourceDisk property
                            but not both.
                          type: string
                      type: object
                    type: array
                  selfLink:
                    description: The URI of the created resource.
                    type: string
                  sourceDisk:
                    description: |-
                      The source disk to create this image based on.
                      You must provide either this property or the
                      rawDisk.source property but not both to create an image.
                    type: string
                  sourceImage:
                    description: |-
                      URL of the source image used to create this image. In order to create an image, you must provide the full or partial
                      URL of one of the following:
                    type: string
                  sourceSnapshot:
                    description: |-
                      URL of the source snapshot used to create this image.
                      In order to create an image, you must provide the full or partial URL of one of the following:
                    type: string
                  storageLocations:
                    description: |-
                      Cloud Storage bucket storage location of the image
                      (regional or multi-regional).
                      Reference link: https://cloud.google.com/compute/docs/reference/rest/v1/images
                    items:
                      type: string
                    type: array
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
