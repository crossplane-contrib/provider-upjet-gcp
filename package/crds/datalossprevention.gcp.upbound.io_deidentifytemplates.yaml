---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.11.1
  creationTimestamp: null
  name: deidentifytemplates.datalossprevention.gcp.upbound.io
spec:
  group: datalossprevention.gcp.upbound.io
  names:
    categories:
    - crossplane
    - managed
    - gcp
    kind: DeidentifyTemplate
    listKind: DeidentifyTemplateList
    plural: deidentifytemplates
    singular: deidentifytemplate
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: DeidentifyTemplate is the Schema for the DeidentifyTemplates
          API. Allows creation of templates to de-identify content.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: DeidentifyTemplateSpec defines the desired state of DeidentifyTemplate
            properties:
              deletionPolicy:
                default: Delete
                description: DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource.
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  deidentifyConfig:
                    description: Configuration of the deidentify template Structure
                      is documented below.
                    items:
                      properties:
                        infoTypeTransformations:
                          description: Treat the dataset as free-form text and apply
                            the same free text transformation everywhere Structure
                            is documented below.
                          items:
                            properties:
                              transformations:
                                description: Transformation for each infoType. Cannot
                                  specify more than one for a given infoType. Structure
                                  is documented below.
                                items:
                                  properties:
                                    infoTypes:
                                      description: InfoTypes to apply the transformation
                                        to. Leaving this empty will apply the transformation
                                        to apply to all findings that correspond to
                                        infoTypes that were requested in InspectConfig.
                                        Structure is documented below.
                                      items:
                                        properties:
                                          name:
                                            description: 'Name of the key. This is
                                              an arbitrary string used to differentiate
                                              different keys. A unique key is generated
                                              per name: two separate TransientCryptoKey
                                              protos share the same generated key
                                              if their names are the same. When the
                                              data crypto key is generated, this name
                                              is not used in any way (repeating the
                                              api call will result in a different
                                              key being generated).'
                                            type: string
                                        required:
                                        - name
                                        type: object
                                      type: array
                                    primitiveTransformation:
                                      description: Primitive transformation to apply
                                        to the infoType. The primitive_transformation
                                        block must only contain one argument, corresponding
                                        to the type of transformation. Structure is
                                        documented below.
                                      items:
                                        properties:
                                          characterMaskConfig:
                                            description: Partially mask a string by
                                              replacing a given number of characters
                                              with a fixed character. Masking can
                                              start from the beginning or end of the
                                              string. Structure is documented below.
                                            items:
                                              properties:
                                                charactersToIgnore:
                                                  items:
                                                    properties:
                                                      charactersToSkip:
                                                        description: Characters to
                                                          not transform when masking.
                                                        type: string
                                                      commonCharactersToIgnore:
                                                        description: Common characters
                                                          to not transform when masking.
                                                          Useful to avoid removing
                                                          punctuation. Possible values
                                                          are NUMERIC, ALPHA_UPPER_CASE,
                                                          ALPHA_LOWER_CASE, PUNCTUATION,
                                                          and WHITESPACE.
                                                        type: string
                                                    type: object
                                                  type: array
                                                maskingCharacter:
                                                  description: is *
                                                  type: string
                                                numberToMask:
                                                  description: "4"
                                                  type: number
                                                reverseOrder:
                                                  description: is false
                                                  type: boolean
                                              type: object
                                            type: array
                                          cryptoDeterministicConfig:
                                            description: Pseudonymization method that
                                              generates deterministic encryption for
                                              the given input. Outputs a base64 encoded
                                              representation of the encrypted output.
                                              Uses AES-SIV based on the RFC https://tools.ietf.org/html/rfc5297.
                                              Structure is documented below.
                                            items:
                                              properties:
                                                context:
                                                  description: Points to the field
                                                    that contains the context, for
                                                    example, an entity id. If set,
                                                    must also set cryptoKey. If set,
                                                    shift will be consistent for the
                                                    given context. Structure is documented
                                                    below.
                                                  items:
                                                    properties:
                                                      name:
                                                        description: 'Name of the
                                                          key. This is an arbitrary
                                                          string used to differentiate
                                                          different keys. A unique
                                                          key is generated per name:
                                                          two separate TransientCryptoKey
                                                          protos share the same generated
                                                          key if their names are the
                                                          same. When the data crypto
                                                          key is generated, this name
                                                          is not used in any way (repeating
                                                          the api call will result
                                                          in a different key being
                                                          generated).'
                                                        type: string
                                                    type: object
                                                  type: array
                                                cryptoKey:
                                                  description: Causes the shift to
                                                    be computed based on this key
                                                    and the context. This results
                                                    in the same shift for the same
                                                    context and cryptoKey. If set,
                                                    must also set context. Can only
                                                    be applied to table items. Structure
                                                    is documented below.
                                                  items:
                                                    properties:
                                                      kmsWrapped:
                                                        description: 'KMS wrapped
                                                          key. Include to use an existing
                                                          data crypto key wrapped
                                                          by KMS. The wrapped key
                                                          must be a 128-, 192-, or
                                                          256-bit key. Authorization
                                                          requires the following IAM
                                                          permissions when sending
                                                          a request to perform a crypto
                                                          transformation using a KMS-wrapped
                                                          crypto key: dlp.kms.encrypt
                                                          For more information, see
                                                          Creating a wrapped key.
                                                          Note: When you use Cloud
                                                          KMS for cryptographic operations,
                                                          charges apply. Structure
                                                          is documented below.'
                                                        items:
                                                          properties:
                                                            cryptoKeyName:
                                                              description: The resource
                                                                name of the KMS CryptoKey
                                                                to use for unwrapping.
                                                              type: string
                                                            wrappedKey:
                                                              description: The wrapped
                                                                data crypto key. A
                                                                base64-encoded string.
                                                              type: string
                                                          required:
                                                          - cryptoKeyName
                                                          - wrappedKey
                                                          type: object
                                                        type: array
                                                      transient:
                                                        description: Transient crypto
                                                          key. Use this to have a
                                                          random data crypto key generated.
                                                          It will be discarded after
                                                          the request finishes. Structure
                                                          is documented below.
                                                        items:
                                                          properties:
                                                            name:
                                                              description: 'Name of
                                                                the key. This is an
                                                                arbitrary string used
                                                                to differentiate different
                                                                keys. A unique key
                                                                is generated per name:
                                                                two separate TransientCryptoKey
                                                                protos share the same
                                                                generated key if their
                                                                names are the same.
                                                                When the data crypto
                                                                key is generated,
                                                                this name is not used
                                                                in any way (repeating
                                                                the api call will
                                                                result in a different
                                                                key being generated).'
                                                              type: string
                                                          required:
                                                          - name
                                                          type: object
                                                        type: array
                                                      unwrapped:
                                                        description: Unwrapped crypto
                                                          key. Using raw keys is prone
                                                          to security risks due to
                                                          accidentally leaking the
                                                          key. Choose another type
                                                          of key if possible. Structure
                                                          is documented below.
                                                        items:
                                                          properties:
                                                            key:
                                                              description: A 128/192/256
                                                                bit key. A base64-encoded
                                                                string.
                                                              type: string
                                                          required:
                                                          - key
                                                          type: object
                                                        type: array
                                                    type: object
                                                  type: array
                                                surrogateInfoType:
                                                  description: 'The custom infoType
                                                    to annotate the surrogate with.
                                                    This annotation will be applied
                                                    to the surrogate by prefixing
                                                    it with the name of the custom
                                                    infoType followed by the number
                                                    of characters comprising the surrogate.
                                                    The following scheme defines the
                                                    format: info_type_name(surrogate_character_count):surrogate
                                                    For example, if the name of custom
                                                    infoType is ''MY_TOKEN_INFO_TYPE''
                                                    and the surrogate is ''abc'',
                                                    the full replacement value will
                                                    be: ''MY_TOKEN_INFO_TYPE(3):abc''
                                                    This annotation identifies the
                                                    surrogate when inspecting content
                                                    using the custom infoType SurrogateType.
                                                    This facilitates reversal of the
                                                    surrogate when it occurs in free
                                                    text. In order for inspection
                                                    to work properly, the name of
                                                    this infoType must not occur naturally
                                                    anywhere in your data; otherwise,
                                                    inspection may find a surrogate
                                                    that does not correspond to an
                                                    actual identifier. Therefore,
                                                    choose your custom infoType name
                                                    carefully after considering what
                                                    your data looks like. One way
                                                    to select a name that has a high
                                                    chance of yielding reliable detection
                                                    is to include one or more unicode
                                                    characters that are highly improbable
                                                    to exist in your data. For example,
                                                    assuming your data is entered
                                                    from a regular ASCII keyboard,
                                                    the symbol with the hex code point
                                                    29DD might be used like so: ⧝MY_TOKEN_TYPE
                                                    Structure is documented below.'
                                                  items:
                                                    properties:
                                                      name:
                                                        description: 'Name of the
                                                          key. This is an arbitrary
                                                          string used to differentiate
                                                          different keys. A unique
                                                          key is generated per name:
                                                          two separate TransientCryptoKey
                                                          protos share the same generated
                                                          key if their names are the
                                                          same. When the data crypto
                                                          key is generated, this name
                                                          is not used in any way (repeating
                                                          the api call will result
                                                          in a different key being
                                                          generated).'
                                                        type: string
                                                      version:
                                                        description: Optional version
                                                          name for this InfoType.
                                                        type: string
                                                    type: object
                                                  type: array
                                              type: object
                                            type: array
                                          cryptoReplaceFfxFpeConfig:
                                            description: 'Replaces an identifier with
                                              a surrogate using Format Preserving
                                              Encryption (FPE) with the FFX mode of
                                              operation; however when used in the
                                              content.reidentify API method, it serves
                                              the opposite function by reversing the
                                              surrogate back into the original identifier.
                                              The identifier must be encoded as ASCII.
                                              For a given crypto key and context,
                                              the same identifier will be replaced
                                              with the same surrogate. Identifiers
                                              must be at least two characters long.
                                              In the case that the identifier is the
                                              empty string, it will be skipped. See
                                              https://cloud.google.com/dlp/docs/pseudonymization
                                              to learn more. Note: We recommend using
                                              CryptoDeterministicConfig for all use
                                              cases which do not require preserving
                                              the input alphabet space and size, plus
                                              warrant referential integrity. Structure
                                              is documented below.'
                                            items:
                                              properties:
                                                commonAlphabet:
                                                  description: Common alphabets. Possible
                                                    values are FFX_COMMON_NATIVE_ALPHABET_UNSPECIFIED,
                                                    NUMERIC, HEXADECIMAL, UPPER_CASE_ALPHA_NUMERIC,
                                                    and ALPHA_NUMERIC.
                                                  type: string
                                                context:
                                                  description: Points to the field
                                                    that contains the context, for
                                                    example, an entity id. If set,
                                                    must also set cryptoKey. If set,
                                                    shift will be consistent for the
                                                    given context. Structure is documented
                                                    below.
                                                  items:
                                                    properties:
                                                      name:
                                                        description: 'Name of the
                                                          key. This is an arbitrary
                                                          string used to differentiate
                                                          different keys. A unique
                                                          key is generated per name:
                                                          two separate TransientCryptoKey
                                                          protos share the same generated
                                                          key if their names are the
                                                          same. When the data crypto
                                                          key is generated, this name
                                                          is not used in any way (repeating
                                                          the api call will result
                                                          in a different key being
                                                          generated).'
                                                        type: string
                                                    type: object
                                                  type: array
                                                cryptoKey:
                                                  description: Causes the shift to
                                                    be computed based on this key
                                                    and the context. This results
                                                    in the same shift for the same
                                                    context and cryptoKey. If set,
                                                    must also set context. Can only
                                                    be applied to table items. Structure
                                                    is documented below.
                                                  items:
                                                    properties:
                                                      kmsWrapped:
                                                        description: 'KMS wrapped
                                                          key. Include to use an existing
                                                          data crypto key wrapped
                                                          by KMS. The wrapped key
                                                          must be a 128-, 192-, or
                                                          256-bit key. Authorization
                                                          requires the following IAM
                                                          permissions when sending
                                                          a request to perform a crypto
                                                          transformation using a KMS-wrapped
                                                          crypto key: dlp.kms.encrypt
                                                          For more information, see
                                                          Creating a wrapped key.
                                                          Note: When you use Cloud
                                                          KMS for cryptographic operations,
                                                          charges apply. Structure
                                                          is documented below.'
                                                        items:
                                                          properties:
                                                            cryptoKeyName:
                                                              description: The resource
                                                                name of the KMS CryptoKey
                                                                to use for unwrapping.
                                                              type: string
                                                            wrappedKey:
                                                              description: The wrapped
                                                                data crypto key. A
                                                                base64-encoded string.
                                                              type: string
                                                          required:
                                                          - cryptoKeyName
                                                          - wrappedKey
                                                          type: object
                                                        type: array
                                                      transient:
                                                        description: Transient crypto
                                                          key. Use this to have a
                                                          random data crypto key generated.
                                                          It will be discarded after
                                                          the request finishes. Structure
                                                          is documented below.
                                                        items:
                                                          properties:
                                                            name:
                                                              description: 'Name of
                                                                the key. This is an
                                                                arbitrary string used
                                                                to differentiate different
                                                                keys. A unique key
                                                                is generated per name:
                                                                two separate TransientCryptoKey
                                                                protos share the same
                                                                generated key if their
                                                                names are the same.
                                                                When the data crypto
                                                                key is generated,
                                                                this name is not used
                                                                in any way (repeating
                                                                the api call will
                                                                result in a different
                                                                key being generated).'
                                                              type: string
                                                          required:
                                                          - name
                                                          type: object
                                                        type: array
                                                      unwrapped:
                                                        description: Unwrapped crypto
                                                          key. Using raw keys is prone
                                                          to security risks due to
                                                          accidentally leaking the
                                                          key. Choose another type
                                                          of key if possible. Structure
                                                          is documented below.
                                                        items:
                                                          properties:
                                                            key:
                                                              description: A 128/192/256
                                                                bit key. A base64-encoded
                                                                string.
                                                              type: string
                                                          required:
                                                          - key
                                                          type: object
                                                        type: array
                                                    type: object
                                                  type: array
                                                customAlphabet:
                                                  description: 'This is supported
                                                    by mapping these to the alphanumeric
                                                    characters that the FFX mode natively
                                                    supports. This happens before/after
                                                    encryption/decryption. Each character
                                                    listed must appear only once.
                                                    Number of characters must be in
                                                    the range [2, 95]. This must be
                                                    encoded as ASCII. The order of
                                                    characters does not matter. The
                                                    full list of allowed characters
                                                    is: 0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz
                                                    ~`!@#$%^&*()_-+={[}]|:;"''<,>.?/'
                                                  type: string
                                                radix:
                                                  description: The native way to select
                                                    the alphabet. Must be in the range
                                                    [2, 95].
                                                  type: number
                                                surrogateInfoType:
                                                  description: 'The custom infoType
                                                    to annotate the surrogate with.
                                                    This annotation will be applied
                                                    to the surrogate by prefixing
                                                    it with the name of the custom
                                                    infoType followed by the number
                                                    of characters comprising the surrogate.
                                                    The following scheme defines the
                                                    format: info_type_name(surrogate_character_count):surrogate
                                                    For example, if the name of custom
                                                    infoType is ''MY_TOKEN_INFO_TYPE''
                                                    and the surrogate is ''abc'',
                                                    the full replacement value will
                                                    be: ''MY_TOKEN_INFO_TYPE(3):abc''
                                                    This annotation identifies the
                                                    surrogate when inspecting content
                                                    using the custom infoType SurrogateType.
                                                    This facilitates reversal of the
                                                    surrogate when it occurs in free
                                                    text. In order for inspection
                                                    to work properly, the name of
                                                    this infoType must not occur naturally
                                                    anywhere in your data; otherwise,
                                                    inspection may find a surrogate
                                                    that does not correspond to an
                                                    actual identifier. Therefore,
                                                    choose your custom infoType name
                                                    carefully after considering what
                                                    your data looks like. One way
                                                    to select a name that has a high
                                                    chance of yielding reliable detection
                                                    is to include one or more unicode
                                                    characters that are highly improbable
                                                    to exist in your data. For example,
                                                    assuming your data is entered
                                                    from a regular ASCII keyboard,
                                                    the symbol with the hex code point
                                                    29DD might be used like so: ⧝MY_TOKEN_TYPE
                                                    Structure is documented below.'
                                                  items:
                                                    properties:
                                                      name:
                                                        description: 'Name of the
                                                          key. This is an arbitrary
                                                          string used to differentiate
                                                          different keys. A unique
                                                          key is generated per name:
                                                          two separate TransientCryptoKey
                                                          protos share the same generated
                                                          key if their names are the
                                                          same. When the data crypto
                                                          key is generated, this name
                                                          is not used in any way (repeating
                                                          the api call will result
                                                          in a different key being
                                                          generated).'
                                                        type: string
                                                      version:
                                                        description: Optional version
                                                          name for this InfoType.
                                                        type: string
                                                    type: object
                                                  type: array
                                              type: object
                                            type: array
                                          replaceConfig:
                                            description: Replace each input value
                                              with a given value. Structure is documented
                                              below.
                                            items:
                                              properties:
                                                newValue:
                                                  description: Replace each input
                                                    value with a given value. The
                                                    new_value block must only contain
                                                    one argument. For example when
                                                    replacing the contents of a string-type
                                                    field, only string_value should
                                                    be set. Structure is documented
                                                    below.
                                                  items:
                                                    properties:
                                                      booleanValue:
                                                        description: A boolean value.
                                                        type: boolean
                                                      dateValue:
                                                        description: Represents a
                                                          whole or partial calendar
                                                          date. Structure is documented
                                                          below.
                                                        items:
                                                          properties:
                                                            day:
                                                              description: Day of
                                                                month. Must be from
                                                                1 to 31 and valid
                                                                for the year and month,
                                                                or 0 if specifying
                                                                a year by itself or
                                                                a year and month where
                                                                the day is not significant.
                                                              type: number
                                                            month:
                                                              description: Month of
                                                                year. Must be from
                                                                1 to 12, or 0 if specifying
                                                                a year without a month
                                                                and day.
                                                              type: number
                                                            year:
                                                              description: Year of
                                                                date. Must be from
                                                                1 to 9999, or 0 if
                                                                specifying a date
                                                                without a year.
                                                              type: number
                                                          type: object
                                                        type: array
                                                      dayOfWeekValue:
                                                        description: Represents a
                                                          day of the week. Possible
                                                          values are MONDAY, TUESDAY,
                                                          WEDNESDAY, THURSDAY, FRIDAY,
                                                          SATURDAY, and SUNDAY.
                                                        type: string
                                                      floatValue:
                                                        description: A float value.
                                                        type: number
                                                      integerValue:
                                                        description: An integer value
                                                          (int64 format)
                                                        type: number
                                                      stringValue:
                                                        description: A string value.
                                                        type: string
                                                      timeValue:
                                                        description: Represents a
                                                          time of day. Structure is
                                                          documented below.
                                                        items:
                                                          properties:
                                                            hours:
                                                              description: Hours of
                                                                day in 24 hour format.
                                                                Should be from 0 to
                                                                23.
                                                              type: number
                                                            minutes:
                                                              description: Minutes
                                                                of hour of day. Must
                                                                be from 0 to 59.
                                                              type: number
                                                            nanos:
                                                              description: Fractions
                                                                of seconds in nanoseconds.
                                                                Must be from 0 to
                                                                999,999,999.
                                                              type: number
                                                            seconds:
                                                              description: Seconds
                                                                of minutes of the
                                                                time. Must normally
                                                                be from 0 to 59.
                                                              type: number
                                                          type: object
                                                        type: array
                                                      timestampValue:
                                                        description: 'A timestamp
                                                          in RFC3339 UTC "Zulu" format,
                                                          with nanosecond resolution
                                                          and up to nine fractional
                                                          digits. Examples: "2014-10-02T15:01:23Z"
                                                          and "2014-10-02T15:01:23.045123456Z".'
                                                        type: string
                                                    type: object
                                                  type: array
                                              required:
                                              - newValue
                                              type: object
                                            type: array
                                          replaceWithInfoTypeConfig:
                                            description: Replace each matching finding
                                              with the name of the info type.
                                            type: boolean
                                        type: object
                                      type: array
                                  required:
                                  - primitiveTransformation
                                  type: object
                                type: array
                            required:
                            - transformations
                            type: object
                          type: array
                        recordTransformations:
                          description: Treat the dataset as structured. Transformations
                            can be applied to specific locations within structured
                            datasets, such as transforming a column within a table.
                            Structure is documented below.
                          items:
                            properties:
                              fieldTransformations:
                                description: Transform the record by applying various
                                  field transformations. Structure is documented below.
                                items:
                                  properties:
                                    condition:
                                      description: A condition that when it evaluates
                                        to true will result in the record being evaluated
                                        to be suppressed from the transformed content.
                                        Structure is documented below.
                                      items:
                                        properties:
                                          expressions:
                                            description: An expression, consisting
                                              of an operator and conditions. Structure
                                              is documented below.
                                            items:
                                              properties:
                                                conditions:
                                                  description: Conditions to apply
                                                    to the expression. Structure is
                                                    documented below.
                                                  items:
                                                    properties:
                                                      conditions:
                                                        description: Conditions to
                                                          apply to the expression.
                                                          Structure is documented
                                                          below.
                                                        items:
                                                          properties:
                                                            field:
                                                              description: Field within
                                                                the record this condition
                                                                is evaluated against.
                                                                Structure is documented
                                                                below.
                                                              items:
                                                                properties:
                                                                  name:
                                                                    description: 'Name
                                                                      of the key.
                                                                      This is an arbitrary
                                                                      string used
                                                                      to differentiate
                                                                      different keys.
                                                                      A unique key
                                                                      is generated
                                                                      per name: two
                                                                      separate TransientCryptoKey
                                                                      protos share
                                                                      the same generated
                                                                      key if their
                                                                      names are the
                                                                      same. When the
                                                                      data crypto
                                                                      key is generated,
                                                                      this name is
                                                                      not used in
                                                                      any way (repeating
                                                                      the api call
                                                                      will result
                                                                      in a different
                                                                      key being generated).'
                                                                    type: string
                                                                type: object
                                                              type: array
                                                            operator:
                                                              description: Operator
                                                                used to compare the
                                                                field or infoType
                                                                to the value. Possible
                                                                values are EQUAL_TO,
                                                                NOT_EQUAL_TO, GREATER_THAN,
                                                                LESS_THAN, GREATER_THAN_OR_EQUALS,
                                                                LESS_THAN_OR_EQUALS,
                                                                and EXISTS.
                                                              type: string
                                                            value:
                                                              description: Value to
                                                                compare against. The
                                                                value block must only
                                                                contain one argument.
                                                                For example when a
                                                                condition is evaluated
                                                                against a string-type
                                                                field, only string_value
                                                                should be set. This
                                                                argument is mandatory,
                                                                except for conditions
                                                                using the EXISTS operator.
                                                                Structure is documented
                                                                below.
                                                              items:
                                                                properties:
                                                                  booleanValue:
                                                                    description: A
                                                                      boolean value.
                                                                    type: boolean
                                                                  dateValue:
                                                                    description: Represents
                                                                      a whole or partial
                                                                      calendar date.
                                                                      Structure is
                                                                      documented below.
                                                                    items:
                                                                      properties:
                                                                        day:
                                                                          description: Day
                                                                            of month.
                                                                            Must be
                                                                            from 1
                                                                            to 31
                                                                            and valid
                                                                            for the
                                                                            year and
                                                                            month,
                                                                            or 0 if
                                                                            specifying
                                                                            a year
                                                                            by itself
                                                                            or a year
                                                                            and month
                                                                            where
                                                                            the day
                                                                            is not
                                                                            significant.
                                                                          type: number
                                                                        month:
                                                                          description: Month
                                                                            of year.
                                                                            Must be
                                                                            from 1
                                                                            to 12,
                                                                            or 0 if
                                                                            specifying
                                                                            a year
                                                                            without
                                                                            a month
                                                                            and day.
                                                                          type: number
                                                                        year:
                                                                          description: Year
                                                                            of date.
                                                                            Must be
                                                                            from 1
                                                                            to 9999,
                                                                            or 0 if
                                                                            specifying
                                                                            a date
                                                                            without
                                                                            a year.
                                                                          type: number
                                                                      type: object
                                                                    type: array
                                                                  dayOfWeekValue:
                                                                    description: Represents
                                                                      a day of the
                                                                      week. Possible
                                                                      values are MONDAY,
                                                                      TUESDAY, WEDNESDAY,
                                                                      THURSDAY, FRIDAY,
                                                                      SATURDAY, and
                                                                      SUNDAY.
                                                                    type: string
                                                                  floatValue:
                                                                    description: A
                                                                      float value.
                                                                    type: number
                                                                  integerValue:
                                                                    description: An
                                                                      integer value
                                                                      (int64 format)
                                                                    type: string
                                                                  stringValue:
                                                                    description: A
                                                                      string value.
                                                                    type: string
                                                                  timeValue:
                                                                    description: Represents
                                                                      a time of day.
                                                                      Structure is
                                                                      documented below.
                                                                    items:
                                                                      properties:
                                                                        hours:
                                                                          description: Hours
                                                                            of day
                                                                            in 24
                                                                            hour format.
                                                                            Should
                                                                            be from
                                                                            0 to 23.
                                                                          type: number
                                                                        minutes:
                                                                          description: Minutes
                                                                            of hour
                                                                            of day.
                                                                            Must be
                                                                            from 0
                                                                            to 59.
                                                                          type: number
                                                                        nanos:
                                                                          description: Fractions
                                                                            of seconds
                                                                            in nanoseconds.
                                                                            Must be
                                                                            from 0
                                                                            to 999,999,999.
                                                                          type: number
                                                                        seconds:
                                                                          description: Seconds
                                                                            of minutes
                                                                            of the
                                                                            time.
                                                                            Must normally
                                                                            be from
                                                                            0 to 59.
                                                                          type: number
                                                                      type: object
                                                                    type: array
                                                                  timestampValue:
                                                                    description: 'A
                                                                      timestamp in
                                                                      RFC3339 UTC
                                                                      "Zulu" format,
                                                                      with nanosecond
                                                                      resolution and
                                                                      up to nine fractional
                                                                      digits. Examples:
                                                                      "2014-10-02T15:01:23Z"
                                                                      and "2014-10-02T15:01:23.045123456Z".'
                                                                    type: string
                                                                type: object
                                                              type: array
                                                          required:
                                                          - field
                                                          - operator
                                                          type: object
                                                        type: array
                                                    type: object
                                                  type: array
                                                logicalOperator:
                                                  description: The operator to apply
                                                    to the result of conditions. Default
                                                    and currently only supported value
                                                    is AND. Default value is AND.
                                                    Possible values are AND.
                                                  type: string
                                              type: object
                                            type: array
                                        type: object
                                      type: array
                                    fields:
                                      description: Input field(s) to apply the transformation
                                        to. When you have columns that reference their
                                        position within a list, omit the index from
                                        the FieldId. FieldId name matching ignores
                                        the index. For example, instead of "contact.nums[0].type",
                                        use "contact.nums.type". Structure is documented
                                        below.
                                      items:
                                        properties:
                                          name:
                                            description: 'Name of the key. This is
                                              an arbitrary string used to differentiate
                                              different keys. A unique key is generated
                                              per name: two separate TransientCryptoKey
                                              protos share the same generated key
                                              if their names are the same. When the
                                              data crypto key is generated, this name
                                              is not used in any way (repeating the
                                              api call will result in a different
                                              key being generated).'
                                            type: string
                                        type: object
                                      type: array
                                    primitiveTransformation:
                                      description: Primitive transformation to apply
                                        to the infoType. The primitive_transformation
                                        block must only contain one argument, corresponding
                                        to the type of transformation. Structure is
                                        documented below.
                                      items:
                                        properties:
                                          bucketingConfig:
                                            description: 'Generalization function
                                              that buckets values based on ranges.
                                              The ranges and replacement values are
                                              dynamically provided by the user for
                                              custom behavior, such as 1-30 -> LOW
                                              31-65 -> MEDIUM 66-100 -> HIGH This
                                              can be used on data of type: number,
                                              long, string, timestamp. If the provided
                                              value type differs from the type of
                                              data being transformed, we will first
                                              attempt converting the type of the data
                                              to be transformed to match the type
                                              of the bound before comparing. See https://cloud.google.com/dlp/docs/concepts-bucketing
                                              to learn more. Structure is documented
                                              below.'
                                            items:
                                              properties:
                                                buckets:
                                                  description: Set of buckets. Ranges
                                                    must be non-overlapping. Bucket
                                                    is represented as a range, along
                                                    with replacement values. Structure
                                                    is documented below.
                                                  items:
                                                    properties:
                                                      max:
                                                        description: Upper bound of
                                                          the range, exclusive; type
                                                          must match min. The max
                                                          block must only contain
                                                          one argument. See the bucketing_config
                                                          block description for more
                                                          information about choosing
                                                          a data type. Structure is
                                                          documented below.
                                                        items:
                                                          properties:
                                                            booleanValue:
                                                              description: A boolean
                                                                value.
                                                              type: boolean
                                                            dateValue:
                                                              description: Represents
                                                                a whole or partial
                                                                calendar date. Structure
                                                                is documented below.
                                                              items:
                                                                properties:
                                                                  day:
                                                                    description: Day
                                                                      of month. Must
                                                                      be from 1 to
                                                                      31 and valid
                                                                      for the year
                                                                      and month, or
                                                                      0 if specifying
                                                                      a year by itself
                                                                      or a year and
                                                                      month where
                                                                      the day is not
                                                                      significant.
                                                                    type: number
                                                                  month:
                                                                    description: Month
                                                                      of year. Must
                                                                      be from 1 to
                                                                      12, or 0 if
                                                                      specifying a
                                                                      year without
                                                                      a month and
                                                                      day.
                                                                    type: number
                                                                  year:
                                                                    description: Year
                                                                      of date. Must
                                                                      be from 1 to
                                                                      9999, or 0 if
                                                                      specifying a
                                                                      date without
                                                                      a year.
                                                                    type: number
                                                                type: object
                                                              type: array
                                                            dayOfWeekValue:
                                                              description: Represents
                                                                a day of the week.
                                                                Possible values are
                                                                MONDAY, TUESDAY, WEDNESDAY,
                                                                THURSDAY, FRIDAY,
                                                                SATURDAY, and SUNDAY.
                                                              type: string
                                                            floatValue:
                                                              description: A float
                                                                value.
                                                              type: number
                                                            integerValue:
                                                              description: An integer
                                                                value (int64 format)
                                                              type: string
                                                            stringValue:
                                                              description: A string
                                                                value.
                                                              type: string
                                                            timeValue:
                                                              description: Represents
                                                                a time of day. Structure
                                                                is documented below.
                                                              items:
                                                                properties:
                                                                  hours:
                                                                    description: Hours
                                                                      of day in 24
                                                                      hour format.
                                                                      Should be from
                                                                      0 to 23.
                                                                    type: number
                                                                  minutes:
                                                                    description: Minutes
                                                                      of hour of day.
                                                                      Must be from
                                                                      0 to 59.
                                                                    type: number
                                                                  nanos:
                                                                    description: Fractions
                                                                      of seconds in
                                                                      nanoseconds.
                                                                      Must be from
                                                                      0 to 999,999,999.
                                                                    type: number
                                                                  seconds:
                                                                    description: Seconds
                                                                      of minutes of
                                                                      the time. Must
                                                                      normally be
                                                                      from 0 to 59.
                                                                    type: number
                                                                type: object
                                                              type: array
                                                            timestampValue:
                                                              description: 'A timestamp
                                                                in RFC3339 UTC "Zulu"
                                                                format, with nanosecond
                                                                resolution and up
                                                                to nine fractional
                                                                digits. Examples:
                                                                "2014-10-02T15:01:23Z"
                                                                and "2014-10-02T15:01:23.045123456Z".'
                                                              type: string
                                                          type: object
                                                        type: array
                                                      min:
                                                        description: Lower bound of
                                                          the range, inclusive. Type
                                                          should be the same as max
                                                          if used. The min block must
                                                          only contain one argument.
                                                          See the bucketing_config
                                                          block description for more
                                                          information about choosing
                                                          a data type. Structure is
                                                          documented below.
                                                        items:
                                                          properties:
                                                            booleanValue:
                                                              description: A boolean
                                                                value.
                                                              type: boolean
                                                            dateValue:
                                                              description: Represents
                                                                a whole or partial
                                                                calendar date. Structure
                                                                is documented below.
                                                              items:
                                                                properties:
                                                                  day:
                                                                    description: Day
                                                                      of month. Must
                                                                      be from 1 to
                                                                      31 and valid
                                                                      for the year
                                                                      and month, or
                                                                      0 if specifying
                                                                      a year by itself
                                                                      or a year and
                                                                      month where
                                                                      the day is not
                                                                      significant.
                                                                    type: number
                                                                  month:
                                                                    description: Month
                                                                      of year. Must
                                                                      be from 1 to
                                                                      12, or 0 if
                                                                      specifying a
                                                                      year without
                                                                      a month and
                                                                      day.
                                                                    type: number
                                                                  year:
                                                                    description: Year
                                                                      of date. Must
                                                                      be from 1 to
                                                                      9999, or 0 if
                                                                      specifying a
                                                                      date without
                                                                      a year.
                                                                    type: number
                                                                type: object
                                                              type: array
                                                            dayOfWeekValue:
                                                              description: Represents
                                                                a day of the week.
                                                                Possible values are
                                                                MONDAY, TUESDAY, WEDNESDAY,
                                                                THURSDAY, FRIDAY,
                                                                SATURDAY, and SUNDAY.
                                                              type: string
                                                            floatValue:
                                                              description: A float
                                                                value.
                                                              type: number
                                                            integerValue:
                                                              description: An integer
                                                                value (int64 format)
                                                              type: string
                                                            stringValue:
                                                              description: A string
                                                                value.
                                                              type: string
                                                            timeValue:
                                                              description: Represents
                                                                a time of day. Structure
                                                                is documented below.
                                                              items:
                                                                properties:
                                                                  hours:
                                                                    description: Hours
                                                                      of day in 24
                                                                      hour format.
                                                                      Should be from
                                                                      0 to 23.
                                                                    type: number
                                                                  minutes:
                                                                    description: Minutes
                                                                      of hour of day.
                                                                      Must be from
                                                                      0 to 59.
                                                                    type: number
                                                                  nanos:
                                                                    description: Fractions
                                                                      of seconds in
                                                                      nanoseconds.
                                                                      Must be from
                                                                      0 to 999,999,999.
                                                                    type: number
                                                                  seconds:
                                                                    description: Seconds
                                                                      of minutes of
                                                                      the time. Must
                                                                      normally be
                                                                      from 0 to 59.
                                                                    type: number
                                                                type: object
                                                              type: array
                                                            timestampValue:
                                                              description: 'A timestamp
                                                                in RFC3339 UTC "Zulu"
                                                                format, with nanosecond
                                                                resolution and up
                                                                to nine fractional
                                                                digits. Examples:
                                                                "2014-10-02T15:01:23Z"
                                                                and "2014-10-02T15:01:23.045123456Z".'
                                                              type: string
                                                          type: object
                                                        type: array
                                                      replacementValue:
                                                        description: Replacement value
                                                          for this bucket. The replacement_value
                                                          block must only contain
                                                          one argument. Structure
                                                          is documented below.
                                                        items:
                                                          properties:
                                                            booleanValue:
                                                              description: A boolean
                                                                value.
                                                              type: boolean
                                                            dateValue:
                                                              description: Represents
                                                                a whole or partial
                                                                calendar date. Structure
                                                                is documented below.
                                                              items:
                                                                properties:
                                                                  day:
                                                                    description: Day
                                                                      of month. Must
                                                                      be from 1 to
                                                                      31 and valid
                                                                      for the year
                                                                      and month, or
                                                                      0 if specifying
                                                                      a year by itself
                                                                      or a year and
                                                                      month where
                                                                      the day is not
                                                                      significant.
                                                                    type: number
                                                                  month:
                                                                    description: Month
                                                                      of year. Must
                                                                      be from 1 to
                                                                      12, or 0 if
                                                                      specifying a
                                                                      year without
                                                                      a month and
                                                                      day.
                                                                    type: number
                                                                  year:
                                                                    description: Year
                                                                      of date. Must
                                                                      be from 1 to
                                                                      9999, or 0 if
                                                                      specifying a
                                                                      date without
                                                                      a year.
                                                                    type: number
                                                                type: object
                                                              type: array
                                                            dayOfWeekValue:
                                                              description: Represents
                                                                a day of the week.
                                                                Possible values are
                                                                MONDAY, TUESDAY, WEDNESDAY,
                                                                THURSDAY, FRIDAY,
                                                                SATURDAY, and SUNDAY.
                                                              type: string
                                                            floatValue:
                                                              description: A float
                                                                value.
                                                              type: number
                                                            integerValue:
                                                              description: An integer
                                                                value (int64 format)
                                                              type: string
                                                            stringValue:
                                                              description: A string
                                                                value.
                                                              type: string
                                                            timeValue:
                                                              description: Represents
                                                                a time of day. Structure
                                                                is documented below.
                                                              items:
                                                                properties:
                                                                  hours:
                                                                    description: Hours
                                                                      of day in 24
                                                                      hour format.
                                                                      Should be from
                                                                      0 to 23.
                                                                    type: number
                                                                  minutes:
                                                                    description: Minutes
                                                                      of hour of day.
                                                                      Must be from
                                                                      0 to 59.
                                                                    type: number
                                                                  nanos:
                                                                    description: Fractions
                                                                      of seconds in
                                                                      nanoseconds.
                                                                      Must be from
                                                                      0 to 999,999,999.
                                                                    type: number
                                                                  seconds:
                                                                    description: Seconds
                                                                      of minutes of
                                                                      the time. Must
                                                                      normally be
                                                                      from 0 to 59.
                                                                    type: number
                                                                type: object
                                                              type: array
                                                            timestampValue:
                                                              description: 'A timestamp
                                                                in RFC3339 UTC "Zulu"
                                                                format, with nanosecond
                                                                resolution and up
                                                                to nine fractional
                                                                digits. Examples:
                                                                "2014-10-02T15:01:23Z"
                                                                and "2014-10-02T15:01:23.045123456Z".'
                                                              type: string
                                                          type: object
                                                        type: array
                                                    required:
                                                    - replacementValue
                                                    type: object
                                                  type: array
                                              type: object
                                            type: array
                                          characterMaskConfig:
                                            description: Partially mask a string by
                                              replacing a given number of characters
                                              with a fixed character. Masking can
                                              start from the beginning or end of the
                                              string. Structure is documented below.
                                            items:
                                              properties:
                                                charactersToIgnore:
                                                  items:
                                                    properties:
                                                      charactersToSkip:
                                                        description: Characters to
                                                          not transform when masking.
                                                        type: string
                                                      commonCharactersToIgnore:
                                                        description: Common characters
                                                          to not transform when masking.
                                                          Useful to avoid removing
                                                          punctuation. Possible values
                                                          are NUMERIC, ALPHA_UPPER_CASE,
                                                          ALPHA_LOWER_CASE, PUNCTUATION,
                                                          and WHITESPACE.
                                                        type: string
                                                    type: object
                                                  type: array
                                                maskingCharacter:
                                                  description: is *
                                                  type: string
                                                numberToMask:
                                                  description: "4"
                                                  type: number
                                                reverseOrder:
                                                  description: is false
                                                  type: boolean
                                              type: object
                                            type: array
                                          cryptoDeterministicConfig:
                                            description: Pseudonymization method that
                                              generates deterministic encryption for
                                              the given input. Outputs a base64 encoded
                                              representation of the encrypted output.
                                              Uses AES-SIV based on the RFC https://tools.ietf.org/html/rfc5297.
                                              Structure is documented below.
                                            items:
                                              properties:
                                                context:
                                                  description: Points to the field
                                                    that contains the context, for
                                                    example, an entity id. If set,
                                                    must also set cryptoKey. If set,
                                                    shift will be consistent for the
                                                    given context. Structure is documented
                                                    below.
                                                  items:
                                                    properties:
                                                      name:
                                                        description: 'Name of the
                                                          key. This is an arbitrary
                                                          string used to differentiate
                                                          different keys. A unique
                                                          key is generated per name:
                                                          two separate TransientCryptoKey
                                                          protos share the same generated
                                                          key if their names are the
                                                          same. When the data crypto
                                                          key is generated, this name
                                                          is not used in any way (repeating
                                                          the api call will result
                                                          in a different key being
                                                          generated).'
                                                        type: string
                                                    type: object
                                                  type: array
                                                cryptoKey:
                                                  description: Causes the shift to
                                                    be computed based on this key
                                                    and the context. This results
                                                    in the same shift for the same
                                                    context and cryptoKey. If set,
                                                    must also set context. Can only
                                                    be applied to table items. Structure
                                                    is documented below.
                                                  items:
                                                    properties:
                                                      kmsWrapped:
                                                        description: 'KMS wrapped
                                                          key. Include to use an existing
                                                          data crypto key wrapped
                                                          by KMS. The wrapped key
                                                          must be a 128-, 192-, or
                                                          256-bit key. Authorization
                                                          requires the following IAM
                                                          permissions when sending
                                                          a request to perform a crypto
                                                          transformation using a KMS-wrapped
                                                          crypto key: dlp.kms.encrypt
                                                          For more information, see
                                                          Creating a wrapped key.
                                                          Note: When you use Cloud
                                                          KMS for cryptographic operations,
                                                          charges apply. Structure
                                                          is documented below.'
                                                        items:
                                                          properties:
                                                            cryptoKeyName:
                                                              description: The resource
                                                                name of the KMS CryptoKey
                                                                to use for unwrapping.
                                                              type: string
                                                            wrappedKey:
                                                              description: The wrapped
                                                                data crypto key. A
                                                                base64-encoded string.
                                                              type: string
                                                          required:
                                                          - cryptoKeyName
                                                          - wrappedKey
                                                          type: object
                                                        type: array
                                                      transient:
                                                        description: Transient crypto
                                                          key. Use this to have a
                                                          random data crypto key generated.
                                                          It will be discarded after
                                                          the request finishes. Structure
                                                          is documented below.
                                                        items:
                                                          properties:
                                                            name:
                                                              description: 'Name of
                                                                the key. This is an
                                                                arbitrary string used
                                                                to differentiate different
                                                                keys. A unique key
                                                                is generated per name:
                                                                two separate TransientCryptoKey
                                                                protos share the same
                                                                generated key if their
                                                                names are the same.
                                                                When the data crypto
                                                                key is generated,
                                                                this name is not used
                                                                in any way (repeating
                                                                the api call will
                                                                result in a different
                                                                key being generated).'
                                                              type: string
                                                          required:
                                                          - name
                                                          type: object
                                                        type: array
                                                      unwrapped:
                                                        description: Unwrapped crypto
                                                          key. Using raw keys is prone
                                                          to security risks due to
                                                          accidentally leaking the
                                                          key. Choose another type
                                                          of key if possible. Structure
                                                          is documented below.
                                                        items:
                                                          properties:
                                                            key:
                                                              description: A 128/192/256
                                                                bit key. A base64-encoded
                                                                string.
                                                              type: string
                                                          required:
                                                          - key
                                                          type: object
                                                        type: array
                                                    type: object
                                                  type: array
                                                surrogateInfoType:
                                                  description: 'The custom infoType
                                                    to annotate the surrogate with.
                                                    This annotation will be applied
                                                    to the surrogate by prefixing
                                                    it with the name of the custom
                                                    infoType followed by the number
                                                    of characters comprising the surrogate.
                                                    The following scheme defines the
                                                    format: info_type_name(surrogate_character_count):surrogate
                                                    For example, if the name of custom
                                                    infoType is ''MY_TOKEN_INFO_TYPE''
                                                    and the surrogate is ''abc'',
                                                    the full replacement value will
                                                    be: ''MY_TOKEN_INFO_TYPE(3):abc''
                                                    This annotation identifies the
                                                    surrogate when inspecting content
                                                    using the custom infoType SurrogateType.
                                                    This facilitates reversal of the
                                                    surrogate when it occurs in free
                                                    text. In order for inspection
                                                    to work properly, the name of
                                                    this infoType must not occur naturally
                                                    anywhere in your data; otherwise,
                                                    inspection may find a surrogate
                                                    that does not correspond to an
                                                    actual identifier. Therefore,
                                                    choose your custom infoType name
                                                    carefully after considering what
                                                    your data looks like. One way
                                                    to select a name that has a high
                                                    chance of yielding reliable detection
                                                    is to include one or more unicode
                                                    characters that are highly improbable
                                                    to exist in your data. For example,
                                                    assuming your data is entered
                                                    from a regular ASCII keyboard,
                                                    the symbol with the hex code point
                                                    29DD might be used like so: ⧝MY_TOKEN_TYPE
                                                    Structure is documented below.'
                                                  items:
                                                    properties:
                                                      name:
                                                        description: 'Name of the
                                                          key. This is an arbitrary
                                                          string used to differentiate
                                                          different keys. A unique
                                                          key is generated per name:
                                                          two separate TransientCryptoKey
                                                          protos share the same generated
                                                          key if their names are the
                                                          same. When the data crypto
                                                          key is generated, this name
                                                          is not used in any way (repeating
                                                          the api call will result
                                                          in a different key being
                                                          generated).'
                                                        type: string
                                                      version:
                                                        description: Optional version
                                                          name for this InfoType.
                                                        type: string
                                                    type: object
                                                  type: array
                                              type: object
                                            type: array
                                          cryptoHashConfig:
                                            description: Pseudonymization method that
                                              generates surrogates via cryptographic
                                              hashing. Uses SHA-256. The key size
                                              must be either 32 or 64 bytes. Outputs
                                              a base64 encoded representation of the
                                              hashed output (for example, L7k0BHmF1ha5U3NfGykjro4xWi1MPVQPjhMAZbSV9mM=).
                                              Currently, only string and integer values
                                              can be hashed. See https://cloud.google.com/dlp/docs/pseudonymization
                                              to learn more. Structure is documented
                                              below.
                                            items:
                                              properties:
                                                cryptoKey:
                                                  description: Causes the shift to
                                                    be computed based on this key
                                                    and the context. This results
                                                    in the same shift for the same
                                                    context and cryptoKey. If set,
                                                    must also set context. Can only
                                                    be applied to table items. Structure
                                                    is documented below.
                                                  items:
                                                    properties:
                                                      kmsWrapped:
                                                        description: 'KMS wrapped
                                                          key. Include to use an existing
                                                          data crypto key wrapped
                                                          by KMS. The wrapped key
                                                          must be a 128-, 192-, or
                                                          256-bit key. Authorization
                                                          requires the following IAM
                                                          permissions when sending
                                                          a request to perform a crypto
                                                          transformation using a KMS-wrapped
                                                          crypto key: dlp.kms.encrypt
                                                          For more information, see
                                                          Creating a wrapped key.
                                                          Note: When you use Cloud
                                                          KMS for cryptographic operations,
                                                          charges apply. Structure
                                                          is documented below.'
                                                        items:
                                                          properties:
                                                            cryptoKeyName:
                                                              description: The resource
                                                                name of the KMS CryptoKey
                                                                to use for unwrapping.
                                                              type: string
                                                            wrappedKey:
                                                              description: The wrapped
                                                                data crypto key. A
                                                                base64-encoded string.
                                                              type: string
                                                          required:
                                                          - cryptoKeyName
                                                          - wrappedKey
                                                          type: object
                                                        type: array
                                                      transient:
                                                        description: Transient crypto
                                                          key. Use this to have a
                                                          random data crypto key generated.
                                                          It will be discarded after
                                                          the request finishes. Structure
                                                          is documented below.
                                                        items:
                                                          properties:
                                                            name:
                                                              description: 'Name of
                                                                the key. This is an
                                                                arbitrary string used
                                                                to differentiate different
                                                                keys. A unique key
                                                                is generated per name:
                                                                two separate TransientCryptoKey
                                                                protos share the same
                                                                generated key if their
                                                                names are the same.
                                                                When the data crypto
                                                                key is generated,
                                                                this name is not used
                                                                in any way (repeating
                                                                the api call will
                                                                result in a different
                                                                key being generated).'
                                                              type: string
                                                          required:
                                                          - name
                                                          type: object
                                                        type: array
                                                      unwrapped:
                                                        description: Unwrapped crypto
                                                          key. Using raw keys is prone
                                                          to security risks due to
                                                          accidentally leaking the
                                                          key. Choose another type
                                                          of key if possible. Structure
                                                          is documented below.
                                                        items:
                                                          properties:
                                                            key:
                                                              description: A 128/192/256
                                                                bit key. A base64-encoded
                                                                string.
                                                              type: string
                                                          required:
                                                          - key
                                                          type: object
                                                        type: array
                                                    type: object
                                                  type: array
                                              type: object
                                            type: array
                                          cryptoReplaceFfxFpeConfig:
                                            description: 'Replaces an identifier with
                                              a surrogate using Format Preserving
                                              Encryption (FPE) with the FFX mode of
                                              operation; however when used in the
                                              content.reidentify API method, it serves
                                              the opposite function by reversing the
                                              surrogate back into the original identifier.
                                              The identifier must be encoded as ASCII.
                                              For a given crypto key and context,
                                              the same identifier will be replaced
                                              with the same surrogate. Identifiers
                                              must be at least two characters long.
                                              In the case that the identifier is the
                                              empty string, it will be skipped. See
                                              https://cloud.google.com/dlp/docs/pseudonymization
                                              to learn more. Note: We recommend using
                                              CryptoDeterministicConfig for all use
                                              cases which do not require preserving
                                              the input alphabet space and size, plus
                                              warrant referential integrity. Structure
                                              is documented below.'
                                            items:
                                              properties:
                                                commonAlphabet:
                                                  description: Common alphabets. Possible
                                                    values are FFX_COMMON_NATIVE_ALPHABET_UNSPECIFIED,
                                                    NUMERIC, HEXADECIMAL, UPPER_CASE_ALPHA_NUMERIC,
                                                    and ALPHA_NUMERIC.
                                                  type: string
                                                context:
                                                  description: Points to the field
                                                    that contains the context, for
                                                    example, an entity id. If set,
                                                    must also set cryptoKey. If set,
                                                    shift will be consistent for the
                                                    given context. Structure is documented
                                                    below.
                                                  items:
                                                    properties:
                                                      name:
                                                        description: 'Name of the
                                                          key. This is an arbitrary
                                                          string used to differentiate
                                                          different keys. A unique
                                                          key is generated per name:
                                                          two separate TransientCryptoKey
                                                          protos share the same generated
                                                          key if their names are the
                                                          same. When the data crypto
                                                          key is generated, this name
                                                          is not used in any way (repeating
                                                          the api call will result
                                                          in a different key being
                                                          generated).'
                                                        type: string
                                                    type: object
                                                  type: array
                                                cryptoKey:
                                                  description: Causes the shift to
                                                    be computed based on this key
                                                    and the context. This results
                                                    in the same shift for the same
                                                    context and cryptoKey. If set,
                                                    must also set context. Can only
                                                    be applied to table items. Structure
                                                    is documented below.
                                                  items:
                                                    properties:
                                                      kmsWrapped:
                                                        description: 'KMS wrapped
                                                          key. Include to use an existing
                                                          data crypto key wrapped
                                                          by KMS. The wrapped key
                                                          must be a 128-, 192-, or
                                                          256-bit key. Authorization
                                                          requires the following IAM
                                                          permissions when sending
                                                          a request to perform a crypto
                                                          transformation using a KMS-wrapped
                                                          crypto key: dlp.kms.encrypt
                                                          For more information, see
                                                          Creating a wrapped key.
                                                          Note: When you use Cloud
                                                          KMS for cryptographic operations,
                                                          charges apply. Structure
                                                          is documented below.'
                                                        items:
                                                          properties:
                                                            cryptoKeyName:
                                                              description: The resource
                                                                name of the KMS CryptoKey
                                                                to use for unwrapping.
                                                              type: string
                                                            wrappedKey:
                                                              description: The wrapped
                                                                data crypto key. A
                                                                base64-encoded string.
                                                              type: string
                                                          required:
                                                          - cryptoKeyName
                                                          - wrappedKey
                                                          type: object
                                                        type: array
                                                      transient:
                                                        description: Transient crypto
                                                          key. Use this to have a
                                                          random data crypto key generated.
                                                          It will be discarded after
                                                          the request finishes. Structure
                                                          is documented below.
                                                        items:
                                                          properties:
                                                            name:
                                                              description: 'Name of
                                                                the key. This is an
                                                                arbitrary string used
                                                                to differentiate different
                                                                keys. A unique key
                                                                is generated per name:
                                                                two separate TransientCryptoKey
                                                                protos share the same
                                                                generated key if their
                                                                names are the same.
                                                                When the data crypto
                                                                key is generated,
                                                                this name is not used
                                                                in any way (repeating
                                                                the api call will
                                                                result in a different
                                                                key being generated).'
                                                              type: string
                                                          required:
                                                          - name
                                                          type: object
                                                        type: array
                                                      unwrapped:
                                                        description: Unwrapped crypto
                                                          key. Using raw keys is prone
                                                          to security risks due to
                                                          accidentally leaking the
                                                          key. Choose another type
                                                          of key if possible. Structure
                                                          is documented below.
                                                        items:
                                                          properties:
                                                            key:
                                                              description: A 128/192/256
                                                                bit key. A base64-encoded
                                                                string.
                                                              type: string
                                                          required:
                                                          - key
                                                          type: object
                                                        type: array
                                                    type: object
                                                  type: array
                                                customAlphabet:
                                                  description: 'This is supported
                                                    by mapping these to the alphanumeric
                                                    characters that the FFX mode natively
                                                    supports. This happens before/after
                                                    encryption/decryption. Each character
                                                    listed must appear only once.
                                                    Number of characters must be in
                                                    the range [2, 95]. This must be
                                                    encoded as ASCII. The order of
                                                    characters does not matter. The
                                                    full list of allowed characters
                                                    is: 0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz
                                                    ~`!@#$%^&*()_-+={[}]|:;"''<,>.?/'
                                                  type: string
                                                radix:
                                                  description: The native way to select
                                                    the alphabet. Must be in the range
                                                    [2, 95].
                                                  type: number
                                                surrogateInfoType:
                                                  description: 'The custom infoType
                                                    to annotate the surrogate with.
                                                    This annotation will be applied
                                                    to the surrogate by prefixing
                                                    it with the name of the custom
                                                    infoType followed by the number
                                                    of characters comprising the surrogate.
                                                    The following scheme defines the
                                                    format: info_type_name(surrogate_character_count):surrogate
                                                    For example, if the name of custom
                                                    infoType is ''MY_TOKEN_INFO_TYPE''
                                                    and the surrogate is ''abc'',
                                                    the full replacement value will
                                                    be: ''MY_TOKEN_INFO_TYPE(3):abc''
                                                    This annotation identifies the
                                                    surrogate when inspecting content
                                                    using the custom infoType SurrogateType.
                                                    This facilitates reversal of the
                                                    surrogate when it occurs in free
                                                    text. In order for inspection
                                                    to work properly, the name of
                                                    this infoType must not occur naturally
                                                    anywhere in your data; otherwise,
                                                    inspection may find a surrogate
                                                    that does not correspond to an
                                                    actual identifier. Therefore,
                                                    choose your custom infoType name
                                                    carefully after considering what
                                                    your data looks like. One way
                                                    to select a name that has a high
                                                    chance of yielding reliable detection
                                                    is to include one or more unicode
                                                    characters that are highly improbable
                                                    to exist in your data. For example,
                                                    assuming your data is entered
                                                    from a regular ASCII keyboard,
                                                    the symbol with the hex code point
                                                    29DD might be used like so: ⧝MY_TOKEN_TYPE
                                                    Structure is documented below.'
                                                  items:
                                                    properties:
                                                      name:
                                                        description: 'Name of the
                                                          key. This is an arbitrary
                                                          string used to differentiate
                                                          different keys. A unique
                                                          key is generated per name:
                                                          two separate TransientCryptoKey
                                                          protos share the same generated
                                                          key if their names are the
                                                          same. When the data crypto
                                                          key is generated, this name
                                                          is not used in any way (repeating
                                                          the api call will result
                                                          in a different key being
                                                          generated).'
                                                        type: string
                                                      version:
                                                        description: Optional version
                                                          name for this InfoType.
                                                        type: string
                                                    type: object
                                                  type: array
                                              type: object
                                            type: array
                                          dateShiftConfig:
                                            description: Shifts dates by random number
                                              of days, with option to be consistent
                                              for the same context. See https://cloud.google.com/dlp/docs/concepts-date-shifting
                                              to learn more. Structure is documented
                                              below.
                                            items:
                                              properties:
                                                context:
                                                  description: Points to the field
                                                    that contains the context, for
                                                    example, an entity id. If set,
                                                    must also set cryptoKey. If set,
                                                    shift will be consistent for the
                                                    given context. Structure is documented
                                                    below.
                                                  items:
                                                    properties:
                                                      name:
                                                        description: 'Name of the
                                                          key. This is an arbitrary
                                                          string used to differentiate
                                                          different keys. A unique
                                                          key is generated per name:
                                                          two separate TransientCryptoKey
                                                          protos share the same generated
                                                          key if their names are the
                                                          same. When the data crypto
                                                          key is generated, this name
                                                          is not used in any way (repeating
                                                          the api call will result
                                                          in a different key being
                                                          generated).'
                                                        type: string
                                                    type: object
                                                  type: array
                                                cryptoKey:
                                                  description: Causes the shift to
                                                    be computed based on this key
                                                    and the context. This results
                                                    in the same shift for the same
                                                    context and cryptoKey. If set,
                                                    must also set context. Can only
                                                    be applied to table items. Structure
                                                    is documented below.
                                                  items:
                                                    properties:
                                                      kmsWrapped:
                                                        description: 'KMS wrapped
                                                          key. Include to use an existing
                                                          data crypto key wrapped
                                                          by KMS. The wrapped key
                                                          must be a 128-, 192-, or
                                                          256-bit key. Authorization
                                                          requires the following IAM
                                                          permissions when sending
                                                          a request to perform a crypto
                                                          transformation using a KMS-wrapped
                                                          crypto key: dlp.kms.encrypt
                                                          For more information, see
                                                          Creating a wrapped key.
                                                          Note: When you use Cloud
                                                          KMS for cryptographic operations,
                                                          charges apply. Structure
                                                          is documented below.'
                                                        items:
                                                          properties:
                                                            cryptoKeyName:
                                                              description: The resource
                                                                name of the KMS CryptoKey
                                                                to use for unwrapping.
                                                              type: string
                                                            wrappedKey:
                                                              description: The wrapped
                                                                data crypto key. A
                                                                base64-encoded string.
                                                              type: string
                                                          required:
                                                          - cryptoKeyName
                                                          - wrappedKey
                                                          type: object
                                                        type: array
                                                      transient:
                                                        description: Transient crypto
                                                          key. Use this to have a
                                                          random data crypto key generated.
                                                          It will be discarded after
                                                          the request finishes. Structure
                                                          is documented below.
                                                        items:
                                                          properties:
                                                            name:
                                                              description: 'Name of
                                                                the key. This is an
                                                                arbitrary string used
                                                                to differentiate different
                                                                keys. A unique key
                                                                is generated per name:
                                                                two separate TransientCryptoKey
                                                                protos share the same
                                                                generated key if their
                                                                names are the same.
                                                                When the data crypto
                                                                key is generated,
                                                                this name is not used
                                                                in any way (repeating
                                                                the api call will
                                                                result in a different
                                                                key being generated).'
                                                              type: string
                                                          required:
                                                          - name
                                                          type: object
                                                        type: array
                                                      unwrapped:
                                                        description: Unwrapped crypto
                                                          key. Using raw keys is prone
                                                          to security risks due to
                                                          accidentally leaking the
                                                          key. Choose another type
                                                          of key if possible. Structure
                                                          is documented below.
                                                        items:
                                                          properties:
                                                            key:
                                                              description: A 128/192/256
                                                                bit key. A base64-encoded
                                                                string.
                                                              type: string
                                                          required:
                                                          - key
                                                          type: object
                                                        type: array
                                                    type: object
                                                  type: array
                                                lowerBoundDays:
                                                  description: For example, -5 means
                                                    shift date to at most 5 days back
                                                    in the past.
                                                  type: number
                                                upperBoundDays:
                                                  description: Range of shift in days.
                                                    Actual shift will be selected
                                                    at random within this range (inclusive
                                                    ends). Negative means shift to
                                                    earlier in time. Must not be more
                                                    than 365250 days (1000 years)
                                                    each direction. For example, 3
                                                    means shift date to at most 3
                                                    days into the future.
                                                  type: number
                                              required:
                                              - lowerBoundDays
                                              - upperBoundDays
                                              type: object
                                            type: array
                                          fixedSizeBucketingConfig:
                                            description: 'Buckets values based on
                                              fixed size ranges. The Bucketing transformation
                                              can provide all of this functionality,
                                              but requires more configuration. This
                                              message is provided as a convenience
                                              to the user for simple bucketing strategies.
                                              The transformed value will be a hyphenated
                                              string of {lower_bound}-{upper_bound}.
                                              For example, if lower_bound = 10 and
                                              upper_bound = 20, all values that are
                                              within this bucket will be replaced
                                              with "10-20". This can be used on data
                                              of type: double, long. If the bound
                                              Value type differs from the type of
                                              data being transformed, we will first
                                              attempt converting the type of the data
                                              to be transformed to match the type
                                              of the bound before comparing. See https://cloud.google.com/dlp/docs/concepts-bucketing
                                              to learn more. Structure is documented
                                              below.'
                                            items:
                                              properties:
                                                bucketSize:
                                                  description: 'Size of each bucket
                                                    (except for minimum and maximum
                                                    buckets). So if lower_bound =
                                                    10, upper_bound = 89, and bucketSize
                                                    = 10, then the following buckets
                                                    would be used: -10, 10-20, 20-30,
                                                    30-40, 40-50, 50-60, 60-70, 70-80,
                                                    80-89, 89+. Precision up to 2
                                                    decimals works.'
                                                  type: number
                                                lowerBound:
                                                  description: Lower bound value of
                                                    buckets. All values less than
                                                    lower_bound are grouped together
                                                    into a single bucket; for example
                                                    if lower_bound = 10, then all
                                                    values less than 10 are replaced
                                                    with the value "-10". The lower_bound
                                                    block must only contain one argument.
                                                    See the fixed_size_bucketing_config
                                                    block description for more information
                                                    about choosing a data type. Structure
                                                    is documented below.
                                                  items:
                                                    properties:
                                                      booleanValue:
                                                        description: A boolean value.
                                                        type: boolean
                                                      dateValue:
                                                        description: Represents a
                                                          whole or partial calendar
                                                          date. Structure is documented
                                                          below.
                                                        items:
                                                          properties:
                                                            day:
                                                              description: Day of
                                                                month. Must be from
                                                                1 to 31 and valid
                                                                for the year and month,
                                                                or 0 if specifying
                                                                a year by itself or
                                                                a year and month where
                                                                the day is not significant.
                                                              type: number
                                                            month:
                                                              description: Month of
                                                                year. Must be from
                                                                1 to 12, or 0 if specifying
                                                                a year without a month
                                                                and day.
                                                              type: number
                                                            year:
                                                              description: Year of
                                                                date. Must be from
                                                                1 to 9999, or 0 if
                                                                specifying a date
                                                                without a year.
                                                              type: number
                                                          type: object
                                                        type: array
                                                      dayOfWeekValue:
                                                        description: Represents a
                                                          day of the week. Possible
                                                          values are MONDAY, TUESDAY,
                                                          WEDNESDAY, THURSDAY, FRIDAY,
                                                          SATURDAY, and SUNDAY.
                                                        type: string
                                                      floatValue:
                                                        description: A float value.
                                                        type: number
                                                      integerValue:
                                                        description: An integer value
                                                          (int64 format)
                                                        type: string
                                                      stringValue:
                                                        description: A string value.
                                                        type: string
                                                      timeValue:
                                                        description: Represents a
                                                          time of day. Structure is
                                                          documented below.
                                                        items:
                                                          properties:
                                                            hours:
                                                              description: Hours of
                                                                day in 24 hour format.
                                                                Should be from 0 to
                                                                23.
                                                              type: number
                                                            minutes:
                                                              description: Minutes
                                                                of hour of day. Must
                                                                be from 0 to 59.
                                                              type: number
                                                            nanos:
                                                              description: Fractions
                                                                of seconds in nanoseconds.
                                                                Must be from 0 to
                                                                999,999,999.
                                                              type: number
                                                            seconds:
                                                              description: Seconds
                                                                of minutes of the
                                                                time. Must normally
                                                                be from 0 to 59.
                                                              type: number
                                                          type: object
                                                        type: array
                                                      timestampValue:
                                                        description: 'A timestamp
                                                          in RFC3339 UTC "Zulu" format,
                                                          with nanosecond resolution
                                                          and up to nine fractional
                                                          digits. Examples: "2014-10-02T15:01:23Z"
                                                          and "2014-10-02T15:01:23.045123456Z".'
                                                        type: string
                                                    type: object
                                                  type: array
                                                upperBound:
                                                  description: Upper bound value of
                                                    buckets. All values greater than
                                                    upper_bound are grouped together
                                                    into a single bucket; for example
                                                    if upper_bound = 89, then all
                                                    values greater than 89 are replaced
                                                    with the value "89+". The upper_bound
                                                    block must only contain one argument.
                                                    See the fixed_size_bucketing_config
                                                    block description for more information
                                                    about choosing a data type. Structure
                                                    is documented below.
                                                  items:
                                                    properties:
                                                      booleanValue:
                                                        description: A boolean value.
                                                        type: boolean
                                                      dateValue:
                                                        description: Represents a
                                                          whole or partial calendar
                                                          date. Structure is documented
                                                          below.
                                                        items:
                                                          properties:
                                                            day:
                                                              description: Day of
                                                                month. Must be from
                                                                1 to 31 and valid
                                                                for the year and month,
                                                                or 0 if specifying
                                                                a year by itself or
                                                                a year and month where
                                                                the day is not significant.
                                                              type: number
                                                            month:
                                                              description: Month of
                                                                year. Must be from
                                                                1 to 12, or 0 if specifying
                                                                a year without a month
                                                                and day.
                                                              type: number
                                                            year:
                                                              description: Year of
                                                                date. Must be from
                                                                1 to 9999, or 0 if
                                                                specifying a date
                                                                without a year.
                                                              type: number
                                                          type: object
                                                        type: array
                                                      dayOfWeekValue:
                                                        description: Represents a
                                                          day of the week. Possible
                                                          values are MONDAY, TUESDAY,
                                                          WEDNESDAY, THURSDAY, FRIDAY,
                                                          SATURDAY, and SUNDAY.
                                                        type: string
                                                      floatValue:
                                                        description: A float value.
                                                        type: number
                                                      integerValue:
                                                        description: An integer value
                                                          (int64 format)
                                                        type: string
                                                      stringValue:
                                                        description: A string value.
                                                        type: string
                                                      timeValue:
                                                        description: Represents a
                                                          time of day. Structure is
                                                          documented below.
                                                        items:
                                                          properties:
                                                            hours:
                                                              description: Hours of
                                                                day in 24 hour format.
                                                                Should be from 0 to
                                                                23.
                                                              type: number
                                                            minutes:
                                                              description: Minutes
                                                                of hour of day. Must
                                                                be from 0 to 59.
                                                              type: number
                                                            nanos:
                                                              description: Fractions
                                                                of seconds in nanoseconds.
                                                                Must be from 0 to
                                                                999,999,999.
                                                              type: number
                                                            seconds:
                                                              description: Seconds
                                                                of minutes of the
                                                                time. Must normally
                                                                be from 0 to 59.
                                                              type: number
                                                          type: object
                                                        type: array
                                                      timestampValue:
                                                        description: 'A timestamp
                                                          in RFC3339 UTC "Zulu" format,
                                                          with nanosecond resolution
                                                          and up to nine fractional
                                                          digits. Examples: "2014-10-02T15:01:23Z"
                                                          and "2014-10-02T15:01:23.045123456Z".'
                                                        type: string
                                                    type: object
                                                  type: array
                                              required:
                                              - bucketSize
                                              - lowerBound
                                              - upperBound
                                              type: object
                                            type: array
                                          redactConfig:
                                            description: Redact a given value. For
                                              example, if used with an InfoTypeTransformation
                                              transforming PHONE_NUMBER, and input
                                              'My phone number is 206-555-0123', the
                                              output would be 'My phone number is
                                              '.
                                            items:
                                              type: object
                                            type: array
                                          replaceConfig:
                                            description: Replace each input value
                                              with a given value. Structure is documented
                                              below.
                                            items:
                                              properties:
                                                newValue:
                                                  description: Replace each input
                                                    value with a given value. The
                                                    new_value block must only contain
                                                    one argument. For example when
                                                    replacing the contents of a string-type
                                                    field, only string_value should
                                                    be set. Structure is documented
                                                    below.
                                                  items:
                                                    properties:
                                                      booleanValue:
                                                        description: A boolean value.
                                                        type: boolean
                                                      dateValue:
                                                        description: Represents a
                                                          whole or partial calendar
                                                          date. Structure is documented
                                                          below.
                                                        items:
                                                          properties:
                                                            day:
                                                              description: Day of
                                                                month. Must be from
                                                                1 to 31 and valid
                                                                for the year and month,
                                                                or 0 if specifying
                                                                a year by itself or
                                                                a year and month where
                                                                the day is not significant.
                                                              type: number
                                                            month:
                                                              description: Month of
                                                                year. Must be from
                                                                1 to 12, or 0 if specifying
                                                                a year without a month
                                                                and day.
                                                              type: number
                                                            year:
                                                              description: Year of
                                                                date. Must be from
                                                                1 to 9999, or 0 if
                                                                specifying a date
                                                                without a year.
                                                              type: number
                                                          type: object
                                                        type: array
                                                      dayOfWeekValue:
                                                        description: Represents a
                                                          day of the week. Possible
                                                          values are MONDAY, TUESDAY,
                                                          WEDNESDAY, THURSDAY, FRIDAY,
                                                          SATURDAY, and SUNDAY.
                                                        type: string
                                                      floatValue:
                                                        description: A float value.
                                                        type: number
                                                      integerValue:
                                                        description: An integer value
                                                          (int64 format)
                                                        type: string
                                                      stringValue:
                                                        description: A string value.
                                                        type: string
                                                      timeValue:
                                                        description: Represents a
                                                          time of day. Structure is
                                                          documented below.
                                                        items:
                                                          properties:
                                                            hours:
                                                              description: Hours of
                                                                day in 24 hour format.
                                                                Should be from 0 to
                                                                23.
                                                              type: number
                                                            minutes:
                                                              description: Minutes
                                                                of hour of day. Must
                                                                be from 0 to 59.
                                                              type: number
                                                            nanos:
                                                              description: Fractions
                                                                of seconds in nanoseconds.
                                                                Must be from 0 to
                                                                999,999,999.
                                                              type: number
                                                            seconds:
                                                              description: Seconds
                                                                of minutes of the
                                                                time. Must normally
                                                                be from 0 to 59.
                                                              type: number
                                                          type: object
                                                        type: array
                                                      timestampValue:
                                                        description: 'A timestamp
                                                          in RFC3339 UTC "Zulu" format,
                                                          with nanosecond resolution
                                                          and up to nine fractional
                                                          digits. Examples: "2014-10-02T15:01:23Z"
                                                          and "2014-10-02T15:01:23.045123456Z".'
                                                        type: string
                                                    type: object
                                                  type: array
                                              required:
                                              - newValue
                                              type: object
                                            type: array
                                          replaceDictionaryConfig:
                                            description: Replace with a value randomly
                                              drawn (with replacement) from a dictionary.
                                              Structure is documented below.
                                            items:
                                              properties:
                                                wordList:
                                                  description: A list of words to
                                                    select from for random replacement.
                                                    The limits page contains details
                                                    about the size limits of dictionaries.
                                                    Structure is documented below.
                                                  items:
                                                    properties:
                                                      words:
                                                        description: Words or phrases
                                                          defining the dictionary.
                                                          The dictionary must contain
                                                          at least one phrase and
                                                          every phrase must contain
                                                          at least 2 characters that
                                                          are letters or digits.
                                                        items:
                                                          type: string
                                                        type: array
                                                    required:
                                                    - words
                                                    type: object
                                                  type: array
                                              type: object
                                            type: array
                                          timePartConfig:
                                            description: For use with Date, Timestamp,
                                              and TimeOfDay, extract or preserve a
                                              portion of the value. Structure is documented
                                              below.
                                            items:
                                              properties:
                                                partToExtract:
                                                  description: The part of the time
                                                    to keep. Possible values are YEAR,
                                                    MONTH, DAY_OF_MONTH, DAY_OF_WEEK,
                                                    WEEK_OF_YEAR, and HOUR_OF_DAY.
                                                  type: string
                                              type: object
                                            type: array
                                        type: object
                                      type: array
                                  required:
                                  - fields
                                  - primitiveTransformation
                                  type: object
                                type: array
                              recordSuppressions:
                                description: Configuration defining which records
                                  get suppressed entirely. Records that match any
                                  suppression rule are omitted from the output. Structure
                                  is documented below.
                                items:
                                  properties:
                                    condition:
                                      description: A condition that when it evaluates
                                        to true will result in the record being evaluated
                                        to be suppressed from the transformed content.
                                        Structure is documented below.
                                      items:
                                        properties:
                                          expressions:
                                            description: An expression, consisting
                                              of an operator and conditions. Structure
                                              is documented below.
                                            items:
                                              properties:
                                                conditions:
                                                  description: Conditions to apply
                                                    to the expression. Structure is
                                                    documented below.
                                                  items:
                                                    properties:
                                                      conditions:
                                                        description: Conditions to
                                                          apply to the expression.
                                                          Structure is documented
                                                          below.
                                                        items:
                                                          properties:
                                                            field:
                                                              description: Field within
                                                                the record this condition
                                                                is evaluated against.
                                                                Structure is documented
                                                                below.
                                                              items:
                                                                properties:
                                                                  name:
                                                                    description: 'Name
                                                                      of the key.
                                                                      This is an arbitrary
                                                                      string used
                                                                      to differentiate
                                                                      different keys.
                                                                      A unique key
                                                                      is generated
                                                                      per name: two
                                                                      separate TransientCryptoKey
                                                                      protos share
                                                                      the same generated
                                                                      key if their
                                                                      names are the
                                                                      same. When the
                                                                      data crypto
                                                                      key is generated,
                                                                      this name is
                                                                      not used in
                                                                      any way (repeating
                                                                      the api call
                                                                      will result
                                                                      in a different
                                                                      key being generated).'
                                                                    type: string
                                                                type: object
                                                              type: array
                                                            operator:
                                                              description: Operator
                                                                used to compare the
                                                                field or infoType
                                                                to the value. Possible
                                                                values are EQUAL_TO,
                                                                NOT_EQUAL_TO, GREATER_THAN,
                                                                LESS_THAN, GREATER_THAN_OR_EQUALS,
                                                                LESS_THAN_OR_EQUALS,
                                                                and EXISTS.
                                                              type: string
                                                            value:
                                                              description: Value to
                                                                compare against. The
                                                                value block must only
                                                                contain one argument.
                                                                For example when a
                                                                condition is evaluated
                                                                against a string-type
                                                                field, only string_value
                                                                should be set. This
                                                                argument is mandatory,
                                                                except for conditions
                                                                using the EXISTS operator.
                                                                Structure is documented
                                                                below.
                                                              items:
                                                                properties:
                                                                  booleanValue:
                                                                    description: A
                                                                      boolean value.
                                                                    type: boolean
                                                                  dateValue:
                                                                    description: Represents
                                                                      a whole or partial
                                                                      calendar date.
                                                                      Structure is
                                                                      documented below.
                                                                    items:
                                                                      properties:
                                                                        day:
                                                                          description: Day
                                                                            of month.
                                                                            Must be
                                                                            from 1
                                                                            to 31
                                                                            and valid
                                                                            for the
                                                                            year and
                                                                            month,
                                                                            or 0 if
                                                                            specifying
                                                                            a year
                                                                            by itself
                                                                            or a year
                                                                            and month
                                                                            where
                                                                            the day
                                                                            is not
                                                                            significant.
                                                                          type: number
                                                                        month:
                                                                          description: Month
                                                                            of year.
                                                                            Must be
                                                                            from 1
                                                                            to 12,
                                                                            or 0 if
                                                                            specifying
                                                                            a year
                                                                            without
                                                                            a month
                                                                            and day.
                                                                          type: number
                                                                        year:
                                                                          description: Year
                                                                            of date.
                                                                            Must be
                                                                            from 1
                                                                            to 9999,
                                                                            or 0 if
                                                                            specifying
                                                                            a date
                                                                            without
                                                                            a year.
                                                                          type: number
                                                                      type: object
                                                                    type: array
                                                                  dayOfWeekValue:
                                                                    description: Represents
                                                                      a day of the
                                                                      week. Possible
                                                                      values are MONDAY,
                                                                      TUESDAY, WEDNESDAY,
                                                                      THURSDAY, FRIDAY,
                                                                      SATURDAY, and
                                                                      SUNDAY.
                                                                    type: string
                                                                  floatValue:
                                                                    description: A
                                                                      float value.
                                                                    type: number
                                                                  integerValue:
                                                                    description: An
                                                                      integer value
                                                                      (int64 format)
                                                                    type: string
                                                                  stringValue:
                                                                    description: A
                                                                      string value.
                                                                    type: string
                                                                  timeValue:
                                                                    description: Represents
                                                                      a time of day.
                                                                      Structure is
                                                                      documented below.
                                                                    items:
                                                                      properties:
                                                                        hours:
                                                                          description: Hours
                                                                            of day
                                                                            in 24
                                                                            hour format.
                                                                            Should
                                                                            be from
                                                                            0 to 23.
                                                                          type: number
                                                                        minutes:
                                                                          description: Minutes
                                                                            of hour
                                                                            of day.
                                                                            Must be
                                                                            from 0
                                                                            to 59.
                                                                          type: number
                                                                        nanos:
                                                                          description: Fractions
                                                                            of seconds
                                                                            in nanoseconds.
                                                                            Must be
                                                                            from 0
                                                                            to 999,999,999.
                                                                          type: number
                                                                        seconds:
                                                                          description: Seconds
                                                                            of minutes
                                                                            of the
                                                                            time.
                                                                            Must normally
                                                                            be from
                                                                            0 to 59.
                                                                          type: number
                                                                      type: object
                                                                    type: array
                                                                  timestampValue:
                                                                    description: 'A
                                                                      timestamp in
                                                                      RFC3339 UTC
                                                                      "Zulu" format,
                                                                      with nanosecond
                                                                      resolution and
                                                                      up to nine fractional
                                                                      digits. Examples:
                                                                      "2014-10-02T15:01:23Z"
                                                                      and "2014-10-02T15:01:23.045123456Z".'
                                                                    type: string
                                                                type: object
                                                              type: array
                                                          required:
                                                          - field
                                                          - operator
                                                          type: object
                                                        type: array
                                                    type: object
                                                  type: array
                                                logicalOperator:
                                                  description: The operator to apply
                                                    to the result of conditions. Default
                                                    and currently only supported value
                                                    is AND. Default value is AND.
                                                    Possible values are AND.
                                                  type: string
                                              type: object
                                            type: array
                                        type: object
                                      type: array
                                  type: object
                                type: array
                            type: object
                          type: array
                      type: object
                    type: array
                  description:
                    description: A description of the template.
                    type: string
                  displayName:
                    description: User set display name of the template.
                    type: string
                  parent:
                    description: 'The parent of the template in any of the following
                      formats:'
                    type: string
                required:
                - deidentifyConfig
                - parent
                type: object
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: DeidentifyTemplateStatus defines the observed state of DeidentifyTemplate.
            properties:
              atProvider:
                properties:
                  id:
                    description: an identifier for the resource with format {{parent}}/deidentifyTemplates/{{name}}
                    type: string
                  name:
                    description: The resource name of the template. Set by the server.
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
