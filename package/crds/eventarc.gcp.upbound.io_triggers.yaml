---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.11.1
  creationTimestamp: null
  name: triggers.eventarc.gcp.upbound.io
spec:
  group: eventarc.gcp.upbound.io
  names:
    categories:
    - crossplane
    - managed
    - gcp
    kind: Trigger
    listKind: TriggerList
    plural: triggers
    singular: trigger
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: Trigger is the Schema for the Triggers API. The Eventarc Trigger
          resource
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: TriggerSpec defines the desired state of Trigger
            properties:
              deletionPolicy:
                default: Delete
                description: DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource.
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  channel:
                    description: Optional. The name of the channel associated with
                      the trigger in projects/{project}/locations/{location}/channels/{channel}
                      format. You must provide a channel to receive events from Eventarc
                      SaaS partners.
                    type: string
                  destination:
                    description: Required. Destination specifies where the events
                      should be sent to.
                    items:
                      properties:
                        cloudFunction:
                          description: '[WARNING] Configuring a Cloud Function in
                            Trigger is not supported as of today. The Cloud Function
                            resource name. Format: projects/{project}/locations/{location}/functions/{function}'
                          type: string
                        cloudRunService:
                          description: Cloud Run fully-managed service that receives
                            the events. The service should be running in the same
                            project of the trigger.
                          items:
                            properties:
                              path:
                                description: 'Optional. The relative path on the GKE
                                  service the events should be sent to. The value
                                  must conform to the definition of a URI path segment
                                  (section 3.3 of RFC2396). Examples: "/route", "route",
                                  "route/subroute".'
                                type: string
                              region:
                                description: Required. The region the Cloud Run service
                                  is deployed in.
                                type: string
                              service:
                                description: Required. Name of the GKE service.
                                type: string
                              serviceRef:
                                description: Reference to a Service in cloudrun to
                                  populate service.
                                properties:
                                  name:
                                    description: Name of the referenced object.
                                    type: string
                                  policy:
                                    description: Policies for referencing.
                                    properties:
                                      resolution:
                                        default: Required
                                        description: Resolution specifies whether
                                          resolution of this reference is required.
                                          The default is 'Required', which means the
                                          reconcile will fail if the reference cannot
                                          be resolved. 'Optional' means this reference
                                          will be a no-op if it cannot be resolved.
                                        enum:
                                        - Required
                                        - Optional
                                        type: string
                                      resolve:
                                        description: Resolve specifies when this reference
                                          should be resolved. The default is 'IfNotPresent',
                                          which will attempt to resolve the reference
                                          only when the corresponding field is not
                                          present. Use 'Always' to resolve the reference
                                          on every reconcile.
                                        enum:
                                        - Always
                                        - IfNotPresent
                                        type: string
                                    type: object
                                required:
                                - name
                                type: object
                              serviceSelector:
                                description: Selector for a Service in cloudrun to
                                  populate service.
                                properties:
                                  matchControllerRef:
                                    description: MatchControllerRef ensures an object
                                      with the same controller reference as the selecting
                                      object is selected.
                                    type: boolean
                                  matchLabels:
                                    additionalProperties:
                                      type: string
                                    description: MatchLabels ensures an object with
                                      matching labels is selected.
                                    type: object
                                  policy:
                                    description: Policies for selection.
                                    properties:
                                      resolution:
                                        default: Required
                                        description: Resolution specifies whether
                                          resolution of this reference is required.
                                          The default is 'Required', which means the
                                          reconcile will fail if the reference cannot
                                          be resolved. 'Optional' means this reference
                                          will be a no-op if it cannot be resolved.
                                        enum:
                                        - Required
                                        - Optional
                                        type: string
                                      resolve:
                                        description: Resolve specifies when this reference
                                          should be resolved. The default is 'IfNotPresent',
                                          which will attempt to resolve the reference
                                          only when the corresponding field is not
                                          present. Use 'Always' to resolve the reference
                                          on every reconcile.
                                        enum:
                                        - Always
                                        - IfNotPresent
                                        type: string
                                    type: object
                                type: object
                            type: object
                          type: array
                        gke:
                          description: A GKE service capable of receiving events.
                            The service should be running in the same project as the
                            trigger.
                          items:
                            properties:
                              cluster:
                                description: Required. The name of the cluster the
                                  GKE service is running in. The cluster must be running
                                  in the same project as the trigger being created.
                                type: string
                              location:
                                description: The location for the resource
                                type: string
                              namespace:
                                description: Required. The namespace the GKE service
                                  is running in.
                                type: string
                              path:
                                description: 'Optional. The relative path on the GKE
                                  service the events should be sent to. The value
                                  must conform to the definition of a URI path segment
                                  (section 3.3 of RFC2396). Examples: "/route", "route",
                                  "route/subroute".'
                                type: string
                              service:
                                description: Required. Name of the GKE service.
                                type: string
                            required:
                            - cluster
                            - location
                            - namespace
                            - service
                            type: object
                          type: array
                        workflow:
                          description: 'The resource name of the Workflow whose Executions
                            are triggered by the events. The Workflow resource should
                            be deployed in the same project as the trigger. Format:
                            projects/{project}/locations/{location}/workflows/{workflow}'
                          type: string
                      type: object
                    type: array
                  labels:
                    additionalProperties:
                      type: string
                    description: Optional. User labels attached to the triggers that
                      can be used to group resources.
                    type: object
                  location:
                    description: The location for the resource
                    type: string
                  matchingCriteria:
                    description: Required. null The list of filters that applies to
                      event attributes. Only events that match all the provided filters
                      will be sent to the destination.
                    items:
                      properties:
                        attribute:
                          description: Required. The name of a CloudEvents attribute.
                            Currently, only a subset of attributes are supported for
                            filtering. All triggers MUST provide a filter for the
                            'type' attribute.
                          type: string
                        operator:
                          description: Optional. The operator used for matching the
                            events with the value of the filter. If not specified,
                            only events that have an exact key-value pair specified
                            in the filter are matched. The only allowed value is match-path-pattern.
                          type: string
                        value:
                          description: Required. The value for the attribute. See
                            https://cloud.google.com/eventarc/docs/creating-triggers#trigger-gcloud
                            for available values.
                          type: string
                      required:
                      - attribute
                      - value
                      type: object
                    type: array
                  project:
                    description: The project for the resource
                    type: string
                  serviceAccount:
                    description: Optional. The IAM service account email associated
                      with the trigger. The service account represents the identity
                      of the trigger. The principal who calls this API must have iam.serviceAccounts.actAs
                      permission in the service account. See https://cloud.google.com/iam/docs/understanding-service-accounts#sa_common
                      for more information. For Cloud Run destinations, this service
                      account is used to generate identity tokens when invoking the
                      service. See https://cloud.google.com/run/docs/triggering/pubsub-push#create-service-account
                      for information on how to invoke authenticated Cloud Run services.
                      In order to create Audit Log triggers, the service account should
                      also have roles/eventarc.eventReceiver IAM role.
                    type: string
                  transport:
                    description: Optional. In order to deliver messages, Eventarc
                      may use other GCP products as transport intermediary. This field
                      contains a reference to that transport intermediary. This information
                      can be used for debugging purposes.
                    items:
                      properties:
                        pubsub:
                          description: The Pub/Sub topic and subscription used by
                            Eventarc as delivery intermediary.
                          items:
                            properties:
                              topic:
                                description: 'Optional. The name of the Pub/Sub topic
                                  created and managed by Eventarc system as a transport
                                  for the event delivery. Format: projects/{PROJECT_ID}/topics/{TOPIC_NAME}.
                                  You may set an existing topic for triggers of the
                                  type google.cloud.pubsub.topic.v1.messagePublished
                                  only. The topic you provide here will not be deleted
                                  by Eventarc at trigger deletion.'
                                type: string
                            type: object
                          type: array
                      type: object
                    type: array
                required:
                - destination
                - location
                - matchingCriteria
                type: object
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: TriggerStatus defines the observed state of Trigger.
            properties:
              atProvider:
                properties:
                  conditions:
                    additionalProperties:
                      type: string
                    description: Output only. The reason(s) why a trigger is in FAILED
                      state.
                    type: object
                  createTime:
                    description: Output only. The creation time.
                    type: string
                  etag:
                    description: Output only. This checksum is computed by the server
                      based on the value of other fields, and may be sent only on
                      create requests to ensure the client has an up-to-date value
                      before proceeding.
                    type: string
                  id:
                    description: an identifier for the resource with format projects/{{project}}/locations/{{location}}/triggers/{{name}}
                    type: string
                  transport:
                    description: Optional. In order to deliver messages, Eventarc
                      may use other GCP products as transport intermediary. This field
                      contains a reference to that transport intermediary. This information
                      can be used for debugging purposes.
                    items:
                      properties:
                        pubsub:
                          description: The Pub/Sub topic and subscription used by
                            Eventarc as delivery intermediary.
                          items:
                            properties:
                              subscription:
                                description: 'Output only. The name of the Pub/Sub
                                  subscription created and managed by Eventarc system
                                  as a transport for the event delivery. Format: projects/{PROJECT_ID}/subscriptions/{SUBSCRIPTION_NAME}.'
                                type: string
                            type: object
                          type: array
                      type: object
                    type: array
                  uid:
                    description: Output only. Server assigned unique identifier for
                      the trigger. The value is a UUID4 string and guaranteed to remain
                      unchanged until the resource is deleted.
                    type: string
                  updateTime:
                    description: Output only. The last-modified time.
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
