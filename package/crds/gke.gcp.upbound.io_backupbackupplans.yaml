---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.11.1
  creationTimestamp: null
  name: backupbackupplans.gke.gcp.upbound.io
spec:
  group: gke.gcp.upbound.io
  names:
    categories:
    - crossplane
    - managed
    - gcp
    kind: BackupBackupPlan
    listKind: BackupBackupPlanList
    plural: backupbackupplans
    singular: backupbackupplan
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: BackupBackupPlan is the Schema for the BackupBackupPlans API.
          Represents a Backup Plan instance.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: BackupBackupPlanSpec defines the desired state of BackupBackupPlan
            properties:
              deletionPolicy:
                default: Delete
                description: DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource.
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  backupConfig:
                    description: Defines the configuration of Backups created via
                      this BackupPlan. Structure is documented below.
                    items:
                      properties:
                        allNamespaces:
                          description: If True, include all namespaced resources.
                          type: boolean
                        encryptionKey:
                          description: This defines a customer managed encryption
                            key that will be used to encrypt the "config" portion
                            (the Kubernetes resources) of Backups created via this
                            plan. Structure is documented below.
                          items:
                            properties:
                              gcpKmsEncryptionKey:
                                description: 'Google Cloud KMS encryption key. Format:
                                  projects//locations//keyRings//cryptoKeys/'
                                type: string
                              gcpKmsEncryptionKeyRef:
                                description: Reference to a CryptoKey in kms to populate
                                  gcpKmsEncryptionKey.
                                properties:
                                  name:
                                    description: Name of the referenced object.
                                    type: string
                                  policy:
                                    description: Policies for referencing.
                                    properties:
                                      resolution:
                                        default: Required
                                        description: Resolution specifies whether
                                          resolution of this reference is required.
                                          The default is 'Required', which means the
                                          reconcile will fail if the reference cannot
                                          be resolved. 'Optional' means this reference
                                          will be a no-op if it cannot be resolved.
                                        enum:
                                        - Required
                                        - Optional
                                        type: string
                                      resolve:
                                        description: Resolve specifies when this reference
                                          should be resolved. The default is 'IfNotPresent',
                                          which will attempt to resolve the reference
                                          only when the corresponding field is not
                                          present. Use 'Always' to resolve the reference
                                          on every reconcile.
                                        enum:
                                        - Always
                                        - IfNotPresent
                                        type: string
                                    type: object
                                required:
                                - name
                                type: object
                              gcpKmsEncryptionKeySelector:
                                description: Selector for a CryptoKey in kms to populate
                                  gcpKmsEncryptionKey.
                                properties:
                                  matchControllerRef:
                                    description: MatchControllerRef ensures an object
                                      with the same controller reference as the selecting
                                      object is selected.
                                    type: boolean
                                  matchLabels:
                                    additionalProperties:
                                      type: string
                                    description: MatchLabels ensures an object with
                                      matching labels is selected.
                                    type: object
                                  policy:
                                    description: Policies for selection.
                                    properties:
                                      resolution:
                                        default: Required
                                        description: Resolution specifies whether
                                          resolution of this reference is required.
                                          The default is 'Required', which means the
                                          reconcile will fail if the reference cannot
                                          be resolved. 'Optional' means this reference
                                          will be a no-op if it cannot be resolved.
                                        enum:
                                        - Required
                                        - Optional
                                        type: string
                                      resolve:
                                        description: Resolve specifies when this reference
                                          should be resolved. The default is 'IfNotPresent',
                                          which will attempt to resolve the reference
                                          only when the corresponding field is not
                                          present. Use 'Always' to resolve the reference
                                          on every reconcile.
                                        enum:
                                        - Always
                                        - IfNotPresent
                                        type: string
                                    type: object
                                type: object
                            type: object
                          type: array
                        includeSecrets:
                          description: This flag specifies whether Kubernetes Secret
                            resources should be included when they fall into the scope
                            of Backups.
                          type: boolean
                        includeVolumeData:
                          description: This flag specifies whether volume data should
                            be backed up when PVCs are included in the scope of a
                            Backup.
                          type: boolean
                        selectedApplications:
                          description: A list of namespaced Kubernetes Resources.
                            Structure is documented below.
                          items:
                            properties:
                              namespacedNames:
                                description: A list of namespaced Kubernetes resources.
                                  Structure is documented below.
                                items:
                                  properties:
                                    name:
                                      description: The name of a Kubernetes Resource.
                                      type: string
                                    namespace:
                                      description: The namespace of a Kubernetes Resource.
                                      type: string
                                  required:
                                  - name
                                  - namespace
                                  type: object
                                type: array
                            required:
                            - namespacedNames
                            type: object
                          type: array
                        selectedNamespaces:
                          description: If set, include just the resources in the listed
                            namespaces. Structure is documented below.
                          items:
                            properties:
                              namespaces:
                                description: A list of Kubernetes Namespaces.
                                items:
                                  type: string
                                type: array
                            required:
                            - namespaces
                            type: object
                          type: array
                      type: object
                    type: array
                  backupSchedule:
                    description: Defines a schedule for automatic Backup creation
                      via this BackupPlan. Structure is documented below.
                    items:
                      properties:
                        cronSchedule:
                          description: A standard cron string that defines a repeating
                            schedule for creating Backups via this BackupPlan. If
                            this is defined, then backupRetainDays must also be defined.
                          type: string
                        paused:
                          description: This flag denotes whether automatic Backup
                            creation is paused for this BackupPlan.
                          type: boolean
                      type: object
                    type: array
                  cluster:
                    description: The source cluster from which Backups will be created
                      via this BackupPlan.
                    type: string
                  clusterRef:
                    description: Reference to a Cluster in container to populate cluster.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  clusterSelector:
                    description: Selector for a Cluster in container to populate cluster.
                    properties:
                      matchControllerRef:
                        description: MatchControllerRef ensures an object with the
                          same controller reference as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  deactivated:
                    description: This flag indicates whether this BackupPlan has been
                      deactivated. Setting this field to True locks the BackupPlan
                      such that no further updates will be allowed (except deletes),
                      including the deactivated field itself. It also prevents any
                      new Backups from being created via this BackupPlan (including
                      scheduled Backups).
                    type: boolean
                  description:
                    description: User specified descriptive string for this BackupPlan.
                    type: string
                  labels:
                    additionalProperties:
                      type: string
                    description: 'Description: A set of custom labels supplied by
                      the user. A list of key->value pairs. Example: { "name": "wrench",
                      "mass": "1.3kg", "count": "3" }.'
                    type: object
                  location:
                    description: The region of the Backup Plan.
                    type: string
                  project:
                    description: The ID of the project in which the resource belongs.
                      If it is not provided, the provider project is used.
                    type: string
                  retentionPolicy:
                    description: RetentionPolicy governs lifecycle of Backups created
                      under this plan. Structure is documented below.
                    items:
                      properties:
                        backupDeleteLockDays:
                          description: Minimum age for a Backup created via this BackupPlan
                            (in days). Must be an integer value between 0-90 (inclusive).
                            A Backup created under this BackupPlan will not be deletable
                            until it reaches Backup's (create time + backup_delete_lock_days).
                            Updating this field of a BackupPlan does not affect existing
                            Backups. Backups created after a successful update will
                            inherit this new value.
                          type: number
                        backupRetainDays:
                          description: 'The default maximum age of a Backup created
                            via this BackupPlan. This field MUST be an integer value
                            >= 0 and <= 365. If specified, a Backup created under
                            this BackupPlan will be automatically deleted after its
                            age reaches (createTime + backupRetainDays). If not specified,
                            Backups created under this BackupPlan will NOT be subject
                            to automatic deletion. Updating this field does NOT affect
                            existing Backups under it. Backups created AFTER a successful
                            update will automatically pick up the new value. NOTE:
                            backupRetainDays must be >= backupDeleteLockDays. If cronSchedule
                            is defined, then this must be <= 360 * the creation interval.]'
                          type: number
                        locked:
                          description: This flag denotes whether the retention policy
                            of this BackupPlan is locked. If set to True, no further
                            update is allowed on this policy, including the locked
                            field itself.
                          type: boolean
                      type: object
                    type: array
                required:
                - location
                type: object
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: BackupBackupPlanStatus defines the observed state of BackupBackupPlan.
            properties:
              atProvider:
                properties:
                  etag:
                    description: 'etag is used for optimistic concurrency control
                      as a way to help prevent simultaneous updates of a backup plan
                      from overwriting each other. It is strongly suggested that systems
                      make use of the ''etag'' in the read-modify-write cycle to perform
                      BackupPlan updates in order to avoid race conditions: An etag
                      is returned in the response to backupPlans.get, and systems
                      are expected to put that etag in the request to backupPlans.patch
                      or backupPlans.delete to ensure that their change will be applied
                      to the same version of the resource.'
                    type: string
                  id:
                    description: an identifier for the resource with format projects/{{project}}/locations/{{location}}/backupPlans/{{name}}
                    type: string
                  protectedPodCount:
                    description: The number of Kubernetes Pods backed up in the last
                      successful Backup created via this BackupPlan.
                    type: number
                  uid:
                    description: Server generated, unique identifier of UUID format.
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
