---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.11.1
  creationTimestamp: null
  name: secrets.secretmanager.gcp.upbound.io
spec:
  group: secretmanager.gcp.upbound.io
  names:
    categories:
    - crossplane
    - managed
    - gcp
    kind: Secret
    listKind: SecretList
    plural: secrets
    singular: secret
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: Secret is the Schema for the Secrets API. A Secret is a logical
          secret whose value and versions can be accessed.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: SecretSpec defines the desired state of Secret
            properties:
              deletionPolicy:
                default: Delete
                description: DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource.
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  expireTime:
                    description: 'Timestamp in UTC when the Secret is scheduled to
                      expire. This is always provided on output, regardless of what
                      was sent on input. A timestamp in RFC3339 UTC "Zulu" format,
                      with nanosecond resolution and up to nine fractional digits.
                      Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".'
                    type: string
                  labels:
                    additionalProperties:
                      type: string
                    description: 'The labels assigned to this Secret. Label keys must
                      be between 1 and 63 characters long, have a UTF-8 encoding of
                      maximum 128 bytes, and must conform to the following PCRE regular
                      expression: [\p{Ll}\p{Lo}][\p{Ll}\p{Lo}\p{N}-]{0,62} Label values
                      must be between 0 and 63 characters long, have a UTF-8 encoding
                      of maximum 128 bytes, and must conform to the following PCRE
                      regular expression: [\p{Ll}\p{Lo}\p{N}-]{0,63} No more than
                      64 labels can be assigned to a given resource. An object containing
                      a list of "key": value pairs. Example: { "name": "wrench", "mass":
                      "1.3kg", "count": "3" }.'
                    type: object
                  project:
                    description: The ID of the project in which the resource belongs.
                      If it is not provided, the provider project is used.
                    type: string
                  replication:
                    description: The replication policy of the secret data attached
                      to the Secret. It cannot be changed after the Secret has been
                      created. Structure is documented below.
                    items:
                      properties:
                        automatic:
                          description: The Secret will automatically be replicated
                            without any restrictions.
                          type: boolean
                        userManaged:
                          description: The Secret will automatically be replicated
                            without any restrictions. Structure is documented below.
                          items:
                            properties:
                              replicas:
                                description: The list of Replicas for this Secret.
                                  Cannot be empty. Structure is documented below.
                                items:
                                  properties:
                                    customerManagedEncryption:
                                      description: Customer Managed Encryption for
                                        the secret. Structure is documented below.
                                      items:
                                        properties:
                                          kmsKeyName:
                                            description: Describes the Cloud KMS encryption
                                              key that will be used to protect destination
                                              secret.
                                            type: string
                                        required:
                                        - kmsKeyName
                                        type: object
                                      type: array
                                    location:
                                      description: 'The canonical IDs of the location
                                        to replicate data. For example: "us-east1".'
                                      type: string
                                  required:
                                  - location
                                  type: object
                                type: array
                            required:
                            - replicas
                            type: object
                          type: array
                      type: object
                    type: array
                  rotation:
                    description: The rotation time and period for a Secret. At next_rotation_time,
                      Secret Manager will send a Pub/Sub notification to the topics
                      configured on the Secret. topics must be set to configure rotation.
                      Structure is documented below.
                    items:
                      properties:
                        nextRotationTime:
                          description: 'Timestamp in UTC at which the Secret is scheduled
                            to rotate. A timestamp in RFC3339 UTC "Zulu" format, with
                            nanosecond resolution and up to nine fractional digits.
                            Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".'
                          type: string
                        rotationPeriod:
                          description: The Duration between rotation notifications.
                            Must be in seconds and at least 3600s (1h) and at most
                            3153600000s (100 years). If rotationPeriod is set, next_rotation_time
                            must be set. next_rotation_time will be advanced by this
                            period when the service automatically sends rotation notifications.
                          type: string
                      type: object
                    type: array
                  topics:
                    description: A list of up to 10 Pub/Sub topics to which messages
                      are published when control plane operations are called on the
                      secret or its versions. Structure is documented below.
                    items:
                      properties:
                        name:
                          description: 'The resource name of the Pub/Sub topic that
                            will be published to, in the following format: projects//topics/.
                            For publication to succeed, the Secret Manager Service
                            Agent service account must have pubsub.publisher permissions
                            on the topic.'
                          type: string
                      required:
                      - name
                      type: object
                    type: array
                  ttl:
                    description: 'The TTL for the Secret. A duration in seconds with
                      up to nine fractional digits, terminated by ''s''. Example:
                      "3.5s".'
                    type: string
                required:
                - replication
                type: object
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: SecretStatus defines the observed state of Secret.
            properties:
              atProvider:
                properties:
                  createTime:
                    description: The time at which the Secret was created.
                    type: string
                  id:
                    description: an identifier for the resource with format projects/{{project}}/secrets/{{secret_id}}
                    type: string
                  name:
                    description: 'The resource name of the Secret. Format: projects/{{project}}/secrets/{{secret_id}}'
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
