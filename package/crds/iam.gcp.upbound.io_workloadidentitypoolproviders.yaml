---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: workloadidentitypoolproviders.iam.gcp.upbound.io
spec:
  group: iam.gcp.upbound.io
  names:
    categories:
    - crossplane
    - managed
    - gcp
    kind: WorkloadIdentityPoolProvider
    listKind: WorkloadIdentityPoolProviderList
    plural: workloadidentitypoolproviders
    singular: workloadidentitypoolprovider
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: WorkloadIdentityPoolProvider is the Schema for the WorkloadIdentityPoolProviders
          API. A configuration for an external identity provider.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: WorkloadIdentityPoolProviderSpec defines the desired state
              of WorkloadIdentityPoolProvider
            properties:
              deletionPolicy:
                default: Delete
                description: |-
                  DeletionPolicy specifies what will happen to the underlying external
                  when this managed resource is deleted - either "Delete" or "Orphan" the
                  external resource.
                  This field is planned to be deprecated in favor of the ManagementPolicies
                  field in a future release. Currently, both could be set independently and
                  non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  attributeCondition:
                    description: |-
                      A Common Expression Language expression, in
                      plain text, to restrict what otherwise valid authentication credentials issued by the
                      provider should not be accepted.
                      The expression must output a boolean representing whether to allow the federation.
                      The following keywords may be referenced in the expressions:
                    type: string
                  attributeMapping:
                    additionalProperties:
                      type: string
                    description: |-
                      Maps attributes from authentication credentials issued by an external identity provider
                      to Google Cloud attributes, such as subject and segment.
                      Each key must be a string specifying the Google Cloud IAM attribute to map to.
                      The following keys are supported:
                    type: object
                    x-kubernetes-map-type: granular
                  aws:
                    description: |-
                      An Amazon Web Services identity provider. Not compatible with the property oidc or saml.
                      Structure is documented below.
                    items:
                      properties:
                        accountId:
                          description: The AWS account ID.
                          type: string
                      type: object
                    type: array
                  description:
                    description: A description for the provider. Cannot exceed 256
                      characters.
                    type: string
                  disabled:
                    description: |-
                      Whether the provider is disabled. You cannot use a disabled provider to exchange tokens.
                      However, existing tokens still grant access.
                    type: boolean
                  displayName:
                    description: A display name for the provider. Cannot exceed 32
                      characters.
                    type: string
                  oidc:
                    description: |-
                      An OpenId Connect 1.0 identity provider. Not compatible with the property aws or saml.
                      Structure is documented below.
                    items:
                      properties:
                        allowedAudiences:
                          description: |-
                            Acceptable values for the aud field (audience) in the OIDC token. Token exchange
                            requests are rejected if the token audience does not match one of the configured
                            values. Each audience may be at most 256 characters. A maximum of 10 audiences may
                            be configured.
                            If this list is empty, the OIDC token audience must be equal to the full canonical
                            resource name of the WorkloadIdentityPoolProvider, with or without the HTTPS prefix.
                            For example:
                          items:
                            type: string
                          type: array
                        issuerUri:
                          description: The OIDC issuer URL.
                          type: string
                        jwksJson:
                          description: |-
                            OIDC JWKs in JSON String format. For details on definition of a
                            JWK, see https:tools.ietf.org/html/rfc7517. If not set, then we
                            use the jwks_uri from the discovery document fetched from the
                            .well-known path for the issuer_uri. Currently, RSA and EC asymmetric
                            keys are supported. The JWK must use following format and include only
                            the following fields:
                          type: string
                      type: object
                    type: array
                  project:
                    description: |-
                      The ID of the project in which the resource belongs.
                      If it is not provided, the provider project is used.
                    type: string
                  saml:
                    description: |-
                      An SAML 2.0 identity provider. Not compatible with the property oidc or aws.
                      Structure is documented below.
                    items:
                      properties:
                        idpMetadataXml:
                          description: SAML Identity provider configuration metadata
                            xml doc.
                          type: string
                      type: object
                    type: array
                  workloadIdentityPoolId:
                    description: |-
                      The ID used for the pool, which is the final component of the pool resource name. This
                      value should be 4-32 characters, and may contain the characters [a-z0-9-]. The prefix
                      gcp- is reserved for use by Google, and may not be specified.
                    type: string
                  workloadIdentityPoolIdRef:
                    description: Reference to a WorkloadIdentityPool in iam to populate
                      workloadIdentityPoolId.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  workloadIdentityPoolIdSelector:
                    description: Selector for a WorkloadIdentityPool in iam to populate
                      workloadIdentityPoolId.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                type: object
              initProvider:
                description: |-
                  THIS IS A BETA FIELD. It will be honored
                  unless the Management Policies feature flag is disabled.
                  InitProvider holds the same fields as ForProvider, with the exception
                  of Identifier and other resource reference fields. The fields that are
                  in InitProvider are merged into ForProvider when the resource is created.
                  The same fields are also added to the terraform ignore_changes hook, to
                  avoid updating them after creation. This is useful for fields that are
                  required on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them, like an
                  autoscaler.
                properties:
                  attributeCondition:
                    description: |-
                      A Common Expression Language expression, in
                      plain text, to restrict what otherwise valid authentication credentials issued by the
                      provider should not be accepted.
                      The expression must output a boolean representing whether to allow the federation.
                      The following keywords may be referenced in the expressions:
                    type: string
                  attributeMapping:
                    additionalProperties:
                      type: string
                    description: |-
                      Maps attributes from authentication credentials issued by an external identity provider
                      to Google Cloud attributes, such as subject and segment.
                      Each key must be a string specifying the Google Cloud IAM attribute to map to.
                      The following keys are supported:
                    type: object
                    x-kubernetes-map-type: granular
                  aws:
                    description: |-
                      An Amazon Web Services identity provider. Not compatible with the property oidc or saml.
                      Structure is documented below.
                    items:
                      properties:
                        accountId:
                          description: The AWS account ID.
                          type: string
                      type: object
                    type: array
                  description:
                    description: A description for the provider. Cannot exceed 256
                      characters.
                    type: string
                  disabled:
                    description: |-
                      Whether the provider is disabled. You cannot use a disabled provider to exchange tokens.
                      However, existing tokens still grant access.
                    type: boolean
                  displayName:
                    description: A display name for the provider. Cannot exceed 32
                      characters.
                    type: string
                  oidc:
                    description: |-
                      An OpenId Connect 1.0 identity provider. Not compatible with the property aws or saml.
                      Structure is documented below.
                    items:
                      properties:
                        allowedAudiences:
                          description: |-
                            Acceptable values for the aud field (audience) in the OIDC token. Token exchange
                            requests are rejected if the token audience does not match one of the configured
                            values. Each audience may be at most 256 characters. A maximum of 10 audiences may
                            be configured.
                            If this list is empty, the OIDC token audience must be equal to the full canonical
                            resource name of the WorkloadIdentityPoolProvider, with or without the HTTPS prefix.
                            For example:
                          items:
                            type: string
                          type: array
                        issuerUri:
                          description: The OIDC issuer URL.
                          type: string
                        jwksJson:
                          description: |-
                            OIDC JWKs in JSON String format. For details on definition of a
                            JWK, see https:tools.ietf.org/html/rfc7517. If not set, then we
                            use the jwks_uri from the discovery document fetched from the
                            .well-known path for the issuer_uri. Currently, RSA and EC asymmetric
                            keys are supported. The JWK must use following format and include only
                            the following fields:
                          type: string
                      type: object
                    type: array
                  project:
                    description: |-
                      The ID of the project in which the resource belongs.
                      If it is not provided, the provider project is used.
                    type: string
                  saml:
                    description: |-
                      An SAML 2.0 identity provider. Not compatible with the property oidc or aws.
                      Structure is documented below.
                    items:
                      properties:
                        idpMetadataXml:
                          description: SAML Identity provider configuration metadata
                            xml doc.
                          type: string
                      type: object
                    type: array
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  This field is planned to replace the DeletionPolicy field in a future
                  release. Currently, both could be set independently and non-default
                  values would be honored if the feature flag is enabled. If both are
                  custom, the DeletionPolicy field will be ignored.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: |-
                  PublishConnectionDetailsTo specifies the connection secret config which
                  contains a name, metadata and a reference to secret store config to
                  which any connection details for this managed resource should be written.
                  Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: |-
                      SecretStoreConfigRef specifies which secret store config should be used
                      for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations are the annotations to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.annotations".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Labels are the labels/tags to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      type:
                        description: |-
                          Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                  This field is planned to be replaced in a future release in favor of
                  PublishConnectionDetailsTo. Currently, both could be set independently
                  and connection details would be published to both without affecting
                  each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: WorkloadIdentityPoolProviderStatus defines the observed state
              of WorkloadIdentityPoolProvider.
            properties:
              atProvider:
                properties:
                  attributeCondition:
                    description: |-
                      A Common Expression Language expression, in
                      plain text, to restrict what otherwise valid authentication credentials issued by the
                      provider should not be accepted.
                      The expression must output a boolean representing whether to allow the federation.
                      The following keywords may be referenced in the expressions:
                    type: string
                  attributeMapping:
                    additionalProperties:
                      type: string
                    description: |-
                      Maps attributes from authentication credentials issued by an external identity provider
                      to Google Cloud attributes, such as subject and segment.
                      Each key must be a string specifying the Google Cloud IAM attribute to map to.
                      The following keys are supported:
                    type: object
                    x-kubernetes-map-type: granular
                  aws:
                    description: |-
                      An Amazon Web Services identity provider. Not compatible with the property oidc or saml.
                      Structure is documented below.
                    items:
                      properties:
                        accountId:
                          description: The AWS account ID.
                          type: string
                      type: object
                    type: array
                  description:
                    description: A description for the provider. Cannot exceed 256
                      characters.
                    type: string
                  disabled:
                    description: |-
                      Whether the provider is disabled. You cannot use a disabled provider to exchange tokens.
                      However, existing tokens still grant access.
                    type: boolean
                  displayName:
                    description: A display name for the provider. Cannot exceed 32
                      characters.
                    type: string
                  id:
                    description: an identifier for the resource with format projects/{{project}}/locations/global/workloadIdentityPools/{{workload_identity_pool_id}}/providers/{{workload_identity_pool_provider_id}}
                    type: string
                  name:
                    description: |-
                      The resource name of the provider as
                      projects/{project_number}/locations/global/workloadIdentityPools/{workload_identity_pool_id}/providers/{workload_identity_pool_provider_id}.
                    type: string
                  oidc:
                    description: |-
                      An OpenId Connect 1.0 identity provider. Not compatible with the property aws or saml.
                      Structure is documented below.
                    items:
                      properties:
                        allowedAudiences:
                          description: |-
                            Acceptable values for the aud field (audience) in the OIDC token. Token exchange
                            requests are rejected if the token audience does not match one of the configured
                            values. Each audience may be at most 256 characters. A maximum of 10 audiences may
                            be configured.
                            If this list is empty, the OIDC token audience must be equal to the full canonical
                            resource name of the WorkloadIdentityPoolProvider, with or without the HTTPS prefix.
                            For example:
                          items:
                            type: string
                          type: array
                        issuerUri:
                          description: The OIDC issuer URL.
                          type: string
                        jwksJson:
                          description: |-
                            OIDC JWKs in JSON String format. For details on definition of a
                            JWK, see https:tools.ietf.org/html/rfc7517. If not set, then we
                            use the jwks_uri from the discovery document fetched from the
                            .well-known path for the issuer_uri. Currently, RSA and EC asymmetric
                            keys are supported. The JWK must use following format and include only
                            the following fields:
                          type: string
                      type: object
                    type: array
                  project:
                    description: |-
                      The ID of the project in which the resource belongs.
                      If it is not provided, the provider project is used.
                    type: string
                  saml:
                    description: |-
                      An SAML 2.0 identity provider. Not compatible with the property oidc or aws.
                      Structure is documented below.
                    items:
                      properties:
                        idpMetadataXml:
                          description: SAML Identity provider configuration metadata
                            xml doc.
                          type: string
                      type: object
                    type: array
                  state:
                    description: The state of the provider.
                    type: string
                  workloadIdentityPoolId:
                    description: |-
                      The ID used for the pool, which is the final component of the pool resource name. This
                      value should be 4-32 characters, and may contain the characters [a-z0-9-]. The prefix
                      gcp- is reserved for use by Google, and may not be specified.
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: |-
                  ObservedGeneration is the latest metadata.generation
                  which resulted in either a ready state, or stalled due to error
                  it can not recover from without human intervention.
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1beta2
    schema:
      openAPIV3Schema:
        description: WorkloadIdentityPoolProvider is the Schema for the WorkloadIdentityPoolProviders
          API. A configuration for an external identity provider.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: WorkloadIdentityPoolProviderSpec defines the desired state
              of WorkloadIdentityPoolProvider
            properties:
              deletionPolicy:
                default: Delete
                description: |-
                  DeletionPolicy specifies what will happen to the underlying external
                  when this managed resource is deleted - either "Delete" or "Orphan" the
                  external resource.
                  This field is planned to be deprecated in favor of the ManagementPolicies
                  field in a future release. Currently, both could be set independently and
                  non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  attributeCondition:
                    description: |-
                      A Common Expression Language expression, in
                      plain text, to restrict what otherwise valid authentication credentials issued by the
                      provider should not be accepted.
                      The expression must output a boolean representing whether to allow the federation.
                      The following keywords may be referenced in the expressions:
                    type: string
                  attributeMapping:
                    additionalProperties:
                      type: string
                    description: |-
                      Maps attributes from authentication credentials issued by an external identity provider
                      to Google Cloud attributes, such as subject and segment.
                      Each key must be a string specifying the Google Cloud IAM attribute to map to.
                      The following keys are supported:
                    type: object
                    x-kubernetes-map-type: granular
                  aws:
                    description: |-
                      An Amazon Web Services identity provider. Not compatible with the property oidc or saml.
                      Structure is documented below.
                    properties:
                      accountId:
                        description: The AWS account ID.
                        type: string
                    type: object
                  description:
                    description: A description for the provider. Cannot exceed 256
                      characters.
                    type: string
                  disabled:
                    description: |-
                      Whether the provider is disabled. You cannot use a disabled provider to exchange tokens.
                      However, existing tokens still grant access.
                    type: boolean
                  displayName:
                    description: A display name for the provider. Cannot exceed 32
                      characters.
                    type: string
                  oidc:
                    description: |-
                      An OpenId Connect 1.0 identity provider. Not compatible with the property aws or saml.
                      Structure is documented below.
                    properties:
                      allowedAudiences:
                        description: |-
                          Acceptable values for the aud field (audience) in the OIDC token. Token exchange
                          requests are rejected if the token audience does not match one of the configured
                          values. Each audience may be at most 256 characters. A maximum of 10 audiences may
                          be configured.
                          If this list is empty, the OIDC token audience must be equal to the full canonical
                          resource name of the WorkloadIdentityPoolProvider, with or without the HTTPS prefix.
                          For example:
                        items:
                          type: string
                        type: array
                      issuerUri:
                        description: The OIDC issuer URL.
                        type: string
                      jwksJson:
                        description: |-
                          OIDC JWKs in JSON String format. For details on definition of a
                          JWK, see https:tools.ietf.org/html/rfc7517. If not set, then we
                          use the jwks_uri from the discovery document fetched from the
                          .well-known path for the issuer_uri. Currently, RSA and EC asymmetric
                          keys are supported. The JWK must use following format and include only
                          the following fields:
                        type: string
                    type: object
                  project:
                    description: |-
                      The ID of the project in which the resource belongs.
                      If it is not provided, the provider project is used.
                    type: string
                  saml:
                    description: |-
                      An SAML 2.0 identity provider. Not compatible with the property oidc or aws.
                      Structure is documented below.
                    properties:
                      idpMetadataXml:
                        description: SAML Identity provider configuration metadata
                          xml doc.
                        type: string
                    type: object
                  workloadIdentityPoolId:
                    description: |-
                      The ID used for the pool, which is the final component of the pool resource name. This
                      value should be 4-32 characters, and may contain the characters [a-z0-9-]. The prefix
                      gcp- is reserved for use by Google, and may not be specified.
                    type: string
                  workloadIdentityPoolIdRef:
                    description: Reference to a WorkloadIdentityPool in iam to populate
                      workloadIdentityPoolId.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  workloadIdentityPoolIdSelector:
                    description: Selector for a WorkloadIdentityPool in iam to populate
                      workloadIdentityPoolId.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  x509:
                    description: |-
                      An X.509-type identity provider represents a CA. It is trusted to assert a
                      client identity if the client has a certificate that chains up to this CA.
                      Structure is documented below.
                    properties:
                      trustStore:
                        description: |-
                          A Trust store, use this trust store as a wrapper to config the trust
                          anchor and optional intermediate cas to help build the trust chain for
                          the incoming end entity certificate. Follow the x509 guidelines to
                          define those PEM encoded certs. Only 1 trust store is currently
                          supported.
                          Structure is documented below.
                        properties:
                          intermediateCas:
                            description: |-
                              Set of intermediate CA certificates used for building the trust chain to
                              trust anchor.
                              IMPORTANT: Intermediate CAs are only supported when configuring x509 federation.
                              Structure is documented below.
                            items:
                              properties:
                                pemCertificate:
                                  description: |-
                                    PEM certificate of the PKI used for validation. Must only contain one
                                    ca certificate(either root or intermediate cert).
                                  type: string
                              type: object
                            type: array
                          trustAnchors:
                            description: |-
                              List of Trust Anchors to be used while performing validation
                              against a given TrustStore. The incoming end entity's certificate
                              must be chained up to one of the trust anchors here.
                              Structure is documented below.
                            items:
                              properties:
                                pemCertificate:
                                  description: |-
                                    PEM certificate of the PKI used for validation. Must only contain one
                                    ca certificate(either root or intermediate cert).
                                  type: string
                              type: object
                            type: array
                        type: object
                    type: object
                type: object
              initProvider:
                description: |-
                  THIS IS A BETA FIELD. It will be honored
                  unless the Management Policies feature flag is disabled.
                  InitProvider holds the same fields as ForProvider, with the exception
                  of Identifier and other resource reference fields. The fields that are
                  in InitProvider are merged into ForProvider when the resource is created.
                  The same fields are also added to the terraform ignore_changes hook, to
                  avoid updating them after creation. This is useful for fields that are
                  required on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them, like an
                  autoscaler.
                properties:
                  attributeCondition:
                    description: |-
                      A Common Expression Language expression, in
                      plain text, to restrict what otherwise valid authentication credentials issued by the
                      provider should not be accepted.
                      The expression must output a boolean representing whether to allow the federation.
                      The following keywords may be referenced in the expressions:
                    type: string
                  attributeMapping:
                    additionalProperties:
                      type: string
                    description: |-
                      Maps attributes from authentication credentials issued by an external identity provider
                      to Google Cloud attributes, such as subject and segment.
                      Each key must be a string specifying the Google Cloud IAM attribute to map to.
                      The following keys are supported:
                    type: object
                    x-kubernetes-map-type: granular
                  aws:
                    description: |-
                      An Amazon Web Services identity provider. Not compatible with the property oidc or saml.
                      Structure is documented below.
                    properties:
                      accountId:
                        description: The AWS account ID.
                        type: string
                    type: object
                  description:
                    description: A description for the provider. Cannot exceed 256
                      characters.
                    type: string
                  disabled:
                    description: |-
                      Whether the provider is disabled. You cannot use a disabled provider to exchange tokens.
                      However, existing tokens still grant access.
                    type: boolean
                  displayName:
                    description: A display name for the provider. Cannot exceed 32
                      characters.
                    type: string
                  oidc:
                    description: |-
                      An OpenId Connect 1.0 identity provider. Not compatible with the property aws or saml.
                      Structure is documented below.
                    properties:
                      allowedAudiences:
                        description: |-
                          Acceptable values for the aud field (audience) in the OIDC token. Token exchange
                          requests are rejected if the token audience does not match one of the configured
                          values. Each audience may be at most 256 characters. A maximum of 10 audiences may
                          be configured.
                          If this list is empty, the OIDC token audience must be equal to the full canonical
                          resource name of the WorkloadIdentityPoolProvider, with or without the HTTPS prefix.
                          For example:
                        items:
                          type: string
                        type: array
                      issuerUri:
                        description: The OIDC issuer URL.
                        type: string
                      jwksJson:
                        description: |-
                          OIDC JWKs in JSON String format. For details on definition of a
                          JWK, see https:tools.ietf.org/html/rfc7517. If not set, then we
                          use the jwks_uri from the discovery document fetched from the
                          .well-known path for the issuer_uri. Currently, RSA and EC asymmetric
                          keys are supported. The JWK must use following format and include only
                          the following fields:
                        type: string
                    type: object
                  project:
                    description: |-
                      The ID of the project in which the resource belongs.
                      If it is not provided, the provider project is used.
                    type: string
                  saml:
                    description: |-
                      An SAML 2.0 identity provider. Not compatible with the property oidc or aws.
                      Structure is documented below.
                    properties:
                      idpMetadataXml:
                        description: SAML Identity provider configuration metadata
                          xml doc.
                        type: string
                    type: object
                  x509:
                    description: |-
                      An X.509-type identity provider represents a CA. It is trusted to assert a
                      client identity if the client has a certificate that chains up to this CA.
                      Structure is documented below.
                    properties:
                      trustStore:
                        description: |-
                          A Trust store, use this trust store as a wrapper to config the trust
                          anchor and optional intermediate cas to help build the trust chain for
                          the incoming end entity certificate. Follow the x509 guidelines to
                          define those PEM encoded certs. Only 1 trust store is currently
                          supported.
                          Structure is documented below.
                        properties:
                          intermediateCas:
                            description: |-
                              Set of intermediate CA certificates used for building the trust chain to
                              trust anchor.
                              IMPORTANT: Intermediate CAs are only supported when configuring x509 federation.
                              Structure is documented below.
                            items:
                              properties:
                                pemCertificate:
                                  description: |-
                                    PEM certificate of the PKI used for validation. Must only contain one
                                    ca certificate(either root or intermediate cert).
                                  type: string
                              type: object
                            type: array
                          trustAnchors:
                            description: |-
                              List of Trust Anchors to be used while performing validation
                              against a given TrustStore. The incoming end entity's certificate
                              must be chained up to one of the trust anchors here.
                              Structure is documented below.
                            items:
                              properties:
                                pemCertificate:
                                  description: |-
                                    PEM certificate of the PKI used for validation. Must only contain one
                                    ca certificate(either root or intermediate cert).
                                  type: string
                              type: object
                            type: array
                        type: object
                    type: object
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  This field is planned to replace the DeletionPolicy field in a future
                  release. Currently, both could be set independently and non-default
                  values would be honored if the feature flag is enabled. If both are
                  custom, the DeletionPolicy field will be ignored.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: |-
                  PublishConnectionDetailsTo specifies the connection secret config which
                  contains a name, metadata and a reference to secret store config to
                  which any connection details for this managed resource should be written.
                  Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: |-
                      SecretStoreConfigRef specifies which secret store config should be used
                      for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations are the annotations to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.annotations".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Labels are the labels/tags to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      type:
                        description: |-
                          Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                  This field is planned to be replaced in a future release in favor of
                  PublishConnectionDetailsTo. Currently, both could be set independently
                  and connection details would be published to both without affecting
                  each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: WorkloadIdentityPoolProviderStatus defines the observed state
              of WorkloadIdentityPoolProvider.
            properties:
              atProvider:
                properties:
                  attributeCondition:
                    description: |-
                      A Common Expression Language expression, in
                      plain text, to restrict what otherwise valid authentication credentials issued by the
                      provider should not be accepted.
                      The expression must output a boolean representing whether to allow the federation.
                      The following keywords may be referenced in the expressions:
                    type: string
                  attributeMapping:
                    additionalProperties:
                      type: string
                    description: |-
                      Maps attributes from authentication credentials issued by an external identity provider
                      to Google Cloud attributes, such as subject and segment.
                      Each key must be a string specifying the Google Cloud IAM attribute to map to.
                      The following keys are supported:
                    type: object
                    x-kubernetes-map-type: granular
                  aws:
                    description: |-
                      An Amazon Web Services identity provider. Not compatible with the property oidc or saml.
                      Structure is documented below.
                    properties:
                      accountId:
                        description: The AWS account ID.
                        type: string
                    type: object
                  description:
                    description: A description for the provider. Cannot exceed 256
                      characters.
                    type: string
                  disabled:
                    description: |-
                      Whether the provider is disabled. You cannot use a disabled provider to exchange tokens.
                      However, existing tokens still grant access.
                    type: boolean
                  displayName:
                    description: A display name for the provider. Cannot exceed 32
                      characters.
                    type: string
                  id:
                    description: an identifier for the resource with format projects/{{project}}/locations/global/workloadIdentityPools/{{workload_identity_pool_id}}/providers/{{workload_identity_pool_provider_id}}
                    type: string
                  name:
                    description: |-
                      The resource name of the provider as
                      projects/{project_number}/locations/global/workloadIdentityPools/{workload_identity_pool_id}/providers/{workload_identity_pool_provider_id}.
                    type: string
                  oidc:
                    description: |-
                      An OpenId Connect 1.0 identity provider. Not compatible with the property aws or saml.
                      Structure is documented below.
                    properties:
                      allowedAudiences:
                        description: |-
                          Acceptable values for the aud field (audience) in the OIDC token. Token exchange
                          requests are rejected if the token audience does not match one of the configured
                          values. Each audience may be at most 256 characters. A maximum of 10 audiences may
                          be configured.
                          If this list is empty, the OIDC token audience must be equal to the full canonical
                          resource name of the WorkloadIdentityPoolProvider, with or without the HTTPS prefix.
                          For example:
                        items:
                          type: string
                        type: array
                      issuerUri:
                        description: The OIDC issuer URL.
                        type: string
                      jwksJson:
                        description: |-
                          OIDC JWKs in JSON String format. For details on definition of a
                          JWK, see https:tools.ietf.org/html/rfc7517. If not set, then we
                          use the jwks_uri from the discovery document fetched from the
                          .well-known path for the issuer_uri. Currently, RSA and EC asymmetric
                          keys are supported. The JWK must use following format and include only
                          the following fields:
                        type: string
                    type: object
                  project:
                    description: |-
                      The ID of the project in which the resource belongs.
                      If it is not provided, the provider project is used.
                    type: string
                  saml:
                    description: |-
                      An SAML 2.0 identity provider. Not compatible with the property oidc or aws.
                      Structure is documented below.
                    properties:
                      idpMetadataXml:
                        description: SAML Identity provider configuration metadata
                          xml doc.
                        type: string
                    type: object
                  state:
                    description: The state of the provider.
                    type: string
                  workloadIdentityPoolId:
                    description: |-
                      The ID used for the pool, which is the final component of the pool resource name. This
                      value should be 4-32 characters, and may contain the characters [a-z0-9-]. The prefix
                      gcp- is reserved for use by Google, and may not be specified.
                    type: string
                  x509:
                    description: |-
                      An X.509-type identity provider represents a CA. It is trusted to assert a
                      client identity if the client has a certificate that chains up to this CA.
                      Structure is documented below.
                    properties:
                      trustStore:
                        description: |-
                          A Trust store, use this trust store as a wrapper to config the trust
                          anchor and optional intermediate cas to help build the trust chain for
                          the incoming end entity certificate. Follow the x509 guidelines to
                          define those PEM encoded certs. Only 1 trust store is currently
                          supported.
                          Structure is documented below.
                        properties:
                          intermediateCas:
                            description: |-
                              Set of intermediate CA certificates used for building the trust chain to
                              trust anchor.
                              IMPORTANT: Intermediate CAs are only supported when configuring x509 federation.
                              Structure is documented below.
                            items:
                              properties:
                                pemCertificate:
                                  description: |-
                                    PEM certificate of the PKI used for validation. Must only contain one
                                    ca certificate(either root or intermediate cert).
                                  type: string
                              type: object
                            type: array
                          trustAnchors:
                            description: |-
                              List of Trust Anchors to be used while performing validation
                              against a given TrustStore. The incoming end entity's certificate
                              must be chained up to one of the trust anchors here.
                              Structure is documented below.
                            items:
                              properties:
                                pemCertificate:
                                  description: |-
                                    PEM certificate of the PKI used for validation. Must only contain one
                                    ca certificate(either root or intermediate cert).
                                  type: string
                              type: object
                            type: array
                        type: object
                    type: object
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: |-
                  ObservedGeneration is the latest metadata.generation
                  which resulted in either a ready state, or stalled due to error
                  it can not recover from without human intervention.
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: false
    subresources:
      status: {}
