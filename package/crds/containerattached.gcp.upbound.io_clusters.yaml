---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: clusters.containerattached.gcp.upbound.io
spec:
  group: containerattached.gcp.upbound.io
  names:
    categories:
    - crossplane
    - managed
    - gcp
    kind: Cluster
    listKind: ClusterList
    plural: clusters
    singular: cluster
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: Cluster is the Schema for the Clusters API. An Anthos cluster
          running on customer owned infrastructure.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: ClusterSpec defines the desired state of Cluster
            properties:
              deletionPolicy:
                default: Delete
                description: |-
                  DeletionPolicy specifies what will happen to the underlying external
                  when this managed resource is deleted - either "Delete" or "Orphan" the
                  external resource.
                  This field is planned to be deprecated in favor of the ManagementPolicies
                  field in a future release. Currently, both could be set independently and
                  non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  annotations:
                    additionalProperties:
                      type: string
                    description: |-
                      Optional. Annotations on the cluster. This field has the same
                      restrictions as Kubernetes annotations. The total size of all keys and
                      values combined is limited to 256k. Key can have 2 segments: prefix
                      and name , separated by a slash (/). Prefix must be a DNS subdomain.
                      Name must be 63 characters or less, begin and end with alphanumerics,
                      with dashes (-), underscores (_), dots (.), and alphanumerics between.
                    type: object
                    x-kubernetes-map-type: granular
                  authorization:
                    description: |-
                      Configuration related to the cluster RBAC settings.
                      Structure is documented below.
                    items:
                      properties:
                        adminGroups:
                          description: |-
                            Groups that can perform operations as a cluster admin. A managed
                            ClusterRoleBinding will be created to grant the cluster-admin ClusterRole
                            to the groups. Up to ten admin groups can be provided.
                            For more info on RBAC, see
                            https://kubernetes.io/docs/reference/access-authn-authz/rbac/#user-facing-roles
                          items:
                            type: string
                          type: array
                        adminUsers:
                          description: |-
                            Users that can perform operations as a cluster admin. A managed
                            ClusterRoleBinding will be created to grant the cluster-admin ClusterRole
                            to the users. Up to ten admin users can be provided.
                            For more info on RBAC, see
                            https://kubernetes.io/docs/reference/access-authn-authz/rbac/#user-facing-roles
                          items:
                            type: string
                          type: array
                      type: object
                    type: array
                  binaryAuthorization:
                    description: |-
                      Binary Authorization configuration.
                      Structure is documented below.
                    items:
                      properties:
                        evaluationMode:
                          description: |-
                            Configure Binary Authorization evaluation mode.
                            Possible values are: DISABLED, PROJECT_SINGLETON_POLICY_ENFORCE.
                          type: string
                      type: object
                    type: array
                  deletionPolicy:
                    description: Policy to determine what flags to send on delete.
                    type: string
                  description:
                    description: |-
                      A human readable description of this attached cluster. Cannot be longer
                      than 255 UTF-8 encoded bytes.
                    type: string
                  distribution:
                    description: |-
                      The Kubernetes distribution of the underlying attached cluster. Supported values:
                      "eks", "aks".
                    type: string
                  fleet:
                    description: |-
                      Fleet configuration.
                      Structure is documented below.
                    items:
                      properties:
                        project:
                          description: The number of the Fleet host project where
                            this cluster will be registered.
                          type: string
                      type: object
                    type: array
                  location:
                    description: The location for the resource
                    type: string
                  loggingConfig:
                    description: |-
                      Logging configuration.
                      Structure is documented below.
                    items:
                      properties:
                        componentConfig:
                          description: |-
                            The configuration of the logging components
                            Structure is documented below.
                          items:
                            properties:
                              enableComponents:
                                description: |-
                                  The components to be enabled.
                                  Each value may be one of: SYSTEM_COMPONENTS, WORKLOADS.
                                items:
                                  type: string
                                type: array
                            type: object
                          type: array
                      type: object
                    type: array
                  monitoringConfig:
                    description: |-
                      Monitoring configuration.
                      Structure is documented below.
                    items:
                      properties:
                        managedPrometheusConfig:
                          description: |-
                            Enable Google Cloud Managed Service for Prometheus in the cluster.
                            Structure is documented below.
                          items:
                            properties:
                              enabled:
                                description: Enable Managed Collection.
                                type: boolean
                            type: object
                          type: array
                      type: object
                    type: array
                  oidcConfig:
                    description: |-
                      OIDC discovery information of the target cluster.
                      Kubernetes Service Account (KSA) tokens are JWT tokens signed by the cluster
                      API server. This fields indicates how GCP services
                      validate KSA tokens in order to allow system workloads (such as GKE Connect
                      and telemetry agents) to authenticate back to GCP.
                      Both clusters with public and private issuer URLs are supported.
                      Clusters with public issuers only need to specify the issuer_url field
                      while clusters with private issuers need to provide both
                      issuer_url and jwks.
                      Structure is documented below.
                    items:
                      properties:
                        issuerUrl:
                          description: A JSON Web Token (JWT) issuer URI. issuer must
                            start with https://
                          type: string
                        jwks:
                          description: OIDC verification keys in JWKS format (RFC
                            7517).
                          type: string
                      type: object
                    type: array
                  platformVersion:
                    description: The platform version for the cluster (e.g. 1.23.0-gke.1).
                    type: string
                  project:
                    description: The number of the Fleet host project where this cluster
                      will be registered.
                    type: string
                  proxyConfig:
                    description: |-
                      Support for proxy configuration.
                      Structure is documented below.
                    items:
                      properties:
                        kubernetesSecret:
                          description: |-
                            The Kubernetes Secret resource that contains the HTTP(S) proxy configuration.
                            Structure is documented below.
                          items:
                            properties:
                              name:
                                description: Name of the kubernetes secret containing
                                  the proxy config.
                                type: string
                              namespace:
                                description: Namespace of the kubernetes secret containing
                                  the proxy config.
                                type: string
                            type: object
                          type: array
                      type: object
                    type: array
                required:
                - location
                type: object
              initProvider:
                description: |-
                  THIS IS A BETA FIELD. It will be honored
                  unless the Management Policies feature flag is disabled.
                  InitProvider holds the same fields as ForProvider, with the exception
                  of Identifier and other resource reference fields. The fields that are
                  in InitProvider are merged into ForProvider when the resource is created.
                  The same fields are also added to the terraform ignore_changes hook, to
                  avoid updating them after creation. This is useful for fields that are
                  required on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them, like an
                  autoscaler.
                properties:
                  annotations:
                    additionalProperties:
                      type: string
                    description: |-
                      Optional. Annotations on the cluster. This field has the same
                      restrictions as Kubernetes annotations. The total size of all keys and
                      values combined is limited to 256k. Key can have 2 segments: prefix
                      and name , separated by a slash (/). Prefix must be a DNS subdomain.
                      Name must be 63 characters or less, begin and end with alphanumerics,
                      with dashes (-), underscores (_), dots (.), and alphanumerics between.
                    type: object
                    x-kubernetes-map-type: granular
                  authorization:
                    description: |-
                      Configuration related to the cluster RBAC settings.
                      Structure is documented below.
                    items:
                      properties:
                        adminGroups:
                          description: |-
                            Groups that can perform operations as a cluster admin. A managed
                            ClusterRoleBinding will be created to grant the cluster-admin ClusterRole
                            to the groups. Up to ten admin groups can be provided.
                            For more info on RBAC, see
                            https://kubernetes.io/docs/reference/access-authn-authz/rbac/#user-facing-roles
                          items:
                            type: string
                          type: array
                        adminUsers:
                          description: |-
                            Users that can perform operations as a cluster admin. A managed
                            ClusterRoleBinding will be created to grant the cluster-admin ClusterRole
                            to the users. Up to ten admin users can be provided.
                            For more info on RBAC, see
                            https://kubernetes.io/docs/reference/access-authn-authz/rbac/#user-facing-roles
                          items:
                            type: string
                          type: array
                      type: object
                    type: array
                  binaryAuthorization:
                    description: |-
                      Binary Authorization configuration.
                      Structure is documented below.
                    items:
                      properties:
                        evaluationMode:
                          description: |-
                            Configure Binary Authorization evaluation mode.
                            Possible values are: DISABLED, PROJECT_SINGLETON_POLICY_ENFORCE.
                          type: string
                      type: object
                    type: array
                  deletionPolicy:
                    description: Policy to determine what flags to send on delete.
                    type: string
                  description:
                    description: |-
                      A human readable description of this attached cluster. Cannot be longer
                      than 255 UTF-8 encoded bytes.
                    type: string
                  distribution:
                    description: |-
                      The Kubernetes distribution of the underlying attached cluster. Supported values:
                      "eks", "aks".
                    type: string
                  fleet:
                    description: |-
                      Fleet configuration.
                      Structure is documented below.
                    items:
                      properties:
                        project:
                          description: The number of the Fleet host project where
                            this cluster will be registered.
                          type: string
                      type: object
                    type: array
                  loggingConfig:
                    description: |-
                      Logging configuration.
                      Structure is documented below.
                    items:
                      properties:
                        componentConfig:
                          description: |-
                            The configuration of the logging components
                            Structure is documented below.
                          items:
                            properties:
                              enableComponents:
                                description: |-
                                  The components to be enabled.
                                  Each value may be one of: SYSTEM_COMPONENTS, WORKLOADS.
                                items:
                                  type: string
                                type: array
                            type: object
                          type: array
                      type: object
                    type: array
                  monitoringConfig:
                    description: |-
                      Monitoring configuration.
                      Structure is documented below.
                    items:
                      properties:
                        managedPrometheusConfig:
                          description: |-
                            Enable Google Cloud Managed Service for Prometheus in the cluster.
                            Structure is documented below.
                          items:
                            properties:
                              enabled:
                                description: Enable Managed Collection.
                                type: boolean
                            type: object
                          type: array
                      type: object
                    type: array
                  oidcConfig:
                    description: |-
                      OIDC discovery information of the target cluster.
                      Kubernetes Service Account (KSA) tokens are JWT tokens signed by the cluster
                      API server. This fields indicates how GCP services
                      validate KSA tokens in order to allow system workloads (such as GKE Connect
                      and telemetry agents) to authenticate back to GCP.
                      Both clusters with public and private issuer URLs are supported.
                      Clusters with public issuers only need to specify the issuer_url field
                      while clusters with private issuers need to provide both
                      issuer_url and jwks.
                      Structure is documented below.
                    items:
                      properties:
                        issuerUrl:
                          description: A JSON Web Token (JWT) issuer URI. issuer must
                            start with https://
                          type: string
                        jwks:
                          description: OIDC verification keys in JWKS format (RFC
                            7517).
                          type: string
                      type: object
                    type: array
                  platformVersion:
                    description: The platform version for the cluster (e.g. 1.23.0-gke.1).
                    type: string
                  project:
                    description: The number of the Fleet host project where this cluster
                      will be registered.
                    type: string
                  proxyConfig:
                    description: |-
                      Support for proxy configuration.
                      Structure is documented below.
                    items:
                      properties:
                        kubernetesSecret:
                          description: |-
                            The Kubernetes Secret resource that contains the HTTP(S) proxy configuration.
                            Structure is documented below.
                          items:
                            properties:
                              name:
                                description: Name of the kubernetes secret containing
                                  the proxy config.
                                type: string
                              namespace:
                                description: Namespace of the kubernetes secret containing
                                  the proxy config.
                                type: string
                            type: object
                          type: array
                      type: object
                    type: array
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  This field is planned to replace the DeletionPolicy field in a future
                  release. Currently, both could be set independently and non-default
                  values would be honored if the feature flag is enabled. If both are
                  custom, the DeletionPolicy field will be ignored.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: |-
                  PublishConnectionDetailsTo specifies the connection secret config which
                  contains a name, metadata and a reference to secret store config to
                  which any connection details for this managed resource should be written.
                  Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: |-
                      SecretStoreConfigRef specifies which secret store config should be used
                      for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations are the annotations to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.annotations".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Labels are the labels/tags to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      type:
                        description: |-
                          Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                  This field is planned to be replaced in a future release in favor of
                  PublishConnectionDetailsTo. Currently, both could be set independently
                  and connection details would be published to both without affecting
                  each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
            x-kubernetes-validations:
            - message: spec.forProvider.distribution is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.distribution)
                || (has(self.initProvider) && has(self.initProvider.distribution))'
            - message: spec.forProvider.fleet is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.fleet)
                || (has(self.initProvider) && has(self.initProvider.fleet))'
            - message: spec.forProvider.oidcConfig is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.oidcConfig)
                || (has(self.initProvider) && has(self.initProvider.oidcConfig))'
            - message: spec.forProvider.platformVersion is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.platformVersion)
                || (has(self.initProvider) && has(self.initProvider.platformVersion))'
          status:
            description: ClusterStatus defines the observed state of Cluster.
            properties:
              atProvider:
                properties:
                  annotations:
                    additionalProperties:
                      type: string
                    description: |-
                      Optional. Annotations on the cluster. This field has the same
                      restrictions as Kubernetes annotations. The total size of all keys and
                      values combined is limited to 256k. Key can have 2 segments: prefix
                      and name , separated by a slash (/). Prefix must be a DNS subdomain.
                      Name must be 63 characters or less, begin and end with alphanumerics,
                      with dashes (-), underscores (_), dots (.), and alphanumerics between.
                    type: object
                    x-kubernetes-map-type: granular
                  authorization:
                    description: |-
                      Configuration related to the cluster RBAC settings.
                      Structure is documented below.
                    items:
                      properties:
                        adminGroups:
                          description: |-
                            Groups that can perform operations as a cluster admin. A managed
                            ClusterRoleBinding will be created to grant the cluster-admin ClusterRole
                            to the groups. Up to ten admin groups can be provided.
                            For more info on RBAC, see
                            https://kubernetes.io/docs/reference/access-authn-authz/rbac/#user-facing-roles
                          items:
                            type: string
                          type: array
                        adminUsers:
                          description: |-
                            Users that can perform operations as a cluster admin. A managed
                            ClusterRoleBinding will be created to grant the cluster-admin ClusterRole
                            to the users. Up to ten admin users can be provided.
                            For more info on RBAC, see
                            https://kubernetes.io/docs/reference/access-authn-authz/rbac/#user-facing-roles
                          items:
                            type: string
                          type: array
                      type: object
                    type: array
                  binaryAuthorization:
                    description: |-
                      Binary Authorization configuration.
                      Structure is documented below.
                    items:
                      properties:
                        evaluationMode:
                          description: |-
                            Configure Binary Authorization evaluation mode.
                            Possible values are: DISABLED, PROJECT_SINGLETON_POLICY_ENFORCE.
                          type: string
                      type: object
                    type: array
                  clusterRegion:
                    description: |-
                      Output only. The region where this cluster runs.
                      For EKS clusters, this is an AWS region. For AKS clusters,
                      this is an Azure region.
                    type: string
                  createTime:
                    description: Output only. The time at which this cluster was created.
                    type: string
                  deletionPolicy:
                    description: Policy to determine what flags to send on delete.
                    type: string
                  description:
                    description: |-
                      A human readable description of this attached cluster. Cannot be longer
                      than 255 UTF-8 encoded bytes.
                    type: string
                  distribution:
                    description: |-
                      The Kubernetes distribution of the underlying attached cluster. Supported values:
                      "eks", "aks".
                    type: string
                  effectiveAnnotations:
                    additionalProperties:
                      type: string
                    type: object
                    x-kubernetes-map-type: granular
                  errors:
                    description: |-
                      A set of errors found in the cluster.
                      Structure is documented below.
                    items:
                      properties:
                        message:
                          description: Human-friendly description of the error.
                          type: string
                      type: object
                    type: array
                  fleet:
                    description: |-
                      Fleet configuration.
                      Structure is documented below.
                    items:
                      properties:
                        membership:
                          description: |-
                            (Output)
                            The name of the managed Hub Membership resource associated to this
                            cluster. Membership names are formatted as
                            projects//locations/global/membership/.
                          type: string
                        project:
                          description: The number of the Fleet host project where
                            this cluster will be registered.
                          type: string
                      type: object
                    type: array
                  id:
                    description: an identifier for the resource with format projects/{{project}}/locations/{{location}}/attachedClusters/{{name}}
                    type: string
                  kubernetesVersion:
                    description: The Kubernetes version of the cluster.
                    type: string
                  location:
                    description: The location for the resource
                    type: string
                  loggingConfig:
                    description: |-
                      Logging configuration.
                      Structure is documented below.
                    items:
                      properties:
                        componentConfig:
                          description: |-
                            The configuration of the logging components
                            Structure is documented below.
                          items:
                            properties:
                              enableComponents:
                                description: |-
                                  The components to be enabled.
                                  Each value may be one of: SYSTEM_COMPONENTS, WORKLOADS.
                                items:
                                  type: string
                                type: array
                            type: object
                          type: array
                      type: object
                    type: array
                  monitoringConfig:
                    description: |-
                      Monitoring configuration.
                      Structure is documented below.
                    items:
                      properties:
                        managedPrometheusConfig:
                          description: |-
                            Enable Google Cloud Managed Service for Prometheus in the cluster.
                            Structure is documented below.
                          items:
                            properties:
                              enabled:
                                description: Enable Managed Collection.
                                type: boolean
                            type: object
                          type: array
                      type: object
                    type: array
                  oidcConfig:
                    description: |-
                      OIDC discovery information of the target cluster.
                      Kubernetes Service Account (KSA) tokens are JWT tokens signed by the cluster
                      API server. This fields indicates how GCP services
                      validate KSA tokens in order to allow system workloads (such as GKE Connect
                      and telemetry agents) to authenticate back to GCP.
                      Both clusters with public and private issuer URLs are supported.
                      Clusters with public issuers only need to specify the issuer_url field
                      while clusters with private issuers need to provide both
                      issuer_url and jwks.
                      Structure is documented below.
                    items:
                      properties:
                        issuerUrl:
                          description: A JSON Web Token (JWT) issuer URI. issuer must
                            start with https://
                          type: string
                        jwks:
                          description: OIDC verification keys in JWKS format (RFC
                            7517).
                          type: string
                      type: object
                    type: array
                  platformVersion:
                    description: The platform version for the cluster (e.g. 1.23.0-gke.1).
                    type: string
                  project:
                    description: The number of the Fleet host project where this cluster
                      will be registered.
                    type: string
                  proxyConfig:
                    description: |-
                      Support for proxy configuration.
                      Structure is documented below.
                    items:
                      properties:
                        kubernetesSecret:
                          description: |-
                            The Kubernetes Secret resource that contains the HTTP(S) proxy configuration.
                            Structure is documented below.
                          items:
                            properties:
                              name:
                                description: Name of the kubernetes secret containing
                                  the proxy config.
                                type: string
                              namespace:
                                description: Namespace of the kubernetes secret containing
                                  the proxy config.
                                type: string
                            type: object
                          type: array
                      type: object
                    type: array
                  reconciling:
                    description: If set, there are currently changes in flight to
                      the cluster.
                    type: boolean
                  state:
                    description: |-
                      The current state of the cluster. Possible values:
                      STATE_UNSPECIFIED, PROVISIONING, RUNNING, RECONCILING, STOPPING, ERROR,
                      DEGRADED
                    type: string
                  uid:
                    description: A globally unique identifier for the cluster.
                    type: string
                  updateTime:
                    description: The time at which this cluster was last updated.
                    type: string
                  workloadIdentityConfig:
                    description: |-
                      Workload Identity settings.
                      Structure is documented below.
                    items:
                      properties:
                        identityProvider:
                          description: |-
                            The ID of the OIDC Identity Provider (IdP) associated to
                            the Workload Identity Pool.
                          type: string
                        issuerUri:
                          description: The OIDC issuer URL for this cluster.
                          type: string
                        workloadPool:
                          description: The Workload Identity Pool associated to the
                            cluster.
                          type: string
                      type: object
                    type: array
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: |-
                  ObservedGeneration is the latest metadata.generation
                  which resulted in either a ready state, or stalled due to error
                  it can not recover from without human intervention.
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1beta2
    schema:
      openAPIV3Schema:
        description: Cluster is the Schema for the Clusters API. An Anthos cluster
          running on customer owned infrastructure.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: ClusterSpec defines the desired state of Cluster
            properties:
              deletionPolicy:
                default: Delete
                description: |-
                  DeletionPolicy specifies what will happen to the underlying external
                  when this managed resource is deleted - either "Delete" or "Orphan" the
                  external resource.
                  This field is planned to be deprecated in favor of the ManagementPolicies
                  field in a future release. Currently, both could be set independently and
                  non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  annotations:
                    additionalProperties:
                      type: string
                    description: |-
                      Optional. Annotations on the cluster. This field has the same
                      restrictions as Kubernetes annotations. The total size of all keys and
                      values combined is limited to 256k. Key can have 2 segments: prefix
                      and name , separated by a slash (/). Prefix must be a DNS subdomain.
                      Name must be 63 characters or less, begin and end with alphanumerics,
                      with dashes (-), underscores (_), dots (.), and alphanumerics between.
                    type: object
                    x-kubernetes-map-type: granular
                  authorization:
                    description: |-
                      Configuration related to the cluster RBAC settings.
                      Structure is documented below.
                    properties:
                      adminGroups:
                        description: |-
                          Groups that can perform operations as a cluster admin. A managed
                          ClusterRoleBinding will be created to grant the cluster-admin ClusterRole
                          to the groups. Up to ten admin groups can be provided.
                          For more info on RBAC, see
                          https://kubernetes.io/docs/reference/access-authn-authz/rbac/#user-facing-roles
                        items:
                          type: string
                        type: array
                      adminUsers:
                        description: |-
                          Users that can perform operations as a cluster admin. A managed
                          ClusterRoleBinding will be created to grant the cluster-admin ClusterRole
                          to the users. Up to ten admin users can be provided.
                          For more info on RBAC, see
                          https://kubernetes.io/docs/reference/access-authn-authz/rbac/#user-facing-roles
                        items:
                          type: string
                        type: array
                    type: object
                  binaryAuthorization:
                    description: |-
                      Binary Authorization configuration.
                      Structure is documented below.
                    properties:
                      evaluationMode:
                        description: |-
                          Configure Binary Authorization evaluation mode.
                          Possible values are: DISABLED, PROJECT_SINGLETON_POLICY_ENFORCE.
                        type: string
                    type: object
                  deletionPolicy:
                    description: Policy to determine what flags to send on delete.
                    type: string
                  description:
                    description: |-
                      A human readable description of this attached cluster. Cannot be longer
                      than 255 UTF-8 encoded bytes.
                    type: string
                  distribution:
                    description: |-
                      The Kubernetes distribution of the underlying attached cluster. Supported values:
                      "eks", "aks", "generic". The generic distribution provides the ability to register
                      or migrate any CNCF conformant cluster.
                    type: string
                  fleet:
                    description: |-
                      Fleet configuration.
                      Structure is documented below.
                    properties:
                      project:
                        description: The number of the Fleet host project where this
                          cluster will be registered.
                        type: string
                    type: object
                  location:
                    description: The location for the resource
                    type: string
                  loggingConfig:
                    description: |-
                      Logging configuration.
                      Structure is documented below.
                    properties:
                      componentConfig:
                        description: |-
                          The configuration of the logging components
                          Structure is documented below.
                        properties:
                          enableComponents:
                            description: |-
                              The components to be enabled.
                              Each value may be one of: SYSTEM_COMPONENTS, WORKLOADS.
                            items:
                              type: string
                            type: array
                        type: object
                    type: object
                  monitoringConfig:
                    description: |-
                      Monitoring configuration.
                      Structure is documented below.
                    properties:
                      managedPrometheusConfig:
                        description: |-
                          Enable Google Cloud Managed Service for Prometheus in the cluster.
                          Structure is documented below.
                        properties:
                          enabled:
                            description: Enable Managed Collection.
                            type: boolean
                        type: object
                    type: object
                  oidcConfig:
                    description: |-
                      OIDC discovery information of the target cluster.
                      Kubernetes Service Account (KSA) tokens are JWT tokens signed by the cluster
                      API server. This fields indicates how GCP services
                      validate KSA tokens in order to allow system workloads (such as GKE Connect
                      and telemetry agents) to authenticate back to GCP.
                      Both clusters with public and private issuer URLs are supported.
                      Clusters with public issuers only need to specify the issuer_url field
                      while clusters with private issuers need to provide both
                      issuer_url and jwks.
                      Structure is documented below.
                    properties:
                      issuerUrl:
                        description: A JSON Web Token (JWT) issuer URI. issuer must
                          start with https://
                        type: string
                      jwks:
                        description: OIDC verification keys in JWKS format (RFC 7517).
                        type: string
                    type: object
                  platformVersion:
                    description: The platform version for the cluster (e.g. 1.23.0-gke.1).
                    type: string
                  project:
                    description: The number of the Fleet host project where this cluster
                      will be registered.
                    type: string
                  proxyConfig:
                    description: |-
                      Support for proxy configuration.
                      Structure is documented below.
                    properties:
                      kubernetesSecret:
                        description: |-
                          The Kubernetes Secret resource that contains the HTTP(S) proxy configuration.
                          Structure is documented below.
                        properties:
                          name:
                            description: Name of the kubernetes secret containing
                              the proxy config.
                            type: string
                          namespace:
                            description: Namespace of the kubernetes secret containing
                              the proxy config.
                            type: string
                        type: object
                    type: object
                required:
                - location
                type: object
              initProvider:
                description: |-
                  THIS IS A BETA FIELD. It will be honored
                  unless the Management Policies feature flag is disabled.
                  InitProvider holds the same fields as ForProvider, with the exception
                  of Identifier and other resource reference fields. The fields that are
                  in InitProvider are merged into ForProvider when the resource is created.
                  The same fields are also added to the terraform ignore_changes hook, to
                  avoid updating them after creation. This is useful for fields that are
                  required on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them, like an
                  autoscaler.
                properties:
                  annotations:
                    additionalProperties:
                      type: string
                    description: |-
                      Optional. Annotations on the cluster. This field has the same
                      restrictions as Kubernetes annotations. The total size of all keys and
                      values combined is limited to 256k. Key can have 2 segments: prefix
                      and name , separated by a slash (/). Prefix must be a DNS subdomain.
                      Name must be 63 characters or less, begin and end with alphanumerics,
                      with dashes (-), underscores (_), dots (.), and alphanumerics between.
                    type: object
                    x-kubernetes-map-type: granular
                  authorization:
                    description: |-
                      Configuration related to the cluster RBAC settings.
                      Structure is documented below.
                    properties:
                      adminGroups:
                        description: |-
                          Groups that can perform operations as a cluster admin. A managed
                          ClusterRoleBinding will be created to grant the cluster-admin ClusterRole
                          to the groups. Up to ten admin groups can be provided.
                          For more info on RBAC, see
                          https://kubernetes.io/docs/reference/access-authn-authz/rbac/#user-facing-roles
                        items:
                          type: string
                        type: array
                      adminUsers:
                        description: |-
                          Users that can perform operations as a cluster admin. A managed
                          ClusterRoleBinding will be created to grant the cluster-admin ClusterRole
                          to the users. Up to ten admin users can be provided.
                          For more info on RBAC, see
                          https://kubernetes.io/docs/reference/access-authn-authz/rbac/#user-facing-roles
                        items:
                          type: string
                        type: array
                    type: object
                  binaryAuthorization:
                    description: |-
                      Binary Authorization configuration.
                      Structure is documented below.
                    properties:
                      evaluationMode:
                        description: |-
                          Configure Binary Authorization evaluation mode.
                          Possible values are: DISABLED, PROJECT_SINGLETON_POLICY_ENFORCE.
                        type: string
                    type: object
                  deletionPolicy:
                    description: Policy to determine what flags to send on delete.
                    type: string
                  description:
                    description: |-
                      A human readable description of this attached cluster. Cannot be longer
                      than 255 UTF-8 encoded bytes.
                    type: string
                  distribution:
                    description: |-
                      The Kubernetes distribution of the underlying attached cluster. Supported values:
                      "eks", "aks", "generic". The generic distribution provides the ability to register
                      or migrate any CNCF conformant cluster.
                    type: string
                  fleet:
                    description: |-
                      Fleet configuration.
                      Structure is documented below.
                    properties:
                      project:
                        description: The number of the Fleet host project where this
                          cluster will be registered.
                        type: string
                    type: object
                  loggingConfig:
                    description: |-
                      Logging configuration.
                      Structure is documented below.
                    properties:
                      componentConfig:
                        description: |-
                          The configuration of the logging components
                          Structure is documented below.
                        properties:
                          enableComponents:
                            description: |-
                              The components to be enabled.
                              Each value may be one of: SYSTEM_COMPONENTS, WORKLOADS.
                            items:
                              type: string
                            type: array
                        type: object
                    type: object
                  monitoringConfig:
                    description: |-
                      Monitoring configuration.
                      Structure is documented below.
                    properties:
                      managedPrometheusConfig:
                        description: |-
                          Enable Google Cloud Managed Service for Prometheus in the cluster.
                          Structure is documented below.
                        properties:
                          enabled:
                            description: Enable Managed Collection.
                            type: boolean
                        type: object
                    type: object
                  oidcConfig:
                    description: |-
                      OIDC discovery information of the target cluster.
                      Kubernetes Service Account (KSA) tokens are JWT tokens signed by the cluster
                      API server. This fields indicates how GCP services
                      validate KSA tokens in order to allow system workloads (such as GKE Connect
                      and telemetry agents) to authenticate back to GCP.
                      Both clusters with public and private issuer URLs are supported.
                      Clusters with public issuers only need to specify the issuer_url field
                      while clusters with private issuers need to provide both
                      issuer_url and jwks.
                      Structure is documented below.
                    properties:
                      issuerUrl:
                        description: A JSON Web Token (JWT) issuer URI. issuer must
                          start with https://
                        type: string
                      jwks:
                        description: OIDC verification keys in JWKS format (RFC 7517).
                        type: string
                    type: object
                  platformVersion:
                    description: The platform version for the cluster (e.g. 1.23.0-gke.1).
                    type: string
                  project:
                    description: The number of the Fleet host project where this cluster
                      will be registered.
                    type: string
                  proxyConfig:
                    description: |-
                      Support for proxy configuration.
                      Structure is documented below.
                    properties:
                      kubernetesSecret:
                        description: |-
                          The Kubernetes Secret resource that contains the HTTP(S) proxy configuration.
                          Structure is documented below.
                        properties:
                          name:
                            description: Name of the kubernetes secret containing
                              the proxy config.
                            type: string
                          namespace:
                            description: Namespace of the kubernetes secret containing
                              the proxy config.
                            type: string
                        type: object
                    type: object
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  This field is planned to replace the DeletionPolicy field in a future
                  release. Currently, both could be set independently and non-default
                  values would be honored if the feature flag is enabled. If both are
                  custom, the DeletionPolicy field will be ignored.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: |-
                  PublishConnectionDetailsTo specifies the connection secret config which
                  contains a name, metadata and a reference to secret store config to
                  which any connection details for this managed resource should be written.
                  Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: |-
                      SecretStoreConfigRef specifies which secret store config should be used
                      for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations are the annotations to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.annotations".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Labels are the labels/tags to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      type:
                        description: |-
                          Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                  This field is planned to be replaced in a future release in favor of
                  PublishConnectionDetailsTo. Currently, both could be set independently
                  and connection details would be published to both without affecting
                  each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
            x-kubernetes-validations:
            - message: spec.forProvider.distribution is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.distribution)
                || (has(self.initProvider) && has(self.initProvider.distribution))'
            - message: spec.forProvider.fleet is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.fleet)
                || (has(self.initProvider) && has(self.initProvider.fleet))'
            - message: spec.forProvider.oidcConfig is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.oidcConfig)
                || (has(self.initProvider) && has(self.initProvider.oidcConfig))'
            - message: spec.forProvider.platformVersion is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.platformVersion)
                || (has(self.initProvider) && has(self.initProvider.platformVersion))'
          status:
            description: ClusterStatus defines the observed state of Cluster.
            properties:
              atProvider:
                properties:
                  annotations:
                    additionalProperties:
                      type: string
                    description: |-
                      Optional. Annotations on the cluster. This field has the same
                      restrictions as Kubernetes annotations. The total size of all keys and
                      values combined is limited to 256k. Key can have 2 segments: prefix
                      and name , separated by a slash (/). Prefix must be a DNS subdomain.
                      Name must be 63 characters or less, begin and end with alphanumerics,
                      with dashes (-), underscores (_), dots (.), and alphanumerics between.
                    type: object
                    x-kubernetes-map-type: granular
                  authorization:
                    description: |-
                      Configuration related to the cluster RBAC settings.
                      Structure is documented below.
                    properties:
                      adminGroups:
                        description: |-
                          Groups that can perform operations as a cluster admin. A managed
                          ClusterRoleBinding will be created to grant the cluster-admin ClusterRole
                          to the groups. Up to ten admin groups can be provided.
                          For more info on RBAC, see
                          https://kubernetes.io/docs/reference/access-authn-authz/rbac/#user-facing-roles
                        items:
                          type: string
                        type: array
                      adminUsers:
                        description: |-
                          Users that can perform operations as a cluster admin. A managed
                          ClusterRoleBinding will be created to grant the cluster-admin ClusterRole
                          to the users. Up to ten admin users can be provided.
                          For more info on RBAC, see
                          https://kubernetes.io/docs/reference/access-authn-authz/rbac/#user-facing-roles
                        items:
                          type: string
                        type: array
                    type: object
                  binaryAuthorization:
                    description: |-
                      Binary Authorization configuration.
                      Structure is documented below.
                    properties:
                      evaluationMode:
                        description: |-
                          Configure Binary Authorization evaluation mode.
                          Possible values are: DISABLED, PROJECT_SINGLETON_POLICY_ENFORCE.
                        type: string
                    type: object
                  clusterRegion:
                    description: |-
                      Output only. The region where this cluster runs.
                      For EKS clusters, this is an AWS region. For AKS clusters,
                      this is an Azure region.
                    type: string
                  createTime:
                    description: Output only. The time at which this cluster was created.
                    type: string
                  deletionPolicy:
                    description: Policy to determine what flags to send on delete.
                    type: string
                  description:
                    description: |-
                      A human readable description of this attached cluster. Cannot be longer
                      than 255 UTF-8 encoded bytes.
                    type: string
                  distribution:
                    description: |-
                      The Kubernetes distribution of the underlying attached cluster. Supported values:
                      "eks", "aks", "generic". The generic distribution provides the ability to register
                      or migrate any CNCF conformant cluster.
                    type: string
                  effectiveAnnotations:
                    additionalProperties:
                      type: string
                    type: object
                    x-kubernetes-map-type: granular
                  errors:
                    description: |-
                      A set of errors found in the cluster.
                      Structure is documented below.
                    items:
                      properties:
                        message:
                          description: Human-friendly description of the error.
                          type: string
                      type: object
                    type: array
                  fleet:
                    description: |-
                      Fleet configuration.
                      Structure is documented below.
                    properties:
                      membership:
                        description: |-
                          (Output)
                          The name of the managed Hub Membership resource associated to this
                          cluster. Membership names are formatted as
                          projects//locations/global/membership/.
                        type: string
                      project:
                        description: The number of the Fleet host project where this
                          cluster will be registered.
                        type: string
                    type: object
                  id:
                    description: an identifier for the resource with format projects/{{project}}/locations/{{location}}/attachedClusters/{{name}}
                    type: string
                  kubernetesVersion:
                    description: The Kubernetes version of the cluster.
                    type: string
                  location:
                    description: The location for the resource
                    type: string
                  loggingConfig:
                    description: |-
                      Logging configuration.
                      Structure is documented below.
                    properties:
                      componentConfig:
                        description: |-
                          The configuration of the logging components
                          Structure is documented below.
                        properties:
                          enableComponents:
                            description: |-
                              The components to be enabled.
                              Each value may be one of: SYSTEM_COMPONENTS, WORKLOADS.
                            items:
                              type: string
                            type: array
                        type: object
                    type: object
                  monitoringConfig:
                    description: |-
                      Monitoring configuration.
                      Structure is documented below.
                    properties:
                      managedPrometheusConfig:
                        description: |-
                          Enable Google Cloud Managed Service for Prometheus in the cluster.
                          Structure is documented below.
                        properties:
                          enabled:
                            description: Enable Managed Collection.
                            type: boolean
                        type: object
                    type: object
                  oidcConfig:
                    description: |-
                      OIDC discovery information of the target cluster.
                      Kubernetes Service Account (KSA) tokens are JWT tokens signed by the cluster
                      API server. This fields indicates how GCP services
                      validate KSA tokens in order to allow system workloads (such as GKE Connect
                      and telemetry agents) to authenticate back to GCP.
                      Both clusters with public and private issuer URLs are supported.
                      Clusters with public issuers only need to specify the issuer_url field
                      while clusters with private issuers need to provide both
                      issuer_url and jwks.
                      Structure is documented below.
                    properties:
                      issuerUrl:
                        description: A JSON Web Token (JWT) issuer URI. issuer must
                          start with https://
                        type: string
                      jwks:
                        description: OIDC verification keys in JWKS format (RFC 7517).
                        type: string
                    type: object
                  platformVersion:
                    description: The platform version for the cluster (e.g. 1.23.0-gke.1).
                    type: string
                  project:
                    description: The number of the Fleet host project where this cluster
                      will be registered.
                    type: string
                  proxyConfig:
                    description: |-
                      Support for proxy configuration.
                      Structure is documented below.
                    properties:
                      kubernetesSecret:
                        description: |-
                          The Kubernetes Secret resource that contains the HTTP(S) proxy configuration.
                          Structure is documented below.
                        properties:
                          name:
                            description: Name of the kubernetes secret containing
                              the proxy config.
                            type: string
                          namespace:
                            description: Namespace of the kubernetes secret containing
                              the proxy config.
                            type: string
                        type: object
                    type: object
                  reconciling:
                    description: If set, there are currently changes in flight to
                      the cluster.
                    type: boolean
                  state:
                    description: |-
                      The current state of the cluster. Possible values:
                      STATE_UNSPECIFIED, PROVISIONING, RUNNING, RECONCILING, STOPPING, ERROR,
                      DEGRADED
                    type: string
                  uid:
                    description: A globally unique identifier for the cluster.
                    type: string
                  updateTime:
                    description: The time at which this cluster was last updated.
                    type: string
                  workloadIdentityConfig:
                    description: |-
                      Workload Identity settings.
                      Structure is documented below.
                    items:
                      properties:
                        identityProvider:
                          description: |-
                            The ID of the OIDC Identity Provider (IdP) associated to
                            the Workload Identity Pool.
                          type: string
                        issuerUri:
                          description: The OIDC issuer URL for this cluster.
                          type: string
                        workloadPool:
                          description: The Workload Identity Pool associated to the
                            cluster.
                          type: string
                      type: object
                    type: array
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: |-
                  ObservedGeneration is the latest metadata.generation
                  which resulted in either a ready state, or stalled due to error
                  it can not recover from without human intervention.
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: false
    subresources:
      status: {}
