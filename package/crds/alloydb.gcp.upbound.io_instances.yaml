---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: instances.alloydb.gcp.upbound.io
spec:
  group: alloydb.gcp.upbound.io
  names:
    categories:
    - crossplane
    - managed
    - gcp
    kind: Instance
    listKind: InstanceList
    plural: instances
    singular: instance
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: Instance is the Schema for the Instances API. A managed alloydb
          cluster instance.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: InstanceSpec defines the desired state of Instance
            properties:
              deletionPolicy:
                default: Delete
                description: |-
                  DeletionPolicy specifies what will happen to the underlying external
                  when this managed resource is deleted - either "Delete" or "Orphan" the
                  external resource.
                  This field is planned to be deprecated in favor of the ManagementPolicies
                  field in a future release. Currently, both could be set independently and
                  non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  annotations:
                    additionalProperties:
                      type: string
                    description: Annotations to allow client tools to store small
                      amount of arbitrary data. This is distinct from labels.
                    type: object
                    x-kubernetes-map-type: granular
                  availabilityType:
                    description: |-
                      'Availability type of an Instance. Defaults to REGIONAL for both primary and read instances.
                      Note that primary and read instances can have different availability types.
                      Only READ_POOL instance supports ZONAL type. Users can't specify the zone for READ_POOL instance.
                      Zone is automatically chosen from the list of zones in the region specified.
                      Read pool of size 1 can only have zonal availability. Read pools with node count of 2 or more
                      can have regional availability (nodes are present in 2 or more zones in a region).'
                      Possible values are: AVAILABILITY_TYPE_UNSPECIFIED, ZONAL, REGIONAL.
                    type: string
                  cluster:
                    description: |-
                      Identifies the alloydb cluster. Must be in the format
                      'projects/{project}/locations/{location}/clusters/{cluster_id}'
                    type: string
                  clusterRef:
                    description: Reference to a Cluster in alloydb to populate cluster.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  clusterSelector:
                    description: Selector for a Cluster in alloydb to populate cluster.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  databaseFlags:
                    additionalProperties:
                      type: string
                    description: Database flags. Set at instance level. * They are
                      copied from primary instance on read instance creation. * Read
                      instances can set new or override existing flags that are relevant
                      for reads, e.g. for enabling columnar cache on a read instance.
                      Flags set on read instance may or may not be present on primary.
                    type: object
                    x-kubernetes-map-type: granular
                  displayName:
                    description: User-settable and human-readable display name for
                      the Instance.
                    type: string
                  gceZone:
                    description: The Compute Engine zone that the instance should
                      serve from, per https://cloud.google.com/compute/docs/regions-zones
                      This can ONLY be specified for ZONAL instances. If present for
                      a REGIONAL instance, an error will be thrown. If this is absent
                      for a ZONAL instance, instance is created in a random zone with
                      available capacity.
                    type: string
                  instanceType:
                    description: |-
                      The type of the instance. If the instance type is READ_POOL, provide the associated PRIMARY instance in the depends_on meta-data attribute.
                      Possible values are: PRIMARY, READ_POOL.
                    type: string
                  labels:
                    additionalProperties:
                      type: string
                    description: User-defined labels for the alloydb instance.
                    type: object
                    x-kubernetes-map-type: granular
                  machineConfig:
                    description: |-
                      Configurations for the machines that host the underlying database engine.
                      Structure is documented below.
                    items:
                      properties:
                        cpuCount:
                          description: The number of CPU's in the VM instance.
                          type: number
                      type: object
                    type: array
                  readPoolConfig:
                    description: |-
                      Read pool specific config.
                      Structure is documented below.
                    items:
                      properties:
                        nodeCount:
                          description: Read capacity, i.e. number of nodes in a read
                            pool instance.
                          type: number
                      type: object
                    type: array
                type: object
              initProvider:
                description: |-
                  THIS IS A BETA FIELD. It will be honored
                  unless the Management Policies feature flag is disabled.
                  InitProvider holds the same fields as ForProvider, with the exception
                  of Identifier and other resource reference fields. The fields that are
                  in InitProvider are merged into ForProvider when the resource is created.
                  The same fields are also added to the terraform ignore_changes hook, to
                  avoid updating them after creation. This is useful for fields that are
                  required on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them, like an
                  autoscaler.
                properties:
                  annotations:
                    additionalProperties:
                      type: string
                    description: Annotations to allow client tools to store small
                      amount of arbitrary data. This is distinct from labels.
                    type: object
                    x-kubernetes-map-type: granular
                  availabilityType:
                    description: |-
                      'Availability type of an Instance. Defaults to REGIONAL for both primary and read instances.
                      Note that primary and read instances can have different availability types.
                      Only READ_POOL instance supports ZONAL type. Users can't specify the zone for READ_POOL instance.
                      Zone is automatically chosen from the list of zones in the region specified.
                      Read pool of size 1 can only have zonal availability. Read pools with node count of 2 or more
                      can have regional availability (nodes are present in 2 or more zones in a region).'
                      Possible values are: AVAILABILITY_TYPE_UNSPECIFIED, ZONAL, REGIONAL.
                    type: string
                  databaseFlags:
                    additionalProperties:
                      type: string
                    description: Database flags. Set at instance level. * They are
                      copied from primary instance on read instance creation. * Read
                      instances can set new or override existing flags that are relevant
                      for reads, e.g. for enabling columnar cache on a read instance.
                      Flags set on read instance may or may not be present on primary.
                    type: object
                    x-kubernetes-map-type: granular
                  displayName:
                    description: User-settable and human-readable display name for
                      the Instance.
                    type: string
                  gceZone:
                    description: The Compute Engine zone that the instance should
                      serve from, per https://cloud.google.com/compute/docs/regions-zones
                      This can ONLY be specified for ZONAL instances. If present for
                      a REGIONAL instance, an error will be thrown. If this is absent
                      for a ZONAL instance, instance is created in a random zone with
                      available capacity.
                    type: string
                  instanceType:
                    description: |-
                      The type of the instance. If the instance type is READ_POOL, provide the associated PRIMARY instance in the depends_on meta-data attribute.
                      Possible values are: PRIMARY, READ_POOL.
                    type: string
                  labels:
                    additionalProperties:
                      type: string
                    description: User-defined labels for the alloydb instance.
                    type: object
                    x-kubernetes-map-type: granular
                  machineConfig:
                    description: |-
                      Configurations for the machines that host the underlying database engine.
                      Structure is documented below.
                    items:
                      properties:
                        cpuCount:
                          description: The number of CPU's in the VM instance.
                          type: number
                      type: object
                    type: array
                  readPoolConfig:
                    description: |-
                      Read pool specific config.
                      Structure is documented below.
                    items:
                      properties:
                        nodeCount:
                          description: Read capacity, i.e. number of nodes in a read
                            pool instance.
                          type: number
                      type: object
                    type: array
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  This field is planned to replace the DeletionPolicy field in a future
                  release. Currently, both could be set independently and non-default
                  values would be honored if the feature flag is enabled. If both are
                  custom, the DeletionPolicy field will be ignored.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: |-
                  PublishConnectionDetailsTo specifies the connection secret config which
                  contains a name, metadata and a reference to secret store config to
                  which any connection details for this managed resource should be written.
                  Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: |-
                      SecretStoreConfigRef specifies which secret store config should be used
                      for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations are the annotations to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.annotations".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Labels are the labels/tags to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      type:
                        description: |-
                          Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                  This field is planned to be replaced in a future release in favor of
                  PublishConnectionDetailsTo. Currently, both could be set independently
                  and connection details would be published to both without affecting
                  each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
            x-kubernetes-validations:
            - message: spec.forProvider.instanceType is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.instanceType)
                || (has(self.initProvider) && has(self.initProvider.instanceType))'
          status:
            description: InstanceStatus defines the observed state of Instance.
            properties:
              atProvider:
                properties:
                  annotations:
                    additionalProperties:
                      type: string
                    description: Annotations to allow client tools to store small
                      amount of arbitrary data. This is distinct from labels.
                    type: object
                    x-kubernetes-map-type: granular
                  availabilityType:
                    description: |-
                      'Availability type of an Instance. Defaults to REGIONAL for both primary and read instances.
                      Note that primary and read instances can have different availability types.
                      Only READ_POOL instance supports ZONAL type. Users can't specify the zone for READ_POOL instance.
                      Zone is automatically chosen from the list of zones in the region specified.
                      Read pool of size 1 can only have zonal availability. Read pools with node count of 2 or more
                      can have regional availability (nodes are present in 2 or more zones in a region).'
                      Possible values are: AVAILABILITY_TYPE_UNSPECIFIED, ZONAL, REGIONAL.
                    type: string
                  cluster:
                    description: |-
                      Identifies the alloydb cluster. Must be in the format
                      'projects/{project}/locations/{location}/clusters/{cluster_id}'
                    type: string
                  createTime:
                    description: Time the Instance was created in UTC.
                    type: string
                  databaseFlags:
                    additionalProperties:
                      type: string
                    description: Database flags. Set at instance level. * They are
                      copied from primary instance on read instance creation. * Read
                      instances can set new or override existing flags that are relevant
                      for reads, e.g. for enabling columnar cache on a read instance.
                      Flags set on read instance may or may not be present on primary.
                    type: object
                    x-kubernetes-map-type: granular
                  displayName:
                    description: User-settable and human-readable display name for
                      the Instance.
                    type: string
                  gceZone:
                    description: The Compute Engine zone that the instance should
                      serve from, per https://cloud.google.com/compute/docs/regions-zones
                      This can ONLY be specified for ZONAL instances. If present for
                      a REGIONAL instance, an error will be thrown. If this is absent
                      for a ZONAL instance, instance is created in a random zone with
                      available capacity.
                    type: string
                  id:
                    description: an identifier for the resource with format {{cluster}}/instances/{{instance_id}}
                    type: string
                  instanceType:
                    description: |-
                      The type of the instance. If the instance type is READ_POOL, provide the associated PRIMARY instance in the depends_on meta-data attribute.
                      Possible values are: PRIMARY, READ_POOL.
                    type: string
                  ipAddress:
                    description: The IP address for the Instance. This is the connection
                      endpoint for an end-user application.
                    type: string
                  labels:
                    additionalProperties:
                      type: string
                    description: User-defined labels for the alloydb instance.
                    type: object
                    x-kubernetes-map-type: granular
                  machineConfig:
                    description: |-
                      Configurations for the machines that host the underlying database engine.
                      Structure is documented below.
                    items:
                      properties:
                        cpuCount:
                          description: The number of CPU's in the VM instance.
                          type: number
                      type: object
                    type: array
                  name:
                    description: The name of the instance resource.
                    type: string
                  readPoolConfig:
                    description: |-
                      Read pool specific config.
                      Structure is documented below.
                    items:
                      properties:
                        nodeCount:
                          description: Read capacity, i.e. number of nodes in a read
                            pool instance.
                          type: number
                      type: object
                    type: array
                  reconciling:
                    description: Set to true if the current state of Instance does
                      not match the user's intended state, and the service is actively
                      updating the resource to reconcile them. This can happen due
                      to user-triggered updates or system actions like failover or
                      maintenance.
                    type: boolean
                  state:
                    description: The current state of the alloydb instance.
                    type: string
                  uid:
                    description: The system-generated UID of the resource.
                    type: string
                  updateTime:
                    description: Time the Instance was updated in UTC.
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
