---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.18.0
  name: attestors.binaryauthorization.gcp.m.upbound.io
spec:
  group: binaryauthorization.gcp.m.upbound.io
  names:
    categories:
    - crossplane
    - managed
    - gcp
    kind: Attestor
    listKind: AttestorList
    plural: attestors
    singular: attestor
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: Attestor is the Schema for the Attestors API. An attestor that
          attests to container image artifacts.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: AttestorSpec defines the desired state of Attestor
            properties:
              forProvider:
                properties:
                  attestationAuthorityNote:
                    description: |-
                      A Container Analysis ATTESTATION_AUTHORITY Note, created by the user.
                      Structure is documented below.
                    properties:
                      noteReference:
                        description: |-
                          The resource name of a ATTESTATION_AUTHORITY Note, created by the
                          user. If the Note is in a different project from the Attestor, it
                          should be specified in the format projects/*/notes/* (or the legacy
                          providers/*/notes/*). This field may not be updated.
                          An attestation by this attestor is stored as a Container Analysis
                          ATTESTATION_AUTHORITY Occurrence that names a container image
                          and that links to this Note.
                        type: string
                      noteReferenceRef:
                        description: Reference to a Note in containeranalysis to populate
                          noteReference.
                        properties:
                          name:
                            description: Name of the referenced object.
                            type: string
                          namespace:
                            description: Namespace of the referenced object
                            type: string
                          policy:
                            description: Policies for referencing.
                            properties:
                              resolution:
                                default: Required
                                description: |-
                                  Resolution specifies whether resolution of this reference is required.
                                  The default is 'Required', which means the reconcile will fail if the
                                  reference cannot be resolved. 'Optional' means this reference will be
                                  a no-op if it cannot be resolved.
                                enum:
                                - Required
                                - Optional
                                type: string
                              resolve:
                                description: |-
                                  Resolve specifies when this reference should be resolved. The default
                                  is 'IfNotPresent', which will attempt to resolve the reference only when
                                  the corresponding field is not present. Use 'Always' to resolve the
                                  reference on every reconcile.
                                enum:
                                - Always
                                - IfNotPresent
                                type: string
                            type: object
                        required:
                        - name
                        type: object
                      noteReferenceSelector:
                        description: Selector for a Note in containeranalysis to populate
                          noteReference.
                        properties:
                          matchControllerRef:
                            description: |-
                              MatchControllerRef ensures an object with the same controller reference
                              as the selecting object is selected.
                            type: boolean
                          matchLabels:
                            additionalProperties:
                              type: string
                            description: MatchLabels ensures an object with matching
                              labels is selected.
                            type: object
                          namespace:
                            description: Namespace for the selector
                            type: string
                          policy:
                            description: Policies for selection.
                            properties:
                              resolution:
                                default: Required
                                description: |-
                                  Resolution specifies whether resolution of this reference is required.
                                  The default is 'Required', which means the reconcile will fail if the
                                  reference cannot be resolved. 'Optional' means this reference will be
                                  a no-op if it cannot be resolved.
                                enum:
                                - Required
                                - Optional
                                type: string
                              resolve:
                                description: |-
                                  Resolve specifies when this reference should be resolved. The default
                                  is 'IfNotPresent', which will attempt to resolve the reference only when
                                  the corresponding field is not present. Use 'Always' to resolve the
                                  reference on every reconcile.
                                enum:
                                - Always
                                - IfNotPresent
                                type: string
                            type: object
                        type: object
                      publicKeys:
                        description: |-
                          Public keys that verify attestations signed by this attestor. This
                          field may be updated.
                          If this field is non-empty, one of the specified public keys must
                          verify that an attestation was signed by this attestor for the
                          image specified in the admission request.
                          If this field is empty, this attestor always returns that no valid
                          attestations exist.
                          Structure is documented below.
                        items:
                          properties:
                            asciiArmoredPgpPublicKey:
                              description: |-
                                ASCII-armored representation of a PGP public key, as the
                                entire output by the command
                                gpg --export --armor foo@example.com (either LF or CRLF
                                line endings). When using this field, id should be left
                                blank. The BinAuthz API handlers will calculate the ID
                                and fill it in automatically. BinAuthz computes this ID
                                as the OpenPGP RFC4880 V4 fingerprint, represented as
                                upper-case hex. If id is provided by the caller, it will
                                be overwritten by the API-calculated ID.
                              type: string
                            comment:
                              description: A descriptive comment. This field may be
                                updated.
                              type: string
                            id:
                              description: |-
                                The ID of this public key. Signatures verified by BinAuthz
                                must include the ID of the public key that can be used to
                                verify them, and that ID must match the contents of this
                                field exactly. Additional restrictions on this field can
                                be imposed based on which public key type is encapsulated.
                                See the documentation on publicKey cases below for details.
                              type: string
                            pkixPublicKey:
                              description: |-
                                A raw PKIX SubjectPublicKeyInfo format public key.
                                NOTE: id may be explicitly provided by the caller when using this
                                type of public key, but it MUST be a valid RFC3986 URI. If id is left
                                blank, a default one will be computed based on the digest of the DER
                                encoding of the public key.
                                Structure is documented below.
                              properties:
                                publicKeyPem:
                                  description: |-
                                    A PEM-encoded public key, as described in
                                    https://tools.ietf.org/html/rfc7468#section-13
                                  type: string
                                signatureAlgorithm:
                                  description: |-
                                    The signature algorithm used to verify a message against
                                    a signature using this key. These signature algorithm must
                                    match the structure and any object identifiers encoded in
                                    publicKeyPem (i.e. this algorithm must match that of the
                                    public key).
                                  type: string
                              type: object
                          type: object
                        type: array
                    type: object
                  description:
                    description: |-
                      A descriptive comment. This field may be updated. The field may be
                      displayed in chooser dialogs.
                    type: string
                  project:
                    description: |-
                      The ID of the project in which the resource belongs.
                      If it is not provided, the provider project is used.
                    type: string
                type: object
              initProvider:
                description: |-
                  THIS IS A BETA FIELD. It will be honored
                  unless the Management Policies feature flag is disabled.
                  InitProvider holds the same fields as ForProvider, with the exception
                  of Identifier and other resource reference fields. The fields that are
                  in InitProvider are merged into ForProvider when the resource is created.
                  The same fields are also added to the terraform ignore_changes hook, to
                  avoid updating them after creation. This is useful for fields that are
                  required on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them, like an
                  autoscaler.
                properties:
                  attestationAuthorityNote:
                    description: |-
                      A Container Analysis ATTESTATION_AUTHORITY Note, created by the user.
                      Structure is documented below.
                    properties:
                      noteReference:
                        description: |-
                          The resource name of a ATTESTATION_AUTHORITY Note, created by the
                          user. If the Note is in a different project from the Attestor, it
                          should be specified in the format projects/*/notes/* (or the legacy
                          providers/*/notes/*). This field may not be updated.
                          An attestation by this attestor is stored as a Container Analysis
                          ATTESTATION_AUTHORITY Occurrence that names a container image
                          and that links to this Note.
                        type: string
                      noteReferenceRef:
                        description: Reference to a Note in containeranalysis to populate
                          noteReference.
                        properties:
                          name:
                            description: Name of the referenced object.
                            type: string
                          namespace:
                            description: Namespace of the referenced object
                            type: string
                          policy:
                            description: Policies for referencing.
                            properties:
                              resolution:
                                default: Required
                                description: |-
                                  Resolution specifies whether resolution of this reference is required.
                                  The default is 'Required', which means the reconcile will fail if the
                                  reference cannot be resolved. 'Optional' means this reference will be
                                  a no-op if it cannot be resolved.
                                enum:
                                - Required
                                - Optional
                                type: string
                              resolve:
                                description: |-
                                  Resolve specifies when this reference should be resolved. The default
                                  is 'IfNotPresent', which will attempt to resolve the reference only when
                                  the corresponding field is not present. Use 'Always' to resolve the
                                  reference on every reconcile.
                                enum:
                                - Always
                                - IfNotPresent
                                type: string
                            type: object
                        required:
                        - name
                        type: object
                      noteReferenceSelector:
                        description: Selector for a Note in containeranalysis to populate
                          noteReference.
                        properties:
                          matchControllerRef:
                            description: |-
                              MatchControllerRef ensures an object with the same controller reference
                              as the selecting object is selected.
                            type: boolean
                          matchLabels:
                            additionalProperties:
                              type: string
                            description: MatchLabels ensures an object with matching
                              labels is selected.
                            type: object
                          namespace:
                            description: Namespace for the selector
                            type: string
                          policy:
                            description: Policies for selection.
                            properties:
                              resolution:
                                default: Required
                                description: |-
                                  Resolution specifies whether resolution of this reference is required.
                                  The default is 'Required', which means the reconcile will fail if the
                                  reference cannot be resolved. 'Optional' means this reference will be
                                  a no-op if it cannot be resolved.
                                enum:
                                - Required
                                - Optional
                                type: string
                              resolve:
                                description: |-
                                  Resolve specifies when this reference should be resolved. The default
                                  is 'IfNotPresent', which will attempt to resolve the reference only when
                                  the corresponding field is not present. Use 'Always' to resolve the
                                  reference on every reconcile.
                                enum:
                                - Always
                                - IfNotPresent
                                type: string
                            type: object
                        type: object
                      publicKeys:
                        description: |-
                          Public keys that verify attestations signed by this attestor. This
                          field may be updated.
                          If this field is non-empty, one of the specified public keys must
                          verify that an attestation was signed by this attestor for the
                          image specified in the admission request.
                          If this field is empty, this attestor always returns that no valid
                          attestations exist.
                          Structure is documented below.
                        items:
                          properties:
                            asciiArmoredPgpPublicKey:
                              description: |-
                                ASCII-armored representation of a PGP public key, as the
                                entire output by the command
                                gpg --export --armor foo@example.com (either LF or CRLF
                                line endings). When using this field, id should be left
                                blank. The BinAuthz API handlers will calculate the ID
                                and fill it in automatically. BinAuthz computes this ID
                                as the OpenPGP RFC4880 V4 fingerprint, represented as
                                upper-case hex. If id is provided by the caller, it will
                                be overwritten by the API-calculated ID.
                              type: string
                            comment:
                              description: A descriptive comment. This field may be
                                updated.
                              type: string
                            id:
                              description: |-
                                The ID of this public key. Signatures verified by BinAuthz
                                must include the ID of the public key that can be used to
                                verify them, and that ID must match the contents of this
                                field exactly. Additional restrictions on this field can
                                be imposed based on which public key type is encapsulated.
                                See the documentation on publicKey cases below for details.
                              type: string
                            pkixPublicKey:
                              description: |-
                                A raw PKIX SubjectPublicKeyInfo format public key.
                                NOTE: id may be explicitly provided by the caller when using this
                                type of public key, but it MUST be a valid RFC3986 URI. If id is left
                                blank, a default one will be computed based on the digest of the DER
                                encoding of the public key.
                                Structure is documented below.
                              properties:
                                publicKeyPem:
                                  description: |-
                                    A PEM-encoded public key, as described in
                                    https://tools.ietf.org/html/rfc7468#section-13
                                  type: string
                                signatureAlgorithm:
                                  description: |-
                                    The signature algorithm used to verify a message against
                                    a signature using this key. These signature algorithm must
                                    match the structure and any object identifiers encoded in
                                    publicKeyPem (i.e. this algorithm must match that of the
                                    public key).
                                  type: string
                              type: object
                          type: object
                        type: array
                    type: object
                  description:
                    description: |-
                      A descriptive comment. This field may be updated. The field may be
                      displayed in chooser dialogs.
                    type: string
                  project:
                    description: |-
                      The ID of the project in which the resource belongs.
                      If it is not provided, the provider project is used.
                    type: string
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  kind: ClusterProviderConfig
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  kind:
                    description: Kind of the referenced object.
                    type: string
                  name:
                    description: Name of the referenced object.
                    type: string
                required:
                - kind
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                required:
                - name
                type: object
            required:
            - forProvider
            type: object
            x-kubernetes-validations:
            - message: spec.forProvider.attestationAuthorityNote is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.attestationAuthorityNote)
                || (has(self.initProvider) && has(self.initProvider.attestationAuthorityNote))'
          status:
            description: AttestorStatus defines the observed state of Attestor.
            properties:
              atProvider:
                properties:
                  attestationAuthorityNote:
                    description: |-
                      A Container Analysis ATTESTATION_AUTHORITY Note, created by the user.
                      Structure is documented below.
                    properties:
                      delegationServiceAccountEmail:
                        description: |-
                          (Output)
                          This field will contain the service account email address that
                          this Attestor will use as the principal when querying Container
                          Analysis. Attestor administrators must grant this service account
                          the IAM role needed to read attestations from the noteReference in
                          Container Analysis (containeranalysis.notes.occurrences.viewer).
                          This email address is fixed for the lifetime of the Attestor, but
                          callers should not make any other assumptions about the service
                          account email; future versions may use an email based on a
                          different naming pattern.
                        type: string
                      noteReference:
                        description: |-
                          The resource name of a ATTESTATION_AUTHORITY Note, created by the
                          user. If the Note is in a different project from the Attestor, it
                          should be specified in the format projects/*/notes/* (or the legacy
                          providers/*/notes/*). This field may not be updated.
                          An attestation by this attestor is stored as a Container Analysis
                          ATTESTATION_AUTHORITY Occurrence that names a container image
                          and that links to this Note.
                        type: string
                      publicKeys:
                        description: |-
                          Public keys that verify attestations signed by this attestor. This
                          field may be updated.
                          If this field is non-empty, one of the specified public keys must
                          verify that an attestation was signed by this attestor for the
                          image specified in the admission request.
                          If this field is empty, this attestor always returns that no valid
                          attestations exist.
                          Structure is documented below.
                        items:
                          properties:
                            asciiArmoredPgpPublicKey:
                              description: |-
                                ASCII-armored representation of a PGP public key, as the
                                entire output by the command
                                gpg --export --armor foo@example.com (either LF or CRLF
                                line endings). When using this field, id should be left
                                blank. The BinAuthz API handlers will calculate the ID
                                and fill it in automatically. BinAuthz computes this ID
                                as the OpenPGP RFC4880 V4 fingerprint, represented as
                                upper-case hex. If id is provided by the caller, it will
                                be overwritten by the API-calculated ID.
                              type: string
                            comment:
                              description: A descriptive comment. This field may be
                                updated.
                              type: string
                            id:
                              description: |-
                                The ID of this public key. Signatures verified by BinAuthz
                                must include the ID of the public key that can be used to
                                verify them, and that ID must match the contents of this
                                field exactly. Additional restrictions on this field can
                                be imposed based on which public key type is encapsulated.
                                See the documentation on publicKey cases below for details.
                              type: string
                            pkixPublicKey:
                              description: |-
                                A raw PKIX SubjectPublicKeyInfo format public key.
                                NOTE: id may be explicitly provided by the caller when using this
                                type of public key, but it MUST be a valid RFC3986 URI. If id is left
                                blank, a default one will be computed based on the digest of the DER
                                encoding of the public key.
                                Structure is documented below.
                              properties:
                                publicKeyPem:
                                  description: |-
                                    A PEM-encoded public key, as described in
                                    https://tools.ietf.org/html/rfc7468#section-13
                                  type: string
                                signatureAlgorithm:
                                  description: |-
                                    The signature algorithm used to verify a message against
                                    a signature using this key. These signature algorithm must
                                    match the structure and any object identifiers encoded in
                                    publicKeyPem (i.e. this algorithm must match that of the
                                    public key).
                                  type: string
                              type: object
                          type: object
                        type: array
                    type: object
                  description:
                    description: |-
                      A descriptive comment. This field may be updated. The field may be
                      displayed in chooser dialogs.
                    type: string
                  id:
                    description: an identifier for the resource with format projects/{{project}}/attestors/{{name}}
                    type: string
                  project:
                    description: |-
                      The ID of the project in which the resource belongs.
                      If it is not provided, the provider project is used.
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: |-
                  ObservedGeneration is the latest metadata.generation
                  which resulted in either a ready state, or stalled due to error
                  it can not recover from without human intervention.
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
