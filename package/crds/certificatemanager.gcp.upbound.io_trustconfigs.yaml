---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: trustconfigs.certificatemanager.gcp.upbound.io
spec:
  group: certificatemanager.gcp.upbound.io
  names:
    categories:
    - crossplane
    - managed
    - gcp
    kind: TrustConfig
    listKind: TrustConfigList
    plural: trustconfigs
    singular: trustconfig
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: TrustConfig is the Schema for the TrustConfigs API. TrustConfig
          represents a resource that represents your Public Key Infrastructure (PKI)
          configuration in Certificate Manager for use in mutual TLS authentication
          scenarios.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: TrustConfigSpec defines the desired state of TrustConfig
            properties:
              deletionPolicy:
                default: Delete
                description: |-
                  DeletionPolicy specifies what will happen to the underlying external
                  when this managed resource is deleted - either "Delete" or "Orphan" the
                  external resource.
                  This field is planned to be deprecated in favor of the ManagementPolicies
                  field in a future release. Currently, both could be set independently and
                  non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  allowlistedCertificates:
                    description: |-
                      Allowlisted PEM-encoded certificates. A certificate matching an allowlisted certificate is always considered valid as long as
                      the certificate is parseable, proof of private key possession is established, and constraints on the certificate's SAN field are met.
                      Structure is documented below.
                    items:
                      properties:
                        pemCertificate:
                          description: PEM certificate that is allowlisted. The certificate
                            can be up to 5k bytes, and must be a parseable X.509 certificate.
                          type: string
                      type: object
                    type: array
                  description:
                    description: One or more paragraphs of text description of a trust
                      config.
                    type: string
                  labels:
                    additionalProperties:
                      type: string
                    description: |-
                      Set of label tags associated with the trust config.
                      Note: This field is non-authoritative, and will only manage the labels present in your configuration.
                      Please refer to the field effective_labels for all of the labels present on the resource.
                    type: object
                    x-kubernetes-map-type: granular
                  location:
                    description: The trust config location.
                    type: string
                  project:
                    description: |-
                      The ID of the project in which the resource belongs.
                      If it is not provided, the provider project is used.
                    type: string
                  trustStores:
                    description: |-
                      Set of trust stores to perform validation against.
                      This field is supported when TrustConfig is configured with Load Balancers, currently not supported for SPIFFE certificate validation.
                      Structure is documented below.
                    items:
                      properties:
                        intermediateCas:
                          description: |-
                            Set of intermediate CA certificates used for the path building phase of chain validation.
                            The field is currently not supported if trust config is used for the workload certificate feature.
                            Structure is documented below.
                          items:
                            properties:
                              pemCertificateSecretRef:
                                description: |-
                                  PEM root certificate of the PKI used for validation.
                                  Each certificate provided in PEM format may occupy up to 5kB.
                                  Note: This property is sensitive and will not be displayed in the plan.
                                properties:
                                  key:
                                    description: The key to select.
                                    type: string
                                  name:
                                    description: Name of the secret.
                                    type: string
                                  namespace:
                                    description: Namespace of the secret.
                                    type: string
                                required:
                                - key
                                - name
                                - namespace
                                type: object
                            type: object
                          type: array
                        trustAnchors:
                          description: |-
                            List of Trust Anchors to be used while performing validation against a given TrustStore.
                            Structure is documented below.
                          items:
                            properties:
                              pemCertificateSecretRef:
                                description: |-
                                  PEM root certificate of the PKI used for validation.
                                  Each certificate provided in PEM format may occupy up to 5kB.
                                  Note: This property is sensitive and will not be displayed in the plan.
                                properties:
                                  key:
                                    description: The key to select.
                                    type: string
                                  name:
                                    description: Name of the secret.
                                    type: string
                                  namespace:
                                    description: Namespace of the secret.
                                    type: string
                                required:
                                - key
                                - name
                                - namespace
                                type: object
                            type: object
                          type: array
                      type: object
                    type: array
                required:
                - location
                type: object
              initProvider:
                description: |-
                  THIS IS A BETA FIELD. It will be honored
                  unless the Management Policies feature flag is disabled.
                  InitProvider holds the same fields as ForProvider, with the exception
                  of Identifier and other resource reference fields. The fields that are
                  in InitProvider are merged into ForProvider when the resource is created.
                  The same fields are also added to the terraform ignore_changes hook, to
                  avoid updating them after creation. This is useful for fields that are
                  required on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them, like an
                  autoscaler.
                properties:
                  allowlistedCertificates:
                    description: |-
                      Allowlisted PEM-encoded certificates. A certificate matching an allowlisted certificate is always considered valid as long as
                      the certificate is parseable, proof of private key possession is established, and constraints on the certificate's SAN field are met.
                      Structure is documented below.
                    items:
                      properties:
                        pemCertificate:
                          description: PEM certificate that is allowlisted. The certificate
                            can be up to 5k bytes, and must be a parseable X.509 certificate.
                          type: string
                      type: object
                    type: array
                  description:
                    description: One or more paragraphs of text description of a trust
                      config.
                    type: string
                  labels:
                    additionalProperties:
                      type: string
                    description: |-
                      Set of label tags associated with the trust config.
                      Note: This field is non-authoritative, and will only manage the labels present in your configuration.
                      Please refer to the field effective_labels for all of the labels present on the resource.
                    type: object
                    x-kubernetes-map-type: granular
                  project:
                    description: |-
                      The ID of the project in which the resource belongs.
                      If it is not provided, the provider project is used.
                    type: string
                  trustStores:
                    description: |-
                      Set of trust stores to perform validation against.
                      This field is supported when TrustConfig is configured with Load Balancers, currently not supported for SPIFFE certificate validation.
                      Structure is documented below.
                    items:
                      properties:
                        intermediateCas:
                          description: |-
                            Set of intermediate CA certificates used for the path building phase of chain validation.
                            The field is currently not supported if trust config is used for the workload certificate feature.
                            Structure is documented below.
                          items:
                            properties:
                              pemCertificateSecretRef:
                                description: |-
                                  PEM root certificate of the PKI used for validation.
                                  Each certificate provided in PEM format may occupy up to 5kB.
                                  Note: This property is sensitive and will not be displayed in the plan.
                                properties:
                                  key:
                                    description: The key to select.
                                    type: string
                                  name:
                                    description: Name of the secret.
                                    type: string
                                  namespace:
                                    description: Namespace of the secret.
                                    type: string
                                required:
                                - key
                                - name
                                - namespace
                                type: object
                            type: object
                          type: array
                        trustAnchors:
                          description: |-
                            List of Trust Anchors to be used while performing validation against a given TrustStore.
                            Structure is documented below.
                          items:
                            properties:
                              pemCertificateSecretRef:
                                description: |-
                                  PEM root certificate of the PKI used for validation.
                                  Each certificate provided in PEM format may occupy up to 5kB.
                                  Note: This property is sensitive and will not be displayed in the plan.
                                properties:
                                  key:
                                    description: The key to select.
                                    type: string
                                  name:
                                    description: Name of the secret.
                                    type: string
                                  namespace:
                                    description: Namespace of the secret.
                                    type: string
                                required:
                                - key
                                - name
                                - namespace
                                type: object
                            type: object
                          type: array
                      type: object
                    type: array
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  This field is planned to replace the DeletionPolicy field in a future
                  release. Currently, both could be set independently and non-default
                  values would be honored if the feature flag is enabled. If both are
                  custom, the DeletionPolicy field will be ignored.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: |-
                  PublishConnectionDetailsTo specifies the connection secret config which
                  contains a name, metadata and a reference to secret store config to
                  which any connection details for this managed resource should be written.
                  Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: |-
                      SecretStoreConfigRef specifies which secret store config should be used
                      for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations are the annotations to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.annotations".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Labels are the labels/tags to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      type:
                        description: |-
                          Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                  This field is planned to be replaced in a future release in favor of
                  PublishConnectionDetailsTo. Currently, both could be set independently
                  and connection details would be published to both without affecting
                  each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: TrustConfigStatus defines the observed state of TrustConfig.
            properties:
              atProvider:
                properties:
                  allowlistedCertificates:
                    description: |-
                      Allowlisted PEM-encoded certificates. A certificate matching an allowlisted certificate is always considered valid as long as
                      the certificate is parseable, proof of private key possession is established, and constraints on the certificate's SAN field are met.
                      Structure is documented below.
                    items:
                      properties:
                        pemCertificate:
                          description: PEM certificate that is allowlisted. The certificate
                            can be up to 5k bytes, and must be a parseable X.509 certificate.
                          type: string
                      type: object
                    type: array
                  createTime:
                    description: |-
                      The creation timestamp of a TrustConfig.
                      A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine fractional digits.
                      Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".
                    type: string
                  description:
                    description: One or more paragraphs of text description of a trust
                      config.
                    type: string
                  effectiveLabels:
                    additionalProperties:
                      type: string
                    type: object
                    x-kubernetes-map-type: granular
                  id:
                    description: an identifier for the resource with format projects/{{project}}/locations/{{location}}/trustConfigs/{{name}}
                    type: string
                  labels:
                    additionalProperties:
                      type: string
                    description: |-
                      Set of label tags associated with the trust config.
                      Note: This field is non-authoritative, and will only manage the labels present in your configuration.
                      Please refer to the field effective_labels for all of the labels present on the resource.
                    type: object
                    x-kubernetes-map-type: granular
                  location:
                    description: The trust config location.
                    type: string
                  project:
                    description: |-
                      The ID of the project in which the resource belongs.
                      If it is not provided, the provider project is used.
                    type: string
                  terraformLabels:
                    additionalProperties:
                      type: string
                    description: |-
                      The combination of labels configured directly on the resource
                      and default labels configured on the provider.
                    type: object
                    x-kubernetes-map-type: granular
                  trustStores:
                    description: |-
                      Set of trust stores to perform validation against.
                      This field is supported when TrustConfig is configured with Load Balancers, currently not supported for SPIFFE certificate validation.
                      Structure is documented below.
                    items:
                      properties:
                        intermediateCas:
                          description: |-
                            Set of intermediate CA certificates used for the path building phase of chain validation.
                            The field is currently not supported if trust config is used for the workload certificate feature.
                            Structure is documented below.
                          items:
                            properties:
                              pemCertificateSecretRef:
                                description: |-
                                  PEM root certificate of the PKI used for validation.
                                  Each certificate provided in PEM format may occupy up to 5kB.
                                  Note: This property is sensitive and will not be displayed in the plan.
                                properties:
                                  key:
                                    description: The key to select.
                                    type: string
                                  name:
                                    description: Name of the secret.
                                    type: string
                                  namespace:
                                    description: Namespace of the secret.
                                    type: string
                                required:
                                - key
                                - name
                                - namespace
                                type: object
                            type: object
                          type: array
                        trustAnchors:
                          description: |-
                            List of Trust Anchors to be used while performing validation against a given TrustStore.
                            Structure is documented below.
                          items:
                            properties:
                              pemCertificateSecretRef:
                                description: |-
                                  PEM root certificate of the PKI used for validation.
                                  Each certificate provided in PEM format may occupy up to 5kB.
                                  Note: This property is sensitive and will not be displayed in the plan.
                                properties:
                                  key:
                                    description: The key to select.
                                    type: string
                                  name:
                                    description: Name of the secret.
                                    type: string
                                  namespace:
                                    description: Namespace of the secret.
                                    type: string
                                required:
                                - key
                                - name
                                - namespace
                                type: object
                            type: object
                          type: array
                      type: object
                    type: array
                  updateTime:
                    description: |-
                      The last update timestamp of a TrustConfig.
                      A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine fractional digits.
                      Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: |-
                  ObservedGeneration is the latest metadata.generation
                  which resulted in either a ready state, or stalled due to error
                  it can not recover from without human intervention.
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
