---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.11.1
  creationTimestamp: null
  name: resourcepolicies.compute.gcp.upbound.io
spec:
  group: compute.gcp.upbound.io
  names:
    categories:
    - crossplane
    - managed
    - gcp
    kind: ResourcePolicy
    listKind: ResourcePolicyList
    plural: resourcepolicies
    singular: resourcepolicy
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: ResourcePolicy is the Schema for the ResourcePolicys API. A policy
          that can be attached to a resource to specify or schedule actions on that
          resource.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ResourcePolicySpec defines the desired state of ResourcePolicy
            properties:
              deletionPolicy:
                default: Delete
                description: DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource.
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  description:
                    description: An optional description of this resource. Provide
                      this property when you create the resource.
                    type: string
                  groupPlacementPolicy:
                    description: Resource policy for instances used for placement
                      configuration. Structure is documented below.
                    items:
                      properties:
                        availabilityDomainCount:
                          description: The number of availability domains instances
                            will be spread across. If two instances are in different
                            availability domain, they will not be put in the same
                            low latency network
                          type: number
                        collocation:
                          description: Collocation specifies whether to place VMs
                            inside the same availability domain on the same low-latency
                            network. Specify COLLOCATED to enable collocation. Can
                            only be specified with vm_count. If compute instances
                            are created with a COLLOCATED policy, then exactly vm_count
                            instances must be created at the same time with the resource
                            policy attached. Possible values are COLLOCATED.
                          type: string
                        vmCount:
                          description: Number of VMs in this placement group. Google
                            does not recommend that you use this field unless you
                            use a compact policy and you want your policy to work
                            only if it contains this exact number of VMs.
                          type: number
                      type: object
                    type: array
                  instanceSchedulePolicy:
                    description: Resource policy for scheduling instance operations.
                      Structure is documented below.
                    items:
                      properties:
                        expirationTime:
                          description: The expiration time of the schedule. The timestamp
                            is an RFC3339 string.
                          type: string
                        startTime:
                          description: The start time of the schedule. The timestamp
                            is an RFC3339 string.
                          type: string
                        timeZone:
                          description: 'Specifies the time zone to be used in interpreting
                            the schedule. The value of this field must be a time zone
                            name from the tz database: http://en.wikipedia.org/wiki/Tz_database.'
                          type: string
                        vmStartSchedule:
                          description: Specifies the schedule for starting instances.
                            Structure is documented below.
                          items:
                            properties:
                              schedule:
                                description: Specifies the frequency for the operation,
                                  using the unix-cron format.
                                type: string
                            required:
                            - schedule
                            type: object
                          type: array
                        vmStopSchedule:
                          description: Specifies the schedule for stopping instances.
                            Structure is documented below.
                          items:
                            properties:
                              schedule:
                                description: Specifies the frequency for the operation,
                                  using the unix-cron format.
                                type: string
                            required:
                            - schedule
                            type: object
                          type: array
                      required:
                      - timeZone
                      type: object
                    type: array
                  project:
                    description: The ID of the project in which the resource belongs.
                      If it is not provided, the provider project is used.
                    type: string
                  region:
                    description: Region where resource policy resides.
                    type: string
                  snapshotSchedulePolicy:
                    description: Policy for creating snapshots of persistent disks.
                      Structure is documented below.
                    items:
                      properties:
                        retentionPolicy:
                          description: Retention policy applied to snapshots created
                            by this resource policy. Structure is documented below.
                          items:
                            properties:
                              maxRetentionDays:
                                description: Maximum age of the snapshot that is allowed
                                  to be kept.
                                type: number
                              onSourceDiskDelete:
                                description: Specifies the behavior to apply to scheduled
                                  snapshots when the source disk is deleted. Default
                                  value is KEEP_AUTO_SNAPSHOTS. Possible values are
                                  KEEP_AUTO_SNAPSHOTS and APPLY_RETENTION_POLICY.
                                type: string
                            required:
                            - maxRetentionDays
                            type: object
                          type: array
                        schedule:
                          description: Contains one of an hourlySchedule, dailySchedule,
                            or weeklySchedule. Structure is documented below.
                          items:
                            properties:
                              dailySchedule:
                                description: The policy will execute every nth day
                                  at the specified time. Structure is documented below.
                                items:
                                  properties:
                                    daysInCycle:
                                      description: The number of days between snapshots.
                                      type: number
                                    startTime:
                                      description: 'Time within the window to start
                                        the operations. It must be in format "HH:MM",
                                        where HH : [00-23] and MM : [00-00] GMT.'
                                      type: string
                                  required:
                                  - daysInCycle
                                  - startTime
                                  type: object
                                type: array
                              hourlySchedule:
                                description: The policy will execute every nth hour
                                  starting at the specified time. Structure is documented
                                  below.
                                items:
                                  properties:
                                    hoursInCycle:
                                      description: The number of hours between snapshots.
                                      type: number
                                    startTime:
                                      description: 'Time within the window to start
                                        the operations. It must be in format "HH:MM",
                                        where HH : [00-23] and MM : [00-00] GMT.'
                                      type: string
                                  required:
                                  - hoursInCycle
                                  - startTime
                                  type: object
                                type: array
                              weeklySchedule:
                                description: Allows specifying a snapshot time for
                                  each day of the week. Structure is documented below.
                                items:
                                  properties:
                                    dayOfWeeks:
                                      description: May contain up to seven (one for
                                        each day of the week) snapshot times. Structure
                                        is documented below.
                                      items:
                                        properties:
                                          day:
                                            description: The day of the week to create
                                              the snapshot. e.g. MONDAY Possible values
                                              are MONDAY, TUESDAY, WEDNESDAY, THURSDAY,
                                              FRIDAY, SATURDAY, and SUNDAY.
                                            type: string
                                          startTime:
                                            description: 'Time within the window to
                                              start the operations. It must be in
                                              format "HH:MM", where HH : [00-23] and
                                              MM : [00-00] GMT.'
                                            type: string
                                        required:
                                        - day
                                        - startTime
                                        type: object
                                      type: array
                                  required:
                                  - dayOfWeeks
                                  type: object
                                type: array
                            type: object
                          type: array
                        snapshotProperties:
                          description: Properties with which the snapshots are created,
                            such as labels. Structure is documented below.
                          items:
                            properties:
                              chainName:
                                description: Creates the new snapshot in the snapshot
                                  chain labeled with the specified name. The chain
                                  name must be 1-63 characters long and comply with
                                  RFC1035.
                                type: string
                              guestFlush:
                                description: Whether to perform a 'guest aware' snapshot.
                                type: boolean
                              labels:
                                additionalProperties:
                                  type: string
                                description: A set of key-value pairs.
                                type: object
                              storageLocations:
                                description: Cloud Storage bucket location to store
                                  the auto snapshot (regional or multi-regional)
                                items:
                                  type: string
                                type: array
                            type: object
                          type: array
                      required:
                      - schedule
                      type: object
                    type: array
                required:
                - region
                type: object
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: ResourcePolicyStatus defines the observed state of ResourcePolicy.
            properties:
              atProvider:
                properties:
                  id:
                    description: an identifier for the resource with format projects/{{project}}/regions/{{region}}/resourcePolicies/{{name}}
                    type: string
                  selfLink:
                    description: The URI of the created resource.
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
