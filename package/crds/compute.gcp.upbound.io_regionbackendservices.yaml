---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.11.1
  creationTimestamp: null
  name: regionbackendservices.compute.gcp.upbound.io
spec:
  group: compute.gcp.upbound.io
  names:
    categories:
    - crossplane
    - managed
    - gcp
    kind: RegionBackendService
    listKind: RegionBackendServiceList
    plural: regionbackendservices
    singular: regionbackendservice
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: RegionBackendService is the Schema for the RegionBackendServices
          API. A Region Backend Service defines a regionally-scoped group of virtual
          machines that will serve traffic for load balancing.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: RegionBackendServiceSpec defines the desired state of RegionBackendService
            properties:
              deletionPolicy:
                default: Delete
                description: DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource.
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  affinityCookieTtlSec:
                    description: Lifetime of cookies in seconds if session_affinity
                      is GENERATED_COOKIE. If set to 0, the cookie is non-persistent
                      and lasts only until the end of the browser session (or equivalent).
                      The maximum allowed value for TTL is one day. When the load
                      balancing scheme is INTERNAL, this field is not used.
                    type: number
                  backend:
                    description: The set of backends that serve this RegionBackendService.
                      Structure is documented below.
                    items:
                      properties:
                        balancingMode:
                          description: Specifies the balancing mode for this backend.
                            See the Backend Services Overview for an explanation of
                            load balancing modes. Default value is CONNECTION. Possible
                            values are UTILIZATION, RATE, and CONNECTION.
                          type: string
                        capacityScaler:
                          description: 'A multiplier applied to the group''s maximum
                            servicing capacity (based on UTILIZATION, RATE or CONNECTION).
                            ~>NOTE: This field cannot be set for INTERNAL region backend
                            services (default loadBalancingScheme), but is required
                            for non-INTERNAL backend service. The total capacity_scaler
                            for all backends must be non-zero. A setting of 0 means
                            the group is completely drained, offering 0% of its available
                            Capacity. Valid range is [0.0,1.0].'
                          type: number
                        description:
                          description: An optional description of this resource. Provide
                            this property when you create the resource.
                          type: string
                        failover:
                          description: This field designates whether this is a failover
                            backend. More than one failover backend can be configured
                            for a given RegionBackendService.
                          type: boolean
                        group:
                          description: The fully-qualified URL of an Instance Group
                            or Network Endpoint Group resource. In case of instance
                            group this defines the list of instances that serve traffic.
                            Member virtual machine instances from each instance group
                            must live in the same zone as the instance group itself.
                            No two backends in a backend service are allowed to use
                            same Instance Group resource. For Network Endpoint Groups
                            this defines list of endpoints. All endpoints of Network
                            Endpoint Group must be hosted on instances located in
                            the same zone as the Network Endpoint Group. Backend services
                            cannot mix Instance Group and Network Endpoint Group backends.
                            When the load_balancing_scheme is INTERNAL, only instance
                            groups are supported. Note that you must specify an Instance
                            Group or Network Endpoint Group resource using the fully-qualified
                            URL, rather than a partial URL.
                          type: string
                        groupRef:
                          description: Reference to a RegionInstanceGroupManager to
                            populate group.
                          properties:
                            name:
                              description: Name of the referenced object.
                              type: string
                            policy:
                              description: Policies for referencing.
                              properties:
                                resolution:
                                  default: Required
                                  description: Resolution specifies whether resolution
                                    of this reference is required. The default is
                                    'Required', which means the reconcile will fail
                                    if the reference cannot be resolved. 'Optional'
                                    means this reference will be a no-op if it cannot
                                    be resolved.
                                  enum:
                                  - Required
                                  - Optional
                                  type: string
                                resolve:
                                  description: Resolve specifies when this reference
                                    should be resolved. The default is 'IfNotPresent',
                                    which will attempt to resolve the reference only
                                    when the corresponding field is not present. Use
                                    'Always' to resolve the reference on every reconcile.
                                  enum:
                                  - Always
                                  - IfNotPresent
                                  type: string
                              type: object
                          required:
                          - name
                          type: object
                        groupSelector:
                          description: Selector for a RegionInstanceGroupManager to
                            populate group.
                          properties:
                            matchControllerRef:
                              description: MatchControllerRef ensures an object with
                                the same controller reference as the selecting object
                                is selected.
                              type: boolean
                            matchLabels:
                              additionalProperties:
                                type: string
                              description: MatchLabels ensures an object with matching
                                labels is selected.
                              type: object
                            policy:
                              description: Policies for selection.
                              properties:
                                resolution:
                                  default: Required
                                  description: Resolution specifies whether resolution
                                    of this reference is required. The default is
                                    'Required', which means the reconcile will fail
                                    if the reference cannot be resolved. 'Optional'
                                    means this reference will be a no-op if it cannot
                                    be resolved.
                                  enum:
                                  - Required
                                  - Optional
                                  type: string
                                resolve:
                                  description: Resolve specifies when this reference
                                    should be resolved. The default is 'IfNotPresent',
                                    which will attempt to resolve the reference only
                                    when the corresponding field is not present. Use
                                    'Always' to resolve the reference on every reconcile.
                                  enum:
                                  - Always
                                  - IfNotPresent
                                  type: string
                              type: object
                          type: object
                        maxConnections:
                          description: The max number of simultaneous connections
                            for the group. Can be used with either CONNECTION or UTILIZATION
                            balancing modes. Cannot be set for INTERNAL backend services.
                            For CONNECTION mode, either maxConnections or one of maxConnectionsPerInstance
                            or maxConnectionsPerEndpoint, as appropriate for group
                            type, must be set.
                          type: number
                        maxConnectionsPerEndpoint:
                          description: The max number of simultaneous connections
                            that a single backend network endpoint can handle. Cannot
                            be set for INTERNAL backend services. This is used to
                            calculate the capacity of the group. Can be used in either
                            CONNECTION or UTILIZATION balancing modes. For CONNECTION
                            mode, either maxConnections or maxConnectionsPerEndpoint
                            must be set.
                          type: number
                        maxConnectionsPerInstance:
                          description: The max number of simultaneous connections
                            that a single backend instance can handle. Cannot be set
                            for INTERNAL backend services. This is used to calculate
                            the capacity of the group. Can be used in either CONNECTION
                            or UTILIZATION balancing modes. For CONNECTION mode, either
                            maxConnections or maxConnectionsPerInstance must be set.
                          type: number
                        maxRate:
                          description: The max requests per second (RPS) of the group.
                            Cannot be set for INTERNAL backend services. Can be used
                            with either RATE or UTILIZATION balancing modes, but required
                            if RATE mode. Either maxRate or one of maxRatePerInstance
                            or maxRatePerEndpoint, as appropriate for group type,
                            must be set.
                          type: number
                        maxRatePerEndpoint:
                          description: The max requests per second (RPS) that a single
                            backend network endpoint can handle. This is used to calculate
                            the capacity of the group. Can be used in either balancing
                            mode. For RATE mode, either maxRate or maxRatePerEndpoint
                            must be set. Cannot be set for INTERNAL backend services.
                          type: number
                        maxRatePerInstance:
                          description: The max requests per second (RPS) that a single
                            backend instance can handle. This is used to calculate
                            the capacity of the group. Can be used in either balancing
                            mode. For RATE mode, either maxRate or maxRatePerInstance
                            must be set. Cannot be set for INTERNAL backend services.
                          type: number
                        maxUtilization:
                          description: Used when balancingMode is UTILIZATION. This
                            ratio defines the CPU utilization target for the group.
                            Valid range is [0.0, 1.0]. Cannot be set for INTERNAL
                            backend services.
                          type: number
                      type: object
                    type: array
                  cdnPolicy:
                    description: Cloud CDN configuration for this BackendService.
                      Structure is documented below.
                    items:
                      properties:
                        cacheKeyPolicy:
                          description: The CacheKeyPolicy for this CdnPolicy. Structure
                            is documented below.
                          items:
                            properties:
                              includeHost:
                                description: If true requests to different hosts will
                                  be cached separately.
                                type: boolean
                              includeNamedCookies:
                                description: Names of cookies to include in cache
                                  keys.
                                items:
                                  type: string
                                type: array
                              includeProtocol:
                                description: If true, http and https requests will
                                  be cached separately.
                                type: boolean
                              includeQueryString:
                                description: If true, include query string parameters
                                  in the cache key according to query_string_whitelist
                                  and query_string_blacklist. If neither is set, the
                                  entire query string will be included. If false,
                                  the query string will be excluded from the cache
                                  key entirely.
                                type: boolean
                              queryStringBlacklist:
                                description: Names of query string parameters to exclude
                                  in cache keys. All other parameters will be included.
                                  Either specify query_string_whitelist or query_string_blacklist,
                                  not both. '&' and '=' will be percent encoded and
                                  not treated as delimiters.
                                items:
                                  type: string
                                type: array
                              queryStringWhitelist:
                                description: Names of query string parameters to include
                                  in cache keys. All other parameters will be excluded.
                                  Either specify query_string_whitelist or query_string_blacklist,
                                  not both. '&' and '=' will be percent encoded and
                                  not treated as delimiters.
                                items:
                                  type: string
                                type: array
                            type: object
                          type: array
                        cacheMode:
                          description: 'Specifies the cache setting for all responses
                            from this backend. The possible values are: USE_ORIGIN_HEADERS,
                            FORCE_CACHE_ALL and CACHE_ALL_STATIC Possible values are
                            USE_ORIGIN_HEADERS, FORCE_CACHE_ALL, and CACHE_ALL_STATIC.'
                          type: string
                        clientTtl:
                          description: Specifies the maximum allowed TTL for cached
                            content served by this origin.
                          type: number
                        defaultTtl:
                          description: Specifies the default TTL for cached content
                            served by this origin for responses that do not have an
                            existing valid TTL (max-age or s-max-age).
                          type: number
                        maxTtl:
                          description: Specifies the maximum allowed TTL for cached
                            content served by this origin.
                          type: number
                        negativeCaching:
                          description: Negative caching allows per-status code TTLs
                            to be set, in order to apply fine-grained caching for
                            common errors or redirects.
                          type: boolean
                        negativeCachingPolicy:
                          description: Sets a cache TTL for the specified HTTP status
                            code. negativeCaching must be enabled to configure negativeCachingPolicy.
                            Omitting the policy and leaving negativeCaching enabled
                            will use Cloud CDN's default cache TTLs. Structure is
                            documented below.
                          items:
                            properties:
                              code:
                                description: The HTTP status code to define a TTL
                                  against. Only HTTP status codes 300, 301, 308, 404,
                                  405, 410, 421, 451 and 501 can be specified as values,
                                  and you cannot specify a status code more than once.
                                type: number
                            type: object
                          type: array
                        serveWhileStale:
                          description: Serve existing content from the cache (if available)
                            when revalidating content with the origin, or when an
                            error is encountered when refreshing the cache.
                          type: number
                        signedUrlCacheMaxAgeSec:
                          description: 'Maximum number of seconds the response to
                            a signed URL request will be considered fresh, defaults
                            to 1hr (3600s). After this time period, the response will
                            be revalidated before being served. When serving responses
                            to signed URL requests, Cloud CDN will internally behave
                            as though all responses from this backend had a "Cache-Control:
                            public, max-age=[TTL]" header, regardless of any existing
                            Cache-Control header. The actual headers served in responses
                            will not be altered.'
                          type: number
                      type: object
                    type: array
                  circuitBreakers:
                    description: Settings controlling the volume of connections to
                      a backend service. This field is applicable only when the load_balancing_scheme
                      is set to INTERNAL_MANAGED and the protocol is set to HTTP,
                      HTTPS, or HTTP2. Structure is documented below.
                    items:
                      properties:
                        maxConnections:
                          description: The maximum number of connections to the backend
                            cluster. Defaults to 1024.
                          type: number
                        maxPendingRequests:
                          description: The maximum number of pending requests to the
                            backend cluster. Defaults to 1024.
                          type: number
                        maxRequests:
                          description: The maximum number of parallel requests to
                            the backend cluster. Defaults to 1024.
                          type: number
                        maxRequestsPerConnection:
                          description: Maximum requests for a single backend connection.
                            This parameter is respected by both the HTTP/1.1 and HTTP/2
                            implementations. If not specified, there is no limit.
                            Setting this parameter to 1 will effectively disable keep
                            alive.
                          type: number
                        maxRetries:
                          description: The maximum number of parallel retries to the
                            backend cluster. Defaults to 3.
                          type: number
                      type: object
                    type: array
                  connectionDrainingTimeoutSec:
                    description: Time for which instance will be drained (not accept
                      new connections, but still work to finish started).
                    type: number
                  consistentHash:
                    description: Consistent Hash-based load balancing can be used
                      to provide soft session affinity based on HTTP headers, cookies
                      or other properties. This load balancing policy is applicable
                      only for HTTP connections. The affinity to a particular destination
                      host will be lost when one or more hosts are added/removed from
                      the destination service. This field specifies parameters that
                      control consistent hashing. This field only applies when all
                      of the following are true -
                    items:
                      properties:
                        httpCookie:
                          description: Hash is based on HTTP Cookie. This field describes
                            a HTTP cookie that will be used as the hash key for the
                            consistent hash load balancer. If the cookie is not present,
                            it will be generated. This field is applicable if the
                            sessionAffinity is set to HTTP_COOKIE. Structure is documented
                            below.
                          items:
                            properties:
                              name:
                                description: Name of the resource. Provided by the
                                  client when the resource is created. The name must
                                  be 1-63 characters long, and comply with RFC1035.
                                  Specifically, the name must be 1-63 characters long
                                  and match the regular expression [a-z]([-a-z0-9]*[a-z0-9])?
                                  which means the first character must be a lowercase
                                  letter, and all following characters must be a dash,
                                  lowercase letter, or digit, except the last character,
                                  which cannot be a dash.
                                type: string
                              path:
                                description: Path to set for the cookie.
                                type: string
                              ttl:
                                description: The TTL (in seconds) for which to cache
                                  responses with the corresponding status code. The
                                  maximum allowed value is 1800s (30 minutes), noting
                                  that infrequently accessed objects may be evicted
                                  from the cache before the defined TTL.
                                items:
                                  properties:
                                    nanos:
                                      description: Span of time that's a fraction
                                        of a second at nanosecond resolution. Durations
                                        less than one second are represented with
                                        a 0 seconds field and a positive nanos field.
                                        Must be from 0 to 999,999,999 inclusive.
                                      type: number
                                    seconds:
                                      description: Span of time at a resolution of
                                        a second. Must be from 0 to 315,576,000,000
                                        inclusive.
                                      type: number
                                  required:
                                  - seconds
                                  type: object
                                type: array
                            type: object
                          type: array
                        httpHeaderName:
                          description: The hash based on the value of the specified
                            header field. This field is applicable if the sessionAffinity
                            is set to HEADER_FIELD.
                          type: string
                        minimumRingSize:
                          description: The minimum number of virtual nodes to use
                            for the hash ring. Larger ring sizes result in more granular
                            load distributions. If the number of hosts in the load
                            balancing pool is larger than the ring size, each host
                            will be assigned a single virtual node. Defaults to 1024.
                          type: number
                      type: object
                    type: array
                  description:
                    description: An optional description of this resource.
                    type: string
                  enableCdn:
                    description: If true, enable Cloud CDN for this RegionBackendService.
                    type: boolean
                  failoverPolicy:
                    description: Policy for failovers. Structure is documented below.
                    items:
                      properties:
                        disableConnectionDrainOnFailover:
                          description: 'On failover or failback, this field indicates
                            whether connection drain will be honored. Setting this
                            to true has the following effect: connections to the old
                            active pool are not drained. Connections to the new active
                            pool use the timeout of 10 min (currently fixed). Setting
                            to false has the following effect: both old and new connections
                            will have a drain timeout of 10 min. This can be set to
                            true only if the protocol is TCP. The default is false.'
                          type: boolean
                        dropTrafficIfUnhealthy:
                          description: This option is used only when no healthy VMs
                            are detected in the primary and backup instance groups.
                            When set to true, traffic is dropped. When set to false,
                            new connections are sent across all VMs in the primary
                            group. The default is false.
                          type: boolean
                        failoverRatio:
                          description: The value of the field must be in [0, 1]. If
                            the ratio of the healthy VMs in the primary backend is
                            at or below this number, traffic arriving at the load-balanced
                            IP will be directed to the failover backend. In case where
                            'failoverRatio' is not set or all the VMs in the backup
                            backend are unhealthy, the traffic will be directed back
                            to the primary backend in the "force" mode, where traffic
                            will be spread to the healthy VMs with the best effort,
                            or to all VMs when no VM is healthy. This field is only
                            used with l4 load balancing.
                          type: number
                      type: object
                    type: array
                  healthChecks:
                    description: The set of URLs to HealthCheck resources for health
                      checking this RegionBackendService. Currently at most one health
                      check can be specified. A health check must be specified unless
                      the backend service uses an internet or serverless NEG as a
                      backend.
                    items:
                      type: string
                    type: array
                  healthChecksRefs:
                    description: References to RegionHealthCheck to populate healthChecks.
                    items:
                      description: A Reference to a named object.
                      properties:
                        name:
                          description: Name of the referenced object.
                          type: string
                        policy:
                          description: Policies for referencing.
                          properties:
                            resolution:
                              default: Required
                              description: Resolution specifies whether resolution
                                of this reference is required. The default is 'Required',
                                which means the reconcile will fail if the reference
                                cannot be resolved. 'Optional' means this reference
                                will be a no-op if it cannot be resolved.
                              enum:
                              - Required
                              - Optional
                              type: string
                            resolve:
                              description: Resolve specifies when this reference should
                                be resolved. The default is 'IfNotPresent', which
                                will attempt to resolve the reference only when the
                                corresponding field is not present. Use 'Always' to
                                resolve the reference on every reconcile.
                              enum:
                              - Always
                              - IfNotPresent
                              type: string
                          type: object
                      required:
                      - name
                      type: object
                    type: array
                  healthChecksSelector:
                    description: Selector for a list of RegionHealthCheck to populate
                      healthChecks.
                    properties:
                      matchControllerRef:
                        description: MatchControllerRef ensures an object with the
                          same controller reference as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  iap:
                    description: Settings for enabling Cloud Identity Aware Proxy
                      Structure is documented below.
                    items:
                      properties:
                        oauth2ClientId:
                          description: OAuth2 Client ID for IAP
                          type: string
                        oauth2ClientSecretSecretRef:
                          description: 'OAuth2 Client Secret for IAP Note: This property
                            is sensitive and will not be displayed in the plan.'
                          properties:
                            key:
                              description: The key to select.
                              type: string
                            name:
                              description: Name of the secret.
                              type: string
                            namespace:
                              description: Namespace of the secret.
                              type: string
                          required:
                          - key
                          - name
                          - namespace
                          type: object
                      required:
                      - oauth2ClientId
                      - oauth2ClientSecretSecretRef
                      type: object
                    type: array
                  loadBalancingScheme:
                    description: is set to INTERNAL_MANAGED
                    type: string
                  localityLbPolicy:
                    description: is set to MAGLEV or RING_HASH Structure is documented
                      below.
                    type: string
                  logConfig:
                    description: This field denotes the logging options for the load
                      balancer traffic served by this backend service. If logging
                      is enabled, logs will be exported to Stackdriver. Structure
                      is documented below.
                    items:
                      properties:
                        enable:
                          description: Whether to enable logging for the load balancer
                            traffic served by this backend service.
                          type: boolean
                        sampleRate:
                          description: This field can only be specified if logging
                            is enabled for this backend service. The value of the
                            field must be in [0, 1]. This configures the sampling
                            rate of requests to the load balancer where 1.0 means
                            all logged requests are reported and 0.0 means no logged
                            requests are reported. The default value is 1.0.
                          type: number
                      type: object
                    type: array
                  network:
                    description: The URL of the network to which this backend service
                      belongs. This field can only be specified when the load balancing
                      scheme is set to INTERNAL.
                    type: string
                  outlierDetection:
                    description: Settings controlling eviction of unhealthy hosts
                      from the load balancing pool. This field is applicable only
                      when the load_balancing_scheme is set to INTERNAL_MANAGED and
                      the protocol is set to HTTP, HTTPS, or HTTP2. Structure is documented
                      below.
                    items:
                      properties:
                        baseEjectionTime:
                          description: The base time that a host is ejected for. The
                            real time is equal to the base time multiplied by the
                            number of times the host has been ejected. Defaults to
                            30000ms or 30s. Structure is documented below.
                          items:
                            properties:
                              nanos:
                                description: Span of time that's a fraction of a second
                                  at nanosecond resolution. Durations less than one
                                  second are represented with a 0 seconds field and
                                  a positive nanos field. Must be from 0 to 999,999,999
                                  inclusive.
                                type: number
                              seconds:
                                description: Span of time at a resolution of a second.
                                  Must be from 0 to 315,576,000,000 inclusive.
                                type: number
                            required:
                            - seconds
                            type: object
                          type: array
                        consecutiveErrors:
                          description: Number of errors before a host is ejected from
                            the connection pool. When the backend host is accessed
                            over HTTP, a 5xx return code qualifies as an error. Defaults
                            to 5.
                          type: number
                        consecutiveGatewayFailure:
                          description: The number of consecutive gateway failures
                            (502, 503, 504 status or connection errors that are mapped
                            to one of those status codes) before a consecutive gateway
                            failure ejection occurs. Defaults to 5.
                          type: number
                        enforcingConsecutiveErrors:
                          description: The percentage chance that a host will be actually
                            ejected when an outlier status is detected through consecutive
                            5xx. This setting can be used to disable ejection or to
                            ramp it up slowly. Defaults to 100.
                          type: number
                        enforcingConsecutiveGatewayFailure:
                          description: The percentage chance that a host will be actually
                            ejected when an outlier status is detected through consecutive
                            gateway failures. This setting can be used to disable
                            ejection or to ramp it up slowly. Defaults to 0.
                          type: number
                        enforcingSuccessRate:
                          description: The percentage chance that a host will be actually
                            ejected when an outlier status is detected through success
                            rate statistics. This setting can be used to disable ejection
                            or to ramp it up slowly. Defaults to 100.
                          type: number
                        interval:
                          description: Time interval between ejection sweep analysis.
                            This can result in both new ejections as well as hosts
                            being returned to service. Defaults to 10 seconds. Structure
                            is documented below.
                          items:
                            properties:
                              nanos:
                                description: Span of time that's a fraction of a second
                                  at nanosecond resolution. Durations less than one
                                  second are represented with a 0 seconds field and
                                  a positive nanos field. Must be from 0 to 999,999,999
                                  inclusive.
                                type: number
                              seconds:
                                description: Span of time at a resolution of a second.
                                  Must be from 0 to 315,576,000,000 inclusive.
                                type: number
                            required:
                            - seconds
                            type: object
                          type: array
                        maxEjectionPercent:
                          description: Maximum percentage of hosts in the load balancing
                            pool for the backend service that can be ejected. Defaults
                            to 10%.
                          type: number
                        successRateMinimumHosts:
                          description: The number of hosts in a cluster that must
                            have enough request volume to detect success rate outliers.
                            If the number of hosts is less than this setting, outlier
                            detection via success rate statistics is not performed
                            for any host in the cluster. Defaults to 5.
                          type: number
                        successRateRequestVolume:
                          description: The minimum number of total requests that must
                            be collected in one interval (as defined by the interval
                            duration above) to include this host in success rate based
                            outlier detection. If the volume is lower than this setting,
                            outlier detection via success rate statistics is not performed
                            for that host. Defaults to 100.
                          type: number
                        successRateStdevFactor:
                          description: 'This factor is used to determine the ejection
                            threshold for success rate outlier ejection. The ejection
                            threshold is the difference between the mean success rate,
                            and the product of this factor and the standard deviation
                            of the mean success rate: mean - (stdev * success_rate_stdev_factor).
                            This factor is divided by a thousand to get a double.
                            That is, if the desired factor is 1.9, the runtime value
                            should be 1900. Defaults to 1900.'
                          type: number
                      type: object
                    type: array
                  portName:
                    description: A named port on a backend instance group representing
                      the port for communication to the backend VMs in that group.
                      Required when the loadBalancingScheme is EXTERNAL, EXTERNAL_MANAGED,
                      INTERNAL_MANAGED, or INTERNAL_SELF_MANAGED and the backends
                      are instance groups. The named port must be defined on each
                      backend instance group. This parameter has no meaning if the
                      backends are NEGs. API sets a default of "http" if not given.
                      Must be omitted when the loadBalancingScheme is INTERNAL (Internal
                      TCP/UDP Load Balancing).
                    type: string
                  project:
                    description: The ID of the project in which the resource belongs.
                      If it is not provided, the provider project is used.
                    type: string
                  protocol:
                    description: is set to HTTP, HTTPS, or HTTP2
                    type: string
                  region:
                    description: The Region in which the created backend service should
                      reside. If it is not provided, the provider region is used.
                    type: string
                  sessionAffinity:
                    description: Type of session affinity to use. The default is NONE.
                      Session affinity is not applicable if the protocol is UDP. Possible
                      values are NONE, CLIENT_IP, CLIENT_IP_PORT_PROTO, CLIENT_IP_PROTO,
                      GENERATED_COOKIE, HEADER_FIELD, HTTP_COOKIE, and CLIENT_IP_NO_DESTINATION.
                    type: string
                  timeoutSec:
                    description: How many seconds to wait for the backend before considering
                      it a failed request. Default is 30 seconds. Valid range is [1,
                      86400].
                    type: number
                required:
                - region
                type: object
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: RegionBackendServiceStatus defines the observed state of
              RegionBackendService.
            properties:
              atProvider:
                properties:
                  creationTimestamp:
                    description: Creation timestamp in RFC3339 text format.
                    type: string
                  fingerprint:
                    description: Fingerprint of this resource. A hash of the contents
                      stored in this object. This field is used in optimistic locking.
                    type: string
                  id:
                    description: an identifier for the resource with format projects/{{project}}/regions/{{region}}/backendServices/{{name}}
                    type: string
                  selfLink:
                    description: The URI of the created resource.
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
