---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: flexibleappversions.appengine.gcp.upbound.io
spec:
  group: appengine.gcp.upbound.io
  names:
    categories:
    - crossplane
    - managed
    - gcp
    kind: FlexibleAppVersion
    listKind: FlexibleAppVersionList
    plural: flexibleappversions
    singular: flexibleappversion
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: FlexibleAppVersion is the Schema for the FlexibleAppVersions
          API. Flexible App Version resource to create a new version of flexible GAE
          Application.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: FlexibleAppVersionSpec defines the desired state of FlexibleAppVersion
            properties:
              deletionPolicy:
                default: Delete
                description: |-
                  DeletionPolicy specifies what will happen to the underlying external
                  when this managed resource is deleted - either "Delete" or "Orphan" the
                  external resource.
                  This field is planned to be deprecated in favor of the ManagementPolicies
                  field in a future release. Currently, both could be set independently and
                  non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  apiConfig:
                    description: |-
                      Serving configuration for Google Cloud Endpoints.
                      Structure is documented below.
                    properties:
                      authFailAction:
                        description: |-
                          Action to take when users access resources that require authentication.
                          Default value is AUTH_FAIL_ACTION_REDIRECT.
                          Possible values are: AUTH_FAIL_ACTION_REDIRECT, AUTH_FAIL_ACTION_UNAUTHORIZED.
                        type: string
                      login:
                        description: |-
                          Level of login required to access this resource.
                          Default value is LOGIN_OPTIONAL.
                          Possible values are: LOGIN_OPTIONAL, LOGIN_ADMIN, LOGIN_REQUIRED.
                        type: string
                      script:
                        description: Path to the script from the application root
                          directory.
                        type: string
                      securityLevel:
                        description: |-
                          Security (HTTPS) enforcement for this URL.
                          Possible values are: SECURE_DEFAULT, SECURE_NEVER, SECURE_OPTIONAL, SECURE_ALWAYS.
                        type: string
                      url:
                        description: URL to serve the endpoint at.
                        type: string
                    type: object
                  automaticScaling:
                    description: |-
                      Automatic scaling is based on request rate, response latencies, and other application metrics.
                      Structure is documented below.
                    properties:
                      coolDownPeriod:
                        description: |-
                          The time period that the Autoscaler should wait before it starts collecting information from a new instance.
                          This prevents the autoscaler from collecting information when the instance is initializing,
                          during which the collected usage would not be reliable. Default: 120s
                        type: string
                      cpuUtilization:
                        description: |-
                          Target scaling by CPU usage.
                          Structure is documented below.
                        properties:
                          aggregationWindowLength:
                            description: Period of time over which CPU utilization
                              is calculated.
                            type: string
                          targetUtilization:
                            description: Target CPU utilization ratio to maintain
                              when scaling. Must be between 0 and 1.
                            type: number
                        type: object
                      diskUtilization:
                        description: |-
                          Target scaling by disk usage.
                          Structure is documented below.
                        properties:
                          targetReadBytesPerSecond:
                            description: Target bytes read per second.
                            type: number
                          targetReadOpsPerSecond:
                            description: Target ops read per seconds.
                            type: number
                          targetWriteBytesPerSecond:
                            description: Target bytes written per second.
                            type: number
                          targetWriteOpsPerSecond:
                            description: Target ops written per second.
                            type: number
                        type: object
                      maxConcurrentRequests:
                        description: |-
                          Number of concurrent requests an automatic scaling instance can accept before the scheduler spawns a new instance.
                          Defaults to a runtime-specific value.
                        type: number
                      maxIdleInstances:
                        description: Maximum number of idle instances that should
                          be maintained for this version.
                        type: number
                      maxPendingLatency:
                        description: Maximum amount of time that a request should
                          wait in the pending queue before starting a new instance
                          to handle it.
                        type: string
                      maxTotalInstances:
                        description: 'Maximum number of instances that should be started
                          to handle requests for this version. Default: 20'
                        type: number
                      minIdleInstances:
                        description: Minimum number of idle instances that should
                          be maintained for this version. Only applicable for the
                          default version of a service.
                        type: number
                      minPendingLatency:
                        description: Minimum amount of time a request should wait
                          in the pending queue before starting a new instance to handle
                          it.
                        type: string
                      minTotalInstances:
                        description: 'Minimum number of running instances that should
                          be maintained for this version. Default: 2'
                        type: number
                      networkUtilization:
                        description: |-
                          Target scaling by network usage.
                          Structure is documented below.
                        properties:
                          targetReceivedBytesPerSecond:
                            description: Target bytes received per second.
                            type: number
                          targetReceivedPacketsPerSecond:
                            description: Target packets received per second.
                            type: number
                          targetSentBytesPerSecond:
                            description: Target bytes sent per second.
                            type: number
                          targetSentPacketsPerSecond:
                            description: Target packets sent per second.
                            type: number
                        type: object
                      requestUtilization:
                        description: |-
                          Target scaling by request utilization.
                          Structure is documented below.
                        properties:
                          targetConcurrentRequests:
                            description: Target number of concurrent requests.
                            type: number
                          targetRequestCountPerSecond:
                            description: Target requests per second.
                            type: string
                        type: object
                    type: object
                  betaSettings:
                    additionalProperties:
                      type: string
                    description: Metadata settings that are supplied to this version
                      to enable beta runtime features.
                    type: object
                    x-kubernetes-map-type: granular
                  defaultExpiration:
                    description: |-
                      Duration that static files should be cached by web proxies and browsers.
                      Only applicable if the corresponding StaticFilesHandler does not specify its own expiration time.
                    type: string
                  deleteServiceOnDestroy:
                    description: If set to true, the service will be deleted if it
                      is the last version.
                    type: boolean
                  deployment:
                    description: |-
                      Code and application artifacts that make up this version.
                      Structure is documented below.
                    properties:
                      cloudBuildOptions:
                        description: |-
                          Options for the build operations performed as a part of the version deployment. Only applicable when creating a version using source code directly.
                          Structure is documented below.
                        properties:
                          appYamlPath:
                            description: Path to the yaml file used in deployment,
                              used to determine runtime configuration details.
                            type: string
                          cloudBuildTimeout:
                            description: |-
                              The Cloud Build timeout used as part of any dependent builds performed by version creation. Defaults to 10 minutes.
                              A duration in seconds with up to nine fractional digits, terminated by 's'. Example: "3.5s".
                            type: string
                        type: object
                      container:
                        description: |-
                          The Docker image for the container that runs the version.
                          Structure is documented below.
                        properties:
                          image:
                            description: |-
                              URI to the hosted container image in Google Container Registry. The URI must be fully qualified and include a tag or digest.
                              Examples: "gcr.io/my-project/image:tag" or "gcr.io/my-project/image@digest"
                            type: string
                        type: object
                      files:
                        description: |-
                          Manifest of the files stored in Google Cloud Storage that are included as part of this version.
                          All files must be readable using the credentials supplied with this call.
                          Structure is documented below.
                        items:
                          properties:
                            name:
                              description: Full Serverless VPC Access Connector name
                                e.g. /projects/my-project/locations/us-central1/connectors/c1.
                              type: string
                            sha1Sum:
                              description: SHA1 checksum of the file
                              type: string
                            sourceUrl:
                              description: Source URL
                              type: string
                          type: object
                        type: array
                      zip:
                        description: |-
                          Zip File
                          Structure is documented below.
                        properties:
                          filesCount:
                            description: files count
                            type: number
                          sourceUrl:
                            description: Source URL
                            type: string
                        type: object
                    type: object
                  endpointsApiService:
                    description: |-
                      Code and application artifacts that make up this version.
                      Structure is documented below.
                    properties:
                      configId:
                        description: |-
                          Endpoints service configuration ID as specified by the Service Management API. For example "2016-09-19r1".
                          By default, the rollout strategy for Endpoints is "FIXED". This means that Endpoints starts up with a particular configuration ID.
                          When a new configuration is rolled out, Endpoints must be given the new configuration ID. The configId field is used to give the configuration ID
                          and is required in this case.
                          Endpoints also has a rollout strategy called "MANAGED". When using this, Endpoints fetches the latest configuration and does not need
                          the configuration ID. In this case, configId must be omitted.
                        type: string
                      disableTraceSampling:
                        description: Enable or disable trace sampling. By default,
                          this is set to false for enabled.
                        type: boolean
                      name:
                        description: |-
                          Endpoints service name which is the name of the "service" resource in the Service Management API.
                          For example "myapi.endpoints.myproject.cloud.goog"
                        type: string
                      rolloutStrategy:
                        description: |-
                          Endpoints rollout strategy. If FIXED, configId must be specified. If MANAGED, configId must be omitted.
                          Default value is FIXED.
                          Possible values are: FIXED, MANAGED.
                        type: string
                    type: object
                  entrypoint:
                    description: |-
                      The entrypoint for the application.
                      Structure is documented below.
                    properties:
                      shell:
                        description: The format should be a shell command that can
                          be fed to bash -c.
                        type: string
                    type: object
                  envVariables:
                    additionalProperties:
                      type: string
                    description: Environment variables available to the application.
                    type: object
                    x-kubernetes-map-type: granular
                  flexibleRuntimeSettings:
                    description: |-
                      Runtime settings for App Engine flexible environment.
                      Structure is documented below.
                    properties:
                      operatingSystem:
                        description: Operating System of the application runtime.
                        type: string
                      runtimeVersion:
                        description: The runtime version of an App Engine flexible
                          application.
                        type: string
                    type: object
                  handlers:
                    description: |-
                      An ordered list of URL-matching patterns that should be applied to incoming requests.
                      The first matching URL handles the request and other request handlers are not attempted.
                      Structure is documented below.
                    items:
                      properties:
                        authFailAction:
                          description: |-
                            Actions to take when the user is not logged in.
                            Possible values are: AUTH_FAIL_ACTION_REDIRECT, AUTH_FAIL_ACTION_UNAUTHORIZED.
                          type: string
                        login:
                          description: |-
                            Methods to restrict access to a URL based on login status.
                            Possible values are: LOGIN_OPTIONAL, LOGIN_ADMIN, LOGIN_REQUIRED.
                          type: string
                        redirectHttpResponseCode:
                          description: |-
                            30x code to use when performing redirects for the secure field.
                            Possible values are: REDIRECT_HTTP_RESPONSE_CODE_301, REDIRECT_HTTP_RESPONSE_CODE_302, REDIRECT_HTTP_RESPONSE_CODE_303, REDIRECT_HTTP_RESPONSE_CODE_307.
                          type: string
                        script:
                          description: |-
                            Executes a script to handle the requests that match this URL pattern.
                            Only the auto value is supported for Node.js in the App Engine standard environment, for example "script:" "auto".
                            Structure is documented below.
                          properties:
                            scriptPath:
                              description: Path to the script from the application
                                root directory.
                              type: string
                          type: object
                        securityLevel:
                          description: |-
                            Security (HTTPS) enforcement for this URL.
                            Possible values are: SECURE_DEFAULT, SECURE_NEVER, SECURE_OPTIONAL, SECURE_ALWAYS.
                          type: string
                        staticFiles:
                          description: |-
                            Files served directly to the user for a given URL, such as images, CSS stylesheets, or JavaScript source files.
                            Static file handlers describe which files in the application directory are static files, and which URLs serve them.
                            Structure is documented below.
                          properties:
                            applicationReadable:
                              description: |-
                                Whether files should also be uploaded as code data. By default, files declared in static file handlers are
                                uploaded as static data and are only served to end users; they cannot be read by the application. If enabled,
                                uploads are charged against both your code and static data storage resource quotas.
                              type: boolean
                            expiration:
                              description: |-
                                Time a static file served by this handler should be cached by web proxies and browsers.
                                A duration in seconds with up to nine fractional digits, terminated by 's'. Example "3.5s".
                                Default is '0s'
                              type: string
                            httpHeaders:
                              additionalProperties:
                                type: string
                              description: |-
                                HTTP headers to use for all responses from these URLs.
                                An object containing a list of "key:value" value pairs.".
                              type: object
                              x-kubernetes-map-type: granular
                            mimeType:
                              description: |-
                                MIME type used to serve all files served by this handler.
                                Defaults to file-specific MIME types, which are derived from each file's filename extension.
                              type: string
                            path:
                              description: |-
                                Path to the static files matched by the URL pattern, from the application root directory.
                                The path can refer to text matched in groupings in the URL pattern.
                              type: string
                            requireMatchingFile:
                              description: Whether this handler should match the request
                                if the file referenced by the handler does not exist.
                              type: boolean
                            uploadPathRegex:
                              description: Regular expression that matches the file
                                paths for all files that should be referenced by this
                                handler.
                              type: string
                          type: object
                        urlRegex:
                          description: |-
                            URL prefix. Uses regular expression syntax, which means regexp special characters must be escaped, but should not contain groupings.
                            All URLs that begin with this prefix are handled by this handler, using the portion of the URL after the prefix as part of the file path.
                          type: string
                      type: object
                    type: array
                  inboundServices:
                    description: |-
                      A list of the types of messages that this application is able to receive.
                      Each value may be one of: INBOUND_SERVICE_MAIL, INBOUND_SERVICE_MAIL_BOUNCE, INBOUND_SERVICE_XMPP_ERROR, INBOUND_SERVICE_XMPP_MESSAGE, INBOUND_SERVICE_XMPP_SUBSCRIBE, INBOUND_SERVICE_XMPP_PRESENCE, INBOUND_SERVICE_CHANNEL_PRESENCE, INBOUND_SERVICE_WARMUP.
                    items:
                      type: string
                    type: array
                    x-kubernetes-list-type: set
                  instanceClass:
                    description: |-
                      Instance class that is used to run this version. Valid values are
                      AutomaticScaling: F1, F2, F4, F4_1G
                      ManualScaling: B1, B2, B4, B8, B4_1G
                      Defaults to F1 for AutomaticScaling and B1 for ManualScaling.
                    type: string
                  livenessCheck:
                    description: |-
                      Health checking configuration for VM instances. Unhealthy instances are killed and replaced with new instances.
                      Structure is documented below.
                    properties:
                      checkInterval:
                        description: Interval between health checks.
                        type: string
                      failureThreshold:
                        description: 'Number of consecutive failed checks required
                          before considering the VM unhealthy. Default: 4.'
                        type: number
                      host:
                        description: 'Host header to send when performing a HTTP Readiness
                          check. Example: "myapp.appspot.com"'
                        type: string
                      initialDelay:
                        description: 'The initial delay before starting to execute
                          the checks. Default: "300s"'
                        type: string
                      path:
                        description: The request path.
                        type: string
                      successThreshold:
                        description: 'Number of consecutive successful checks required
                          before considering the VM healthy. Default: 2.'
                        type: number
                      timeout:
                        description: 'Time before the check is considered failed.
                          Default: "4s"'
                        type: string
                    type: object
                  manualScaling:
                    description: |-
                      A service with manual scaling runs continuously, allowing you to perform complex initialization and rely on the state of its memory over time.
                      Structure is documented below.
                    properties:
                      instances:
                        description: |-
                          Number of instances to assign to the service at the start.
                          Note: When managing the number of instances at runtime through the App Engine Admin API or the (now deprecated) Python 2
                          Modules API set_num_instances() you must use lifecycle.ignore_changes = ["manual_scaling"[0].instances] to prevent drift detection.
                        type: number
                    type: object
                  network:
                    description: |-
                      Extra network settings
                      Structure is documented below.
                    properties:
                      forwardedPorts:
                        description: List of ports, or port pairs, to forward from
                          the virtual machine to the application container.
                        items:
                          type: string
                        type: array
                      instanceTag:
                        description: Tag to apply to the instance during creation.
                        type: string
                      name:
                        description: Google Compute Engine network where the virtual
                          machines are created. Specify the short name, not the resource
                          path.
                        type: string
                      sessionAffinity:
                        description: Enable session affinity.
                        type: boolean
                      subnetwork:
                        description: |-
                          Google Cloud Platform sub-network where the virtual machines are created. Specify the short name, not the resource path.
                          If the network that the instance is being created in is a Legacy network, then the IP address is allocated from the IPv4Range.
                          If the network that the instance is being created in is an auto Subnet Mode Network, then only network name should be specified (not the subnetworkName) and the IP address is created from the IPCidrRange of the subnetwork that exists in that zone for that network.
                          If the network that the instance is being created in is a custom Subnet Mode Network, then the subnetworkName must be specified and the IP address is created from the IPCidrRange of the subnetwork.
                          If specified, the subnetwork must exist in the same region as the App Engine flexible environment application.
                        type: string
                    type: object
                  nobuildFilesRegex:
                    description: Files that match this pattern will not be built into
                      this version. Only applicable for Go runtimes.
                    type: string
                  noopOnDestroy:
                    description: If set to true, the application version will not
                      be deleted.
                    type: boolean
                  project:
                    description: |-
                      The ID of the project in which the resource belongs.
                      If it is not provided, the provider project is used.
                    type: string
                  projectRef:
                    description: Reference to a ProjectIAMMember in cloudplatform
                      to populate project.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  projectSelector:
                    description: Selector for a ProjectIAMMember in cloudplatform
                      to populate project.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  readinessCheck:
                    description: |-
                      Configures readiness health checking for instances. Unhealthy instances are not put into the backend traffic rotation.
                      Structure is documented below.
                    properties:
                      appStartTimeout:
                        description: |-
                          A maximum time limit on application initialization, measured from moment the application successfully
                          replies to a healthcheck until it is ready to serve traffic. Default: "300s"
                        type: string
                      checkInterval:
                        description: 'Interval between health checks.  Default: "5s".'
                        type: string
                      failureThreshold:
                        description: 'Number of consecutive failed checks required
                          before removing traffic. Default: 2.'
                        type: number
                      host:
                        description: 'Host header to send when performing a HTTP Readiness
                          check. Example: "myapp.appspot.com"'
                        type: string
                      path:
                        description: The request path.
                        type: string
                      successThreshold:
                        description: 'Number of consecutive successful checks required
                          before receiving traffic. Default: 2.'
                        type: number
                      timeout:
                        description: 'Time before the check is considered failed.
                          Default: "4s"'
                        type: string
                    type: object
                  resources:
                    description: |-
                      Machine resources for a version.
                      Structure is documented below.
                    properties:
                      cpu:
                        description: Number of CPU cores needed.
                        type: number
                      diskGb:
                        description: Disk size (GB) needed.
                        type: number
                      memoryGb:
                        description: Memory (GB) needed.
                        type: number
                      volumes:
                        description: |-
                          List of ports, or port pairs, to forward from the virtual machine to the application container.
                          Structure is documented below.
                        items:
                          properties:
                            name:
                              description: Full Serverless VPC Access Connector name
                                e.g. /projects/my-project/locations/us-central1/connectors/c1.
                              type: string
                            sizeGb:
                              description: Volume size in gigabytes.
                              type: number
                            volumeType:
                              description: Underlying volume type, e.g. 'tmpfs'.
                              type: string
                          type: object
                        type: array
                    type: object
                  runtime:
                    description: Desired runtime. Example python27.
                    type: string
                  runtimeApiVersion:
                    description: |-
                      The version of the API in the given runtime environment.
                      Please see the app.yaml reference for valid values at https://cloud.google.com/appengine/docs/standard/<language>/config/appref
                      Substitute <language> with python, java, php, ruby, go or nodejs.
                    type: string
                  runtimeChannel:
                    description: The channel of the runtime to use. Only available
                      for some runtimes.
                    type: string
                  runtimeMainExecutablePath:
                    description: The path or name of the app's main executable.
                    type: string
                  service:
                    description: AppEngine service resource. Can contain numbers,
                      letters, and hyphens.
                    type: string
                  serviceAccount:
                    description: |-
                      The identity that the deployed version will run as. Admin API will use the App Engine Appspot service account as
                      default if this field is neither provided in app.yaml file nor through CLI flag.
                    type: string
                  serviceAccountRef:
                    description: Reference to a ServiceAccount in cloudplatform to
                      populate serviceAccount.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  serviceAccountSelector:
                    description: Selector for a ServiceAccount in cloudplatform to
                      populate serviceAccount.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  servingStatus:
                    description: |-
                      Current serving status of this version. Only the versions with a SERVING status create instances and can be billed.
                      Default value is SERVING.
                      Possible values are: SERVING, STOPPED.
                    type: string
                  vpcAccessConnector:
                    description: |-
                      Enables VPC connectivity for standard apps.
                      Structure is documented below.
                    properties:
                      name:
                        description: Full Serverless VPC Access Connector name e.g.
                          /projects/my-project/locations/us-central1/connectors/c1.
                        type: string
                    type: object
                required:
                - service
                type: object
              initProvider:
                description: |-
                  THIS IS A BETA FIELD. It will be honored
                  unless the Management Policies feature flag is disabled.
                  InitProvider holds the same fields as ForProvider, with the exception
                  of Identifier and other resource reference fields. The fields that are
                  in InitProvider are merged into ForProvider when the resource is created.
                  The same fields are also added to the terraform ignore_changes hook, to
                  avoid updating them after creation. This is useful for fields that are
                  required on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them, like an
                  autoscaler.
                properties:
                  apiConfig:
                    description: |-
                      Serving configuration for Google Cloud Endpoints.
                      Structure is documented below.
                    properties:
                      authFailAction:
                        description: |-
                          Action to take when users access resources that require authentication.
                          Default value is AUTH_FAIL_ACTION_REDIRECT.
                          Possible values are: AUTH_FAIL_ACTION_REDIRECT, AUTH_FAIL_ACTION_UNAUTHORIZED.
                        type: string
                      login:
                        description: |-
                          Level of login required to access this resource.
                          Default value is LOGIN_OPTIONAL.
                          Possible values are: LOGIN_OPTIONAL, LOGIN_ADMIN, LOGIN_REQUIRED.
                        type: string
                      script:
                        description: Path to the script from the application root
                          directory.
                        type: string
                      securityLevel:
                        description: |-
                          Security (HTTPS) enforcement for this URL.
                          Possible values are: SECURE_DEFAULT, SECURE_NEVER, SECURE_OPTIONAL, SECURE_ALWAYS.
                        type: string
                      url:
                        description: URL to serve the endpoint at.
                        type: string
                    type: object
                  automaticScaling:
                    description: |-
                      Automatic scaling is based on request rate, response latencies, and other application metrics.
                      Structure is documented below.
                    properties:
                      coolDownPeriod:
                        description: |-
                          The time period that the Autoscaler should wait before it starts collecting information from a new instance.
                          This prevents the autoscaler from collecting information when the instance is initializing,
                          during which the collected usage would not be reliable. Default: 120s
                        type: string
                      cpuUtilization:
                        description: |-
                          Target scaling by CPU usage.
                          Structure is documented below.
                        properties:
                          aggregationWindowLength:
                            description: Period of time over which CPU utilization
                              is calculated.
                            type: string
                          targetUtilization:
                            description: Target CPU utilization ratio to maintain
                              when scaling. Must be between 0 and 1.
                            type: number
                        type: object
                      diskUtilization:
                        description: |-
                          Target scaling by disk usage.
                          Structure is documented below.
                        properties:
                          targetReadBytesPerSecond:
                            description: Target bytes read per second.
                            type: number
                          targetReadOpsPerSecond:
                            description: Target ops read per seconds.
                            type: number
                          targetWriteBytesPerSecond:
                            description: Target bytes written per second.
                            type: number
                          targetWriteOpsPerSecond:
                            description: Target ops written per second.
                            type: number
                        type: object
                      maxConcurrentRequests:
                        description: |-
                          Number of concurrent requests an automatic scaling instance can accept before the scheduler spawns a new instance.
                          Defaults to a runtime-specific value.
                        type: number
                      maxIdleInstances:
                        description: Maximum number of idle instances that should
                          be maintained for this version.
                        type: number
                      maxPendingLatency:
                        description: Maximum amount of time that a request should
                          wait in the pending queue before starting a new instance
                          to handle it.
                        type: string
                      maxTotalInstances:
                        description: 'Maximum number of instances that should be started
                          to handle requests for this version. Default: 20'
                        type: number
                      minIdleInstances:
                        description: Minimum number of idle instances that should
                          be maintained for this version. Only applicable for the
                          default version of a service.
                        type: number
                      minPendingLatency:
                        description: Minimum amount of time a request should wait
                          in the pending queue before starting a new instance to handle
                          it.
                        type: string
                      minTotalInstances:
                        description: 'Minimum number of running instances that should
                          be maintained for this version. Default: 2'
                        type: number
                      networkUtilization:
                        description: |-
                          Target scaling by network usage.
                          Structure is documented below.
                        properties:
                          targetReceivedBytesPerSecond:
                            description: Target bytes received per second.
                            type: number
                          targetReceivedPacketsPerSecond:
                            description: Target packets received per second.
                            type: number
                          targetSentBytesPerSecond:
                            description: Target bytes sent per second.
                            type: number
                          targetSentPacketsPerSecond:
                            description: Target packets sent per second.
                            type: number
                        type: object
                      requestUtilization:
                        description: |-
                          Target scaling by request utilization.
                          Structure is documented below.
                        properties:
                          targetConcurrentRequests:
                            description: Target number of concurrent requests.
                            type: number
                          targetRequestCountPerSecond:
                            description: Target requests per second.
                            type: string
                        type: object
                    type: object
                  betaSettings:
                    additionalProperties:
                      type: string
                    description: Metadata settings that are supplied to this version
                      to enable beta runtime features.
                    type: object
                    x-kubernetes-map-type: granular
                  defaultExpiration:
                    description: |-
                      Duration that static files should be cached by web proxies and browsers.
                      Only applicable if the corresponding StaticFilesHandler does not specify its own expiration time.
                    type: string
                  deleteServiceOnDestroy:
                    description: If set to true, the service will be deleted if it
                      is the last version.
                    type: boolean
                  deployment:
                    description: |-
                      Code and application artifacts that make up this version.
                      Structure is documented below.
                    properties:
                      cloudBuildOptions:
                        description: |-
                          Options for the build operations performed as a part of the version deployment. Only applicable when creating a version using source code directly.
                          Structure is documented below.
                        properties:
                          appYamlPath:
                            description: Path to the yaml file used in deployment,
                              used to determine runtime configuration details.
                            type: string
                          cloudBuildTimeout:
                            description: |-
                              The Cloud Build timeout used as part of any dependent builds performed by version creation. Defaults to 10 minutes.
                              A duration in seconds with up to nine fractional digits, terminated by 's'. Example: "3.5s".
                            type: string
                        type: object
                      container:
                        description: |-
                          The Docker image for the container that runs the version.
                          Structure is documented below.
                        properties:
                          image:
                            description: |-
                              URI to the hosted container image in Google Container Registry. The URI must be fully qualified and include a tag or digest.
                              Examples: "gcr.io/my-project/image:tag" or "gcr.io/my-project/image@digest"
                            type: string
                        type: object
                      files:
                        description: |-
                          Manifest of the files stored in Google Cloud Storage that are included as part of this version.
                          All files must be readable using the credentials supplied with this call.
                          Structure is documented below.
                        items:
                          properties:
                            name:
                              description: Full Serverless VPC Access Connector name
                                e.g. /projects/my-project/locations/us-central1/connectors/c1.
                              type: string
                            sha1Sum:
                              description: SHA1 checksum of the file
                              type: string
                            sourceUrl:
                              description: Source URL
                              type: string
                          type: object
                        type: array
                      zip:
                        description: |-
                          Zip File
                          Structure is documented below.
                        properties:
                          filesCount:
                            description: files count
                            type: number
                          sourceUrl:
                            description: Source URL
                            type: string
                        type: object
                    type: object
                  endpointsApiService:
                    description: |-
                      Code and application artifacts that make up this version.
                      Structure is documented below.
                    properties:
                      configId:
                        description: |-
                          Endpoints service configuration ID as specified by the Service Management API. For example "2016-09-19r1".
                          By default, the rollout strategy for Endpoints is "FIXED". This means that Endpoints starts up with a particular configuration ID.
                          When a new configuration is rolled out, Endpoints must be given the new configuration ID. The configId field is used to give the configuration ID
                          and is required in this case.
                          Endpoints also has a rollout strategy called "MANAGED". When using this, Endpoints fetches the latest configuration and does not need
                          the configuration ID. In this case, configId must be omitted.
                        type: string
                      disableTraceSampling:
                        description: Enable or disable trace sampling. By default,
                          this is set to false for enabled.
                        type: boolean
                      name:
                        description: |-
                          Endpoints service name which is the name of the "service" resource in the Service Management API.
                          For example "myapi.endpoints.myproject.cloud.goog"
                        type: string
                      rolloutStrategy:
                        description: |-
                          Endpoints rollout strategy. If FIXED, configId must be specified. If MANAGED, configId must be omitted.
                          Default value is FIXED.
                          Possible values are: FIXED, MANAGED.
                        type: string
                    type: object
                  entrypoint:
                    description: |-
                      The entrypoint for the application.
                      Structure is documented below.
                    properties:
                      shell:
                        description: The format should be a shell command that can
                          be fed to bash -c.
                        type: string
                    type: object
                  envVariables:
                    additionalProperties:
                      type: string
                    description: Environment variables available to the application.
                    type: object
                    x-kubernetes-map-type: granular
                  flexibleRuntimeSettings:
                    description: |-
                      Runtime settings for App Engine flexible environment.
                      Structure is documented below.
                    properties:
                      operatingSystem:
                        description: Operating System of the application runtime.
                        type: string
                      runtimeVersion:
                        description: The runtime version of an App Engine flexible
                          application.
                        type: string
                    type: object
                  handlers:
                    description: |-
                      An ordered list of URL-matching patterns that should be applied to incoming requests.
                      The first matching URL handles the request and other request handlers are not attempted.
                      Structure is documented below.
                    items:
                      properties:
                        authFailAction:
                          description: |-
                            Actions to take when the user is not logged in.
                            Possible values are: AUTH_FAIL_ACTION_REDIRECT, AUTH_FAIL_ACTION_UNAUTHORIZED.
                          type: string
                        login:
                          description: |-
                            Methods to restrict access to a URL based on login status.
                            Possible values are: LOGIN_OPTIONAL, LOGIN_ADMIN, LOGIN_REQUIRED.
                          type: string
                        redirectHttpResponseCode:
                          description: |-
                            30x code to use when performing redirects for the secure field.
                            Possible values are: REDIRECT_HTTP_RESPONSE_CODE_301, REDIRECT_HTTP_RESPONSE_CODE_302, REDIRECT_HTTP_RESPONSE_CODE_303, REDIRECT_HTTP_RESPONSE_CODE_307.
                          type: string
                        script:
                          description: |-
                            Executes a script to handle the requests that match this URL pattern.
                            Only the auto value is supported for Node.js in the App Engine standard environment, for example "script:" "auto".
                            Structure is documented below.
                          properties:
                            scriptPath:
                              description: Path to the script from the application
                                root directory.
                              type: string
                          type: object
                        securityLevel:
                          description: |-
                            Security (HTTPS) enforcement for this URL.
                            Possible values are: SECURE_DEFAULT, SECURE_NEVER, SECURE_OPTIONAL, SECURE_ALWAYS.
                          type: string
                        staticFiles:
                          description: |-
                            Files served directly to the user for a given URL, such as images, CSS stylesheets, or JavaScript source files.
                            Static file handlers describe which files in the application directory are static files, and which URLs serve them.
                            Structure is documented below.
                          properties:
                            applicationReadable:
                              description: |-
                                Whether files should also be uploaded as code data. By default, files declared in static file handlers are
                                uploaded as static data and are only served to end users; they cannot be read by the application. If enabled,
                                uploads are charged against both your code and static data storage resource quotas.
                              type: boolean
                            expiration:
                              description: |-
                                Time a static file served by this handler should be cached by web proxies and browsers.
                                A duration in seconds with up to nine fractional digits, terminated by 's'. Example "3.5s".
                                Default is '0s'
                              type: string
                            httpHeaders:
                              additionalProperties:
                                type: string
                              description: |-
                                HTTP headers to use for all responses from these URLs.
                                An object containing a list of "key:value" value pairs.".
                              type: object
                              x-kubernetes-map-type: granular
                            mimeType:
                              description: |-
                                MIME type used to serve all files served by this handler.
                                Defaults to file-specific MIME types, which are derived from each file's filename extension.
                              type: string
                            path:
                              description: |-
                                Path to the static files matched by the URL pattern, from the application root directory.
                                The path can refer to text matched in groupings in the URL pattern.
                              type: string
                            requireMatchingFile:
                              description: Whether this handler should match the request
                                if the file referenced by the handler does not exist.
                              type: boolean
                            uploadPathRegex:
                              description: Regular expression that matches the file
                                paths for all files that should be referenced by this
                                handler.
                              type: string
                          type: object
                        urlRegex:
                          description: |-
                            URL prefix. Uses regular expression syntax, which means regexp special characters must be escaped, but should not contain groupings.
                            All URLs that begin with this prefix are handled by this handler, using the portion of the URL after the prefix as part of the file path.
                          type: string
                      type: object
                    type: array
                  inboundServices:
                    description: |-
                      A list of the types of messages that this application is able to receive.
                      Each value may be one of: INBOUND_SERVICE_MAIL, INBOUND_SERVICE_MAIL_BOUNCE, INBOUND_SERVICE_XMPP_ERROR, INBOUND_SERVICE_XMPP_MESSAGE, INBOUND_SERVICE_XMPP_SUBSCRIBE, INBOUND_SERVICE_XMPP_PRESENCE, INBOUND_SERVICE_CHANNEL_PRESENCE, INBOUND_SERVICE_WARMUP.
                    items:
                      type: string
                    type: array
                    x-kubernetes-list-type: set
                  instanceClass:
                    description: |-
                      Instance class that is used to run this version. Valid values are
                      AutomaticScaling: F1, F2, F4, F4_1G
                      ManualScaling: B1, B2, B4, B8, B4_1G
                      Defaults to F1 for AutomaticScaling and B1 for ManualScaling.
                    type: string
                  livenessCheck:
                    description: |-
                      Health checking configuration for VM instances. Unhealthy instances are killed and replaced with new instances.
                      Structure is documented below.
                    properties:
                      checkInterval:
                        description: Interval between health checks.
                        type: string
                      failureThreshold:
                        description: 'Number of consecutive failed checks required
                          before considering the VM unhealthy. Default: 4.'
                        type: number
                      host:
                        description: 'Host header to send when performing a HTTP Readiness
                          check. Example: "myapp.appspot.com"'
                        type: string
                      initialDelay:
                        description: 'The initial delay before starting to execute
                          the checks. Default: "300s"'
                        type: string
                      path:
                        description: The request path.
                        type: string
                      successThreshold:
                        description: 'Number of consecutive successful checks required
                          before considering the VM healthy. Default: 2.'
                        type: number
                      timeout:
                        description: 'Time before the check is considered failed.
                          Default: "4s"'
                        type: string
                    type: object
                  manualScaling:
                    description: |-
                      A service with manual scaling runs continuously, allowing you to perform complex initialization and rely on the state of its memory over time.
                      Structure is documented below.
                    properties:
                      instances:
                        description: |-
                          Number of instances to assign to the service at the start.
                          Note: When managing the number of instances at runtime through the App Engine Admin API or the (now deprecated) Python 2
                          Modules API set_num_instances() you must use lifecycle.ignore_changes = ["manual_scaling"[0].instances] to prevent drift detection.
                        type: number
                    type: object
                  network:
                    description: |-
                      Extra network settings
                      Structure is documented below.
                    properties:
                      forwardedPorts:
                        description: List of ports, or port pairs, to forward from
                          the virtual machine to the application container.
                        items:
                          type: string
                        type: array
                      instanceTag:
                        description: Tag to apply to the instance during creation.
                        type: string
                      name:
                        description: Google Compute Engine network where the virtual
                          machines are created. Specify the short name, not the resource
                          path.
                        type: string
                      sessionAffinity:
                        description: Enable session affinity.
                        type: boolean
                      subnetwork:
                        description: |-
                          Google Cloud Platform sub-network where the virtual machines are created. Specify the short name, not the resource path.
                          If the network that the instance is being created in is a Legacy network, then the IP address is allocated from the IPv4Range.
                          If the network that the instance is being created in is an auto Subnet Mode Network, then only network name should be specified (not the subnetworkName) and the IP address is created from the IPCidrRange of the subnetwork that exists in that zone for that network.
                          If the network that the instance is being created in is a custom Subnet Mode Network, then the subnetworkName must be specified and the IP address is created from the IPCidrRange of the subnetwork.
                          If specified, the subnetwork must exist in the same region as the App Engine flexible environment application.
                        type: string
                    type: object
                  nobuildFilesRegex:
                    description: Files that match this pattern will not be built into
                      this version. Only applicable for Go runtimes.
                    type: string
                  noopOnDestroy:
                    description: If set to true, the application version will not
                      be deleted.
                    type: boolean
                  project:
                    description: |-
                      The ID of the project in which the resource belongs.
                      If it is not provided, the provider project is used.
                    type: string
                  projectRef:
                    description: Reference to a ProjectIAMMember in cloudplatform
                      to populate project.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  projectSelector:
                    description: Selector for a ProjectIAMMember in cloudplatform
                      to populate project.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  readinessCheck:
                    description: |-
                      Configures readiness health checking for instances. Unhealthy instances are not put into the backend traffic rotation.
                      Structure is documented below.
                    properties:
                      appStartTimeout:
                        description: |-
                          A maximum time limit on application initialization, measured from moment the application successfully
                          replies to a healthcheck until it is ready to serve traffic. Default: "300s"
                        type: string
                      checkInterval:
                        description: 'Interval between health checks.  Default: "5s".'
                        type: string
                      failureThreshold:
                        description: 'Number of consecutive failed checks required
                          before removing traffic. Default: 2.'
                        type: number
                      host:
                        description: 'Host header to send when performing a HTTP Readiness
                          check. Example: "myapp.appspot.com"'
                        type: string
                      path:
                        description: The request path.
                        type: string
                      successThreshold:
                        description: 'Number of consecutive successful checks required
                          before receiving traffic. Default: 2.'
                        type: number
                      timeout:
                        description: 'Time before the check is considered failed.
                          Default: "4s"'
                        type: string
                    type: object
                  resources:
                    description: |-
                      Machine resources for a version.
                      Structure is documented below.
                    properties:
                      cpu:
                        description: Number of CPU cores needed.
                        type: number
                      diskGb:
                        description: Disk size (GB) needed.
                        type: number
                      memoryGb:
                        description: Memory (GB) needed.
                        type: number
                      volumes:
                        description: |-
                          List of ports, or port pairs, to forward from the virtual machine to the application container.
                          Structure is documented below.
                        items:
                          properties:
                            name:
                              description: Full Serverless VPC Access Connector name
                                e.g. /projects/my-project/locations/us-central1/connectors/c1.
                              type: string
                            sizeGb:
                              description: Volume size in gigabytes.
                              type: number
                            volumeType:
                              description: Underlying volume type, e.g. 'tmpfs'.
                              type: string
                          type: object
                        type: array
                    type: object
                  runtime:
                    description: Desired runtime. Example python27.
                    type: string
                  runtimeApiVersion:
                    description: |-
                      The version of the API in the given runtime environment.
                      Please see the app.yaml reference for valid values at https://cloud.google.com/appengine/docs/standard/<language>/config/appref
                      Substitute <language> with python, java, php, ruby, go or nodejs.
                    type: string
                  runtimeChannel:
                    description: The channel of the runtime to use. Only available
                      for some runtimes.
                    type: string
                  runtimeMainExecutablePath:
                    description: The path or name of the app's main executable.
                    type: string
                  serviceAccount:
                    description: |-
                      The identity that the deployed version will run as. Admin API will use the App Engine Appspot service account as
                      default if this field is neither provided in app.yaml file nor through CLI flag.
                    type: string
                  serviceAccountRef:
                    description: Reference to a ServiceAccount in cloudplatform to
                      populate serviceAccount.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  serviceAccountSelector:
                    description: Selector for a ServiceAccount in cloudplatform to
                      populate serviceAccount.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  servingStatus:
                    description: |-
                      Current serving status of this version. Only the versions with a SERVING status create instances and can be billed.
                      Default value is SERVING.
                      Possible values are: SERVING, STOPPED.
                    type: string
                  vpcAccessConnector:
                    description: |-
                      Enables VPC connectivity for standard apps.
                      Structure is documented below.
                    properties:
                      name:
                        description: Full Serverless VPC Access Connector name e.g.
                          /projects/my-project/locations/us-central1/connectors/c1.
                        type: string
                    type: object
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  This field is planned to replace the DeletionPolicy field in a future
                  release. Currently, both could be set independently and non-default
                  values would be honored if the feature flag is enabled. If both are
                  custom, the DeletionPolicy field will be ignored.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: |-
                  PublishConnectionDetailsTo specifies the connection secret config which
                  contains a name, metadata and a reference to secret store config to
                  which any connection details for this managed resource should be written.
                  Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: |-
                      SecretStoreConfigRef specifies which secret store config should be used
                      for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations are the annotations to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.annotations".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Labels are the labels/tags to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      type:
                        description: |-
                          Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                  This field is planned to be replaced in a future release in favor of
                  PublishConnectionDetailsTo. Currently, both could be set independently
                  and connection details would be published to both without affecting
                  each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
            x-kubernetes-validations:
            - message: spec.forProvider.livenessCheck is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.livenessCheck)
                || (has(self.initProvider) && has(self.initProvider.livenessCheck))'
            - message: spec.forProvider.readinessCheck is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.readinessCheck)
                || (has(self.initProvider) && has(self.initProvider.readinessCheck))'
            - message: spec.forProvider.runtime is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.runtime)
                || (has(self.initProvider) && has(self.initProvider.runtime))'
          status:
            description: FlexibleAppVersionStatus defines the observed state of FlexibleAppVersion.
            properties:
              atProvider:
                properties:
                  apiConfig:
                    description: |-
                      Serving configuration for Google Cloud Endpoints.
                      Structure is documented below.
                    properties:
                      authFailAction:
                        description: |-
                          Action to take when users access resources that require authentication.
                          Default value is AUTH_FAIL_ACTION_REDIRECT.
                          Possible values are: AUTH_FAIL_ACTION_REDIRECT, AUTH_FAIL_ACTION_UNAUTHORIZED.
                        type: string
                      login:
                        description: |-
                          Level of login required to access this resource.
                          Default value is LOGIN_OPTIONAL.
                          Possible values are: LOGIN_OPTIONAL, LOGIN_ADMIN, LOGIN_REQUIRED.
                        type: string
                      script:
                        description: Path to the script from the application root
                          directory.
                        type: string
                      securityLevel:
                        description: |-
                          Security (HTTPS) enforcement for this URL.
                          Possible values are: SECURE_DEFAULT, SECURE_NEVER, SECURE_OPTIONAL, SECURE_ALWAYS.
                        type: string
                      url:
                        description: URL to serve the endpoint at.
                        type: string
                    type: object
                  automaticScaling:
                    description: |-
                      Automatic scaling is based on request rate, response latencies, and other application metrics.
                      Structure is documented below.
                    properties:
                      coolDownPeriod:
                        description: |-
                          The time period that the Autoscaler should wait before it starts collecting information from a new instance.
                          This prevents the autoscaler from collecting information when the instance is initializing,
                          during which the collected usage would not be reliable. Default: 120s
                        type: string
                      cpuUtilization:
                        description: |-
                          Target scaling by CPU usage.
                          Structure is documented below.
                        properties:
                          aggregationWindowLength:
                            description: Period of time over which CPU utilization
                              is calculated.
                            type: string
                          targetUtilization:
                            description: Target CPU utilization ratio to maintain
                              when scaling. Must be between 0 and 1.
                            type: number
                        type: object
                      diskUtilization:
                        description: |-
                          Target scaling by disk usage.
                          Structure is documented below.
                        properties:
                          targetReadBytesPerSecond:
                            description: Target bytes read per second.
                            type: number
                          targetReadOpsPerSecond:
                            description: Target ops read per seconds.
                            type: number
                          targetWriteBytesPerSecond:
                            description: Target bytes written per second.
                            type: number
                          targetWriteOpsPerSecond:
                            description: Target ops written per second.
                            type: number
                        type: object
                      maxConcurrentRequests:
                        description: |-
                          Number of concurrent requests an automatic scaling instance can accept before the scheduler spawns a new instance.
                          Defaults to a runtime-specific value.
                        type: number
                      maxIdleInstances:
                        description: Maximum number of idle instances that should
                          be maintained for this version.
                        type: number
                      maxPendingLatency:
                        description: Maximum amount of time that a request should
                          wait in the pending queue before starting a new instance
                          to handle it.
                        type: string
                      maxTotalInstances:
                        description: 'Maximum number of instances that should be started
                          to handle requests for this version. Default: 20'
                        type: number
                      minIdleInstances:
                        description: Minimum number of idle instances that should
                          be maintained for this version. Only applicable for the
                          default version of a service.
                        type: number
                      minPendingLatency:
                        description: Minimum amount of time a request should wait
                          in the pending queue before starting a new instance to handle
                          it.
                        type: string
                      minTotalInstances:
                        description: 'Minimum number of running instances that should
                          be maintained for this version. Default: 2'
                        type: number
                      networkUtilization:
                        description: |-
                          Target scaling by network usage.
                          Structure is documented below.
                        properties:
                          targetReceivedBytesPerSecond:
                            description: Target bytes received per second.
                            type: number
                          targetReceivedPacketsPerSecond:
                            description: Target packets received per second.
                            type: number
                          targetSentBytesPerSecond:
                            description: Target bytes sent per second.
                            type: number
                          targetSentPacketsPerSecond:
                            description: Target packets sent per second.
                            type: number
                        type: object
                      requestUtilization:
                        description: |-
                          Target scaling by request utilization.
                          Structure is documented below.
                        properties:
                          targetConcurrentRequests:
                            description: Target number of concurrent requests.
                            type: number
                          targetRequestCountPerSecond:
                            description: Target requests per second.
                            type: string
                        type: object
                    type: object
                  betaSettings:
                    additionalProperties:
                      type: string
                    description: Metadata settings that are supplied to this version
                      to enable beta runtime features.
                    type: object
                    x-kubernetes-map-type: granular
                  defaultExpiration:
                    description: |-
                      Duration that static files should be cached by web proxies and browsers.
                      Only applicable if the corresponding StaticFilesHandler does not specify its own expiration time.
                    type: string
                  deleteServiceOnDestroy:
                    description: If set to true, the service will be deleted if it
                      is the last version.
                    type: boolean
                  deployment:
                    description: |-
                      Code and application artifacts that make up this version.
                      Structure is documented below.
                    properties:
                      cloudBuildOptions:
                        description: |-
                          Options for the build operations performed as a part of the version deployment. Only applicable when creating a version using source code directly.
                          Structure is documented below.
                        properties:
                          appYamlPath:
                            description: Path to the yaml file used in deployment,
                              used to determine runtime configuration details.
                            type: string
                          cloudBuildTimeout:
                            description: |-
                              The Cloud Build timeout used as part of any dependent builds performed by version creation. Defaults to 10 minutes.
                              A duration in seconds with up to nine fractional digits, terminated by 's'. Example: "3.5s".
                            type: string
                        type: object
                      container:
                        description: |-
                          The Docker image for the container that runs the version.
                          Structure is documented below.
                        properties:
                          image:
                            description: |-
                              URI to the hosted container image in Google Container Registry. The URI must be fully qualified and include a tag or digest.
                              Examples: "gcr.io/my-project/image:tag" or "gcr.io/my-project/image@digest"
                            type: string
                        type: object
                      files:
                        description: |-
                          Manifest of the files stored in Google Cloud Storage that are included as part of this version.
                          All files must be readable using the credentials supplied with this call.
                          Structure is documented below.
                        items:
                          properties:
                            name:
                              description: Full Serverless VPC Access Connector name
                                e.g. /projects/my-project/locations/us-central1/connectors/c1.
                              type: string
                            sha1Sum:
                              description: SHA1 checksum of the file
                              type: string
                            sourceUrl:
                              description: Source URL
                              type: string
                          type: object
                        type: array
                      zip:
                        description: |-
                          Zip File
                          Structure is documented below.
                        properties:
                          filesCount:
                            description: files count
                            type: number
                          sourceUrl:
                            description: Source URL
                            type: string
                        type: object
                    type: object
                  endpointsApiService:
                    description: |-
                      Code and application artifacts that make up this version.
                      Structure is documented below.
                    properties:
                      configId:
                        description: |-
                          Endpoints service configuration ID as specified by the Service Management API. For example "2016-09-19r1".
                          By default, the rollout strategy for Endpoints is "FIXED". This means that Endpoints starts up with a particular configuration ID.
                          When a new configuration is rolled out, Endpoints must be given the new configuration ID. The configId field is used to give the configuration ID
                          and is required in this case.
                          Endpoints also has a rollout strategy called "MANAGED". When using this, Endpoints fetches the latest configuration and does not need
                          the configuration ID. In this case, configId must be omitted.
                        type: string
                      disableTraceSampling:
                        description: Enable or disable trace sampling. By default,
                          this is set to false for enabled.
                        type: boolean
                      name:
                        description: |-
                          Endpoints service name which is the name of the "service" resource in the Service Management API.
                          For example "myapi.endpoints.myproject.cloud.goog"
                        type: string
                      rolloutStrategy:
                        description: |-
                          Endpoints rollout strategy. If FIXED, configId must be specified. If MANAGED, configId must be omitted.
                          Default value is FIXED.
                          Possible values are: FIXED, MANAGED.
                        type: string
                    type: object
                  entrypoint:
                    description: |-
                      The entrypoint for the application.
                      Structure is documented below.
                    properties:
                      shell:
                        description: The format should be a shell command that can
                          be fed to bash -c.
                        type: string
                    type: object
                  envVariables:
                    additionalProperties:
                      type: string
                    description: Environment variables available to the application.
                    type: object
                    x-kubernetes-map-type: granular
                  flexibleRuntimeSettings:
                    description: |-
                      Runtime settings for App Engine flexible environment.
                      Structure is documented below.
                    properties:
                      operatingSystem:
                        description: Operating System of the application runtime.
                        type: string
                      runtimeVersion:
                        description: The runtime version of an App Engine flexible
                          application.
                        type: string
                    type: object
                  handlers:
                    description: |-
                      An ordered list of URL-matching patterns that should be applied to incoming requests.
                      The first matching URL handles the request and other request handlers are not attempted.
                      Structure is documented below.
                    items:
                      properties:
                        authFailAction:
                          description: |-
                            Actions to take when the user is not logged in.
                            Possible values are: AUTH_FAIL_ACTION_REDIRECT, AUTH_FAIL_ACTION_UNAUTHORIZED.
                          type: string
                        login:
                          description: |-
                            Methods to restrict access to a URL based on login status.
                            Possible values are: LOGIN_OPTIONAL, LOGIN_ADMIN, LOGIN_REQUIRED.
                          type: string
                        redirectHttpResponseCode:
                          description: |-
                            30x code to use when performing redirects for the secure field.
                            Possible values are: REDIRECT_HTTP_RESPONSE_CODE_301, REDIRECT_HTTP_RESPONSE_CODE_302, REDIRECT_HTTP_RESPONSE_CODE_303, REDIRECT_HTTP_RESPONSE_CODE_307.
                          type: string
                        script:
                          description: |-
                            Executes a script to handle the requests that match this URL pattern.
                            Only the auto value is supported for Node.js in the App Engine standard environment, for example "script:" "auto".
                            Structure is documented below.
                          properties:
                            scriptPath:
                              description: Path to the script from the application
                                root directory.
                              type: string
                          type: object
                        securityLevel:
                          description: |-
                            Security (HTTPS) enforcement for this URL.
                            Possible values are: SECURE_DEFAULT, SECURE_NEVER, SECURE_OPTIONAL, SECURE_ALWAYS.
                          type: string
                        staticFiles:
                          description: |-
                            Files served directly to the user for a given URL, such as images, CSS stylesheets, or JavaScript source files.
                            Static file handlers describe which files in the application directory are static files, and which URLs serve them.
                            Structure is documented below.
                          properties:
                            applicationReadable:
                              description: |-
                                Whether files should also be uploaded as code data. By default, files declared in static file handlers are
                                uploaded as static data and are only served to end users; they cannot be read by the application. If enabled,
                                uploads are charged against both your code and static data storage resource quotas.
                              type: boolean
                            expiration:
                              description: |-
                                Time a static file served by this handler should be cached by web proxies and browsers.
                                A duration in seconds with up to nine fractional digits, terminated by 's'. Example "3.5s".
                                Default is '0s'
                              type: string
                            httpHeaders:
                              additionalProperties:
                                type: string
                              description: |-
                                HTTP headers to use for all responses from these URLs.
                                An object containing a list of "key:value" value pairs.".
                              type: object
                              x-kubernetes-map-type: granular
                            mimeType:
                              description: |-
                                MIME type used to serve all files served by this handler.
                                Defaults to file-specific MIME types, which are derived from each file's filename extension.
                              type: string
                            path:
                              description: |-
                                Path to the static files matched by the URL pattern, from the application root directory.
                                The path can refer to text matched in groupings in the URL pattern.
                              type: string
                            requireMatchingFile:
                              description: Whether this handler should match the request
                                if the file referenced by the handler does not exist.
                              type: boolean
                            uploadPathRegex:
                              description: Regular expression that matches the file
                                paths for all files that should be referenced by this
                                handler.
                              type: string
                          type: object
                        urlRegex:
                          description: |-
                            URL prefix. Uses regular expression syntax, which means regexp special characters must be escaped, but should not contain groupings.
                            All URLs that begin with this prefix are handled by this handler, using the portion of the URL after the prefix as part of the file path.
                          type: string
                      type: object
                    type: array
                  id:
                    description: an identifier for the resource with format apps/{{project}}/services/{{service}}/versions/{{version_id}}
                    type: string
                  inboundServices:
                    description: |-
                      A list of the types of messages that this application is able to receive.
                      Each value may be one of: INBOUND_SERVICE_MAIL, INBOUND_SERVICE_MAIL_BOUNCE, INBOUND_SERVICE_XMPP_ERROR, INBOUND_SERVICE_XMPP_MESSAGE, INBOUND_SERVICE_XMPP_SUBSCRIBE, INBOUND_SERVICE_XMPP_PRESENCE, INBOUND_SERVICE_CHANNEL_PRESENCE, INBOUND_SERVICE_WARMUP.
                    items:
                      type: string
                    type: array
                    x-kubernetes-list-type: set
                  instanceClass:
                    description: |-
                      Instance class that is used to run this version. Valid values are
                      AutomaticScaling: F1, F2, F4, F4_1G
                      ManualScaling: B1, B2, B4, B8, B4_1G
                      Defaults to F1 for AutomaticScaling and B1 for ManualScaling.
                    type: string
                  livenessCheck:
                    description: |-
                      Health checking configuration for VM instances. Unhealthy instances are killed and replaced with new instances.
                      Structure is documented below.
                    properties:
                      checkInterval:
                        description: Interval between health checks.
                        type: string
                      failureThreshold:
                        description: 'Number of consecutive failed checks required
                          before considering the VM unhealthy. Default: 4.'
                        type: number
                      host:
                        description: 'Host header to send when performing a HTTP Readiness
                          check. Example: "myapp.appspot.com"'
                        type: string
                      initialDelay:
                        description: 'The initial delay before starting to execute
                          the checks. Default: "300s"'
                        type: string
                      path:
                        description: The request path.
                        type: string
                      successThreshold:
                        description: 'Number of consecutive successful checks required
                          before considering the VM healthy. Default: 2.'
                        type: number
                      timeout:
                        description: 'Time before the check is considered failed.
                          Default: "4s"'
                        type: string
                    type: object
                  manualScaling:
                    description: |-
                      A service with manual scaling runs continuously, allowing you to perform complex initialization and rely on the state of its memory over time.
                      Structure is documented below.
                    properties:
                      instances:
                        description: |-
                          Number of instances to assign to the service at the start.
                          Note: When managing the number of instances at runtime through the App Engine Admin API or the (now deprecated) Python 2
                          Modules API set_num_instances() you must use lifecycle.ignore_changes = ["manual_scaling"[0].instances] to prevent drift detection.
                        type: number
                    type: object
                  name:
                    description: Full path to the Version resource in the API. Example,
                      "v1".
                    type: string
                  network:
                    description: |-
                      Extra network settings
                      Structure is documented below.
                    properties:
                      forwardedPorts:
                        description: List of ports, or port pairs, to forward from
                          the virtual machine to the application container.
                        items:
                          type: string
                        type: array
                      instanceTag:
                        description: Tag to apply to the instance during creation.
                        type: string
                      name:
                        description: Google Compute Engine network where the virtual
                          machines are created. Specify the short name, not the resource
                          path.
                        type: string
                      sessionAffinity:
                        description: Enable session affinity.
                        type: boolean
                      subnetwork:
                        description: |-
                          Google Cloud Platform sub-network where the virtual machines are created. Specify the short name, not the resource path.
                          If the network that the instance is being created in is a Legacy network, then the IP address is allocated from the IPv4Range.
                          If the network that the instance is being created in is an auto Subnet Mode Network, then only network name should be specified (not the subnetworkName) and the IP address is created from the IPCidrRange of the subnetwork that exists in that zone for that network.
                          If the network that the instance is being created in is a custom Subnet Mode Network, then the subnetworkName must be specified and the IP address is created from the IPCidrRange of the subnetwork.
                          If specified, the subnetwork must exist in the same region as the App Engine flexible environment application.
                        type: string
                    type: object
                  nobuildFilesRegex:
                    description: Files that match this pattern will not be built into
                      this version. Only applicable for Go runtimes.
                    type: string
                  noopOnDestroy:
                    description: If set to true, the application version will not
                      be deleted.
                    type: boolean
                  project:
                    description: |-
                      The ID of the project in which the resource belongs.
                      If it is not provided, the provider project is used.
                    type: string
                  readinessCheck:
                    description: |-
                      Configures readiness health checking for instances. Unhealthy instances are not put into the backend traffic rotation.
                      Structure is documented below.
                    properties:
                      appStartTimeout:
                        description: |-
                          A maximum time limit on application initialization, measured from moment the application successfully
                          replies to a healthcheck until it is ready to serve traffic. Default: "300s"
                        type: string
                      checkInterval:
                        description: 'Interval between health checks.  Default: "5s".'
                        type: string
                      failureThreshold:
                        description: 'Number of consecutive failed checks required
                          before removing traffic. Default: 2.'
                        type: number
                      host:
                        description: 'Host header to send when performing a HTTP Readiness
                          check. Example: "myapp.appspot.com"'
                        type: string
                      path:
                        description: The request path.
                        type: string
                      successThreshold:
                        description: 'Number of consecutive successful checks required
                          before receiving traffic. Default: 2.'
                        type: number
                      timeout:
                        description: 'Time before the check is considered failed.
                          Default: "4s"'
                        type: string
                    type: object
                  resources:
                    description: |-
                      Machine resources for a version.
                      Structure is documented below.
                    properties:
                      cpu:
                        description: Number of CPU cores needed.
                        type: number
                      diskGb:
                        description: Disk size (GB) needed.
                        type: number
                      memoryGb:
                        description: Memory (GB) needed.
                        type: number
                      volumes:
                        description: |-
                          List of ports, or port pairs, to forward from the virtual machine to the application container.
                          Structure is documented below.
                        items:
                          properties:
                            name:
                              description: Full Serverless VPC Access Connector name
                                e.g. /projects/my-project/locations/us-central1/connectors/c1.
                              type: string
                            sizeGb:
                              description: Volume size in gigabytes.
                              type: number
                            volumeType:
                              description: Underlying volume type, e.g. 'tmpfs'.
                              type: string
                          type: object
                        type: array
                    type: object
                  runtime:
                    description: Desired runtime. Example python27.
                    type: string
                  runtimeApiVersion:
                    description: |-
                      The version of the API in the given runtime environment.
                      Please see the app.yaml reference for valid values at https://cloud.google.com/appengine/docs/standard/<language>/config/appref
                      Substitute <language> with python, java, php, ruby, go or nodejs.
                    type: string
                  runtimeChannel:
                    description: The channel of the runtime to use. Only available
                      for some runtimes.
                    type: string
                  runtimeMainExecutablePath:
                    description: The path or name of the app's main executable.
                    type: string
                  service:
                    description: AppEngine service resource. Can contain numbers,
                      letters, and hyphens.
                    type: string
                  serviceAccount:
                    description: |-
                      The identity that the deployed version will run as. Admin API will use the App Engine Appspot service account as
                      default if this field is neither provided in app.yaml file nor through CLI flag.
                    type: string
                  servingStatus:
                    description: |-
                      Current serving status of this version. Only the versions with a SERVING status create instances and can be billed.
                      Default value is SERVING.
                      Possible values are: SERVING, STOPPED.
                    type: string
                  vpcAccessConnector:
                    description: |-
                      Enables VPC connectivity for standard apps.
                      Structure is documented below.
                    properties:
                      name:
                        description: Full Serverless VPC Access Connector name e.g.
                          /projects/my-project/locations/us-central1/connectors/c1.
                        type: string
                    type: object
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: |-
                  ObservedGeneration is the latest metadata.generation
                  which resulted in either a ready state, or stalled due to error
                  it can not recover from without human intervention.
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
