---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: routerpeers.compute.gcp.upbound.io
spec:
  group: compute.gcp.upbound.io
  names:
    categories:
    - crossplane
    - managed
    - gcp
    kind: RouterPeer
    listKind: RouterPeerList
    plural: routerpeers
    singular: routerpeer
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: RouterPeer is the Schema for the RouterPeers API. BGP information
          that must be configured into the routing stack to establish BGP peering.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: RouterPeerSpec defines the desired state of RouterPeer
            properties:
              deletionPolicy:
                default: Delete
                description: |-
                  DeletionPolicy specifies what will happen to the underlying external
                  when this managed resource is deleted - either "Delete" or "Orphan" the
                  external resource.
                  This field is planned to be deprecated in favor of the ManagementPolicies
                  field in a future release. Currently, both could be set independently and
                  non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  advertiseMode:
                    description: |-
                      User-specified flag to indicate which mode to use for advertisement.
                      Valid values of this enum field are: DEFAULT, CUSTOM
                      Default value is DEFAULT.
                      Possible values are: DEFAULT, CUSTOM.
                    type: string
                  advertisedGroups:
                    description: |-
                      User-specified list of prefix groups to advertise in custom
                      mode, which currently supports the following option:
                    items:
                      type: string
                    type: array
                  advertisedIpRanges:
                    description: |-
                      User-specified list of individual IP ranges to advertise in
                      custom mode. This field can only be populated if advertiseMode
                      is CUSTOM and is advertised to all peers of the router. These IP
                      ranges will be advertised in addition to any specified groups.
                      Leave this field blank to advertise no custom IP ranges.
                      Structure is documented below.
                    items:
                      properties:
                        description:
                          description: User-specified description for the IP range.
                          type: string
                        range:
                          description: |-
                            The IP range to advertise. The value must be a
                            CIDR-formatted string.
                          type: string
                      type: object
                    type: array
                  advertisedRoutePriority:
                    description: |-
                      The priority of routes advertised to this BGP peer.
                      Where there is more than one matching route of maximum
                      length, the routes with the lowest priority value win.
                    type: number
                  bfd:
                    description: |-
                      BFD configuration for the BGP peering.
                      Structure is documented below.
                    items:
                      properties:
                        minReceiveInterval:
                          description: |-
                            The minimum interval, in milliseconds, between BFD control packets
                            received from the peer router. The actual value is negotiated
                            between the two routers and is equal to the greater of this value
                            and the transmit interval of the other router. If set, this value
                            must be between 1000 and 30000.
                          type: number
                        minTransmitInterval:
                          description: |-
                            The minimum interval, in milliseconds, between BFD control packets
                            transmitted to the peer router. The actual value is negotiated
                            between the two routers and is equal to the greater of this value
                            and the corresponding receive interval of the other router. If set,
                            this value must be between 1000 and 30000.
                          type: number
                        multiplier:
                          description: |-
                            The number of consecutive BFD packets that must be missed before
                            BFD declares that a peer is unavailable. If set, the value must
                            be a value between 5 and 16.
                          type: number
                        sessionInitializationMode:
                          description: |-
                            The BFD session initialization mode for this BGP peer.
                            If set to ACTIVE, the Cloud Router will initiate the BFD session
                            for this BGP peer. If set to PASSIVE, the Cloud Router will wait
                            for the peer router to initiate the BFD session for this BGP peer.
                            If set to DISABLED, BFD is disabled for this BGP peer.
                            Possible values are: ACTIVE, DISABLED, PASSIVE.
                          type: string
                      type: object
                    type: array
                  customLearnedIpRanges:
                    items:
                      properties:
                        range:
                          description: |-
                            The IP range to advertise. The value must be a
                            CIDR-formatted string.
                          type: string
                      type: object
                    type: array
                  customLearnedRoutePriority:
                    type: number
                  enable:
                    description: |-
                      The status of the BGP peer connection. If set to false, any active session
                      with the peer is terminated and all associated routing information is removed.
                      If set to true, the peer connection can be established with routing information.
                      The default is true.
                    type: boolean
                  enableIpv4:
                    description: Enable IPv4 traffic over BGP Peer. It is enabled
                      by default if the peerIpAddress is version 4.
                    type: boolean
                  enableIpv6:
                    description: Enable IPv6 traffic over BGP Peer. If not specified,
                      it is disabled by default.
                    type: boolean
                  interface:
                    description: Name of the interface the BGP peer is associated
                      with.
                    type: string
                  interfaceRef:
                    description: Reference to a RouterInterface in compute to populate
                      interface.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  interfaceSelector:
                    description: Selector for a RouterInterface in compute to populate
                      interface.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  ipAddress:
                    description: |-
                      IP address of the interface inside Google Cloud Platform.
                      Only IPv4 is supported.
                    type: string
                  ipv4NexthopAddress:
                    description: IPv4 address of the interface inside Google Cloud
                      Platform.
                    type: string
                  ipv6NexthopAddress:
                    description: |-
                      IPv6 address of the interface inside Google Cloud Platform.
                      The address must be in the range 2600:2d00:0:2::/64 or 2600:2d00:0:3::/64.
                      If you do not specify the next hop addresses, Google Cloud automatically
                      assigns unused addresses from the 2600:2d00:0:2::/64 or 2600:2d00:0:3::/64 range for you.
                    type: string
                  md5AuthenticationKey:
                    items:
                      properties:
                        keySecretRef:
                          description: A SecretKeySelector is a reference to a secret
                            key in an arbitrary namespace.
                          properties:
                            key:
                              description: The key to select.
                              type: string
                            name:
                              description: Name of the secret.
                              type: string
                            namespace:
                              description: Namespace of the secret.
                              type: string
                          required:
                          - key
                          - name
                          - namespace
                          type: object
                        name:
                          description: |-
                            Name of this BGP peer. The name must be 1-63 characters long,
                            and comply with RFC1035. Specifically, the name must be 1-63 characters
                            long and match the regular expression [a-z]([-a-z0-9]*[a-z0-9])? which
                            means the first character must be a lowercase letter, and all
                            following characters must be a dash, lowercase letter, or digit,
                            except the last character, which cannot be a dash.
                          type: string
                      required:
                      - keySecretRef
                      type: object
                    type: array
                  peerAsn:
                    description: |-
                      Peer BGP Autonomous System Number (ASN).
                      Each BGP interface may use a different value.
                    type: number
                  peerIpAddress:
                    description: |-
                      IP address of the BGP interface outside Google Cloud Platform.
                      Only IPv4 is supported. Required if ip_address is set.
                    type: string
                  peerIpAddressRef:
                    description: Reference to a Address in compute to populate peerIpAddress.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  peerIpAddressSelector:
                    description: Selector for a Address in compute to populate peerIpAddress.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  peerIpv4NexthopAddress:
                    description: IPv4 address of the BGP interface outside Google
                      Cloud Platform.
                    type: string
                  peerIpv6NexthopAddress:
                    description: |-
                      IPv6 address of the BGP interface outside Google Cloud Platform.
                      The address must be in the range 2600:2d00:0:2::/64 or 2600:2d00:0:3::/64.
                      If you do not specify the next hop addresses, Google Cloud automatically
                      assigns unused addresses from the 2600:2d00:0:2::/64 or 2600:2d00:0:3::/64 range for you.
                    type: string
                  project:
                    description: |-
                      The ID of the project in which the resource belongs.
                      If it is not provided, the provider project is used.
                    type: string
                  region:
                    description: |-
                      Region where the router and BgpPeer reside.
                      If it is not provided, the provider region is used.
                    type: string
                  regionRef:
                    description: Reference to a Router in compute to populate region.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  regionSelector:
                    description: Selector for a Router in compute to populate region.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  router:
                    description: The name of the Cloud Router in which this BgpPeer
                      will be configured.
                    type: string
                  routerApplianceInstance:
                    description: |-
                      The URI of the VM instance that is used as third-party router appliances
                      such as Next Gen Firewalls, Virtual Routers, or Router Appliances.
                      The VM instance must be located in zones contained in the same region as
                      this Cloud Router. The VM instance is the peer side of the BGP session.
                    type: string
                  routerApplianceInstanceRef:
                    description: Reference to a Instance in compute to populate routerApplianceInstance.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  routerApplianceInstanceSelector:
                    description: Selector for a Instance in compute to populate routerApplianceInstance.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  routerRef:
                    description: Reference to a Router in compute to populate router.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  routerSelector:
                    description: Selector for a Router in compute to populate router.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                type: object
              initProvider:
                description: |-
                  THIS IS A BETA FIELD. It will be honored
                  unless the Management Policies feature flag is disabled.
                  InitProvider holds the same fields as ForProvider, with the exception
                  of Identifier and other resource reference fields. The fields that are
                  in InitProvider are merged into ForProvider when the resource is created.
                  The same fields are also added to the terraform ignore_changes hook, to
                  avoid updating them after creation. This is useful for fields that are
                  required on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them, like an
                  autoscaler.
                properties:
                  advertiseMode:
                    description: |-
                      User-specified flag to indicate which mode to use for advertisement.
                      Valid values of this enum field are: DEFAULT, CUSTOM
                      Default value is DEFAULT.
                      Possible values are: DEFAULT, CUSTOM.
                    type: string
                  advertisedGroups:
                    description: |-
                      User-specified list of prefix groups to advertise in custom
                      mode, which currently supports the following option:
                    items:
                      type: string
                    type: array
                  advertisedIpRanges:
                    description: |-
                      User-specified list of individual IP ranges to advertise in
                      custom mode. This field can only be populated if advertiseMode
                      is CUSTOM and is advertised to all peers of the router. These IP
                      ranges will be advertised in addition to any specified groups.
                      Leave this field blank to advertise no custom IP ranges.
                      Structure is documented below.
                    items:
                      properties:
                        description:
                          description: User-specified description for the IP range.
                          type: string
                        range:
                          description: |-
                            The IP range to advertise. The value must be a
                            CIDR-formatted string.
                          type: string
                      type: object
                    type: array
                  advertisedRoutePriority:
                    description: |-
                      The priority of routes advertised to this BGP peer.
                      Where there is more than one matching route of maximum
                      length, the routes with the lowest priority value win.
                    type: number
                  bfd:
                    description: |-
                      BFD configuration for the BGP peering.
                      Structure is documented below.
                    items:
                      properties:
                        minReceiveInterval:
                          description: |-
                            The minimum interval, in milliseconds, between BFD control packets
                            received from the peer router. The actual value is negotiated
                            between the two routers and is equal to the greater of this value
                            and the transmit interval of the other router. If set, this value
                            must be between 1000 and 30000.
                          type: number
                        minTransmitInterval:
                          description: |-
                            The minimum interval, in milliseconds, between BFD control packets
                            transmitted to the peer router. The actual value is negotiated
                            between the two routers and is equal to the greater of this value
                            and the corresponding receive interval of the other router. If set,
                            this value must be between 1000 and 30000.
                          type: number
                        multiplier:
                          description: |-
                            The number of consecutive BFD packets that must be missed before
                            BFD declares that a peer is unavailable. If set, the value must
                            be a value between 5 and 16.
                          type: number
                        sessionInitializationMode:
                          description: |-
                            The BFD session initialization mode for this BGP peer.
                            If set to ACTIVE, the Cloud Router will initiate the BFD session
                            for this BGP peer. If set to PASSIVE, the Cloud Router will wait
                            for the peer router to initiate the BFD session for this BGP peer.
                            If set to DISABLED, BFD is disabled for this BGP peer.
                            Possible values are: ACTIVE, DISABLED, PASSIVE.
                          type: string
                      type: object
                    type: array
                  customLearnedIpRanges:
                    items:
                      properties:
                        range:
                          description: |-
                            The IP range to advertise. The value must be a
                            CIDR-formatted string.
                          type: string
                      type: object
                    type: array
                  customLearnedRoutePriority:
                    type: number
                  enable:
                    description: |-
                      The status of the BGP peer connection. If set to false, any active session
                      with the peer is terminated and all associated routing information is removed.
                      If set to true, the peer connection can be established with routing information.
                      The default is true.
                    type: boolean
                  enableIpv4:
                    description: Enable IPv4 traffic over BGP Peer. It is enabled
                      by default if the peerIpAddress is version 4.
                    type: boolean
                  enableIpv6:
                    description: Enable IPv6 traffic over BGP Peer. If not specified,
                      it is disabled by default.
                    type: boolean
                  interface:
                    description: Name of the interface the BGP peer is associated
                      with.
                    type: string
                  interfaceRef:
                    description: Reference to a RouterInterface in compute to populate
                      interface.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  interfaceSelector:
                    description: Selector for a RouterInterface in compute to populate
                      interface.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  ipAddress:
                    description: |-
                      IP address of the interface inside Google Cloud Platform.
                      Only IPv4 is supported.
                    type: string
                  ipv4NexthopAddress:
                    description: IPv4 address of the interface inside Google Cloud
                      Platform.
                    type: string
                  ipv6NexthopAddress:
                    description: |-
                      IPv6 address of the interface inside Google Cloud Platform.
                      The address must be in the range 2600:2d00:0:2::/64 or 2600:2d00:0:3::/64.
                      If you do not specify the next hop addresses, Google Cloud automatically
                      assigns unused addresses from the 2600:2d00:0:2::/64 or 2600:2d00:0:3::/64 range for you.
                    type: string
                  md5AuthenticationKey:
                    items:
                      properties:
                        name:
                          description: |-
                            Name of this BGP peer. The name must be 1-63 characters long,
                            and comply with RFC1035. Specifically, the name must be 1-63 characters
                            long and match the regular expression [a-z]([-a-z0-9]*[a-z0-9])? which
                            means the first character must be a lowercase letter, and all
                            following characters must be a dash, lowercase letter, or digit,
                            except the last character, which cannot be a dash.
                          type: string
                      type: object
                    type: array
                  peerAsn:
                    description: |-
                      Peer BGP Autonomous System Number (ASN).
                      Each BGP interface may use a different value.
                    type: number
                  peerIpAddress:
                    description: |-
                      IP address of the BGP interface outside Google Cloud Platform.
                      Only IPv4 is supported. Required if ip_address is set.
                    type: string
                  peerIpAddressRef:
                    description: Reference to a Address in compute to populate peerIpAddress.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  peerIpAddressSelector:
                    description: Selector for a Address in compute to populate peerIpAddress.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  peerIpv4NexthopAddress:
                    description: IPv4 address of the BGP interface outside Google
                      Cloud Platform.
                    type: string
                  peerIpv6NexthopAddress:
                    description: |-
                      IPv6 address of the BGP interface outside Google Cloud Platform.
                      The address must be in the range 2600:2d00:0:2::/64 or 2600:2d00:0:3::/64.
                      If you do not specify the next hop addresses, Google Cloud automatically
                      assigns unused addresses from the 2600:2d00:0:2::/64 or 2600:2d00:0:3::/64 range for you.
                    type: string
                  project:
                    description: |-
                      The ID of the project in which the resource belongs.
                      If it is not provided, the provider project is used.
                    type: string
                  region:
                    description: |-
                      Region where the router and BgpPeer reside.
                      If it is not provided, the provider region is used.
                    type: string
                  regionRef:
                    description: Reference to a Router in compute to populate region.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  regionSelector:
                    description: Selector for a Router in compute to populate region.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  routerApplianceInstance:
                    description: |-
                      The URI of the VM instance that is used as third-party router appliances
                      such as Next Gen Firewalls, Virtual Routers, or Router Appliances.
                      The VM instance must be located in zones contained in the same region as
                      this Cloud Router. The VM instance is the peer side of the BGP session.
                    type: string
                  routerApplianceInstanceRef:
                    description: Reference to a Instance in compute to populate routerApplianceInstance.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  routerApplianceInstanceSelector:
                    description: Selector for a Instance in compute to populate routerApplianceInstance.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  This field is planned to replace the DeletionPolicy field in a future
                  release. Currently, both could be set independently and non-default
                  values would be honored if the feature flag is enabled. If both are
                  custom, the DeletionPolicy field will be ignored.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: |-
                  PublishConnectionDetailsTo specifies the connection secret config which
                  contains a name, metadata and a reference to secret store config to
                  which any connection details for this managed resource should be written.
                  Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: |-
                      SecretStoreConfigRef specifies which secret store config should be used
                      for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations are the annotations to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.annotations".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Labels are the labels/tags to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      type:
                        description: |-
                          Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                  This field is planned to be replaced in a future release in favor of
                  PublishConnectionDetailsTo. Currently, both could be set independently
                  and connection details would be published to both without affecting
                  each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
            x-kubernetes-validations:
            - message: spec.forProvider.peerAsn is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.peerAsn)
                || (has(self.initProvider) && has(self.initProvider.peerAsn))'
          status:
            description: RouterPeerStatus defines the observed state of RouterPeer.
            properties:
              atProvider:
                properties:
                  advertiseMode:
                    description: |-
                      User-specified flag to indicate which mode to use for advertisement.
                      Valid values of this enum field are: DEFAULT, CUSTOM
                      Default value is DEFAULT.
                      Possible values are: DEFAULT, CUSTOM.
                    type: string
                  advertisedGroups:
                    description: |-
                      User-specified list of prefix groups to advertise in custom
                      mode, which currently supports the following option:
                    items:
                      type: string
                    type: array
                  advertisedIpRanges:
                    description: |-
                      User-specified list of individual IP ranges to advertise in
                      custom mode. This field can only be populated if advertiseMode
                      is CUSTOM and is advertised to all peers of the router. These IP
                      ranges will be advertised in addition to any specified groups.
                      Leave this field blank to advertise no custom IP ranges.
                      Structure is documented below.
                    items:
                      properties:
                        description:
                          description: User-specified description for the IP range.
                          type: string
                        range:
                          description: |-
                            The IP range to advertise. The value must be a
                            CIDR-formatted string.
                          type: string
                      type: object
                    type: array
                  advertisedRoutePriority:
                    description: |-
                      The priority of routes advertised to this BGP peer.
                      Where there is more than one matching route of maximum
                      length, the routes with the lowest priority value win.
                    type: number
                  bfd:
                    description: |-
                      BFD configuration for the BGP peering.
                      Structure is documented below.
                    items:
                      properties:
                        minReceiveInterval:
                          description: |-
                            The minimum interval, in milliseconds, between BFD control packets
                            received from the peer router. The actual value is negotiated
                            between the two routers and is equal to the greater of this value
                            and the transmit interval of the other router. If set, this value
                            must be between 1000 and 30000.
                          type: number
                        minTransmitInterval:
                          description: |-
                            The minimum interval, in milliseconds, between BFD control packets
                            transmitted to the peer router. The actual value is negotiated
                            between the two routers and is equal to the greater of this value
                            and the corresponding receive interval of the other router. If set,
                            this value must be between 1000 and 30000.
                          type: number
                        multiplier:
                          description: |-
                            The number of consecutive BFD packets that must be missed before
                            BFD declares that a peer is unavailable. If set, the value must
                            be a value between 5 and 16.
                          type: number
                        sessionInitializationMode:
                          description: |-
                            The BFD session initialization mode for this BGP peer.
                            If set to ACTIVE, the Cloud Router will initiate the BFD session
                            for this BGP peer. If set to PASSIVE, the Cloud Router will wait
                            for the peer router to initiate the BFD session for this BGP peer.
                            If set to DISABLED, BFD is disabled for this BGP peer.
                            Possible values are: ACTIVE, DISABLED, PASSIVE.
                          type: string
                      type: object
                    type: array
                  customLearnedIpRanges:
                    items:
                      properties:
                        range:
                          description: |-
                            The IP range to advertise. The value must be a
                            CIDR-formatted string.
                          type: string
                      type: object
                    type: array
                  customLearnedRoutePriority:
                    type: number
                  enable:
                    description: |-
                      The status of the BGP peer connection. If set to false, any active session
                      with the peer is terminated and all associated routing information is removed.
                      If set to true, the peer connection can be established with routing information.
                      The default is true.
                    type: boolean
                  enableIpv4:
                    description: Enable IPv4 traffic over BGP Peer. It is enabled
                      by default if the peerIpAddress is version 4.
                    type: boolean
                  enableIpv6:
                    description: Enable IPv6 traffic over BGP Peer. If not specified,
                      it is disabled by default.
                    type: boolean
                  id:
                    description: an identifier for the resource with format projects/{{project}}/regions/{{region}}/routers/{{router}}/{{name}}
                    type: string
                  interface:
                    description: Name of the interface the BGP peer is associated
                      with.
                    type: string
                  ipAddress:
                    description: |-
                      IP address of the interface inside Google Cloud Platform.
                      Only IPv4 is supported.
                    type: string
                  ipv4NexthopAddress:
                    description: IPv4 address of the interface inside Google Cloud
                      Platform.
                    type: string
                  ipv6NexthopAddress:
                    description: |-
                      IPv6 address of the interface inside Google Cloud Platform.
                      The address must be in the range 2600:2d00:0:2::/64 or 2600:2d00:0:3::/64.
                      If you do not specify the next hop addresses, Google Cloud automatically
                      assigns unused addresses from the 2600:2d00:0:2::/64 or 2600:2d00:0:3::/64 range for you.
                    type: string
                  managementType:
                    description: The resource that configures and manages this BGP
                      peer.
                    type: string
                  md5AuthenticationKey:
                    items:
                      properties:
                        name:
                          description: |-
                            Name of this BGP peer. The name must be 1-63 characters long,
                            and comply with RFC1035. Specifically, the name must be 1-63 characters
                            long and match the regular expression [a-z]([-a-z0-9]*[a-z0-9])? which
                            means the first character must be a lowercase letter, and all
                            following characters must be a dash, lowercase letter, or digit,
                            except the last character, which cannot be a dash.
                          type: string
                      type: object
                    type: array
                  peerAsn:
                    description: |-
                      Peer BGP Autonomous System Number (ASN).
                      Each BGP interface may use a different value.
                    type: number
                  peerIpAddress:
                    description: |-
                      IP address of the BGP interface outside Google Cloud Platform.
                      Only IPv4 is supported. Required if ip_address is set.
                    type: string
                  peerIpv4NexthopAddress:
                    description: IPv4 address of the BGP interface outside Google
                      Cloud Platform.
                    type: string
                  peerIpv6NexthopAddress:
                    description: |-
                      IPv6 address of the BGP interface outside Google Cloud Platform.
                      The address must be in the range 2600:2d00:0:2::/64 or 2600:2d00:0:3::/64.
                      If you do not specify the next hop addresses, Google Cloud automatically
                      assigns unused addresses from the 2600:2d00:0:2::/64 or 2600:2d00:0:3::/64 range for you.
                    type: string
                  project:
                    description: |-
                      The ID of the project in which the resource belongs.
                      If it is not provided, the provider project is used.
                    type: string
                  region:
                    description: |-
                      Region where the router and BgpPeer reside.
                      If it is not provided, the provider region is used.
                    type: string
                  router:
                    description: The name of the Cloud Router in which this BgpPeer
                      will be configured.
                    type: string
                  routerApplianceInstance:
                    description: |-
                      The URI of the VM instance that is used as third-party router appliances
                      such as Next Gen Firewalls, Virtual Routers, or Router Appliances.
                      The VM instance must be located in zones contained in the same region as
                      this Cloud Router. The VM instance is the peer side of the BGP session.
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: |-
                  ObservedGeneration is the latest metadata.generation
                  which resulted in either a ready state, or stalled due to error
                  it can not recover from without human intervention.
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1beta2
    schema:
      openAPIV3Schema:
        description: RouterPeer is the Schema for the RouterPeers API. BGP information
          that must be configured into the routing stack to establish BGP peering.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: RouterPeerSpec defines the desired state of RouterPeer
            properties:
              deletionPolicy:
                default: Delete
                description: |-
                  DeletionPolicy specifies what will happen to the underlying external
                  when this managed resource is deleted - either "Delete" or "Orphan" the
                  external resource.
                  This field is planned to be deprecated in favor of the ManagementPolicies
                  field in a future release. Currently, both could be set independently and
                  non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  advertiseMode:
                    description: |-
                      User-specified flag to indicate which mode to use for advertisement.
                      Valid values of this enum field are: DEFAULT, CUSTOM
                      Default value is DEFAULT.
                      Possible values are: DEFAULT, CUSTOM.
                    type: string
                  advertisedGroups:
                    description: |-
                      User-specified list of prefix groups to advertise in custom
                      mode, which currently supports the following option:
                    items:
                      type: string
                    type: array
                  advertisedIpRanges:
                    description: |-
                      User-specified list of individual IP ranges to advertise in
                      custom mode. This field can only be populated if advertiseMode
                      is CUSTOM and is advertised to all peers of the router. These IP
                      ranges will be advertised in addition to any specified groups.
                      Leave this field blank to advertise no custom IP ranges.
                      Structure is documented below.
                    items:
                      properties:
                        description:
                          description: User-specified description for the IP range.
                          type: string
                        range:
                          description: |-
                            The IP range to advertise. The value must be a
                            CIDR-formatted string.
                          type: string
                      type: object
                    type: array
                  advertisedRoutePriority:
                    description: |-
                      The priority of routes advertised to this BGP peer.
                      Where there is more than one matching route of maximum
                      length, the routes with the lowest priority value win.
                    type: number
                  bfd:
                    description: |-
                      BFD configuration for the BGP peering.
                      Structure is documented below.
                    properties:
                      minReceiveInterval:
                        description: |-
                          The minimum interval, in milliseconds, between BFD control packets
                          received from the peer router. The actual value is negotiated
                          between the two routers and is equal to the greater of this value
                          and the transmit interval of the other router. If set, this value
                          must be between 1000 and 30000.
                        type: number
                      minTransmitInterval:
                        description: |-
                          The minimum interval, in milliseconds, between BFD control packets
                          transmitted to the peer router. The actual value is negotiated
                          between the two routers and is equal to the greater of this value
                          and the corresponding receive interval of the other router. If set,
                          this value must be between 1000 and 30000.
                        type: number
                      multiplier:
                        description: |-
                          The number of consecutive BFD packets that must be missed before
                          BFD declares that a peer is unavailable. If set, the value must
                          be a value between 5 and 16.
                        type: number
                      sessionInitializationMode:
                        description: |-
                          The BFD session initialization mode for this BGP peer.
                          If set to ACTIVE, the Cloud Router will initiate the BFD session
                          for this BGP peer. If set to PASSIVE, the Cloud Router will wait
                          for the peer router to initiate the BFD session for this BGP peer.
                          If set to DISABLED, BFD is disabled for this BGP peer.
                          Possible values are: ACTIVE, DISABLED, PASSIVE.
                        type: string
                    type: object
                  customLearnedIpRanges:
                    description: |-
                      The custom learned route IP address range. Must be a valid CIDR-formatted prefix.
                      If an IP address is provided without a subnet mask, it is interpreted as, for IPv4,
                      a /32 singular IP address range, and, for IPv6, /128.
                      Structure is documented below.
                    items:
                      properties:
                        range:
                          description: |-
                            The IP range to learn. The value must be a
                            CIDR-formatted string.
                          type: string
                      type: object
                    type: array
                  customLearnedRoutePriority:
                    description: |-
                      The user-defined custom learned route priority for a BGP session.
                      This value is applied to all custom learned route ranges for the session.
                      You can choose a value from 0 to 65335. If you don't provide a value,
                      Google Cloud assigns a priority of 100 to the ranges.
                    type: number
                  enable:
                    description: |-
                      The status of the BGP peer connection. If set to false, any active session
                      with the peer is terminated and all associated routing information is removed.
                      If set to true, the peer connection can be established with routing information.
                      The default is true.
                    type: boolean
                  enableIpv4:
                    description: Enable IPv4 traffic over BGP Peer. It is enabled
                      by default if the peerIpAddress is version 4.
                    type: boolean
                  enableIpv6:
                    description: Enable IPv6 traffic over BGP Peer. If not specified,
                      it is disabled by default.
                    type: boolean
                  exportPolicies:
                    description: |-
                      routers.list of export policies applied to this peer, in the order they must be evaluated.
                      The name must correspond to an existing policy that has ROUTE_POLICY_TYPE_EXPORT type.
                    items:
                      type: string
                    type: array
                  importPolicies:
                    description: |-
                      routers.list of import policies applied to this peer, in the order they must be evaluated.
                      The name must correspond to an existing policy that has ROUTE_POLICY_TYPE_IMPORT type.
                    items:
                      type: string
                    type: array
                  interface:
                    description: Name of the interface the BGP peer is associated
                      with.
                    type: string
                  interfaceRef:
                    description: Reference to a RouterInterface in compute to populate
                      interface.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  interfaceSelector:
                    description: Selector for a RouterInterface in compute to populate
                      interface.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  ipAddress:
                    description: |-
                      IP address of the interface inside Google Cloud Platform.
                      Only IPv4 is supported.
                    type: string
                  ipv4NexthopAddress:
                    description: IPv4 address of the interface inside Google Cloud
                      Platform.
                    type: string
                  ipv6NexthopAddress:
                    description: |-
                      IPv6 address of the interface inside Google Cloud Platform.
                      The address must be in the range 2600:2d00:0:2::/64 or 2600:2d00:0:3::/64.
                      If you do not specify the next hop addresses, Google Cloud automatically
                      assigns unused addresses from the 2600:2d00:0:2::/64 or 2600:2d00:0:3::/64 range for you.
                    type: string
                  md5AuthenticationKey:
                    description: |-
                      Configuration for MD5 authentication on the BGP session.
                      Structure is documented below.
                    properties:
                      keySecretRef:
                        description: The MD5 authentication key for this BGP peer.
                          Maximum length is 80 characters. Can only contain printable
                          ASCII characters
                        properties:
                          key:
                            description: The key to select.
                            type: string
                          name:
                            description: Name of the secret.
                            type: string
                          namespace:
                            description: Namespace of the secret.
                            type: string
                        required:
                        - key
                        - name
                        - namespace
                        type: object
                      name:
                        description: Name used to identify the key. Must be unique
                          within a router. Must comply with RFC1035.
                        type: string
                    type: object
                  peerAsn:
                    description: |-
                      Peer BGP Autonomous System Number (ASN).
                      Each BGP interface may use a different value.
                    type: number
                  peerIpAddress:
                    description: |-
                      IP address of the BGP interface outside Google Cloud Platform.
                      Only IPv4 is supported. Required if ip_address is set.
                    type: string
                  peerIpAddressRef:
                    description: Reference to a Address in compute to populate peerIpAddress.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  peerIpAddressSelector:
                    description: Selector for a Address in compute to populate peerIpAddress.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  peerIpv4NexthopAddress:
                    description: IPv4 address of the BGP interface outside Google
                      Cloud Platform.
                    type: string
                  peerIpv6NexthopAddress:
                    description: |-
                      IPv6 address of the BGP interface outside Google Cloud Platform.
                      The address must be in the range 2600:2d00:0:2::/64 or 2600:2d00:0:3::/64.
                      If you do not specify the next hop addresses, Google Cloud automatically
                      assigns unused addresses from the 2600:2d00:0:2::/64 or 2600:2d00:0:3::/64 range for you.
                    type: string
                  project:
                    description: |-
                      The ID of the project in which the resource belongs.
                      If it is not provided, the provider project is used.
                    type: string
                  region:
                    description: |-
                      Region where the router and BgpPeer reside.
                      If it is not provided, the provider region is used.
                    type: string
                  regionRef:
                    description: Reference to a Router in compute to populate region.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  regionSelector:
                    description: Selector for a Router in compute to populate region.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  router:
                    description: The name of the Cloud Router in which this BgpPeer
                      will be configured.
                    type: string
                  routerApplianceInstance:
                    description: |-
                      The URI of the VM instance that is used as third-party router appliances
                      such as Next Gen Firewalls, Virtual Routers, or Router Appliances.
                      The VM instance must be located in zones contained in the same region as
                      this Cloud Router. The VM instance is the peer side of the BGP session.
                    type: string
                  routerApplianceInstanceRef:
                    description: Reference to a Instance in compute to populate routerApplianceInstance.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  routerApplianceInstanceSelector:
                    description: Selector for a Instance in compute to populate routerApplianceInstance.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  routerRef:
                    description: Reference to a Router in compute to populate router.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  routerSelector:
                    description: Selector for a Router in compute to populate router.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  zeroAdvertisedRoutePriority:
                    description: |-
                      The user-defined zero-advertised-route-priority for a advertised-route-priority in BGP session.
                      This value has to be set true to force the advertised_route_priority to be 0.
                    type: boolean
                  zeroCustomLearnedRoutePriority:
                    description: |-
                      The user-defined zero-custom-learned-route-priority for a custom-learned-route-priority in BGP session.
                      This value has to be set true to force the custom_learned_route_priority to be 0.
                    type: boolean
                type: object
              initProvider:
                description: |-
                  THIS IS A BETA FIELD. It will be honored
                  unless the Management Policies feature flag is disabled.
                  InitProvider holds the same fields as ForProvider, with the exception
                  of Identifier and other resource reference fields. The fields that are
                  in InitProvider are merged into ForProvider when the resource is created.
                  The same fields are also added to the terraform ignore_changes hook, to
                  avoid updating them after creation. This is useful for fields that are
                  required on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them, like an
                  autoscaler.
                properties:
                  advertiseMode:
                    description: |-
                      User-specified flag to indicate which mode to use for advertisement.
                      Valid values of this enum field are: DEFAULT, CUSTOM
                      Default value is DEFAULT.
                      Possible values are: DEFAULT, CUSTOM.
                    type: string
                  advertisedGroups:
                    description: |-
                      User-specified list of prefix groups to advertise in custom
                      mode, which currently supports the following option:
                    items:
                      type: string
                    type: array
                  advertisedIpRanges:
                    description: |-
                      User-specified list of individual IP ranges to advertise in
                      custom mode. This field can only be populated if advertiseMode
                      is CUSTOM and is advertised to all peers of the router. These IP
                      ranges will be advertised in addition to any specified groups.
                      Leave this field blank to advertise no custom IP ranges.
                      Structure is documented below.
                    items:
                      properties:
                        description:
                          description: User-specified description for the IP range.
                          type: string
                        range:
                          description: |-
                            The IP range to advertise. The value must be a
                            CIDR-formatted string.
                          type: string
                      type: object
                    type: array
                  advertisedRoutePriority:
                    description: |-
                      The priority of routes advertised to this BGP peer.
                      Where there is more than one matching route of maximum
                      length, the routes with the lowest priority value win.
                    type: number
                  bfd:
                    description: |-
                      BFD configuration for the BGP peering.
                      Structure is documented below.
                    properties:
                      minReceiveInterval:
                        description: |-
                          The minimum interval, in milliseconds, between BFD control packets
                          received from the peer router. The actual value is negotiated
                          between the two routers and is equal to the greater of this value
                          and the transmit interval of the other router. If set, this value
                          must be between 1000 and 30000.
                        type: number
                      minTransmitInterval:
                        description: |-
                          The minimum interval, in milliseconds, between BFD control packets
                          transmitted to the peer router. The actual value is negotiated
                          between the two routers and is equal to the greater of this value
                          and the corresponding receive interval of the other router. If set,
                          this value must be between 1000 and 30000.
                        type: number
                      multiplier:
                        description: |-
                          The number of consecutive BFD packets that must be missed before
                          BFD declares that a peer is unavailable. If set, the value must
                          be a value between 5 and 16.
                        type: number
                      sessionInitializationMode:
                        description: |-
                          The BFD session initialization mode for this BGP peer.
                          If set to ACTIVE, the Cloud Router will initiate the BFD session
                          for this BGP peer. If set to PASSIVE, the Cloud Router will wait
                          for the peer router to initiate the BFD session for this BGP peer.
                          If set to DISABLED, BFD is disabled for this BGP peer.
                          Possible values are: ACTIVE, DISABLED, PASSIVE.
                        type: string
                    type: object
                  customLearnedIpRanges:
                    description: |-
                      The custom learned route IP address range. Must be a valid CIDR-formatted prefix.
                      If an IP address is provided without a subnet mask, it is interpreted as, for IPv4,
                      a /32 singular IP address range, and, for IPv6, /128.
                      Structure is documented below.
                    items:
                      properties:
                        range:
                          description: |-
                            The IP range to learn. The value must be a
                            CIDR-formatted string.
                          type: string
                      type: object
                    type: array
                  customLearnedRoutePriority:
                    description: |-
                      The user-defined custom learned route priority for a BGP session.
                      This value is applied to all custom learned route ranges for the session.
                      You can choose a value from 0 to 65335. If you don't provide a value,
                      Google Cloud assigns a priority of 100 to the ranges.
                    type: number
                  enable:
                    description: |-
                      The status of the BGP peer connection. If set to false, any active session
                      with the peer is terminated and all associated routing information is removed.
                      If set to true, the peer connection can be established with routing information.
                      The default is true.
                    type: boolean
                  enableIpv4:
                    description: Enable IPv4 traffic over BGP Peer. It is enabled
                      by default if the peerIpAddress is version 4.
                    type: boolean
                  enableIpv6:
                    description: Enable IPv6 traffic over BGP Peer. If not specified,
                      it is disabled by default.
                    type: boolean
                  exportPolicies:
                    description: |-
                      routers.list of export policies applied to this peer, in the order they must be evaluated.
                      The name must correspond to an existing policy that has ROUTE_POLICY_TYPE_EXPORT type.
                    items:
                      type: string
                    type: array
                  importPolicies:
                    description: |-
                      routers.list of import policies applied to this peer, in the order they must be evaluated.
                      The name must correspond to an existing policy that has ROUTE_POLICY_TYPE_IMPORT type.
                    items:
                      type: string
                    type: array
                  interface:
                    description: Name of the interface the BGP peer is associated
                      with.
                    type: string
                  interfaceRef:
                    description: Reference to a RouterInterface in compute to populate
                      interface.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  interfaceSelector:
                    description: Selector for a RouterInterface in compute to populate
                      interface.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  ipAddress:
                    description: |-
                      IP address of the interface inside Google Cloud Platform.
                      Only IPv4 is supported.
                    type: string
                  ipv4NexthopAddress:
                    description: IPv4 address of the interface inside Google Cloud
                      Platform.
                    type: string
                  ipv6NexthopAddress:
                    description: |-
                      IPv6 address of the interface inside Google Cloud Platform.
                      The address must be in the range 2600:2d00:0:2::/64 or 2600:2d00:0:3::/64.
                      If you do not specify the next hop addresses, Google Cloud automatically
                      assigns unused addresses from the 2600:2d00:0:2::/64 or 2600:2d00:0:3::/64 range for you.
                    type: string
                  md5AuthenticationKey:
                    description: |-
                      Configuration for MD5 authentication on the BGP session.
                      Structure is documented below.
                    properties:
                      keySecretRef:
                        description: The MD5 authentication key for this BGP peer.
                          Maximum length is 80 characters. Can only contain printable
                          ASCII characters
                        properties:
                          key:
                            description: The key to select.
                            type: string
                          name:
                            description: Name of the secret.
                            type: string
                          namespace:
                            description: Namespace of the secret.
                            type: string
                        required:
                        - key
                        - name
                        - namespace
                        type: object
                      name:
                        description: Name used to identify the key. Must be unique
                          within a router. Must comply with RFC1035.
                        type: string
                    required:
                    - keySecretRef
                    type: object
                  peerAsn:
                    description: |-
                      Peer BGP Autonomous System Number (ASN).
                      Each BGP interface may use a different value.
                    type: number
                  peerIpAddress:
                    description: |-
                      IP address of the BGP interface outside Google Cloud Platform.
                      Only IPv4 is supported. Required if ip_address is set.
                    type: string
                  peerIpAddressRef:
                    description: Reference to a Address in compute to populate peerIpAddress.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  peerIpAddressSelector:
                    description: Selector for a Address in compute to populate peerIpAddress.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  peerIpv4NexthopAddress:
                    description: IPv4 address of the BGP interface outside Google
                      Cloud Platform.
                    type: string
                  peerIpv6NexthopAddress:
                    description: |-
                      IPv6 address of the BGP interface outside Google Cloud Platform.
                      The address must be in the range 2600:2d00:0:2::/64 or 2600:2d00:0:3::/64.
                      If you do not specify the next hop addresses, Google Cloud automatically
                      assigns unused addresses from the 2600:2d00:0:2::/64 or 2600:2d00:0:3::/64 range for you.
                    type: string
                  project:
                    description: |-
                      The ID of the project in which the resource belongs.
                      If it is not provided, the provider project is used.
                    type: string
                  region:
                    description: |-
                      Region where the router and BgpPeer reside.
                      If it is not provided, the provider region is used.
                    type: string
                  regionRef:
                    description: Reference to a Router in compute to populate region.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  regionSelector:
                    description: Selector for a Router in compute to populate region.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  routerApplianceInstance:
                    description: |-
                      The URI of the VM instance that is used as third-party router appliances
                      such as Next Gen Firewalls, Virtual Routers, or Router Appliances.
                      The VM instance must be located in zones contained in the same region as
                      this Cloud Router. The VM instance is the peer side of the BGP session.
                    type: string
                  routerApplianceInstanceRef:
                    description: Reference to a Instance in compute to populate routerApplianceInstance.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  routerApplianceInstanceSelector:
                    description: Selector for a Instance in compute to populate routerApplianceInstance.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  zeroAdvertisedRoutePriority:
                    description: |-
                      The user-defined zero-advertised-route-priority for a advertised-route-priority in BGP session.
                      This value has to be set true to force the advertised_route_priority to be 0.
                    type: boolean
                  zeroCustomLearnedRoutePriority:
                    description: |-
                      The user-defined zero-custom-learned-route-priority for a custom-learned-route-priority in BGP session.
                      This value has to be set true to force the custom_learned_route_priority to be 0.
                    type: boolean
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  This field is planned to replace the DeletionPolicy field in a future
                  release. Currently, both could be set independently and non-default
                  values would be honored if the feature flag is enabled. If both are
                  custom, the DeletionPolicy field will be ignored.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: |-
                  PublishConnectionDetailsTo specifies the connection secret config which
                  contains a name, metadata and a reference to secret store config to
                  which any connection details for this managed resource should be written.
                  Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: |-
                      SecretStoreConfigRef specifies which secret store config should be used
                      for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations are the annotations to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.annotations".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Labels are the labels/tags to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      type:
                        description: |-
                          Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                  This field is planned to be replaced in a future release in favor of
                  PublishConnectionDetailsTo. Currently, both could be set independently
                  and connection details would be published to both without affecting
                  each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
            x-kubernetes-validations:
            - message: spec.forProvider.peerAsn is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.peerAsn)
                || (has(self.initProvider) && has(self.initProvider.peerAsn))'
          status:
            description: RouterPeerStatus defines the observed state of RouterPeer.
            properties:
              atProvider:
                properties:
                  advertiseMode:
                    description: |-
                      User-specified flag to indicate which mode to use for advertisement.
                      Valid values of this enum field are: DEFAULT, CUSTOM
                      Default value is DEFAULT.
                      Possible values are: DEFAULT, CUSTOM.
                    type: string
                  advertisedGroups:
                    description: |-
                      User-specified list of prefix groups to advertise in custom
                      mode, which currently supports the following option:
                    items:
                      type: string
                    type: array
                  advertisedIpRanges:
                    description: |-
                      User-specified list of individual IP ranges to advertise in
                      custom mode. This field can only be populated if advertiseMode
                      is CUSTOM and is advertised to all peers of the router. These IP
                      ranges will be advertised in addition to any specified groups.
                      Leave this field blank to advertise no custom IP ranges.
                      Structure is documented below.
                    items:
                      properties:
                        description:
                          description: User-specified description for the IP range.
                          type: string
                        range:
                          description: |-
                            The IP range to advertise. The value must be a
                            CIDR-formatted string.
                          type: string
                      type: object
                    type: array
                  advertisedRoutePriority:
                    description: |-
                      The priority of routes advertised to this BGP peer.
                      Where there is more than one matching route of maximum
                      length, the routes with the lowest priority value win.
                    type: number
                  bfd:
                    description: |-
                      BFD configuration for the BGP peering.
                      Structure is documented below.
                    properties:
                      minReceiveInterval:
                        description: |-
                          The minimum interval, in milliseconds, between BFD control packets
                          received from the peer router. The actual value is negotiated
                          between the two routers and is equal to the greater of this value
                          and the transmit interval of the other router. If set, this value
                          must be between 1000 and 30000.
                        type: number
                      minTransmitInterval:
                        description: |-
                          The minimum interval, in milliseconds, between BFD control packets
                          transmitted to the peer router. The actual value is negotiated
                          between the two routers and is equal to the greater of this value
                          and the corresponding receive interval of the other router. If set,
                          this value must be between 1000 and 30000.
                        type: number
                      multiplier:
                        description: |-
                          The number of consecutive BFD packets that must be missed before
                          BFD declares that a peer is unavailable. If set, the value must
                          be a value between 5 and 16.
                        type: number
                      sessionInitializationMode:
                        description: |-
                          The BFD session initialization mode for this BGP peer.
                          If set to ACTIVE, the Cloud Router will initiate the BFD session
                          for this BGP peer. If set to PASSIVE, the Cloud Router will wait
                          for the peer router to initiate the BFD session for this BGP peer.
                          If set to DISABLED, BFD is disabled for this BGP peer.
                          Possible values are: ACTIVE, DISABLED, PASSIVE.
                        type: string
                    type: object
                  customLearnedIpRanges:
                    description: |-
                      The custom learned route IP address range. Must be a valid CIDR-formatted prefix.
                      If an IP address is provided without a subnet mask, it is interpreted as, for IPv4,
                      a /32 singular IP address range, and, for IPv6, /128.
                      Structure is documented below.
                    items:
                      properties:
                        range:
                          description: |-
                            The IP range to learn. The value must be a
                            CIDR-formatted string.
                          type: string
                      type: object
                    type: array
                  customLearnedRoutePriority:
                    description: |-
                      The user-defined custom learned route priority for a BGP session.
                      This value is applied to all custom learned route ranges for the session.
                      You can choose a value from 0 to 65335. If you don't provide a value,
                      Google Cloud assigns a priority of 100 to the ranges.
                    type: number
                  enable:
                    description: |-
                      The status of the BGP peer connection. If set to false, any active session
                      with the peer is terminated and all associated routing information is removed.
                      If set to true, the peer connection can be established with routing information.
                      The default is true.
                    type: boolean
                  enableIpv4:
                    description: Enable IPv4 traffic over BGP Peer. It is enabled
                      by default if the peerIpAddress is version 4.
                    type: boolean
                  enableIpv6:
                    description: Enable IPv6 traffic over BGP Peer. If not specified,
                      it is disabled by default.
                    type: boolean
                  exportPolicies:
                    description: |-
                      routers.list of export policies applied to this peer, in the order they must be evaluated.
                      The name must correspond to an existing policy that has ROUTE_POLICY_TYPE_EXPORT type.
                    items:
                      type: string
                    type: array
                  id:
                    description: an identifier for the resource with format projects/{{project}}/regions/{{region}}/routers/{{router}}/{{name}}
                    type: string
                  importPolicies:
                    description: |-
                      routers.list of import policies applied to this peer, in the order they must be evaluated.
                      The name must correspond to an existing policy that has ROUTE_POLICY_TYPE_IMPORT type.
                    items:
                      type: string
                    type: array
                  interface:
                    description: Name of the interface the BGP peer is associated
                      with.
                    type: string
                  ipAddress:
                    description: |-
                      IP address of the interface inside Google Cloud Platform.
                      Only IPv4 is supported.
                    type: string
                  ipv4NexthopAddress:
                    description: IPv4 address of the interface inside Google Cloud
                      Platform.
                    type: string
                  ipv6NexthopAddress:
                    description: |-
                      IPv6 address of the interface inside Google Cloud Platform.
                      The address must be in the range 2600:2d00:0:2::/64 or 2600:2d00:0:3::/64.
                      If you do not specify the next hop addresses, Google Cloud automatically
                      assigns unused addresses from the 2600:2d00:0:2::/64 or 2600:2d00:0:3::/64 range for you.
                    type: string
                  isAdvertisedRoutePrioritySet:
                    type: boolean
                  isCustomLearnedPrioritySet:
                    type: boolean
                  managementType:
                    description: The resource that configures and manages this BGP
                      peer.
                    type: string
                  md5AuthenticationKey:
                    description: |-
                      Configuration for MD5 authentication on the BGP session.
                      Structure is documented below.
                    properties:
                      name:
                        description: Name used to identify the key. Must be unique
                          within a router. Must comply with RFC1035.
                        type: string
                    type: object
                  peerAsn:
                    description: |-
                      Peer BGP Autonomous System Number (ASN).
                      Each BGP interface may use a different value.
                    type: number
                  peerIpAddress:
                    description: |-
                      IP address of the BGP interface outside Google Cloud Platform.
                      Only IPv4 is supported. Required if ip_address is set.
                    type: string
                  peerIpv4NexthopAddress:
                    description: IPv4 address of the BGP interface outside Google
                      Cloud Platform.
                    type: string
                  peerIpv6NexthopAddress:
                    description: |-
                      IPv6 address of the BGP interface outside Google Cloud Platform.
                      The address must be in the range 2600:2d00:0:2::/64 or 2600:2d00:0:3::/64.
                      If you do not specify the next hop addresses, Google Cloud automatically
                      assigns unused addresses from the 2600:2d00:0:2::/64 or 2600:2d00:0:3::/64 range for you.
                    type: string
                  project:
                    description: |-
                      The ID of the project in which the resource belongs.
                      If it is not provided, the provider project is used.
                    type: string
                  region:
                    description: |-
                      Region where the router and BgpPeer reside.
                      If it is not provided, the provider region is used.
                    type: string
                  router:
                    description: The name of the Cloud Router in which this BgpPeer
                      will be configured.
                    type: string
                  routerApplianceInstance:
                    description: |-
                      The URI of the VM instance that is used as third-party router appliances
                      such as Next Gen Firewalls, Virtual Routers, or Router Appliances.
                      The VM instance must be located in zones contained in the same region as
                      this Cloud Router. The VM instance is the peer side of the BGP session.
                    type: string
                  zeroAdvertisedRoutePriority:
                    description: |-
                      The user-defined zero-advertised-route-priority for a advertised-route-priority in BGP session.
                      This value has to be set true to force the advertised_route_priority to be 0.
                    type: boolean
                  zeroCustomLearnedRoutePriority:
                    description: |-
                      The user-defined zero-custom-learned-route-priority for a custom-learned-route-priority in BGP session.
                      This value has to be set true to force the custom_learned_route_priority to be 0.
                    type: boolean
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: |-
                  ObservedGeneration is the latest metadata.generation
                  which resulted in either a ready state, or stalled due to error
                  it can not recover from without human intervention.
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: false
    subresources:
      status: {}
