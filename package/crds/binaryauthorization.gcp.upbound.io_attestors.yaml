---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.11.1
  creationTimestamp: null
  name: attestors.binaryauthorization.gcp.upbound.io
spec:
  group: binaryauthorization.gcp.upbound.io
  names:
    categories:
    - crossplane
    - managed
    - gcp
    kind: Attestor
    listKind: AttestorList
    plural: attestors
    singular: attestor
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: Attestor is the Schema for the Attestors API. An attestor that
          attests to container image artifacts.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: AttestorSpec defines the desired state of Attestor
            properties:
              deletionPolicy:
                default: Delete
                description: DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource.
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  attestationAuthorityNote:
                    description: A Container Analysis ATTESTATION_AUTHORITY Note,
                      created by the user. Structure is documented below.
                    items:
                      properties:
                        noteReference:
                          description: The resource name of a ATTESTATION_AUTHORITY
                            Note, created by the user. If the Note is in a different
                            project from the Attestor, it should be specified in the
                            format projects/*/notes/* (or the legacy providers/*/notes/*).
                            This field may not be updated. An attestation by this
                            attestor is stored as a Container Analysis ATTESTATION_AUTHORITY
                            Occurrence that names a container image and that links
                            to this Note.
                          type: string
                        noteReferenceRef:
                          description: Reference to a Note in containeranalysis to
                            populate noteReference.
                          properties:
                            name:
                              description: Name of the referenced object.
                              type: string
                            policy:
                              description: Policies for referencing.
                              properties:
                                resolution:
                                  default: Required
                                  description: Resolution specifies whether resolution
                                    of this reference is required. The default is
                                    'Required', which means the reconcile will fail
                                    if the reference cannot be resolved. 'Optional'
                                    means this reference will be a no-op if it cannot
                                    be resolved.
                                  enum:
                                  - Required
                                  - Optional
                                  type: string
                                resolve:
                                  description: Resolve specifies when this reference
                                    should be resolved. The default is 'IfNotPresent',
                                    which will attempt to resolve the reference only
                                    when the corresponding field is not present. Use
                                    'Always' to resolve the reference on every reconcile.
                                  enum:
                                  - Always
                                  - IfNotPresent
                                  type: string
                              type: object
                          required:
                          - name
                          type: object
                        noteReferenceSelector:
                          description: Selector for a Note in containeranalysis to
                            populate noteReference.
                          properties:
                            matchControllerRef:
                              description: MatchControllerRef ensures an object with
                                the same controller reference as the selecting object
                                is selected.
                              type: boolean
                            matchLabels:
                              additionalProperties:
                                type: string
                              description: MatchLabels ensures an object with matching
                                labels is selected.
                              type: object
                            policy:
                              description: Policies for selection.
                              properties:
                                resolution:
                                  default: Required
                                  description: Resolution specifies whether resolution
                                    of this reference is required. The default is
                                    'Required', which means the reconcile will fail
                                    if the reference cannot be resolved. 'Optional'
                                    means this reference will be a no-op if it cannot
                                    be resolved.
                                  enum:
                                  - Required
                                  - Optional
                                  type: string
                                resolve:
                                  description: Resolve specifies when this reference
                                    should be resolved. The default is 'IfNotPresent',
                                    which will attempt to resolve the reference only
                                    when the corresponding field is not present. Use
                                    'Always' to resolve the reference on every reconcile.
                                  enum:
                                  - Always
                                  - IfNotPresent
                                  type: string
                              type: object
                          type: object
                        publicKeys:
                          description: Public keys that verify attestations signed
                            by this attestor. This field may be updated. If this field
                            is non-empty, one of the specified public keys must verify
                            that an attestation was signed by this attestor for the
                            image specified in the admission request. If this field
                            is empty, this attestor always returns that no valid attestations
                            exist. Structure is documented below.
                          items:
                            properties:
                              asciiArmoredPgpPublicKey:
                                description: ASCII-armored representation of a PGP
                                  public key, as the entire output by the command
                                  gpg --export --armor foo@example.com (either LF
                                  or CRLF line endings). When using this field, id
                                  should be left blank. The BinAuthz API handlers
                                  will calculate the ID and fill it in automatically.
                                  BinAuthz computes this ID as the OpenPGP RFC4880
                                  V4 fingerprint, represented as upper-case hex. If
                                  id is provided by the caller, it will be overwritten
                                  by the API-calculated ID.
                                type: string
                              comment:
                                description: A descriptive comment. This field may
                                  be updated.
                                type: string
                              id:
                                description: The ID of this public key. Signatures
                                  verified by BinAuthz must include the ID of the
                                  public key that can be used to verify them, and
                                  that ID must match the contents of this field exactly.
                                  Additional restrictions on this field can be imposed
                                  based on which public key type is encapsulated.
                                  See the documentation on publicKey cases below for
                                  details.
                                type: string
                              pkixPublicKey:
                                description: 'A raw PKIX SubjectPublicKeyInfo format
                                  public key. NOTE: id may be explicitly provided
                                  by the caller when using this type of public key,
                                  but it MUST be a valid RFC3986 URI. If id is left
                                  blank, a default one will be computed based on the
                                  digest of the DER encoding of the public key. Structure
                                  is documented below.'
                                items:
                                  properties:
                                    publicKeyPem:
                                      description: A PEM-encoded public key, as described
                                        in https://tools.ietf.org/html/rfc7468#section-13
                                      type: string
                                    signatureAlgorithm:
                                      description: The signature algorithm used to
                                        verify a message against a signature using
                                        this key. These signature algorithm must match
                                        the structure and any object identifiers encoded
                                        in publicKeyPem (i.e. this algorithm must
                                        match that of the public key).
                                      type: string
                                  type: object
                                type: array
                            type: object
                          type: array
                      type: object
                    type: array
                  description:
                    description: A descriptive comment. This field may be updated.
                      The field may be displayed in chooser dialogs.
                    type: string
                  project:
                    description: The ID of the project in which the resource belongs.
                      If it is not provided, the provider project is used.
                    type: string
                required:
                - attestationAuthorityNote
                type: object
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: AttestorStatus defines the observed state of Attestor.
            properties:
              atProvider:
                properties:
                  attestationAuthorityNote:
                    description: A Container Analysis ATTESTATION_AUTHORITY Note,
                      created by the user. Structure is documented below.
                    items:
                      properties:
                        delegationServiceAccountEmail:
                          description: This field will contain the service account
                            email address that this Attestor will use as the principal
                            when querying Container Analysis. Attestor administrators
                            must grant this service account the IAM role needed to
                            read attestations from the noteReference in Container
                            Analysis (containeranalysis.notes.occurrences.viewer).
                            This email address is fixed for the lifetime of the Attestor,
                            but callers should not make any other assumptions about
                            the service account email; future versions may use an
                            email based on a different naming pattern.
                          type: string
                      type: object
                    type: array
                  id:
                    description: an identifier for the resource with format projects/{{project}}/attestors/{{name}}
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
