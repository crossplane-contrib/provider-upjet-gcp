---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: metastoreservices.dataproc.gcp.upbound.io
spec:
  group: dataproc.gcp.upbound.io
  names:
    categories:
    - crossplane
    - managed
    - gcp
    kind: MetastoreService
    listKind: MetastoreServiceList
    plural: metastoreservices
    singular: metastoreservice
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: MetastoreService is the Schema for the MetastoreServices API.
          A managed metastore service that serves metadata queries.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: MetastoreServiceSpec defines the desired state of MetastoreService
            properties:
              deletionPolicy:
                default: Delete
                description: |-
                  DeletionPolicy specifies what will happen to the underlying external
                  when this managed resource is deleted - either "Delete" or "Orphan" the
                  external resource.
                  This field is planned to be deprecated in favor of the ManagementPolicies
                  field in a future release. Currently, both could be set independently and
                  non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  databaseType:
                    description: |-
                      The database type that the Metastore service stores its data.
                      Default value is MYSQL.
                      Possible values are: MYSQL, SPANNER.
                    type: string
                  deletionProtection:
                    description: Indicates if the dataproc metastore should be protected
                      against accidental deletions.
                    type: boolean
                  encryptionConfig:
                    description: |-
                      Information used to configure the Dataproc Metastore service to encrypt
                      customer data at rest.
                      Structure is documented below.
                    items:
                      properties:
                        kmsKey:
                          description: |-
                            The fully qualified customer provided Cloud KMS key name to use for customer data encryption.
                            Use the following format: projects/([^/]+)/locations/([^/]+)/keyRings/([^/]+)/cryptoKeys/([^/]+)
                          type: string
                        kmsKeyRef:
                          description: Reference to a CryptoKey in kms to populate
                            kmsKey.
                          properties:
                            name:
                              description: Name of the referenced object.
                              type: string
                            policy:
                              description: Policies for referencing.
                              properties:
                                resolution:
                                  default: Required
                                  description: |-
                                    Resolution specifies whether resolution of this reference is required.
                                    The default is 'Required', which means the reconcile will fail if the
                                    reference cannot be resolved. 'Optional' means this reference will be
                                    a no-op if it cannot be resolved.
                                  enum:
                                  - Required
                                  - Optional
                                  type: string
                                resolve:
                                  description: |-
                                    Resolve specifies when this reference should be resolved. The default
                                    is 'IfNotPresent', which will attempt to resolve the reference only when
                                    the corresponding field is not present. Use 'Always' to resolve the
                                    reference on every reconcile.
                                  enum:
                                  - Always
                                  - IfNotPresent
                                  type: string
                              type: object
                          required:
                          - name
                          type: object
                        kmsKeySelector:
                          description: Selector for a CryptoKey in kms to populate
                            kmsKey.
                          properties:
                            matchControllerRef:
                              description: |-
                                MatchControllerRef ensures an object with the same controller reference
                                as the selecting object is selected.
                              type: boolean
                            matchLabels:
                              additionalProperties:
                                type: string
                              description: MatchLabels ensures an object with matching
                                labels is selected.
                              type: object
                            policy:
                              description: Policies for selection.
                              properties:
                                resolution:
                                  default: Required
                                  description: |-
                                    Resolution specifies whether resolution of this reference is required.
                                    The default is 'Required', which means the reconcile will fail if the
                                    reference cannot be resolved. 'Optional' means this reference will be
                                    a no-op if it cannot be resolved.
                                  enum:
                                  - Required
                                  - Optional
                                  type: string
                                resolve:
                                  description: |-
                                    Resolve specifies when this reference should be resolved. The default
                                    is 'IfNotPresent', which will attempt to resolve the reference only when
                                    the corresponding field is not present. Use 'Always' to resolve the
                                    reference on every reconcile.
                                  enum:
                                  - Always
                                  - IfNotPresent
                                  type: string
                              type: object
                          type: object
                      type: object
                    type: array
                  hiveMetastoreConfig:
                    description: |-
                      Configuration information specific to running Hive metastore software as the metastore service.
                      Structure is documented below.
                    items:
                      properties:
                        auxiliaryVersions:
                          description: |-
                            A mapping of Hive metastore version to the auxiliary version configuration.
                            When specified, a secondary Hive metastore service is created along with the primary service.
                            All auxiliary versions must be less than the service's primary version.
                            The key is the auxiliary service name and it must match the regular expression a-z?.
                            This means that the first character must be a lowercase letter, and all the following characters must be hyphens, lowercase letters, or digits, except the last character, which cannot be a hyphen.
                            Structure is documented below.
                          items:
                            properties:
                              configOverrides:
                                additionalProperties:
                                  type: string
                                description: |-
                                  A mapping of Hive metastore configuration key-value pairs to apply to the Hive metastore (configured in hive-site.xml).
                                  The mappings override system defaults (some keys cannot be overridden)
                                type: object
                                x-kubernetes-map-type: granular
                              key:
                                description: The identifier for this object. Format
                                  specified above.
                                type: string
                              version:
                                description: The Hive metastore schema version.
                                type: string
                            type: object
                          type: array
                        configOverrides:
                          additionalProperties:
                            type: string
                          description: |-
                            A mapping of Hive metastore configuration key-value pairs to apply to the Hive metastore (configured in hive-site.xml).
                            The mappings override system defaults (some keys cannot be overridden)
                          type: object
                          x-kubernetes-map-type: granular
                        endpointProtocol:
                          description: |-
                            The protocol to use for the metastore service endpoint. If unspecified, defaults to THRIFT.
                            Default value is THRIFT.
                            Possible values are: THRIFT, GRPC.
                          type: string
                        kerberosConfig:
                          description: |-
                            Information used to configure the Hive metastore service as a service principal in a Kerberos realm.
                            Structure is documented below.
                          items:
                            properties:
                              keytab:
                                description: |-
                                  A Kerberos keytab file that can be used to authenticate a service principal with a Kerberos Key Distribution Center (KDC).
                                  Structure is documented below.
                                items:
                                  properties:
                                    cloudSecret:
                                      description: |-
                                        The relative resource name of a Secret Manager secret version, in the following form:
                                        "projects/{projectNumber}/secrets/{secret_id}/versions/{version_id}".
                                      type: string
                                  type: object
                                type: array
                              krb5ConfigGcsUri:
                                description: A Cloud Storage URI that specifies the
                                  path to a krb5.conf file. It is of the form gs://{bucket_name}/path/to/krb5.conf,
                                  although the file does not need to be named krb5.conf
                                  explicitly.
                                type: string
                              principal:
                                description: A Kerberos principal that exists in the
                                  both the keytab the KDC to authenticate as. A typical
                                  principal is of the form "primary/instance@REALM",
                                  but there is no exact format.
                                type: string
                            type: object
                          type: array
                        version:
                          description: The Hive metastore schema version.
                          type: string
                      type: object
                    type: array
                  labels:
                    additionalProperties:
                      type: string
                    description: |-
                      User-defined labels for the metastore service.
                      Note: This field is non-authoritative, and will only manage the labels present in your configuration.
                      Please refer to the field effective_labels for all of the labels present on the resource.
                    type: object
                    x-kubernetes-map-type: granular
                  location:
                    description: |-
                      The location where the metastore service should reside.
                      The default value is global.
                    type: string
                  maintenanceWindow:
                    description: |-
                      The one hour maintenance window of the metastore service.
                      This specifies when the service can be restarted for maintenance purposes in UTC time.
                      Maintenance window is not needed for services with the SPANNER database type.
                      Structure is documented below.
                    items:
                      properties:
                        dayOfWeek:
                          description: |-
                            The day of week, when the window starts.
                            Possible values are: MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY.
                          type: string
                        hourOfDay:
                          description: The hour of day (0-23) when the window starts.
                          type: number
                      type: object
                    type: array
                  metadataIntegration:
                    description: |-
                      The setting that defines how metastore metadata should be integrated with external services and systems.
                      Structure is documented below.
                    items:
                      properties:
                        dataCatalogConfig:
                          description: |-
                            The integration config for the Data Catalog service.
                            Structure is documented below.
                          items:
                            properties:
                              enabled:
                                description: Defines whether the metastore metadata
                                  should be synced to Data Catalog. The default value
                                  is to disable syncing metastore metadata to Data
                                  Catalog.
                                type: boolean
                            type: object
                          type: array
                      type: object
                    type: array
                  network:
                    description: |-
                      The relative resource name of the VPC network on which the instance can be accessed. It is specified in the following form:
                      "projects/{projectNumber}/global/networks/{network_id}".
                    type: string
                  networkConfig:
                    description: |-
                      The configuration specifying the network settings for the Dataproc Metastore service.
                      Structure is documented below.
                    items:
                      properties:
                        consumers:
                          description: |-
                            The consumer-side network configuration for the Dataproc Metastore instance.
                            Structure is documented below.
                          items:
                            properties:
                              subnetwork:
                                description: |-
                                  The subnetwork of the customer project from which an IP address is reserved and used as the Dataproc Metastore service's endpoint.
                                  It is accessible to hosts in the subnet and to all hosts in a subnet in the same region and same network.
                                  There must be at least one IP address available in the subnet's primary range. The subnet is specified in the following form:
                                  `projects/{projectNumber}/regions/{region_id}/subnetworks/{subnetwork_id}
                                type: string
                              subnetworkRef:
                                description: Reference to a Subnetwork in compute
                                  to populate subnetwork.
                                properties:
                                  name:
                                    description: Name of the referenced object.
                                    type: string
                                  policy:
                                    description: Policies for referencing.
                                    properties:
                                      resolution:
                                        default: Required
                                        description: |-
                                          Resolution specifies whether resolution of this reference is required.
                                          The default is 'Required', which means the reconcile will fail if the
                                          reference cannot be resolved. 'Optional' means this reference will be
                                          a no-op if it cannot be resolved.
                                        enum:
                                        - Required
                                        - Optional
                                        type: string
                                      resolve:
                                        description: |-
                                          Resolve specifies when this reference should be resolved. The default
                                          is 'IfNotPresent', which will attempt to resolve the reference only when
                                          the corresponding field is not present. Use 'Always' to resolve the
                                          reference on every reconcile.
                                        enum:
                                        - Always
                                        - IfNotPresent
                                        type: string
                                    type: object
                                required:
                                - name
                                type: object
                              subnetworkSelector:
                                description: Selector for a Subnetwork in compute
                                  to populate subnetwork.
                                properties:
                                  matchControllerRef:
                                    description: |-
                                      MatchControllerRef ensures an object with the same controller reference
                                      as the selecting object is selected.
                                    type: boolean
                                  matchLabels:
                                    additionalProperties:
                                      type: string
                                    description: MatchLabels ensures an object with
                                      matching labels is selected.
                                    type: object
                                  policy:
                                    description: Policies for selection.
                                    properties:
                                      resolution:
                                        default: Required
                                        description: |-
                                          Resolution specifies whether resolution of this reference is required.
                                          The default is 'Required', which means the reconcile will fail if the
                                          reference cannot be resolved. 'Optional' means this reference will be
                                          a no-op if it cannot be resolved.
                                        enum:
                                        - Required
                                        - Optional
                                        type: string
                                      resolve:
                                        description: |-
                                          Resolve specifies when this reference should be resolved. The default
                                          is 'IfNotPresent', which will attempt to resolve the reference only when
                                          the corresponding field is not present. Use 'Always' to resolve the
                                          reference on every reconcile.
                                        enum:
                                        - Always
                                        - IfNotPresent
                                        type: string
                                    type: object
                                type: object
                            type: object
                          type: array
                      type: object
                    type: array
                  port:
                    description: 'The TCP port at which the metastore service is reached.
                      Default: 9083.'
                    type: number
                  project:
                    description: |-
                      The ID of the project in which the resource belongs.
                      If it is not provided, the provider project is used.
                    type: string
                  releaseChannel:
                    description: |-
                      The release channel of the service. If unspecified, defaults to STABLE.
                      Default value is STABLE.
                      Possible values are: CANARY, STABLE.
                    type: string
                  scalingConfig:
                    description: |-
                      Represents the scaling configuration of a metastore service.
                      Structure is documented below.
                    items:
                      properties:
                        autoscalingConfig:
                          description: |-
                            Represents the autoscaling configuration of a metastore service.
                            Structure is documented below.
                          items:
                            properties:
                              autoscalingEnabled:
                                description: Defines whether autoscaling is enabled.
                                  The default value is false.
                                type: boolean
                              limitConfig:
                                description: |-
                                  Represents the limit configuration of a metastore service.
                                  Structure is documented below.
                                items:
                                  properties:
                                    maxScalingFactor:
                                      description: The maximum scaling factor that
                                        the service will autoscale to. The default
                                        value is 6.0.
                                      type: number
                                    minScalingFactor:
                                      description: The minimum scaling factor that
                                        the service will autoscale to. The default
                                        value is 0.1.
                                      type: number
                                  type: object
                                type: array
                            type: object
                          type: array
                        instanceSize:
                          description: |-
                            Metastore instance sizes.
                            Possible values are: EXTRA_SMALL, SMALL, MEDIUM, LARGE, EXTRA_LARGE.
                          type: string
                        scalingFactor:
                          description: Scaling factor, in increments of 0.1 for values
                            less than 1.0, and increments of 1.0 for values greater
                            than 1.0.
                          type: number
                      type: object
                    type: array
                  scheduledBackup:
                    description: |-
                      The configuration of scheduled backup for the metastore service.
                      Structure is documented below.
                    items:
                      properties:
                        backupLocation:
                          description: A Cloud Storage URI of a folder, in the format
                            gs://<bucket_name>/<path_inside_bucket>. A sub-folder
                            <backup_folder> containing backup files will be stored
                            below it.
                          type: string
                        cronSchedule:
                          description: 'The scheduled interval in Cron format, see
                            https://en.wikipedia.org/wiki/Cron The default is empty:
                            scheduled backup is not enabled. Must be specified to
                            enable scheduled backups.'
                          type: string
                        enabled:
                          description: Defines whether the scheduled backup is enabled.
                            The default value is false.
                          type: boolean
                        timeZone:
                          description: Specifies the time zone to be used when interpreting
                            cronSchedule. Must be a time zone name from the time zone
                            database (https://en.wikipedia.org/wiki/List_of_tz_database_time_zones),
                            e.g. America/Los_Angeles or Africa/Abidjan. If left unspecified,
                            the default is UTC.
                          type: string
                      type: object
                    type: array
                  telemetryConfig:
                    description: |-
                      The configuration specifying telemetry settings for the Dataproc Metastore service. If unspecified defaults to JSON.
                      Structure is documented below.
                    items:
                      properties:
                        logFormat:
                          description: |-
                            The output format of the Dataproc Metastore service's logs.
                            Default value is JSON.
                            Possible values are: LEGACY, JSON.
                          type: string
                      type: object
                    type: array
                  tier:
                    description: |-
                      The tier of the service.
                      Possible values are: DEVELOPER, ENTERPRISE.
                    type: string
                type: object
              initProvider:
                description: |-
                  THIS IS A BETA FIELD. It will be honored
                  unless the Management Policies feature flag is disabled.
                  InitProvider holds the same fields as ForProvider, with the exception
                  of Identifier and other resource reference fields. The fields that are
                  in InitProvider are merged into ForProvider when the resource is created.
                  The same fields are also added to the terraform ignore_changes hook, to
                  avoid updating them after creation. This is useful for fields that are
                  required on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them, like an
                  autoscaler.
                properties:
                  databaseType:
                    description: |-
                      The database type that the Metastore service stores its data.
                      Default value is MYSQL.
                      Possible values are: MYSQL, SPANNER.
                    type: string
                  deletionProtection:
                    description: Indicates if the dataproc metastore should be protected
                      against accidental deletions.
                    type: boolean
                  encryptionConfig:
                    description: |-
                      Information used to configure the Dataproc Metastore service to encrypt
                      customer data at rest.
                      Structure is documented below.
                    items:
                      properties:
                        kmsKey:
                          description: |-
                            The fully qualified customer provided Cloud KMS key name to use for customer data encryption.
                            Use the following format: projects/([^/]+)/locations/([^/]+)/keyRings/([^/]+)/cryptoKeys/([^/]+)
                          type: string
                        kmsKeyRef:
                          description: Reference to a CryptoKey in kms to populate
                            kmsKey.
                          properties:
                            name:
                              description: Name of the referenced object.
                              type: string
                            policy:
                              description: Policies for referencing.
                              properties:
                                resolution:
                                  default: Required
                                  description: |-
                                    Resolution specifies whether resolution of this reference is required.
                                    The default is 'Required', which means the reconcile will fail if the
                                    reference cannot be resolved. 'Optional' means this reference will be
                                    a no-op if it cannot be resolved.
                                  enum:
                                  - Required
                                  - Optional
                                  type: string
                                resolve:
                                  description: |-
                                    Resolve specifies when this reference should be resolved. The default
                                    is 'IfNotPresent', which will attempt to resolve the reference only when
                                    the corresponding field is not present. Use 'Always' to resolve the
                                    reference on every reconcile.
                                  enum:
                                  - Always
                                  - IfNotPresent
                                  type: string
                              type: object
                          required:
                          - name
                          type: object
                        kmsKeySelector:
                          description: Selector for a CryptoKey in kms to populate
                            kmsKey.
                          properties:
                            matchControllerRef:
                              description: |-
                                MatchControllerRef ensures an object with the same controller reference
                                as the selecting object is selected.
                              type: boolean
                            matchLabels:
                              additionalProperties:
                                type: string
                              description: MatchLabels ensures an object with matching
                                labels is selected.
                              type: object
                            policy:
                              description: Policies for selection.
                              properties:
                                resolution:
                                  default: Required
                                  description: |-
                                    Resolution specifies whether resolution of this reference is required.
                                    The default is 'Required', which means the reconcile will fail if the
                                    reference cannot be resolved. 'Optional' means this reference will be
                                    a no-op if it cannot be resolved.
                                  enum:
                                  - Required
                                  - Optional
                                  type: string
                                resolve:
                                  description: |-
                                    Resolve specifies when this reference should be resolved. The default
                                    is 'IfNotPresent', which will attempt to resolve the reference only when
                                    the corresponding field is not present. Use 'Always' to resolve the
                                    reference on every reconcile.
                                  enum:
                                  - Always
                                  - IfNotPresent
                                  type: string
                              type: object
                          type: object
                      type: object
                    type: array
                  hiveMetastoreConfig:
                    description: |-
                      Configuration information specific to running Hive metastore software as the metastore service.
                      Structure is documented below.
                    items:
                      properties:
                        auxiliaryVersions:
                          description: |-
                            A mapping of Hive metastore version to the auxiliary version configuration.
                            When specified, a secondary Hive metastore service is created along with the primary service.
                            All auxiliary versions must be less than the service's primary version.
                            The key is the auxiliary service name and it must match the regular expression a-z?.
                            This means that the first character must be a lowercase letter, and all the following characters must be hyphens, lowercase letters, or digits, except the last character, which cannot be a hyphen.
                            Structure is documented below.
                          items:
                            properties:
                              configOverrides:
                                additionalProperties:
                                  type: string
                                description: |-
                                  A mapping of Hive metastore configuration key-value pairs to apply to the Hive metastore (configured in hive-site.xml).
                                  The mappings override system defaults (some keys cannot be overridden)
                                type: object
                                x-kubernetes-map-type: granular
                              key:
                                description: The identifier for this object. Format
                                  specified above.
                                type: string
                              version:
                                description: The Hive metastore schema version.
                                type: string
                            type: object
                          type: array
                        configOverrides:
                          additionalProperties:
                            type: string
                          description: |-
                            A mapping of Hive metastore configuration key-value pairs to apply to the Hive metastore (configured in hive-site.xml).
                            The mappings override system defaults (some keys cannot be overridden)
                          type: object
                          x-kubernetes-map-type: granular
                        endpointProtocol:
                          description: |-
                            The protocol to use for the metastore service endpoint. If unspecified, defaults to THRIFT.
                            Default value is THRIFT.
                            Possible values are: THRIFT, GRPC.
                          type: string
                        kerberosConfig:
                          description: |-
                            Information used to configure the Hive metastore service as a service principal in a Kerberos realm.
                            Structure is documented below.
                          items:
                            properties:
                              keytab:
                                description: |-
                                  A Kerberos keytab file that can be used to authenticate a service principal with a Kerberos Key Distribution Center (KDC).
                                  Structure is documented below.
                                items:
                                  properties:
                                    cloudSecret:
                                      description: |-
                                        The relative resource name of a Secret Manager secret version, in the following form:
                                        "projects/{projectNumber}/secrets/{secret_id}/versions/{version_id}".
                                      type: string
                                  type: object
                                type: array
                              krb5ConfigGcsUri:
                                description: A Cloud Storage URI that specifies the
                                  path to a krb5.conf file. It is of the form gs://{bucket_name}/path/to/krb5.conf,
                                  although the file does not need to be named krb5.conf
                                  explicitly.
                                type: string
                              principal:
                                description: A Kerberos principal that exists in the
                                  both the keytab the KDC to authenticate as. A typical
                                  principal is of the form "primary/instance@REALM",
                                  but there is no exact format.
                                type: string
                            type: object
                          type: array
                        version:
                          description: The Hive metastore schema version.
                          type: string
                      type: object
                    type: array
                  labels:
                    additionalProperties:
                      type: string
                    description: |-
                      User-defined labels for the metastore service.
                      Note: This field is non-authoritative, and will only manage the labels present in your configuration.
                      Please refer to the field effective_labels for all of the labels present on the resource.
                    type: object
                    x-kubernetes-map-type: granular
                  maintenanceWindow:
                    description: |-
                      The one hour maintenance window of the metastore service.
                      This specifies when the service can be restarted for maintenance purposes in UTC time.
                      Maintenance window is not needed for services with the SPANNER database type.
                      Structure is documented below.
                    items:
                      properties:
                        dayOfWeek:
                          description: |-
                            The day of week, when the window starts.
                            Possible values are: MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY.
                          type: string
                        hourOfDay:
                          description: The hour of day (0-23) when the window starts.
                          type: number
                      type: object
                    type: array
                  metadataIntegration:
                    description: |-
                      The setting that defines how metastore metadata should be integrated with external services and systems.
                      Structure is documented below.
                    items:
                      properties:
                        dataCatalogConfig:
                          description: |-
                            The integration config for the Data Catalog service.
                            Structure is documented below.
                          items:
                            properties:
                              enabled:
                                description: Defines whether the metastore metadata
                                  should be synced to Data Catalog. The default value
                                  is to disable syncing metastore metadata to Data
                                  Catalog.
                                type: boolean
                            type: object
                          type: array
                      type: object
                    type: array
                  network:
                    description: |-
                      The relative resource name of the VPC network on which the instance can be accessed. It is specified in the following form:
                      "projects/{projectNumber}/global/networks/{network_id}".
                    type: string
                  networkConfig:
                    description: |-
                      The configuration specifying the network settings for the Dataproc Metastore service.
                      Structure is documented below.
                    items:
                      properties:
                        consumers:
                          description: |-
                            The consumer-side network configuration for the Dataproc Metastore instance.
                            Structure is documented below.
                          items:
                            properties:
                              subnetwork:
                                description: |-
                                  The subnetwork of the customer project from which an IP address is reserved and used as the Dataproc Metastore service's endpoint.
                                  It is accessible to hosts in the subnet and to all hosts in a subnet in the same region and same network.
                                  There must be at least one IP address available in the subnet's primary range. The subnet is specified in the following form:
                                  `projects/{projectNumber}/regions/{region_id}/subnetworks/{subnetwork_id}
                                type: string
                              subnetworkRef:
                                description: Reference to a Subnetwork in compute
                                  to populate subnetwork.
                                properties:
                                  name:
                                    description: Name of the referenced object.
                                    type: string
                                  policy:
                                    description: Policies for referencing.
                                    properties:
                                      resolution:
                                        default: Required
                                        description: |-
                                          Resolution specifies whether resolution of this reference is required.
                                          The default is 'Required', which means the reconcile will fail if the
                                          reference cannot be resolved. 'Optional' means this reference will be
                                          a no-op if it cannot be resolved.
                                        enum:
                                        - Required
                                        - Optional
                                        type: string
                                      resolve:
                                        description: |-
                                          Resolve specifies when this reference should be resolved. The default
                                          is 'IfNotPresent', which will attempt to resolve the reference only when
                                          the corresponding field is not present. Use 'Always' to resolve the
                                          reference on every reconcile.
                                        enum:
                                        - Always
                                        - IfNotPresent
                                        type: string
                                    type: object
                                required:
                                - name
                                type: object
                              subnetworkSelector:
                                description: Selector for a Subnetwork in compute
                                  to populate subnetwork.
                                properties:
                                  matchControllerRef:
                                    description: |-
                                      MatchControllerRef ensures an object with the same controller reference
                                      as the selecting object is selected.
                                    type: boolean
                                  matchLabels:
                                    additionalProperties:
                                      type: string
                                    description: MatchLabels ensures an object with
                                      matching labels is selected.
                                    type: object
                                  policy:
                                    description: Policies for selection.
                                    properties:
                                      resolution:
                                        default: Required
                                        description: |-
                                          Resolution specifies whether resolution of this reference is required.
                                          The default is 'Required', which means the reconcile will fail if the
                                          reference cannot be resolved. 'Optional' means this reference will be
                                          a no-op if it cannot be resolved.
                                        enum:
                                        - Required
                                        - Optional
                                        type: string
                                      resolve:
                                        description: |-
                                          Resolve specifies when this reference should be resolved. The default
                                          is 'IfNotPresent', which will attempt to resolve the reference only when
                                          the corresponding field is not present. Use 'Always' to resolve the
                                          reference on every reconcile.
                                        enum:
                                        - Always
                                        - IfNotPresent
                                        type: string
                                    type: object
                                type: object
                            type: object
                          type: array
                      type: object
                    type: array
                  port:
                    description: 'The TCP port at which the metastore service is reached.
                      Default: 9083.'
                    type: number
                  project:
                    description: |-
                      The ID of the project in which the resource belongs.
                      If it is not provided, the provider project is used.
                    type: string
                  releaseChannel:
                    description: |-
                      The release channel of the service. If unspecified, defaults to STABLE.
                      Default value is STABLE.
                      Possible values are: CANARY, STABLE.
                    type: string
                  scalingConfig:
                    description: |-
                      Represents the scaling configuration of a metastore service.
                      Structure is documented below.
                    items:
                      properties:
                        autoscalingConfig:
                          description: |-
                            Represents the autoscaling configuration of a metastore service.
                            Structure is documented below.
                          items:
                            properties:
                              autoscalingEnabled:
                                description: Defines whether autoscaling is enabled.
                                  The default value is false.
                                type: boolean
                              limitConfig:
                                description: |-
                                  Represents the limit configuration of a metastore service.
                                  Structure is documented below.
                                items:
                                  properties:
                                    maxScalingFactor:
                                      description: The maximum scaling factor that
                                        the service will autoscale to. The default
                                        value is 6.0.
                                      type: number
                                    minScalingFactor:
                                      description: The minimum scaling factor that
                                        the service will autoscale to. The default
                                        value is 0.1.
                                      type: number
                                  type: object
                                type: array
                            type: object
                          type: array
                        instanceSize:
                          description: |-
                            Metastore instance sizes.
                            Possible values are: EXTRA_SMALL, SMALL, MEDIUM, LARGE, EXTRA_LARGE.
                          type: string
                        scalingFactor:
                          description: Scaling factor, in increments of 0.1 for values
                            less than 1.0, and increments of 1.0 for values greater
                            than 1.0.
                          type: number
                      type: object
                    type: array
                  scheduledBackup:
                    description: |-
                      The configuration of scheduled backup for the metastore service.
                      Structure is documented below.
                    items:
                      properties:
                        backupLocation:
                          description: A Cloud Storage URI of a folder, in the format
                            gs://<bucket_name>/<path_inside_bucket>. A sub-folder
                            <backup_folder> containing backup files will be stored
                            below it.
                          type: string
                        cronSchedule:
                          description: 'The scheduled interval in Cron format, see
                            https://en.wikipedia.org/wiki/Cron The default is empty:
                            scheduled backup is not enabled. Must be specified to
                            enable scheduled backups.'
                          type: string
                        enabled:
                          description: Defines whether the scheduled backup is enabled.
                            The default value is false.
                          type: boolean
                        timeZone:
                          description: Specifies the time zone to be used when interpreting
                            cronSchedule. Must be a time zone name from the time zone
                            database (https://en.wikipedia.org/wiki/List_of_tz_database_time_zones),
                            e.g. America/Los_Angeles or Africa/Abidjan. If left unspecified,
                            the default is UTC.
                          type: string
                      type: object
                    type: array
                  telemetryConfig:
                    description: |-
                      The configuration specifying telemetry settings for the Dataproc Metastore service. If unspecified defaults to JSON.
                      Structure is documented below.
                    items:
                      properties:
                        logFormat:
                          description: |-
                            The output format of the Dataproc Metastore service's logs.
                            Default value is JSON.
                            Possible values are: LEGACY, JSON.
                          type: string
                      type: object
                    type: array
                  tier:
                    description: |-
                      The tier of the service.
                      Possible values are: DEVELOPER, ENTERPRISE.
                    type: string
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  This field is planned to replace the DeletionPolicy field in a future
                  release. Currently, both could be set independently and non-default
                  values would be honored if the feature flag is enabled. If both are
                  custom, the DeletionPolicy field will be ignored.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: |-
                  PublishConnectionDetailsTo specifies the connection secret config which
                  contains a name, metadata and a reference to secret store config to
                  which any connection details for this managed resource should be written.
                  Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: |-
                      SecretStoreConfigRef specifies which secret store config should be used
                      for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations are the annotations to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.annotations".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Labels are the labels/tags to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      type:
                        description: |-
                          Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                  This field is planned to be replaced in a future release in favor of
                  PublishConnectionDetailsTo. Currently, both could be set independently
                  and connection details would be published to both without affecting
                  each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: MetastoreServiceStatus defines the observed state of MetastoreService.
            properties:
              atProvider:
                properties:
                  artifactGcsUri:
                    description: A Cloud Storage URI (starting with gs://) that specifies
                      where artifacts related to the metastore service are stored.
                    type: string
                  createTime:
                    description: Output only. The time when the metastore service
                      was created.
                    type: string
                  databaseType:
                    description: |-
                      The database type that the Metastore service stores its data.
                      Default value is MYSQL.
                      Possible values are: MYSQL, SPANNER.
                    type: string
                  deletionProtection:
                    description: Indicates if the dataproc metastore should be protected
                      against accidental deletions.
                    type: boolean
                  effectiveLabels:
                    additionalProperties:
                      type: string
                    type: object
                    x-kubernetes-map-type: granular
                  encryptionConfig:
                    description: |-
                      Information used to configure the Dataproc Metastore service to encrypt
                      customer data at rest.
                      Structure is documented below.
                    items:
                      properties:
                        kmsKey:
                          description: |-
                            The fully qualified customer provided Cloud KMS key name to use for customer data encryption.
                            Use the following format: projects/([^/]+)/locations/([^/]+)/keyRings/([^/]+)/cryptoKeys/([^/]+)
                          type: string
                      type: object
                    type: array
                  endpointUri:
                    description: The URI of the endpoint used to access the metastore
                      service.
                    type: string
                  hiveMetastoreConfig:
                    description: |-
                      Configuration information specific to running Hive metastore software as the metastore service.
                      Structure is documented below.
                    items:
                      properties:
                        auxiliaryVersions:
                          description: |-
                            A mapping of Hive metastore version to the auxiliary version configuration.
                            When specified, a secondary Hive metastore service is created along with the primary service.
                            All auxiliary versions must be less than the service's primary version.
                            The key is the auxiliary service name and it must match the regular expression a-z?.
                            This means that the first character must be a lowercase letter, and all the following characters must be hyphens, lowercase letters, or digits, except the last character, which cannot be a hyphen.
                            Structure is documented below.
                          items:
                            properties:
                              configOverrides:
                                additionalProperties:
                                  type: string
                                description: |-
                                  A mapping of Hive metastore configuration key-value pairs to apply to the Hive metastore (configured in hive-site.xml).
                                  The mappings override system defaults (some keys cannot be overridden)
                                type: object
                                x-kubernetes-map-type: granular
                              key:
                                description: The identifier for this object. Format
                                  specified above.
                                type: string
                              version:
                                description: The Hive metastore schema version.
                                type: string
                            type: object
                          type: array
                        configOverrides:
                          additionalProperties:
                            type: string
                          description: |-
                            A mapping of Hive metastore configuration key-value pairs to apply to the Hive metastore (configured in hive-site.xml).
                            The mappings override system defaults (some keys cannot be overridden)
                          type: object
                          x-kubernetes-map-type: granular
                        endpointProtocol:
                          description: |-
                            The protocol to use for the metastore service endpoint. If unspecified, defaults to THRIFT.
                            Default value is THRIFT.
                            Possible values are: THRIFT, GRPC.
                          type: string
                        kerberosConfig:
                          description: |-
                            Information used to configure the Hive metastore service as a service principal in a Kerberos realm.
                            Structure is documented below.
                          items:
                            properties:
                              keytab:
                                description: |-
                                  A Kerberos keytab file that can be used to authenticate a service principal with a Kerberos Key Distribution Center (KDC).
                                  Structure is documented below.
                                items:
                                  properties:
                                    cloudSecret:
                                      description: |-
                                        The relative resource name of a Secret Manager secret version, in the following form:
                                        "projects/{projectNumber}/secrets/{secret_id}/versions/{version_id}".
                                      type: string
                                  type: object
                                type: array
                              krb5ConfigGcsUri:
                                description: A Cloud Storage URI that specifies the
                                  path to a krb5.conf file. It is of the form gs://{bucket_name}/path/to/krb5.conf,
                                  although the file does not need to be named krb5.conf
                                  explicitly.
                                type: string
                              principal:
                                description: A Kerberos principal that exists in the
                                  both the keytab the KDC to authenticate as. A typical
                                  principal is of the form "primary/instance@REALM",
                                  but there is no exact format.
                                type: string
                            type: object
                          type: array
                        version:
                          description: The Hive metastore schema version.
                          type: string
                      type: object
                    type: array
                  id:
                    description: an identifier for the resource with format projects/{{project}}/locations/{{location}}/services/{{service_id}}
                    type: string
                  labels:
                    additionalProperties:
                      type: string
                    description: |-
                      User-defined labels for the metastore service.
                      Note: This field is non-authoritative, and will only manage the labels present in your configuration.
                      Please refer to the field effective_labels for all of the labels present on the resource.
                    type: object
                    x-kubernetes-map-type: granular
                  location:
                    description: |-
                      The location where the metastore service should reside.
                      The default value is global.
                    type: string
                  maintenanceWindow:
                    description: |-
                      The one hour maintenance window of the metastore service.
                      This specifies when the service can be restarted for maintenance purposes in UTC time.
                      Maintenance window is not needed for services with the SPANNER database type.
                      Structure is documented below.
                    items:
                      properties:
                        dayOfWeek:
                          description: |-
                            The day of week, when the window starts.
                            Possible values are: MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY.
                          type: string
                        hourOfDay:
                          description: The hour of day (0-23) when the window starts.
                          type: number
                      type: object
                    type: array
                  metadataIntegration:
                    description: |-
                      The setting that defines how metastore metadata should be integrated with external services and systems.
                      Structure is documented below.
                    items:
                      properties:
                        dataCatalogConfig:
                          description: |-
                            The integration config for the Data Catalog service.
                            Structure is documented below.
                          items:
                            properties:
                              enabled:
                                description: Defines whether the metastore metadata
                                  should be synced to Data Catalog. The default value
                                  is to disable syncing metastore metadata to Data
                                  Catalog.
                                type: boolean
                            type: object
                          type: array
                      type: object
                    type: array
                  name:
                    description: The relative resource name of the metastore service.
                    type: string
                  network:
                    description: |-
                      The relative resource name of the VPC network on which the instance can be accessed. It is specified in the following form:
                      "projects/{projectNumber}/global/networks/{network_id}".
                    type: string
                  networkConfig:
                    description: |-
                      The configuration specifying the network settings for the Dataproc Metastore service.
                      Structure is documented below.
                    items:
                      properties:
                        consumers:
                          description: |-
                            The consumer-side network configuration for the Dataproc Metastore instance.
                            Structure is documented below.
                          items:
                            properties:
                              endpointUri:
                                description: The URI of the endpoint used to access
                                  the metastore service.
                                type: string
                              subnetwork:
                                description: |-
                                  The subnetwork of the customer project from which an IP address is reserved and used as the Dataproc Metastore service's endpoint.
                                  It is accessible to hosts in the subnet and to all hosts in a subnet in the same region and same network.
                                  There must be at least one IP address available in the subnet's primary range. The subnet is specified in the following form:
                                  `projects/{projectNumber}/regions/{region_id}/subnetworks/{subnetwork_id}
                                type: string
                            type: object
                          type: array
                      type: object
                    type: array
                  port:
                    description: 'The TCP port at which the metastore service is reached.
                      Default: 9083.'
                    type: number
                  project:
                    description: |-
                      The ID of the project in which the resource belongs.
                      If it is not provided, the provider project is used.
                    type: string
                  releaseChannel:
                    description: |-
                      The release channel of the service. If unspecified, defaults to STABLE.
                      Default value is STABLE.
                      Possible values are: CANARY, STABLE.
                    type: string
                  scalingConfig:
                    description: |-
                      Represents the scaling configuration of a metastore service.
                      Structure is documented below.
                    items:
                      properties:
                        autoscalingConfig:
                          description: |-
                            Represents the autoscaling configuration of a metastore service.
                            Structure is documented below.
                          items:
                            properties:
                              autoscalingEnabled:
                                description: Defines whether autoscaling is enabled.
                                  The default value is false.
                                type: boolean
                              autoscalingFactor:
                                description: |-
                                  (Output)
                                  Output only. The scaling factor of a service with autoscaling enabled.
                                type: number
                              limitConfig:
                                description: |-
                                  Represents the limit configuration of a metastore service.
                                  Structure is documented below.
                                items:
                                  properties:
                                    maxScalingFactor:
                                      description: The maximum scaling factor that
                                        the service will autoscale to. The default
                                        value is 6.0.
                                      type: number
                                    minScalingFactor:
                                      description: The minimum scaling factor that
                                        the service will autoscale to. The default
                                        value is 0.1.
                                      type: number
                                  type: object
                                type: array
                            type: object
                          type: array
                        instanceSize:
                          description: |-
                            Metastore instance sizes.
                            Possible values are: EXTRA_SMALL, SMALL, MEDIUM, LARGE, EXTRA_LARGE.
                          type: string
                        scalingFactor:
                          description: Scaling factor, in increments of 0.1 for values
                            less than 1.0, and increments of 1.0 for values greater
                            than 1.0.
                          type: number
                      type: object
                    type: array
                  scheduledBackup:
                    description: |-
                      The configuration of scheduled backup for the metastore service.
                      Structure is documented below.
                    items:
                      properties:
                        backupLocation:
                          description: A Cloud Storage URI of a folder, in the format
                            gs://<bucket_name>/<path_inside_bucket>. A sub-folder
                            <backup_folder> containing backup files will be stored
                            below it.
                          type: string
                        cronSchedule:
                          description: 'The scheduled interval in Cron format, see
                            https://en.wikipedia.org/wiki/Cron The default is empty:
                            scheduled backup is not enabled. Must be specified to
                            enable scheduled backups.'
                          type: string
                        enabled:
                          description: Defines whether the scheduled backup is enabled.
                            The default value is false.
                          type: boolean
                        timeZone:
                          description: Specifies the time zone to be used when interpreting
                            cronSchedule. Must be a time zone name from the time zone
                            database (https://en.wikipedia.org/wiki/List_of_tz_database_time_zones),
                            e.g. America/Los_Angeles or Africa/Abidjan. If left unspecified,
                            the default is UTC.
                          type: string
                      type: object
                    type: array
                  state:
                    description: The current state of the metastore service.
                    type: string
                  stateMessage:
                    description: Additional information about the current state of
                      the metastore service, if available.
                    type: string
                  telemetryConfig:
                    description: |-
                      The configuration specifying telemetry settings for the Dataproc Metastore service. If unspecified defaults to JSON.
                      Structure is documented below.
                    items:
                      properties:
                        logFormat:
                          description: |-
                            The output format of the Dataproc Metastore service's logs.
                            Default value is JSON.
                            Possible values are: LEGACY, JSON.
                          type: string
                      type: object
                    type: array
                  terraformLabels:
                    additionalProperties:
                      type: string
                    description: |-
                      The combination of labels configured directly on the resource
                      and default labels configured on the provider.
                    type: object
                    x-kubernetes-map-type: granular
                  tier:
                    description: |-
                      The tier of the service.
                      Possible values are: DEVELOPER, ENTERPRISE.
                    type: string
                  uid:
                    description: The globally unique resource identifier of the metastore
                      service.
                    type: string
                  updateTime:
                    description: Output only. The time when the metastore service
                      was last updated.
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: |-
                  ObservedGeneration is the latest metadata.generation
                  which resulted in either a ready state, or stalled due to error
                  it can not recover from without human intervention.
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1beta2
    schema:
      openAPIV3Schema:
        description: MetastoreService is the Schema for the MetastoreServices API.
          A managed metastore service that serves metadata queries.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: MetastoreServiceSpec defines the desired state of MetastoreService
            properties:
              deletionPolicy:
                default: Delete
                description: |-
                  DeletionPolicy specifies what will happen to the underlying external
                  when this managed resource is deleted - either "Delete" or "Orphan" the
                  external resource.
                  This field is planned to be deprecated in favor of the ManagementPolicies
                  field in a future release. Currently, both could be set independently and
                  non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  databaseType:
                    description: |-
                      The database type that the Metastore service stores its data.
                      Default value is MYSQL.
                      Possible values are: MYSQL, SPANNER.
                    type: string
                  deletionProtection:
                    description: Indicates if the dataproc metastore should be protected
                      against accidental deletions.
                    type: boolean
                  encryptionConfig:
                    description: |-
                      Information used to configure the Dataproc Metastore service to encrypt
                      customer data at rest.
                      Structure is documented below.
                    properties:
                      kmsKey:
                        description: |-
                          The fully qualified customer provided Cloud KMS key name to use for customer data encryption.
                          Use the following format: projects/([^/]+)/locations/([^/]+)/keyRings/([^/]+)/cryptoKeys/([^/]+)
                        type: string
                      kmsKeyRef:
                        description: Reference to a CryptoKey in kms to populate kmsKey.
                        properties:
                          name:
                            description: Name of the referenced object.
                            type: string
                          policy:
                            description: Policies for referencing.
                            properties:
                              resolution:
                                default: Required
                                description: |-
                                  Resolution specifies whether resolution of this reference is required.
                                  The default is 'Required', which means the reconcile will fail if the
                                  reference cannot be resolved. 'Optional' means this reference will be
                                  a no-op if it cannot be resolved.
                                enum:
                                - Required
                                - Optional
                                type: string
                              resolve:
                                description: |-
                                  Resolve specifies when this reference should be resolved. The default
                                  is 'IfNotPresent', which will attempt to resolve the reference only when
                                  the corresponding field is not present. Use 'Always' to resolve the
                                  reference on every reconcile.
                                enum:
                                - Always
                                - IfNotPresent
                                type: string
                            type: object
                        required:
                        - name
                        type: object
                      kmsKeySelector:
                        description: Selector for a CryptoKey in kms to populate kmsKey.
                        properties:
                          matchControllerRef:
                            description: |-
                              MatchControllerRef ensures an object with the same controller reference
                              as the selecting object is selected.
                            type: boolean
                          matchLabels:
                            additionalProperties:
                              type: string
                            description: MatchLabels ensures an object with matching
                              labels is selected.
                            type: object
                          policy:
                            description: Policies for selection.
                            properties:
                              resolution:
                                default: Required
                                description: |-
                                  Resolution specifies whether resolution of this reference is required.
                                  The default is 'Required', which means the reconcile will fail if the
                                  reference cannot be resolved. 'Optional' means this reference will be
                                  a no-op if it cannot be resolved.
                                enum:
                                - Required
                                - Optional
                                type: string
                              resolve:
                                description: |-
                                  Resolve specifies when this reference should be resolved. The default
                                  is 'IfNotPresent', which will attempt to resolve the reference only when
                                  the corresponding field is not present. Use 'Always' to resolve the
                                  reference on every reconcile.
                                enum:
                                - Always
                                - IfNotPresent
                                type: string
                            type: object
                        type: object
                    type: object
                  hiveMetastoreConfig:
                    description: |-
                      Configuration information specific to running Hive metastore software as the metastore service.
                      Structure is documented below.
                    properties:
                      auxiliaryVersions:
                        description: |-
                          A mapping of Hive metastore version to the auxiliary version configuration.
                          When specified, a secondary Hive metastore service is created along with the primary service.
                          All auxiliary versions must be less than the service's primary version.
                          The key is the auxiliary service name and it must match the regular expression a-z?.
                          This means that the first character must be a lowercase letter, and all the following characters must be hyphens, lowercase letters, or digits, except the last character, which cannot be a hyphen.
                          Structure is documented below.
                        items:
                          properties:
                            configOverrides:
                              additionalProperties:
                                type: string
                              description: |-
                                A mapping of Hive metastore configuration key-value pairs to apply to the Hive metastore (configured in hive-site.xml).
                                The mappings override system defaults (some keys cannot be overridden)
                              type: object
                              x-kubernetes-map-type: granular
                            key:
                              description: The identifier for this object. Format
                                specified above.
                              type: string
                            version:
                              description: The Hive metastore schema version.
                              type: string
                          type: object
                        type: array
                      configOverrides:
                        additionalProperties:
                          type: string
                        description: |-
                          A mapping of Hive metastore configuration key-value pairs to apply to the Hive metastore (configured in hive-site.xml).
                          The mappings override system defaults (some keys cannot be overridden)
                        type: object
                        x-kubernetes-map-type: granular
                      endpointProtocol:
                        description: |-
                          The protocol to use for the metastore service endpoint. If unspecified, defaults to THRIFT.
                          Default value is THRIFT.
                          Possible values are: THRIFT, GRPC.
                        type: string
                      kerberosConfig:
                        description: |-
                          Information used to configure the Hive metastore service as a service principal in a Kerberos realm.
                          Structure is documented below.
                        properties:
                          keytab:
                            description: |-
                              A Kerberos keytab file that can be used to authenticate a service principal with a Kerberos Key Distribution Center (KDC).
                              Structure is documented below.
                            properties:
                              cloudSecret:
                                description: |-
                                  The relative resource name of a Secret Manager secret version, in the following form:
                                  "projects/{projectNumber}/secrets/{secret_id}/versions/{version_id}".
                                type: string
                            type: object
                          krb5ConfigGcsUri:
                            description: A Cloud Storage URI that specifies the path
                              to a krb5.conf file. It is of the form gs://{bucket_name}/path/to/krb5.conf,
                              although the file does not need to be named krb5.conf
                              explicitly.
                            type: string
                          principal:
                            description: A Kerberos principal that exists in the both
                              the keytab the KDC to authenticate as. A typical principal
                              is of the form "primary/instance@REALM", but there is
                              no exact format.
                            type: string
                        type: object
                      version:
                        description: The Hive metastore schema version.
                        type: string
                    type: object
                  labels:
                    additionalProperties:
                      type: string
                    description: |-
                      User-defined labels for the metastore service.
                      Note: This field is non-authoritative, and will only manage the labels present in your configuration.
                      Please refer to the field effective_labels for all of the labels present on the resource.
                    type: object
                    x-kubernetes-map-type: granular
                  location:
                    description: |-
                      The location where the metastore service should reside.
                      The default value is global.
                    type: string
                  maintenanceWindow:
                    description: |-
                      The one hour maintenance window of the metastore service.
                      This specifies when the service can be restarted for maintenance purposes in UTC time.
                      Maintenance window is not needed for services with the SPANNER database type.
                      Structure is documented below.
                    properties:
                      dayOfWeek:
                        description: |-
                          The day of week, when the window starts.
                          Possible values are: MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY.
                        type: string
                      hourOfDay:
                        description: The hour of day (0-23) when the window starts.
                        type: number
                    type: object
                  metadataIntegration:
                    description: |-
                      The setting that defines how metastore metadata should be integrated with external services and systems.
                      Structure is documented below.
                    properties:
                      dataCatalogConfig:
                        description: |-
                          The integration config for the Data Catalog service.
                          Structure is documented below.
                        properties:
                          enabled:
                            description: Defines whether the metastore metadata should
                              be synced to Data Catalog. The default value is to disable
                              syncing metastore metadata to Data Catalog.
                            type: boolean
                        type: object
                    type: object
                  network:
                    description: |-
                      The relative resource name of the VPC network on which the instance can be accessed. It is specified in the following form:
                      "projects/{projectNumber}/global/networks/{network_id}".
                    type: string
                  networkConfig:
                    description: |-
                      The configuration specifying the network settings for the Dataproc Metastore service.
                      Structure is documented below.
                    properties:
                      consumers:
                        description: |-
                          The consumer-side network configuration for the Dataproc Metastore instance.
                          Structure is documented below.
                        items:
                          properties:
                            subnetwork:
                              description: |-
                                The subnetwork of the customer project from which an IP address is reserved and used as the Dataproc Metastore service's endpoint.
                                It is accessible to hosts in the subnet and to all hosts in a subnet in the same region and same network.
                                There must be at least one IP address available in the subnet's primary range. The subnet is specified in the following form:
                                `projects/{projectNumber}/regions/{region_id}/subnetworks/{subnetwork_id}
                              type: string
                            subnetworkRef:
                              description: Reference to a Subnetwork in compute to
                                populate subnetwork.
                              properties:
                                name:
                                  description: Name of the referenced object.
                                  type: string
                                policy:
                                  description: Policies for referencing.
                                  properties:
                                    resolution:
                                      default: Required
                                      description: |-
                                        Resolution specifies whether resolution of this reference is required.
                                        The default is 'Required', which means the reconcile will fail if the
                                        reference cannot be resolved. 'Optional' means this reference will be
                                        a no-op if it cannot be resolved.
                                      enum:
                                      - Required
                                      - Optional
                                      type: string
                                    resolve:
                                      description: |-
                                        Resolve specifies when this reference should be resolved. The default
                                        is 'IfNotPresent', which will attempt to resolve the reference only when
                                        the corresponding field is not present. Use 'Always' to resolve the
                                        reference on every reconcile.
                                      enum:
                                      - Always
                                      - IfNotPresent
                                      type: string
                                  type: object
                              required:
                              - name
                              type: object
                            subnetworkSelector:
                              description: Selector for a Subnetwork in compute to
                                populate subnetwork.
                              properties:
                                matchControllerRef:
                                  description: |-
                                    MatchControllerRef ensures an object with the same controller reference
                                    as the selecting object is selected.
                                  type: boolean
                                matchLabels:
                                  additionalProperties:
                                    type: string
                                  description: MatchLabels ensures an object with
                                    matching labels is selected.
                                  type: object
                                policy:
                                  description: Policies for selection.
                                  properties:
                                    resolution:
                                      default: Required
                                      description: |-
                                        Resolution specifies whether resolution of this reference is required.
                                        The default is 'Required', which means the reconcile will fail if the
                                        reference cannot be resolved. 'Optional' means this reference will be
                                        a no-op if it cannot be resolved.
                                      enum:
                                      - Required
                                      - Optional
                                      type: string
                                    resolve:
                                      description: |-
                                        Resolve specifies when this reference should be resolved. The default
                                        is 'IfNotPresent', which will attempt to resolve the reference only when
                                        the corresponding field is not present. Use 'Always' to resolve the
                                        reference on every reconcile.
                                      enum:
                                      - Always
                                      - IfNotPresent
                                      type: string
                                  type: object
                              type: object
                          type: object
                        type: array
                    type: object
                  port:
                    description: 'The TCP port at which the metastore service is reached.
                      Default: 9083.'
                    type: number
                  project:
                    description: |-
                      The ID of the project in which the resource belongs.
                      If it is not provided, the provider project is used.
                    type: string
                  releaseChannel:
                    description: |-
                      The release channel of the service. If unspecified, defaults to STABLE.
                      Default value is STABLE.
                      Possible values are: CANARY, STABLE.
                    type: string
                  scalingConfig:
                    description: |-
                      Represents the scaling configuration of a metastore service.
                      Structure is documented below.
                    properties:
                      autoscalingConfig:
                        description: |-
                          Represents the autoscaling configuration of a metastore service.
                          Structure is documented below.
                        properties:
                          autoscalingEnabled:
                            description: Defines whether autoscaling is enabled. The
                              default value is false.
                            type: boolean
                          limitConfig:
                            description: |-
                              Represents the limit configuration of a metastore service.
                              Structure is documented below.
                            properties:
                              maxScalingFactor:
                                description: The maximum scaling factor that the service
                                  will autoscale to. The default value is 6.0.
                                type: number
                              minScalingFactor:
                                description: The minimum scaling factor that the service
                                  will autoscale to. The default value is 0.1.
                                type: number
                            type: object
                        type: object
                      instanceSize:
                        description: |-
                          Metastore instance sizes.
                          Possible values are: EXTRA_SMALL, SMALL, MEDIUM, LARGE, EXTRA_LARGE.
                        type: string
                      scalingFactor:
                        description: Scaling factor, in increments of 0.1 for values
                          less than 1.0, and increments of 1.0 for values greater
                          than 1.0.
                        type: number
                    type: object
                  scheduledBackup:
                    description: |-
                      The configuration of scheduled backup for the metastore service.
                      Structure is documented below.
                    properties:
                      backupLocation:
                        description: A Cloud Storage URI of a folder, in the format
                          gs://<bucket_name>/<path_inside_bucket>. A sub-folder <backup_folder>
                          containing backup files will be stored below it.
                        type: string
                      cronSchedule:
                        description: 'The scheduled interval in Cron format, see https://en.wikipedia.org/wiki/Cron
                          The default is empty: scheduled backup is not enabled. Must
                          be specified to enable scheduled backups.'
                        type: string
                      enabled:
                        description: Defines whether the scheduled backup is enabled.
                          The default value is false.
                        type: boolean
                      timeZone:
                        description: Specifies the time zone to be used when interpreting
                          cronSchedule. Must be a time zone name from the time zone
                          database (https://en.wikipedia.org/wiki/List_of_tz_database_time_zones),
                          e.g. America/Los_Angeles or Africa/Abidjan. If left unspecified,
                          the default is UTC.
                        type: string
                    type: object
                  telemetryConfig:
                    description: |-
                      The configuration specifying telemetry settings for the Dataproc Metastore service. If unspecified defaults to JSON.
                      Structure is documented below.
                    properties:
                      logFormat:
                        description: |-
                          The output format of the Dataproc Metastore service's logs.
                          Default value is JSON.
                          Possible values are: LEGACY, JSON.
                        type: string
                    type: object
                  tier:
                    description: |-
                      The tier of the service.
                      Possible values are: DEVELOPER, ENTERPRISE.
                    type: string
                type: object
              initProvider:
                description: |-
                  THIS IS A BETA FIELD. It will be honored
                  unless the Management Policies feature flag is disabled.
                  InitProvider holds the same fields as ForProvider, with the exception
                  of Identifier and other resource reference fields. The fields that are
                  in InitProvider are merged into ForProvider when the resource is created.
                  The same fields are also added to the terraform ignore_changes hook, to
                  avoid updating them after creation. This is useful for fields that are
                  required on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them, like an
                  autoscaler.
                properties:
                  databaseType:
                    description: |-
                      The database type that the Metastore service stores its data.
                      Default value is MYSQL.
                      Possible values are: MYSQL, SPANNER.
                    type: string
                  deletionProtection:
                    description: Indicates if the dataproc metastore should be protected
                      against accidental deletions.
                    type: boolean
                  encryptionConfig:
                    description: |-
                      Information used to configure the Dataproc Metastore service to encrypt
                      customer data at rest.
                      Structure is documented below.
                    properties:
                      kmsKey:
                        description: |-
                          The fully qualified customer provided Cloud KMS key name to use for customer data encryption.
                          Use the following format: projects/([^/]+)/locations/([^/]+)/keyRings/([^/]+)/cryptoKeys/([^/]+)
                        type: string
                      kmsKeyRef:
                        description: Reference to a CryptoKey in kms to populate kmsKey.
                        properties:
                          name:
                            description: Name of the referenced object.
                            type: string
                          policy:
                            description: Policies for referencing.
                            properties:
                              resolution:
                                default: Required
                                description: |-
                                  Resolution specifies whether resolution of this reference is required.
                                  The default is 'Required', which means the reconcile will fail if the
                                  reference cannot be resolved. 'Optional' means this reference will be
                                  a no-op if it cannot be resolved.
                                enum:
                                - Required
                                - Optional
                                type: string
                              resolve:
                                description: |-
                                  Resolve specifies when this reference should be resolved. The default
                                  is 'IfNotPresent', which will attempt to resolve the reference only when
                                  the corresponding field is not present. Use 'Always' to resolve the
                                  reference on every reconcile.
                                enum:
                                - Always
                                - IfNotPresent
                                type: string
                            type: object
                        required:
                        - name
                        type: object
                      kmsKeySelector:
                        description: Selector for a CryptoKey in kms to populate kmsKey.
                        properties:
                          matchControllerRef:
                            description: |-
                              MatchControllerRef ensures an object with the same controller reference
                              as the selecting object is selected.
                            type: boolean
                          matchLabels:
                            additionalProperties:
                              type: string
                            description: MatchLabels ensures an object with matching
                              labels is selected.
                            type: object
                          policy:
                            description: Policies for selection.
                            properties:
                              resolution:
                                default: Required
                                description: |-
                                  Resolution specifies whether resolution of this reference is required.
                                  The default is 'Required', which means the reconcile will fail if the
                                  reference cannot be resolved. 'Optional' means this reference will be
                                  a no-op if it cannot be resolved.
                                enum:
                                - Required
                                - Optional
                                type: string
                              resolve:
                                description: |-
                                  Resolve specifies when this reference should be resolved. The default
                                  is 'IfNotPresent', which will attempt to resolve the reference only when
                                  the corresponding field is not present. Use 'Always' to resolve the
                                  reference on every reconcile.
                                enum:
                                - Always
                                - IfNotPresent
                                type: string
                            type: object
                        type: object
                    type: object
                  hiveMetastoreConfig:
                    description: |-
                      Configuration information specific to running Hive metastore software as the metastore service.
                      Structure is documented below.
                    properties:
                      auxiliaryVersions:
                        description: |-
                          A mapping of Hive metastore version to the auxiliary version configuration.
                          When specified, a secondary Hive metastore service is created along with the primary service.
                          All auxiliary versions must be less than the service's primary version.
                          The key is the auxiliary service name and it must match the regular expression a-z?.
                          This means that the first character must be a lowercase letter, and all the following characters must be hyphens, lowercase letters, or digits, except the last character, which cannot be a hyphen.
                          Structure is documented below.
                        items:
                          properties:
                            configOverrides:
                              additionalProperties:
                                type: string
                              description: |-
                                A mapping of Hive metastore configuration key-value pairs to apply to the Hive metastore (configured in hive-site.xml).
                                The mappings override system defaults (some keys cannot be overridden)
                              type: object
                              x-kubernetes-map-type: granular
                            key:
                              description: The identifier for this object. Format
                                specified above.
                              type: string
                            version:
                              description: The Hive metastore schema version.
                              type: string
                          type: object
                        type: array
                      configOverrides:
                        additionalProperties:
                          type: string
                        description: |-
                          A mapping of Hive metastore configuration key-value pairs to apply to the Hive metastore (configured in hive-site.xml).
                          The mappings override system defaults (some keys cannot be overridden)
                        type: object
                        x-kubernetes-map-type: granular
                      endpointProtocol:
                        description: |-
                          The protocol to use for the metastore service endpoint. If unspecified, defaults to THRIFT.
                          Default value is THRIFT.
                          Possible values are: THRIFT, GRPC.
                        type: string
                      kerberosConfig:
                        description: |-
                          Information used to configure the Hive metastore service as a service principal in a Kerberos realm.
                          Structure is documented below.
                        properties:
                          keytab:
                            description: |-
                              A Kerberos keytab file that can be used to authenticate a service principal with a Kerberos Key Distribution Center (KDC).
                              Structure is documented below.
                            properties:
                              cloudSecret:
                                description: |-
                                  The relative resource name of a Secret Manager secret version, in the following form:
                                  "projects/{projectNumber}/secrets/{secret_id}/versions/{version_id}".
                                type: string
                            type: object
                          krb5ConfigGcsUri:
                            description: A Cloud Storage URI that specifies the path
                              to a krb5.conf file. It is of the form gs://{bucket_name}/path/to/krb5.conf,
                              although the file does not need to be named krb5.conf
                              explicitly.
                            type: string
                          principal:
                            description: A Kerberos principal that exists in the both
                              the keytab the KDC to authenticate as. A typical principal
                              is of the form "primary/instance@REALM", but there is
                              no exact format.
                            type: string
                        type: object
                      version:
                        description: The Hive metastore schema version.
                        type: string
                    type: object
                  labels:
                    additionalProperties:
                      type: string
                    description: |-
                      User-defined labels for the metastore service.
                      Note: This field is non-authoritative, and will only manage the labels present in your configuration.
                      Please refer to the field effective_labels for all of the labels present on the resource.
                    type: object
                    x-kubernetes-map-type: granular
                  maintenanceWindow:
                    description: |-
                      The one hour maintenance window of the metastore service.
                      This specifies when the service can be restarted for maintenance purposes in UTC time.
                      Maintenance window is not needed for services with the SPANNER database type.
                      Structure is documented below.
                    properties:
                      dayOfWeek:
                        description: |-
                          The day of week, when the window starts.
                          Possible values are: MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY.
                        type: string
                      hourOfDay:
                        description: The hour of day (0-23) when the window starts.
                        type: number
                    type: object
                  metadataIntegration:
                    description: |-
                      The setting that defines how metastore metadata should be integrated with external services and systems.
                      Structure is documented below.
                    properties:
                      dataCatalogConfig:
                        description: |-
                          The integration config for the Data Catalog service.
                          Structure is documented below.
                        properties:
                          enabled:
                            description: Defines whether the metastore metadata should
                              be synced to Data Catalog. The default value is to disable
                              syncing metastore metadata to Data Catalog.
                            type: boolean
                        type: object
                    type: object
                  network:
                    description: |-
                      The relative resource name of the VPC network on which the instance can be accessed. It is specified in the following form:
                      "projects/{projectNumber}/global/networks/{network_id}".
                    type: string
                  networkConfig:
                    description: |-
                      The configuration specifying the network settings for the Dataproc Metastore service.
                      Structure is documented below.
                    properties:
                      consumers:
                        description: |-
                          The consumer-side network configuration for the Dataproc Metastore instance.
                          Structure is documented below.
                        items:
                          properties:
                            subnetwork:
                              description: |-
                                The subnetwork of the customer project from which an IP address is reserved and used as the Dataproc Metastore service's endpoint.
                                It is accessible to hosts in the subnet and to all hosts in a subnet in the same region and same network.
                                There must be at least one IP address available in the subnet's primary range. The subnet is specified in the following form:
                                `projects/{projectNumber}/regions/{region_id}/subnetworks/{subnetwork_id}
                              type: string
                            subnetworkRef:
                              description: Reference to a Subnetwork in compute to
                                populate subnetwork.
                              properties:
                                name:
                                  description: Name of the referenced object.
                                  type: string
                                policy:
                                  description: Policies for referencing.
                                  properties:
                                    resolution:
                                      default: Required
                                      description: |-
                                        Resolution specifies whether resolution of this reference is required.
                                        The default is 'Required', which means the reconcile will fail if the
                                        reference cannot be resolved. 'Optional' means this reference will be
                                        a no-op if it cannot be resolved.
                                      enum:
                                      - Required
                                      - Optional
                                      type: string
                                    resolve:
                                      description: |-
                                        Resolve specifies when this reference should be resolved. The default
                                        is 'IfNotPresent', which will attempt to resolve the reference only when
                                        the corresponding field is not present. Use 'Always' to resolve the
                                        reference on every reconcile.
                                      enum:
                                      - Always
                                      - IfNotPresent
                                      type: string
                                  type: object
                              required:
                              - name
                              type: object
                            subnetworkSelector:
                              description: Selector for a Subnetwork in compute to
                                populate subnetwork.
                              properties:
                                matchControllerRef:
                                  description: |-
                                    MatchControllerRef ensures an object with the same controller reference
                                    as the selecting object is selected.
                                  type: boolean
                                matchLabels:
                                  additionalProperties:
                                    type: string
                                  description: MatchLabels ensures an object with
                                    matching labels is selected.
                                  type: object
                                policy:
                                  description: Policies for selection.
                                  properties:
                                    resolution:
                                      default: Required
                                      description: |-
                                        Resolution specifies whether resolution of this reference is required.
                                        The default is 'Required', which means the reconcile will fail if the
                                        reference cannot be resolved. 'Optional' means this reference will be
                                        a no-op if it cannot be resolved.
                                      enum:
                                      - Required
                                      - Optional
                                      type: string
                                    resolve:
                                      description: |-
                                        Resolve specifies when this reference should be resolved. The default
                                        is 'IfNotPresent', which will attempt to resolve the reference only when
                                        the corresponding field is not present. Use 'Always' to resolve the
                                        reference on every reconcile.
                                      enum:
                                      - Always
                                      - IfNotPresent
                                      type: string
                                  type: object
                              type: object
                          type: object
                        type: array
                    type: object
                  port:
                    description: 'The TCP port at which the metastore service is reached.
                      Default: 9083.'
                    type: number
                  project:
                    description: |-
                      The ID of the project in which the resource belongs.
                      If it is not provided, the provider project is used.
                    type: string
                  releaseChannel:
                    description: |-
                      The release channel of the service. If unspecified, defaults to STABLE.
                      Default value is STABLE.
                      Possible values are: CANARY, STABLE.
                    type: string
                  scalingConfig:
                    description: |-
                      Represents the scaling configuration of a metastore service.
                      Structure is documented below.
                    properties:
                      autoscalingConfig:
                        description: |-
                          Represents the autoscaling configuration of a metastore service.
                          Structure is documented below.
                        properties:
                          autoscalingEnabled:
                            description: Defines whether autoscaling is enabled. The
                              default value is false.
                            type: boolean
                          limitConfig:
                            description: |-
                              Represents the limit configuration of a metastore service.
                              Structure is documented below.
                            properties:
                              maxScalingFactor:
                                description: The maximum scaling factor that the service
                                  will autoscale to. The default value is 6.0.
                                type: number
                              minScalingFactor:
                                description: The minimum scaling factor that the service
                                  will autoscale to. The default value is 0.1.
                                type: number
                            type: object
                        type: object
                      instanceSize:
                        description: |-
                          Metastore instance sizes.
                          Possible values are: EXTRA_SMALL, SMALL, MEDIUM, LARGE, EXTRA_LARGE.
                        type: string
                      scalingFactor:
                        description: Scaling factor, in increments of 0.1 for values
                          less than 1.0, and increments of 1.0 for values greater
                          than 1.0.
                        type: number
                    type: object
                  scheduledBackup:
                    description: |-
                      The configuration of scheduled backup for the metastore service.
                      Structure is documented below.
                    properties:
                      backupLocation:
                        description: A Cloud Storage URI of a folder, in the format
                          gs://<bucket_name>/<path_inside_bucket>. A sub-folder <backup_folder>
                          containing backup files will be stored below it.
                        type: string
                      cronSchedule:
                        description: 'The scheduled interval in Cron format, see https://en.wikipedia.org/wiki/Cron
                          The default is empty: scheduled backup is not enabled. Must
                          be specified to enable scheduled backups.'
                        type: string
                      enabled:
                        description: Defines whether the scheduled backup is enabled.
                          The default value is false.
                        type: boolean
                      timeZone:
                        description: Specifies the time zone to be used when interpreting
                          cronSchedule. Must be a time zone name from the time zone
                          database (https://en.wikipedia.org/wiki/List_of_tz_database_time_zones),
                          e.g. America/Los_Angeles or Africa/Abidjan. If left unspecified,
                          the default is UTC.
                        type: string
                    type: object
                  telemetryConfig:
                    description: |-
                      The configuration specifying telemetry settings for the Dataproc Metastore service. If unspecified defaults to JSON.
                      Structure is documented below.
                    properties:
                      logFormat:
                        description: |-
                          The output format of the Dataproc Metastore service's logs.
                          Default value is JSON.
                          Possible values are: LEGACY, JSON.
                        type: string
                    type: object
                  tier:
                    description: |-
                      The tier of the service.
                      Possible values are: DEVELOPER, ENTERPRISE.
                    type: string
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  This field is planned to replace the DeletionPolicy field in a future
                  release. Currently, both could be set independently and non-default
                  values would be honored if the feature flag is enabled. If both are
                  custom, the DeletionPolicy field will be ignored.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: |-
                  PublishConnectionDetailsTo specifies the connection secret config which
                  contains a name, metadata and a reference to secret store config to
                  which any connection details for this managed resource should be written.
                  Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: |-
                      SecretStoreConfigRef specifies which secret store config should be used
                      for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations are the annotations to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.annotations".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Labels are the labels/tags to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      type:
                        description: |-
                          Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                  This field is planned to be replaced in a future release in favor of
                  PublishConnectionDetailsTo. Currently, both could be set independently
                  and connection details would be published to both without affecting
                  each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: MetastoreServiceStatus defines the observed state of MetastoreService.
            properties:
              atProvider:
                properties:
                  artifactGcsUri:
                    description: A Cloud Storage URI (starting with gs://) that specifies
                      where artifacts related to the metastore service are stored.
                    type: string
                  createTime:
                    description: Output only. The time when the metastore service
                      was created.
                    type: string
                  databaseType:
                    description: |-
                      The database type that the Metastore service stores its data.
                      Default value is MYSQL.
                      Possible values are: MYSQL, SPANNER.
                    type: string
                  deletionProtection:
                    description: Indicates if the dataproc metastore should be protected
                      against accidental deletions.
                    type: boolean
                  effectiveLabels:
                    additionalProperties:
                      type: string
                    type: object
                    x-kubernetes-map-type: granular
                  encryptionConfig:
                    description: |-
                      Information used to configure the Dataproc Metastore service to encrypt
                      customer data at rest.
                      Structure is documented below.
                    properties:
                      kmsKey:
                        description: |-
                          The fully qualified customer provided Cloud KMS key name to use for customer data encryption.
                          Use the following format: projects/([^/]+)/locations/([^/]+)/keyRings/([^/]+)/cryptoKeys/([^/]+)
                        type: string
                    type: object
                  endpointUri:
                    description: The URI of the endpoint used to access the metastore
                      service.
                    type: string
                  hiveMetastoreConfig:
                    description: |-
                      Configuration information specific to running Hive metastore software as the metastore service.
                      Structure is documented below.
                    properties:
                      auxiliaryVersions:
                        description: |-
                          A mapping of Hive metastore version to the auxiliary version configuration.
                          When specified, a secondary Hive metastore service is created along with the primary service.
                          All auxiliary versions must be less than the service's primary version.
                          The key is the auxiliary service name and it must match the regular expression a-z?.
                          This means that the first character must be a lowercase letter, and all the following characters must be hyphens, lowercase letters, or digits, except the last character, which cannot be a hyphen.
                          Structure is documented below.
                        items:
                          properties:
                            configOverrides:
                              additionalProperties:
                                type: string
                              description: |-
                                A mapping of Hive metastore configuration key-value pairs to apply to the Hive metastore (configured in hive-site.xml).
                                The mappings override system defaults (some keys cannot be overridden)
                              type: object
                              x-kubernetes-map-type: granular
                            key:
                              description: The identifier for this object. Format
                                specified above.
                              type: string
                            version:
                              description: The Hive metastore schema version.
                              type: string
                          type: object
                        type: array
                      configOverrides:
                        additionalProperties:
                          type: string
                        description: |-
                          A mapping of Hive metastore configuration key-value pairs to apply to the Hive metastore (configured in hive-site.xml).
                          The mappings override system defaults (some keys cannot be overridden)
                        type: object
                        x-kubernetes-map-type: granular
                      endpointProtocol:
                        description: |-
                          The protocol to use for the metastore service endpoint. If unspecified, defaults to THRIFT.
                          Default value is THRIFT.
                          Possible values are: THRIFT, GRPC.
                        type: string
                      kerberosConfig:
                        description: |-
                          Information used to configure the Hive metastore service as a service principal in a Kerberos realm.
                          Structure is documented below.
                        properties:
                          keytab:
                            description: |-
                              A Kerberos keytab file that can be used to authenticate a service principal with a Kerberos Key Distribution Center (KDC).
                              Structure is documented below.
                            properties:
                              cloudSecret:
                                description: |-
                                  The relative resource name of a Secret Manager secret version, in the following form:
                                  "projects/{projectNumber}/secrets/{secret_id}/versions/{version_id}".
                                type: string
                            type: object
                          krb5ConfigGcsUri:
                            description: A Cloud Storage URI that specifies the path
                              to a krb5.conf file. It is of the form gs://{bucket_name}/path/to/krb5.conf,
                              although the file does not need to be named krb5.conf
                              explicitly.
                            type: string
                          principal:
                            description: A Kerberos principal that exists in the both
                              the keytab the KDC to authenticate as. A typical principal
                              is of the form "primary/instance@REALM", but there is
                              no exact format.
                            type: string
                        type: object
                      version:
                        description: The Hive metastore schema version.
                        type: string
                    type: object
                  id:
                    description: an identifier for the resource with format projects/{{project}}/locations/{{location}}/services/{{service_id}}
                    type: string
                  labels:
                    additionalProperties:
                      type: string
                    description: |-
                      User-defined labels for the metastore service.
                      Note: This field is non-authoritative, and will only manage the labels present in your configuration.
                      Please refer to the field effective_labels for all of the labels present on the resource.
                    type: object
                    x-kubernetes-map-type: granular
                  location:
                    description: |-
                      The location where the metastore service should reside.
                      The default value is global.
                    type: string
                  maintenanceWindow:
                    description: |-
                      The one hour maintenance window of the metastore service.
                      This specifies when the service can be restarted for maintenance purposes in UTC time.
                      Maintenance window is not needed for services with the SPANNER database type.
                      Structure is documented below.
                    properties:
                      dayOfWeek:
                        description: |-
                          The day of week, when the window starts.
                          Possible values are: MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY.
                        type: string
                      hourOfDay:
                        description: The hour of day (0-23) when the window starts.
                        type: number
                    type: object
                  metadataIntegration:
                    description: |-
                      The setting that defines how metastore metadata should be integrated with external services and systems.
                      Structure is documented below.
                    properties:
                      dataCatalogConfig:
                        description: |-
                          The integration config for the Data Catalog service.
                          Structure is documented below.
                        properties:
                          enabled:
                            description: Defines whether the metastore metadata should
                              be synced to Data Catalog. The default value is to disable
                              syncing metastore metadata to Data Catalog.
                            type: boolean
                        type: object
                    type: object
                  name:
                    description: The relative resource name of the metastore service.
                    type: string
                  network:
                    description: |-
                      The relative resource name of the VPC network on which the instance can be accessed. It is specified in the following form:
                      "projects/{projectNumber}/global/networks/{network_id}".
                    type: string
                  networkConfig:
                    description: |-
                      The configuration specifying the network settings for the Dataproc Metastore service.
                      Structure is documented below.
                    properties:
                      consumers:
                        description: |-
                          The consumer-side network configuration for the Dataproc Metastore instance.
                          Structure is documented below.
                        items:
                          properties:
                            endpointUri:
                              description: The URI of the endpoint used to access
                                the metastore service.
                              type: string
                            subnetwork:
                              description: |-
                                The subnetwork of the customer project from which an IP address is reserved and used as the Dataproc Metastore service's endpoint.
                                It is accessible to hosts in the subnet and to all hosts in a subnet in the same region and same network.
                                There must be at least one IP address available in the subnet's primary range. The subnet is specified in the following form:
                                `projects/{projectNumber}/regions/{region_id}/subnetworks/{subnetwork_id}
                              type: string
                          type: object
                        type: array
                    type: object
                  port:
                    description: 'The TCP port at which the metastore service is reached.
                      Default: 9083.'
                    type: number
                  project:
                    description: |-
                      The ID of the project in which the resource belongs.
                      If it is not provided, the provider project is used.
                    type: string
                  releaseChannel:
                    description: |-
                      The release channel of the service. If unspecified, defaults to STABLE.
                      Default value is STABLE.
                      Possible values are: CANARY, STABLE.
                    type: string
                  scalingConfig:
                    description: |-
                      Represents the scaling configuration of a metastore service.
                      Structure is documented below.
                    properties:
                      autoscalingConfig:
                        description: |-
                          Represents the autoscaling configuration of a metastore service.
                          Structure is documented below.
                        properties:
                          autoscalingEnabled:
                            description: Defines whether autoscaling is enabled. The
                              default value is false.
                            type: boolean
                          autoscalingFactor:
                            description: |-
                              (Output)
                              Output only. The scaling factor of a service with autoscaling enabled.
                            type: number
                          limitConfig:
                            description: |-
                              Represents the limit configuration of a metastore service.
                              Structure is documented below.
                            properties:
                              maxScalingFactor:
                                description: The maximum scaling factor that the service
                                  will autoscale to. The default value is 6.0.
                                type: number
                              minScalingFactor:
                                description: The minimum scaling factor that the service
                                  will autoscale to. The default value is 0.1.
                                type: number
                            type: object
                        type: object
                      instanceSize:
                        description: |-
                          Metastore instance sizes.
                          Possible values are: EXTRA_SMALL, SMALL, MEDIUM, LARGE, EXTRA_LARGE.
                        type: string
                      scalingFactor:
                        description: Scaling factor, in increments of 0.1 for values
                          less than 1.0, and increments of 1.0 for values greater
                          than 1.0.
                        type: number
                    type: object
                  scheduledBackup:
                    description: |-
                      The configuration of scheduled backup for the metastore service.
                      Structure is documented below.
                    properties:
                      backupLocation:
                        description: A Cloud Storage URI of a folder, in the format
                          gs://<bucket_name>/<path_inside_bucket>. A sub-folder <backup_folder>
                          containing backup files will be stored below it.
                        type: string
                      cronSchedule:
                        description: 'The scheduled interval in Cron format, see https://en.wikipedia.org/wiki/Cron
                          The default is empty: scheduled backup is not enabled. Must
                          be specified to enable scheduled backups.'
                        type: string
                      enabled:
                        description: Defines whether the scheduled backup is enabled.
                          The default value is false.
                        type: boolean
                      timeZone:
                        description: Specifies the time zone to be used when interpreting
                          cronSchedule. Must be a time zone name from the time zone
                          database (https://en.wikipedia.org/wiki/List_of_tz_database_time_zones),
                          e.g. America/Los_Angeles or Africa/Abidjan. If left unspecified,
                          the default is UTC.
                        type: string
                    type: object
                  state:
                    description: The current state of the metastore service.
                    type: string
                  stateMessage:
                    description: Additional information about the current state of
                      the metastore service, if available.
                    type: string
                  telemetryConfig:
                    description: |-
                      The configuration specifying telemetry settings for the Dataproc Metastore service. If unspecified defaults to JSON.
                      Structure is documented below.
                    properties:
                      logFormat:
                        description: |-
                          The output format of the Dataproc Metastore service's logs.
                          Default value is JSON.
                          Possible values are: LEGACY, JSON.
                        type: string
                    type: object
                  terraformLabels:
                    additionalProperties:
                      type: string
                    description: |-
                      The combination of labels configured directly on the resource
                      and default labels configured on the provider.
                    type: object
                    x-kubernetes-map-type: granular
                  tier:
                    description: |-
                      The tier of the service.
                      Possible values are: DEVELOPER, ENTERPRISE.
                    type: string
                  uid:
                    description: The globally unique resource identifier of the metastore
                      service.
                    type: string
                  updateTime:
                    description: Output only. The time when the metastore service
                      was last updated.
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: |-
                  ObservedGeneration is the latest metadata.generation
                  which resulted in either a ready state, or stalled due to error
                  it can not recover from without human intervention.
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: false
    subresources:
      status: {}
