---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.11.1
  creationTimestamp: null
  name: metricdescriptors.monitoring.gcp.upbound.io
spec:
  group: monitoring.gcp.upbound.io
  names:
    categories:
    - crossplane
    - managed
    - gcp
    kind: MetricDescriptor
    listKind: MetricDescriptorList
    plural: metricdescriptors
    singular: metricdescriptor
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: MetricDescriptor is the Schema for the MetricDescriptors API.
          Defines a metric type and its schema.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: MetricDescriptorSpec defines the desired state of MetricDescriptor
            properties:
              deletionPolicy:
                default: Delete
                description: DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource.
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  description:
                    description: A detailed description of the metric, which can be
                      used in documentation.
                    type: string
                  displayName:
                    description: A concise name for the metric, which can be displayed
                      in user interfaces. Use sentence case without an ending period,
                      for example "Request count".
                    type: string
                  labels:
                    description: The set of labels that can be used to describe a
                      specific instance of this metric type. In order to delete a
                      label, the entire resource must be deleted, then created with
                      the desired labels. Structure is documented below.
                    items:
                      properties:
                        description:
                          description: A human-readable description for the label.
                          type: string
                        key:
                          description: The key for this label. The key must not exceed
                            100 characters. The first character of the key must be
                            an upper- or lower-case letter, the remaining characters
                            must be letters, digits or underscores, and the key must
                            match the regular expression [a-zA-Z][a-zA-Z0-9_]*
                          type: string
                        valueType:
                          description: The type of data that can be assigned to the
                            label. Default value is STRING. Possible values are STRING,
                            BOOL, and INT64.
                          type: string
                      required:
                      - key
                      type: object
                    type: array
                  launchStage:
                    description: The launch stage of the metric definition. Possible
                      values are LAUNCH_STAGE_UNSPECIFIED, UNIMPLEMENTED, PRELAUNCH,
                      EARLY_ACCESS, ALPHA, BETA, GA, and DEPRECATED.
                    type: string
                  metadata:
                    description: Metadata which can be used to guide usage of the
                      metric. Structure is documented below.
                    items:
                      properties:
                        ingestDelay:
                          description: The delay of data points caused by ingestion.
                            Data points older than this age are guaranteed to be ingested
                            and available to be read, excluding data loss due to errors.
                            In [duration format](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf?&_ga=2.264881487.1507873253.1593446723-935052455.1591817775#google.protobuf.Duration).
                          type: string
                        samplePeriod:
                          description: The sampling period of metric data points.
                            For metrics which are written periodically, consecutive
                            data points are stored at this time interval, excluding
                            data loss due to errors. Metrics with a higher granularity
                            have a smaller sampling period. In [duration format](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf?&_ga=2.264881487.1507873253.1593446723-935052455.1591817775#google.protobuf.Duration).
                          type: string
                      type: object
                    type: array
                  metricKind:
                    description: Whether the metric records instantaneous values,
                      changes to a value, etc. Some combinations of metricKind and
                      valueType might not be supported. Possible values are METRIC_KIND_UNSPECIFIED,
                      GAUGE, DELTA, and CUMULATIVE.
                    type: string
                  project:
                    description: The ID of the project in which the resource belongs.
                      If it is not provided, the provider project is used.
                    type: string
                  type:
                    description: The metric type, including its DNS name prefix. The
                      type is not URL-encoded. All service defined metrics must be
                      prefixed with the service name, in the format of {service name}/{relative
                      metric name}, such as cloudsql.googleapis.com/database/cpu/utilization.
                      The relative metric name must have only upper and lower-case
                      letters, digits, '/' and underscores '_' are allowed. Additionally,
                      the maximum number of characters allowed for the relative_metric_name
                      is 100. All user-defined metric types have the DNS name custom.googleapis.com,
                      external.googleapis.com, or logging.googleapis.com/user/.
                    type: string
                  unit:
                    description: The units in which the metric value is reported.
                      It is only applicable if the valueType is INT64, DOUBLE, or
                      DISTRIBUTION. The unit defines the representation of the stored
                      metric values. Different systems may scale the values to be
                      more easily displayed (so a value of 0.02KBy might be displayed
                      as 20By, and a value of 3523KBy might be displayed as 3.5MBy).
                      However, if the unit is KBy, then the value of the metric is
                      always in thousands of bytes, no matter how it may be displayed.
                      If you want a custom metric to record the exact number of CPU-seconds
                      used by a job, you can create an INT64 CUMULATIVE metric whose
                      unit is s{CPU} (or equivalently 1s{CPU} or just s). If the job
                      uses 12,005 CPU-seconds, then the value is written as 12005.
                      Alternatively, if you want a custom metric to record data in
                      a more granular way, you can create a DOUBLE CUMULATIVE metric
                      whose unit is ks{CPU}, and then write the value 12.005 (which
                      is 12005/1000), or use Kis{CPU} and write 11.723 (which is 12005/1024).
                      The supported units are a subset of The Unified Code for Units
                      of Measure standard. More info can be found in the API documentation
                      (https://cloud.google.com/monitoring/api/ref_v3/rest/v3/projects.metricDescriptors).
                    type: string
                  valueType:
                    description: Whether the measurement is an integer, a floating-point
                      number, etc. Some combinations of metricKind and valueType might
                      not be supported. Possible values are BOOL, INT64, DOUBLE, STRING,
                      and DISTRIBUTION.
                    type: string
                required:
                - description
                - displayName
                - metricKind
                - type
                - valueType
                type: object
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: MetricDescriptorStatus defines the observed state of MetricDescriptor.
            properties:
              atProvider:
                properties:
                  id:
                    description: an identifier for the resource with format {{name}}
                    type: string
                  monitoredResourceTypes:
                    description: If present, then a time series, which is identified
                      partially by a metric type and a MonitoredResourceDescriptor,
                      that is associated with this metric type can only be associated
                      with one of the monitored resource types listed here. This field
                      allows time series to be associated with the intersection of
                      this metric type and the monitored resource types in this list.
                    items:
                      type: string
                    type: array
                  name:
                    description: The resource name of the metric descriptor.
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
