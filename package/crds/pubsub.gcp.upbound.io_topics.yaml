---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: topics.pubsub.gcp.upbound.io
spec:
  group: pubsub.gcp.upbound.io
  names:
    categories:
    - crossplane
    - managed
    - gcp
    kind: Topic
    listKind: TopicList
    plural: topics
    singular: topic
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: Topic is the Schema for the Topics API. A named resource to which
          messages are sent by publishers.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: TopicSpec defines the desired state of Topic
            properties:
              deletionPolicy:
                default: Delete
                description: |-
                  DeletionPolicy specifies what will happen to the underlying external
                  when this managed resource is deleted - either "Delete" or "Orphan" the
                  external resource.
                  This field is planned to be deprecated in favor of the ManagementPolicies
                  field in a future release. Currently, both could be set independently and
                  non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  ingestionDataSourceSettings:
                    description: |-
                      Settings for ingestion from a data source into this topic.
                      Structure is documented below.
                    items:
                      properties:
                        awsKinesis:
                          description: |-
                            Settings for ingestion from Amazon Kinesis Data Streams.
                            Structure is documented below.
                          items:
                            properties:
                              awsRoleArn:
                                description: |-
                                  AWS role ARN to be used for Federated Identity authentication with
                                  Kinesis. Check the Pub/Sub docs for how to set up this role and the
                                  required permissions that need to be attached to it.
                                type: string
                              consumerArn:
                                description: |-
                                  The Kinesis consumer ARN to used for ingestion in
                                  Enhanced Fan-Out mode. The consumer must be already
                                  created and ready to be used.
                                type: string
                              gcpServiceAccount:
                                description: |-
                                  The GCP service account to be used for Federated Identity authentication
                                  with Kinesis (via a AssumeRoleWithWebIdentity call for the provided
                                  role). The awsRoleArn must be set up with accounts.google.com:sub
                                  equals to this service account number.
                                type: string
                              streamArn:
                                description: The Kinesis stream ARN to ingest data
                                  from.
                                type: string
                            type: object
                          type: array
                      type: object
                    type: array
                  kmsKeyName:
                    description: |-
                      The resource name of the Cloud KMS CryptoKey to be used to protect access
                      to messages published on this topic. Your project's PubSub service account
                      (service-{{PROJECT_NUMBER}}@gcp-sa-pubsub.iam.gserviceaccount.com) must have
                      roles/cloudkms.cryptoKeyEncrypterDecrypter to use this feature.
                      The expected format is projects/*/locations/*/keyRings/*/cryptoKeys/*
                    type: string
                  kmsKeyNameRef:
                    description: Reference to a CryptoKey in kms to populate kmsKeyName.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  kmsKeyNameSelector:
                    description: Selector for a CryptoKey in kms to populate kmsKeyName.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  labels:
                    additionalProperties:
                      type: string
                    description: A set of key/value label pairs to assign to this
                      Topic.
                    type: object
                    x-kubernetes-map-type: granular
                  messageRetentionDuration:
                    description: |-
                      Indicates the minimum duration to retain a message after it is published
                      to the topic. If this field is set, messages published to the topic in
                      the last messageRetentionDuration are always available to subscribers.
                      For instance, it allows any attached subscription to seek to a timestamp
                      that is up to messageRetentionDuration in the past. If this field is not
                      set, message retention is controlled by settings on individual subscriptions.
                      The rotation period has the format of a decimal number, followed by the
                      letter s (seconds). Cannot be more than 31 days or less than 10 minutes.
                    type: string
                  messageStoragePolicy:
                    description: |-
                      Policy constraining the set of Google Cloud Platform regions where
                      messages published to the topic may be stored. If not present, then no
                      constraints are in effect.
                      Structure is documented below.
                    items:
                      properties:
                        allowedPersistenceRegions:
                          description: |-
                            A list of IDs of GCP regions where messages that are published to
                            the topic may be persisted in storage. Messages published by
                            publishers running in non-allowed GCP regions (or running outside
                            of GCP altogether) will be routed for storage in one of the
                            allowed regions. An empty list means that no regions are allowed,
                            and is not a valid configuration.
                          items:
                            type: string
                          type: array
                      type: object
                    type: array
                  project:
                    description: |-
                      The ID of the project in which the resource belongs.
                      If it is not provided, the provider project is used.
                    type: string
                  schemaSettings:
                    description: |-
                      Settings for validating messages published against a schema.
                      Structure is documented below.
                    items:
                      properties:
                        encoding:
                          description: |-
                            The encoding of messages validated against schema.
                            Default value is ENCODING_UNSPECIFIED.
                            Possible values are: ENCODING_UNSPECIFIED, JSON, BINARY.
                          type: string
                        schema:
                          description: |-
                            The name of the schema that messages published should be
                            validated against. Format is projects/{project}/schemas/{schema}.
                            The value of this field will be deleted-schema
                            if the schema has been deleted.
                          type: string
                      type: object
                    type: array
                type: object
              initProvider:
                description: |-
                  THIS IS A BETA FIELD. It will be honored
                  unless the Management Policies feature flag is disabled.
                  InitProvider holds the same fields as ForProvider, with the exception
                  of Identifier and other resource reference fields. The fields that are
                  in InitProvider are merged into ForProvider when the resource is created.
                  The same fields are also added to the terraform ignore_changes hook, to
                  avoid updating them after creation. This is useful for fields that are
                  required on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them, like an
                  autoscaler.
                properties:
                  ingestionDataSourceSettings:
                    description: |-
                      Settings for ingestion from a data source into this topic.
                      Structure is documented below.
                    items:
                      properties:
                        awsKinesis:
                          description: |-
                            Settings for ingestion from Amazon Kinesis Data Streams.
                            Structure is documented below.
                          items:
                            properties:
                              awsRoleArn:
                                description: |-
                                  AWS role ARN to be used for Federated Identity authentication with
                                  Kinesis. Check the Pub/Sub docs for how to set up this role and the
                                  required permissions that need to be attached to it.
                                type: string
                              consumerArn:
                                description: |-
                                  The Kinesis consumer ARN to used for ingestion in
                                  Enhanced Fan-Out mode. The consumer must be already
                                  created and ready to be used.
                                type: string
                              gcpServiceAccount:
                                description: |-
                                  The GCP service account to be used for Federated Identity authentication
                                  with Kinesis (via a AssumeRoleWithWebIdentity call for the provided
                                  role). The awsRoleArn must be set up with accounts.google.com:sub
                                  equals to this service account number.
                                type: string
                              streamArn:
                                description: The Kinesis stream ARN to ingest data
                                  from.
                                type: string
                            type: object
                          type: array
                      type: object
                    type: array
                  kmsKeyName:
                    description: |-
                      The resource name of the Cloud KMS CryptoKey to be used to protect access
                      to messages published on this topic. Your project's PubSub service account
                      (service-{{PROJECT_NUMBER}}@gcp-sa-pubsub.iam.gserviceaccount.com) must have
                      roles/cloudkms.cryptoKeyEncrypterDecrypter to use this feature.
                      The expected format is projects/*/locations/*/keyRings/*/cryptoKeys/*
                    type: string
                  kmsKeyNameRef:
                    description: Reference to a CryptoKey in kms to populate kmsKeyName.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  kmsKeyNameSelector:
                    description: Selector for a CryptoKey in kms to populate kmsKeyName.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  labels:
                    additionalProperties:
                      type: string
                    description: A set of key/value label pairs to assign to this
                      Topic.
                    type: object
                    x-kubernetes-map-type: granular
                  messageRetentionDuration:
                    description: |-
                      Indicates the minimum duration to retain a message after it is published
                      to the topic. If this field is set, messages published to the topic in
                      the last messageRetentionDuration are always available to subscribers.
                      For instance, it allows any attached subscription to seek to a timestamp
                      that is up to messageRetentionDuration in the past. If this field is not
                      set, message retention is controlled by settings on individual subscriptions.
                      The rotation period has the format of a decimal number, followed by the
                      letter s (seconds). Cannot be more than 31 days or less than 10 minutes.
                    type: string
                  messageStoragePolicy:
                    description: |-
                      Policy constraining the set of Google Cloud Platform regions where
                      messages published to the topic may be stored. If not present, then no
                      constraints are in effect.
                      Structure is documented below.
                    items:
                      properties:
                        allowedPersistenceRegions:
                          description: |-
                            A list of IDs of GCP regions where messages that are published to
                            the topic may be persisted in storage. Messages published by
                            publishers running in non-allowed GCP regions (or running outside
                            of GCP altogether) will be routed for storage in one of the
                            allowed regions. An empty list means that no regions are allowed,
                            and is not a valid configuration.
                          items:
                            type: string
                          type: array
                      type: object
                    type: array
                  project:
                    description: |-
                      The ID of the project in which the resource belongs.
                      If it is not provided, the provider project is used.
                    type: string
                  schemaSettings:
                    description: |-
                      Settings for validating messages published against a schema.
                      Structure is documented below.
                    items:
                      properties:
                        encoding:
                          description: |-
                            The encoding of messages validated against schema.
                            Default value is ENCODING_UNSPECIFIED.
                            Possible values are: ENCODING_UNSPECIFIED, JSON, BINARY.
                          type: string
                        schema:
                          description: |-
                            The name of the schema that messages published should be
                            validated against. Format is projects/{project}/schemas/{schema}.
                            The value of this field will be deleted-schema
                            if the schema has been deleted.
                          type: string
                      type: object
                    type: array
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  This field is planned to replace the DeletionPolicy field in a future
                  release. Currently, both could be set independently and non-default
                  values would be honored if the feature flag is enabled. If both are
                  custom, the DeletionPolicy field will be ignored.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: |-
                  PublishConnectionDetailsTo specifies the connection secret config which
                  contains a name, metadata and a reference to secret store config to
                  which any connection details for this managed resource should be written.
                  Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: |-
                      SecretStoreConfigRef specifies which secret store config should be used
                      for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations are the annotations to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.annotations".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Labels are the labels/tags to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      type:
                        description: |-
                          Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                  This field is planned to be replaced in a future release in favor of
                  PublishConnectionDetailsTo. Currently, both could be set independently
                  and connection details would be published to both without affecting
                  each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: TopicStatus defines the observed state of Topic.
            properties:
              atProvider:
                properties:
                  effectiveLabels:
                    additionalProperties:
                      type: string
                    description: for all of the labels present on the resource.
                    type: object
                    x-kubernetes-map-type: granular
                  id:
                    description: an identifier for the resource with format projects/{{project}}/topics/{{name}}
                    type: string
                  ingestionDataSourceSettings:
                    description: |-
                      Settings for ingestion from a data source into this topic.
                      Structure is documented below.
                    items:
                      properties:
                        awsKinesis:
                          description: |-
                            Settings for ingestion from Amazon Kinesis Data Streams.
                            Structure is documented below.
                          items:
                            properties:
                              awsRoleArn:
                                description: |-
                                  AWS role ARN to be used for Federated Identity authentication with
                                  Kinesis. Check the Pub/Sub docs for how to set up this role and the
                                  required permissions that need to be attached to it.
                                type: string
                              consumerArn:
                                description: |-
                                  The Kinesis consumer ARN to used for ingestion in
                                  Enhanced Fan-Out mode. The consumer must be already
                                  created and ready to be used.
                                type: string
                              gcpServiceAccount:
                                description: |-
                                  The GCP service account to be used for Federated Identity authentication
                                  with Kinesis (via a AssumeRoleWithWebIdentity call for the provided
                                  role). The awsRoleArn must be set up with accounts.google.com:sub
                                  equals to this service account number.
                                type: string
                              streamArn:
                                description: The Kinesis stream ARN to ingest data
                                  from.
                                type: string
                            type: object
                          type: array
                      type: object
                    type: array
                  kmsKeyName:
                    description: |-
                      The resource name of the Cloud KMS CryptoKey to be used to protect access
                      to messages published on this topic. Your project's PubSub service account
                      (service-{{PROJECT_NUMBER}}@gcp-sa-pubsub.iam.gserviceaccount.com) must have
                      roles/cloudkms.cryptoKeyEncrypterDecrypter to use this feature.
                      The expected format is projects/*/locations/*/keyRings/*/cryptoKeys/*
                    type: string
                  labels:
                    additionalProperties:
                      type: string
                    description: A set of key/value label pairs to assign to this
                      Topic.
                    type: object
                    x-kubernetes-map-type: granular
                  messageRetentionDuration:
                    description: |-
                      Indicates the minimum duration to retain a message after it is published
                      to the topic. If this field is set, messages published to the topic in
                      the last messageRetentionDuration are always available to subscribers.
                      For instance, it allows any attached subscription to seek to a timestamp
                      that is up to messageRetentionDuration in the past. If this field is not
                      set, message retention is controlled by settings on individual subscriptions.
                      The rotation period has the format of a decimal number, followed by the
                      letter s (seconds). Cannot be more than 31 days or less than 10 minutes.
                    type: string
                  messageStoragePolicy:
                    description: |-
                      Policy constraining the set of Google Cloud Platform regions where
                      messages published to the topic may be stored. If not present, then no
                      constraints are in effect.
                      Structure is documented below.
                    items:
                      properties:
                        allowedPersistenceRegions:
                          description: |-
                            A list of IDs of GCP regions where messages that are published to
                            the topic may be persisted in storage. Messages published by
                            publishers running in non-allowed GCP regions (or running outside
                            of GCP altogether) will be routed for storage in one of the
                            allowed regions. An empty list means that no regions are allowed,
                            and is not a valid configuration.
                          items:
                            type: string
                          type: array
                      type: object
                    type: array
                  project:
                    description: |-
                      The ID of the project in which the resource belongs.
                      If it is not provided, the provider project is used.
                    type: string
                  schemaSettings:
                    description: |-
                      Settings for validating messages published against a schema.
                      Structure is documented below.
                    items:
                      properties:
                        encoding:
                          description: |-
                            The encoding of messages validated against schema.
                            Default value is ENCODING_UNSPECIFIED.
                            Possible values are: ENCODING_UNSPECIFIED, JSON, BINARY.
                          type: string
                        schema:
                          description: |-
                            The name of the schema that messages published should be
                            validated against. Format is projects/{project}/schemas/{schema}.
                            The value of this field will be deleted-schema
                            if the schema has been deleted.
                          type: string
                      type: object
                    type: array
                  terraformLabels:
                    additionalProperties:
                      type: string
                    description: |-
                      The combination of labels configured directly on the resource
                      and default labels configured on the provider.
                    type: object
                    x-kubernetes-map-type: granular
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: |-
                  ObservedGeneration is the latest metadata.generation
                  which resulted in either a ready state, or stalled due to error
                  it can not recover from without human intervention.
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1beta2
    schema:
      openAPIV3Schema:
        description: Topic is the Schema for the Topics API. A named resource to which
          messages are sent by publishers.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: TopicSpec defines the desired state of Topic
            properties:
              deletionPolicy:
                default: Delete
                description: |-
                  DeletionPolicy specifies what will happen to the underlying external
                  when this managed resource is deleted - either "Delete" or "Orphan" the
                  external resource.
                  This field is planned to be deprecated in favor of the ManagementPolicies
                  field in a future release. Currently, both could be set independently and
                  non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  ingestionDataSourceSettings:
                    description: |-
                      Settings for ingestion from a data source into this topic.
                      Structure is documented below.
                    properties:
                      awsKinesis:
                        description: |-
                          Settings for ingestion from Amazon Kinesis Data Streams.
                          Structure is documented below.
                        properties:
                          awsRoleArn:
                            description: |-
                              AWS role ARN to be used for Federated Identity authentication with
                              MSK. Check the Pub/Sub docs for how to set up this role and the
                              required permissions that need to be attached to it.
                            type: string
                          consumerArn:
                            description: |-
                              The Kinesis consumer ARN to used for ingestion in
                              Enhanced Fan-Out mode. The consumer must be already
                              created and ready to be used.
                            type: string
                          gcpServiceAccount:
                            description: |-
                              The GCP service account to be used for Federated Identity authentication
                              with Confluent Cloud.
                            type: string
                          streamArn:
                            description: The Kinesis stream ARN to ingest data from.
                            type: string
                        type: object
                      awsMsk:
                        description: |-
                          Settings for ingestion from Amazon Managed Streaming for Apache Kafka.
                          Structure is documented below.
                        properties:
                          awsRoleArn:
                            description: |-
                              AWS role ARN to be used for Federated Identity authentication with
                              MSK. Check the Pub/Sub docs for how to set up this role and the
                              required permissions that need to be attached to it.
                            type: string
                          clusterArn:
                            description: ARN that uniquely identifies the MSK cluster.
                            type: string
                          gcpServiceAccount:
                            description: |-
                              The GCP service account to be used for Federated Identity authentication
                              with Confluent Cloud.
                            type: string
                          topic:
                            description: Name of the Confluent Cloud topic that Pub/Sub
                              will import from.
                            type: string
                        type: object
                      azureEventHubs:
                        description: |-
                          Settings for ingestion from Azure Event Hubs.
                          Structure is documented below.
                        properties:
                          clientId:
                            description: The Azure event hub client ID to use for
                              ingestion.
                            type: string
                          eventHub:
                            description: The Azure event hub to ingest data from.
                            type: string
                          gcpServiceAccount:
                            description: |-
                              The GCP service account to be used for Federated Identity authentication
                              with Confluent Cloud.
                            type: string
                          namespace:
                            description: The Azure event hub namespace to ingest data
                              from.
                            type: string
                          resourceGroup:
                            description: The name of the resource group within an
                              Azure subscription.
                            type: string
                          subscriptionId:
                            description: The Azure event hub subscription ID to use
                              for ingestion.
                            type: string
                          tenantId:
                            description: The Azure event hub tenant ID to use for
                              ingestion.
                            type: string
                        type: object
                      cloudStorage:
                        description: |-
                          Settings for ingestion from Cloud Storage.
                          Structure is documented below.
                        properties:
                          avroFormat:
                            description: |-
                              Configuration for reading Cloud Storage data in Avro binary format. The
                              bytes of each object will be set to the data field of a Pub/Sub message.
                            type: object
                          bucket:
                            description: |-
                              Cloud Storage bucket. The bucket name must be without any
                              prefix like "gs://". See the bucket naming requirements:
                              https://cloud.google.com/storage/docs/buckets#naming.
                            type: string
                          matchGlob:
                            description: |-
                              Glob pattern used to match objects that will be ingested. If unset, all
                              objects will be ingested. See the supported patterns:
                              https://cloud.google.com/storage/docs/json_api/v1/objects/list#list-objects-and-prefixes-using-glob
                            type: string
                          minimumObjectCreateTime:
                            description: |-
                              The timestamp set in RFC3339 text format. If set, only objects with a
                              larger or equal timestamp will be ingested. Unset by default, meaning
                              all objects will be ingested.
                            type: string
                          pubsubAvroFormat:
                            description: |-
                              Configuration for reading Cloud Storage data written via Cloud Storage
                              subscriptions(See https://cloud.google.com/pubsub/docs/cloudstorage). The
                              data and attributes fields of the originally exported Pub/Sub message
                              will be restored when publishing.
                            type: object
                          textFormat:
                            description: |-
                              Configuration for reading Cloud Storage data in text format. Each line of
                              text as specified by the delimiter will be set to the data field of a
                              Pub/Sub message.
                              Structure is documented below.
                            properties:
                              delimiter:
                                description: |-
                                  The delimiter to use when using the 'text' format. Each line of text as
                                  specified by the delimiter will be set to the 'data' field of a Pub/Sub
                                  message. When unset, '\n' is used.
                                type: string
                            type: object
                        type: object
                      confluentCloud:
                        description: |-
                          Settings for ingestion from Confluent Cloud.
                          Structure is documented below.
                        properties:
                          bootstrapServer:
                            description: The Confluent Cloud bootstrap server. The
                              format is url:port.
                            type: string
                          clusterId:
                            description: The Confluent Cloud cluster ID.
                            type: string
                          gcpServiceAccount:
                            description: |-
                              The GCP service account to be used for Federated Identity authentication
                              with Confluent Cloud.
                            type: string
                          identityPoolId:
                            description: Identity pool ID to be used for Federated
                              Identity authentication with Confluent Cloud.
                            type: string
                          topic:
                            description: Name of the Confluent Cloud topic that Pub/Sub
                              will import from.
                            type: string
                        type: object
                      platformLogsSettings:
                        description: |-
                          Settings for Platform Logs regarding ingestion to Pub/Sub. If unset,
                          no Platform Logs will be generated.'
                          Structure is documented below.
                        properties:
                          severity:
                            description: |-
                              The minimum severity level of Platform Logs that will be written. If unspecified,
                              no Platform Logs will be written.
                              Default value is SEVERITY_UNSPECIFIED.
                              Possible values are: SEVERITY_UNSPECIFIED, DISABLED, DEBUG, INFO, WARNING, ERROR.
                            type: string
                        type: object
                    type: object
                  kmsKeyName:
                    description: |-
                      The resource name of the Cloud KMS CryptoKey to be used to protect access
                      to messages published on this topic. Your project's PubSub service account
                      (service-{{PROJECT_NUMBER}}@gcp-sa-pubsub.iam.gserviceaccount.com) must have
                      roles/cloudkms.cryptoKeyEncrypterDecrypter to use this feature.
                      The expected format is projects/*/locations/*/keyRings/*/cryptoKeys/*
                    type: string
                  kmsKeyNameRef:
                    description: Reference to a CryptoKey in kms to populate kmsKeyName.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  kmsKeyNameSelector:
                    description: Selector for a CryptoKey in kms to populate kmsKeyName.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  labels:
                    additionalProperties:
                      type: string
                    description: A set of key/value label pairs to assign to this
                      Topic.
                    type: object
                    x-kubernetes-map-type: granular
                  messageRetentionDuration:
                    description: |-
                      Indicates the minimum duration to retain a message after it is published
                      to the topic. If this field is set, messages published to the topic in
                      the last messageRetentionDuration are always available to subscribers.
                      For instance, it allows any attached subscription to seek to a timestamp
                      that is up to messageRetentionDuration in the past. If this field is not
                      set, message retention is controlled by settings on individual subscriptions.
                      The rotation period has the format of a decimal number, followed by the
                      letter s (seconds). Cannot be more than 31 days or less than 10 minutes.
                    type: string
                  messageStoragePolicy:
                    description: |-
                      Policy constraining the set of Google Cloud Platform regions where
                      messages published to the topic may be stored. If not present, then no
                      constraints are in effect.
                      Structure is documented below.
                    properties:
                      allowedPersistenceRegions:
                        description: |-
                          A list of IDs of GCP regions where messages that are published to
                          the topic may be persisted in storage. Messages published by
                          publishers running in non-allowed GCP regions (or running outside
                          of GCP altogether) will be routed for storage in one of the
                          allowed regions. An empty list means that no regions are allowed,
                          and is not a valid configuration.
                        items:
                          type: string
                        type: array
                        x-kubernetes-list-type: set
                      enforceInTransit:
                        description: |-
                          If true, allowedPersistenceRegions is also used to enforce in-transit
                          guarantees for messages. That is, Pub/Sub will fail topics.publish
                          operations on this topic and subscribe operations on any subscription
                          attached to this topic in any region that is not in allowedPersistenceRegions.
                        type: boolean
                    type: object
                  messageTransforms:
                    description: |-
                      Transforms to be applied to messages published to the topic. Transforms are applied in the
                      order specified.
                      Structure is documented below.
                    items:
                      properties:
                        disabled:
                          description: |-
                            Controls whether or not to use this transform. If not set or false,
                            the transform will be applied to messages. Default: true.
                          type: boolean
                        javascriptUdf:
                          description: |-
                            Javascript User Defined Function. If multiple Javascript UDFs are specified on a resource,
                            each one must have a unique function_name.
                            Structure is documented below.
                          properties:
                            code:
                              description: |-
                                JavaScript code that contains a function function_name with the
                                following signature:
                              type: string
                            functionName:
                              description: Name of the JavaScript function that should
                                be applied to Pub/Sub messages.
                              type: string
                          type: object
                      type: object
                    type: array
                  project:
                    description: |-
                      The ID of the project in which the resource belongs.
                      If it is not provided, the provider project is used.
                    type: string
                  schemaSettings:
                    description: |-
                      Settings for validating messages published against a schema.
                      Structure is documented below.
                    properties:
                      encoding:
                        description: |-
                          The encoding of messages validated against schema.
                          Default value is ENCODING_UNSPECIFIED.
                          Possible values are: ENCODING_UNSPECIFIED, JSON, BINARY.
                        type: string
                      schema:
                        description: |-
                          The name of the schema that messages published should be
                          validated against. Format is projects/{project}/schemas/{schema}.
                          The value of this field will be deleted-schema
                          if the schema has been deleted.
                        type: string
                    type: object
                type: object
              initProvider:
                description: |-
                  THIS IS A BETA FIELD. It will be honored
                  unless the Management Policies feature flag is disabled.
                  InitProvider holds the same fields as ForProvider, with the exception
                  of Identifier and other resource reference fields. The fields that are
                  in InitProvider are merged into ForProvider when the resource is created.
                  The same fields are also added to the terraform ignore_changes hook, to
                  avoid updating them after creation. This is useful for fields that are
                  required on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them, like an
                  autoscaler.
                properties:
                  ingestionDataSourceSettings:
                    description: |-
                      Settings for ingestion from a data source into this topic.
                      Structure is documented below.
                    properties:
                      awsKinesis:
                        description: |-
                          Settings for ingestion from Amazon Kinesis Data Streams.
                          Structure is documented below.
                        properties:
                          awsRoleArn:
                            description: |-
                              AWS role ARN to be used for Federated Identity authentication with
                              MSK. Check the Pub/Sub docs for how to set up this role and the
                              required permissions that need to be attached to it.
                            type: string
                          consumerArn:
                            description: |-
                              The Kinesis consumer ARN to used for ingestion in
                              Enhanced Fan-Out mode. The consumer must be already
                              created and ready to be used.
                            type: string
                          gcpServiceAccount:
                            description: |-
                              The GCP service account to be used for Federated Identity authentication
                              with Confluent Cloud.
                            type: string
                          streamArn:
                            description: The Kinesis stream ARN to ingest data from.
                            type: string
                        type: object
                      awsMsk:
                        description: |-
                          Settings for ingestion from Amazon Managed Streaming for Apache Kafka.
                          Structure is documented below.
                        properties:
                          awsRoleArn:
                            description: |-
                              AWS role ARN to be used for Federated Identity authentication with
                              MSK. Check the Pub/Sub docs for how to set up this role and the
                              required permissions that need to be attached to it.
                            type: string
                          clusterArn:
                            description: ARN that uniquely identifies the MSK cluster.
                            type: string
                          gcpServiceAccount:
                            description: |-
                              The GCP service account to be used for Federated Identity authentication
                              with Confluent Cloud.
                            type: string
                          topic:
                            description: Name of the Confluent Cloud topic that Pub/Sub
                              will import from.
                            type: string
                        type: object
                      azureEventHubs:
                        description: |-
                          Settings for ingestion from Azure Event Hubs.
                          Structure is documented below.
                        properties:
                          clientId:
                            description: The Azure event hub client ID to use for
                              ingestion.
                            type: string
                          eventHub:
                            description: The Azure event hub to ingest data from.
                            type: string
                          gcpServiceAccount:
                            description: |-
                              The GCP service account to be used for Federated Identity authentication
                              with Confluent Cloud.
                            type: string
                          namespace:
                            description: The Azure event hub namespace to ingest data
                              from.
                            type: string
                          resourceGroup:
                            description: The name of the resource group within an
                              Azure subscription.
                            type: string
                          subscriptionId:
                            description: The Azure event hub subscription ID to use
                              for ingestion.
                            type: string
                          tenantId:
                            description: The Azure event hub tenant ID to use for
                              ingestion.
                            type: string
                        type: object
                      cloudStorage:
                        description: |-
                          Settings for ingestion from Cloud Storage.
                          Structure is documented below.
                        properties:
                          avroFormat:
                            description: |-
                              Configuration for reading Cloud Storage data in Avro binary format. The
                              bytes of each object will be set to the data field of a Pub/Sub message.
                            type: object
                          bucket:
                            description: |-
                              Cloud Storage bucket. The bucket name must be without any
                              prefix like "gs://". See the bucket naming requirements:
                              https://cloud.google.com/storage/docs/buckets#naming.
                            type: string
                          matchGlob:
                            description: |-
                              Glob pattern used to match objects that will be ingested. If unset, all
                              objects will be ingested. See the supported patterns:
                              https://cloud.google.com/storage/docs/json_api/v1/objects/list#list-objects-and-prefixes-using-glob
                            type: string
                          minimumObjectCreateTime:
                            description: |-
                              The timestamp set in RFC3339 text format. If set, only objects with a
                              larger or equal timestamp will be ingested. Unset by default, meaning
                              all objects will be ingested.
                            type: string
                          pubsubAvroFormat:
                            description: |-
                              Configuration for reading Cloud Storage data written via Cloud Storage
                              subscriptions(See https://cloud.google.com/pubsub/docs/cloudstorage). The
                              data and attributes fields of the originally exported Pub/Sub message
                              will be restored when publishing.
                            type: object
                          textFormat:
                            description: |-
                              Configuration for reading Cloud Storage data in text format. Each line of
                              text as specified by the delimiter will be set to the data field of a
                              Pub/Sub message.
                              Structure is documented below.
                            properties:
                              delimiter:
                                description: |-
                                  The delimiter to use when using the 'text' format. Each line of text as
                                  specified by the delimiter will be set to the 'data' field of a Pub/Sub
                                  message. When unset, '\n' is used.
                                type: string
                            type: object
                        type: object
                      confluentCloud:
                        description: |-
                          Settings for ingestion from Confluent Cloud.
                          Structure is documented below.
                        properties:
                          bootstrapServer:
                            description: The Confluent Cloud bootstrap server. The
                              format is url:port.
                            type: string
                          clusterId:
                            description: The Confluent Cloud cluster ID.
                            type: string
                          gcpServiceAccount:
                            description: |-
                              The GCP service account to be used for Federated Identity authentication
                              with Confluent Cloud.
                            type: string
                          identityPoolId:
                            description: Identity pool ID to be used for Federated
                              Identity authentication with Confluent Cloud.
                            type: string
                          topic:
                            description: Name of the Confluent Cloud topic that Pub/Sub
                              will import from.
                            type: string
                        type: object
                      platformLogsSettings:
                        description: |-
                          Settings for Platform Logs regarding ingestion to Pub/Sub. If unset,
                          no Platform Logs will be generated.'
                          Structure is documented below.
                        properties:
                          severity:
                            description: |-
                              The minimum severity level of Platform Logs that will be written. If unspecified,
                              no Platform Logs will be written.
                              Default value is SEVERITY_UNSPECIFIED.
                              Possible values are: SEVERITY_UNSPECIFIED, DISABLED, DEBUG, INFO, WARNING, ERROR.
                            type: string
                        type: object
                    type: object
                  kmsKeyName:
                    description: |-
                      The resource name of the Cloud KMS CryptoKey to be used to protect access
                      to messages published on this topic. Your project's PubSub service account
                      (service-{{PROJECT_NUMBER}}@gcp-sa-pubsub.iam.gserviceaccount.com) must have
                      roles/cloudkms.cryptoKeyEncrypterDecrypter to use this feature.
                      The expected format is projects/*/locations/*/keyRings/*/cryptoKeys/*
                    type: string
                  kmsKeyNameRef:
                    description: Reference to a CryptoKey in kms to populate kmsKeyName.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  kmsKeyNameSelector:
                    description: Selector for a CryptoKey in kms to populate kmsKeyName.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  labels:
                    additionalProperties:
                      type: string
                    description: A set of key/value label pairs to assign to this
                      Topic.
                    type: object
                    x-kubernetes-map-type: granular
                  messageRetentionDuration:
                    description: |-
                      Indicates the minimum duration to retain a message after it is published
                      to the topic. If this field is set, messages published to the topic in
                      the last messageRetentionDuration are always available to subscribers.
                      For instance, it allows any attached subscription to seek to a timestamp
                      that is up to messageRetentionDuration in the past. If this field is not
                      set, message retention is controlled by settings on individual subscriptions.
                      The rotation period has the format of a decimal number, followed by the
                      letter s (seconds). Cannot be more than 31 days or less than 10 minutes.
                    type: string
                  messageStoragePolicy:
                    description: |-
                      Policy constraining the set of Google Cloud Platform regions where
                      messages published to the topic may be stored. If not present, then no
                      constraints are in effect.
                      Structure is documented below.
                    properties:
                      allowedPersistenceRegions:
                        description: |-
                          A list of IDs of GCP regions where messages that are published to
                          the topic may be persisted in storage. Messages published by
                          publishers running in non-allowed GCP regions (or running outside
                          of GCP altogether) will be routed for storage in one of the
                          allowed regions. An empty list means that no regions are allowed,
                          and is not a valid configuration.
                        items:
                          type: string
                        type: array
                        x-kubernetes-list-type: set
                      enforceInTransit:
                        description: |-
                          If true, allowedPersistenceRegions is also used to enforce in-transit
                          guarantees for messages. That is, Pub/Sub will fail topics.publish
                          operations on this topic and subscribe operations on any subscription
                          attached to this topic in any region that is not in allowedPersistenceRegions.
                        type: boolean
                    type: object
                  messageTransforms:
                    description: |-
                      Transforms to be applied to messages published to the topic. Transforms are applied in the
                      order specified.
                      Structure is documented below.
                    items:
                      properties:
                        disabled:
                          description: |-
                            Controls whether or not to use this transform. If not set or false,
                            the transform will be applied to messages. Default: true.
                          type: boolean
                        javascriptUdf:
                          description: |-
                            Javascript User Defined Function. If multiple Javascript UDFs are specified on a resource,
                            each one must have a unique function_name.
                            Structure is documented below.
                          properties:
                            code:
                              description: |-
                                JavaScript code that contains a function function_name with the
                                following signature:
                              type: string
                            functionName:
                              description: Name of the JavaScript function that should
                                be applied to Pub/Sub messages.
                              type: string
                          type: object
                      type: object
                    type: array
                  project:
                    description: |-
                      The ID of the project in which the resource belongs.
                      If it is not provided, the provider project is used.
                    type: string
                  schemaSettings:
                    description: |-
                      Settings for validating messages published against a schema.
                      Structure is documented below.
                    properties:
                      encoding:
                        description: |-
                          The encoding of messages validated against schema.
                          Default value is ENCODING_UNSPECIFIED.
                          Possible values are: ENCODING_UNSPECIFIED, JSON, BINARY.
                        type: string
                      schema:
                        description: |-
                          The name of the schema that messages published should be
                          validated against. Format is projects/{project}/schemas/{schema}.
                          The value of this field will be deleted-schema
                          if the schema has been deleted.
                        type: string
                    type: object
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  This field is planned to replace the DeletionPolicy field in a future
                  release. Currently, both could be set independently and non-default
                  values would be honored if the feature flag is enabled. If both are
                  custom, the DeletionPolicy field will be ignored.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: |-
                  PublishConnectionDetailsTo specifies the connection secret config which
                  contains a name, metadata and a reference to secret store config to
                  which any connection details for this managed resource should be written.
                  Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: |-
                      SecretStoreConfigRef specifies which secret store config should be used
                      for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations are the annotations to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.annotations".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Labels are the labels/tags to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      type:
                        description: |-
                          Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                  This field is planned to be replaced in a future release in favor of
                  PublishConnectionDetailsTo. Currently, both could be set independently
                  and connection details would be published to both without affecting
                  each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: TopicStatus defines the observed state of Topic.
            properties:
              atProvider:
                properties:
                  effectiveLabels:
                    additionalProperties:
                      type: string
                    description: for all of the labels present on the resource.
                    type: object
                    x-kubernetes-map-type: granular
                  id:
                    description: an identifier for the resource with format projects/{{project}}/topics/{{name}}
                    type: string
                  ingestionDataSourceSettings:
                    description: |-
                      Settings for ingestion from a data source into this topic.
                      Structure is documented below.
                    properties:
                      awsKinesis:
                        description: |-
                          Settings for ingestion from Amazon Kinesis Data Streams.
                          Structure is documented below.
                        properties:
                          awsRoleArn:
                            description: |-
                              AWS role ARN to be used for Federated Identity authentication with
                              MSK. Check the Pub/Sub docs for how to set up this role and the
                              required permissions that need to be attached to it.
                            type: string
                          consumerArn:
                            description: |-
                              The Kinesis consumer ARN to used for ingestion in
                              Enhanced Fan-Out mode. The consumer must be already
                              created and ready to be used.
                            type: string
                          gcpServiceAccount:
                            description: |-
                              The GCP service account to be used for Federated Identity authentication
                              with Confluent Cloud.
                            type: string
                          streamArn:
                            description: The Kinesis stream ARN to ingest data from.
                            type: string
                        type: object
                      awsMsk:
                        description: |-
                          Settings for ingestion from Amazon Managed Streaming for Apache Kafka.
                          Structure is documented below.
                        properties:
                          awsRoleArn:
                            description: |-
                              AWS role ARN to be used for Federated Identity authentication with
                              MSK. Check the Pub/Sub docs for how to set up this role and the
                              required permissions that need to be attached to it.
                            type: string
                          clusterArn:
                            description: ARN that uniquely identifies the MSK cluster.
                            type: string
                          gcpServiceAccount:
                            description: |-
                              The GCP service account to be used for Federated Identity authentication
                              with Confluent Cloud.
                            type: string
                          topic:
                            description: Name of the Confluent Cloud topic that Pub/Sub
                              will import from.
                            type: string
                        type: object
                      azureEventHubs:
                        description: |-
                          Settings for ingestion from Azure Event Hubs.
                          Structure is documented below.
                        properties:
                          clientId:
                            description: The Azure event hub client ID to use for
                              ingestion.
                            type: string
                          eventHub:
                            description: The Azure event hub to ingest data from.
                            type: string
                          gcpServiceAccount:
                            description: |-
                              The GCP service account to be used for Federated Identity authentication
                              with Confluent Cloud.
                            type: string
                          namespace:
                            description: The Azure event hub namespace to ingest data
                              from.
                            type: string
                          resourceGroup:
                            description: The name of the resource group within an
                              Azure subscription.
                            type: string
                          subscriptionId:
                            description: The Azure event hub subscription ID to use
                              for ingestion.
                            type: string
                          tenantId:
                            description: The Azure event hub tenant ID to use for
                              ingestion.
                            type: string
                        type: object
                      cloudStorage:
                        description: |-
                          Settings for ingestion from Cloud Storage.
                          Structure is documented below.
                        properties:
                          avroFormat:
                            description: |-
                              Configuration for reading Cloud Storage data in Avro binary format. The
                              bytes of each object will be set to the data field of a Pub/Sub message.
                            type: object
                          bucket:
                            description: |-
                              Cloud Storage bucket. The bucket name must be without any
                              prefix like "gs://". See the bucket naming requirements:
                              https://cloud.google.com/storage/docs/buckets#naming.
                            type: string
                          matchGlob:
                            description: |-
                              Glob pattern used to match objects that will be ingested. If unset, all
                              objects will be ingested. See the supported patterns:
                              https://cloud.google.com/storage/docs/json_api/v1/objects/list#list-objects-and-prefixes-using-glob
                            type: string
                          minimumObjectCreateTime:
                            description: |-
                              The timestamp set in RFC3339 text format. If set, only objects with a
                              larger or equal timestamp will be ingested. Unset by default, meaning
                              all objects will be ingested.
                            type: string
                          pubsubAvroFormat:
                            description: |-
                              Configuration for reading Cloud Storage data written via Cloud Storage
                              subscriptions(See https://cloud.google.com/pubsub/docs/cloudstorage). The
                              data and attributes fields of the originally exported Pub/Sub message
                              will be restored when publishing.
                            type: object
                          textFormat:
                            description: |-
                              Configuration for reading Cloud Storage data in text format. Each line of
                              text as specified by the delimiter will be set to the data field of a
                              Pub/Sub message.
                              Structure is documented below.
                            properties:
                              delimiter:
                                description: |-
                                  The delimiter to use when using the 'text' format. Each line of text as
                                  specified by the delimiter will be set to the 'data' field of a Pub/Sub
                                  message. When unset, '\n' is used.
                                type: string
                            type: object
                        type: object
                      confluentCloud:
                        description: |-
                          Settings for ingestion from Confluent Cloud.
                          Structure is documented below.
                        properties:
                          bootstrapServer:
                            description: The Confluent Cloud bootstrap server. The
                              format is url:port.
                            type: string
                          clusterId:
                            description: The Confluent Cloud cluster ID.
                            type: string
                          gcpServiceAccount:
                            description: |-
                              The GCP service account to be used for Federated Identity authentication
                              with Confluent Cloud.
                            type: string
                          identityPoolId:
                            description: Identity pool ID to be used for Federated
                              Identity authentication with Confluent Cloud.
                            type: string
                          topic:
                            description: Name of the Confluent Cloud topic that Pub/Sub
                              will import from.
                            type: string
                        type: object
                      platformLogsSettings:
                        description: |-
                          Settings for Platform Logs regarding ingestion to Pub/Sub. If unset,
                          no Platform Logs will be generated.'
                          Structure is documented below.
                        properties:
                          severity:
                            description: |-
                              The minimum severity level of Platform Logs that will be written. If unspecified,
                              no Platform Logs will be written.
                              Default value is SEVERITY_UNSPECIFIED.
                              Possible values are: SEVERITY_UNSPECIFIED, DISABLED, DEBUG, INFO, WARNING, ERROR.
                            type: string
                        type: object
                    type: object
                  kmsKeyName:
                    description: |-
                      The resource name of the Cloud KMS CryptoKey to be used to protect access
                      to messages published on this topic. Your project's PubSub service account
                      (service-{{PROJECT_NUMBER}}@gcp-sa-pubsub.iam.gserviceaccount.com) must have
                      roles/cloudkms.cryptoKeyEncrypterDecrypter to use this feature.
                      The expected format is projects/*/locations/*/keyRings/*/cryptoKeys/*
                    type: string
                  labels:
                    additionalProperties:
                      type: string
                    description: A set of key/value label pairs to assign to this
                      Topic.
                    type: object
                    x-kubernetes-map-type: granular
                  messageRetentionDuration:
                    description: |-
                      Indicates the minimum duration to retain a message after it is published
                      to the topic. If this field is set, messages published to the topic in
                      the last messageRetentionDuration are always available to subscribers.
                      For instance, it allows any attached subscription to seek to a timestamp
                      that is up to messageRetentionDuration in the past. If this field is not
                      set, message retention is controlled by settings on individual subscriptions.
                      The rotation period has the format of a decimal number, followed by the
                      letter s (seconds). Cannot be more than 31 days or less than 10 minutes.
                    type: string
                  messageStoragePolicy:
                    description: |-
                      Policy constraining the set of Google Cloud Platform regions where
                      messages published to the topic may be stored. If not present, then no
                      constraints are in effect.
                      Structure is documented below.
                    properties:
                      allowedPersistenceRegions:
                        description: |-
                          A list of IDs of GCP regions where messages that are published to
                          the topic may be persisted in storage. Messages published by
                          publishers running in non-allowed GCP regions (or running outside
                          of GCP altogether) will be routed for storage in one of the
                          allowed regions. An empty list means that no regions are allowed,
                          and is not a valid configuration.
                        items:
                          type: string
                        type: array
                        x-kubernetes-list-type: set
                      enforceInTransit:
                        description: |-
                          If true, allowedPersistenceRegions is also used to enforce in-transit
                          guarantees for messages. That is, Pub/Sub will fail topics.publish
                          operations on this topic and subscribe operations on any subscription
                          attached to this topic in any region that is not in allowedPersistenceRegions.
                        type: boolean
                    type: object
                  messageTransforms:
                    description: |-
                      Transforms to be applied to messages published to the topic. Transforms are applied in the
                      order specified.
                      Structure is documented below.
                    items:
                      properties:
                        disabled:
                          description: |-
                            Controls whether or not to use this transform. If not set or false,
                            the transform will be applied to messages. Default: true.
                          type: boolean
                        javascriptUdf:
                          description: |-
                            Javascript User Defined Function. If multiple Javascript UDFs are specified on a resource,
                            each one must have a unique function_name.
                            Structure is documented below.
                          properties:
                            code:
                              description: |-
                                JavaScript code that contains a function function_name with the
                                following signature:
                              type: string
                            functionName:
                              description: Name of the JavaScript function that should
                                be applied to Pub/Sub messages.
                              type: string
                          type: object
                      type: object
                    type: array
                  project:
                    description: |-
                      The ID of the project in which the resource belongs.
                      If it is not provided, the provider project is used.
                    type: string
                  schemaSettings:
                    description: |-
                      Settings for validating messages published against a schema.
                      Structure is documented below.
                    properties:
                      encoding:
                        description: |-
                          The encoding of messages validated against schema.
                          Default value is ENCODING_UNSPECIFIED.
                          Possible values are: ENCODING_UNSPECIFIED, JSON, BINARY.
                        type: string
                      schema:
                        description: |-
                          The name of the schema that messages published should be
                          validated against. Format is projects/{project}/schemas/{schema}.
                          The value of this field will be deleted-schema
                          if the schema has been deleted.
                        type: string
                    type: object
                  terraformLabels:
                    additionalProperties:
                      type: string
                    description: |-
                      The combination of labels configured directly on the resource
                      and default labels configured on the provider.
                    type: object
                    x-kubernetes-map-type: granular
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: |-
                  ObservedGeneration is the latest metadata.generation
                  which resulted in either a ready state, or stalled due to error
                  it can not recover from without human intervention.
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: false
    subresources:
      status: {}
