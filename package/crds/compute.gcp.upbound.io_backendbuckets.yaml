---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: backendbuckets.compute.gcp.upbound.io
spec:
  group: compute.gcp.upbound.io
  names:
    categories:
    - crossplane
    - managed
    - gcp
    kind: BackendBucket
    listKind: BackendBucketList
    plural: backendbuckets
    singular: backendbucket
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: BackendBucket is the Schema for the BackendBuckets API. Backend
          buckets allow you to use Google Cloud Storage buckets with HTTP(S) load
          balancing.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: BackendBucketSpec defines the desired state of BackendBucket
            properties:
              deletionPolicy:
                default: Delete
                description: |-
                  DeletionPolicy specifies what will happen to the underlying external
                  when this managed resource is deleted - either "Delete" or "Orphan" the
                  external resource.
                  This field is planned to be deprecated in favor of the ManagementPolicies
                  field in a future release. Currently, both could be set independently and
                  non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  bucketName:
                    description: Cloud Storage bucket name.
                    type: string
                  bucketNameRef:
                    description: Reference to a Bucket in storage to populate bucketName.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  bucketNameSelector:
                    description: Selector for a Bucket in storage to populate bucketName.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  cdnPolicy:
                    description: |-
                      Cloud CDN configuration for this Backend Bucket.
                      Structure is documented below.
                    items:
                      properties:
                        bypassCacheOnRequestHeaders:
                          description: |-
                            Bypass the cache when the specified request headers are matched - e.g. Pragma or Authorization headers. Up to 5 headers can be specified. The cache is bypassed for all cdnPolicy.cacheMode settings.
                            Structure is documented below.
                          items:
                            properties:
                              headerName:
                                description: The header field name to match on when
                                  bypassing cache. Values are case-insensitive.
                                type: string
                            type: object
                          type: array
                        cacheKeyPolicy:
                          description: |-
                            The CacheKeyPolicy for this CdnPolicy.
                            Structure is documented below.
                          items:
                            properties:
                              includeHttpHeaders:
                                description: |-
                                  Allows HTTP request headers (by name) to be used in the
                                  cache key.
                                items:
                                  type: string
                                type: array
                              queryStringWhitelist:
                                description: |-
                                  Names of query string parameters to include in cache keys.
                                  Default parameters are always included. '&' and '=' will
                                  be percent encoded and not treated as delimiters.
                                items:
                                  type: string
                                type: array
                            type: object
                          type: array
                        cacheMode:
                          description: |-
                            Specifies the cache setting for all responses from this backend.
                            The possible values are: USE_ORIGIN_HEADERS, FORCE_CACHE_ALL and CACHE_ALL_STATIC
                            Possible values are: USE_ORIGIN_HEADERS, FORCE_CACHE_ALL, CACHE_ALL_STATIC.
                          type: string
                        clientTtl:
                          description: Specifies the maximum allowed TTL for cached
                            content served by this origin.
                          type: number
                        defaultTtl:
                          description: |-
                            Specifies the default TTL for cached content served by this origin for responses
                            that do not have an existing valid TTL (max-age or s-max-age).
                          type: number
                        maxTtl:
                          description: Specifies the maximum allowed TTL for cached
                            content served by this origin.
                          type: number
                        negativeCaching:
                          description: Negative caching allows per-status code TTLs
                            to be set, in order to apply fine-grained caching for
                            common errors or redirects.
                          type: boolean
                        negativeCachingPolicy:
                          description: |-
                            Sets a cache TTL for the specified HTTP status code. negativeCaching must be enabled to configure negativeCachingPolicy.
                            Omitting the policy and leaving negativeCaching enabled will use Cloud CDN's default cache TTLs.
                            Structure is documented below.
                          items:
                            properties:
                              code:
                                description: |-
                                  The HTTP status code to define a TTL against. Only HTTP status codes 300, 301, 308, 404, 405, 410, 421, 451 and 501
                                  can be specified as values, and you cannot specify a status code more than once.
                                type: number
                              ttl:
                                description: |-
                                  The TTL (in seconds) for which to cache responses with the corresponding status code. The maximum allowed value is 1800s
                                  (30 minutes), noting that infrequently accessed objects may be evicted from the cache before the defined TTL.
                                type: number
                            type: object
                          type: array
                        requestCoalescing:
                          description: If true then Cloud CDN will combine multiple
                            concurrent cache fill requests into a small number of
                            requests to the origin.
                          type: boolean
                        serveWhileStale:
                          description: Serve existing content from the cache (if available)
                            when revalidating content with the origin, or when an
                            error is encountered when refreshing the cache.
                          type: number
                        signedUrlCacheMaxAgeSec:
                          description: |-
                            Maximum number of seconds the response to a signed URL request will
                            be considered fresh. After this time period,
                            the response will be revalidated before being served.
                            When serving responses to signed URL requests,
                            Cloud CDN will internally behave as though
                            all responses from this backend had a "Cache-Control: public,
                            max-age=[TTL]" header, regardless of any existing Cache-Control
                            header. The actual headers served in responses will not be altered.
                          type: number
                      type: object
                    type: array
                  compressionMode:
                    description: |-
                      Compress text responses using Brotli or gzip compression, based on the client's Accept-Encoding header.
                      Possible values are: AUTOMATIC, DISABLED.
                    type: string
                  customResponseHeaders:
                    description: Headers that the HTTP/S load balancer should add
                      to proxied responses.
                    items:
                      type: string
                    type: array
                  description:
                    description: |-
                      An optional textual description of the resource; provided by the
                      client when the resource is created.
                    type: string
                  edgeSecurityPolicy:
                    description: The security policy associated with this backend
                      bucket.
                    type: string
                  edgeSecurityPolicyRef:
                    description: Reference to a SecurityPolicy in compute to populate
                      edgeSecurityPolicy.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  edgeSecurityPolicySelector:
                    description: Selector for a SecurityPolicy in compute to populate
                      edgeSecurityPolicy.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  enableCdn:
                    description: If true, enable Cloud CDN for this BackendBucket.
                    type: boolean
                  project:
                    description: |-
                      The ID of the project in which the resource belongs.
                      If it is not provided, the provider project is used.
                    type: string
                type: object
              initProvider:
                description: |-
                  THIS IS A BETA FIELD. It will be honored
                  unless the Management Policies feature flag is disabled.
                  InitProvider holds the same fields as ForProvider, with the exception
                  of Identifier and other resource reference fields. The fields that are
                  in InitProvider are merged into ForProvider when the resource is created.
                  The same fields are also added to the terraform ignore_changes hook, to
                  avoid updating them after creation. This is useful for fields that are
                  required on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them, like an
                  autoscaler.
                properties:
                  bucketName:
                    description: Cloud Storage bucket name.
                    type: string
                  bucketNameRef:
                    description: Reference to a Bucket in storage to populate bucketName.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  bucketNameSelector:
                    description: Selector for a Bucket in storage to populate bucketName.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  cdnPolicy:
                    description: |-
                      Cloud CDN configuration for this Backend Bucket.
                      Structure is documented below.
                    items:
                      properties:
                        bypassCacheOnRequestHeaders:
                          description: |-
                            Bypass the cache when the specified request headers are matched - e.g. Pragma or Authorization headers. Up to 5 headers can be specified. The cache is bypassed for all cdnPolicy.cacheMode settings.
                            Structure is documented below.
                          items:
                            properties:
                              headerName:
                                description: The header field name to match on when
                                  bypassing cache. Values are case-insensitive.
                                type: string
                            type: object
                          type: array
                        cacheKeyPolicy:
                          description: |-
                            The CacheKeyPolicy for this CdnPolicy.
                            Structure is documented below.
                          items:
                            properties:
                              includeHttpHeaders:
                                description: |-
                                  Allows HTTP request headers (by name) to be used in the
                                  cache key.
                                items:
                                  type: string
                                type: array
                              queryStringWhitelist:
                                description: |-
                                  Names of query string parameters to include in cache keys.
                                  Default parameters are always included. '&' and '=' will
                                  be percent encoded and not treated as delimiters.
                                items:
                                  type: string
                                type: array
                            type: object
                          type: array
                        cacheMode:
                          description: |-
                            Specifies the cache setting for all responses from this backend.
                            The possible values are: USE_ORIGIN_HEADERS, FORCE_CACHE_ALL and CACHE_ALL_STATIC
                            Possible values are: USE_ORIGIN_HEADERS, FORCE_CACHE_ALL, CACHE_ALL_STATIC.
                          type: string
                        clientTtl:
                          description: Specifies the maximum allowed TTL for cached
                            content served by this origin.
                          type: number
                        defaultTtl:
                          description: |-
                            Specifies the default TTL for cached content served by this origin for responses
                            that do not have an existing valid TTL (max-age or s-max-age).
                          type: number
                        maxTtl:
                          description: Specifies the maximum allowed TTL for cached
                            content served by this origin.
                          type: number
                        negativeCaching:
                          description: Negative caching allows per-status code TTLs
                            to be set, in order to apply fine-grained caching for
                            common errors or redirects.
                          type: boolean
                        negativeCachingPolicy:
                          description: |-
                            Sets a cache TTL for the specified HTTP status code. negativeCaching must be enabled to configure negativeCachingPolicy.
                            Omitting the policy and leaving negativeCaching enabled will use Cloud CDN's default cache TTLs.
                            Structure is documented below.
                          items:
                            properties:
                              code:
                                description: |-
                                  The HTTP status code to define a TTL against. Only HTTP status codes 300, 301, 308, 404, 405, 410, 421, 451 and 501
                                  can be specified as values, and you cannot specify a status code more than once.
                                type: number
                              ttl:
                                description: |-
                                  The TTL (in seconds) for which to cache responses with the corresponding status code. The maximum allowed value is 1800s
                                  (30 minutes), noting that infrequently accessed objects may be evicted from the cache before the defined TTL.
                                type: number
                            type: object
                          type: array
                        requestCoalescing:
                          description: If true then Cloud CDN will combine multiple
                            concurrent cache fill requests into a small number of
                            requests to the origin.
                          type: boolean
                        serveWhileStale:
                          description: Serve existing content from the cache (if available)
                            when revalidating content with the origin, or when an
                            error is encountered when refreshing the cache.
                          type: number
                        signedUrlCacheMaxAgeSec:
                          description: |-
                            Maximum number of seconds the response to a signed URL request will
                            be considered fresh. After this time period,
                            the response will be revalidated before being served.
                            When serving responses to signed URL requests,
                            Cloud CDN will internally behave as though
                            all responses from this backend had a "Cache-Control: public,
                            max-age=[TTL]" header, regardless of any existing Cache-Control
                            header. The actual headers served in responses will not be altered.
                          type: number
                      type: object
                    type: array
                  compressionMode:
                    description: |-
                      Compress text responses using Brotli or gzip compression, based on the client's Accept-Encoding header.
                      Possible values are: AUTOMATIC, DISABLED.
                    type: string
                  customResponseHeaders:
                    description: Headers that the HTTP/S load balancer should add
                      to proxied responses.
                    items:
                      type: string
                    type: array
                  description:
                    description: |-
                      An optional textual description of the resource; provided by the
                      client when the resource is created.
                    type: string
                  edgeSecurityPolicy:
                    description: The security policy associated with this backend
                      bucket.
                    type: string
                  edgeSecurityPolicyRef:
                    description: Reference to a SecurityPolicy in compute to populate
                      edgeSecurityPolicy.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  edgeSecurityPolicySelector:
                    description: Selector for a SecurityPolicy in compute to populate
                      edgeSecurityPolicy.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  enableCdn:
                    description: If true, enable Cloud CDN for this BackendBucket.
                    type: boolean
                  project:
                    description: |-
                      The ID of the project in which the resource belongs.
                      If it is not provided, the provider project is used.
                    type: string
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  This field is planned to replace the DeletionPolicy field in a future
                  release. Currently, both could be set independently and non-default
                  values would be honored if the feature flag is enabled. If both are
                  custom, the DeletionPolicy field will be ignored.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: |-
                  PublishConnectionDetailsTo specifies the connection secret config which
                  contains a name, metadata and a reference to secret store config to
                  which any connection details for this managed resource should be written.
                  Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: |-
                      SecretStoreConfigRef specifies which secret store config should be used
                      for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations are the annotations to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.annotations".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Labels are the labels/tags to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      type:
                        description: |-
                          Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                  This field is planned to be replaced in a future release in favor of
                  PublishConnectionDetailsTo. Currently, both could be set independently
                  and connection details would be published to both without affecting
                  each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: BackendBucketStatus defines the observed state of BackendBucket.
            properties:
              atProvider:
                properties:
                  bucketName:
                    description: Cloud Storage bucket name.
                    type: string
                  cdnPolicy:
                    description: |-
                      Cloud CDN configuration for this Backend Bucket.
                      Structure is documented below.
                    items:
                      properties:
                        bypassCacheOnRequestHeaders:
                          description: |-
                            Bypass the cache when the specified request headers are matched - e.g. Pragma or Authorization headers. Up to 5 headers can be specified. The cache is bypassed for all cdnPolicy.cacheMode settings.
                            Structure is documented below.
                          items:
                            properties:
                              headerName:
                                description: The header field name to match on when
                                  bypassing cache. Values are case-insensitive.
                                type: string
                            type: object
                          type: array
                        cacheKeyPolicy:
                          description: |-
                            The CacheKeyPolicy for this CdnPolicy.
                            Structure is documented below.
                          items:
                            properties:
                              includeHttpHeaders:
                                description: |-
                                  Allows HTTP request headers (by name) to be used in the
                                  cache key.
                                items:
                                  type: string
                                type: array
                              queryStringWhitelist:
                                description: |-
                                  Names of query string parameters to include in cache keys.
                                  Default parameters are always included. '&' and '=' will
                                  be percent encoded and not treated as delimiters.
                                items:
                                  type: string
                                type: array
                            type: object
                          type: array
                        cacheMode:
                          description: |-
                            Specifies the cache setting for all responses from this backend.
                            The possible values are: USE_ORIGIN_HEADERS, FORCE_CACHE_ALL and CACHE_ALL_STATIC
                            Possible values are: USE_ORIGIN_HEADERS, FORCE_CACHE_ALL, CACHE_ALL_STATIC.
                          type: string
                        clientTtl:
                          description: Specifies the maximum allowed TTL for cached
                            content served by this origin.
                          type: number
                        defaultTtl:
                          description: |-
                            Specifies the default TTL for cached content served by this origin for responses
                            that do not have an existing valid TTL (max-age or s-max-age).
                          type: number
                        maxTtl:
                          description: Specifies the maximum allowed TTL for cached
                            content served by this origin.
                          type: number
                        negativeCaching:
                          description: Negative caching allows per-status code TTLs
                            to be set, in order to apply fine-grained caching for
                            common errors or redirects.
                          type: boolean
                        negativeCachingPolicy:
                          description: |-
                            Sets a cache TTL for the specified HTTP status code. negativeCaching must be enabled to configure negativeCachingPolicy.
                            Omitting the policy and leaving negativeCaching enabled will use Cloud CDN's default cache TTLs.
                            Structure is documented below.
                          items:
                            properties:
                              code:
                                description: |-
                                  The HTTP status code to define a TTL against. Only HTTP status codes 300, 301, 308, 404, 405, 410, 421, 451 and 501
                                  can be specified as values, and you cannot specify a status code more than once.
                                type: number
                              ttl:
                                description: |-
                                  The TTL (in seconds) for which to cache responses with the corresponding status code. The maximum allowed value is 1800s
                                  (30 minutes), noting that infrequently accessed objects may be evicted from the cache before the defined TTL.
                                type: number
                            type: object
                          type: array
                        requestCoalescing:
                          description: If true then Cloud CDN will combine multiple
                            concurrent cache fill requests into a small number of
                            requests to the origin.
                          type: boolean
                        serveWhileStale:
                          description: Serve existing content from the cache (if available)
                            when revalidating content with the origin, or when an
                            error is encountered when refreshing the cache.
                          type: number
                        signedUrlCacheMaxAgeSec:
                          description: |-
                            Maximum number of seconds the response to a signed URL request will
                            be considered fresh. After this time period,
                            the response will be revalidated before being served.
                            When serving responses to signed URL requests,
                            Cloud CDN will internally behave as though
                            all responses from this backend had a "Cache-Control: public,
                            max-age=[TTL]" header, regardless of any existing Cache-Control
                            header. The actual headers served in responses will not be altered.
                          type: number
                      type: object
                    type: array
                  compressionMode:
                    description: |-
                      Compress text responses using Brotli or gzip compression, based on the client's Accept-Encoding header.
                      Possible values are: AUTOMATIC, DISABLED.
                    type: string
                  creationTimestamp:
                    description: Creation timestamp in RFC3339 text format.
                    type: string
                  customResponseHeaders:
                    description: Headers that the HTTP/S load balancer should add
                      to proxied responses.
                    items:
                      type: string
                    type: array
                  description:
                    description: |-
                      An optional textual description of the resource; provided by the
                      client when the resource is created.
                    type: string
                  edgeSecurityPolicy:
                    description: The security policy associated with this backend
                      bucket.
                    type: string
                  enableCdn:
                    description: If true, enable Cloud CDN for this BackendBucket.
                    type: boolean
                  id:
                    description: an identifier for the resource with format projects/{{project}}/global/backendBuckets/{{name}}
                    type: string
                  project:
                    description: |-
                      The ID of the project in which the resource belongs.
                      If it is not provided, the provider project is used.
                    type: string
                  selfLink:
                    description: The URI of the created resource.
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
