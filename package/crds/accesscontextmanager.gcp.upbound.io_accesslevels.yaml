---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: accesslevels.accesscontextmanager.gcp.upbound.io
spec:
  group: accesscontextmanager.gcp.upbound.io
  names:
    categories:
    - crossplane
    - managed
    - gcp
    kind: AccessLevel
    listKind: AccessLevelList
    plural: accesslevels
    singular: accesslevel
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: AccessLevel is the Schema for the AccessLevels API. An AccessLevel
          is a label that can be applied to requests to GCP services, along with a
          list of requirements necessary for the label to be applied.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: AccessLevelSpec defines the desired state of AccessLevel
            properties:
              deletionPolicy:
                default: Delete
                description: |-
                  DeletionPolicy specifies what will happen to the underlying external
                  when this managed resource is deleted - either "Delete" or "Orphan" the
                  external resource.
                  This field is planned to be deprecated in favor of the ManagementPolicies
                  field in a future release. Currently, both could be set independently and
                  non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  basic:
                    description: |-
                      A set of predefined conditions for the access level and a combining function.
                      Structure is documented below.
                    items:
                      properties:
                        combiningFunction:
                          description: |-
                            How the conditions list should be combined to determine if a request
                            is granted this AccessLevel. If AND is used, each Condition in
                            conditions must be satisfied for the AccessLevel to be applied. If
                            OR is used, at least one Condition in conditions must be satisfied
                            for the AccessLevel to be applied.
                            Default value is AND.
                            Possible values are: AND, OR.
                          type: string
                        conditions:
                          description: |-
                            A set of requirements for the AccessLevel to be granted.
                            Structure is documented below.
                          items:
                            properties:
                              devicePolicy:
                                description: |-
                                  Device specific restrictions, all restrictions must hold for
                                  the Condition to be true. If not specified, all devices are
                                  allowed.
                                  Structure is documented below.
                                items:
                                  properties:
                                    allowedDeviceManagementLevels:
                                      description: |-
                                        A list of allowed device management levels.
                                        An empty list allows all management levels.
                                        Each value may be one of: MANAGEMENT_UNSPECIFIED, NONE, BASIC, COMPLETE.
                                      items:
                                        type: string
                                      type: array
                                    allowedEncryptionStatuses:
                                      description: |-
                                        A list of allowed encryptions statuses.
                                        An empty list allows all statuses.
                                        Each value may be one of: ENCRYPTION_UNSPECIFIED, ENCRYPTION_UNSUPPORTED, UNENCRYPTED, ENCRYPTED.
                                      items:
                                        type: string
                                      type: array
                                    osConstraints:
                                      description: |-
                                        A list of allowed OS versions.
                                        An empty list allows all types and all versions.
                                        Structure is documented below.
                                      items:
                                        properties:
                                          minimumVersion:
                                            description: |-
                                              The minimum allowed OS version. If not set, any version
                                              of this OS satisfies the constraint.
                                              Format: "major.minor.patch" such as "10.5.301", "9.2.1".
                                            type: string
                                          osType:
                                            description: |-
                                              The operating system type of the device.
                                              Possible values are: OS_UNSPECIFIED, DESKTOP_MAC, DESKTOP_WINDOWS, DESKTOP_LINUX, DESKTOP_CHROME_OS, ANDROID, IOS.
                                            type: string
                                          requireVerifiedChromeOs:
                                            description: If you specify DESKTOP_CHROME_OS
                                              for osType, you can optionally include
                                              requireVerifiedChromeOs to require Chrome
                                              Verified Access.
                                            type: boolean
                                        type: object
                                      type: array
                                    requireAdminApproval:
                                      description: Whether the device needs to be
                                        approved by the customer admin.
                                      type: boolean
                                    requireCorpOwned:
                                      description: Whether the device needs to be
                                        corp owned.
                                      type: boolean
                                    requireScreenLock:
                                      description: |-
                                        Whether or not screenlock is required for the DevicePolicy
                                        to be true. Defaults to false.
                                      type: boolean
                                  type: object
                                type: array
                              ipSubnetworks:
                                description: |-
                                  A list of CIDR block IP subnetwork specification. May be IPv4
                                  or IPv6.
                                  Note that for a CIDR IP address block, the specified IP address
                                  portion must be properly truncated (i.e. all the host bits must
                                  be zero) or the input is considered malformed. For example,
                                  "192.0.2.0/24" is accepted but "192.0.2.1/24" is not. Similarly,
                                  for IPv6, "2001:db8::/32" is accepted whereas "2001:db8::1/32"
                                  is not. The originating IP of a request must be in one of the
                                  listed subnets in order for this Condition to be true.
                                  If empty, all IP addresses are allowed.
                                items:
                                  type: string
                                type: array
                              members:
                                description: |-
                                  An allowed list of members (users, service accounts).
                                  Using groups is not supported yet.
                                  The signed-in user originating the request must be a part of one
                                  of the provided members. If not specified, a request may come
                                  from any user (logged in/not logged in, not present in any
                                  groups, etc.).
                                  Formats: user:{emailid}, serviceAccount:{emailid}
                                items:
                                  type: string
                                type: array
                              negate:
                                description: |-
                                  Whether to negate the Condition. If true, the Condition becomes
                                  a NAND over its non-empty fields, each field must be false for
                                  the Condition overall to be satisfied. Defaults to false.
                                type: boolean
                              regions:
                                description: |-
                                  The request must originate from one of the provided
                                  countries/regions.
                                  Format: A valid ISO 3166-1 alpha-2 code.
                                items:
                                  type: string
                                type: array
                              requiredAccessLevels:
                                description: |-
                                  A list of other access levels defined in the same Policy,
                                  referenced by resource name. Referencing an AccessLevel which
                                  does not exist is an error. All access levels listed must be
                                  granted for the Condition to be true.
                                  Format: accessPolicies/{policy_id}/accessLevels/{short_name}
                                items:
                                  type: string
                                type: array
                            type: object
                          type: array
                      type: object
                    type: array
                  custom:
                    description: |-
                      Custom access level conditions are set using the Cloud Common Expression Language to represent the necessary conditions for the level to apply to a request.
                      See CEL spec at: https://github.com/google/cel-spec.
                      Structure is documented below.
                    items:
                      properties:
                        expr:
                          description: |-
                            Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language.
                            This page details the objects and attributes that are used to the build the CEL expressions for
                            custom access levels - https://cloud.google.com/access-context-manager/docs/custom-access-level-spec.
                            Structure is documented below.
                          items:
                            properties:
                              description:
                                description: Description of the expression
                                type: string
                              expression:
                                description: Textual representation of an expression
                                  in Common Expression Language syntax.
                                type: string
                              location:
                                description: String indicating the location of the
                                  expression for error reporting, e.g. a file name
                                  and a position in the file
                                type: string
                              title:
                                description: Title for the expression, i.e. a short
                                  string describing its purpose.
                                type: string
                            type: object
                          type: array
                      type: object
                    type: array
                  description:
                    description: Description of the AccessLevel and its use. Does
                      not affect behavior.
                    type: string
                  name:
                    description: |-
                      Resource name for the Access Level. The short_name component must begin
                      with a letter and only include alphanumeric and '_'.
                      Format: accessPolicies/{policy_id}/accessLevels/{short_name}
                    type: string
                  parent:
                    description: |-
                      The AccessPolicy this AccessLevel lives in.
                      Format: accessPolicies/{policy_id}
                    type: string
                  title:
                    description: Human readable title. Must be unique within the Policy.
                    type: string
                type: object
              initProvider:
                description: |-
                  THIS IS A BETA FIELD. It will be honored
                  unless the Management Policies feature flag is disabled.
                  InitProvider holds the same fields as ForProvider, with the exception
                  of Identifier and other resource reference fields. The fields that are
                  in InitProvider are merged into ForProvider when the resource is created.
                  The same fields are also added to the terraform ignore_changes hook, to
                  avoid updating them after creation. This is useful for fields that are
                  required on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them, like an
                  autoscaler.
                properties:
                  basic:
                    description: |-
                      A set of predefined conditions for the access level and a combining function.
                      Structure is documented below.
                    items:
                      properties:
                        combiningFunction:
                          description: |-
                            How the conditions list should be combined to determine if a request
                            is granted this AccessLevel. If AND is used, each Condition in
                            conditions must be satisfied for the AccessLevel to be applied. If
                            OR is used, at least one Condition in conditions must be satisfied
                            for the AccessLevel to be applied.
                            Default value is AND.
                            Possible values are: AND, OR.
                          type: string
                        conditions:
                          description: |-
                            A set of requirements for the AccessLevel to be granted.
                            Structure is documented below.
                          items:
                            properties:
                              devicePolicy:
                                description: |-
                                  Device specific restrictions, all restrictions must hold for
                                  the Condition to be true. If not specified, all devices are
                                  allowed.
                                  Structure is documented below.
                                items:
                                  properties:
                                    allowedDeviceManagementLevels:
                                      description: |-
                                        A list of allowed device management levels.
                                        An empty list allows all management levels.
                                        Each value may be one of: MANAGEMENT_UNSPECIFIED, NONE, BASIC, COMPLETE.
                                      items:
                                        type: string
                                      type: array
                                    allowedEncryptionStatuses:
                                      description: |-
                                        A list of allowed encryptions statuses.
                                        An empty list allows all statuses.
                                        Each value may be one of: ENCRYPTION_UNSPECIFIED, ENCRYPTION_UNSUPPORTED, UNENCRYPTED, ENCRYPTED.
                                      items:
                                        type: string
                                      type: array
                                    osConstraints:
                                      description: |-
                                        A list of allowed OS versions.
                                        An empty list allows all types and all versions.
                                        Structure is documented below.
                                      items:
                                        properties:
                                          minimumVersion:
                                            description: |-
                                              The minimum allowed OS version. If not set, any version
                                              of this OS satisfies the constraint.
                                              Format: "major.minor.patch" such as "10.5.301", "9.2.1".
                                            type: string
                                          osType:
                                            description: |-
                                              The operating system type of the device.
                                              Possible values are: OS_UNSPECIFIED, DESKTOP_MAC, DESKTOP_WINDOWS, DESKTOP_LINUX, DESKTOP_CHROME_OS, ANDROID, IOS.
                                            type: string
                                          requireVerifiedChromeOs:
                                            description: If you specify DESKTOP_CHROME_OS
                                              for osType, you can optionally include
                                              requireVerifiedChromeOs to require Chrome
                                              Verified Access.
                                            type: boolean
                                        type: object
                                      type: array
                                    requireAdminApproval:
                                      description: Whether the device needs to be
                                        approved by the customer admin.
                                      type: boolean
                                    requireCorpOwned:
                                      description: Whether the device needs to be
                                        corp owned.
                                      type: boolean
                                    requireScreenLock:
                                      description: |-
                                        Whether or not screenlock is required for the DevicePolicy
                                        to be true. Defaults to false.
                                      type: boolean
                                  type: object
                                type: array
                              ipSubnetworks:
                                description: |-
                                  A list of CIDR block IP subnetwork specification. May be IPv4
                                  or IPv6.
                                  Note that for a CIDR IP address block, the specified IP address
                                  portion must be properly truncated (i.e. all the host bits must
                                  be zero) or the input is considered malformed. For example,
                                  "192.0.2.0/24" is accepted but "192.0.2.1/24" is not. Similarly,
                                  for IPv6, "2001:db8::/32" is accepted whereas "2001:db8::1/32"
                                  is not. The originating IP of a request must be in one of the
                                  listed subnets in order for this Condition to be true.
                                  If empty, all IP addresses are allowed.
                                items:
                                  type: string
                                type: array
                              members:
                                description: |-
                                  An allowed list of members (users, service accounts).
                                  Using groups is not supported yet.
                                  The signed-in user originating the request must be a part of one
                                  of the provided members. If not specified, a request may come
                                  from any user (logged in/not logged in, not present in any
                                  groups, etc.).
                                  Formats: user:{emailid}, serviceAccount:{emailid}
                                items:
                                  type: string
                                type: array
                              negate:
                                description: |-
                                  Whether to negate the Condition. If true, the Condition becomes
                                  a NAND over its non-empty fields, each field must be false for
                                  the Condition overall to be satisfied. Defaults to false.
                                type: boolean
                              regions:
                                description: |-
                                  The request must originate from one of the provided
                                  countries/regions.
                                  Format: A valid ISO 3166-1 alpha-2 code.
                                items:
                                  type: string
                                type: array
                              requiredAccessLevels:
                                description: |-
                                  A list of other access levels defined in the same Policy,
                                  referenced by resource name. Referencing an AccessLevel which
                                  does not exist is an error. All access levels listed must be
                                  granted for the Condition to be true.
                                  Format: accessPolicies/{policy_id}/accessLevels/{short_name}
                                items:
                                  type: string
                                type: array
                            type: object
                          type: array
                      type: object
                    type: array
                  custom:
                    description: |-
                      Custom access level conditions are set using the Cloud Common Expression Language to represent the necessary conditions for the level to apply to a request.
                      See CEL spec at: https://github.com/google/cel-spec.
                      Structure is documented below.
                    items:
                      properties:
                        expr:
                          description: |-
                            Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language.
                            This page details the objects and attributes that are used to the build the CEL expressions for
                            custom access levels - https://cloud.google.com/access-context-manager/docs/custom-access-level-spec.
                            Structure is documented below.
                          items:
                            properties:
                              description:
                                description: Description of the expression
                                type: string
                              expression:
                                description: Textual representation of an expression
                                  in Common Expression Language syntax.
                                type: string
                              location:
                                description: String indicating the location of the
                                  expression for error reporting, e.g. a file name
                                  and a position in the file
                                type: string
                              title:
                                description: Title for the expression, i.e. a short
                                  string describing its purpose.
                                type: string
                            type: object
                          type: array
                      type: object
                    type: array
                  description:
                    description: Description of the AccessLevel and its use. Does
                      not affect behavior.
                    type: string
                  name:
                    description: |-
                      Resource name for the Access Level. The short_name component must begin
                      with a letter and only include alphanumeric and '_'.
                      Format: accessPolicies/{policy_id}/accessLevels/{short_name}
                    type: string
                  parent:
                    description: |-
                      The AccessPolicy this AccessLevel lives in.
                      Format: accessPolicies/{policy_id}
                    type: string
                  title:
                    description: Human readable title. Must be unique within the Policy.
                    type: string
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  This field is planned to replace the DeletionPolicy field in a future
                  release. Currently, both could be set independently and non-default
                  values would be honored if the feature flag is enabled. If both are
                  custom, the DeletionPolicy field will be ignored.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: |-
                  PublishConnectionDetailsTo specifies the connection secret config which
                  contains a name, metadata and a reference to secret store config to
                  which any connection details for this managed resource should be written.
                  Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: |-
                      SecretStoreConfigRef specifies which secret store config should be used
                      for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations are the annotations to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.annotations".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Labels are the labels/tags to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      type:
                        description: |-
                          Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                  This field is planned to be replaced in a future release in favor of
                  PublishConnectionDetailsTo. Currently, both could be set independently
                  and connection details would be published to both without affecting
                  each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
            x-kubernetes-validations:
            - message: spec.forProvider.name is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.name)
                || (has(self.initProvider) && has(self.initProvider.name))'
            - message: spec.forProvider.parent is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.parent)
                || (has(self.initProvider) && has(self.initProvider.parent))'
            - message: spec.forProvider.title is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.title)
                || (has(self.initProvider) && has(self.initProvider.title))'
          status:
            description: AccessLevelStatus defines the observed state of AccessLevel.
            properties:
              atProvider:
                properties:
                  basic:
                    description: |-
                      A set of predefined conditions for the access level and a combining function.
                      Structure is documented below.
                    items:
                      properties:
                        combiningFunction:
                          description: |-
                            How the conditions list should be combined to determine if a request
                            is granted this AccessLevel. If AND is used, each Condition in
                            conditions must be satisfied for the AccessLevel to be applied. If
                            OR is used, at least one Condition in conditions must be satisfied
                            for the AccessLevel to be applied.
                            Default value is AND.
                            Possible values are: AND, OR.
                          type: string
                        conditions:
                          description: |-
                            A set of requirements for the AccessLevel to be granted.
                            Structure is documented below.
                          items:
                            properties:
                              devicePolicy:
                                description: |-
                                  Device specific restrictions, all restrictions must hold for
                                  the Condition to be true. If not specified, all devices are
                                  allowed.
                                  Structure is documented below.
                                items:
                                  properties:
                                    allowedDeviceManagementLevels:
                                      description: |-
                                        A list of allowed device management levels.
                                        An empty list allows all management levels.
                                        Each value may be one of: MANAGEMENT_UNSPECIFIED, NONE, BASIC, COMPLETE.
                                      items:
                                        type: string
                                      type: array
                                    allowedEncryptionStatuses:
                                      description: |-
                                        A list of allowed encryptions statuses.
                                        An empty list allows all statuses.
                                        Each value may be one of: ENCRYPTION_UNSPECIFIED, ENCRYPTION_UNSUPPORTED, UNENCRYPTED, ENCRYPTED.
                                      items:
                                        type: string
                                      type: array
                                    osConstraints:
                                      description: |-
                                        A list of allowed OS versions.
                                        An empty list allows all types and all versions.
                                        Structure is documented below.
                                      items:
                                        properties:
                                          minimumVersion:
                                            description: |-
                                              The minimum allowed OS version. If not set, any version
                                              of this OS satisfies the constraint.
                                              Format: "major.minor.patch" such as "10.5.301", "9.2.1".
                                            type: string
                                          osType:
                                            description: |-
                                              The operating system type of the device.
                                              Possible values are: OS_UNSPECIFIED, DESKTOP_MAC, DESKTOP_WINDOWS, DESKTOP_LINUX, DESKTOP_CHROME_OS, ANDROID, IOS.
                                            type: string
                                          requireVerifiedChromeOs:
                                            description: If you specify DESKTOP_CHROME_OS
                                              for osType, you can optionally include
                                              requireVerifiedChromeOs to require Chrome
                                              Verified Access.
                                            type: boolean
                                        type: object
                                      type: array
                                    requireAdminApproval:
                                      description: Whether the device needs to be
                                        approved by the customer admin.
                                      type: boolean
                                    requireCorpOwned:
                                      description: Whether the device needs to be
                                        corp owned.
                                      type: boolean
                                    requireScreenLock:
                                      description: |-
                                        Whether or not screenlock is required for the DevicePolicy
                                        to be true. Defaults to false.
                                      type: boolean
                                  type: object
                                type: array
                              ipSubnetworks:
                                description: |-
                                  A list of CIDR block IP subnetwork specification. May be IPv4
                                  or IPv6.
                                  Note that for a CIDR IP address block, the specified IP address
                                  portion must be properly truncated (i.e. all the host bits must
                                  be zero) or the input is considered malformed. For example,
                                  "192.0.2.0/24" is accepted but "192.0.2.1/24" is not. Similarly,
                                  for IPv6, "2001:db8::/32" is accepted whereas "2001:db8::1/32"
                                  is not. The originating IP of a request must be in one of the
                                  listed subnets in order for this Condition to be true.
                                  If empty, all IP addresses are allowed.
                                items:
                                  type: string
                                type: array
                              members:
                                description: |-
                                  An allowed list of members (users, service accounts).
                                  Using groups is not supported yet.
                                  The signed-in user originating the request must be a part of one
                                  of the provided members. If not specified, a request may come
                                  from any user (logged in/not logged in, not present in any
                                  groups, etc.).
                                  Formats: user:{emailid}, serviceAccount:{emailid}
                                items:
                                  type: string
                                type: array
                              negate:
                                description: |-
                                  Whether to negate the Condition. If true, the Condition becomes
                                  a NAND over its non-empty fields, each field must be false for
                                  the Condition overall to be satisfied. Defaults to false.
                                type: boolean
                              regions:
                                description: |-
                                  The request must originate from one of the provided
                                  countries/regions.
                                  Format: A valid ISO 3166-1 alpha-2 code.
                                items:
                                  type: string
                                type: array
                              requiredAccessLevels:
                                description: |-
                                  A list of other access levels defined in the same Policy,
                                  referenced by resource name. Referencing an AccessLevel which
                                  does not exist is an error. All access levels listed must be
                                  granted for the Condition to be true.
                                  Format: accessPolicies/{policy_id}/accessLevels/{short_name}
                                items:
                                  type: string
                                type: array
                            type: object
                          type: array
                      type: object
                    type: array
                  custom:
                    description: |-
                      Custom access level conditions are set using the Cloud Common Expression Language to represent the necessary conditions for the level to apply to a request.
                      See CEL spec at: https://github.com/google/cel-spec.
                      Structure is documented below.
                    items:
                      properties:
                        expr:
                          description: |-
                            Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language.
                            This page details the objects and attributes that are used to the build the CEL expressions for
                            custom access levels - https://cloud.google.com/access-context-manager/docs/custom-access-level-spec.
                            Structure is documented below.
                          items:
                            properties:
                              description:
                                description: Description of the expression
                                type: string
                              expression:
                                description: Textual representation of an expression
                                  in Common Expression Language syntax.
                                type: string
                              location:
                                description: String indicating the location of the
                                  expression for error reporting, e.g. a file name
                                  and a position in the file
                                type: string
                              title:
                                description: Title for the expression, i.e. a short
                                  string describing its purpose.
                                type: string
                            type: object
                          type: array
                      type: object
                    type: array
                  description:
                    description: Description of the AccessLevel and its use. Does
                      not affect behavior.
                    type: string
                  id:
                    description: an identifier for the resource with format {{name}}
                    type: string
                  name:
                    description: |-
                      Resource name for the Access Level. The short_name component must begin
                      with a letter and only include alphanumeric and '_'.
                      Format: accessPolicies/{policy_id}/accessLevels/{short_name}
                    type: string
                  parent:
                    description: |-
                      The AccessPolicy this AccessLevel lives in.
                      Format: accessPolicies/{policy_id}
                    type: string
                  title:
                    description: Human readable title. Must be unique within the Policy.
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
