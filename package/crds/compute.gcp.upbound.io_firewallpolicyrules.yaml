---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: firewallpolicyrules.compute.gcp.upbound.io
spec:
  group: compute.gcp.upbound.io
  names:
    categories:
    - crossplane
    - managed
    - gcp
    kind: FirewallPolicyRule
    listKind: FirewallPolicyRuleList
    plural: firewallpolicyrules
    singular: firewallpolicyrule
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: FirewallPolicyRule is the Schema for the FirewallPolicyRules
          API. The Compute FirewallPolicyRule resource
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: FirewallPolicyRuleSpec defines the desired state of FirewallPolicyRule
            properties:
              deletionPolicy:
                default: Delete
                description: |-
                  DeletionPolicy specifies what will happen to the underlying external
                  when this managed resource is deleted - either "Delete" or "Orphan" the
                  external resource.
                  This field is planned to be deprecated in favor of the ManagementPolicies
                  field in a future release. Currently, both could be set independently and
                  non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  action:
                    description: The Action to perform when the client connection
                      triggers the rule. Valid actions are "allow", "deny" and "goto_next".
                    type: string
                  description:
                    description: An optional description for this resource.
                    type: string
                  direction:
                    description: 'The direction in which this rule applies. Possible
                      values: INGRESS, EGRESS'
                    type: string
                  disabled:
                    description: Denotes whether the firewall policy rule is disabled.
                      When set to true, the firewall policy rule is not enforced and
                      traffic behaves as if it did not exist. If this is unspecified,
                      the firewall policy rule will be enabled.
                    type: boolean
                  enableLogging:
                    description: 'Denotes whether to enable logging for a particular
                      rule. If logging is enabled, logs will be exported to the configured
                      export destination in Stackdriver. Logs may be exported to BigQuery
                      or Pub/Sub. Note: you cannot enable logging on "goto_next" rules.'
                    type: boolean
                  firewallPolicy:
                    description: The firewall policy of the resource.
                    type: string
                  firewallPolicyRef:
                    description: Reference to a FirewallPolicy in compute to populate
                      firewallPolicy.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  firewallPolicySelector:
                    description: Selector for a FirewallPolicy in compute to populate
                      firewallPolicy.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  match:
                    description: A match condition that incoming traffic is evaluated
                      against. If it evaluates to true, the corresponding 'action'
                      is enforced.
                    items:
                      properties:
                        destAddressGroups:
                          description: Address groups which should be matched against
                            the traffic destination. Maximum number of destination
                            address groups is 10. Destination address groups is only
                            supported in Egress rules.
                          items:
                            type: string
                          type: array
                        destFqdns:
                          description: Domain names that will be used to match against
                            the resolved domain name of destination of traffic. Can
                            only be specified if DIRECTION is egress.
                          items:
                            type: string
                          type: array
                        destIpRanges:
                          description: CIDR IP address range. Maximum number of destination
                            CIDR IP ranges allowed is 256.
                          items:
                            type: string
                          type: array
                        destRegionCodes:
                          description: The Unicode country codes whose IP addresses
                            will be used to match against the source of traffic. Can
                            only be specified if DIRECTION is egress.
                          items:
                            type: string
                          type: array
                        destThreatIntelligences:
                          description: Name of the Google Cloud Threat Intelligence
                            list.
                          items:
                            type: string
                          type: array
                        layer4Configs:
                          description: Pairs of IP protocols and ports that the rule
                            should match.
                          items:
                            properties:
                              ipProtocol:
                                description: The IP protocol to which this rule applies.
                                  The protocol type is required when creating a firewall
                                  rule. This value can either be one of the following
                                  well known protocol strings (tcp, udp, icmp, esp,
                                  ah, ipip, sctp), or the IP protocol number.
                                type: string
                              ports:
                                description: An optional list of ports to which this
                                  rule applies. This field is only applicable for
                                  UDP or TCP protocol. Each entry must be either an
                                  integer or a range. If not specified, this rule
                                  applies to connections through any port.
                                items:
                                  type: string
                                type: array
                            type: object
                          type: array
                        srcAddressGroups:
                          description: Address groups which should be matched against
                            the traffic source. Maximum number of source address groups
                            is 10. Source address groups is only supported in Ingress
                            rules.
                          items:
                            type: string
                          type: array
                        srcFqdns:
                          description: Domain names that will be used to match against
                            the resolved domain name of source of traffic. Can only
                            be specified if DIRECTION is ingress.
                          items:
                            type: string
                          type: array
                        srcIpRanges:
                          description: CIDR IP address range. Maximum number of source
                            CIDR IP ranges allowed is 256.
                          items:
                            type: string
                          type: array
                        srcRegionCodes:
                          description: The Unicode country codes whose IP addresses
                            will be used to match against the source of traffic. Can
                            only be specified if DIRECTION is ingress.
                          items:
                            type: string
                          type: array
                        srcThreatIntelligences:
                          description: Name of the Google Cloud Threat Intelligence
                            list.
                          items:
                            type: string
                          type: array
                      type: object
                    type: array
                  priority:
                    description: An integer indicating the priority of a rule in the
                      list. The priority must be a positive value between 0 and 2147483647.
                      Rules are evaluated from highest to lowest priority where 0
                      is the highest priority and 2147483647 is the lowest prority.
                    type: number
                  securityProfileGroup:
                    description: 'A fully-qualified URL of a SecurityProfileGroup
                      resource. Example: https://networksecurity.googleapis.com/v1/organizations/{organizationId}/locations/global/securityProfileGroups/my-security-profile-group.
                      It must be specified if action = ''apply_security_profile_group''
                      and cannot be specified for other actions.'
                    type: string
                  targetResources:
                    description: A list of network resource URLs to which this rule
                      applies. This field allows you to control which network's VMs
                      get this rule. If this field is left blank, all VMs within the
                      organization will receive the rule.
                    items:
                      type: string
                    type: array
                  targetServiceAccounts:
                    description: A list of service accounts indicating the sets of
                      instances that are applied with this rule.
                    items:
                      type: string
                    type: array
                  tlsInspect:
                    description: Boolean flag indicating if the traffic should be
                      TLS decrypted. It can be set only if action = 'apply_security_profile_group'
                      and cannot be set for other actions.
                    type: boolean
                type: object
              initProvider:
                description: |-
                  THIS IS A BETA FIELD. It will be honored
                  unless the Management Policies feature flag is disabled.
                  InitProvider holds the same fields as ForProvider, with the exception
                  of Identifier and other resource reference fields. The fields that are
                  in InitProvider are merged into ForProvider when the resource is created.
                  The same fields are also added to the terraform ignore_changes hook, to
                  avoid updating them after creation. This is useful for fields that are
                  required on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them, like an
                  autoscaler.
                properties:
                  action:
                    description: The Action to perform when the client connection
                      triggers the rule. Valid actions are "allow", "deny" and "goto_next".
                    type: string
                  description:
                    description: An optional description for this resource.
                    type: string
                  direction:
                    description: 'The direction in which this rule applies. Possible
                      values: INGRESS, EGRESS'
                    type: string
                  disabled:
                    description: Denotes whether the firewall policy rule is disabled.
                      When set to true, the firewall policy rule is not enforced and
                      traffic behaves as if it did not exist. If this is unspecified,
                      the firewall policy rule will be enabled.
                    type: boolean
                  enableLogging:
                    description: 'Denotes whether to enable logging for a particular
                      rule. If logging is enabled, logs will be exported to the configured
                      export destination in Stackdriver. Logs may be exported to BigQuery
                      or Pub/Sub. Note: you cannot enable logging on "goto_next" rules.'
                    type: boolean
                  firewallPolicy:
                    description: The firewall policy of the resource.
                    type: string
                  firewallPolicyRef:
                    description: Reference to a FirewallPolicy in compute to populate
                      firewallPolicy.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  firewallPolicySelector:
                    description: Selector for a FirewallPolicy in compute to populate
                      firewallPolicy.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  match:
                    description: A match condition that incoming traffic is evaluated
                      against. If it evaluates to true, the corresponding 'action'
                      is enforced.
                    items:
                      properties:
                        destAddressGroups:
                          description: Address groups which should be matched against
                            the traffic destination. Maximum number of destination
                            address groups is 10. Destination address groups is only
                            supported in Egress rules.
                          items:
                            type: string
                          type: array
                        destFqdns:
                          description: Domain names that will be used to match against
                            the resolved domain name of destination of traffic. Can
                            only be specified if DIRECTION is egress.
                          items:
                            type: string
                          type: array
                        destIpRanges:
                          description: CIDR IP address range. Maximum number of destination
                            CIDR IP ranges allowed is 256.
                          items:
                            type: string
                          type: array
                        destRegionCodes:
                          description: The Unicode country codes whose IP addresses
                            will be used to match against the source of traffic. Can
                            only be specified if DIRECTION is egress.
                          items:
                            type: string
                          type: array
                        destThreatIntelligences:
                          description: Name of the Google Cloud Threat Intelligence
                            list.
                          items:
                            type: string
                          type: array
                        layer4Configs:
                          description: Pairs of IP protocols and ports that the rule
                            should match.
                          items:
                            properties:
                              ipProtocol:
                                description: The IP protocol to which this rule applies.
                                  The protocol type is required when creating a firewall
                                  rule. This value can either be one of the following
                                  well known protocol strings (tcp, udp, icmp, esp,
                                  ah, ipip, sctp), or the IP protocol number.
                                type: string
                              ports:
                                description: An optional list of ports to which this
                                  rule applies. This field is only applicable for
                                  UDP or TCP protocol. Each entry must be either an
                                  integer or a range. If not specified, this rule
                                  applies to connections through any port.
                                items:
                                  type: string
                                type: array
                            type: object
                          type: array
                        srcAddressGroups:
                          description: Address groups which should be matched against
                            the traffic source. Maximum number of source address groups
                            is 10. Source address groups is only supported in Ingress
                            rules.
                          items:
                            type: string
                          type: array
                        srcFqdns:
                          description: Domain names that will be used to match against
                            the resolved domain name of source of traffic. Can only
                            be specified if DIRECTION is ingress.
                          items:
                            type: string
                          type: array
                        srcIpRanges:
                          description: CIDR IP address range. Maximum number of source
                            CIDR IP ranges allowed is 256.
                          items:
                            type: string
                          type: array
                        srcRegionCodes:
                          description: The Unicode country codes whose IP addresses
                            will be used to match against the source of traffic. Can
                            only be specified if DIRECTION is ingress.
                          items:
                            type: string
                          type: array
                        srcThreatIntelligences:
                          description: Name of the Google Cloud Threat Intelligence
                            list.
                          items:
                            type: string
                          type: array
                      type: object
                    type: array
                  priority:
                    description: An integer indicating the priority of a rule in the
                      list. The priority must be a positive value between 0 and 2147483647.
                      Rules are evaluated from highest to lowest priority where 0
                      is the highest priority and 2147483647 is the lowest prority.
                    type: number
                  securityProfileGroup:
                    description: 'A fully-qualified URL of a SecurityProfileGroup
                      resource. Example: https://networksecurity.googleapis.com/v1/organizations/{organizationId}/locations/global/securityProfileGroups/my-security-profile-group.
                      It must be specified if action = ''apply_security_profile_group''
                      and cannot be specified for other actions.'
                    type: string
                  targetResources:
                    description: A list of network resource URLs to which this rule
                      applies. This field allows you to control which network's VMs
                      get this rule. If this field is left blank, all VMs within the
                      organization will receive the rule.
                    items:
                      type: string
                    type: array
                  targetServiceAccounts:
                    description: A list of service accounts indicating the sets of
                      instances that are applied with this rule.
                    items:
                      type: string
                    type: array
                  tlsInspect:
                    description: Boolean flag indicating if the traffic should be
                      TLS decrypted. It can be set only if action = 'apply_security_profile_group'
                      and cannot be set for other actions.
                    type: boolean
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  This field is planned to replace the DeletionPolicy field in a future
                  release. Currently, both could be set independently and non-default
                  values would be honored if the feature flag is enabled. If both are
                  custom, the DeletionPolicy field will be ignored.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: |-
                  PublishConnectionDetailsTo specifies the connection secret config which
                  contains a name, metadata and a reference to secret store config to
                  which any connection details for this managed resource should be written.
                  Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: |-
                      SecretStoreConfigRef specifies which secret store config should be used
                      for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations are the annotations to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.annotations".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Labels are the labels/tags to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      type:
                        description: |-
                          Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                  This field is planned to be replaced in a future release in favor of
                  PublishConnectionDetailsTo. Currently, both could be set independently
                  and connection details would be published to both without affecting
                  each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
            x-kubernetes-validations:
            - message: spec.forProvider.action is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.action)
                || (has(self.initProvider) && has(self.initProvider.action))'
            - message: spec.forProvider.direction is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.direction)
                || (has(self.initProvider) && has(self.initProvider.direction))'
            - message: spec.forProvider.match is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.match)
                || (has(self.initProvider) && has(self.initProvider.match))'
            - message: spec.forProvider.priority is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.priority)
                || (has(self.initProvider) && has(self.initProvider.priority))'
          status:
            description: FirewallPolicyRuleStatus defines the observed state of FirewallPolicyRule.
            properties:
              atProvider:
                properties:
                  action:
                    description: The Action to perform when the client connection
                      triggers the rule. Valid actions are "allow", "deny" and "goto_next".
                    type: string
                  description:
                    description: An optional description for this resource.
                    type: string
                  direction:
                    description: 'The direction in which this rule applies. Possible
                      values: INGRESS, EGRESS'
                    type: string
                  disabled:
                    description: Denotes whether the firewall policy rule is disabled.
                      When set to true, the firewall policy rule is not enforced and
                      traffic behaves as if it did not exist. If this is unspecified,
                      the firewall policy rule will be enabled.
                    type: boolean
                  enableLogging:
                    description: 'Denotes whether to enable logging for a particular
                      rule. If logging is enabled, logs will be exported to the configured
                      export destination in Stackdriver. Logs may be exported to BigQuery
                      or Pub/Sub. Note: you cannot enable logging on "goto_next" rules.'
                    type: boolean
                  firewallPolicy:
                    description: The firewall policy of the resource.
                    type: string
                  id:
                    description: an identifier for the resource with format locations/global/firewallPolicies/{{firewall_policy}}/rules/{{priority}}
                    type: string
                  kind:
                    description: Type of the resource. Always compute#firewallPolicyRule
                      for firewall policy rules
                    type: string
                  match:
                    description: A match condition that incoming traffic is evaluated
                      against. If it evaluates to true, the corresponding 'action'
                      is enforced.
                    items:
                      properties:
                        destAddressGroups:
                          description: Address groups which should be matched against
                            the traffic destination. Maximum number of destination
                            address groups is 10. Destination address groups is only
                            supported in Egress rules.
                          items:
                            type: string
                          type: array
                        destFqdns:
                          description: Domain names that will be used to match against
                            the resolved domain name of destination of traffic. Can
                            only be specified if DIRECTION is egress.
                          items:
                            type: string
                          type: array
                        destIpRanges:
                          description: CIDR IP address range. Maximum number of destination
                            CIDR IP ranges allowed is 256.
                          items:
                            type: string
                          type: array
                        destRegionCodes:
                          description: The Unicode country codes whose IP addresses
                            will be used to match against the source of traffic. Can
                            only be specified if DIRECTION is egress.
                          items:
                            type: string
                          type: array
                        destThreatIntelligences:
                          description: Name of the Google Cloud Threat Intelligence
                            list.
                          items:
                            type: string
                          type: array
                        layer4Configs:
                          description: Pairs of IP protocols and ports that the rule
                            should match.
                          items:
                            properties:
                              ipProtocol:
                                description: The IP protocol to which this rule applies.
                                  The protocol type is required when creating a firewall
                                  rule. This value can either be one of the following
                                  well known protocol strings (tcp, udp, icmp, esp,
                                  ah, ipip, sctp), or the IP protocol number.
                                type: string
                              ports:
                                description: An optional list of ports to which this
                                  rule applies. This field is only applicable for
                                  UDP or TCP protocol. Each entry must be either an
                                  integer or a range. If not specified, this rule
                                  applies to connections through any port.
                                items:
                                  type: string
                                type: array
                            type: object
                          type: array
                        srcAddressGroups:
                          description: Address groups which should be matched against
                            the traffic source. Maximum number of source address groups
                            is 10. Source address groups is only supported in Ingress
                            rules.
                          items:
                            type: string
                          type: array
                        srcFqdns:
                          description: Domain names that will be used to match against
                            the resolved domain name of source of traffic. Can only
                            be specified if DIRECTION is ingress.
                          items:
                            type: string
                          type: array
                        srcIpRanges:
                          description: CIDR IP address range. Maximum number of source
                            CIDR IP ranges allowed is 256.
                          items:
                            type: string
                          type: array
                        srcRegionCodes:
                          description: The Unicode country codes whose IP addresses
                            will be used to match against the source of traffic. Can
                            only be specified if DIRECTION is ingress.
                          items:
                            type: string
                          type: array
                        srcThreatIntelligences:
                          description: Name of the Google Cloud Threat Intelligence
                            list.
                          items:
                            type: string
                          type: array
                      type: object
                    type: array
                  priority:
                    description: An integer indicating the priority of a rule in the
                      list. The priority must be a positive value between 0 and 2147483647.
                      Rules are evaluated from highest to lowest priority where 0
                      is the highest priority and 2147483647 is the lowest prority.
                    type: number
                  ruleTupleCount:
                    description: Calculation of the complexity of a single firewall
                      policy rule.
                    type: number
                  securityProfileGroup:
                    description: 'A fully-qualified URL of a SecurityProfileGroup
                      resource. Example: https://networksecurity.googleapis.com/v1/organizations/{organizationId}/locations/global/securityProfileGroups/my-security-profile-group.
                      It must be specified if action = ''apply_security_profile_group''
                      and cannot be specified for other actions.'
                    type: string
                  targetResources:
                    description: A list of network resource URLs to which this rule
                      applies. This field allows you to control which network's VMs
                      get this rule. If this field is left blank, all VMs within the
                      organization will receive the rule.
                    items:
                      type: string
                    type: array
                  targetServiceAccounts:
                    description: A list of service accounts indicating the sets of
                      instances that are applied with this rule.
                    items:
                      type: string
                    type: array
                  tlsInspect:
                    description: Boolean flag indicating if the traffic should be
                      TLS decrypted. It can be set only if action = 'apply_security_profile_group'
                      and cannot be set for other actions.
                    type: boolean
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: |-
                  ObservedGeneration is the latest metadata.generation
                  which resulted in either a ready state, or stalled due to error
                  it can not recover from without human intervention.
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1beta2
    schema:
      openAPIV3Schema:
        description: FirewallPolicyRule is the Schema for the FirewallPolicyRules
          API. Represents a rule that describes one or more match conditions along
          with the action to be taken when traffic matches this condition (allow or
          deny).
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: FirewallPolicyRuleSpec defines the desired state of FirewallPolicyRule
            properties:
              deletionPolicy:
                default: Delete
                description: |-
                  DeletionPolicy specifies what will happen to the underlying external
                  when this managed resource is deleted - either "Delete" or "Orphan" the
                  external resource.
                  This field is planned to be deprecated in favor of the ManagementPolicies
                  field in a future release. Currently, both could be set independently and
                  non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  action:
                    description: The Action to perform when the client connection
                      triggers the rule. Valid actions are "allow", "deny", "goto_next"
                      and "apply_security_profile_group".
                    type: string
                  description:
                    description: An optional description for this resource.
                    type: string
                  direction:
                    description: |-
                      The direction in which this rule applies.
                      Possible values are: INGRESS, EGRESS.
                    type: string
                  disabled:
                    description: |-
                      Denotes whether the firewall policy rule is disabled.
                      When set to true, the firewall policy rule is not enforced and traffic behaves as if it did not exist.
                      If this is unspecified, the firewall policy rule will be enabled.
                    type: boolean
                  enableLogging:
                    description: |-
                      Denotes whether to enable logging for a particular rule.
                      If logging is enabled, logs will be exported to the configured export destination in Stackdriver.
                      Logs may be exported to BigQuery or Pub/Sub.
                      Note: you cannot enable logging on "goto_next" rules.
                    type: boolean
                  firewallPolicy:
                    description: The firewall policy of the resource.
                    type: string
                  firewallPolicyRef:
                    description: Reference to a FirewallPolicy in compute to populate
                      firewallPolicy.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  firewallPolicySelector:
                    description: Selector for a FirewallPolicy in compute to populate
                      firewallPolicy.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  match:
                    description: |-
                      A match condition that incoming traffic is evaluated against. If it evaluates to true, the corresponding 'action' is enforced.
                      Structure is documented below.
                    properties:
                      destAddressGroups:
                        description: Address groups which should be matched against
                          the traffic destination. Maximum number of destination address
                          groups is 10.
                        items:
                          type: string
                        type: array
                      destAddressGroupsRefs:
                        description: References to AddressGroup in networksecurity
                          to populate destAddressGroups.
                        items:
                          description: A Reference to a named object.
                          properties:
                            name:
                              description: Name of the referenced object.
                              type: string
                            policy:
                              description: Policies for referencing.
                              properties:
                                resolution:
                                  default: Required
                                  description: |-
                                    Resolution specifies whether resolution of this reference is required.
                                    The default is 'Required', which means the reconcile will fail if the
                                    reference cannot be resolved. 'Optional' means this reference will be
                                    a no-op if it cannot be resolved.
                                  enum:
                                  - Required
                                  - Optional
                                  type: string
                                resolve:
                                  description: |-
                                    Resolve specifies when this reference should be resolved. The default
                                    is 'IfNotPresent', which will attempt to resolve the reference only when
                                    the corresponding field is not present. Use 'Always' to resolve the
                                    reference on every reconcile.
                                  enum:
                                  - Always
                                  - IfNotPresent
                                  type: string
                              type: object
                          required:
                          - name
                          type: object
                        type: array
                      destAddressGroupsSelector:
                        description: Selector for a list of AddressGroup in networksecurity
                          to populate destAddressGroups.
                        properties:
                          matchControllerRef:
                            description: |-
                              MatchControllerRef ensures an object with the same controller reference
                              as the selecting object is selected.
                            type: boolean
                          matchLabels:
                            additionalProperties:
                              type: string
                            description: MatchLabels ensures an object with matching
                              labels is selected.
                            type: object
                          policy:
                            description: Policies for selection.
                            properties:
                              resolution:
                                default: Required
                                description: |-
                                  Resolution specifies whether resolution of this reference is required.
                                  The default is 'Required', which means the reconcile will fail if the
                                  reference cannot be resolved. 'Optional' means this reference will be
                                  a no-op if it cannot be resolved.
                                enum:
                                - Required
                                - Optional
                                type: string
                              resolve:
                                description: |-
                                  Resolve specifies when this reference should be resolved. The default
                                  is 'IfNotPresent', which will attempt to resolve the reference only when
                                  the corresponding field is not present. Use 'Always' to resolve the
                                  reference on every reconcile.
                                enum:
                                - Always
                                - IfNotPresent
                                type: string
                            type: object
                        type: object
                      destFqdns:
                        description: Fully Qualified Domain Name (FQDN) which should
                          be matched against traffic destination. Maximum number of
                          destination fqdn allowed is 100.
                        items:
                          type: string
                        type: array
                      destIpRanges:
                        description: CIDR IP address range. Maximum number of destination
                          CIDR IP ranges allowed is 5000.
                        items:
                          type: string
                        type: array
                      destRegionCodes:
                        description: Region codes whose IP addresses will be used
                          to match for destination of traffic. Should be specified
                          as 2 letter country code defined as per ISO 3166 alpha-2
                          country codes. ex."US" Maximum number of dest region codes
                          allowed is 5000.
                        items:
                          type: string
                        type: array
                      destThreatIntelligences:
                        description: Names of Network Threat Intelligence lists. The
                          IPs in these lists will be matched against traffic destination.
                        items:
                          type: string
                        type: array
                      layer4Configs:
                        description: |-
                          Pairs of IP protocols and ports that the rule should match.
                          Structure is documented below.
                        items:
                          properties:
                            ipProtocol:
                              description: |-
                                The IP protocol to which this rule applies. The protocol type is required when creating a firewall rule.
                                This value can either be one of the following well known protocol strings (tcp, udp, icmp, esp, ah, ipip, sctp), or the IP protocol number.
                              type: string
                            ports:
                              description: An optional list of ports to which this
                                rule applies. This field is only applicable for UDP
                                or TCP protocol. Each entry must be either an integer
                                or a range. If not specified, this rule applies to
                                connections through any port.
                              items:
                                type: string
                              type: array
                          type: object
                        type: array
                      srcAddressGroups:
                        description: Address groups which should be matched against
                          the traffic source. Maximum number of source address groups
                          is 10.
                        items:
                          type: string
                        type: array
                      srcFqdns:
                        description: Fully Qualified Domain Name (FQDN) which should
                          be matched against traffic source. Maximum number of source
                          fqdn allowed is 100.
                        items:
                          type: string
                        type: array
                      srcIpRanges:
                        description: CIDR IP address range. Maximum number of source
                          CIDR IP ranges allowed is 5000.
                        items:
                          type: string
                        type: array
                      srcRegionCodes:
                        description: Region codes whose IP addresses will be used
                          to match for source of traffic. Should be specified as 2
                          letter country code defined as per ISO 3166 alpha-2 country
                          codes. ex."US" Maximum number of source region codes allowed
                          is 5000.
                        items:
                          type: string
                        type: array
                      srcSecureTags:
                        description: |-
                          List of secure tag values, which should be matched at the source of the traffic. For INGRESS rule, if all the srcSecureTag are INEFFECTIVE, and there is no srcIpRange, this rule will be ignored. Maximum number of source tag values allowed is 256.
                          Structure is documented below.
                        items:
                          properties:
                            name:
                              description: Name of the secure tag, created with TagManager's
                                TagValue API.
                              type: string
                            nameRef:
                              description: Reference to a TagValue in tags to populate
                                name.
                              properties:
                                name:
                                  description: Name of the referenced object.
                                  type: string
                                policy:
                                  description: Policies for referencing.
                                  properties:
                                    resolution:
                                      default: Required
                                      description: |-
                                        Resolution specifies whether resolution of this reference is required.
                                        The default is 'Required', which means the reconcile will fail if the
                                        reference cannot be resolved. 'Optional' means this reference will be
                                        a no-op if it cannot be resolved.
                                      enum:
                                      - Required
                                      - Optional
                                      type: string
                                    resolve:
                                      description: |-
                                        Resolve specifies when this reference should be resolved. The default
                                        is 'IfNotPresent', which will attempt to resolve the reference only when
                                        the corresponding field is not present. Use 'Always' to resolve the
                                        reference on every reconcile.
                                      enum:
                                      - Always
                                      - IfNotPresent
                                      type: string
                                  type: object
                              required:
                              - name
                              type: object
                            nameSelector:
                              description: Selector for a TagValue in tags to populate
                                name.
                              properties:
                                matchControllerRef:
                                  description: |-
                                    MatchControllerRef ensures an object with the same controller reference
                                    as the selecting object is selected.
                                  type: boolean
                                matchLabels:
                                  additionalProperties:
                                    type: string
                                  description: MatchLabels ensures an object with
                                    matching labels is selected.
                                  type: object
                                policy:
                                  description: Policies for selection.
                                  properties:
                                    resolution:
                                      default: Required
                                      description: |-
                                        Resolution specifies whether resolution of this reference is required.
                                        The default is 'Required', which means the reconcile will fail if the
                                        reference cannot be resolved. 'Optional' means this reference will be
                                        a no-op if it cannot be resolved.
                                      enum:
                                      - Required
                                      - Optional
                                      type: string
                                    resolve:
                                      description: |-
                                        Resolve specifies when this reference should be resolved. The default
                                        is 'IfNotPresent', which will attempt to resolve the reference only when
                                        the corresponding field is not present. Use 'Always' to resolve the
                                        reference on every reconcile.
                                      enum:
                                      - Always
                                      - IfNotPresent
                                      type: string
                                  type: object
                              type: object
                          type: object
                        type: array
                      srcThreatIntelligences:
                        description: Names of Network Threat Intelligence lists. The
                          IPs in these lists will be matched against traffic source.
                        items:
                          type: string
                        type: array
                    type: object
                  priority:
                    description: |-
                      An integer indicating the priority of a rule in the list.
                      The priority must be a positive value between 0 and 2147483647.
                      Rules are evaluated from highest to lowest priority where 0 is the highest priority and 2147483647 is the lowest prority.
                    type: number
                  securityProfileGroup:
                    description: |-
                      A fully-qualified URL of a SecurityProfile resource instance.
                      Example: https://networksecurity.googleapis.com/v1/projects/{project}/locations/{location}/securityProfileGroups/my-security-profile-group
                      Must be specified if action = 'apply_security_profile_group' and cannot be specified for other actions.
                    type: string
                  targetResources:
                    description: |-
                      A list of network resource URLs to which this rule applies.
                      This field allows you to control which network's VMs get this rule.
                      If this field is left blank, all VMs within the organization will receive the rule.
                    items:
                      type: string
                    type: array
                  targetSecureTags:
                    description: |-
                      A list of secure tags that controls which instances the firewall rule applies to.
                      If targetSecureTag are specified, then the firewall rule applies only to instances in the VPC network that have one of those EFFECTIVE secure tags, if all the targetSecureTag are in INEFFECTIVE state, then this rule will be ignored.
                      targetSecureTag may not be set at the same time as targetServiceAccounts. If neither targetServiceAccounts nor targetSecureTag are specified, the firewall rule applies to all instances on the specified network. Maximum number of target secure tags allowed is 256.
                      Structure is documented below.
                    items:
                      properties:
                        name:
                          description: Name of the secure tag, created with TagManager's
                            TagValue API.
                          type: string
                        nameRef:
                          description: Reference to a TagValue in tags to populate
                            name.
                          properties:
                            name:
                              description: Name of the referenced object.
                              type: string
                            policy:
                              description: Policies for referencing.
                              properties:
                                resolution:
                                  default: Required
                                  description: |-
                                    Resolution specifies whether resolution of this reference is required.
                                    The default is 'Required', which means the reconcile will fail if the
                                    reference cannot be resolved. 'Optional' means this reference will be
                                    a no-op if it cannot be resolved.
                                  enum:
                                  - Required
                                  - Optional
                                  type: string
                                resolve:
                                  description: |-
                                    Resolve specifies when this reference should be resolved. The default
                                    is 'IfNotPresent', which will attempt to resolve the reference only when
                                    the corresponding field is not present. Use 'Always' to resolve the
                                    reference on every reconcile.
                                  enum:
                                  - Always
                                  - IfNotPresent
                                  type: string
                              type: object
                          required:
                          - name
                          type: object
                        nameSelector:
                          description: Selector for a TagValue in tags to populate
                            name.
                          properties:
                            matchControllerRef:
                              description: |-
                                MatchControllerRef ensures an object with the same controller reference
                                as the selecting object is selected.
                              type: boolean
                            matchLabels:
                              additionalProperties:
                                type: string
                              description: MatchLabels ensures an object with matching
                                labels is selected.
                              type: object
                            policy:
                              description: Policies for selection.
                              properties:
                                resolution:
                                  default: Required
                                  description: |-
                                    Resolution specifies whether resolution of this reference is required.
                                    The default is 'Required', which means the reconcile will fail if the
                                    reference cannot be resolved. 'Optional' means this reference will be
                                    a no-op if it cannot be resolved.
                                  enum:
                                  - Required
                                  - Optional
                                  type: string
                                resolve:
                                  description: |-
                                    Resolve specifies when this reference should be resolved. The default
                                    is 'IfNotPresent', which will attempt to resolve the reference only when
                                    the corresponding field is not present. Use 'Always' to resolve the
                                    reference on every reconcile.
                                  enum:
                                  - Always
                                  - IfNotPresent
                                  type: string
                              type: object
                          type: object
                      type: object
                    type: array
                  targetServiceAccounts:
                    description: A list of service accounts indicating the sets of
                      instances that are applied with this rule.
                    items:
                      type: string
                    type: array
                  tlsInspect:
                    description: |-
                      Boolean flag indicating if the traffic should be TLS decrypted.
                      Can be set only if action = 'apply_security_profile_group' and cannot be set for other actions.
                    type: boolean
                type: object
              initProvider:
                description: |-
                  THIS IS A BETA FIELD. It will be honored
                  unless the Management Policies feature flag is disabled.
                  InitProvider holds the same fields as ForProvider, with the exception
                  of Identifier and other resource reference fields. The fields that are
                  in InitProvider are merged into ForProvider when the resource is created.
                  The same fields are also added to the terraform ignore_changes hook, to
                  avoid updating them after creation. This is useful for fields that are
                  required on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them, like an
                  autoscaler.
                properties:
                  action:
                    description: The Action to perform when the client connection
                      triggers the rule. Valid actions are "allow", "deny", "goto_next"
                      and "apply_security_profile_group".
                    type: string
                  description:
                    description: An optional description for this resource.
                    type: string
                  direction:
                    description: |-
                      The direction in which this rule applies.
                      Possible values are: INGRESS, EGRESS.
                    type: string
                  disabled:
                    description: |-
                      Denotes whether the firewall policy rule is disabled.
                      When set to true, the firewall policy rule is not enforced and traffic behaves as if it did not exist.
                      If this is unspecified, the firewall policy rule will be enabled.
                    type: boolean
                  enableLogging:
                    description: |-
                      Denotes whether to enable logging for a particular rule.
                      If logging is enabled, logs will be exported to the configured export destination in Stackdriver.
                      Logs may be exported to BigQuery or Pub/Sub.
                      Note: you cannot enable logging on "goto_next" rules.
                    type: boolean
                  firewallPolicy:
                    description: The firewall policy of the resource.
                    type: string
                  firewallPolicyRef:
                    description: Reference to a FirewallPolicy in compute to populate
                      firewallPolicy.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  firewallPolicySelector:
                    description: Selector for a FirewallPolicy in compute to populate
                      firewallPolicy.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  match:
                    description: |-
                      A match condition that incoming traffic is evaluated against. If it evaluates to true, the corresponding 'action' is enforced.
                      Structure is documented below.
                    properties:
                      destAddressGroups:
                        description: Address groups which should be matched against
                          the traffic destination. Maximum number of destination address
                          groups is 10.
                        items:
                          type: string
                        type: array
                      destAddressGroupsRefs:
                        description: References to AddressGroup in networksecurity
                          to populate destAddressGroups.
                        items:
                          description: A Reference to a named object.
                          properties:
                            name:
                              description: Name of the referenced object.
                              type: string
                            policy:
                              description: Policies for referencing.
                              properties:
                                resolution:
                                  default: Required
                                  description: |-
                                    Resolution specifies whether resolution of this reference is required.
                                    The default is 'Required', which means the reconcile will fail if the
                                    reference cannot be resolved. 'Optional' means this reference will be
                                    a no-op if it cannot be resolved.
                                  enum:
                                  - Required
                                  - Optional
                                  type: string
                                resolve:
                                  description: |-
                                    Resolve specifies when this reference should be resolved. The default
                                    is 'IfNotPresent', which will attempt to resolve the reference only when
                                    the corresponding field is not present. Use 'Always' to resolve the
                                    reference on every reconcile.
                                  enum:
                                  - Always
                                  - IfNotPresent
                                  type: string
                              type: object
                          required:
                          - name
                          type: object
                        type: array
                      destAddressGroupsSelector:
                        description: Selector for a list of AddressGroup in networksecurity
                          to populate destAddressGroups.
                        properties:
                          matchControllerRef:
                            description: |-
                              MatchControllerRef ensures an object with the same controller reference
                              as the selecting object is selected.
                            type: boolean
                          matchLabels:
                            additionalProperties:
                              type: string
                            description: MatchLabels ensures an object with matching
                              labels is selected.
                            type: object
                          policy:
                            description: Policies for selection.
                            properties:
                              resolution:
                                default: Required
                                description: |-
                                  Resolution specifies whether resolution of this reference is required.
                                  The default is 'Required', which means the reconcile will fail if the
                                  reference cannot be resolved. 'Optional' means this reference will be
                                  a no-op if it cannot be resolved.
                                enum:
                                - Required
                                - Optional
                                type: string
                              resolve:
                                description: |-
                                  Resolve specifies when this reference should be resolved. The default
                                  is 'IfNotPresent', which will attempt to resolve the reference only when
                                  the corresponding field is not present. Use 'Always' to resolve the
                                  reference on every reconcile.
                                enum:
                                - Always
                                - IfNotPresent
                                type: string
                            type: object
                        type: object
                      destFqdns:
                        description: Fully Qualified Domain Name (FQDN) which should
                          be matched against traffic destination. Maximum number of
                          destination fqdn allowed is 100.
                        items:
                          type: string
                        type: array
                      destIpRanges:
                        description: CIDR IP address range. Maximum number of destination
                          CIDR IP ranges allowed is 5000.
                        items:
                          type: string
                        type: array
                      destRegionCodes:
                        description: Region codes whose IP addresses will be used
                          to match for destination of traffic. Should be specified
                          as 2 letter country code defined as per ISO 3166 alpha-2
                          country codes. ex."US" Maximum number of dest region codes
                          allowed is 5000.
                        items:
                          type: string
                        type: array
                      destThreatIntelligences:
                        description: Names of Network Threat Intelligence lists. The
                          IPs in these lists will be matched against traffic destination.
                        items:
                          type: string
                        type: array
                      layer4Configs:
                        description: |-
                          Pairs of IP protocols and ports that the rule should match.
                          Structure is documented below.
                        items:
                          properties:
                            ipProtocol:
                              description: |-
                                The IP protocol to which this rule applies. The protocol type is required when creating a firewall rule.
                                This value can either be one of the following well known protocol strings (tcp, udp, icmp, esp, ah, ipip, sctp), or the IP protocol number.
                              type: string
                            ports:
                              description: An optional list of ports to which this
                                rule applies. This field is only applicable for UDP
                                or TCP protocol. Each entry must be either an integer
                                or a range. If not specified, this rule applies to
                                connections through any port.
                              items:
                                type: string
                              type: array
                          type: object
                        type: array
                      srcAddressGroups:
                        description: Address groups which should be matched against
                          the traffic source. Maximum number of source address groups
                          is 10.
                        items:
                          type: string
                        type: array
                      srcFqdns:
                        description: Fully Qualified Domain Name (FQDN) which should
                          be matched against traffic source. Maximum number of source
                          fqdn allowed is 100.
                        items:
                          type: string
                        type: array
                      srcIpRanges:
                        description: CIDR IP address range. Maximum number of source
                          CIDR IP ranges allowed is 5000.
                        items:
                          type: string
                        type: array
                      srcRegionCodes:
                        description: Region codes whose IP addresses will be used
                          to match for source of traffic. Should be specified as 2
                          letter country code defined as per ISO 3166 alpha-2 country
                          codes. ex."US" Maximum number of source region codes allowed
                          is 5000.
                        items:
                          type: string
                        type: array
                      srcSecureTags:
                        description: |-
                          List of secure tag values, which should be matched at the source of the traffic. For INGRESS rule, if all the srcSecureTag are INEFFECTIVE, and there is no srcIpRange, this rule will be ignored. Maximum number of source tag values allowed is 256.
                          Structure is documented below.
                        items:
                          properties:
                            name:
                              description: Name of the secure tag, created with TagManager's
                                TagValue API.
                              type: string
                            nameRef:
                              description: Reference to a TagValue in tags to populate
                                name.
                              properties:
                                name:
                                  description: Name of the referenced object.
                                  type: string
                                policy:
                                  description: Policies for referencing.
                                  properties:
                                    resolution:
                                      default: Required
                                      description: |-
                                        Resolution specifies whether resolution of this reference is required.
                                        The default is 'Required', which means the reconcile will fail if the
                                        reference cannot be resolved. 'Optional' means this reference will be
                                        a no-op if it cannot be resolved.
                                      enum:
                                      - Required
                                      - Optional
                                      type: string
                                    resolve:
                                      description: |-
                                        Resolve specifies when this reference should be resolved. The default
                                        is 'IfNotPresent', which will attempt to resolve the reference only when
                                        the corresponding field is not present. Use 'Always' to resolve the
                                        reference on every reconcile.
                                      enum:
                                      - Always
                                      - IfNotPresent
                                      type: string
                                  type: object
                              required:
                              - name
                              type: object
                            nameSelector:
                              description: Selector for a TagValue in tags to populate
                                name.
                              properties:
                                matchControllerRef:
                                  description: |-
                                    MatchControllerRef ensures an object with the same controller reference
                                    as the selecting object is selected.
                                  type: boolean
                                matchLabels:
                                  additionalProperties:
                                    type: string
                                  description: MatchLabels ensures an object with
                                    matching labels is selected.
                                  type: object
                                policy:
                                  description: Policies for selection.
                                  properties:
                                    resolution:
                                      default: Required
                                      description: |-
                                        Resolution specifies whether resolution of this reference is required.
                                        The default is 'Required', which means the reconcile will fail if the
                                        reference cannot be resolved. 'Optional' means this reference will be
                                        a no-op if it cannot be resolved.
                                      enum:
                                      - Required
                                      - Optional
                                      type: string
                                    resolve:
                                      description: |-
                                        Resolve specifies when this reference should be resolved. The default
                                        is 'IfNotPresent', which will attempt to resolve the reference only when
                                        the corresponding field is not present. Use 'Always' to resolve the
                                        reference on every reconcile.
                                      enum:
                                      - Always
                                      - IfNotPresent
                                      type: string
                                  type: object
                              type: object
                          type: object
                        type: array
                      srcThreatIntelligences:
                        description: Names of Network Threat Intelligence lists. The
                          IPs in these lists will be matched against traffic source.
                        items:
                          type: string
                        type: array
                    type: object
                  priority:
                    description: |-
                      An integer indicating the priority of a rule in the list.
                      The priority must be a positive value between 0 and 2147483647.
                      Rules are evaluated from highest to lowest priority where 0 is the highest priority and 2147483647 is the lowest prority.
                    type: number
                  securityProfileGroup:
                    description: |-
                      A fully-qualified URL of a SecurityProfile resource instance.
                      Example: https://networksecurity.googleapis.com/v1/projects/{project}/locations/{location}/securityProfileGroups/my-security-profile-group
                      Must be specified if action = 'apply_security_profile_group' and cannot be specified for other actions.
                    type: string
                  targetResources:
                    description: |-
                      A list of network resource URLs to which this rule applies.
                      This field allows you to control which network's VMs get this rule.
                      If this field is left blank, all VMs within the organization will receive the rule.
                    items:
                      type: string
                    type: array
                  targetSecureTags:
                    description: |-
                      A list of secure tags that controls which instances the firewall rule applies to.
                      If targetSecureTag are specified, then the firewall rule applies only to instances in the VPC network that have one of those EFFECTIVE secure tags, if all the targetSecureTag are in INEFFECTIVE state, then this rule will be ignored.
                      targetSecureTag may not be set at the same time as targetServiceAccounts. If neither targetServiceAccounts nor targetSecureTag are specified, the firewall rule applies to all instances on the specified network. Maximum number of target secure tags allowed is 256.
                      Structure is documented below.
                    items:
                      properties:
                        name:
                          description: Name of the secure tag, created with TagManager's
                            TagValue API.
                          type: string
                        nameRef:
                          description: Reference to a TagValue in tags to populate
                            name.
                          properties:
                            name:
                              description: Name of the referenced object.
                              type: string
                            policy:
                              description: Policies for referencing.
                              properties:
                                resolution:
                                  default: Required
                                  description: |-
                                    Resolution specifies whether resolution of this reference is required.
                                    The default is 'Required', which means the reconcile will fail if the
                                    reference cannot be resolved. 'Optional' means this reference will be
                                    a no-op if it cannot be resolved.
                                  enum:
                                  - Required
                                  - Optional
                                  type: string
                                resolve:
                                  description: |-
                                    Resolve specifies when this reference should be resolved. The default
                                    is 'IfNotPresent', which will attempt to resolve the reference only when
                                    the corresponding field is not present. Use 'Always' to resolve the
                                    reference on every reconcile.
                                  enum:
                                  - Always
                                  - IfNotPresent
                                  type: string
                              type: object
                          required:
                          - name
                          type: object
                        nameSelector:
                          description: Selector for a TagValue in tags to populate
                            name.
                          properties:
                            matchControllerRef:
                              description: |-
                                MatchControllerRef ensures an object with the same controller reference
                                as the selecting object is selected.
                              type: boolean
                            matchLabels:
                              additionalProperties:
                                type: string
                              description: MatchLabels ensures an object with matching
                                labels is selected.
                              type: object
                            policy:
                              description: Policies for selection.
                              properties:
                                resolution:
                                  default: Required
                                  description: |-
                                    Resolution specifies whether resolution of this reference is required.
                                    The default is 'Required', which means the reconcile will fail if the
                                    reference cannot be resolved. 'Optional' means this reference will be
                                    a no-op if it cannot be resolved.
                                  enum:
                                  - Required
                                  - Optional
                                  type: string
                                resolve:
                                  description: |-
                                    Resolve specifies when this reference should be resolved. The default
                                    is 'IfNotPresent', which will attempt to resolve the reference only when
                                    the corresponding field is not present. Use 'Always' to resolve the
                                    reference on every reconcile.
                                  enum:
                                  - Always
                                  - IfNotPresent
                                  type: string
                              type: object
                          type: object
                      type: object
                    type: array
                  targetServiceAccounts:
                    description: A list of service accounts indicating the sets of
                      instances that are applied with this rule.
                    items:
                      type: string
                    type: array
                  tlsInspect:
                    description: |-
                      Boolean flag indicating if the traffic should be TLS decrypted.
                      Can be set only if action = 'apply_security_profile_group' and cannot be set for other actions.
                    type: boolean
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  This field is planned to replace the DeletionPolicy field in a future
                  release. Currently, both could be set independently and non-default
                  values would be honored if the feature flag is enabled. If both are
                  custom, the DeletionPolicy field will be ignored.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: |-
                  PublishConnectionDetailsTo specifies the connection secret config which
                  contains a name, metadata and a reference to secret store config to
                  which any connection details for this managed resource should be written.
                  Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: |-
                      SecretStoreConfigRef specifies which secret store config should be used
                      for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations are the annotations to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.annotations".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Labels are the labels/tags to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      type:
                        description: |-
                          Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                  This field is planned to be replaced in a future release in favor of
                  PublishConnectionDetailsTo. Currently, both could be set independently
                  and connection details would be published to both without affecting
                  each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
            x-kubernetes-validations:
            - message: spec.forProvider.action is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.action)
                || (has(self.initProvider) && has(self.initProvider.action))'
            - message: spec.forProvider.direction is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.direction)
                || (has(self.initProvider) && has(self.initProvider.direction))'
            - message: spec.forProvider.match is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.match)
                || (has(self.initProvider) && has(self.initProvider.match))'
            - message: spec.forProvider.priority is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.priority)
                || (has(self.initProvider) && has(self.initProvider.priority))'
          status:
            description: FirewallPolicyRuleStatus defines the observed state of FirewallPolicyRule.
            properties:
              atProvider:
                properties:
                  action:
                    description: The Action to perform when the client connection
                      triggers the rule. Valid actions are "allow", "deny", "goto_next"
                      and "apply_security_profile_group".
                    type: string
                  creationTimestamp:
                    description: Creation timestamp in RFC3339 text format.
                    type: string
                  description:
                    description: An optional description for this resource.
                    type: string
                  direction:
                    description: |-
                      The direction in which this rule applies.
                      Possible values are: INGRESS, EGRESS.
                    type: string
                  disabled:
                    description: |-
                      Denotes whether the firewall policy rule is disabled.
                      When set to true, the firewall policy rule is not enforced and traffic behaves as if it did not exist.
                      If this is unspecified, the firewall policy rule will be enabled.
                    type: boolean
                  enableLogging:
                    description: |-
                      Denotes whether to enable logging for a particular rule.
                      If logging is enabled, logs will be exported to the configured export destination in Stackdriver.
                      Logs may be exported to BigQuery or Pub/Sub.
                      Note: you cannot enable logging on "goto_next" rules.
                    type: boolean
                  firewallPolicy:
                    description: The firewall policy of the resource.
                    type: string
                  id:
                    description: an identifier for the resource with format locations/global/firewallPolicies/{{firewall_policy}}/rules/{{priority}}
                    type: string
                  kind:
                    description: Type of the resource. Always compute#firewallPolicyRule
                      for firewall policy rules
                    type: string
                  match:
                    description: |-
                      A match condition that incoming traffic is evaluated against. If it evaluates to true, the corresponding 'action' is enforced.
                      Structure is documented below.
                    properties:
                      destAddressGroups:
                        description: Address groups which should be matched against
                          the traffic destination. Maximum number of destination address
                          groups is 10.
                        items:
                          type: string
                        type: array
                      destFqdns:
                        description: Fully Qualified Domain Name (FQDN) which should
                          be matched against traffic destination. Maximum number of
                          destination fqdn allowed is 100.
                        items:
                          type: string
                        type: array
                      destIpRanges:
                        description: CIDR IP address range. Maximum number of destination
                          CIDR IP ranges allowed is 5000.
                        items:
                          type: string
                        type: array
                      destRegionCodes:
                        description: Region codes whose IP addresses will be used
                          to match for destination of traffic. Should be specified
                          as 2 letter country code defined as per ISO 3166 alpha-2
                          country codes. ex."US" Maximum number of dest region codes
                          allowed is 5000.
                        items:
                          type: string
                        type: array
                      destThreatIntelligences:
                        description: Names of Network Threat Intelligence lists. The
                          IPs in these lists will be matched against traffic destination.
                        items:
                          type: string
                        type: array
                      layer4Configs:
                        description: |-
                          Pairs of IP protocols and ports that the rule should match.
                          Structure is documented below.
                        items:
                          properties:
                            ipProtocol:
                              description: |-
                                The IP protocol to which this rule applies. The protocol type is required when creating a firewall rule.
                                This value can either be one of the following well known protocol strings (tcp, udp, icmp, esp, ah, ipip, sctp), or the IP protocol number.
                              type: string
                            ports:
                              description: An optional list of ports to which this
                                rule applies. This field is only applicable for UDP
                                or TCP protocol. Each entry must be either an integer
                                or a range. If not specified, this rule applies to
                                connections through any port.
                              items:
                                type: string
                              type: array
                          type: object
                        type: array
                      srcAddressGroups:
                        description: Address groups which should be matched against
                          the traffic source. Maximum number of source address groups
                          is 10.
                        items:
                          type: string
                        type: array
                      srcFqdns:
                        description: Fully Qualified Domain Name (FQDN) which should
                          be matched against traffic source. Maximum number of source
                          fqdn allowed is 100.
                        items:
                          type: string
                        type: array
                      srcIpRanges:
                        description: CIDR IP address range. Maximum number of source
                          CIDR IP ranges allowed is 5000.
                        items:
                          type: string
                        type: array
                      srcRegionCodes:
                        description: Region codes whose IP addresses will be used
                          to match for source of traffic. Should be specified as 2
                          letter country code defined as per ISO 3166 alpha-2 country
                          codes. ex."US" Maximum number of source region codes allowed
                          is 5000.
                        items:
                          type: string
                        type: array
                      srcSecureTags:
                        description: |-
                          List of secure tag values, which should be matched at the source of the traffic. For INGRESS rule, if all the srcSecureTag are INEFFECTIVE, and there is no srcIpRange, this rule will be ignored. Maximum number of source tag values allowed is 256.
                          Structure is documented below.
                        items:
                          properties:
                            name:
                              description: Name of the secure tag, created with TagManager's
                                TagValue API.
                              type: string
                            state:
                              description: |-
                                (Output)
                                State of the secure tag, either EFFECTIVE or INEFFECTIVE. A secure tag is INEFFECTIVE when it is deleted or its network is deleted.
                              type: string
                          type: object
                        type: array
                      srcThreatIntelligences:
                        description: Names of Network Threat Intelligence lists. The
                          IPs in these lists will be matched against traffic source.
                        items:
                          type: string
                        type: array
                    type: object
                  priority:
                    description: |-
                      An integer indicating the priority of a rule in the list.
                      The priority must be a positive value between 0 and 2147483647.
                      Rules are evaluated from highest to lowest priority where 0 is the highest priority and 2147483647 is the lowest prority.
                    type: number
                  ruleTupleCount:
                    description: Calculation of the complexity of a single firewall
                      policy rule.
                    type: number
                  securityProfileGroup:
                    description: |-
                      A fully-qualified URL of a SecurityProfile resource instance.
                      Example: https://networksecurity.googleapis.com/v1/projects/{project}/locations/{location}/securityProfileGroups/my-security-profile-group
                      Must be specified if action = 'apply_security_profile_group' and cannot be specified for other actions.
                    type: string
                  targetResources:
                    description: |-
                      A list of network resource URLs to which this rule applies.
                      This field allows you to control which network's VMs get this rule.
                      If this field is left blank, all VMs within the organization will receive the rule.
                    items:
                      type: string
                    type: array
                  targetSecureTags:
                    description: |-
                      A list of secure tags that controls which instances the firewall rule applies to.
                      If targetSecureTag are specified, then the firewall rule applies only to instances in the VPC network that have one of those EFFECTIVE secure tags, if all the targetSecureTag are in INEFFECTIVE state, then this rule will be ignored.
                      targetSecureTag may not be set at the same time as targetServiceAccounts. If neither targetServiceAccounts nor targetSecureTag are specified, the firewall rule applies to all instances on the specified network. Maximum number of target secure tags allowed is 256.
                      Structure is documented below.
                    items:
                      properties:
                        name:
                          description: Name of the secure tag, created with TagManager's
                            TagValue API.
                          type: string
                        state:
                          description: |-
                            (Output)
                            State of the secure tag, either EFFECTIVE or INEFFECTIVE. A secure tag is INEFFECTIVE when it is deleted or its network is deleted.
                          type: string
                      type: object
                    type: array
                  targetServiceAccounts:
                    description: A list of service accounts indicating the sets of
                      instances that are applied with this rule.
                    items:
                      type: string
                    type: array
                  tlsInspect:
                    description: |-
                      Boolean flag indicating if the traffic should be TLS decrypted.
                      Can be set only if action = 'apply_security_profile_group' and cannot be set for other actions.
                    type: boolean
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: |-
                  ObservedGeneration is the latest metadata.generation
                  which resulted in either a ready state, or stalled due to error
                  it can not recover from without human intervention.
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: false
    subresources:
      status: {}
