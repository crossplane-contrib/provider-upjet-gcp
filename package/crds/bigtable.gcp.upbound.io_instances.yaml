---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: instances.bigtable.gcp.upbound.io
spec:
  group: bigtable.gcp.upbound.io
  names:
    categories:
    - crossplane
    - managed
    - gcp
    kind: Instance
    listKind: InstanceList
    plural: instances
    singular: instance
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: Instance is the Schema for the Instances API. Creates a Google
          Bigtable instance.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: InstanceSpec defines the desired state of Instance
            properties:
              deletionPolicy:
                default: Delete
                description: |-
                  DeletionPolicy specifies what will happen to the underlying external
                  when this managed resource is deleted - either "Delete" or "Orphan" the
                  external resource.
                  This field is planned to be deprecated in favor of the ManagementPolicies
                  field in a future release. Currently, both could be set independently and
                  non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  cluster:
                    description: |-
                      A block of cluster configuration options. This can be specified at least once, and up
                      to as many as possible within 8 cloud regions. Removing the field entirely from the config will cause the provider
                      to default to the backend value. See structure below.
                    items:
                      properties:
                        autoscalingConfig:
                          description: 'Autoscaling config for the cluster, contains
                            the following arguments:'
                          items:
                            properties:
                              cpuTarget:
                                description: The target CPU utilization for autoscaling,
                                  in percentage. Must be between 10 and 80.
                                type: number
                              maxNodes:
                                description: The maximum number of nodes for autoscaling.
                                type: number
                              minNodes:
                                description: The minimum number of nodes for autoscaling.
                                type: number
                              storageTarget:
                                description: The target storage utilization for autoscaling,
                                  in GB, for each node in a cluster. This number is
                                  limited between 2560 (2.5TiB) and 5120 (5TiB) for
                                  a SSD cluster and between 8192 (8TiB) and 16384
                                  (16 TiB) for an HDD cluster. If not set, whatever
                                  is already set for the cluster will not change,
                                  or if the cluster is just being created, it will
                                  use the default value of 2560 for SSD clusters and
                                  8192 for HDD clusters.
                                type: number
                            type: object
                          type: array
                        clusterId:
                          description: The ID of the Cloud Bigtable cluster. Must
                            be 6-30 characters and must only contain hyphens, lowercase
                            letters and numbers.
                          type: string
                        kmsKeyName:
                          description: 'Describes the Cloud KMS encryption key that
                            will be used to protect the destination Bigtable cluster.
                            The requirements for this key are: 1) The Cloud Bigtable
                            service account associated with the project that contains
                            this cluster must be granted the cloudkms.cryptoKeyEncrypterDecrypter
                            role on the CMEK key. 2) Only regional keys can be used
                            and the region of the CMEK key must match the region of
                            the cluster.'
                          type: string
                        numNodes:
                          description: |-
                            The number of nodes in the cluster.
                            If no value is set, Cloud Bigtable automatically allocates nodes based on your data footprint and optimized for 50% storage utilization.
                          type: number
                        storageType:
                          description: |-
                            The storage type to use. One of "SSD" or
                            "HDD". Defaults to "SSD".
                          type: string
                        zone:
                          description: |-
                            The zone to create the Cloud Bigtable cluster in. If it not
                            specified, the provider zone is used. Each cluster must have a different zone in the same region. Zones that support
                            Bigtable instances are noted on the Cloud Bigtable locations page.
                          type: string
                      type: object
                    type: array
                  deletionProtection:
                    type: boolean
                  displayName:
                    description: The human-readable display name of the Bigtable instance.
                      Defaults to the instance name.
                    type: string
                  instanceType:
                    description: |-
                      The instance type to create. One of "DEVELOPMENT" or "PRODUCTION". Defaults to "PRODUCTION".
                      It is recommended to leave this field unspecified since the distinction between "DEVELOPMENT" and "PRODUCTION" instances is going away,
                      and all instances will become "PRODUCTION" instances. This means that new and existing "DEVELOPMENT" instances will be converted to
                      "PRODUCTION" instances. It is recommended for users to use "PRODUCTION" instances in any case, since a 1-node "PRODUCTION" instance
                      is functionally identical to a "DEVELOPMENT" instance, but without the accompanying restrictions.
                    type: string
                  labels:
                    additionalProperties:
                      type: string
                    description: A set of key/value label pairs to assign to the resource.
                      Label keys must follow the requirements at https://cloud.google.com/resource-manager/docs/creating-managing-labels#requirements.
                    type: object
                    x-kubernetes-map-type: granular
                  project:
                    description: |-
                      The ID of the project in which the resource belongs. If it
                      is not provided, the provider project is used.
                    type: string
                type: object
              initProvider:
                description: |-
                  THIS IS A BETA FIELD. It will be honored
                  unless the Management Policies feature flag is disabled.
                  InitProvider holds the same fields as ForProvider, with the exception
                  of Identifier and other resource reference fields. The fields that are
                  in InitProvider are merged into ForProvider when the resource is created.
                  The same fields are also added to the terraform ignore_changes hook, to
                  avoid updating them after creation. This is useful for fields that are
                  required on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them, like an
                  autoscaler.
                properties:
                  cluster:
                    description: |-
                      A block of cluster configuration options. This can be specified at least once, and up
                      to as many as possible within 8 cloud regions. Removing the field entirely from the config will cause the provider
                      to default to the backend value. See structure below.
                    items:
                      properties:
                        autoscalingConfig:
                          description: 'Autoscaling config for the cluster, contains
                            the following arguments:'
                          items:
                            properties:
                              cpuTarget:
                                description: The target CPU utilization for autoscaling,
                                  in percentage. Must be between 10 and 80.
                                type: number
                              maxNodes:
                                description: The maximum number of nodes for autoscaling.
                                type: number
                              minNodes:
                                description: The minimum number of nodes for autoscaling.
                                type: number
                              storageTarget:
                                description: The target storage utilization for autoscaling,
                                  in GB, for each node in a cluster. This number is
                                  limited between 2560 (2.5TiB) and 5120 (5TiB) for
                                  a SSD cluster and between 8192 (8TiB) and 16384
                                  (16 TiB) for an HDD cluster. If not set, whatever
                                  is already set for the cluster will not change,
                                  or if the cluster is just being created, it will
                                  use the default value of 2560 for SSD clusters and
                                  8192 for HDD clusters.
                                type: number
                            type: object
                          type: array
                        clusterId:
                          description: The ID of the Cloud Bigtable cluster. Must
                            be 6-30 characters and must only contain hyphens, lowercase
                            letters and numbers.
                          type: string
                        kmsKeyName:
                          description: 'Describes the Cloud KMS encryption key that
                            will be used to protect the destination Bigtable cluster.
                            The requirements for this key are: 1) The Cloud Bigtable
                            service account associated with the project that contains
                            this cluster must be granted the cloudkms.cryptoKeyEncrypterDecrypter
                            role on the CMEK key. 2) Only regional keys can be used
                            and the region of the CMEK key must match the region of
                            the cluster.'
                          type: string
                        numNodes:
                          description: |-
                            The number of nodes in the cluster.
                            If no value is set, Cloud Bigtable automatically allocates nodes based on your data footprint and optimized for 50% storage utilization.
                          type: number
                        storageType:
                          description: |-
                            The storage type to use. One of "SSD" or
                            "HDD". Defaults to "SSD".
                          type: string
                        zone:
                          description: |-
                            The zone to create the Cloud Bigtable cluster in. If it not
                            specified, the provider zone is used. Each cluster must have a different zone in the same region. Zones that support
                            Bigtable instances are noted on the Cloud Bigtable locations page.
                          type: string
                      type: object
                    type: array
                  deletionProtection:
                    type: boolean
                  displayName:
                    description: The human-readable display name of the Bigtable instance.
                      Defaults to the instance name.
                    type: string
                  instanceType:
                    description: |-
                      The instance type to create. One of "DEVELOPMENT" or "PRODUCTION". Defaults to "PRODUCTION".
                      It is recommended to leave this field unspecified since the distinction between "DEVELOPMENT" and "PRODUCTION" instances is going away,
                      and all instances will become "PRODUCTION" instances. This means that new and existing "DEVELOPMENT" instances will be converted to
                      "PRODUCTION" instances. It is recommended for users to use "PRODUCTION" instances in any case, since a 1-node "PRODUCTION" instance
                      is functionally identical to a "DEVELOPMENT" instance, but without the accompanying restrictions.
                    type: string
                  labels:
                    additionalProperties:
                      type: string
                    description: A set of key/value label pairs to assign to the resource.
                      Label keys must follow the requirements at https://cloud.google.com/resource-manager/docs/creating-managing-labels#requirements.
                    type: object
                    x-kubernetes-map-type: granular
                  project:
                    description: |-
                      The ID of the project in which the resource belongs. If it
                      is not provided, the provider project is used.
                    type: string
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  This field is planned to replace the DeletionPolicy field in a future
                  release. Currently, both could be set independently and non-default
                  values would be honored if the feature flag is enabled. If both are
                  custom, the DeletionPolicy field will be ignored.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: |-
                  PublishConnectionDetailsTo specifies the connection secret config which
                  contains a name, metadata and a reference to secret store config to
                  which any connection details for this managed resource should be written.
                  Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: |-
                      SecretStoreConfigRef specifies which secret store config should be used
                      for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations are the annotations to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.annotations".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Labels are the labels/tags to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      type:
                        description: |-
                          Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                  This field is planned to be replaced in a future release in favor of
                  PublishConnectionDetailsTo. Currently, both could be set independently
                  and connection details would be published to both without affecting
                  each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: InstanceStatus defines the observed state of Instance.
            properties:
              atProvider:
                properties:
                  cluster:
                    description: |-
                      A block of cluster configuration options. This can be specified at least once, and up
                      to as many as possible within 8 cloud regions. Removing the field entirely from the config will cause the provider
                      to default to the backend value. See structure below.
                    items:
                      properties:
                        autoscalingConfig:
                          description: 'Autoscaling config for the cluster, contains
                            the following arguments:'
                          items:
                            properties:
                              cpuTarget:
                                description: The target CPU utilization for autoscaling,
                                  in percentage. Must be between 10 and 80.
                                type: number
                              maxNodes:
                                description: The maximum number of nodes for autoscaling.
                                type: number
                              minNodes:
                                description: The minimum number of nodes for autoscaling.
                                type: number
                              storageTarget:
                                description: The target storage utilization for autoscaling,
                                  in GB, for each node in a cluster. This number is
                                  limited between 2560 (2.5TiB) and 5120 (5TiB) for
                                  a SSD cluster and between 8192 (8TiB) and 16384
                                  (16 TiB) for an HDD cluster. If not set, whatever
                                  is already set for the cluster will not change,
                                  or if the cluster is just being created, it will
                                  use the default value of 2560 for SSD clusters and
                                  8192 for HDD clusters.
                                type: number
                            type: object
                          type: array
                        clusterId:
                          description: The ID of the Cloud Bigtable cluster. Must
                            be 6-30 characters and must only contain hyphens, lowercase
                            letters and numbers.
                          type: string
                        kmsKeyName:
                          description: 'Describes the Cloud KMS encryption key that
                            will be used to protect the destination Bigtable cluster.
                            The requirements for this key are: 1) The Cloud Bigtable
                            service account associated with the project that contains
                            this cluster must be granted the cloudkms.cryptoKeyEncrypterDecrypter
                            role on the CMEK key. 2) Only regional keys can be used
                            and the region of the CMEK key must match the region of
                            the cluster.'
                          type: string
                        numNodes:
                          description: |-
                            The number of nodes in the cluster.
                            If no value is set, Cloud Bigtable automatically allocates nodes based on your data footprint and optimized for 50% storage utilization.
                          type: number
                        storageType:
                          description: |-
                            The storage type to use. One of "SSD" or
                            "HDD". Defaults to "SSD".
                          type: string
                        zone:
                          description: |-
                            The zone to create the Cloud Bigtable cluster in. If it not
                            specified, the provider zone is used. Each cluster must have a different zone in the same region. Zones that support
                            Bigtable instances are noted on the Cloud Bigtable locations page.
                          type: string
                      type: object
                    type: array
                  deletionProtection:
                    type: boolean
                  displayName:
                    description: The human-readable display name of the Bigtable instance.
                      Defaults to the instance name.
                    type: string
                  id:
                    description: an identifier for the resource with format projects/{{project}}/instances/{{name}}
                    type: string
                  instanceType:
                    description: |-
                      The instance type to create. One of "DEVELOPMENT" or "PRODUCTION". Defaults to "PRODUCTION".
                      It is recommended to leave this field unspecified since the distinction between "DEVELOPMENT" and "PRODUCTION" instances is going away,
                      and all instances will become "PRODUCTION" instances. This means that new and existing "DEVELOPMENT" instances will be converted to
                      "PRODUCTION" instances. It is recommended for users to use "PRODUCTION" instances in any case, since a 1-node "PRODUCTION" instance
                      is functionally identical to a "DEVELOPMENT" instance, but without the accompanying restrictions.
                    type: string
                  labels:
                    additionalProperties:
                      type: string
                    description: A set of key/value label pairs to assign to the resource.
                      Label keys must follow the requirements at https://cloud.google.com/resource-manager/docs/creating-managing-labels#requirements.
                    type: object
                    x-kubernetes-map-type: granular
                  project:
                    description: |-
                      The ID of the project in which the resource belongs. If it
                      is not provided, the provider project is used.
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
