---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.11.1
  creationTimestamp: null
  name: services.cloudrun.gcp.upbound.io
spec:
  group: cloudrun.gcp.upbound.io
  names:
    categories:
    - crossplane
    - managed
    - gcp
    kind: Service
    listKind: ServiceList
    plural: services
    singular: service
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: Service is the Schema for the Services API. Service acts as a
          top-level container that manages a set of Routes and Configurations which
          implement a network service.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ServiceSpec defines the desired state of Service
            properties:
              deletionPolicy:
                default: Delete
                description: DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource.
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  autogenerateRevisionName:
                    description: If set to true, the revision name (template.metadata.name)
                      will be omitted and autogenerated by Cloud Run. This cannot
                      be set to true while template.metadata.name is also set. (For
                      legacy support, if template.metadata.name is unset in state
                      while this field is set to false, the revision name will still
                      autogenerate.)
                    type: boolean
                  location:
                    description: The location of the cloud run instance. eg us-central1
                    type: string
                  metadata:
                    description: Optional metadata for this Revision, including labels
                      and annotations. Name will be generated by the Configuration.
                      To set minimum instances for this revision, use the "autoscaling.knative.dev/minScale"
                      annotation key. To set maximum instances for this revision,
                      use the "autoscaling.knative.dev/maxScale" annotation key. To
                      set Cloud SQL connections for the revision, use the "run.googleapis.com/cloudsql-instances"
                      annotation key. Structure is documented below.
                    items:
                      properties:
                        annotations:
                          additionalProperties:
                            type: string
                          description: 'Annotations is a key value map stored with
                            a resource that may be set by external tools to store
                            and retrieve arbitrary metadata. More info: http://kubernetes.io/docs/user-guide/annotations
                            Note: The Cloud Run API may add additional annotations
                            that were not provided in your config.ignore_changes rule
                            to the metadata.0.annotations field.'
                          type: object
                        labels:
                          additionalProperties:
                            type: string
                          description: 'Map of string keys and values that can be
                            used to organize and categorize (scope and select) objects.
                            May match selectors of replication controllers and routes.
                            More info: http://kubernetes.io/docs/user-guide/labels'
                          type: object
                        namespace:
                          description: In Cloud Run the namespace must be equal to
                            either the project ID or project number. It will default
                            to the resource's project.
                          type: string
                        namespaceRef:
                          description: Reference to a Project in cloudplatform to
                            populate namespace.
                          properties:
                            name:
                              description: Name of the referenced object.
                              type: string
                            policy:
                              description: Policies for referencing.
                              properties:
                                resolution:
                                  default: Required
                                  description: Resolution specifies whether resolution
                                    of this reference is required. The default is
                                    'Required', which means the reconcile will fail
                                    if the reference cannot be resolved. 'Optional'
                                    means this reference will be a no-op if it cannot
                                    be resolved.
                                  enum:
                                  - Required
                                  - Optional
                                  type: string
                                resolve:
                                  description: Resolve specifies when this reference
                                    should be resolved. The default is 'IfNotPresent',
                                    which will attempt to resolve the reference only
                                    when the corresponding field is not present. Use
                                    'Always' to resolve the reference on every reconcile.
                                  enum:
                                  - Always
                                  - IfNotPresent
                                  type: string
                              type: object
                          required:
                          - name
                          type: object
                        namespaceSelector:
                          description: Selector for a Project in cloudplatform to
                            populate namespace.
                          properties:
                            matchControllerRef:
                              description: MatchControllerRef ensures an object with
                                the same controller reference as the selecting object
                                is selected.
                              type: boolean
                            matchLabels:
                              additionalProperties:
                                type: string
                              description: MatchLabels ensures an object with matching
                                labels is selected.
                              type: object
                            policy:
                              description: Policies for selection.
                              properties:
                                resolution:
                                  default: Required
                                  description: Resolution specifies whether resolution
                                    of this reference is required. The default is
                                    'Required', which means the reconcile will fail
                                    if the reference cannot be resolved. 'Optional'
                                    means this reference will be a no-op if it cannot
                                    be resolved.
                                  enum:
                                  - Required
                                  - Optional
                                  type: string
                                resolve:
                                  description: Resolve specifies when this reference
                                    should be resolved. The default is 'IfNotPresent',
                                    which will attempt to resolve the reference only
                                    when the corresponding field is not present. Use
                                    'Always' to resolve the reference on every reconcile.
                                  enum:
                                  - Always
                                  - IfNotPresent
                                  type: string
                              type: object
                          type: object
                      type: object
                    type: array
                  project:
                    description: The ID of the project in which the resource belongs.
                      If it is not provided, the provider project is used.
                    type: string
                  template:
                    description: 'template holds the latest specification for the
                      Revision to be stamped out. The template references the container
                      image, and may also include labels and annotations that should
                      be attached to the Revision. To correlate a Revision, and/or
                      to force a Revision to be created when the spec doesn''t otherwise
                      change, a nonce label may be provided in the template metadata.
                      For more details, see: https://github.com/knative/serving/blob/main/docs/client-conventions.md#associate-modifications-with-revisions
                      Cloud Run does not currently support referencing a build that
                      is responsible for materializing the container image from source.
                      Structure is documented below.'
                    items:
                      properties:
                        metadata:
                          description: Optional metadata for this Revision, including
                            labels and annotations. Name will be generated by the
                            Configuration. To set minimum instances for this revision,
                            use the "autoscaling.knative.dev/minScale" annotation
                            key. To set maximum instances for this revision, use the
                            "autoscaling.knative.dev/maxScale" annotation key. To
                            set Cloud SQL connections for the revision, use the "run.googleapis.com/cloudsql-instances"
                            annotation key. Structure is documented below.
                          items:
                            properties:
                              annotations:
                                additionalProperties:
                                  type: string
                                description: 'Annotations is a key value map stored
                                  with a resource that may be set by external tools
                                  to store and retrieve arbitrary metadata. More info:
                                  http://kubernetes.io/docs/user-guide/annotations
                                  Note: The Cloud Run API may add additional annotations
                                  that were not provided in your config.ignore_changes
                                  rule to the metadata.0.annotations field.'
                                type: object
                              labels:
                                additionalProperties:
                                  type: string
                                description: 'Map of string keys and values that can
                                  be used to organize and categorize (scope and select)
                                  objects. May match selectors of replication controllers
                                  and routes. More info: http://kubernetes.io/docs/user-guide/labels'
                                type: object
                              name:
                                description: Volume's name.
                                type: string
                              namespace:
                                description: In Cloud Run the namespace must be equal
                                  to either the project ID or project number. It will
                                  default to the resource's project.
                                type: string
                            type: object
                          type: array
                        spec:
                          description: RevisionSpec holds the desired state of the
                            Revision (from the client). Structure is documented below.
                          items:
                            properties:
                              containerConcurrency:
                                description: 'ContainerConcurrency specifies the maximum
                                  allowed in-flight (concurrent) requests per container
                                  of the Revision. Values are:'
                                type: number
                              containers:
                                description: 'Container defines the unit of execution
                                  for this Revision. In the context of a Revision,
                                  we disallow a number of the fields of this Container,
                                  including: name, ports, and volumeMounts. The runtime
                                  contract is documented here: https://github.com/knative/serving/blob/main/docs/runtime-contract.md
                                  Structure is documented below.'
                                items:
                                  properties:
                                    args:
                                      description: 'Arguments to the entrypoint. The
                                        docker image''s CMD is used if this is not
                                        provided. Variable references $(VAR_NAME)
                                        are expanded using the container''s environment.
                                        If a variable cannot be resolved, the reference
                                        in the input string will be unchanged. The
                                        $(VAR_NAME) syntax can be escaped with a double
                                        $$, ie: $$(VAR_NAME). Escaped references will
                                        never be expanded, regardless of whether the
                                        variable exists or not. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell'
                                      items:
                                        type: string
                                      type: array
                                    command:
                                      description: 'Entrypoint array. Not executed
                                        within a shell. The docker image''s ENTRYPOINT
                                        is used if this is not provided. Variable
                                        references $(VAR_NAME) are expanded using
                                        the container''s environment. If a variable
                                        cannot be resolved, the reference in the input
                                        string will be unchanged. The $(VAR_NAME)
                                        syntax can be escaped with a double $$, ie:
                                        $$(VAR_NAME). Escaped references will never
                                        be expanded, regardless of whether the variable
                                        exists or not. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell'
                                      items:
                                        type: string
                                      type: array
                                    env:
                                      description: List of environment variables to
                                        set in the container. Structure is documented
                                        below.
                                      items:
                                        properties:
                                          name:
                                            description: Volume's name.
                                            type: string
                                          value:
                                            description: The header field value.
                                            type: string
                                          valueFrom:
                                            description: Source for the environment
                                              variable's value. Only supports secret_key_ref.
                                              Structure is documented below.
                                            items:
                                              properties:
                                                secretKeyRef:
                                                  description: Selects a key (version)
                                                    of a secret in Secret Manager.
                                                    Structure is documented below.
                                                  items:
                                                    properties:
                                                      key:
                                                        description: A Cloud Secret
                                                          Manager secret version.
                                                          Must be 'latest' for the
                                                          latest version or an integer
                                                          for a specific version.
                                                        type: string
                                                      name:
                                                        description: Volume's name.
                                                        type: string
                                                      nameRef:
                                                        description: Reference to
                                                          a Secret in secretmanager
                                                          to populate name.
                                                        properties:
                                                          name:
                                                            description: Name of the
                                                              referenced object.
                                                            type: string
                                                          policy:
                                                            description: Policies
                                                              for referencing.
                                                            properties:
                                                              resolution:
                                                                default: Required
                                                                description: Resolution
                                                                  specifies whether
                                                                  resolution of this
                                                                  reference is required.
                                                                  The default is 'Required',
                                                                  which means the
                                                                  reconcile will fail
                                                                  if the reference
                                                                  cannot be resolved.
                                                                  'Optional' means
                                                                  this reference will
                                                                  be a no-op if it
                                                                  cannot be resolved.
                                                                enum:
                                                                - Required
                                                                - Optional
                                                                type: string
                                                              resolve:
                                                                description: Resolve
                                                                  specifies when this
                                                                  reference should
                                                                  be resolved. The
                                                                  default is 'IfNotPresent',
                                                                  which will attempt
                                                                  to resolve the reference
                                                                  only when the corresponding
                                                                  field is not present.
                                                                  Use 'Always' to
                                                                  resolve the reference
                                                                  on every reconcile.
                                                                enum:
                                                                - Always
                                                                - IfNotPresent
                                                                type: string
                                                            type: object
                                                        required:
                                                        - name
                                                        type: object
                                                      nameSelector:
                                                        description: Selector for
                                                          a Secret in secretmanager
                                                          to populate name.
                                                        properties:
                                                          matchControllerRef:
                                                            description: MatchControllerRef
                                                              ensures an object with
                                                              the same controller
                                                              reference as the selecting
                                                              object is selected.
                                                            type: boolean
                                                          matchLabels:
                                                            additionalProperties:
                                                              type: string
                                                            description: MatchLabels
                                                              ensures an object with
                                                              matching labels is selected.
                                                            type: object
                                                          policy:
                                                            description: Policies
                                                              for selection.
                                                            properties:
                                                              resolution:
                                                                default: Required
                                                                description: Resolution
                                                                  specifies whether
                                                                  resolution of this
                                                                  reference is required.
                                                                  The default is 'Required',
                                                                  which means the
                                                                  reconcile will fail
                                                                  if the reference
                                                                  cannot be resolved.
                                                                  'Optional' means
                                                                  this reference will
                                                                  be a no-op if it
                                                                  cannot be resolved.
                                                                enum:
                                                                - Required
                                                                - Optional
                                                                type: string
                                                              resolve:
                                                                description: Resolve
                                                                  specifies when this
                                                                  reference should
                                                                  be resolved. The
                                                                  default is 'IfNotPresent',
                                                                  which will attempt
                                                                  to resolve the reference
                                                                  only when the corresponding
                                                                  field is not present.
                                                                  Use 'Always' to
                                                                  resolve the reference
                                                                  on every reconcile.
                                                                enum:
                                                                - Always
                                                                - IfNotPresent
                                                                type: string
                                                            type: object
                                                        type: object
                                                    required:
                                                    - key
                                                    type: object
                                                  type: array
                                              required:
                                              - secretKeyRef
                                              type: object
                                            type: array
                                        type: object
                                      type: array
                                    envFrom:
                                      description: List of sources to populate environment
                                        variables in the container. All invalid keys
                                        will be reported as an event when the container
                                        is starting. When a key exists in multiple
                                        sources, the value associated with the last
                                        source will take precedence. Values defined
                                        by an Env with a duplicate key will take precedence.
                                        Structure is documented below.
                                      items:
                                        properties:
                                          configMapRef:
                                            description: The ConfigMap to select from.
                                              Structure is documented below.
                                            items:
                                              properties:
                                                localObjectReference:
                                                  description: The Secret to select
                                                    from. Structure is documented
                                                    below.
                                                  items:
                                                    properties:
                                                      name:
                                                        description: Volume's name.
                                                        type: string
                                                    required:
                                                    - name
                                                    type: object
                                                  type: array
                                                optional:
                                                  description: Specify whether the
                                                    Secret must be defined
                                                  type: boolean
                                              type: object
                                            type: array
                                          prefix:
                                            description: An optional identifier to
                                              prepend to each key in the ConfigMap.
                                            type: string
                                          secretRef:
                                            description: The Secret to select from.
                                              Structure is documented below.
                                            items:
                                              properties:
                                                localObjectReference:
                                                  description: The Secret to select
                                                    from. Structure is documented
                                                    below.
                                                  items:
                                                    properties:
                                                      name:
                                                        description: Volume's name.
                                                        type: string
                                                    required:
                                                    - name
                                                    type: object
                                                  type: array
                                                optional:
                                                  description: Specify whether the
                                                    Secret must be defined
                                                  type: boolean
                                              type: object
                                            type: array
                                        type: object
                                      type: array
                                    image:
                                      description: 'Docker image name. This is most
                                        often a reference to a container located in
                                        the container registry, such as gcr.io/cloudrun/hello
                                        More info: https://kubernetes.io/docs/concepts/containers/images'
                                      type: string
                                    ports:
                                      description: 'List of open ports in the container.
                                        More Info: https://cloud.google.com/run/docs/reference/rest/v1/RevisionSpec#ContainerPort
                                        Structure is documented below.'
                                      items:
                                        properties:
                                          containerPort:
                                            description: Port number the container
                                              listens on. This must be a valid port
                                              number (between 1 and 65535). Defaults
                                              to "8080".
                                            type: number
                                          name:
                                            description: Volume's name.
                                            type: string
                                          protocol:
                                            description: Protocol for port. Must be
                                              "TCP". Defaults to "TCP".
                                            type: string
                                        type: object
                                      type: array
                                    resources:
                                      description: 'Compute Resources required by
                                        this container. Used to set values such as
                                        max memory More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits
                                        Structure is documented below.'
                                      items:
                                        properties:
                                          limits:
                                            additionalProperties:
                                              type: string
                                            description: 'Limits describes the maximum
                                              amount of compute resources allowed.
                                              The values of the map is string form
                                              of the ''quantity'' k8s type: https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/apimachinery/pkg/api/resource/quantity.go'
                                            type: object
                                          requests:
                                            additionalProperties:
                                              type: string
                                            description: 'Requests describes the minimum
                                              amount of compute resources required.
                                              If Requests is omitted for a container,
                                              it defaults to Limits if that is explicitly
                                              specified, otherwise to an implementation-defined
                                              value. The values of the map is string
                                              form of the ''quantity'' k8s type: https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/apimachinery/pkg/api/resource/quantity.go'
                                            type: object
                                        type: object
                                      type: array
                                    volumeMounts:
                                      description: Volume to mount into the container's
                                        filesystem. Only supports SecretVolumeSources.
                                        Structure is documented below.
                                      items:
                                        properties:
                                          mountPath:
                                            description: Path within the container
                                              at which the volume should be mounted.  Must
                                              not contain ':'.
                                            type: string
                                          name:
                                            description: Volume's name.
                                            type: string
                                        required:
                                        - mountPath
                                        - name
                                        type: object
                                      type: array
                                    workingDir:
                                      description: Container's working directory.
                                        If not specified, the container runtime's
                                        default will be used, which might be configured
                                        in the container image.
                                      type: string
                                  required:
                                  - image
                                  type: object
                                type: array
                              serviceAccountName:
                                description: Email address of the IAM service account
                                  associated with the revision of the service. The
                                  service account represents the identity of the running
                                  revision, and determines what permissions the revision
                                  has. If not provided, the revision will use the
                                  project's default service account.
                                type: string
                              timeoutSeconds:
                                description: Number of seconds after which the probe
                                  times out. Defaults to 1 second. Minimum value is
                                  1. Maximum value is 3600. Must be smaller than periodSeconds.
                                type: number
                              volumes:
                                description: Volume represents a named volume in a
                                  container. Structure is documented below.
                                items:
                                  properties:
                                    name:
                                      description: Volume's name.
                                      type: string
                                    secret:
                                      description: The secret's value will be presented
                                        as the content of a file whose name is defined
                                        in the item path. If no items are defined,
                                        the name of the file is the secret_name. Structure
                                        is documented below.
                                      items:
                                        properties:
                                          defaultMode:
                                            description: Mode bits to use on created
                                              files by default. Must be a value between
                                              0000 and 0777. Defaults to 0644. Directories
                                              within the path are not affected by
                                              this setting. This might be in conflict
                                              with other options that affect the file
                                              mode, like fsGroup, and the result can
                                              be other mode bits set.
                                            type: number
                                          items:
                                            description: If unspecified, the volume
                                              will expose a file whose name is the
                                              secret_name. If specified, the key will
                                              be used as the version to fetch from
                                              Cloud Secret Manager and the path will
                                              be the name of the file exposed in the
                                              volume. When items are defined, they
                                              must specify a key and a path. Structure
                                              is documented below.
                                            items:
                                              properties:
                                                key:
                                                  description: A Cloud Secret Manager
                                                    secret version. Must be 'latest'
                                                    for the latest version or an integer
                                                    for a specific version.
                                                  type: string
                                                mode:
                                                  description: Mode bits to use on
                                                    this file, must be a value between
                                                    0000 and 0777. If not specified,
                                                    the volume defaultMode will be
                                                    used. This might be in conflict
                                                    with other options that affect
                                                    the file mode, like fsGroup, and
                                                    the result can be other mode bits
                                                    set.
                                                  type: number
                                                path:
                                                  description: The relative path of
                                                    the file to map the key to. May
                                                    not be an absolute path. May not
                                                    contain the path element '..'.
                                                    May not start with the string
                                                    '..'.
                                                  type: string
                                              required:
                                              - key
                                              - path
                                              type: object
                                            type: array
                                          secretName:
                                            description: 'The name of the secret in
                                              Cloud Secret Manager. By default, the
                                              secret is assumed to be in the same
                                              project. If the secret is in another
                                              project, you must define an alias. An
                                              alias definition has the form: {alias}:projects/{project-id|project-number}/secrets/{secret-name}.
                                              If multiple alias definitions are needed,
                                              they must be separated by commas. The
                                              alias definitions must be set on the
                                              run.googleapis.com/secrets annotation.'
                                            type: string
                                          secretNameRef:
                                            description: Reference to a Secret in
                                              secretmanager to populate secretName.
                                            properties:
                                              name:
                                                description: Name of the referenced
                                                  object.
                                                type: string
                                              policy:
                                                description: Policies for referencing.
                                                properties:
                                                  resolution:
                                                    default: Required
                                                    description: Resolution specifies
                                                      whether resolution of this reference
                                                      is required. The default is
                                                      'Required', which means the
                                                      reconcile will fail if the reference
                                                      cannot be resolved. 'Optional'
                                                      means this reference will be
                                                      a no-op if it cannot be resolved.
                                                    enum:
                                                    - Required
                                                    - Optional
                                                    type: string
                                                  resolve:
                                                    description: Resolve specifies
                                                      when this reference should be
                                                      resolved. The default is 'IfNotPresent',
                                                      which will attempt to resolve
                                                      the reference only when the
                                                      corresponding field is not present.
                                                      Use 'Always' to resolve the
                                                      reference on every reconcile.
                                                    enum:
                                                    - Always
                                                    - IfNotPresent
                                                    type: string
                                                type: object
                                            required:
                                            - name
                                            type: object
                                          secretNameSelector:
                                            description: Selector for a Secret in
                                              secretmanager to populate secretName.
                                            properties:
                                              matchControllerRef:
                                                description: MatchControllerRef ensures
                                                  an object with the same controller
                                                  reference as the selecting object
                                                  is selected.
                                                type: boolean
                                              matchLabels:
                                                additionalProperties:
                                                  type: string
                                                description: MatchLabels ensures an
                                                  object with matching labels is selected.
                                                type: object
                                              policy:
                                                description: Policies for selection.
                                                properties:
                                                  resolution:
                                                    default: Required
                                                    description: Resolution specifies
                                                      whether resolution of this reference
                                                      is required. The default is
                                                      'Required', which means the
                                                      reconcile will fail if the reference
                                                      cannot be resolved. 'Optional'
                                                      means this reference will be
                                                      a no-op if it cannot be resolved.
                                                    enum:
                                                    - Required
                                                    - Optional
                                                    type: string
                                                  resolve:
                                                    description: Resolve specifies
                                                      when this reference should be
                                                      resolved. The default is 'IfNotPresent',
                                                      which will attempt to resolve
                                                      the reference only when the
                                                      corresponding field is not present.
                                                      Use 'Always' to resolve the
                                                      reference on every reconcile.
                                                    enum:
                                                    - Always
                                                    - IfNotPresent
                                                    type: string
                                                type: object
                                            type: object
                                        type: object
                                      type: array
                                  required:
                                  - name
                                  - secret
                                  type: object
                                type: array
                            type: object
                          type: array
                      type: object
                    type: array
                  traffic:
                    description: Traffic specifies how to distribute traffic over
                      a collection of Knative Revisions and Configurations Structure
                      is documented below.
                    items:
                      properties:
                        latestRevision:
                          description: LatestRevision may be optionally provided to
                            indicate that the latest ready Revision of the Configuration
                            should be used for this traffic target. When provided
                            LatestRevision must be true if RevisionName is empty;
                            it must be false when RevisionName is non-empty.
                          type: boolean
                        percent:
                          description: Percent specifies percent of the traffic to
                            this Revision or Configuration.
                          type: number
                        revisionName:
                          description: RevisionName of a specific revision to which
                            to send this portion of traffic.
                          type: string
                        tag:
                          description: Tag is optionally used to expose a dedicated
                            url for referencing this target exclusively.
                          type: string
                      required:
                      - percent
                      type: object
                    type: array
                required:
                - location
                type: object
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: ServiceStatus defines the observed state of Service.
            properties:
              atProvider:
                properties:
                  id:
                    description: an identifier for the resource with format locations/{{location}}/namespaces/{{project}}/services/{{name}}
                    type: string
                  metadata:
                    description: Optional metadata for this Revision, including labels
                      and annotations. Name will be generated by the Configuration.
                      To set minimum instances for this revision, use the "autoscaling.knative.dev/minScale"
                      annotation key. To set maximum instances for this revision,
                      use the "autoscaling.knative.dev/maxScale" annotation key. To
                      set Cloud SQL connections for the revision, use the "run.googleapis.com/cloudsql-instances"
                      annotation key. Structure is documented below.
                    items:
                      properties:
                        generation:
                          description: A sequence number representing a specific generation
                            of the desired state.
                          type: number
                        resourceVersion:
                          description: 'An opaque value that represents the internal
                            version of this object that can be used by clients to
                            determine when objects have changed. May be used for optimistic
                            concurrency, change detection, and the watch operation
                            on a resource or set of resources. They may only be valid
                            for a particular resource or set of resources. More info:
                            https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency'
                          type: string
                        selfLink:
                          description: SelfLink is a URL representing this object.
                          type: string
                        uid:
                          description: 'UID is a unique id generated by the server
                            on successful creation of a resource and is not allowed
                            to change on PUT operations. More info: http://kubernetes.io/docs/user-guide/identifiers#uids'
                          type: string
                      type: object
                    type: array
                  status:
                    description: The current status of the Service. Structure is documented
                      below.
                    items:
                      properties:
                        conditions:
                          description: Array of observed Service Conditions, indicating
                            the current ready state of the service. Structure is documented
                            below.
                          items:
                            properties:
                              message:
                                description: Human readable message indicating details
                                  about the current status.
                                type: string
                              reason:
                                description: One-word CamelCase reason for the condition's
                                  current status.
                                type: string
                              status:
                                description: The current status of the Service. Structure
                                  is documented below.
                                type: string
                              type:
                                description: Type of domain mapping condition.
                                type: string
                            type: object
                          type: array
                        latestCreatedRevisionName:
                          description: From ConfigurationStatus. LatestCreatedRevisionName
                            is the last revision that was created from this Service's
                            Configuration. It might not be ready yet, for that use
                            LatestReadyRevisionName.
                          type: string
                        latestReadyRevisionName:
                          description: From ConfigurationStatus. LatestReadyRevisionName
                            holds the name of the latest Revision stamped out from
                            this Service's Configuration that has had its "Ready"
                            condition become "True".
                          type: string
                        observedGeneration:
                          description: ObservedGeneration is the 'Generation' of the
                            Route that was last processed by the controller. Clients
                            polling for completed reconciliation should poll until
                            observedGeneration = metadata.generation and the Ready
                            condition's status is True or False.
                          type: number
                        url:
                          description: From RouteStatus. URL holds the url that will
                            distribute traffic over the provided traffic targets.
                            It generally has the form https://{route-hash}-{project-hash}-{cluster-level-suffix}.a.run.app
                          type: string
                      type: object
                    type: array
                  template:
                    description: 'template holds the latest specification for the
                      Revision to be stamped out. The template references the container
                      image, and may also include labels and annotations that should
                      be attached to the Revision. To correlate a Revision, and/or
                      to force a Revision to be created when the spec doesn''t otherwise
                      change, a nonce label may be provided in the template metadata.
                      For more details, see: https://github.com/knative/serving/blob/main/docs/client-conventions.md#associate-modifications-with-revisions
                      Cloud Run does not currently support referencing a build that
                      is responsible for materializing the container image from source.
                      Structure is documented below.'
                    items:
                      properties:
                        metadata:
                          description: Optional metadata for this Revision, including
                            labels and annotations. Name will be generated by the
                            Configuration. To set minimum instances for this revision,
                            use the "autoscaling.knative.dev/minScale" annotation
                            key. To set maximum instances for this revision, use the
                            "autoscaling.knative.dev/maxScale" annotation key. To
                            set Cloud SQL connections for the revision, use the "run.googleapis.com/cloudsql-instances"
                            annotation key. Structure is documented below.
                          items:
                            properties:
                              generation:
                                description: A sequence number representing a specific
                                  generation of the desired state.
                                type: number
                              resourceVersion:
                                description: 'An opaque value that represents the
                                  internal version of this object that can be used
                                  by clients to determine when objects have changed.
                                  May be used for optimistic concurrency, change detection,
                                  and the watch operation on a resource or set of
                                  resources. They may only be valid for a particular
                                  resource or set of resources. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency'
                                type: string
                              selfLink:
                                description: SelfLink is a URL representing this object.
                                type: string
                              uid:
                                description: 'UID is a unique id generated by the
                                  server on successful creation of a resource and
                                  is not allowed to change on PUT operations. More
                                  info: http://kubernetes.io/docs/user-guide/identifiers#uids'
                                type: string
                            type: object
                          type: array
                        spec:
                          description: RevisionSpec holds the desired state of the
                            Revision (from the client). Structure is documented below.
                          items:
                            properties:
                              servingState:
                                description: (Deprecated) ServingState holds a value
                                  describing the state the resources are in for this
                                  Revision. It is expected that the system will manipulate
                                  this based on routability and load.
                                type: string
                            type: object
                          type: array
                      type: object
                    type: array
                  traffic:
                    description: Traffic specifies how to distribute traffic over
                      a collection of Knative Revisions and Configurations Structure
                      is documented below.
                    items:
                      properties:
                        url:
                          description: URL displays the URL for accessing tagged traffic
                            targets. URL is displayed in status, and is disallowed
                            on spec. URL must contain a scheme (e.g. http://) and
                            a hostname, but may not contain anything else (e.g. basic
                            auth, url path, etc.)
                          type: string
                      type: object
                    type: array
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
