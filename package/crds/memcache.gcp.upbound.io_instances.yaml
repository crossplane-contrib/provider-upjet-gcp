---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.11.1
  creationTimestamp: null
  name: instances.memcache.gcp.upbound.io
spec:
  group: memcache.gcp.upbound.io
  names:
    categories:
    - crossplane
    - managed
    - gcp
    kind: Instance
    listKind: InstanceList
    plural: instances
    singular: instance
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: Instance is the Schema for the Instances API. A Google Cloud
          Memcache instance.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: InstanceSpec defines the desired state of Instance
            properties:
              deletionPolicy:
                default: Delete
                description: DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource.
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  authorizedNetwork:
                    description: The full name of the GCE network to connect the instance
                      to.  If not provided, 'default' will be used.
                    type: string
                  authorizedNetworkRef:
                    description: Reference to a Connection in servicenetworking to
                      populate authorizedNetwork.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  authorizedNetworkSelector:
                    description: Selector for a Connection in servicenetworking to
                      populate authorizedNetwork.
                    properties:
                      matchControllerRef:
                        description: MatchControllerRef ensures an object with the
                          same controller reference as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  displayName:
                    description: A user-visible name for the instance.
                    type: string
                  labels:
                    additionalProperties:
                      type: string
                    description: Resource labels to represent user-provided metadata.
                    type: object
                  maintenancePolicy:
                    description: Maintenance policy for an instance. Structure is
                      documented below.
                    items:
                      properties:
                        description:
                          description: Optional. Description of what this policy is
                            for. Create/Update methods return INVALID_ARGUMENT if
                            the length is greater than 512.
                          type: string
                        weeklyMaintenanceWindow:
                          description: Required. Maintenance window that is applied
                            to resources covered by this policy. Minimum 1. For the
                            current version, the maximum number of weekly_maintenance_windows
                            is expected to be one. Structure is documented below.
                          items:
                            properties:
                              day:
                                description: Required. The day of week that maintenance
                                  updates occur.
                                type: string
                              duration:
                                description: 'Required. The length of the maintenance
                                  window, ranging from 3 hours to 8 hours. A duration
                                  in seconds with up to nine fractional digits, terminated
                                  by ''s''. Example: "3.5s".'
                                type: string
                              startTime:
                                description: Required. Start time of the window in
                                  UTC time. Structure is documented below.
                                items:
                                  properties:
                                    hours:
                                      description: Hours of day in 24 hour format.
                                        Should be from 0 to 23. An API may choose
                                        to allow the value "24:00:00" for scenarios
                                        like business closing time.
                                      type: number
                                    minutes:
                                      description: Minutes of hour of day. Must be
                                        from 0 to 59.
                                      type: number
                                    nanos:
                                      description: Fractions of seconds in nanoseconds.
                                        Must be from 0 to 999,999,999.
                                      type: number
                                    seconds:
                                      description: Seconds of minutes of the time.
                                        Must normally be from 0 to 59. An API may
                                        allow the value 60 if it allows leap-seconds.
                                      type: number
                                  type: object
                                type: array
                            required:
                            - day
                            - duration
                            - startTime
                            type: object
                          type: array
                      required:
                      - weeklyMaintenanceWindow
                      type: object
                    type: array
                  memcacheParameters:
                    description: User-specified parameters for this memcache instance.
                      Structure is documented below.
                    items:
                      properties:
                        params:
                          additionalProperties:
                            type: string
                          description: User-defined set of parameters to use in the
                            memcache process.
                          type: object
                      type: object
                    type: array
                  memcacheVersion:
                    description: The major version of Memcached software. If not provided,
                      latest supported version will be used. Currently the latest
                      supported major version is MEMCACHE_1_5. The minor version will
                      be automatically determined by our system based on the latest
                      supported minor version. Default value is MEMCACHE_1_5. Possible
                      values are MEMCACHE_1_5.
                    type: string
                  name:
                    description: The resource name of the instance.
                    type: string
                  nodeConfig:
                    description: Configuration for memcache nodes. Structure is documented
                      below.
                    items:
                      properties:
                        cpuCount:
                          description: Number of CPUs per node.
                          type: number
                        memorySizeMb:
                          description: Memory size in Mebibytes for each memcache
                            node.
                          type: number
                      required:
                      - cpuCount
                      - memorySizeMb
                      type: object
                    type: array
                  nodeCount:
                    description: Number of nodes in the memcache instance.
                    type: number
                  project:
                    description: The ID of the project in which the resource belongs.
                      If it is not provided, the provider project is used.
                    type: string
                  region:
                    description: The region of the Memcache instance. If it is not
                      provided, the provider region is used.
                    type: string
                  zones:
                    description: Zones where memcache nodes should be provisioned.  If
                      not provided, all zones will be used.
                    items:
                      type: string
                    type: array
                required:
                - name
                - nodeConfig
                - nodeCount
                type: object
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: InstanceStatus defines the observed state of Instance.
            properties:
              atProvider:
                properties:
                  createTime:
                    description: Creation timestamp in RFC3339 text format.
                    type: string
                  discoveryEndpoint:
                    description: Endpoint for Discovery API
                    type: string
                  id:
                    description: an identifier for the resource with format projects/{{project}}/locations/{{region}}/instances/{{name}}
                    type: string
                  maintenancePolicy:
                    description: Maintenance policy for an instance. Structure is
                      documented below.
                    items:
                      properties:
                        createTime:
                          description: Output only. The time when the policy was created.
                            A timestamp in RFC3339 UTC "Zulu" format, with nanosecond
                            resolution and up to nine fractional digits
                          type: string
                        updateTime:
                          description: Output only. The time when the policy was updated.
                            A timestamp in RFC3339 UTC "Zulu" format, with nanosecond
                            resolution and up to nine fractional digits.
                          type: string
                      type: object
                    type: array
                  maintenanceSchedule:
                    description: Output only. Published maintenance schedule. Structure
                      is documented below.
                    items:
                      properties:
                        endTime:
                          description: Output only. The end time of any upcoming scheduled
                            maintenance for this instance. A timestamp in RFC3339
                            UTC "Zulu" format, with nanosecond resolution and up to
                            nine fractional digits.
                          type: string
                        scheduleDeadlineTime:
                          description: Output only. The deadline that the maintenance
                            schedule start time can not go beyond, including reschedule.
                            A timestamp in RFC3339 UTC "Zulu" format, with nanosecond
                            resolution and up to nine fractional digits.
                          type: string
                        startTime:
                          description: Output only. The start time of any upcoming
                            scheduled maintenance for this instance. A timestamp in
                            RFC3339 UTC "Zulu" format, with nanosecond resolution
                            and up to nine fractional digits.
                          type: string
                      type: object
                    type: array
                  memcacheFullVersion:
                    description: The full version of memcached server running on this
                      instance.
                    type: string
                  memcacheNodes:
                    description: Additional information about the instance state,
                      if available. Structure is documented below.
                    items:
                      properties:
                        host:
                          description: Hostname or IP address of the Memcached node
                            used by the clients to connect to the Memcached server
                            on this node.
                          type: string
                        nodeId:
                          description: Identifier of the Memcached node. The node
                            id does not include project or location like the Memcached
                            instance name.
                          type: string
                        port:
                          description: The port number of the Memcached server on
                            this node.
                          type: number
                        state:
                          description: Current state of the Memcached node.
                          type: string
                        zone:
                          description: Location (GCP Zone) for the Memcached node.
                          type: string
                      type: object
                    type: array
                  memcacheParameters:
                    description: User-specified parameters for this memcache instance.
                      Structure is documented below.
                    items:
                      properties:
                        id:
                          description: This is a unique ID associated with this set
                            of parameters.
                          type: string
                      type: object
                    type: array
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
