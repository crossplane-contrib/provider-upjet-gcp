---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: backendservices.compute.gcp.upbound.io
spec:
  group: compute.gcp.upbound.io
  names:
    categories:
    - crossplane
    - managed
    - gcp
    kind: BackendService
    listKind: BackendServiceList
    plural: backendservices
    singular: backendservice
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: BackendService is the Schema for the BackendServices API. A Backend
          Service defines a group of virtual machines that will serve traffic for
          load balancing.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: BackendServiceSpec defines the desired state of BackendService
            properties:
              deletionPolicy:
                default: Delete
                description: |-
                  DeletionPolicy specifies what will happen to the underlying external
                  when this managed resource is deleted - either "Delete" or "Orphan" the
                  external resource.
                  This field is planned to be deprecated in favor of the ManagementPolicies
                  field in a future release. Currently, both could be set independently and
                  non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  affinityCookieTtlSec:
                    description: |-
                      Lifetime of cookies in seconds if session_affinity is
                      GENERATED_COOKIE. If set to 0, the cookie is non-persistent and lasts
                      only until the end of the browser session (or equivalent). The
                      maximum allowed value for TTL is one day.
                      When the load balancing scheme is INTERNAL, this field is not used.
                    type: number
                  backend:
                    description: |-
                      The set of backends that serve this BackendService.
                      Structure is documented below.
                    items:
                      properties:
                        balancingMode:
                          description: |-
                            Specifies the balancing mode for this backend.
                            For global HTTP(S) or TCP/SSL load balancing, the default is
                            UTILIZATION. Valid values are UTILIZATION, RATE (for HTTP(S))
                            and CONNECTION (for TCP/SSL).
                            See the Backend Services Overview
                            for an explanation of load balancing modes.
                            Default value is UTILIZATION.
                            Possible values are: UTILIZATION, RATE, CONNECTION.
                          type: string
                        capacityScaler:
                          description: |-
                            A multiplier applied to the group's maximum servicing capacity
                            (based on UTILIZATION, RATE or CONNECTION).
                            Default value is 1, which means the group will serve up to 100%
                            of its configured capacity (depending on balancingMode). A
                            setting of 0 means the group is completely drained, offering
                            0% of its available Capacity. Valid range is [0.0,1.0].
                          type: number
                        description:
                          description: |-
                            An optional description of this resource.
                            Provide this property when you create the resource.
                          type: string
                        group:
                          description: |-
                            The fully-qualified URL of an Instance Group or Network Endpoint
                            Group resource. In case of instance group this defines the list
                            of instances that serve traffic. Member virtual machine
                            instances from each instance group must live in the same zone as
                            the instance group itself. No two backends in a backend service
                            are allowed to use same Instance Group resource.
                            For Network Endpoint Groups this defines list of endpoints. All
                            endpoints of Network Endpoint Group must be hosted on instances
                            located in the same zone as the Network Endpoint Group.
                            Backend services cannot mix Instance Group and
                            Network Endpoint Group backends.
                            Note that you must specify an Instance Group or Network Endpoint
                            Group resource using the fully-qualified URL, rather than a
                            partial URL.
                          type: string
                        groupRef:
                          description: Reference to a InstanceGroupManager to populate
                            group.
                          properties:
                            name:
                              description: Name of the referenced object.
                              type: string
                            policy:
                              description: Policies for referencing.
                              properties:
                                resolution:
                                  default: Required
                                  description: |-
                                    Resolution specifies whether resolution of this reference is required.
                                    The default is 'Required', which means the reconcile will fail if the
                                    reference cannot be resolved. 'Optional' means this reference will be
                                    a no-op if it cannot be resolved.
                                  enum:
                                  - Required
                                  - Optional
                                  type: string
                                resolve:
                                  description: |-
                                    Resolve specifies when this reference should be resolved. The default
                                    is 'IfNotPresent', which will attempt to resolve the reference only when
                                    the corresponding field is not present. Use 'Always' to resolve the
                                    reference on every reconcile.
                                  enum:
                                  - Always
                                  - IfNotPresent
                                  type: string
                              type: object
                          required:
                          - name
                          type: object
                        groupSelector:
                          description: Selector for a InstanceGroupManager to populate
                            group.
                          properties:
                            matchControllerRef:
                              description: |-
                                MatchControllerRef ensures an object with the same controller reference
                                as the selecting object is selected.
                              type: boolean
                            matchLabels:
                              additionalProperties:
                                type: string
                              description: MatchLabels ensures an object with matching
                                labels is selected.
                              type: object
                            policy:
                              description: Policies for selection.
                              properties:
                                resolution:
                                  default: Required
                                  description: |-
                                    Resolution specifies whether resolution of this reference is required.
                                    The default is 'Required', which means the reconcile will fail if the
                                    reference cannot be resolved. 'Optional' means this reference will be
                                    a no-op if it cannot be resolved.
                                  enum:
                                  - Required
                                  - Optional
                                  type: string
                                resolve:
                                  description: |-
                                    Resolve specifies when this reference should be resolved. The default
                                    is 'IfNotPresent', which will attempt to resolve the reference only when
                                    the corresponding field is not present. Use 'Always' to resolve the
                                    reference on every reconcile.
                                  enum:
                                  - Always
                                  - IfNotPresent
                                  type: string
                              type: object
                          type: object
                        maxConnections:
                          description: |-
                            The max number of simultaneous connections for the group. Can
                            be used with either CONNECTION or UTILIZATION balancing modes.
                            For CONNECTION mode, either maxConnections or one
                            of maxConnectionsPerInstance or maxConnectionsPerEndpoint,
                            as appropriate for group type, must be set.
                          type: number
                        maxConnectionsPerEndpoint:
                          description: |-
                            The max number of simultaneous connections that a single backend
                            network endpoint can handle. This is used to calculate the
                            capacity of the group. Can be used in either CONNECTION or
                            UTILIZATION balancing modes.
                            For CONNECTION mode, either
                            maxConnections or maxConnectionsPerEndpoint must be set.
                          type: number
                        maxConnectionsPerInstance:
                          description: |-
                            The max number of simultaneous connections that a single
                            backend instance can handle. This is used to calculate the
                            capacity of the group. Can be used in either CONNECTION or
                            UTILIZATION balancing modes.
                            For CONNECTION mode, either maxConnections or
                            maxConnectionsPerInstance must be set.
                          type: number
                        maxRate:
                          description: |-
                            The max requests per second (RPS) of the group.
                            Can be used with either RATE or UTILIZATION balancing modes,
                            but required if RATE mode. For RATE mode, either maxRate or one
                            of maxRatePerInstance or maxRatePerEndpoint, as appropriate for
                            group type, must be set.
                          type: number
                        maxRatePerEndpoint:
                          description: |-
                            The max requests per second (RPS) that a single backend network
                            endpoint can handle. This is used to calculate the capacity of
                            the group. Can be used in either balancing mode. For RATE mode,
                            either maxRate or maxRatePerEndpoint must be set.
                          type: number
                        maxRatePerInstance:
                          description: |-
                            The max requests per second (RPS) that a single backend
                            instance can handle. This is used to calculate the capacity of
                            the group. Can be used in either balancing mode. For RATE mode,
                            either maxRate or maxRatePerInstance must be set.
                          type: number
                        maxUtilization:
                          description: |-
                            Used when balancingMode is UTILIZATION. This ratio defines the
                            CPU utilization target for the group. Valid range is [0.0, 1.0].
                          type: number
                      type: object
                    type: array
                  cdnPolicy:
                    description: |-
                      Cloud CDN configuration for this BackendService.
                      Structure is documented below.
                    items:
                      properties:
                        bypassCacheOnRequestHeaders:
                          description: |-
                            Bypass the cache when the specified request headers are matched - e.g. Pragma or Authorization headers. Up to 5 headers can be specified.
                            The cache is bypassed for all cdnPolicy.cacheMode settings.
                            Structure is documented below.
                          items:
                            properties:
                              headerName:
                                description: The header field name to match on when
                                  bypassing cache. Values are case-insensitive.
                                type: string
                            type: object
                          type: array
                        cacheKeyPolicy:
                          description: |-
                            The CacheKeyPolicy for this CdnPolicy.
                            Structure is documented below.
                          items:
                            properties:
                              includeHost:
                                description: If true requests to different hosts will
                                  be cached separately.
                                type: boolean
                              includeHttpHeaders:
                                description: |-
                                  Allows HTTP request headers (by name) to be used in the
                                  cache key.
                                items:
                                  type: string
                                type: array
                              includeNamedCookies:
                                description: Names of cookies to include in cache
                                  keys.
                                items:
                                  type: string
                                type: array
                              includeProtocol:
                                description: If true, http and https requests will
                                  be cached separately.
                                type: boolean
                              includeQueryString:
                                description: |-
                                  If true, include query string parameters in the cache key
                                  according to query_string_whitelist and
                                  query_string_blacklist. If neither is set, the entire query
                                  string will be included.
                                  If false, the query string will be excluded from the cache
                                  key entirely.
                                type: boolean
                              queryStringBlacklist:
                                description: |-
                                  Names of query string parameters to exclude in cache keys.
                                  All other parameters will be included. Either specify
                                  query_string_whitelist or query_string_blacklist, not both.
                                  '&' and '=' will be percent encoded and not treated as
                                  delimiters.
                                items:
                                  type: string
                                type: array
                                x-kubernetes-list-type: set
                              queryStringWhitelist:
                                description: |-
                                  Names of query string parameters to include in cache keys.
                                  All other parameters will be excluded. Either specify
                                  query_string_whitelist or query_string_blacklist, not both.
                                  '&' and '=' will be percent encoded and not treated as
                                  delimiters.
                                items:
                                  type: string
                                type: array
                                x-kubernetes-list-type: set
                            type: object
                          type: array
                        cacheMode:
                          description: |-
                            Specifies the cache setting for all responses from this backend.
                            The possible values are: USE_ORIGIN_HEADERS, FORCE_CACHE_ALL and CACHE_ALL_STATIC
                            Possible values are: USE_ORIGIN_HEADERS, FORCE_CACHE_ALL, CACHE_ALL_STATIC.
                          type: string
                        clientTtl:
                          description: Specifies the maximum allowed TTL for cached
                            content served by this origin.
                          type: number
                        defaultTtl:
                          description: |-
                            Specifies the default TTL for cached content served by this origin for responses
                            that do not have an existing valid TTL (max-age or s-max-age).
                          type: number
                        maxTtl:
                          description: Specifies the maximum allowed TTL for cached
                            content served by this origin.
                          type: number
                        negativeCaching:
                          description: Negative caching allows per-status code TTLs
                            to be set, in order to apply fine-grained caching for
                            common errors or redirects.
                          type: boolean
                        negativeCachingPolicy:
                          description: |-
                            Sets a cache TTL for the specified HTTP status code. negativeCaching must be enabled to configure negativeCachingPolicy.
                            Omitting the policy and leaving negativeCaching enabled will use Cloud CDN's default cache TTLs.
                            Structure is documented below.
                          items:
                            properties:
                              code:
                                description: |-
                                  The HTTP status code to define a TTL against. Only HTTP status codes 300, 301, 308, 404, 405, 410, 421, 451 and 501
                                  can be specified as values, and you cannot specify a status code more than once.
                                type: number
                              ttl:
                                description: |-
                                  The TTL (in seconds) for which to cache responses with the corresponding status code. The maximum allowed value is 1800s
                                  (30 minutes), noting that infrequently accessed objects may be evicted from the cache before the defined TTL.
                                type: number
                            type: object
                          type: array
                        serveWhileStale:
                          description: Serve existing content from the cache (if available)
                            when revalidating content with the origin, or when an
                            error is encountered when refreshing the cache.
                          type: number
                        signedUrlCacheMaxAgeSec:
                          description: |-
                            Maximum number of seconds the response to a signed URL request
                            will be considered fresh, defaults to 1hr (3600s). After this
                            time period, the response will be revalidated before
                            being served.
                            When serving responses to signed URL requests, Cloud CDN will
                            internally behave as though all responses from this backend had a
                            "Cache-Control: public, max-age=[TTL]" header, regardless of any
                            existing Cache-Control header. The actual headers served in
                            responses will not be altered.
                          type: number
                      type: object
                    type: array
                  circuitBreakers:
                    description: |-
                      Settings controlling the volume of connections to a backend service. This field
                      is applicable only when the load_balancing_scheme is set to INTERNAL_SELF_MANAGED.
                      Structure is documented below.
                    items:
                      properties:
                        maxConnections:
                          description: |-
                            The maximum number of connections to the backend cluster.
                            Defaults to 1024.
                          type: number
                        maxPendingRequests:
                          description: |-
                            The maximum number of pending requests to the backend cluster.
                            Defaults to 1024.
                          type: number
                        maxRequests:
                          description: |-
                            The maximum number of parallel requests to the backend cluster.
                            Defaults to 1024.
                          type: number
                        maxRequestsPerConnection:
                          description: |-
                            Maximum requests for a single backend connection. This parameter
                            is respected by both the HTTP/1.1 and HTTP/2 implementations. If
                            not specified, there is no limit. Setting this parameter to 1
                            will effectively disable keep alive.
                          type: number
                        maxRetries:
                          description: |-
                            The maximum number of parallel retries to the backend cluster.
                            Defaults to 3.
                          type: number
                      type: object
                    type: array
                  compressionMode:
                    description: |-
                      Compress text responses using Brotli or gzip compression, based on the client's Accept-Encoding header.
                      Possible values are: AUTOMATIC, DISABLED.
                    type: string
                  connectionDrainingTimeoutSec:
                    description: |-
                      Time for which instance will be drained (not accept new
                      connections, but still work to finish started).
                    type: number
                  consistentHash:
                    description: |-
                      Consistent Hash-based load balancing can be used to provide soft session
                      affinity based on HTTP headers, cookies or other properties. This load balancing
                      policy is applicable only for HTTP connections. The affinity to a particular
                      destination host will be lost when one or more hosts are added/removed from the
                      destination service. This field specifies parameters that control consistent
                      hashing. This field only applies if the load_balancing_scheme is set to
                      INTERNAL_SELF_MANAGED. This field is only applicable when locality_lb_policy is
                      set to MAGLEV or RING_HASH.
                      Structure is documented below.
                    items:
                      properties:
                        httpCookie:
                          description: |-
                            Hash is based on HTTP Cookie. This field describes a HTTP cookie
                            that will be used as the hash key for the consistent hash load
                            balancer. If the cookie is not present, it will be generated.
                            This field is applicable if the sessionAffinity is set to HTTP_COOKIE.
                            Structure is documented below.
                          items:
                            properties:
                              name:
                                description: |-
                                  The name of a locality load balancer policy to be used. The value
                                  should be one of the predefined ones as supported by localityLbPolicy,
                                  although at the moment only ROUND_ROBIN is supported.
                                  This field should only be populated when the customPolicy field is not
                                  used.
                                  Note that specifying the same policy more than once for a backend is
                                  not a valid configuration and will be rejected.
                                  The possible values are:
                                type: string
                              path:
                                description: Path to set for the cookie.
                                type: string
                              ttl:
                                description: |-
                                  The TTL (in seconds) for which to cache responses with the corresponding status code. The maximum allowed value is 1800s
                                  (30 minutes), noting that infrequently accessed objects may be evicted from the cache before the defined TTL.
                                items:
                                  properties:
                                    nanos:
                                      description: |-
                                        Span of time that's a fraction of a second at nanosecond
                                        resolution. Durations less than one second are represented
                                        with a 0 seconds field and a positive nanos field. Must
                                        be from 0 to 999,999,999 inclusive.
                                      type: number
                                    seconds:
                                      description: |-
                                        Span of time at a resolution of a second.
                                        Must be from 0 to 315,576,000,000 inclusive.
                                      type: number
                                  type: object
                                type: array
                            type: object
                          type: array
                        httpHeaderName:
                          description: |-
                            The hash based on the value of the specified header field.
                            This field is applicable if the sessionAffinity is set to HEADER_FIELD.
                          type: string
                        minimumRingSize:
                          description: |-
                            The minimum number of virtual nodes to use for the hash ring.
                            Larger ring sizes result in more granular load
                            distributions. If the number of hosts in the load balancing pool
                            is larger than the ring size, each host will be assigned a single
                            virtual node.
                            Defaults to 1024.
                          type: number
                      type: object
                    type: array
                  customRequestHeaders:
                    description: |-
                      Headers that the HTTP/S load balancer should add to proxied
                      requests.
                    items:
                      type: string
                    type: array
                    x-kubernetes-list-type: set
                  customResponseHeaders:
                    description: |-
                      Headers that the HTTP/S load balancer should add to proxied
                      responses.
                    items:
                      type: string
                    type: array
                    x-kubernetes-list-type: set
                  description:
                    description: An optional description of this resource.
                    type: string
                  edgeSecurityPolicy:
                    description: The resource URL for the edge security policy associated
                      with this backend service.
                    type: string
                  enableCdn:
                    description: If true, enable Cloud CDN for this BackendService.
                    type: boolean
                  healthChecks:
                    description: |-
                      The set of URLs to the HttpHealthCheck or HttpsHealthCheck resource
                      for health checking this BackendService. Currently at most one health
                      check can be specified.
                      A health check must be specified unless the backend service uses an internet
                      or serverless NEG as a backend.
                      For internal load balancing, a URL to a HealthCheck resource must be specified instead.
                    items:
                      type: string
                    type: array
                    x-kubernetes-list-type: set
                  healthChecksRefs:
                    description: References to HealthCheck to populate healthChecks.
                    items:
                      description: A Reference to a named object.
                      properties:
                        name:
                          description: Name of the referenced object.
                          type: string
                        policy:
                          description: Policies for referencing.
                          properties:
                            resolution:
                              default: Required
                              description: |-
                                Resolution specifies whether resolution of this reference is required.
                                The default is 'Required', which means the reconcile will fail if the
                                reference cannot be resolved. 'Optional' means this reference will be
                                a no-op if it cannot be resolved.
                              enum:
                              - Required
                              - Optional
                              type: string
                            resolve:
                              description: |-
                                Resolve specifies when this reference should be resolved. The default
                                is 'IfNotPresent', which will attempt to resolve the reference only when
                                the corresponding field is not present. Use 'Always' to resolve the
                                reference on every reconcile.
                              enum:
                              - Always
                              - IfNotPresent
                              type: string
                          type: object
                      required:
                      - name
                      type: object
                    type: array
                  healthChecksSelector:
                    description: Selector for a list of HealthCheck to populate healthChecks.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  iap:
                    description: |-
                      Settings for enabling Cloud Identity Aware Proxy
                      Structure is documented below.
                    items:
                      properties:
                        oauth2ClientId:
                          description: OAuth2 Client ID for IAP
                          type: string
                        oauth2ClientSecretSecretRef:
                          description: |-
                            OAuth2 Client Secret for IAP
                            Note: This property is sensitive and will not be displayed in the plan.
                          properties:
                            key:
                              description: The key to select.
                              type: string
                            name:
                              description: Name of the secret.
                              type: string
                            namespace:
                              description: Namespace of the secret.
                              type: string
                          required:
                          - key
                          - name
                          - namespace
                          type: object
                      required:
                      - oauth2ClientSecretSecretRef
                      type: object
                    type: array
                  loadBalancingScheme:
                    description: |-
                      Indicates whether the backend service will be used with internal or
                      external load balancing. A backend service created for one type of
                      load balancing cannot be used with the other. For more information, refer to
                      Choosing a load balancer.
                      Default value is EXTERNAL.
                      Possible values are: EXTERNAL, INTERNAL_SELF_MANAGED, EXTERNAL_MANAGED.
                    type: string
                  localityLbPolicies:
                    description: |-
                      A list of locality load balancing policies to be used in order of
                      preference. Either the policy or the customPolicy field should be set.
                      Overrides any value set in the localityLbPolicy field.
                      localityLbPolicies is only supported when the BackendService is referenced
                      by a URL Map that is referenced by a target gRPC proxy that has the
                      validateForProxyless field set to true.
                      Structure is documented below.
                    items:
                      properties:
                        customPolicy:
                          description: |-
                            The configuration for a custom policy implemented by the user and
                            deployed with the client.
                            Structure is documented below.
                          items:
                            properties:
                              data:
                                description: |-
                                  An optional, arbitrary JSON object with configuration data, understood
                                  by a locally installed custom policy implementation.
                                type: string
                              name:
                                description: |-
                                  The name of a locality load balancer policy to be used. The value
                                  should be one of the predefined ones as supported by localityLbPolicy,
                                  although at the moment only ROUND_ROBIN is supported.
                                  This field should only be populated when the customPolicy field is not
                                  used.
                                  Note that specifying the same policy more than once for a backend is
                                  not a valid configuration and will be rejected.
                                  The possible values are:
                                type: string
                            type: object
                          type: array
                        policy:
                          description: |-
                            The configuration for a built-in load balancing policy.
                            Structure is documented below.
                          items:
                            properties:
                              name:
                                description: |-
                                  The name of a locality load balancer policy to be used. The value
                                  should be one of the predefined ones as supported by localityLbPolicy,
                                  although at the moment only ROUND_ROBIN is supported.
                                  This field should only be populated when the customPolicy field is not
                                  used.
                                  Note that specifying the same policy more than once for a backend is
                                  not a valid configuration and will be rejected.
                                  The possible values are:
                                type: string
                            type: object
                          type: array
                      type: object
                    type: array
                  localityLbPolicy:
                    description: |-
                      The load balancing algorithm used within the scope of the locality.
                      The possible values are:
                    type: string
                  logConfig:
                    description: |-
                      This field denotes the logging options for the load balancer traffic served by this backend service.
                      If logging is enabled, logs will be exported to Stackdriver.
                      Structure is documented below.
                    items:
                      properties:
                        enable:
                          description: Whether to enable logging for the load balancer
                            traffic served by this backend service.
                          type: boolean
                        sampleRate:
                          description: |-
                            This field can only be specified if logging is enabled for this backend service. The value of
                            the field must be in [0, 1]. This configures the sampling rate of requests to the load balancer
                            where 1.0 means all logged requests are reported and 0.0 means no logged requests are reported.
                            The default value is 1.0.
                          type: number
                      type: object
                    type: array
                  outlierDetection:
                    description: |-
                      Settings controlling eviction of unhealthy hosts from the load balancing pool.
                      This field is applicable only when the load_balancing_scheme is set
                      to INTERNAL_SELF_MANAGED.
                      Structure is documented below.
                    items:
                      properties:
                        baseEjectionTime:
                          description: |-
                            The base time that a host is ejected for. The real time is equal to the base
                            time multiplied by the number of times the host has been ejected. Defaults to
                            30000ms or 30s.
                            Structure is documented below.
                          items:
                            properties:
                              nanos:
                                description: |-
                                  Span of time that's a fraction of a second at nanosecond
                                  resolution. Durations less than one second are represented
                                  with a 0 seconds field and a positive nanos field. Must
                                  be from 0 to 999,999,999 inclusive.
                                type: number
                              seconds:
                                description: |-
                                  Span of time at a resolution of a second.
                                  Must be from 0 to 315,576,000,000 inclusive.
                                type: number
                            type: object
                          type: array
                        consecutiveErrors:
                          description: |-
                            Number of errors before a host is ejected from the connection pool. When the
                            backend host is accessed over HTTP, a 5xx return code qualifies as an error.
                            Defaults to 5.
                          type: number
                        consecutiveGatewayFailure:
                          description: |-
                            The number of consecutive gateway failures (502, 503, 504 status or connection
                            errors that are mapped to one of those status codes) before a consecutive
                            gateway failure ejection occurs. Defaults to 5.
                          type: number
                        enforcingConsecutiveErrors:
                          description: |-
                            The percentage chance that a host will be actually ejected when an outlier
                            status is detected through consecutive 5xx. This setting can be used to disable
                            ejection or to ramp it up slowly. Defaults to 100.
                          type: number
                        enforcingConsecutiveGatewayFailure:
                          description: |-
                            The percentage chance that a host will be actually ejected when an outlier
                            status is detected through consecutive gateway failures. This setting can be
                            used to disable ejection or to ramp it up slowly. Defaults to 0.
                          type: number
                        enforcingSuccessRate:
                          description: |-
                            The percentage chance that a host will be actually ejected when an outlier
                            status is detected through success rate statistics. This setting can be used to
                            disable ejection or to ramp it up slowly. Defaults to 100.
                          type: number
                        interval:
                          description: |-
                            Time interval between ejection sweep analysis. This can result in both new
                            ejections as well as hosts being returned to service. Defaults to 10 seconds.
                            Structure is documented below.
                          items:
                            properties:
                              nanos:
                                description: |-
                                  Span of time that's a fraction of a second at nanosecond
                                  resolution. Durations less than one second are represented
                                  with a 0 seconds field and a positive nanos field. Must
                                  be from 0 to 999,999,999 inclusive.
                                type: number
                              seconds:
                                description: |-
                                  Span of time at a resolution of a second.
                                  Must be from 0 to 315,576,000,000 inclusive.
                                type: number
                            type: object
                          type: array
                        maxEjectionPercent:
                          description: |-
                            Maximum percentage of hosts in the load balancing pool for the backend service
                            that can be ejected. Defaults to 10%.
                          type: number
                        successRateMinimumHosts:
                          description: |-
                            The number of hosts in a cluster that must have enough request volume to detect
                            success rate outliers. If the number of hosts is less than this setting, outlier
                            detection via success rate statistics is not performed for any host in the
                            cluster. Defaults to 5.
                          type: number
                        successRateRequestVolume:
                          description: |-
                            The minimum number of total requests that must be collected in one interval (as
                            defined by the interval duration above) to include this host in success rate
                            based outlier detection. If the volume is lower than this setting, outlier
                            detection via success rate statistics is not performed for that host. Defaults
                            to 100.
                          type: number
                        successRateStdevFactor:
                          description: |-
                            This factor is used to determine the ejection threshold for success rate outlier
                            ejection. The ejection threshold is the difference between the mean success
                            rate, and the product of this factor and the standard deviation of the mean
                            success rate: mean - (stdev * success_rate_stdev_factor). This factor is divided
                            by a thousand to get a double. That is, if the desired factor is 1.9, the
                            runtime value should be 1900. Defaults to 1900.
                          type: number
                      type: object
                    type: array
                  portName:
                    description: |-
                      Name of backend port. The same name should appear in the instance
                      groups referenced by this service. Required when the load balancing
                      scheme is EXTERNAL.
                    type: string
                  project:
                    description: |-
                      The ID of the project in which the resource belongs.
                      If it is not provided, the provider project is used.
                    type: string
                  protocol:
                    description: |-
                      The protocol this BackendService uses to communicate with backends.
                      The default is HTTP. NOTE: HTTP2 is only valid for beta HTTP/2 load balancer
                      types and may result in errors if used with the GA API.
                      Possible values are: HTTP, HTTPS, HTTP2, TCP, SSL, GRPC.
                    type: string
                  securityPolicy:
                    description: The security policy associated with this backend
                      service.
                    type: string
                  securitySettings:
                    description: |-
                      The security settings that apply to this backend service. This field is applicable to either
                      a regional backend service with the service_protocol set to HTTP, HTTPS, or HTTP2, and
                      load_balancing_scheme set to INTERNAL_MANAGED; or a global backend service with the
                      load_balancing_scheme set to INTERNAL_SELF_MANAGED.
                      Structure is documented below.
                    items:
                      properties:
                        clientTlsPolicy:
                          description: |-
                            ClientTlsPolicy is a resource that specifies how a client should authenticate
                            connections to backends of a service. This resource itself does not affect
                            configuration unless it is attached to a backend service resource.
                          type: string
                        subjectAltNames:
                          description: |-
                            A list of alternate names to verify the subject identity in the certificate.
                            If specified, the client will verify that the server certificate's subject
                            alt name matches one of the specified values.
                          items:
                            type: string
                          type: array
                      type: object
                    type: array
                  sessionAffinity:
                    description: |-
                      Type of session affinity to use. The default is NONE. Session affinity is
                      not applicable if the protocol is UDP.
                      Possible values are: NONE, CLIENT_IP, CLIENT_IP_PORT_PROTO, CLIENT_IP_PROTO, GENERATED_COOKIE, HEADER_FIELD, HTTP_COOKIE.
                    type: string
                  timeoutSec:
                    description: |-
                      How many seconds to wait for the backend before considering it a
                      failed request. Default is 30 seconds. Valid range is [1, 86400].
                    type: number
                type: object
              initProvider:
                description: |-
                  THIS IS A BETA FIELD. It will be honored
                  unless the Management Policies feature flag is disabled.
                  InitProvider holds the same fields as ForProvider, with the exception
                  of Identifier and other resource reference fields. The fields that are
                  in InitProvider are merged into ForProvider when the resource is created.
                  The same fields are also added to the terraform ignore_changes hook, to
                  avoid updating them after creation. This is useful for fields that are
                  required on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them, like an
                  autoscaler.
                properties:
                  affinityCookieTtlSec:
                    description: |-
                      Lifetime of cookies in seconds if session_affinity is
                      GENERATED_COOKIE. If set to 0, the cookie is non-persistent and lasts
                      only until the end of the browser session (or equivalent). The
                      maximum allowed value for TTL is one day.
                      When the load balancing scheme is INTERNAL, this field is not used.
                    type: number
                  backend:
                    description: |-
                      The set of backends that serve this BackendService.
                      Structure is documented below.
                    items:
                      properties:
                        balancingMode:
                          description: |-
                            Specifies the balancing mode for this backend.
                            For global HTTP(S) or TCP/SSL load balancing, the default is
                            UTILIZATION. Valid values are UTILIZATION, RATE (for HTTP(S))
                            and CONNECTION (for TCP/SSL).
                            See the Backend Services Overview
                            for an explanation of load balancing modes.
                            Default value is UTILIZATION.
                            Possible values are: UTILIZATION, RATE, CONNECTION.
                          type: string
                        capacityScaler:
                          description: |-
                            A multiplier applied to the group's maximum servicing capacity
                            (based on UTILIZATION, RATE or CONNECTION).
                            Default value is 1, which means the group will serve up to 100%
                            of its configured capacity (depending on balancingMode). A
                            setting of 0 means the group is completely drained, offering
                            0% of its available Capacity. Valid range is [0.0,1.0].
                          type: number
                        description:
                          description: |-
                            An optional description of this resource.
                            Provide this property when you create the resource.
                          type: string
                        group:
                          description: |-
                            The fully-qualified URL of an Instance Group or Network Endpoint
                            Group resource. In case of instance group this defines the list
                            of instances that serve traffic. Member virtual machine
                            instances from each instance group must live in the same zone as
                            the instance group itself. No two backends in a backend service
                            are allowed to use same Instance Group resource.
                            For Network Endpoint Groups this defines list of endpoints. All
                            endpoints of Network Endpoint Group must be hosted on instances
                            located in the same zone as the Network Endpoint Group.
                            Backend services cannot mix Instance Group and
                            Network Endpoint Group backends.
                            Note that you must specify an Instance Group or Network Endpoint
                            Group resource using the fully-qualified URL, rather than a
                            partial URL.
                          type: string
                        groupRef:
                          description: Reference to a InstanceGroupManager to populate
                            group.
                          properties:
                            name:
                              description: Name of the referenced object.
                              type: string
                            policy:
                              description: Policies for referencing.
                              properties:
                                resolution:
                                  default: Required
                                  description: |-
                                    Resolution specifies whether resolution of this reference is required.
                                    The default is 'Required', which means the reconcile will fail if the
                                    reference cannot be resolved. 'Optional' means this reference will be
                                    a no-op if it cannot be resolved.
                                  enum:
                                  - Required
                                  - Optional
                                  type: string
                                resolve:
                                  description: |-
                                    Resolve specifies when this reference should be resolved. The default
                                    is 'IfNotPresent', which will attempt to resolve the reference only when
                                    the corresponding field is not present. Use 'Always' to resolve the
                                    reference on every reconcile.
                                  enum:
                                  - Always
                                  - IfNotPresent
                                  type: string
                              type: object
                          required:
                          - name
                          type: object
                        groupSelector:
                          description: Selector for a InstanceGroupManager to populate
                            group.
                          properties:
                            matchControllerRef:
                              description: |-
                                MatchControllerRef ensures an object with the same controller reference
                                as the selecting object is selected.
                              type: boolean
                            matchLabels:
                              additionalProperties:
                                type: string
                              description: MatchLabels ensures an object with matching
                                labels is selected.
                              type: object
                            policy:
                              description: Policies for selection.
                              properties:
                                resolution:
                                  default: Required
                                  description: |-
                                    Resolution specifies whether resolution of this reference is required.
                                    The default is 'Required', which means the reconcile will fail if the
                                    reference cannot be resolved. 'Optional' means this reference will be
                                    a no-op if it cannot be resolved.
                                  enum:
                                  - Required
                                  - Optional
                                  type: string
                                resolve:
                                  description: |-
                                    Resolve specifies when this reference should be resolved. The default
                                    is 'IfNotPresent', which will attempt to resolve the reference only when
                                    the corresponding field is not present. Use 'Always' to resolve the
                                    reference on every reconcile.
                                  enum:
                                  - Always
                                  - IfNotPresent
                                  type: string
                              type: object
                          type: object
                        maxConnections:
                          description: |-
                            The max number of simultaneous connections for the group. Can
                            be used with either CONNECTION or UTILIZATION balancing modes.
                            For CONNECTION mode, either maxConnections or one
                            of maxConnectionsPerInstance or maxConnectionsPerEndpoint,
                            as appropriate for group type, must be set.
                          type: number
                        maxConnectionsPerEndpoint:
                          description: |-
                            The max number of simultaneous connections that a single backend
                            network endpoint can handle. This is used to calculate the
                            capacity of the group. Can be used in either CONNECTION or
                            UTILIZATION balancing modes.
                            For CONNECTION mode, either
                            maxConnections or maxConnectionsPerEndpoint must be set.
                          type: number
                        maxConnectionsPerInstance:
                          description: |-
                            The max number of simultaneous connections that a single
                            backend instance can handle. This is used to calculate the
                            capacity of the group. Can be used in either CONNECTION or
                            UTILIZATION balancing modes.
                            For CONNECTION mode, either maxConnections or
                            maxConnectionsPerInstance must be set.
                          type: number
                        maxRate:
                          description: |-
                            The max requests per second (RPS) of the group.
                            Can be used with either RATE or UTILIZATION balancing modes,
                            but required if RATE mode. For RATE mode, either maxRate or one
                            of maxRatePerInstance or maxRatePerEndpoint, as appropriate for
                            group type, must be set.
                          type: number
                        maxRatePerEndpoint:
                          description: |-
                            The max requests per second (RPS) that a single backend network
                            endpoint can handle. This is used to calculate the capacity of
                            the group. Can be used in either balancing mode. For RATE mode,
                            either maxRate or maxRatePerEndpoint must be set.
                          type: number
                        maxRatePerInstance:
                          description: |-
                            The max requests per second (RPS) that a single backend
                            instance can handle. This is used to calculate the capacity of
                            the group. Can be used in either balancing mode. For RATE mode,
                            either maxRate or maxRatePerInstance must be set.
                          type: number
                        maxUtilization:
                          description: |-
                            Used when balancingMode is UTILIZATION. This ratio defines the
                            CPU utilization target for the group. Valid range is [0.0, 1.0].
                          type: number
                      type: object
                    type: array
                  cdnPolicy:
                    description: |-
                      Cloud CDN configuration for this BackendService.
                      Structure is documented below.
                    items:
                      properties:
                        bypassCacheOnRequestHeaders:
                          description: |-
                            Bypass the cache when the specified request headers are matched - e.g. Pragma or Authorization headers. Up to 5 headers can be specified.
                            The cache is bypassed for all cdnPolicy.cacheMode settings.
                            Structure is documented below.
                          items:
                            properties:
                              headerName:
                                description: The header field name to match on when
                                  bypassing cache. Values are case-insensitive.
                                type: string
                            type: object
                          type: array
                        cacheKeyPolicy:
                          description: |-
                            The CacheKeyPolicy for this CdnPolicy.
                            Structure is documented below.
                          items:
                            properties:
                              includeHost:
                                description: If true requests to different hosts will
                                  be cached separately.
                                type: boolean
                              includeHttpHeaders:
                                description: |-
                                  Allows HTTP request headers (by name) to be used in the
                                  cache key.
                                items:
                                  type: string
                                type: array
                              includeNamedCookies:
                                description: Names of cookies to include in cache
                                  keys.
                                items:
                                  type: string
                                type: array
                              includeProtocol:
                                description: If true, http and https requests will
                                  be cached separately.
                                type: boolean
                              includeQueryString:
                                description: |-
                                  If true, include query string parameters in the cache key
                                  according to query_string_whitelist and
                                  query_string_blacklist. If neither is set, the entire query
                                  string will be included.
                                  If false, the query string will be excluded from the cache
                                  key entirely.
                                type: boolean
                              queryStringBlacklist:
                                description: |-
                                  Names of query string parameters to exclude in cache keys.
                                  All other parameters will be included. Either specify
                                  query_string_whitelist or query_string_blacklist, not both.
                                  '&' and '=' will be percent encoded and not treated as
                                  delimiters.
                                items:
                                  type: string
                                type: array
                                x-kubernetes-list-type: set
                              queryStringWhitelist:
                                description: |-
                                  Names of query string parameters to include in cache keys.
                                  All other parameters will be excluded. Either specify
                                  query_string_whitelist or query_string_blacklist, not both.
                                  '&' and '=' will be percent encoded and not treated as
                                  delimiters.
                                items:
                                  type: string
                                type: array
                                x-kubernetes-list-type: set
                            type: object
                          type: array
                        cacheMode:
                          description: |-
                            Specifies the cache setting for all responses from this backend.
                            The possible values are: USE_ORIGIN_HEADERS, FORCE_CACHE_ALL and CACHE_ALL_STATIC
                            Possible values are: USE_ORIGIN_HEADERS, FORCE_CACHE_ALL, CACHE_ALL_STATIC.
                          type: string
                        clientTtl:
                          description: Specifies the maximum allowed TTL for cached
                            content served by this origin.
                          type: number
                        defaultTtl:
                          description: |-
                            Specifies the default TTL for cached content served by this origin for responses
                            that do not have an existing valid TTL (max-age or s-max-age).
                          type: number
                        maxTtl:
                          description: Specifies the maximum allowed TTL for cached
                            content served by this origin.
                          type: number
                        negativeCaching:
                          description: Negative caching allows per-status code TTLs
                            to be set, in order to apply fine-grained caching for
                            common errors or redirects.
                          type: boolean
                        negativeCachingPolicy:
                          description: |-
                            Sets a cache TTL for the specified HTTP status code. negativeCaching must be enabled to configure negativeCachingPolicy.
                            Omitting the policy and leaving negativeCaching enabled will use Cloud CDN's default cache TTLs.
                            Structure is documented below.
                          items:
                            properties:
                              code:
                                description: |-
                                  The HTTP status code to define a TTL against. Only HTTP status codes 300, 301, 308, 404, 405, 410, 421, 451 and 501
                                  can be specified as values, and you cannot specify a status code more than once.
                                type: number
                              ttl:
                                description: |-
                                  The TTL (in seconds) for which to cache responses with the corresponding status code. The maximum allowed value is 1800s
                                  (30 minutes), noting that infrequently accessed objects may be evicted from the cache before the defined TTL.
                                type: number
                            type: object
                          type: array
                        serveWhileStale:
                          description: Serve existing content from the cache (if available)
                            when revalidating content with the origin, or when an
                            error is encountered when refreshing the cache.
                          type: number
                        signedUrlCacheMaxAgeSec:
                          description: |-
                            Maximum number of seconds the response to a signed URL request
                            will be considered fresh, defaults to 1hr (3600s). After this
                            time period, the response will be revalidated before
                            being served.
                            When serving responses to signed URL requests, Cloud CDN will
                            internally behave as though all responses from this backend had a
                            "Cache-Control: public, max-age=[TTL]" header, regardless of any
                            existing Cache-Control header. The actual headers served in
                            responses will not be altered.
                          type: number
                      type: object
                    type: array
                  circuitBreakers:
                    description: |-
                      Settings controlling the volume of connections to a backend service. This field
                      is applicable only when the load_balancing_scheme is set to INTERNAL_SELF_MANAGED.
                      Structure is documented below.
                    items:
                      properties:
                        maxConnections:
                          description: |-
                            The maximum number of connections to the backend cluster.
                            Defaults to 1024.
                          type: number
                        maxPendingRequests:
                          description: |-
                            The maximum number of pending requests to the backend cluster.
                            Defaults to 1024.
                          type: number
                        maxRequests:
                          description: |-
                            The maximum number of parallel requests to the backend cluster.
                            Defaults to 1024.
                          type: number
                        maxRequestsPerConnection:
                          description: |-
                            Maximum requests for a single backend connection. This parameter
                            is respected by both the HTTP/1.1 and HTTP/2 implementations. If
                            not specified, there is no limit. Setting this parameter to 1
                            will effectively disable keep alive.
                          type: number
                        maxRetries:
                          description: |-
                            The maximum number of parallel retries to the backend cluster.
                            Defaults to 3.
                          type: number
                      type: object
                    type: array
                  compressionMode:
                    description: |-
                      Compress text responses using Brotli or gzip compression, based on the client's Accept-Encoding header.
                      Possible values are: AUTOMATIC, DISABLED.
                    type: string
                  connectionDrainingTimeoutSec:
                    description: |-
                      Time for which instance will be drained (not accept new
                      connections, but still work to finish started).
                    type: number
                  consistentHash:
                    description: |-
                      Consistent Hash-based load balancing can be used to provide soft session
                      affinity based on HTTP headers, cookies or other properties. This load balancing
                      policy is applicable only for HTTP connections. The affinity to a particular
                      destination host will be lost when one or more hosts are added/removed from the
                      destination service. This field specifies parameters that control consistent
                      hashing. This field only applies if the load_balancing_scheme is set to
                      INTERNAL_SELF_MANAGED. This field is only applicable when locality_lb_policy is
                      set to MAGLEV or RING_HASH.
                      Structure is documented below.
                    items:
                      properties:
                        httpCookie:
                          description: |-
                            Hash is based on HTTP Cookie. This field describes a HTTP cookie
                            that will be used as the hash key for the consistent hash load
                            balancer. If the cookie is not present, it will be generated.
                            This field is applicable if the sessionAffinity is set to HTTP_COOKIE.
                            Structure is documented below.
                          items:
                            properties:
                              name:
                                description: |-
                                  The name of a locality load balancer policy to be used. The value
                                  should be one of the predefined ones as supported by localityLbPolicy,
                                  although at the moment only ROUND_ROBIN is supported.
                                  This field should only be populated when the customPolicy field is not
                                  used.
                                  Note that specifying the same policy more than once for a backend is
                                  not a valid configuration and will be rejected.
                                  The possible values are:
                                type: string
                              path:
                                description: Path to set for the cookie.
                                type: string
                              ttl:
                                description: |-
                                  The TTL (in seconds) for which to cache responses with the corresponding status code. The maximum allowed value is 1800s
                                  (30 minutes), noting that infrequently accessed objects may be evicted from the cache before the defined TTL.
                                items:
                                  properties:
                                    nanos:
                                      description: |-
                                        Span of time that's a fraction of a second at nanosecond
                                        resolution. Durations less than one second are represented
                                        with a 0 seconds field and a positive nanos field. Must
                                        be from 0 to 999,999,999 inclusive.
                                      type: number
                                    seconds:
                                      description: |-
                                        Span of time at a resolution of a second.
                                        Must be from 0 to 315,576,000,000 inclusive.
                                      type: number
                                  type: object
                                type: array
                            type: object
                          type: array
                        httpHeaderName:
                          description: |-
                            The hash based on the value of the specified header field.
                            This field is applicable if the sessionAffinity is set to HEADER_FIELD.
                          type: string
                        minimumRingSize:
                          description: |-
                            The minimum number of virtual nodes to use for the hash ring.
                            Larger ring sizes result in more granular load
                            distributions. If the number of hosts in the load balancing pool
                            is larger than the ring size, each host will be assigned a single
                            virtual node.
                            Defaults to 1024.
                          type: number
                      type: object
                    type: array
                  customRequestHeaders:
                    description: |-
                      Headers that the HTTP/S load balancer should add to proxied
                      requests.
                    items:
                      type: string
                    type: array
                    x-kubernetes-list-type: set
                  customResponseHeaders:
                    description: |-
                      Headers that the HTTP/S load balancer should add to proxied
                      responses.
                    items:
                      type: string
                    type: array
                    x-kubernetes-list-type: set
                  description:
                    description: An optional description of this resource.
                    type: string
                  edgeSecurityPolicy:
                    description: The resource URL for the edge security policy associated
                      with this backend service.
                    type: string
                  enableCdn:
                    description: If true, enable Cloud CDN for this BackendService.
                    type: boolean
                  healthChecks:
                    description: |-
                      The set of URLs to the HttpHealthCheck or HttpsHealthCheck resource
                      for health checking this BackendService. Currently at most one health
                      check can be specified.
                      A health check must be specified unless the backend service uses an internet
                      or serverless NEG as a backend.
                      For internal load balancing, a URL to a HealthCheck resource must be specified instead.
                    items:
                      type: string
                    type: array
                    x-kubernetes-list-type: set
                  healthChecksRefs:
                    description: References to HealthCheck to populate healthChecks.
                    items:
                      description: A Reference to a named object.
                      properties:
                        name:
                          description: Name of the referenced object.
                          type: string
                        policy:
                          description: Policies for referencing.
                          properties:
                            resolution:
                              default: Required
                              description: |-
                                Resolution specifies whether resolution of this reference is required.
                                The default is 'Required', which means the reconcile will fail if the
                                reference cannot be resolved. 'Optional' means this reference will be
                                a no-op if it cannot be resolved.
                              enum:
                              - Required
                              - Optional
                              type: string
                            resolve:
                              description: |-
                                Resolve specifies when this reference should be resolved. The default
                                is 'IfNotPresent', which will attempt to resolve the reference only when
                                the corresponding field is not present. Use 'Always' to resolve the
                                reference on every reconcile.
                              enum:
                              - Always
                              - IfNotPresent
                              type: string
                          type: object
                      required:
                      - name
                      type: object
                    type: array
                  healthChecksSelector:
                    description: Selector for a list of HealthCheck to populate healthChecks.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  iap:
                    description: |-
                      Settings for enabling Cloud Identity Aware Proxy
                      Structure is documented below.
                    items:
                      properties:
                        oauth2ClientId:
                          description: OAuth2 Client ID for IAP
                          type: string
                      type: object
                    type: array
                  loadBalancingScheme:
                    description: |-
                      Indicates whether the backend service will be used with internal or
                      external load balancing. A backend service created for one type of
                      load balancing cannot be used with the other. For more information, refer to
                      Choosing a load balancer.
                      Default value is EXTERNAL.
                      Possible values are: EXTERNAL, INTERNAL_SELF_MANAGED, EXTERNAL_MANAGED.
                    type: string
                  localityLbPolicies:
                    description: |-
                      A list of locality load balancing policies to be used in order of
                      preference. Either the policy or the customPolicy field should be set.
                      Overrides any value set in the localityLbPolicy field.
                      localityLbPolicies is only supported when the BackendService is referenced
                      by a URL Map that is referenced by a target gRPC proxy that has the
                      validateForProxyless field set to true.
                      Structure is documented below.
                    items:
                      properties:
                        customPolicy:
                          description: |-
                            The configuration for a custom policy implemented by the user and
                            deployed with the client.
                            Structure is documented below.
                          items:
                            properties:
                              data:
                                description: |-
                                  An optional, arbitrary JSON object with configuration data, understood
                                  by a locally installed custom policy implementation.
                                type: string
                              name:
                                description: |-
                                  The name of a locality load balancer policy to be used. The value
                                  should be one of the predefined ones as supported by localityLbPolicy,
                                  although at the moment only ROUND_ROBIN is supported.
                                  This field should only be populated when the customPolicy field is not
                                  used.
                                  Note that specifying the same policy more than once for a backend is
                                  not a valid configuration and will be rejected.
                                  The possible values are:
                                type: string
                            type: object
                          type: array
                        policy:
                          description: |-
                            The configuration for a built-in load balancing policy.
                            Structure is documented below.
                          items:
                            properties:
                              name:
                                description: |-
                                  The name of a locality load balancer policy to be used. The value
                                  should be one of the predefined ones as supported by localityLbPolicy,
                                  although at the moment only ROUND_ROBIN is supported.
                                  This field should only be populated when the customPolicy field is not
                                  used.
                                  Note that specifying the same policy more than once for a backend is
                                  not a valid configuration and will be rejected.
                                  The possible values are:
                                type: string
                            type: object
                          type: array
                      type: object
                    type: array
                  localityLbPolicy:
                    description: |-
                      The load balancing algorithm used within the scope of the locality.
                      The possible values are:
                    type: string
                  logConfig:
                    description: |-
                      This field denotes the logging options for the load balancer traffic served by this backend service.
                      If logging is enabled, logs will be exported to Stackdriver.
                      Structure is documented below.
                    items:
                      properties:
                        enable:
                          description: Whether to enable logging for the load balancer
                            traffic served by this backend service.
                          type: boolean
                        sampleRate:
                          description: |-
                            This field can only be specified if logging is enabled for this backend service. The value of
                            the field must be in [0, 1]. This configures the sampling rate of requests to the load balancer
                            where 1.0 means all logged requests are reported and 0.0 means no logged requests are reported.
                            The default value is 1.0.
                          type: number
                      type: object
                    type: array
                  outlierDetection:
                    description: |-
                      Settings controlling eviction of unhealthy hosts from the load balancing pool.
                      This field is applicable only when the load_balancing_scheme is set
                      to INTERNAL_SELF_MANAGED.
                      Structure is documented below.
                    items:
                      properties:
                        baseEjectionTime:
                          description: |-
                            The base time that a host is ejected for. The real time is equal to the base
                            time multiplied by the number of times the host has been ejected. Defaults to
                            30000ms or 30s.
                            Structure is documented below.
                          items:
                            properties:
                              nanos:
                                description: |-
                                  Span of time that's a fraction of a second at nanosecond
                                  resolution. Durations less than one second are represented
                                  with a 0 seconds field and a positive nanos field. Must
                                  be from 0 to 999,999,999 inclusive.
                                type: number
                              seconds:
                                description: |-
                                  Span of time at a resolution of a second.
                                  Must be from 0 to 315,576,000,000 inclusive.
                                type: number
                            type: object
                          type: array
                        consecutiveErrors:
                          description: |-
                            Number of errors before a host is ejected from the connection pool. When the
                            backend host is accessed over HTTP, a 5xx return code qualifies as an error.
                            Defaults to 5.
                          type: number
                        consecutiveGatewayFailure:
                          description: |-
                            The number of consecutive gateway failures (502, 503, 504 status or connection
                            errors that are mapped to one of those status codes) before a consecutive
                            gateway failure ejection occurs. Defaults to 5.
                          type: number
                        enforcingConsecutiveErrors:
                          description: |-
                            The percentage chance that a host will be actually ejected when an outlier
                            status is detected through consecutive 5xx. This setting can be used to disable
                            ejection or to ramp it up slowly. Defaults to 100.
                          type: number
                        enforcingConsecutiveGatewayFailure:
                          description: |-
                            The percentage chance that a host will be actually ejected when an outlier
                            status is detected through consecutive gateway failures. This setting can be
                            used to disable ejection or to ramp it up slowly. Defaults to 0.
                          type: number
                        enforcingSuccessRate:
                          description: |-
                            The percentage chance that a host will be actually ejected when an outlier
                            status is detected through success rate statistics. This setting can be used to
                            disable ejection or to ramp it up slowly. Defaults to 100.
                          type: number
                        interval:
                          description: |-
                            Time interval between ejection sweep analysis. This can result in both new
                            ejections as well as hosts being returned to service. Defaults to 10 seconds.
                            Structure is documented below.
                          items:
                            properties:
                              nanos:
                                description: |-
                                  Span of time that's a fraction of a second at nanosecond
                                  resolution. Durations less than one second are represented
                                  with a 0 seconds field and a positive nanos field. Must
                                  be from 0 to 999,999,999 inclusive.
                                type: number
                              seconds:
                                description: |-
                                  Span of time at a resolution of a second.
                                  Must be from 0 to 315,576,000,000 inclusive.
                                type: number
                            type: object
                          type: array
                        maxEjectionPercent:
                          description: |-
                            Maximum percentage of hosts in the load balancing pool for the backend service
                            that can be ejected. Defaults to 10%.
                          type: number
                        successRateMinimumHosts:
                          description: |-
                            The number of hosts in a cluster that must have enough request volume to detect
                            success rate outliers. If the number of hosts is less than this setting, outlier
                            detection via success rate statistics is not performed for any host in the
                            cluster. Defaults to 5.
                          type: number
                        successRateRequestVolume:
                          description: |-
                            The minimum number of total requests that must be collected in one interval (as
                            defined by the interval duration above) to include this host in success rate
                            based outlier detection. If the volume is lower than this setting, outlier
                            detection via success rate statistics is not performed for that host. Defaults
                            to 100.
                          type: number
                        successRateStdevFactor:
                          description: |-
                            This factor is used to determine the ejection threshold for success rate outlier
                            ejection. The ejection threshold is the difference between the mean success
                            rate, and the product of this factor and the standard deviation of the mean
                            success rate: mean - (stdev * success_rate_stdev_factor). This factor is divided
                            by a thousand to get a double. That is, if the desired factor is 1.9, the
                            runtime value should be 1900. Defaults to 1900.
                          type: number
                      type: object
                    type: array
                  portName:
                    description: |-
                      Name of backend port. The same name should appear in the instance
                      groups referenced by this service. Required when the load balancing
                      scheme is EXTERNAL.
                    type: string
                  project:
                    description: |-
                      The ID of the project in which the resource belongs.
                      If it is not provided, the provider project is used.
                    type: string
                  protocol:
                    description: |-
                      The protocol this BackendService uses to communicate with backends.
                      The default is HTTP. NOTE: HTTP2 is only valid for beta HTTP/2 load balancer
                      types and may result in errors if used with the GA API.
                      Possible values are: HTTP, HTTPS, HTTP2, TCP, SSL, GRPC.
                    type: string
                  securityPolicy:
                    description: The security policy associated with this backend
                      service.
                    type: string
                  securitySettings:
                    description: |-
                      The security settings that apply to this backend service. This field is applicable to either
                      a regional backend service with the service_protocol set to HTTP, HTTPS, or HTTP2, and
                      load_balancing_scheme set to INTERNAL_MANAGED; or a global backend service with the
                      load_balancing_scheme set to INTERNAL_SELF_MANAGED.
                      Structure is documented below.
                    items:
                      properties:
                        clientTlsPolicy:
                          description: |-
                            ClientTlsPolicy is a resource that specifies how a client should authenticate
                            connections to backends of a service. This resource itself does not affect
                            configuration unless it is attached to a backend service resource.
                          type: string
                        subjectAltNames:
                          description: |-
                            A list of alternate names to verify the subject identity in the certificate.
                            If specified, the client will verify that the server certificate's subject
                            alt name matches one of the specified values.
                          items:
                            type: string
                          type: array
                      type: object
                    type: array
                  sessionAffinity:
                    description: |-
                      Type of session affinity to use. The default is NONE. Session affinity is
                      not applicable if the protocol is UDP.
                      Possible values are: NONE, CLIENT_IP, CLIENT_IP_PORT_PROTO, CLIENT_IP_PROTO, GENERATED_COOKIE, HEADER_FIELD, HTTP_COOKIE.
                    type: string
                  timeoutSec:
                    description: |-
                      How many seconds to wait for the backend before considering it a
                      failed request. Default is 30 seconds. Valid range is [1, 86400].
                    type: number
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  This field is planned to replace the DeletionPolicy field in a future
                  release. Currently, both could be set independently and non-default
                  values would be honored if the feature flag is enabled. If both are
                  custom, the DeletionPolicy field will be ignored.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: |-
                  PublishConnectionDetailsTo specifies the connection secret config which
                  contains a name, metadata and a reference to secret store config to
                  which any connection details for this managed resource should be written.
                  Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: |-
                      SecretStoreConfigRef specifies which secret store config should be used
                      for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations are the annotations to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.annotations".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Labels are the labels/tags to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      type:
                        description: |-
                          Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                  This field is planned to be replaced in a future release in favor of
                  PublishConnectionDetailsTo. Currently, both could be set independently
                  and connection details would be published to both without affecting
                  each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: BackendServiceStatus defines the observed state of BackendService.
            properties:
              atProvider:
                properties:
                  affinityCookieTtlSec:
                    description: |-
                      Lifetime of cookies in seconds if session_affinity is
                      GENERATED_COOKIE. If set to 0, the cookie is non-persistent and lasts
                      only until the end of the browser session (or equivalent). The
                      maximum allowed value for TTL is one day.
                      When the load balancing scheme is INTERNAL, this field is not used.
                    type: number
                  backend:
                    description: |-
                      The set of backends that serve this BackendService.
                      Structure is documented below.
                    items:
                      properties:
                        balancingMode:
                          description: |-
                            Specifies the balancing mode for this backend.
                            For global HTTP(S) or TCP/SSL load balancing, the default is
                            UTILIZATION. Valid values are UTILIZATION, RATE (for HTTP(S))
                            and CONNECTION (for TCP/SSL).
                            See the Backend Services Overview
                            for an explanation of load balancing modes.
                            Default value is UTILIZATION.
                            Possible values are: UTILIZATION, RATE, CONNECTION.
                          type: string
                        capacityScaler:
                          description: |-
                            A multiplier applied to the group's maximum servicing capacity
                            (based on UTILIZATION, RATE or CONNECTION).
                            Default value is 1, which means the group will serve up to 100%
                            of its configured capacity (depending on balancingMode). A
                            setting of 0 means the group is completely drained, offering
                            0% of its available Capacity. Valid range is [0.0,1.0].
                          type: number
                        description:
                          description: |-
                            An optional description of this resource.
                            Provide this property when you create the resource.
                          type: string
                        group:
                          description: |-
                            The fully-qualified URL of an Instance Group or Network Endpoint
                            Group resource. In case of instance group this defines the list
                            of instances that serve traffic. Member virtual machine
                            instances from each instance group must live in the same zone as
                            the instance group itself. No two backends in a backend service
                            are allowed to use same Instance Group resource.
                            For Network Endpoint Groups this defines list of endpoints. All
                            endpoints of Network Endpoint Group must be hosted on instances
                            located in the same zone as the Network Endpoint Group.
                            Backend services cannot mix Instance Group and
                            Network Endpoint Group backends.
                            Note that you must specify an Instance Group or Network Endpoint
                            Group resource using the fully-qualified URL, rather than a
                            partial URL.
                          type: string
                        maxConnections:
                          description: |-
                            The max number of simultaneous connections for the group. Can
                            be used with either CONNECTION or UTILIZATION balancing modes.
                            For CONNECTION mode, either maxConnections or one
                            of maxConnectionsPerInstance or maxConnectionsPerEndpoint,
                            as appropriate for group type, must be set.
                          type: number
                        maxConnectionsPerEndpoint:
                          description: |-
                            The max number of simultaneous connections that a single backend
                            network endpoint can handle. This is used to calculate the
                            capacity of the group. Can be used in either CONNECTION or
                            UTILIZATION balancing modes.
                            For CONNECTION mode, either
                            maxConnections or maxConnectionsPerEndpoint must be set.
                          type: number
                        maxConnectionsPerInstance:
                          description: |-
                            The max number of simultaneous connections that a single
                            backend instance can handle. This is used to calculate the
                            capacity of the group. Can be used in either CONNECTION or
                            UTILIZATION balancing modes.
                            For CONNECTION mode, either maxConnections or
                            maxConnectionsPerInstance must be set.
                          type: number
                        maxRate:
                          description: |-
                            The max requests per second (RPS) of the group.
                            Can be used with either RATE or UTILIZATION balancing modes,
                            but required if RATE mode. For RATE mode, either maxRate or one
                            of maxRatePerInstance or maxRatePerEndpoint, as appropriate for
                            group type, must be set.
                          type: number
                        maxRatePerEndpoint:
                          description: |-
                            The max requests per second (RPS) that a single backend network
                            endpoint can handle. This is used to calculate the capacity of
                            the group. Can be used in either balancing mode. For RATE mode,
                            either maxRate or maxRatePerEndpoint must be set.
                          type: number
                        maxRatePerInstance:
                          description: |-
                            The max requests per second (RPS) that a single backend
                            instance can handle. This is used to calculate the capacity of
                            the group. Can be used in either balancing mode. For RATE mode,
                            either maxRate or maxRatePerInstance must be set.
                          type: number
                        maxUtilization:
                          description: |-
                            Used when balancingMode is UTILIZATION. This ratio defines the
                            CPU utilization target for the group. Valid range is [0.0, 1.0].
                          type: number
                      type: object
                    type: array
                  cdnPolicy:
                    description: |-
                      Cloud CDN configuration for this BackendService.
                      Structure is documented below.
                    items:
                      properties:
                        bypassCacheOnRequestHeaders:
                          description: |-
                            Bypass the cache when the specified request headers are matched - e.g. Pragma or Authorization headers. Up to 5 headers can be specified.
                            The cache is bypassed for all cdnPolicy.cacheMode settings.
                            Structure is documented below.
                          items:
                            properties:
                              headerName:
                                description: The header field name to match on when
                                  bypassing cache. Values are case-insensitive.
                                type: string
                            type: object
                          type: array
                        cacheKeyPolicy:
                          description: |-
                            The CacheKeyPolicy for this CdnPolicy.
                            Structure is documented below.
                          items:
                            properties:
                              includeHost:
                                description: If true requests to different hosts will
                                  be cached separately.
                                type: boolean
                              includeHttpHeaders:
                                description: |-
                                  Allows HTTP request headers (by name) to be used in the
                                  cache key.
                                items:
                                  type: string
                                type: array
                              includeNamedCookies:
                                description: Names of cookies to include in cache
                                  keys.
                                items:
                                  type: string
                                type: array
                              includeProtocol:
                                description: If true, http and https requests will
                                  be cached separately.
                                type: boolean
                              includeQueryString:
                                description: |-
                                  If true, include query string parameters in the cache key
                                  according to query_string_whitelist and
                                  query_string_blacklist. If neither is set, the entire query
                                  string will be included.
                                  If false, the query string will be excluded from the cache
                                  key entirely.
                                type: boolean
                              queryStringBlacklist:
                                description: |-
                                  Names of query string parameters to exclude in cache keys.
                                  All other parameters will be included. Either specify
                                  query_string_whitelist or query_string_blacklist, not both.
                                  '&' and '=' will be percent encoded and not treated as
                                  delimiters.
                                items:
                                  type: string
                                type: array
                                x-kubernetes-list-type: set
                              queryStringWhitelist:
                                description: |-
                                  Names of query string parameters to include in cache keys.
                                  All other parameters will be excluded. Either specify
                                  query_string_whitelist or query_string_blacklist, not both.
                                  '&' and '=' will be percent encoded and not treated as
                                  delimiters.
                                items:
                                  type: string
                                type: array
                                x-kubernetes-list-type: set
                            type: object
                          type: array
                        cacheMode:
                          description: |-
                            Specifies the cache setting for all responses from this backend.
                            The possible values are: USE_ORIGIN_HEADERS, FORCE_CACHE_ALL and CACHE_ALL_STATIC
                            Possible values are: USE_ORIGIN_HEADERS, FORCE_CACHE_ALL, CACHE_ALL_STATIC.
                          type: string
                        clientTtl:
                          description: Specifies the maximum allowed TTL for cached
                            content served by this origin.
                          type: number
                        defaultTtl:
                          description: |-
                            Specifies the default TTL for cached content served by this origin for responses
                            that do not have an existing valid TTL (max-age or s-max-age).
                          type: number
                        maxTtl:
                          description: Specifies the maximum allowed TTL for cached
                            content served by this origin.
                          type: number
                        negativeCaching:
                          description: Negative caching allows per-status code TTLs
                            to be set, in order to apply fine-grained caching for
                            common errors or redirects.
                          type: boolean
                        negativeCachingPolicy:
                          description: |-
                            Sets a cache TTL for the specified HTTP status code. negativeCaching must be enabled to configure negativeCachingPolicy.
                            Omitting the policy and leaving negativeCaching enabled will use Cloud CDN's default cache TTLs.
                            Structure is documented below.
                          items:
                            properties:
                              code:
                                description: |-
                                  The HTTP status code to define a TTL against. Only HTTP status codes 300, 301, 308, 404, 405, 410, 421, 451 and 501
                                  can be specified as values, and you cannot specify a status code more than once.
                                type: number
                              ttl:
                                description: |-
                                  The TTL (in seconds) for which to cache responses with the corresponding status code. The maximum allowed value is 1800s
                                  (30 minutes), noting that infrequently accessed objects may be evicted from the cache before the defined TTL.
                                type: number
                            type: object
                          type: array
                        serveWhileStale:
                          description: Serve existing content from the cache (if available)
                            when revalidating content with the origin, or when an
                            error is encountered when refreshing the cache.
                          type: number
                        signedUrlCacheMaxAgeSec:
                          description: |-
                            Maximum number of seconds the response to a signed URL request
                            will be considered fresh, defaults to 1hr (3600s). After this
                            time period, the response will be revalidated before
                            being served.
                            When serving responses to signed URL requests, Cloud CDN will
                            internally behave as though all responses from this backend had a
                            "Cache-Control: public, max-age=[TTL]" header, regardless of any
                            existing Cache-Control header. The actual headers served in
                            responses will not be altered.
                          type: number
                      type: object
                    type: array
                  circuitBreakers:
                    description: |-
                      Settings controlling the volume of connections to a backend service. This field
                      is applicable only when the load_balancing_scheme is set to INTERNAL_SELF_MANAGED.
                      Structure is documented below.
                    items:
                      properties:
                        maxConnections:
                          description: |-
                            The maximum number of connections to the backend cluster.
                            Defaults to 1024.
                          type: number
                        maxPendingRequests:
                          description: |-
                            The maximum number of pending requests to the backend cluster.
                            Defaults to 1024.
                          type: number
                        maxRequests:
                          description: |-
                            The maximum number of parallel requests to the backend cluster.
                            Defaults to 1024.
                          type: number
                        maxRequestsPerConnection:
                          description: |-
                            Maximum requests for a single backend connection. This parameter
                            is respected by both the HTTP/1.1 and HTTP/2 implementations. If
                            not specified, there is no limit. Setting this parameter to 1
                            will effectively disable keep alive.
                          type: number
                        maxRetries:
                          description: |-
                            The maximum number of parallel retries to the backend cluster.
                            Defaults to 3.
                          type: number
                      type: object
                    type: array
                  compressionMode:
                    description: |-
                      Compress text responses using Brotli or gzip compression, based on the client's Accept-Encoding header.
                      Possible values are: AUTOMATIC, DISABLED.
                    type: string
                  connectionDrainingTimeoutSec:
                    description: |-
                      Time for which instance will be drained (not accept new
                      connections, but still work to finish started).
                    type: number
                  consistentHash:
                    description: |-
                      Consistent Hash-based load balancing can be used to provide soft session
                      affinity based on HTTP headers, cookies or other properties. This load balancing
                      policy is applicable only for HTTP connections. The affinity to a particular
                      destination host will be lost when one or more hosts are added/removed from the
                      destination service. This field specifies parameters that control consistent
                      hashing. This field only applies if the load_balancing_scheme is set to
                      INTERNAL_SELF_MANAGED. This field is only applicable when locality_lb_policy is
                      set to MAGLEV or RING_HASH.
                      Structure is documented below.
                    items:
                      properties:
                        httpCookie:
                          description: |-
                            Hash is based on HTTP Cookie. This field describes a HTTP cookie
                            that will be used as the hash key for the consistent hash load
                            balancer. If the cookie is not present, it will be generated.
                            This field is applicable if the sessionAffinity is set to HTTP_COOKIE.
                            Structure is documented below.
                          items:
                            properties:
                              name:
                                description: |-
                                  The name of a locality load balancer policy to be used. The value
                                  should be one of the predefined ones as supported by localityLbPolicy,
                                  although at the moment only ROUND_ROBIN is supported.
                                  This field should only be populated when the customPolicy field is not
                                  used.
                                  Note that specifying the same policy more than once for a backend is
                                  not a valid configuration and will be rejected.
                                  The possible values are:
                                type: string
                              path:
                                description: Path to set for the cookie.
                                type: string
                              ttl:
                                description: |-
                                  The TTL (in seconds) for which to cache responses with the corresponding status code. The maximum allowed value is 1800s
                                  (30 minutes), noting that infrequently accessed objects may be evicted from the cache before the defined TTL.
                                items:
                                  properties:
                                    nanos:
                                      description: |-
                                        Span of time that's a fraction of a second at nanosecond
                                        resolution. Durations less than one second are represented
                                        with a 0 seconds field and a positive nanos field. Must
                                        be from 0 to 999,999,999 inclusive.
                                      type: number
                                    seconds:
                                      description: |-
                                        Span of time at a resolution of a second.
                                        Must be from 0 to 315,576,000,000 inclusive.
                                      type: number
                                  type: object
                                type: array
                            type: object
                          type: array
                        httpHeaderName:
                          description: |-
                            The hash based on the value of the specified header field.
                            This field is applicable if the sessionAffinity is set to HEADER_FIELD.
                          type: string
                        minimumRingSize:
                          description: |-
                            The minimum number of virtual nodes to use for the hash ring.
                            Larger ring sizes result in more granular load
                            distributions. If the number of hosts in the load balancing pool
                            is larger than the ring size, each host will be assigned a single
                            virtual node.
                            Defaults to 1024.
                          type: number
                      type: object
                    type: array
                  creationTimestamp:
                    description: Creation timestamp in RFC3339 text format.
                    type: string
                  customRequestHeaders:
                    description: |-
                      Headers that the HTTP/S load balancer should add to proxied
                      requests.
                    items:
                      type: string
                    type: array
                    x-kubernetes-list-type: set
                  customResponseHeaders:
                    description: |-
                      Headers that the HTTP/S load balancer should add to proxied
                      responses.
                    items:
                      type: string
                    type: array
                    x-kubernetes-list-type: set
                  description:
                    description: An optional description of this resource.
                    type: string
                  edgeSecurityPolicy:
                    description: The resource URL for the edge security policy associated
                      with this backend service.
                    type: string
                  enableCdn:
                    description: If true, enable Cloud CDN for this BackendService.
                    type: boolean
                  fingerprint:
                    description: |-
                      Fingerprint of this resource. A hash of the contents stored in this
                      object. This field is used in optimistic locking.
                    type: string
                  generatedId:
                    description: The unique identifier for the resource. This identifier
                      is defined by the server.
                    type: number
                  healthChecks:
                    description: |-
                      The set of URLs to the HttpHealthCheck or HttpsHealthCheck resource
                      for health checking this BackendService. Currently at most one health
                      check can be specified.
                      A health check must be specified unless the backend service uses an internet
                      or serverless NEG as a backend.
                      For internal load balancing, a URL to a HealthCheck resource must be specified instead.
                    items:
                      type: string
                    type: array
                    x-kubernetes-list-type: set
                  iap:
                    description: |-
                      Settings for enabling Cloud Identity Aware Proxy
                      Structure is documented below.
                    items:
                      properties:
                        oauth2ClientId:
                          description: OAuth2 Client ID for IAP
                          type: string
                      type: object
                    type: array
                  id:
                    description: an identifier for the resource with format projects/{{project}}/global/backendServices/{{name}}
                    type: string
                  loadBalancingScheme:
                    description: |-
                      Indicates whether the backend service will be used with internal or
                      external load balancing. A backend service created for one type of
                      load balancing cannot be used with the other. For more information, refer to
                      Choosing a load balancer.
                      Default value is EXTERNAL.
                      Possible values are: EXTERNAL, INTERNAL_SELF_MANAGED, EXTERNAL_MANAGED.
                    type: string
                  localityLbPolicies:
                    description: |-
                      A list of locality load balancing policies to be used in order of
                      preference. Either the policy or the customPolicy field should be set.
                      Overrides any value set in the localityLbPolicy field.
                      localityLbPolicies is only supported when the BackendService is referenced
                      by a URL Map that is referenced by a target gRPC proxy that has the
                      validateForProxyless field set to true.
                      Structure is documented below.
                    items:
                      properties:
                        customPolicy:
                          description: |-
                            The configuration for a custom policy implemented by the user and
                            deployed with the client.
                            Structure is documented below.
                          items:
                            properties:
                              data:
                                description: |-
                                  An optional, arbitrary JSON object with configuration data, understood
                                  by a locally installed custom policy implementation.
                                type: string
                              name:
                                description: |-
                                  The name of a locality load balancer policy to be used. The value
                                  should be one of the predefined ones as supported by localityLbPolicy,
                                  although at the moment only ROUND_ROBIN is supported.
                                  This field should only be populated when the customPolicy field is not
                                  used.
                                  Note that specifying the same policy more than once for a backend is
                                  not a valid configuration and will be rejected.
                                  The possible values are:
                                type: string
                            type: object
                          type: array
                        policy:
                          description: |-
                            The configuration for a built-in load balancing policy.
                            Structure is documented below.
                          items:
                            properties:
                              name:
                                description: |-
                                  The name of a locality load balancer policy to be used. The value
                                  should be one of the predefined ones as supported by localityLbPolicy,
                                  although at the moment only ROUND_ROBIN is supported.
                                  This field should only be populated when the customPolicy field is not
                                  used.
                                  Note that specifying the same policy more than once for a backend is
                                  not a valid configuration and will be rejected.
                                  The possible values are:
                                type: string
                            type: object
                          type: array
                      type: object
                    type: array
                  localityLbPolicy:
                    description: |-
                      The load balancing algorithm used within the scope of the locality.
                      The possible values are:
                    type: string
                  logConfig:
                    description: |-
                      This field denotes the logging options for the load balancer traffic served by this backend service.
                      If logging is enabled, logs will be exported to Stackdriver.
                      Structure is documented below.
                    items:
                      properties:
                        enable:
                          description: Whether to enable logging for the load balancer
                            traffic served by this backend service.
                          type: boolean
                        sampleRate:
                          description: |-
                            This field can only be specified if logging is enabled for this backend service. The value of
                            the field must be in [0, 1]. This configures the sampling rate of requests to the load balancer
                            where 1.0 means all logged requests are reported and 0.0 means no logged requests are reported.
                            The default value is 1.0.
                          type: number
                      type: object
                    type: array
                  outlierDetection:
                    description: |-
                      Settings controlling eviction of unhealthy hosts from the load balancing pool.
                      This field is applicable only when the load_balancing_scheme is set
                      to INTERNAL_SELF_MANAGED.
                      Structure is documented below.
                    items:
                      properties:
                        baseEjectionTime:
                          description: |-
                            The base time that a host is ejected for. The real time is equal to the base
                            time multiplied by the number of times the host has been ejected. Defaults to
                            30000ms or 30s.
                            Structure is documented below.
                          items:
                            properties:
                              nanos:
                                description: |-
                                  Span of time that's a fraction of a second at nanosecond
                                  resolution. Durations less than one second are represented
                                  with a 0 seconds field and a positive nanos field. Must
                                  be from 0 to 999,999,999 inclusive.
                                type: number
                              seconds:
                                description: |-
                                  Span of time at a resolution of a second.
                                  Must be from 0 to 315,576,000,000 inclusive.
                                type: number
                            type: object
                          type: array
                        consecutiveErrors:
                          description: |-
                            Number of errors before a host is ejected from the connection pool. When the
                            backend host is accessed over HTTP, a 5xx return code qualifies as an error.
                            Defaults to 5.
                          type: number
                        consecutiveGatewayFailure:
                          description: |-
                            The number of consecutive gateway failures (502, 503, 504 status or connection
                            errors that are mapped to one of those status codes) before a consecutive
                            gateway failure ejection occurs. Defaults to 5.
                          type: number
                        enforcingConsecutiveErrors:
                          description: |-
                            The percentage chance that a host will be actually ejected when an outlier
                            status is detected through consecutive 5xx. This setting can be used to disable
                            ejection or to ramp it up slowly. Defaults to 100.
                          type: number
                        enforcingConsecutiveGatewayFailure:
                          description: |-
                            The percentage chance that a host will be actually ejected when an outlier
                            status is detected through consecutive gateway failures. This setting can be
                            used to disable ejection or to ramp it up slowly. Defaults to 0.
                          type: number
                        enforcingSuccessRate:
                          description: |-
                            The percentage chance that a host will be actually ejected when an outlier
                            status is detected through success rate statistics. This setting can be used to
                            disable ejection or to ramp it up slowly. Defaults to 100.
                          type: number
                        interval:
                          description: |-
                            Time interval between ejection sweep analysis. This can result in both new
                            ejections as well as hosts being returned to service. Defaults to 10 seconds.
                            Structure is documented below.
                          items:
                            properties:
                              nanos:
                                description: |-
                                  Span of time that's a fraction of a second at nanosecond
                                  resolution. Durations less than one second are represented
                                  with a 0 seconds field and a positive nanos field. Must
                                  be from 0 to 999,999,999 inclusive.
                                type: number
                              seconds:
                                description: |-
                                  Span of time at a resolution of a second.
                                  Must be from 0 to 315,576,000,000 inclusive.
                                type: number
                            type: object
                          type: array
                        maxEjectionPercent:
                          description: |-
                            Maximum percentage of hosts in the load balancing pool for the backend service
                            that can be ejected. Defaults to 10%.
                          type: number
                        successRateMinimumHosts:
                          description: |-
                            The number of hosts in a cluster that must have enough request volume to detect
                            success rate outliers. If the number of hosts is less than this setting, outlier
                            detection via success rate statistics is not performed for any host in the
                            cluster. Defaults to 5.
                          type: number
                        successRateRequestVolume:
                          description: |-
                            The minimum number of total requests that must be collected in one interval (as
                            defined by the interval duration above) to include this host in success rate
                            based outlier detection. If the volume is lower than this setting, outlier
                            detection via success rate statistics is not performed for that host. Defaults
                            to 100.
                          type: number
                        successRateStdevFactor:
                          description: |-
                            This factor is used to determine the ejection threshold for success rate outlier
                            ejection. The ejection threshold is the difference between the mean success
                            rate, and the product of this factor and the standard deviation of the mean
                            success rate: mean - (stdev * success_rate_stdev_factor). This factor is divided
                            by a thousand to get a double. That is, if the desired factor is 1.9, the
                            runtime value should be 1900. Defaults to 1900.
                          type: number
                      type: object
                    type: array
                  portName:
                    description: |-
                      Name of backend port. The same name should appear in the instance
                      groups referenced by this service. Required when the load balancing
                      scheme is EXTERNAL.
                    type: string
                  project:
                    description: |-
                      The ID of the project in which the resource belongs.
                      If it is not provided, the provider project is used.
                    type: string
                  protocol:
                    description: |-
                      The protocol this BackendService uses to communicate with backends.
                      The default is HTTP. NOTE: HTTP2 is only valid for beta HTTP/2 load balancer
                      types and may result in errors if used with the GA API.
                      Possible values are: HTTP, HTTPS, HTTP2, TCP, SSL, GRPC.
                    type: string
                  securityPolicy:
                    description: The security policy associated with this backend
                      service.
                    type: string
                  securitySettings:
                    description: |-
                      The security settings that apply to this backend service. This field is applicable to either
                      a regional backend service with the service_protocol set to HTTP, HTTPS, or HTTP2, and
                      load_balancing_scheme set to INTERNAL_MANAGED; or a global backend service with the
                      load_balancing_scheme set to INTERNAL_SELF_MANAGED.
                      Structure is documented below.
                    items:
                      properties:
                        clientTlsPolicy:
                          description: |-
                            ClientTlsPolicy is a resource that specifies how a client should authenticate
                            connections to backends of a service. This resource itself does not affect
                            configuration unless it is attached to a backend service resource.
                          type: string
                        subjectAltNames:
                          description: |-
                            A list of alternate names to verify the subject identity in the certificate.
                            If specified, the client will verify that the server certificate's subject
                            alt name matches one of the specified values.
                          items:
                            type: string
                          type: array
                      type: object
                    type: array
                  selfLink:
                    description: The URI of the created resource.
                    type: string
                  sessionAffinity:
                    description: |-
                      Type of session affinity to use. The default is NONE. Session affinity is
                      not applicable if the protocol is UDP.
                      Possible values are: NONE, CLIENT_IP, CLIENT_IP_PORT_PROTO, CLIENT_IP_PROTO, GENERATED_COOKIE, HEADER_FIELD, HTTP_COOKIE.
                    type: string
                  timeoutSec:
                    description: |-
                      How many seconds to wait for the backend before considering it a
                      failed request. Default is 30 seconds. Valid range is [1, 86400].
                    type: number
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
