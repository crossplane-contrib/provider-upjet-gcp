---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: queues.cloudtasks.gcp.upbound.io
spec:
  group: cloudtasks.gcp.upbound.io
  names:
    categories:
    - crossplane
    - managed
    - gcp
    kind: Queue
    listKind: QueueList
    plural: queues
    singular: queue
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: Queue is the Schema for the Queues API. A named resource to which
          messages are sent by publishers.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: QueueSpec defines the desired state of Queue
            properties:
              deletionPolicy:
                default: Delete
                description: |-
                  DeletionPolicy specifies what will happen to the underlying external
                  when this managed resource is deleted - either "Delete" or "Orphan" the
                  external resource.
                  This field is planned to be deprecated in favor of the ManagementPolicies
                  field in a future release. Currently, both could be set independently and
                  non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  appEngineRoutingOverride:
                    description: |-
                      Overrides for task-level appEngineRouting. These settings apply only
                      to App Engine tasks in this queue
                      Structure is documented below.
                    items:
                      properties:
                        instance:
                          description: |-
                            App instance.
                            By default, the task is sent to an instance which is available when the task is attempted.
                          type: string
                        service:
                          description: |-
                            App service.
                            By default, the task is sent to the service which is the default service when the task is attempted.
                          type: string
                        version:
                          description: |-
                            App version.
                            By default, the task is sent to the version which is the default version when the task is attempted.
                          type: string
                      type: object
                    type: array
                  location:
                    description: The location of the queue
                    type: string
                  project:
                    description: |-
                      The ID of the project in which the resource belongs.
                      If it is not provided, the provider project is used.
                    type: string
                  projectRef:
                    description: Reference to a Project in cloudplatform to populate
                      project.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  projectSelector:
                    description: Selector for a Project in cloudplatform to populate
                      project.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  rateLimits:
                    description: |-
                      Rate limits for task dispatches.
                      The queue's actual dispatch rate is the result of:
                    items:
                      properties:
                        maxConcurrentDispatches:
                          description: |-
                            The maximum number of concurrent tasks that Cloud Tasks allows to
                            be dispatched for this queue. After this threshold has been
                            reached, Cloud Tasks stops dispatching tasks until the number of
                            concurrent requests decreases.
                          type: number
                        maxDispatchesPerSecond:
                          description: |-
                            The maximum rate at which tasks are dispatched from this queue.
                            If unspecified when the queue is created, Cloud Tasks will pick the default.
                          type: number
                      type: object
                    type: array
                  retryConfig:
                    description: |-
                      Settings that determine the retry behavior.
                      Structure is documented below.
                    items:
                      properties:
                        maxAttempts:
                          description: |-
                            Number of attempts per task.
                            Cloud Tasks will attempt the task maxAttempts times (that is, if
                            the first attempt fails, then there will be maxAttempts - 1
                            retries). Must be >= -1.
                            If unspecified when the queue is created, Cloud Tasks will pick
                            the default.
                            -1 indicates unlimited attempts.
                          type: number
                        maxBackoff:
                          description: |-
                            A task will be scheduled for retry between minBackoff and
                            maxBackoff duration after it fails, if the queue's RetryConfig
                            specifies that the task should be retried.
                          type: string
                        maxDoublings:
                          description: |-
                            The time between retries will double maxDoublings times.
                            A task's retry interval starts at minBackoff, then doubles maxDoublings times,
                            then increases linearly, and finally retries retries at intervals of maxBackoff
                            up to maxAttempts times.
                          type: number
                        maxRetryDuration:
                          description: |-
                            If positive, maxRetryDuration specifies the time limit for
                            retrying a failed task, measured from when the task was first
                            attempted. Once maxRetryDuration time has passed and the task has
                            been attempted maxAttempts times, no further attempts will be
                            made and the task will be deleted.
                            If zero, then the task age is unlimited.
                          type: string
                        minBackoff:
                          description: |-
                            A task will be scheduled for retry between minBackoff and
                            maxBackoff duration after it fails, if the queue's RetryConfig
                            specifies that the task should be retried.
                          type: string
                      type: object
                    type: array
                  stackdriverLoggingConfig:
                    description: |-
                      Configuration options for writing logs to Stackdriver Logging.
                      Structure is documented below.
                    items:
                      properties:
                        samplingRatio:
                          description: |-
                            Specifies the fraction of operations to write to Stackdriver Logging.
                            This field may contain any value between 0.0 and 1.0, inclusive. 0.0 is the
                            default and means that no operations are logged.
                          type: number
                      type: object
                    type: array
                required:
                - location
                type: object
              initProvider:
                description: |-
                  THIS IS A BETA FIELD. It will be honored
                  unless the Management Policies feature flag is disabled.
                  InitProvider holds the same fields as ForProvider, with the exception
                  of Identifier and other resource reference fields. The fields that are
                  in InitProvider are merged into ForProvider when the resource is created.
                  The same fields are also added to the terraform ignore_changes hook, to
                  avoid updating them after creation. This is useful for fields that are
                  required on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them, like an
                  autoscaler.
                properties:
                  appEngineRoutingOverride:
                    description: |-
                      Overrides for task-level appEngineRouting. These settings apply only
                      to App Engine tasks in this queue
                      Structure is documented below.
                    items:
                      properties:
                        instance:
                          description: |-
                            App instance.
                            By default, the task is sent to an instance which is available when the task is attempted.
                          type: string
                        service:
                          description: |-
                            App service.
                            By default, the task is sent to the service which is the default service when the task is attempted.
                          type: string
                        version:
                          description: |-
                            App version.
                            By default, the task is sent to the version which is the default version when the task is attempted.
                          type: string
                      type: object
                    type: array
                  project:
                    description: |-
                      The ID of the project in which the resource belongs.
                      If it is not provided, the provider project is used.
                    type: string
                  projectRef:
                    description: Reference to a Project in cloudplatform to populate
                      project.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  projectSelector:
                    description: Selector for a Project in cloudplatform to populate
                      project.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  rateLimits:
                    description: |-
                      Rate limits for task dispatches.
                      The queue's actual dispatch rate is the result of:
                    items:
                      properties:
                        maxConcurrentDispatches:
                          description: |-
                            The maximum number of concurrent tasks that Cloud Tasks allows to
                            be dispatched for this queue. After this threshold has been
                            reached, Cloud Tasks stops dispatching tasks until the number of
                            concurrent requests decreases.
                          type: number
                        maxDispatchesPerSecond:
                          description: |-
                            The maximum rate at which tasks are dispatched from this queue.
                            If unspecified when the queue is created, Cloud Tasks will pick the default.
                          type: number
                      type: object
                    type: array
                  retryConfig:
                    description: |-
                      Settings that determine the retry behavior.
                      Structure is documented below.
                    items:
                      properties:
                        maxAttempts:
                          description: |-
                            Number of attempts per task.
                            Cloud Tasks will attempt the task maxAttempts times (that is, if
                            the first attempt fails, then there will be maxAttempts - 1
                            retries). Must be >= -1.
                            If unspecified when the queue is created, Cloud Tasks will pick
                            the default.
                            -1 indicates unlimited attempts.
                          type: number
                        maxBackoff:
                          description: |-
                            A task will be scheduled for retry between minBackoff and
                            maxBackoff duration after it fails, if the queue's RetryConfig
                            specifies that the task should be retried.
                          type: string
                        maxDoublings:
                          description: |-
                            The time between retries will double maxDoublings times.
                            A task's retry interval starts at minBackoff, then doubles maxDoublings times,
                            then increases linearly, and finally retries retries at intervals of maxBackoff
                            up to maxAttempts times.
                          type: number
                        maxRetryDuration:
                          description: |-
                            If positive, maxRetryDuration specifies the time limit for
                            retrying a failed task, measured from when the task was first
                            attempted. Once maxRetryDuration time has passed and the task has
                            been attempted maxAttempts times, no further attempts will be
                            made and the task will be deleted.
                            If zero, then the task age is unlimited.
                          type: string
                        minBackoff:
                          description: |-
                            A task will be scheduled for retry between minBackoff and
                            maxBackoff duration after it fails, if the queue's RetryConfig
                            specifies that the task should be retried.
                          type: string
                      type: object
                    type: array
                  stackdriverLoggingConfig:
                    description: |-
                      Configuration options for writing logs to Stackdriver Logging.
                      Structure is documented below.
                    items:
                      properties:
                        samplingRatio:
                          description: |-
                            Specifies the fraction of operations to write to Stackdriver Logging.
                            This field may contain any value between 0.0 and 1.0, inclusive. 0.0 is the
                            default and means that no operations are logged.
                          type: number
                      type: object
                    type: array
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  This field is planned to replace the DeletionPolicy field in a future
                  release. Currently, both could be set independently and non-default
                  values would be honored if the feature flag is enabled. If both are
                  custom, the DeletionPolicy field will be ignored.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: |-
                  PublishConnectionDetailsTo specifies the connection secret config which
                  contains a name, metadata and a reference to secret store config to
                  which any connection details for this managed resource should be written.
                  Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: |-
                      SecretStoreConfigRef specifies which secret store config should be used
                      for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations are the annotations to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.annotations".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Labels are the labels/tags to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      type:
                        description: |-
                          Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                  This field is planned to be replaced in a future release in favor of
                  PublishConnectionDetailsTo. Currently, both could be set independently
                  and connection details would be published to both without affecting
                  each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: QueueStatus defines the observed state of Queue.
            properties:
              atProvider:
                properties:
                  appEngineRoutingOverride:
                    description: |-
                      Overrides for task-level appEngineRouting. These settings apply only
                      to App Engine tasks in this queue
                      Structure is documented below.
                    items:
                      properties:
                        host:
                          description: |-
                            (Output)
                            The host that the task is sent to.
                          type: string
                        instance:
                          description: |-
                            App instance.
                            By default, the task is sent to an instance which is available when the task is attempted.
                          type: string
                        service:
                          description: |-
                            App service.
                            By default, the task is sent to the service which is the default service when the task is attempted.
                          type: string
                        version:
                          description: |-
                            App version.
                            By default, the task is sent to the version which is the default version when the task is attempted.
                          type: string
                      type: object
                    type: array
                  id:
                    description: an identifier for the resource with format projects/{{project}}/locations/{{location}}/queues/{{name}}
                    type: string
                  location:
                    description: The location of the queue
                    type: string
                  project:
                    description: |-
                      The ID of the project in which the resource belongs.
                      If it is not provided, the provider project is used.
                    type: string
                  rateLimits:
                    description: |-
                      Rate limits for task dispatches.
                      The queue's actual dispatch rate is the result of:
                    items:
                      properties:
                        maxBurstSize:
                          description: |-
                            (Output)
                            The max burst size.
                            Max burst size limits how fast tasks in queue are processed when many tasks are
                            in the queue and the rate is high. This field allows the queue to have a high
                            rate so processing starts shortly after a task is enqueued, but still limits
                            resource usage when many tasks are enqueued in a short period of time.
                          type: number
                        maxConcurrentDispatches:
                          description: |-
                            The maximum number of concurrent tasks that Cloud Tasks allows to
                            be dispatched for this queue. After this threshold has been
                            reached, Cloud Tasks stops dispatching tasks until the number of
                            concurrent requests decreases.
                          type: number
                        maxDispatchesPerSecond:
                          description: |-
                            The maximum rate at which tasks are dispatched from this queue.
                            If unspecified when the queue is created, Cloud Tasks will pick the default.
                          type: number
                      type: object
                    type: array
                  retryConfig:
                    description: |-
                      Settings that determine the retry behavior.
                      Structure is documented below.
                    items:
                      properties:
                        maxAttempts:
                          description: |-
                            Number of attempts per task.
                            Cloud Tasks will attempt the task maxAttempts times (that is, if
                            the first attempt fails, then there will be maxAttempts - 1
                            retries). Must be >= -1.
                            If unspecified when the queue is created, Cloud Tasks will pick
                            the default.
                            -1 indicates unlimited attempts.
                          type: number
                        maxBackoff:
                          description: |-
                            A task will be scheduled for retry between minBackoff and
                            maxBackoff duration after it fails, if the queue's RetryConfig
                            specifies that the task should be retried.
                          type: string
                        maxDoublings:
                          description: |-
                            The time between retries will double maxDoublings times.
                            A task's retry interval starts at minBackoff, then doubles maxDoublings times,
                            then increases linearly, and finally retries retries at intervals of maxBackoff
                            up to maxAttempts times.
                          type: number
                        maxRetryDuration:
                          description: |-
                            If positive, maxRetryDuration specifies the time limit for
                            retrying a failed task, measured from when the task was first
                            attempted. Once maxRetryDuration time has passed and the task has
                            been attempted maxAttempts times, no further attempts will be
                            made and the task will be deleted.
                            If zero, then the task age is unlimited.
                          type: string
                        minBackoff:
                          description: |-
                            A task will be scheduled for retry between minBackoff and
                            maxBackoff duration after it fails, if the queue's RetryConfig
                            specifies that the task should be retried.
                          type: string
                      type: object
                    type: array
                  stackdriverLoggingConfig:
                    description: |-
                      Configuration options for writing logs to Stackdriver Logging.
                      Structure is documented below.
                    items:
                      properties:
                        samplingRatio:
                          description: |-
                            Specifies the fraction of operations to write to Stackdriver Logging.
                            This field may contain any value between 0.0 and 1.0, inclusive. 0.0 is the
                            default and means that no operations are logged.
                          type: number
                      type: object
                    type: array
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: |-
                  ObservedGeneration is the latest metadata.generation
                  which resulted in either a ready state, or stalled due to error
                  it can not recover from without human intervention.
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1beta2
    schema:
      openAPIV3Schema:
        description: Queue is the Schema for the Queues API. A named resource to which
          messages are sent by publishers.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: QueueSpec defines the desired state of Queue
            properties:
              deletionPolicy:
                default: Delete
                description: |-
                  DeletionPolicy specifies what will happen to the underlying external
                  when this managed resource is deleted - either "Delete" or "Orphan" the
                  external resource.
                  This field is planned to be deprecated in favor of the ManagementPolicies
                  field in a future release. Currently, both could be set independently and
                  non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  appEngineRoutingOverride:
                    description: |-
                      Overrides for task-level appEngineRouting. These settings apply only
                      to App Engine tasks in this queue
                      Structure is documented below.
                    properties:
                      instance:
                        description: |-
                          App instance.
                          By default, the task is sent to an instance which is available when the task is attempted.
                        type: string
                      service:
                        description: |-
                          App service.
                          By default, the task is sent to the service which is the default service when the task is attempted.
                        type: string
                      version:
                        description: |-
                          App version.
                          By default, the task is sent to the version which is the default version when the task is attempted.
                        type: string
                    type: object
                  httpTarget:
                    description: |-
                      Modifies HTTP target for HTTP tasks.
                      Structure is documented below.
                    properties:
                      headerOverrides:
                        description: |-
                          HTTP target headers.
                          This map contains the header field names and values.
                          Headers will be set when running the CreateTask and/or BufferTask.
                          These headers represent a subset of the headers that will be configured for the task's HTTP request.
                          Some HTTP request headers will be ignored or replaced.
                          Headers which can have multiple values (according to RFC2616) can be specified using comma-separated values.
                          The size of the headers must be less than 80KB. Queue-level headers to override headers of all the tasks in the queue.
                          Structure is documented below.
                        items:
                          properties:
                            header:
                              description: |-
                                Header embodying a key and a value.
                                Structure is documented below.
                              properties:
                                key:
                                  description: The Key of the header.
                                  type: string
                                value:
                                  description: The Value of the header.
                                  type: string
                              type: object
                          type: object
                        type: array
                      httpMethod:
                        description: |-
                          The HTTP method to use for the request.
                          When specified, it overrides HttpRequest for the task.
                          Note that if the value is set to GET the body of the task will be ignored at execution time.
                          Possible values are: HTTP_METHOD_UNSPECIFIED, POST, GET, HEAD, PUT, DELETE, PATCH, OPTIONS.
                        type: string
                      oauthToken:
                        description: |-
                          If specified, an OAuth token is generated and attached as the Authorization header in the HTTP request.
                          This type of authorization should generally be used only when calling Google APIs hosted on *.googleapis.com.
                          Note that both the service account email and the scope MUST be specified when using the queue-level authorization override.
                          Structure is documented below.
                        properties:
                          scope:
                            description: |-
                              OAuth scope to be used for generating OAuth access token.
                              If not specified, "https://www.googleapis.com/auth/cloud-platform" will be used.
                            type: string
                          serviceAccountEmail:
                            description: |-
                              Service account email to be used for generating OIDC token.
                              The service account must be within the same project as the queue.
                              The caller must have iam.serviceAccounts.actAs permission for the service account.
                            type: string
                          serviceAccountEmailRef:
                            description: Reference to a ServiceAccount in cloudplatform
                              to populate serviceAccountEmail.
                            properties:
                              name:
                                description: Name of the referenced object.
                                type: string
                              policy:
                                description: Policies for referencing.
                                properties:
                                  resolution:
                                    default: Required
                                    description: |-
                                      Resolution specifies whether resolution of this reference is required.
                                      The default is 'Required', which means the reconcile will fail if the
                                      reference cannot be resolved. 'Optional' means this reference will be
                                      a no-op if it cannot be resolved.
                                    enum:
                                    - Required
                                    - Optional
                                    type: string
                                  resolve:
                                    description: |-
                                      Resolve specifies when this reference should be resolved. The default
                                      is 'IfNotPresent', which will attempt to resolve the reference only when
                                      the corresponding field is not present. Use 'Always' to resolve the
                                      reference on every reconcile.
                                    enum:
                                    - Always
                                    - IfNotPresent
                                    type: string
                                type: object
                            required:
                            - name
                            type: object
                          serviceAccountEmailSelector:
                            description: Selector for a ServiceAccount in cloudplatform
                              to populate serviceAccountEmail.
                            properties:
                              matchControllerRef:
                                description: |-
                                  MatchControllerRef ensures an object with the same controller reference
                                  as the selecting object is selected.
                                type: boolean
                              matchLabels:
                                additionalProperties:
                                  type: string
                                description: MatchLabels ensures an object with matching
                                  labels is selected.
                                type: object
                              policy:
                                description: Policies for selection.
                                properties:
                                  resolution:
                                    default: Required
                                    description: |-
                                      Resolution specifies whether resolution of this reference is required.
                                      The default is 'Required', which means the reconcile will fail if the
                                      reference cannot be resolved. 'Optional' means this reference will be
                                      a no-op if it cannot be resolved.
                                    enum:
                                    - Required
                                    - Optional
                                    type: string
                                  resolve:
                                    description: |-
                                      Resolve specifies when this reference should be resolved. The default
                                      is 'IfNotPresent', which will attempt to resolve the reference only when
                                      the corresponding field is not present. Use 'Always' to resolve the
                                      reference on every reconcile.
                                    enum:
                                    - Always
                                    - IfNotPresent
                                    type: string
                                type: object
                            type: object
                        type: object
                      oidcToken:
                        description: |-
                          If specified, an OIDC token is generated and attached as an Authorization header in the HTTP request.
                          This type of authorization can be used for many scenarios, including calling Cloud Run, or endpoints where you intend to validate the token yourself.
                          Note that both the service account email and the audience MUST be specified when using the queue-level authorization override.
                          Structure is documented below.
                        properties:
                          audience:
                            description: Audience to be used when generating OIDC
                              token. If not specified, the URI specified in target
                              will be used.
                            type: string
                          serviceAccountEmail:
                            description: |-
                              Service account email to be used for generating OIDC token.
                              The service account must be within the same project as the queue.
                              The caller must have iam.serviceAccounts.actAs permission for the service account.
                            type: string
                          serviceAccountEmailRef:
                            description: Reference to a ServiceAccount in cloudplatform
                              to populate serviceAccountEmail.
                            properties:
                              name:
                                description: Name of the referenced object.
                                type: string
                              policy:
                                description: Policies for referencing.
                                properties:
                                  resolution:
                                    default: Required
                                    description: |-
                                      Resolution specifies whether resolution of this reference is required.
                                      The default is 'Required', which means the reconcile will fail if the
                                      reference cannot be resolved. 'Optional' means this reference will be
                                      a no-op if it cannot be resolved.
                                    enum:
                                    - Required
                                    - Optional
                                    type: string
                                  resolve:
                                    description: |-
                                      Resolve specifies when this reference should be resolved. The default
                                      is 'IfNotPresent', which will attempt to resolve the reference only when
                                      the corresponding field is not present. Use 'Always' to resolve the
                                      reference on every reconcile.
                                    enum:
                                    - Always
                                    - IfNotPresent
                                    type: string
                                type: object
                            required:
                            - name
                            type: object
                          serviceAccountEmailSelector:
                            description: Selector for a ServiceAccount in cloudplatform
                              to populate serviceAccountEmail.
                            properties:
                              matchControllerRef:
                                description: |-
                                  MatchControllerRef ensures an object with the same controller reference
                                  as the selecting object is selected.
                                type: boolean
                              matchLabels:
                                additionalProperties:
                                  type: string
                                description: MatchLabels ensures an object with matching
                                  labels is selected.
                                type: object
                              policy:
                                description: Policies for selection.
                                properties:
                                  resolution:
                                    default: Required
                                    description: |-
                                      Resolution specifies whether resolution of this reference is required.
                                      The default is 'Required', which means the reconcile will fail if the
                                      reference cannot be resolved. 'Optional' means this reference will be
                                      a no-op if it cannot be resolved.
                                    enum:
                                    - Required
                                    - Optional
                                    type: string
                                  resolve:
                                    description: |-
                                      Resolve specifies when this reference should be resolved. The default
                                      is 'IfNotPresent', which will attempt to resolve the reference only when
                                      the corresponding field is not present. Use 'Always' to resolve the
                                      reference on every reconcile.
                                    enum:
                                    - Always
                                    - IfNotPresent
                                    type: string
                                type: object
                            type: object
                        type: object
                      uriOverride:
                        description: |-
                          URI override.
                          When specified, overrides the execution URI for all the tasks in the queue.
                          Structure is documented below.
                        properties:
                          host:
                            description: |-
                              Host override.
                              When specified, replaces the host part of the task URL.
                              For example, if the task URL is "https://www.google.com", and host value
                              is set to "example.net", the overridden URI will be changed to "https://example.net".
                              Host value cannot be an empty string (INVALID_ARGUMENT).
                            type: string
                          pathOverride:
                            description: |-
                              URI path.
                              When specified, replaces the existing path of the task URL.
                              Setting the path value to an empty string clears the URI path segment.
                              Structure is documented below.
                            properties:
                              path:
                                description: The URI path (e.g., /users/1234). Default
                                  is an empty string.
                                type: string
                            type: object
                          port:
                            description: |-
                              Port override.
                              When specified, replaces the port part of the task URI.
                              For instance, for a URI http://www.google.com/foo and port=123, the overridden URI becomes http://www.google.com:123/foo.
                              Note that the port value must be a positive integer.
                              Setting the port to 0 (Zero) clears the URI port.
                            type: string
                          queryOverride:
                            description: |-
                              URI query.
                              When specified, replaces the query part of the task URI. Setting the query value to an empty string clears the URI query segment.
                              Structure is documented below.
                            properties:
                              queryParams:
                                description: The query parameters (e.g., qparam1=123&qparam2=456).
                                  Default is an empty string.
                                type: string
                            type: object
                          scheme:
                            description: |-
                              Scheme override.
                              When specified, the task URI scheme is replaced by the provided value (HTTP or HTTPS).
                              Possible values are: HTTP, HTTPS.
                            type: string
                          uriOverrideEnforceMode:
                            description: |-
                              URI Override Enforce Mode
                              When specified, determines the Target UriOverride mode. If not specified, it defaults to ALWAYS.
                              Possible values are: ALWAYS, IF_NOT_EXISTS.
                            type: string
                        type: object
                    type: object
                  location:
                    description: The location of the queue
                    type: string
                  project:
                    description: |-
                      The ID of the project in which the resource belongs.
                      If it is not provided, the provider project is used.
                    type: string
                  projectRef:
                    description: Reference to a Project in cloudplatform to populate
                      project.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  projectSelector:
                    description: Selector for a Project in cloudplatform to populate
                      project.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  rateLimits:
                    description: |-
                      Rate limits for task dispatches.
                      The queue's actual dispatch rate is the result of:
                    properties:
                      maxConcurrentDispatches:
                        description: |-
                          The maximum number of concurrent tasks that Cloud Tasks allows to
                          be dispatched for this queue. After this threshold has been
                          reached, Cloud Tasks stops dispatching tasks until the number of
                          concurrent requests decreases.
                        type: number
                      maxDispatchesPerSecond:
                        description: |-
                          The maximum rate at which tasks are dispatched from this queue.
                          If unspecified when the queue is created, Cloud Tasks will pick the default.
                        type: number
                    type: object
                  retryConfig:
                    description: |-
                      Settings that determine the retry behavior.
                      Structure is documented below.
                    properties:
                      maxAttempts:
                        description: |-
                          Number of attempts per task.
                          Cloud Tasks will attempt the task maxAttempts times (that is, if
                          the first attempt fails, then there will be maxAttempts - 1
                          retries). Must be >= -1.
                          If unspecified when the queue is created, Cloud Tasks will pick
                          the default.
                          -1 indicates unlimited attempts.
                        type: number
                      maxBackoff:
                        description: |-
                          A task will be scheduled for retry between minBackoff and
                          maxBackoff duration after it fails, if the queue's RetryConfig
                          specifies that the task should be retried.
                        type: string
                      maxDoublings:
                        description: |-
                          The time between retries will double maxDoublings times.
                          A task's retry interval starts at minBackoff, then doubles maxDoublings times,
                          then increases linearly, and finally retries retries at intervals of maxBackoff
                          up to maxAttempts times.
                        type: number
                      maxRetryDuration:
                        description: |-
                          If positive, maxRetryDuration specifies the time limit for
                          retrying a failed task, measured from when the task was first
                          attempted. Once maxRetryDuration time has passed and the task has
                          been attempted maxAttempts times, no further attempts will be
                          made and the task will be deleted.
                          If zero, then the task age is unlimited.
                        type: string
                      minBackoff:
                        description: |-
                          A task will be scheduled for retry between minBackoff and
                          maxBackoff duration after it fails, if the queue's RetryConfig
                          specifies that the task should be retried.
                        type: string
                    type: object
                  stackdriverLoggingConfig:
                    description: |-
                      Configuration options for writing logs to Stackdriver Logging.
                      Structure is documented below.
                    properties:
                      samplingRatio:
                        description: |-
                          Specifies the fraction of operations to write to Stackdriver Logging.
                          This field may contain any value between 0.0 and 1.0, inclusive. 0.0 is the
                          default and means that no operations are logged.
                        type: number
                    type: object
                required:
                - location
                type: object
              initProvider:
                description: |-
                  THIS IS A BETA FIELD. It will be honored
                  unless the Management Policies feature flag is disabled.
                  InitProvider holds the same fields as ForProvider, with the exception
                  of Identifier and other resource reference fields. The fields that are
                  in InitProvider are merged into ForProvider when the resource is created.
                  The same fields are also added to the terraform ignore_changes hook, to
                  avoid updating them after creation. This is useful for fields that are
                  required on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them, like an
                  autoscaler.
                properties:
                  appEngineRoutingOverride:
                    description: |-
                      Overrides for task-level appEngineRouting. These settings apply only
                      to App Engine tasks in this queue
                      Structure is documented below.
                    properties:
                      instance:
                        description: |-
                          App instance.
                          By default, the task is sent to an instance which is available when the task is attempted.
                        type: string
                      service:
                        description: |-
                          App service.
                          By default, the task is sent to the service which is the default service when the task is attempted.
                        type: string
                      version:
                        description: |-
                          App version.
                          By default, the task is sent to the version which is the default version when the task is attempted.
                        type: string
                    type: object
                  httpTarget:
                    description: |-
                      Modifies HTTP target for HTTP tasks.
                      Structure is documented below.
                    properties:
                      headerOverrides:
                        description: |-
                          HTTP target headers.
                          This map contains the header field names and values.
                          Headers will be set when running the CreateTask and/or BufferTask.
                          These headers represent a subset of the headers that will be configured for the task's HTTP request.
                          Some HTTP request headers will be ignored or replaced.
                          Headers which can have multiple values (according to RFC2616) can be specified using comma-separated values.
                          The size of the headers must be less than 80KB. Queue-level headers to override headers of all the tasks in the queue.
                          Structure is documented below.
                        items:
                          properties:
                            header:
                              description: |-
                                Header embodying a key and a value.
                                Structure is documented below.
                              properties:
                                key:
                                  description: The Key of the header.
                                  type: string
                                value:
                                  description: The Value of the header.
                                  type: string
                              type: object
                          type: object
                        type: array
                      httpMethod:
                        description: |-
                          The HTTP method to use for the request.
                          When specified, it overrides HttpRequest for the task.
                          Note that if the value is set to GET the body of the task will be ignored at execution time.
                          Possible values are: HTTP_METHOD_UNSPECIFIED, POST, GET, HEAD, PUT, DELETE, PATCH, OPTIONS.
                        type: string
                      oauthToken:
                        description: |-
                          If specified, an OAuth token is generated and attached as the Authorization header in the HTTP request.
                          This type of authorization should generally be used only when calling Google APIs hosted on *.googleapis.com.
                          Note that both the service account email and the scope MUST be specified when using the queue-level authorization override.
                          Structure is documented below.
                        properties:
                          scope:
                            description: |-
                              OAuth scope to be used for generating OAuth access token.
                              If not specified, "https://www.googleapis.com/auth/cloud-platform" will be used.
                            type: string
                          serviceAccountEmail:
                            description: |-
                              Service account email to be used for generating OIDC token.
                              The service account must be within the same project as the queue.
                              The caller must have iam.serviceAccounts.actAs permission for the service account.
                            type: string
                          serviceAccountEmailRef:
                            description: Reference to a ServiceAccount in cloudplatform
                              to populate serviceAccountEmail.
                            properties:
                              name:
                                description: Name of the referenced object.
                                type: string
                              policy:
                                description: Policies for referencing.
                                properties:
                                  resolution:
                                    default: Required
                                    description: |-
                                      Resolution specifies whether resolution of this reference is required.
                                      The default is 'Required', which means the reconcile will fail if the
                                      reference cannot be resolved. 'Optional' means this reference will be
                                      a no-op if it cannot be resolved.
                                    enum:
                                    - Required
                                    - Optional
                                    type: string
                                  resolve:
                                    description: |-
                                      Resolve specifies when this reference should be resolved. The default
                                      is 'IfNotPresent', which will attempt to resolve the reference only when
                                      the corresponding field is not present. Use 'Always' to resolve the
                                      reference on every reconcile.
                                    enum:
                                    - Always
                                    - IfNotPresent
                                    type: string
                                type: object
                            required:
                            - name
                            type: object
                          serviceAccountEmailSelector:
                            description: Selector for a ServiceAccount in cloudplatform
                              to populate serviceAccountEmail.
                            properties:
                              matchControllerRef:
                                description: |-
                                  MatchControllerRef ensures an object with the same controller reference
                                  as the selecting object is selected.
                                type: boolean
                              matchLabels:
                                additionalProperties:
                                  type: string
                                description: MatchLabels ensures an object with matching
                                  labels is selected.
                                type: object
                              policy:
                                description: Policies for selection.
                                properties:
                                  resolution:
                                    default: Required
                                    description: |-
                                      Resolution specifies whether resolution of this reference is required.
                                      The default is 'Required', which means the reconcile will fail if the
                                      reference cannot be resolved. 'Optional' means this reference will be
                                      a no-op if it cannot be resolved.
                                    enum:
                                    - Required
                                    - Optional
                                    type: string
                                  resolve:
                                    description: |-
                                      Resolve specifies when this reference should be resolved. The default
                                      is 'IfNotPresent', which will attempt to resolve the reference only when
                                      the corresponding field is not present. Use 'Always' to resolve the
                                      reference on every reconcile.
                                    enum:
                                    - Always
                                    - IfNotPresent
                                    type: string
                                type: object
                            type: object
                        type: object
                      oidcToken:
                        description: |-
                          If specified, an OIDC token is generated and attached as an Authorization header in the HTTP request.
                          This type of authorization can be used for many scenarios, including calling Cloud Run, or endpoints where you intend to validate the token yourself.
                          Note that both the service account email and the audience MUST be specified when using the queue-level authorization override.
                          Structure is documented below.
                        properties:
                          audience:
                            description: Audience to be used when generating OIDC
                              token. If not specified, the URI specified in target
                              will be used.
                            type: string
                          serviceAccountEmail:
                            description: |-
                              Service account email to be used for generating OIDC token.
                              The service account must be within the same project as the queue.
                              The caller must have iam.serviceAccounts.actAs permission for the service account.
                            type: string
                          serviceAccountEmailRef:
                            description: Reference to a ServiceAccount in cloudplatform
                              to populate serviceAccountEmail.
                            properties:
                              name:
                                description: Name of the referenced object.
                                type: string
                              policy:
                                description: Policies for referencing.
                                properties:
                                  resolution:
                                    default: Required
                                    description: |-
                                      Resolution specifies whether resolution of this reference is required.
                                      The default is 'Required', which means the reconcile will fail if the
                                      reference cannot be resolved. 'Optional' means this reference will be
                                      a no-op if it cannot be resolved.
                                    enum:
                                    - Required
                                    - Optional
                                    type: string
                                  resolve:
                                    description: |-
                                      Resolve specifies when this reference should be resolved. The default
                                      is 'IfNotPresent', which will attempt to resolve the reference only when
                                      the corresponding field is not present. Use 'Always' to resolve the
                                      reference on every reconcile.
                                    enum:
                                    - Always
                                    - IfNotPresent
                                    type: string
                                type: object
                            required:
                            - name
                            type: object
                          serviceAccountEmailSelector:
                            description: Selector for a ServiceAccount in cloudplatform
                              to populate serviceAccountEmail.
                            properties:
                              matchControllerRef:
                                description: |-
                                  MatchControllerRef ensures an object with the same controller reference
                                  as the selecting object is selected.
                                type: boolean
                              matchLabels:
                                additionalProperties:
                                  type: string
                                description: MatchLabels ensures an object with matching
                                  labels is selected.
                                type: object
                              policy:
                                description: Policies for selection.
                                properties:
                                  resolution:
                                    default: Required
                                    description: |-
                                      Resolution specifies whether resolution of this reference is required.
                                      The default is 'Required', which means the reconcile will fail if the
                                      reference cannot be resolved. 'Optional' means this reference will be
                                      a no-op if it cannot be resolved.
                                    enum:
                                    - Required
                                    - Optional
                                    type: string
                                  resolve:
                                    description: |-
                                      Resolve specifies when this reference should be resolved. The default
                                      is 'IfNotPresent', which will attempt to resolve the reference only when
                                      the corresponding field is not present. Use 'Always' to resolve the
                                      reference on every reconcile.
                                    enum:
                                    - Always
                                    - IfNotPresent
                                    type: string
                                type: object
                            type: object
                        type: object
                      uriOverride:
                        description: |-
                          URI override.
                          When specified, overrides the execution URI for all the tasks in the queue.
                          Structure is documented below.
                        properties:
                          host:
                            description: |-
                              Host override.
                              When specified, replaces the host part of the task URL.
                              For example, if the task URL is "https://www.google.com", and host value
                              is set to "example.net", the overridden URI will be changed to "https://example.net".
                              Host value cannot be an empty string (INVALID_ARGUMENT).
                            type: string
                          pathOverride:
                            description: |-
                              URI path.
                              When specified, replaces the existing path of the task URL.
                              Setting the path value to an empty string clears the URI path segment.
                              Structure is documented below.
                            properties:
                              path:
                                description: The URI path (e.g., /users/1234). Default
                                  is an empty string.
                                type: string
                            type: object
                          port:
                            description: |-
                              Port override.
                              When specified, replaces the port part of the task URI.
                              For instance, for a URI http://www.google.com/foo and port=123, the overridden URI becomes http://www.google.com:123/foo.
                              Note that the port value must be a positive integer.
                              Setting the port to 0 (Zero) clears the URI port.
                            type: string
                          queryOverride:
                            description: |-
                              URI query.
                              When specified, replaces the query part of the task URI. Setting the query value to an empty string clears the URI query segment.
                              Structure is documented below.
                            properties:
                              queryParams:
                                description: The query parameters (e.g., qparam1=123&qparam2=456).
                                  Default is an empty string.
                                type: string
                            type: object
                          scheme:
                            description: |-
                              Scheme override.
                              When specified, the task URI scheme is replaced by the provided value (HTTP or HTTPS).
                              Possible values are: HTTP, HTTPS.
                            type: string
                          uriOverrideEnforceMode:
                            description: |-
                              URI Override Enforce Mode
                              When specified, determines the Target UriOverride mode. If not specified, it defaults to ALWAYS.
                              Possible values are: ALWAYS, IF_NOT_EXISTS.
                            type: string
                        type: object
                    type: object
                  project:
                    description: |-
                      The ID of the project in which the resource belongs.
                      If it is not provided, the provider project is used.
                    type: string
                  projectRef:
                    description: Reference to a Project in cloudplatform to populate
                      project.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  projectSelector:
                    description: Selector for a Project in cloudplatform to populate
                      project.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  rateLimits:
                    description: |-
                      Rate limits for task dispatches.
                      The queue's actual dispatch rate is the result of:
                    properties:
                      maxConcurrentDispatches:
                        description: |-
                          The maximum number of concurrent tasks that Cloud Tasks allows to
                          be dispatched for this queue. After this threshold has been
                          reached, Cloud Tasks stops dispatching tasks until the number of
                          concurrent requests decreases.
                        type: number
                      maxDispatchesPerSecond:
                        description: |-
                          The maximum rate at which tasks are dispatched from this queue.
                          If unspecified when the queue is created, Cloud Tasks will pick the default.
                        type: number
                    type: object
                  retryConfig:
                    description: |-
                      Settings that determine the retry behavior.
                      Structure is documented below.
                    properties:
                      maxAttempts:
                        description: |-
                          Number of attempts per task.
                          Cloud Tasks will attempt the task maxAttempts times (that is, if
                          the first attempt fails, then there will be maxAttempts - 1
                          retries). Must be >= -1.
                          If unspecified when the queue is created, Cloud Tasks will pick
                          the default.
                          -1 indicates unlimited attempts.
                        type: number
                      maxBackoff:
                        description: |-
                          A task will be scheduled for retry between minBackoff and
                          maxBackoff duration after it fails, if the queue's RetryConfig
                          specifies that the task should be retried.
                        type: string
                      maxDoublings:
                        description: |-
                          The time between retries will double maxDoublings times.
                          A task's retry interval starts at minBackoff, then doubles maxDoublings times,
                          then increases linearly, and finally retries retries at intervals of maxBackoff
                          up to maxAttempts times.
                        type: number
                      maxRetryDuration:
                        description: |-
                          If positive, maxRetryDuration specifies the time limit for
                          retrying a failed task, measured from when the task was first
                          attempted. Once maxRetryDuration time has passed and the task has
                          been attempted maxAttempts times, no further attempts will be
                          made and the task will be deleted.
                          If zero, then the task age is unlimited.
                        type: string
                      minBackoff:
                        description: |-
                          A task will be scheduled for retry between minBackoff and
                          maxBackoff duration after it fails, if the queue's RetryConfig
                          specifies that the task should be retried.
                        type: string
                    type: object
                  stackdriverLoggingConfig:
                    description: |-
                      Configuration options for writing logs to Stackdriver Logging.
                      Structure is documented below.
                    properties:
                      samplingRatio:
                        description: |-
                          Specifies the fraction of operations to write to Stackdriver Logging.
                          This field may contain any value between 0.0 and 1.0, inclusive. 0.0 is the
                          default and means that no operations are logged.
                        type: number
                    type: object
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  This field is planned to replace the DeletionPolicy field in a future
                  release. Currently, both could be set independently and non-default
                  values would be honored if the feature flag is enabled. If both are
                  custom, the DeletionPolicy field will be ignored.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: |-
                  PublishConnectionDetailsTo specifies the connection secret config which
                  contains a name, metadata and a reference to secret store config to
                  which any connection details for this managed resource should be written.
                  Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: |-
                      SecretStoreConfigRef specifies which secret store config should be used
                      for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations are the annotations to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.annotations".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Labels are the labels/tags to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      type:
                        description: |-
                          Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                  This field is planned to be replaced in a future release in favor of
                  PublishConnectionDetailsTo. Currently, both could be set independently
                  and connection details would be published to both without affecting
                  each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: QueueStatus defines the observed state of Queue.
            properties:
              atProvider:
                properties:
                  appEngineRoutingOverride:
                    description: |-
                      Overrides for task-level appEngineRouting. These settings apply only
                      to App Engine tasks in this queue
                      Structure is documented below.
                    properties:
                      host:
                        description: |-
                          (Output)
                          The host that the task is sent to.
                        type: string
                      instance:
                        description: |-
                          App instance.
                          By default, the task is sent to an instance which is available when the task is attempted.
                        type: string
                      service:
                        description: |-
                          App service.
                          By default, the task is sent to the service which is the default service when the task is attempted.
                        type: string
                      version:
                        description: |-
                          App version.
                          By default, the task is sent to the version which is the default version when the task is attempted.
                        type: string
                    type: object
                  httpTarget:
                    description: |-
                      Modifies HTTP target for HTTP tasks.
                      Structure is documented below.
                    properties:
                      headerOverrides:
                        description: |-
                          HTTP target headers.
                          This map contains the header field names and values.
                          Headers will be set when running the CreateTask and/or BufferTask.
                          These headers represent a subset of the headers that will be configured for the task's HTTP request.
                          Some HTTP request headers will be ignored or replaced.
                          Headers which can have multiple values (according to RFC2616) can be specified using comma-separated values.
                          The size of the headers must be less than 80KB. Queue-level headers to override headers of all the tasks in the queue.
                          Structure is documented below.
                        items:
                          properties:
                            header:
                              description: |-
                                Header embodying a key and a value.
                                Structure is documented below.
                              properties:
                                key:
                                  description: The Key of the header.
                                  type: string
                                value:
                                  description: The Value of the header.
                                  type: string
                              type: object
                          type: object
                        type: array
                      httpMethod:
                        description: |-
                          The HTTP method to use for the request.
                          When specified, it overrides HttpRequest for the task.
                          Note that if the value is set to GET the body of the task will be ignored at execution time.
                          Possible values are: HTTP_METHOD_UNSPECIFIED, POST, GET, HEAD, PUT, DELETE, PATCH, OPTIONS.
                        type: string
                      oauthToken:
                        description: |-
                          If specified, an OAuth token is generated and attached as the Authorization header in the HTTP request.
                          This type of authorization should generally be used only when calling Google APIs hosted on *.googleapis.com.
                          Note that both the service account email and the scope MUST be specified when using the queue-level authorization override.
                          Structure is documented below.
                        properties:
                          scope:
                            description: |-
                              OAuth scope to be used for generating OAuth access token.
                              If not specified, "https://www.googleapis.com/auth/cloud-platform" will be used.
                            type: string
                          serviceAccountEmail:
                            description: |-
                              Service account email to be used for generating OIDC token.
                              The service account must be within the same project as the queue.
                              The caller must have iam.serviceAccounts.actAs permission for the service account.
                            type: string
                        type: object
                      oidcToken:
                        description: |-
                          If specified, an OIDC token is generated and attached as an Authorization header in the HTTP request.
                          This type of authorization can be used for many scenarios, including calling Cloud Run, or endpoints where you intend to validate the token yourself.
                          Note that both the service account email and the audience MUST be specified when using the queue-level authorization override.
                          Structure is documented below.
                        properties:
                          audience:
                            description: Audience to be used when generating OIDC
                              token. If not specified, the URI specified in target
                              will be used.
                            type: string
                          serviceAccountEmail:
                            description: |-
                              Service account email to be used for generating OIDC token.
                              The service account must be within the same project as the queue.
                              The caller must have iam.serviceAccounts.actAs permission for the service account.
                            type: string
                        type: object
                      uriOverride:
                        description: |-
                          URI override.
                          When specified, overrides the execution URI for all the tasks in the queue.
                          Structure is documented below.
                        properties:
                          host:
                            description: |-
                              Host override.
                              When specified, replaces the host part of the task URL.
                              For example, if the task URL is "https://www.google.com", and host value
                              is set to "example.net", the overridden URI will be changed to "https://example.net".
                              Host value cannot be an empty string (INVALID_ARGUMENT).
                            type: string
                          pathOverride:
                            description: |-
                              URI path.
                              When specified, replaces the existing path of the task URL.
                              Setting the path value to an empty string clears the URI path segment.
                              Structure is documented below.
                            properties:
                              path:
                                description: The URI path (e.g., /users/1234). Default
                                  is an empty string.
                                type: string
                            type: object
                          port:
                            description: |-
                              Port override.
                              When specified, replaces the port part of the task URI.
                              For instance, for a URI http://www.google.com/foo and port=123, the overridden URI becomes http://www.google.com:123/foo.
                              Note that the port value must be a positive integer.
                              Setting the port to 0 (Zero) clears the URI port.
                            type: string
                          queryOverride:
                            description: |-
                              URI query.
                              When specified, replaces the query part of the task URI. Setting the query value to an empty string clears the URI query segment.
                              Structure is documented below.
                            properties:
                              queryParams:
                                description: The query parameters (e.g., qparam1=123&qparam2=456).
                                  Default is an empty string.
                                type: string
                            type: object
                          scheme:
                            description: |-
                              Scheme override.
                              When specified, the task URI scheme is replaced by the provided value (HTTP or HTTPS).
                              Possible values are: HTTP, HTTPS.
                            type: string
                          uriOverrideEnforceMode:
                            description: |-
                              URI Override Enforce Mode
                              When specified, determines the Target UriOverride mode. If not specified, it defaults to ALWAYS.
                              Possible values are: ALWAYS, IF_NOT_EXISTS.
                            type: string
                        type: object
                    type: object
                  id:
                    description: an identifier for the resource with format projects/{{project}}/locations/{{location}}/queues/{{name}}
                    type: string
                  location:
                    description: The location of the queue
                    type: string
                  project:
                    description: |-
                      The ID of the project in which the resource belongs.
                      If it is not provided, the provider project is used.
                    type: string
                  rateLimits:
                    description: |-
                      Rate limits for task dispatches.
                      The queue's actual dispatch rate is the result of:
                    properties:
                      maxBurstSize:
                        description: |-
                          (Output)
                          The max burst size.
                          Max burst size limits how fast tasks in queue are processed when many tasks are
                          in the queue and the rate is high. This field allows the queue to have a high
                          rate so processing starts shortly after a task is enqueued, but still limits
                          resource usage when many tasks are enqueued in a short period of time.
                        type: number
                      maxConcurrentDispatches:
                        description: |-
                          The maximum number of concurrent tasks that Cloud Tasks allows to
                          be dispatched for this queue. After this threshold has been
                          reached, Cloud Tasks stops dispatching tasks until the number of
                          concurrent requests decreases.
                        type: number
                      maxDispatchesPerSecond:
                        description: |-
                          The maximum rate at which tasks are dispatched from this queue.
                          If unspecified when the queue is created, Cloud Tasks will pick the default.
                        type: number
                    type: object
                  retryConfig:
                    description: |-
                      Settings that determine the retry behavior.
                      Structure is documented below.
                    properties:
                      maxAttempts:
                        description: |-
                          Number of attempts per task.
                          Cloud Tasks will attempt the task maxAttempts times (that is, if
                          the first attempt fails, then there will be maxAttempts - 1
                          retries). Must be >= -1.
                          If unspecified when the queue is created, Cloud Tasks will pick
                          the default.
                          -1 indicates unlimited attempts.
                        type: number
                      maxBackoff:
                        description: |-
                          A task will be scheduled for retry between minBackoff and
                          maxBackoff duration after it fails, if the queue's RetryConfig
                          specifies that the task should be retried.
                        type: string
                      maxDoublings:
                        description: |-
                          The time between retries will double maxDoublings times.
                          A task's retry interval starts at minBackoff, then doubles maxDoublings times,
                          then increases linearly, and finally retries retries at intervals of maxBackoff
                          up to maxAttempts times.
                        type: number
                      maxRetryDuration:
                        description: |-
                          If positive, maxRetryDuration specifies the time limit for
                          retrying a failed task, measured from when the task was first
                          attempted. Once maxRetryDuration time has passed and the task has
                          been attempted maxAttempts times, no further attempts will be
                          made and the task will be deleted.
                          If zero, then the task age is unlimited.
                        type: string
                      minBackoff:
                        description: |-
                          A task will be scheduled for retry between minBackoff and
                          maxBackoff duration after it fails, if the queue's RetryConfig
                          specifies that the task should be retried.
                        type: string
                    type: object
                  stackdriverLoggingConfig:
                    description: |-
                      Configuration options for writing logs to Stackdriver Logging.
                      Structure is documented below.
                    properties:
                      samplingRatio:
                        description: |-
                          Specifies the fraction of operations to write to Stackdriver Logging.
                          This field may contain any value between 0.0 and 1.0, inclusive. 0.0 is the
                          default and means that no operations are logged.
                        type: number
                    type: object
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: |-
                  ObservedGeneration is the latest metadata.generation
                  which resulted in either a ready state, or stalled due to error
                  it can not recover from without human intervention.
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: false
    subresources:
      status: {}
