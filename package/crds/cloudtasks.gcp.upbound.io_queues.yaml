---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.11.1
  creationTimestamp: null
  name: queues.cloudtasks.gcp.upbound.io
spec:
  group: cloudtasks.gcp.upbound.io
  names:
    categories:
    - crossplane
    - managed
    - gcp
    kind: Queue
    listKind: QueueList
    plural: queues
    singular: queue
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: Queue is the Schema for the Queues API. A named resource to which
          messages are sent by publishers.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: QueueSpec defines the desired state of Queue
            properties:
              deletionPolicy:
                default: Delete
                description: DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource.
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  appEngineRoutingOverride:
                    description: Overrides for task-level appEngineRouting. These
                      settings apply only to App Engine tasks in this queue Structure
                      is documented below.
                    items:
                      properties:
                        instance:
                          description: App instance. By default, the task is sent
                            to an instance which is available when the task is attempted.
                          type: string
                        service:
                          description: App service. By default, the task is sent to
                            the service which is the default service when the task
                            is attempted.
                          type: string
                        version:
                          description: App version. By default, the task is sent to
                            the version which is the default version when the task
                            is attempted.
                          type: string
                      type: object
                    type: array
                  location:
                    description: The location of the queue
                    type: string
                  project:
                    description: The ID of the project in which the resource belongs.
                      If it is not provided, the provider project is used.
                    type: string
                  projectRef:
                    description: Reference to a Project in cloudplatform to populate
                      project.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  projectSelector:
                    description: Selector for a Project in cloudplatform to populate
                      project.
                    properties:
                      matchControllerRef:
                        description: MatchControllerRef ensures an object with the
                          same controller reference as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  rateLimits:
                    description: 'Rate limits for task dispatches. The queue''s actual
                      dispatch rate is the result of:'
                    items:
                      properties:
                        maxConcurrentDispatches:
                          description: The maximum number of concurrent tasks that
                            Cloud Tasks allows to be dispatched for this queue. After
                            this threshold has been reached, Cloud Tasks stops dispatching
                            tasks until the number of concurrent requests decreases.
                          type: number
                        maxDispatchesPerSecond:
                          description: The maximum rate at which tasks are dispatched
                            from this queue. If unspecified when the queue is created,
                            Cloud Tasks will pick the default.
                          type: number
                      type: object
                    type: array
                  retryConfig:
                    description: Settings that determine the retry behavior. Structure
                      is documented below.
                    items:
                      properties:
                        maxAttempts:
                          description: Number of attempts per task. Cloud Tasks will
                            attempt the task maxAttempts times (that is, if the first
                            attempt fails, then there will be maxAttempts - 1 retries).
                            Must be >= -1. If unspecified when the queue is created,
                            Cloud Tasks will pick the default. -1 indicates unlimited
                            attempts.
                          type: number
                        maxBackoff:
                          description: A task will be scheduled for retry between
                            minBackoff and maxBackoff duration after it fails, if
                            the queue's RetryConfig specifies that the task should
                            be retried.
                          type: string
                        maxDoublings:
                          description: The time between retries will double maxDoublings
                            times. A task's retry interval starts at minBackoff, then
                            doubles maxDoublings times, then increases linearly, and
                            finally retries retries at intervals of maxBackoff up
                            to maxAttempts times.
                          type: number
                        maxRetryDuration:
                          description: If positive, maxRetryDuration specifies the
                            time limit for retrying a failed task, measured from when
                            the task was first attempted. Once maxRetryDuration time
                            has passed and the task has been attempted maxAttempts
                            times, no further attempts will be made and the task will
                            be deleted. If zero, then the task age is unlimited.
                          type: string
                        minBackoff:
                          description: A task will be scheduled for retry between
                            minBackoff and maxBackoff duration after it fails, if
                            the queue's RetryConfig specifies that the task should
                            be retried.
                          type: string
                      type: object
                    type: array
                  stackdriverLoggingConfig:
                    description: Configuration options for writing logs to Stackdriver
                      Logging. Structure is documented below.
                    items:
                      properties:
                        samplingRatio:
                          description: Specifies the fraction of operations to write
                            to Stackdriver Logging. This field may contain any value
                            between 0.0 and 1.0, inclusive. 0.0 is the default and
                            means that no operations are logged.
                          type: number
                      required:
                      - samplingRatio
                      type: object
                    type: array
                required:
                - location
                type: object
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: QueueStatus defines the observed state of Queue.
            properties:
              atProvider:
                properties:
                  appEngineRoutingOverride:
                    description: Overrides for task-level appEngineRouting. These
                      settings apply only to App Engine tasks in this queue Structure
                      is documented below.
                    items:
                      properties:
                        host:
                          description: The host that the task is sent to.
                          type: string
                      type: object
                    type: array
                  id:
                    description: an identifier for the resource with format projects/{{project}}/locations/{{location}}/queues/{{name}}
                    type: string
                  rateLimits:
                    description: 'Rate limits for task dispatches. The queue''s actual
                      dispatch rate is the result of:'
                    items:
                      properties:
                        maxBurstSize:
                          description: The max burst size. Max burst size limits how
                            fast tasks in queue are processed when many tasks are
                            in the queue and the rate is high. This field allows the
                            queue to have a high rate so processing starts shortly
                            after a task is enqueued, but still limits resource usage
                            when many tasks are enqueued in a short period of time.
                          type: number
                      type: object
                    type: array
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
