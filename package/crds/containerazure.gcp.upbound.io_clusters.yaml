---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.11.1
  creationTimestamp: null
  name: clusters.containerazure.gcp.upbound.io
spec:
  group: containerazure.gcp.upbound.io
  names:
    categories:
    - crossplane
    - managed
    - gcp
    kind: Cluster
    listKind: ClusterList
    plural: clusters
    singular: cluster
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: Cluster is the Schema for the Clusters API. An Anthos cluster
          running on Azure.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ClusterSpec defines the desired state of Cluster
            properties:
              deletionPolicy:
                default: Delete
                description: DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource.
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  annotations:
                    additionalProperties:
                      type: string
                    description: 'Optional. Annotations on the cluster. This field
                      has the same restrictions as Kubernetes annotations. The total
                      size of all keys and values combined is limited to 256k. Keys
                      can have 2 segments: prefix  and name , separated by a slash
                      (/). Prefix must be a DNS subdomain. Name must be 63 characters
                      or less, begin and end with alphanumerics, with dashes (-),
                      underscores (_), dots (.), and alphanumerics between.'
                    type: object
                  authorization:
                    description: Configuration related to the cluster RBAC settings.
                    items:
                      properties:
                        adminUsers:
                          description: Users that can perform operations as a cluster
                            admin. A new ClusterRoleBinding will be created to grant
                            the cluster-admin ClusterRole to the users. Up to ten
                            admin users can be provided. For more info on RBAC, see
                            https://kubernetes.io/docs/reference/access-authn-authz/rbac/#user-facing-roles
                          items:
                            properties:
                              username:
                                description: The name of the user, e.g. my-gcp-id@gmail.com.
                                type: string
                            required:
                            - username
                            type: object
                          type: array
                      required:
                      - adminUsers
                      type: object
                    type: array
                  azureRegion:
                    description: The Azure region where the cluster runs. Each Google
                      Cloud region supports a subset of nearby Azure regions. You
                      can call to list all supported Azure regions within a given
                      Google Cloud region.
                    type: string
                  azureServicesAuthentication:
                    description: Azure authentication configuration for management
                      of Azure resources
                    items:
                      properties:
                        applicationId:
                          description: The Azure Active Directory Application ID for
                            Authentication configuration.
                          type: string
                        tenantId:
                          description: The Azure Active Directory Tenant ID for Authentication
                            configuration.
                          type: string
                      required:
                      - applicationId
                      - tenantId
                      type: object
                    type: array
                  client:
                    description: Name of the AzureClient. The AzureClient resource
                      must reside on the same GCP project and region as the AzureCluster.
                      AzureClient names are formatted as projects/<project-number>/locations/<region>/azureClients/<client-id>.
                      See Resource Names (https:cloud.google.com/apis/design/resource_names)
                      for more details on Google Cloud resource names.
                    type: string
                  controlPlane:
                    description: Configuration related to the cluster control plane.
                    items:
                      properties:
                        databaseEncryption:
                          description: Optional. Configuration related to application-layer
                            secrets encryption.
                          items:
                            properties:
                              keyId:
                                description: 'The ARM ID of the Azure Key Vault key
                                  to encrypt / decrypt data. For example: /subscriptions/<subscription-id>/resourceGroups/<resource-group-id>/providers/Microsoft.KeyVault/vaults/<key-vault-id>/keys/<key-name>
                                  Encryption will always take the latest version of
                                  the key and hence specific version is not supported.'
                                type: string
                            required:
                            - keyId
                            type: object
                          type: array
                        mainVolume:
                          description: Optional. Configuration related to the main
                            volume provisioned for each control plane replica. The
                            main volume is in charge of storing all of the cluster's
                            etcd state. When unspecified, it defaults to a 8-GiB Azure
                            Disk.
                          items:
                            properties:
                              sizeGib:
                                description: Optional. The size of the disk, in GiBs.
                                  When unspecified, a default value is provided. See
                                  the specific reference in the parent resource.
                                type: number
                            type: object
                          type: array
                        proxyConfig:
                          description: Proxy configuration for outbound HTTP(S) traffic.
                          items:
                            properties:
                              resourceGroupId:
                                description: 'The ARM ID of the resource group where
                                  the cluster resources are deployed. For example:
                                  /subscriptions/*/resourceGroups/*'
                                type: string
                              secretId:
                                description: The URL the of the proxy setting secret
                                  with its version. Secret ids are formatted as https:<key-vault-name>.vault.azure.net/secrets/<secret-name>/<secret-version>.
                                type: string
                            required:
                            - resourceGroupId
                            - secretId
                            type: object
                          type: array
                        replicaPlacements:
                          description: Configuration for where to place the control
                            plane replicas. Up to three replica placement instances
                            can be specified. If replica_placements is set, the replica
                            placement instances will be applied to the three control
                            plane replicas as evenly as possible.
                          items:
                            properties:
                              azureAvailabilityZone:
                                description: For a given replica, the Azure availability
                                  zone where to provision the control plane VM and
                                  the ETCD disk.
                                type: string
                              subnetId:
                                description: For a given replica, the ARM ID of the
                                  subnet where the control plane VM is deployed. Make
                                  sure it's a subnet under the virtual network in
                                  the cluster configuration.
                                type: string
                            required:
                            - azureAvailabilityZone
                            - subnetId
                            type: object
                          type: array
                        rootVolume:
                          description: Optional. Configuration related to the root
                            volume provisioned for each control plane replica. When
                            unspecified, it defaults to 32-GiB Azure Disk.
                          items:
                            properties:
                              sizeGib:
                                description: Optional. The size of the disk, in GiBs.
                                  When unspecified, a default value is provided. See
                                  the specific reference in the parent resource.
                                type: number
                            type: object
                          type: array
                        sshConfig:
                          description: SSH configuration for how to access the underlying
                            control plane machines.
                          items:
                            properties:
                              authorizedKey:
                                description: The SSH public key data for VMs managed
                                  by Anthos. This accepts the authorized_keys file
                                  format used in OpenSSH according to the sshd(8)
                                  manual page.
                                type: string
                            required:
                            - authorizedKey
                            type: object
                          type: array
                        subnetId:
                          description: 'The ARM ID of the subnet where the control
                            plane VMs are deployed. Example: /subscriptions//resourceGroups//providers/Microsoft.Network/virtualNetworks//subnets/default.'
                          type: string
                        tags:
                          additionalProperties:
                            type: string
                          description: Optional. A set of tags to apply to all underlying
                            control plane Azure resources.
                          type: object
                        version:
                          description: The Kubernetes version to run on control plane
                            replicas (e.g. 1.19.10-gke.1000). You can list all supported
                            versions on a given Google Cloud region by calling GetAzureServerConfig.
                          type: string
                        vmSize:
                          description: 'Optional. The Azure VM size name. Example:
                            Standard_DS2_v2. For available VM sizes, see https://docs.microsoft.com/en-us/azure/virtual-machines/vm-naming-conventions.
                            When unspecified, it defaults to Standard_DS2_v2.'
                          type: string
                      required:
                      - sshConfig
                      - subnetId
                      - version
                      type: object
                    type: array
                  description:
                    description: Optional. A human readable description of this cluster.
                      Cannot be longer than 255 UTF-8 encoded bytes.
                    type: string
                  fleet:
                    description: Fleet configuration.
                    items:
                      properties:
                        project:
                          description: The number of the Fleet host project where
                            this cluster will be registered.
                          type: string
                      type: object
                    type: array
                  location:
                    description: The location for the resource
                    type: string
                  networking:
                    description: Cluster-wide networking configuration.
                    items:
                      properties:
                        podAddressCidrBlocks:
                          description: The IP address range of the pods in this cluster,
                            in CIDR notation (e.g. 10.96.0.0/14). All pods in the
                            cluster get assigned a unique RFC1918 IPv4 address from
                            these ranges. Only a single range is supported. This field
                            cannot be changed after creation.
                          items:
                            type: string
                          type: array
                        serviceAddressCidrBlocks:
                          description: The IP address range for services in this cluster,
                            in CIDR notation (e.g. 10.96.0.0/14). All services in
                            the cluster get assigned a unique RFC1918 IPv4 address
                            from these ranges. Only a single range is supported. This
                            field cannot be changed after creating a cluster.
                          items:
                            type: string
                          type: array
                        virtualNetworkId:
                          description: 'The Azure Resource Manager (ARM) ID of the
                            VNet associated with your cluster. All components in the
                            cluster (i.e. control plane and node pools) run on a single
                            VNet. Example: /subscriptions/*/resourceGroups/*/providers/Microsoft.Network/virtualNetworks/*
                            This field cannot be changed after creation.'
                          type: string
                      required:
                      - podAddressCidrBlocks
                      - serviceAddressCidrBlocks
                      - virtualNetworkId
                      type: object
                    type: array
                  project:
                    description: The project for the resource
                    type: string
                  resourceGroupId:
                    description: 'The ARM ID of the resource group where the cluster
                      resources are deployed. For example: /subscriptions/*/resourceGroups/*'
                    type: string
                required:
                - authorization
                - azureRegion
                - controlPlane
                - fleet
                - location
                - networking
                - resourceGroupId
                type: object
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: ClusterStatus defines the observed state of Cluster.
            properties:
              atProvider:
                properties:
                  createTime:
                    description: Output only. The time at which this cluster was created.
                    type: string
                  endpoint:
                    description: Output only. The endpoint of the cluster's API server.
                    type: string
                  etag:
                    description: Allows clients to perform consistent read-modify-writes
                      through optimistic concurrency control. May be sent on update
                      and delete requests to ensure the client has an up-to-date value
                      before proceeding.
                    type: string
                  fleet:
                    description: Fleet configuration.
                    items:
                      properties:
                        membership:
                          description: The name of the managed Hub Membership resource
                            associated to this cluster. Membership names are formatted
                            as projects//locations/global/membership/.
                          type: string
                      type: object
                    type: array
                  id:
                    description: an identifier for the resource with format projects/{{project}}/locations/{{location}}/azureClusters/{{name}}
                    type: string
                  reconciling:
                    description: Output only. If set, there are currently changes
                      in flight to the cluster.
                    type: boolean
                  state:
                    description: 'Output only. The current state of the cluster. Possible
                      values: STATE_UNSPECIFIED, PROVISIONING, RUNNING, RECONCILING,
                      STOPPING, ERROR, DEGRADED'
                    type: string
                  uid:
                    description: Output only. A globally unique identifier for the
                      cluster.
                    type: string
                  updateTime:
                    description: Output only. The time at which this cluster was last
                      updated.
                    type: string
                  workloadIdentityConfig:
                    description: Output only. Workload Identity settings.
                    items:
                      properties:
                        identityProvider:
                          type: string
                        issuerUri:
                          type: string
                        workloadPool:
                          type: string
                      type: object
                    type: array
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
