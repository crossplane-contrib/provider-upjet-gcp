---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.18.0
  name: internalranges.networkconnectivity.gcp.upbound.io
spec:
  group: networkconnectivity.gcp.upbound.io
  names:
    categories:
    - crossplane
    - managed
    - gcp
    kind: InternalRange
    listKind: InternalRangeList
    plural: internalranges
    singular: internalrange
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: InternalRange is the Schema for the InternalRanges API. The internal
          range resource for IPAM operations within a VPC network.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: InternalRangeSpec defines the desired state of InternalRange
            properties:
              deletionPolicy:
                default: Delete
                description: |-
                  DeletionPolicy specifies what will happen to the underlying external
                  when this managed resource is deleted - either "Delete" or "Orphan" the
                  external resource.
                  This field is planned to be deprecated in favor of the ManagementPolicies
                  field in a future release. Currently, both could be set independently and
                  non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  allocationOptions:
                    description: |-
                      Options for automatically allocating a free range with a size given by prefixLength.
                      Structure is documented below.
                    properties:
                      allocationStrategy:
                        description: |-
                          Optional. Sets the strategy used to automatically find a free range of a size given by prefixLength. Can be set only when trying to create a reservation that automatically finds the free range to reserve.
                          Possible values are: RANDOM, FIRST_AVAILABLE, RANDOM_FIRST_N_AVAILABLE, FIRST_SMALLEST_FITTING.
                        type: string
                      firstAvailableRangesLookupSize:
                        description: |-
                          Must be set when allocation_strategy is RANDOM_FIRST_N_AVAILABLE, otherwise must remain unset. Defines the size of the set of free ranges from which RANDOM_FIRST_N_AVAILABLE strategy randomy selects one,
                          in other words it sets the N in the RANDOM_FIRST_N_AVAILABLE.
                        type: number
                    type: object
                  description:
                    description: An optional description of this resource.
                    type: string
                  excludeCidrRanges:
                    description: |-
                      Optional. List of IP CIDR ranges to be excluded. Resulting reserved Internal Range will not overlap with any CIDR blocks mentioned in this list.
                      Only IPv4 CIDR ranges are supported.
                    items:
                      type: string
                    type: array
                  immutable:
                    description: Immutable ranges cannot have their fields modified,
                      except for labels and description.
                    type: boolean
                  ipCidrRange:
                    description: |-
                      The IP range that this internal range defines.
                      NOTE: IPv6 ranges are limited to usage=EXTERNAL_TO_VPC and peering=FOR_SELF
                      NOTE: For IPv6 Ranges this field is compulsory, i.e. the address range must be specified explicitly.
                    type: string
                  labels:
                    additionalProperties:
                      type: string
                    description: User-defined labels.
                    type: object
                    x-kubernetes-map-type: granular
                  migration:
                    description: |-
                      Specification for migration with source and target resource names.
                      Structure is documented below.
                    properties:
                      source:
                        description: |-
                          Resource path as an URI of the source resource, for example a subnet.
                          The project for the source resource should match the project for the
                          InternalRange.
                          An example /projects/{project}/regions/{region}/subnetworks/{subnet}
                        type: string
                      sourceRef:
                        description: Reference to a Subnetwork in compute to populate
                          source.
                        properties:
                          name:
                            description: Name of the referenced object.
                            type: string
                          policy:
                            description: Policies for referencing.
                            properties:
                              resolution:
                                default: Required
                                description: |-
                                  Resolution specifies whether resolution of this reference is required.
                                  The default is 'Required', which means the reconcile will fail if the
                                  reference cannot be resolved. 'Optional' means this reference will be
                                  a no-op if it cannot be resolved.
                                enum:
                                - Required
                                - Optional
                                type: string
                              resolve:
                                description: |-
                                  Resolve specifies when this reference should be resolved. The default
                                  is 'IfNotPresent', which will attempt to resolve the reference only when
                                  the corresponding field is not present. Use 'Always' to resolve the
                                  reference on every reconcile.
                                enum:
                                - Always
                                - IfNotPresent
                                type: string
                            type: object
                        required:
                        - name
                        type: object
                      sourceSelector:
                        description: Selector for a Subnetwork in compute to populate
                          source.
                        properties:
                          matchControllerRef:
                            description: |-
                              MatchControllerRef ensures an object with the same controller reference
                              as the selecting object is selected.
                            type: boolean
                          matchLabels:
                            additionalProperties:
                              type: string
                            description: MatchLabels ensures an object with matching
                              labels is selected.
                            type: object
                          policy:
                            description: Policies for selection.
                            properties:
                              resolution:
                                default: Required
                                description: |-
                                  Resolution specifies whether resolution of this reference is required.
                                  The default is 'Required', which means the reconcile will fail if the
                                  reference cannot be resolved. 'Optional' means this reference will be
                                  a no-op if it cannot be resolved.
                                enum:
                                - Required
                                - Optional
                                type: string
                              resolve:
                                description: |-
                                  Resolve specifies when this reference should be resolved. The default
                                  is 'IfNotPresent', which will attempt to resolve the reference only when
                                  the corresponding field is not present. Use 'Always' to resolve the
                                  reference on every reconcile.
                                enum:
                                - Always
                                - IfNotPresent
                                type: string
                            type: object
                        type: object
                      target:
                        description: |-
                          Resource path of the target resource. The target project can be
                          different, as in the cases when migrating to peer networks. The resource
                          may not exist yet.
                          For example /projects/{project}/regions/{region}/subnetworks/{subnet}
                        type: string
                    type: object
                  network:
                    description: 'Fully-qualified URL of the network that this route
                      applies to, for example: projects/my-project/global/networks/my-network.'
                    type: string
                  networkRef:
                    description: Reference to a Network in compute to populate network.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  networkSelector:
                    description: Selector for a Network in compute to populate network.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  overlaps:
                    description: |-
                      Optional. Types of resources that are allowed to overlap with the current internal range.
                      Each value may be one of: OVERLAP_ROUTE_RANGE, OVERLAP_EXISTING_SUBNET_RANGE.
                    items:
                      type: string
                    type: array
                  peering:
                    description: |-
                      The type of peering set for this internal range.
                      Possible values are: FOR_SELF, FOR_PEER, NOT_SHARED.
                    type: string
                  prefixLength:
                    description: |-
                      An alternate to ipCidrRange. Can be set when trying to create a reservation that automatically finds a free range of the given size.
                      If both ipCidrRange and prefixLength are set, there is an error if the range sizes do not match. Can also be used during updates to change the range size.
                      NOTE: For IPv6 this field only works if ip_cidr_range is set as well, and both fields must match. In other words, with IPv6 this field only works as
                      a redundant parameter.
                    type: number
                  project:
                    description: |-
                      The ID of the project in which the resource belongs.
                      If it is not provided, the provider project is used.
                    type: string
                  targetCidrRange:
                    description: |-
                      Optional. Can be set to narrow down or pick a different address space while searching for a free range.
                      If not set, defaults to the "10.0.0.0/8" address space. This can be used to search in other rfc-1918 address spaces like "172.16.0.0/12" and "192.168.0.0/16" or non-rfc-1918 address spaces used in the VPC.
                    items:
                      type: string
                    type: array
                  usage:
                    description: |-
                      The type of usage set for this InternalRange.
                      Possible values are: FOR_VPC, EXTERNAL_TO_VPC, FOR_MIGRATION.
                    type: string
                type: object
              initProvider:
                description: |-
                  THIS IS A BETA FIELD. It will be honored
                  unless the Management Policies feature flag is disabled.
                  InitProvider holds the same fields as ForProvider, with the exception
                  of Identifier and other resource reference fields. The fields that are
                  in InitProvider are merged into ForProvider when the resource is created.
                  The same fields are also added to the terraform ignore_changes hook, to
                  avoid updating them after creation. This is useful for fields that are
                  required on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them, like an
                  autoscaler.
                properties:
                  allocationOptions:
                    description: |-
                      Options for automatically allocating a free range with a size given by prefixLength.
                      Structure is documented below.
                    properties:
                      allocationStrategy:
                        description: |-
                          Optional. Sets the strategy used to automatically find a free range of a size given by prefixLength. Can be set only when trying to create a reservation that automatically finds the free range to reserve.
                          Possible values are: RANDOM, FIRST_AVAILABLE, RANDOM_FIRST_N_AVAILABLE, FIRST_SMALLEST_FITTING.
                        type: string
                      firstAvailableRangesLookupSize:
                        description: |-
                          Must be set when allocation_strategy is RANDOM_FIRST_N_AVAILABLE, otherwise must remain unset. Defines the size of the set of free ranges from which RANDOM_FIRST_N_AVAILABLE strategy randomy selects one,
                          in other words it sets the N in the RANDOM_FIRST_N_AVAILABLE.
                        type: number
                    type: object
                  description:
                    description: An optional description of this resource.
                    type: string
                  excludeCidrRanges:
                    description: |-
                      Optional. List of IP CIDR ranges to be excluded. Resulting reserved Internal Range will not overlap with any CIDR blocks mentioned in this list.
                      Only IPv4 CIDR ranges are supported.
                    items:
                      type: string
                    type: array
                  immutable:
                    description: Immutable ranges cannot have their fields modified,
                      except for labels and description.
                    type: boolean
                  ipCidrRange:
                    description: |-
                      The IP range that this internal range defines.
                      NOTE: IPv6 ranges are limited to usage=EXTERNAL_TO_VPC and peering=FOR_SELF
                      NOTE: For IPv6 Ranges this field is compulsory, i.e. the address range must be specified explicitly.
                    type: string
                  labels:
                    additionalProperties:
                      type: string
                    description: User-defined labels.
                    type: object
                    x-kubernetes-map-type: granular
                  migration:
                    description: |-
                      Specification for migration with source and target resource names.
                      Structure is documented below.
                    properties:
                      source:
                        description: |-
                          Resource path as an URI of the source resource, for example a subnet.
                          The project for the source resource should match the project for the
                          InternalRange.
                          An example /projects/{project}/regions/{region}/subnetworks/{subnet}
                        type: string
                      sourceRef:
                        description: Reference to a Subnetwork in compute to populate
                          source.
                        properties:
                          name:
                            description: Name of the referenced object.
                            type: string
                          policy:
                            description: Policies for referencing.
                            properties:
                              resolution:
                                default: Required
                                description: |-
                                  Resolution specifies whether resolution of this reference is required.
                                  The default is 'Required', which means the reconcile will fail if the
                                  reference cannot be resolved. 'Optional' means this reference will be
                                  a no-op if it cannot be resolved.
                                enum:
                                - Required
                                - Optional
                                type: string
                              resolve:
                                description: |-
                                  Resolve specifies when this reference should be resolved. The default
                                  is 'IfNotPresent', which will attempt to resolve the reference only when
                                  the corresponding field is not present. Use 'Always' to resolve the
                                  reference on every reconcile.
                                enum:
                                - Always
                                - IfNotPresent
                                type: string
                            type: object
                        required:
                        - name
                        type: object
                      sourceSelector:
                        description: Selector for a Subnetwork in compute to populate
                          source.
                        properties:
                          matchControllerRef:
                            description: |-
                              MatchControllerRef ensures an object with the same controller reference
                              as the selecting object is selected.
                            type: boolean
                          matchLabels:
                            additionalProperties:
                              type: string
                            description: MatchLabels ensures an object with matching
                              labels is selected.
                            type: object
                          policy:
                            description: Policies for selection.
                            properties:
                              resolution:
                                default: Required
                                description: |-
                                  Resolution specifies whether resolution of this reference is required.
                                  The default is 'Required', which means the reconcile will fail if the
                                  reference cannot be resolved. 'Optional' means this reference will be
                                  a no-op if it cannot be resolved.
                                enum:
                                - Required
                                - Optional
                                type: string
                              resolve:
                                description: |-
                                  Resolve specifies when this reference should be resolved. The default
                                  is 'IfNotPresent', which will attempt to resolve the reference only when
                                  the corresponding field is not present. Use 'Always' to resolve the
                                  reference on every reconcile.
                                enum:
                                - Always
                                - IfNotPresent
                                type: string
                            type: object
                        type: object
                      target:
                        description: |-
                          Resource path of the target resource. The target project can be
                          different, as in the cases when migrating to peer networks. The resource
                          may not exist yet.
                          For example /projects/{project}/regions/{region}/subnetworks/{subnet}
                        type: string
                    type: object
                  network:
                    description: 'Fully-qualified URL of the network that this route
                      applies to, for example: projects/my-project/global/networks/my-network.'
                    type: string
                  networkRef:
                    description: Reference to a Network in compute to populate network.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  networkSelector:
                    description: Selector for a Network in compute to populate network.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  overlaps:
                    description: |-
                      Optional. Types of resources that are allowed to overlap with the current internal range.
                      Each value may be one of: OVERLAP_ROUTE_RANGE, OVERLAP_EXISTING_SUBNET_RANGE.
                    items:
                      type: string
                    type: array
                  peering:
                    description: |-
                      The type of peering set for this internal range.
                      Possible values are: FOR_SELF, FOR_PEER, NOT_SHARED.
                    type: string
                  prefixLength:
                    description: |-
                      An alternate to ipCidrRange. Can be set when trying to create a reservation that automatically finds a free range of the given size.
                      If both ipCidrRange and prefixLength are set, there is an error if the range sizes do not match. Can also be used during updates to change the range size.
                      NOTE: For IPv6 this field only works if ip_cidr_range is set as well, and both fields must match. In other words, with IPv6 this field only works as
                      a redundant parameter.
                    type: number
                  project:
                    description: |-
                      The ID of the project in which the resource belongs.
                      If it is not provided, the provider project is used.
                    type: string
                  targetCidrRange:
                    description: |-
                      Optional. Can be set to narrow down or pick a different address space while searching for a free range.
                      If not set, defaults to the "10.0.0.0/8" address space. This can be used to search in other rfc-1918 address spaces like "172.16.0.0/12" and "192.168.0.0/16" or non-rfc-1918 address spaces used in the VPC.
                    items:
                      type: string
                    type: array
                  usage:
                    description: |-
                      The type of usage set for this InternalRange.
                      Possible values are: FOR_VPC, EXTERNAL_TO_VPC, FOR_MIGRATION.
                    type: string
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  This field is planned to replace the DeletionPolicy field in a future
                  release. Currently, both could be set independently and non-default
                  values would be honored if the feature flag is enabled. If both are
                  custom, the DeletionPolicy field will be ignored.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
            x-kubernetes-validations:
            - message: spec.forProvider.peering is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.peering)
                || (has(self.initProvider) && has(self.initProvider.peering))'
            - message: spec.forProvider.usage is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.usage)
                || (has(self.initProvider) && has(self.initProvider.usage))'
          status:
            description: InternalRangeStatus defines the observed state of InternalRange.
            properties:
              atProvider:
                properties:
                  allocationOptions:
                    description: |-
                      Options for automatically allocating a free range with a size given by prefixLength.
                      Structure is documented below.
                    properties:
                      allocationStrategy:
                        description: |-
                          Optional. Sets the strategy used to automatically find a free range of a size given by prefixLength. Can be set only when trying to create a reservation that automatically finds the free range to reserve.
                          Possible values are: RANDOM, FIRST_AVAILABLE, RANDOM_FIRST_N_AVAILABLE, FIRST_SMALLEST_FITTING.
                        type: string
                      firstAvailableRangesLookupSize:
                        description: |-
                          Must be set when allocation_strategy is RANDOM_FIRST_N_AVAILABLE, otherwise must remain unset. Defines the size of the set of free ranges from which RANDOM_FIRST_N_AVAILABLE strategy randomy selects one,
                          in other words it sets the N in the RANDOM_FIRST_N_AVAILABLE.
                        type: number
                    type: object
                  description:
                    description: An optional description of this resource.
                    type: string
                  effectiveLabels:
                    additionalProperties:
                      type: string
                    description: for all of the labels present on the resource.
                    type: object
                    x-kubernetes-map-type: granular
                  excludeCidrRanges:
                    description: |-
                      Optional. List of IP CIDR ranges to be excluded. Resulting reserved Internal Range will not overlap with any CIDR blocks mentioned in this list.
                      Only IPv4 CIDR ranges are supported.
                    items:
                      type: string
                    type: array
                  id:
                    description: an identifier for the resource with format projects/{{project}}/locations/global/internalRanges/{{name}}
                    type: string
                  immutable:
                    description: Immutable ranges cannot have their fields modified,
                      except for labels and description.
                    type: boolean
                  ipCidrRange:
                    description: |-
                      The IP range that this internal range defines.
                      NOTE: IPv6 ranges are limited to usage=EXTERNAL_TO_VPC and peering=FOR_SELF
                      NOTE: For IPv6 Ranges this field is compulsory, i.e. the address range must be specified explicitly.
                    type: string
                  labels:
                    additionalProperties:
                      type: string
                    description: User-defined labels.
                    type: object
                    x-kubernetes-map-type: granular
                  migration:
                    description: |-
                      Specification for migration with source and target resource names.
                      Structure is documented below.
                    properties:
                      source:
                        description: |-
                          Resource path as an URI of the source resource, for example a subnet.
                          The project for the source resource should match the project for the
                          InternalRange.
                          An example /projects/{project}/regions/{region}/subnetworks/{subnet}
                        type: string
                      target:
                        description: |-
                          Resource path of the target resource. The target project can be
                          different, as in the cases when migrating to peer networks. The resource
                          may not exist yet.
                          For example /projects/{project}/regions/{region}/subnetworks/{subnet}
                        type: string
                    type: object
                  network:
                    description: 'Fully-qualified URL of the network that this route
                      applies to, for example: projects/my-project/global/networks/my-network.'
                    type: string
                  overlaps:
                    description: |-
                      Optional. Types of resources that are allowed to overlap with the current internal range.
                      Each value may be one of: OVERLAP_ROUTE_RANGE, OVERLAP_EXISTING_SUBNET_RANGE.
                    items:
                      type: string
                    type: array
                  peering:
                    description: |-
                      The type of peering set for this internal range.
                      Possible values are: FOR_SELF, FOR_PEER, NOT_SHARED.
                    type: string
                  prefixLength:
                    description: |-
                      An alternate to ipCidrRange. Can be set when trying to create a reservation that automatically finds a free range of the given size.
                      If both ipCidrRange and prefixLength are set, there is an error if the range sizes do not match. Can also be used during updates to change the range size.
                      NOTE: For IPv6 this field only works if ip_cidr_range is set as well, and both fields must match. In other words, with IPv6 this field only works as
                      a redundant parameter.
                    type: number
                  project:
                    description: |-
                      The ID of the project in which the resource belongs.
                      If it is not provided, the provider project is used.
                    type: string
                  targetCidrRange:
                    description: |-
                      Optional. Can be set to narrow down or pick a different address space while searching for a free range.
                      If not set, defaults to the "10.0.0.0/8" address space. This can be used to search in other rfc-1918 address spaces like "172.16.0.0/12" and "192.168.0.0/16" or non-rfc-1918 address spaces used in the VPC.
                    items:
                      type: string
                    type: array
                  terraformLabels:
                    additionalProperties:
                      type: string
                    description: |-
                      The combination of labels configured directly on the resource
                      and default labels configured on the provider.
                    type: object
                    x-kubernetes-map-type: granular
                  usage:
                    description: |-
                      The type of usage set for this InternalRange.
                      Possible values are: FOR_VPC, EXTERNAL_TO_VPC, FOR_MIGRATION.
                    type: string
                  users:
                    description: |-
                      Output only. The list of resources that refer to this internal range.
                      Resources that use the internal range for their range allocation are referred to as users of the range.
                      Other resources mark themselves as users while doing so by creating a reference to this internal range. Having a user, based on this reference, prevents deletion of the internal range referred to. Can be empty.
                    items:
                      type: string
                    type: array
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: |-
                  ObservedGeneration is the latest metadata.generation
                  which resulted in either a ready state, or stalled due to error
                  it can not recover from without human intervention.
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
