---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.11.1
  creationTimestamp: null
  name: intents.dialogflowcx.gcp.upbound.io
spec:
  group: dialogflowcx.gcp.upbound.io
  names:
    categories:
    - crossplane
    - managed
    - gcp
    kind: Intent
    listKind: IntentList
    plural: intents
    singular: intent
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: Intent is the Schema for the Intents API. An intent represents
          a user's intent to interact with a conversational agent.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: IntentSpec defines the desired state of Intent
            properties:
              deletionPolicy:
                default: Delete
                description: DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource.
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  description:
                    description: 'Human readable description for better understanding
                      an intent like its scope, content, result etc. Maximum character
                      limit: 140 characters.'
                    type: string
                  displayName:
                    description: The human-readable name of the intent, unique within
                      the agent.
                    type: string
                  isFallback:
                    description: Indicates whether this is a fallback intent. Currently
                      only default fallback intent is allowed in the agent, which
                      is added upon agent creation. Adding training phrases to fallback
                      intent is useful in the case of requests that are mistakenly
                      matched, since training phrases assigned to fallback intents
                      act as negative examples that triggers no-match event.
                    type: boolean
                  labels:
                    additionalProperties:
                      type: string
                    description: 'The key/value metadata to label an intent. Labels
                      can contain lowercase letters, digits and the symbols ''-''
                      and ''_''. International characters are allowed, including letters
                      from unicase alphabets. Keys must start with a letter. Keys
                      and values can be no longer than 63 characters and no more than
                      128 bytes. Prefix "sys-" is reserved for Dialogflow defined
                      labels. Currently allowed Dialogflow defined labels include:
                      * sys-head * sys-contextual The above labels do not require
                      value. "sys-head" means the intent is a head intent. "sys.contextual"
                      means the intent is a contextual intent. An object containing
                      a list of "key": value pairs. Example: { "name": "wrench", "mass":
                      "1.3kg", "count": "3" }.'
                    type: object
                  languageCode:
                    description: 'The language of the following fields in intent:
                      Intent.training_phrases.parts.text If not specified, the agent''s
                      default language is used. Many languages are supported. Note:
                      languages must be enabled in the agent before they can be used.'
                    type: string
                  parameters:
                    description: The collection of parameters associated with the
                      intent. Structure is documented below.
                    items:
                      properties:
                        entityType:
                          description: 'The entity type of the parameter. Format:
                            projects/-/locations/-/agents/-/entityTypes/ for system
                            entity types (for example, projects/-/locations/-/agents/-/entityTypes/sys.date),
                            or projects//locations//agents//entityTypes/ for developer
                            entity types.'
                          type: string
                        id:
                          description: The unique identifier of the parameter. This
                            field is used by training phrases to annotate their parts.
                          type: string
                        isList:
                          description: Indicates whether the parameter represents
                            a list of values.
                          type: boolean
                        redact:
                          description: 'Indicates whether the parameter content should
                            be redacted in log. If redaction is enabled, the parameter
                            content will be replaced by parameter name during logging.
                            Note: the parameter content is subject to redaction if
                            either parameter level redaction or entity type level
                            redaction is enabled.'
                          type: boolean
                      required:
                      - entityType
                      - id
                      type: object
                    type: array
                  parent:
                    description: 'The agent to create an intent for. Format: projects//locations//agents/.'
                    type: string
                  parentRef:
                    description: Reference to a Agent in dialogflowcx to populate
                      parent.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  parentSelector:
                    description: Selector for a Agent in dialogflowcx to populate
                      parent.
                    properties:
                      matchControllerRef:
                        description: MatchControllerRef ensures an object with the
                          same controller reference as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  priority:
                    description: The priority of this intent. Higher numbers represent
                      higher priorities. If the supplied value is unspecified or 0,
                      the service translates the value to 500,000, which corresponds
                      to the Normal priority in the console. If the supplied value
                      is negative, the intent is ignored in runtime detect intent
                      requests.
                    type: number
                  trainingPhrases:
                    description: The collection of training phrases the agent is trained
                      on to identify the intent. Structure is documented below.
                    items:
                      properties:
                        parts:
                          description: 'The ordered list of training phrase parts.
                            The parts are concatenated in order to form the training
                            phrase. Note: The API does not automatically annotate
                            training phrases like the Dialogflow Console does. Note:
                            Do not forget to include whitespace at part boundaries,
                            so the training phrase is well formatted when the parts
                            are concatenated. If the training phrase does not need
                            to be annotated with parameters, you just need a single
                            part with only the Part.text field set. If you want to
                            annotate the training phrase, you must create multiple
                            parts, where the fields of each part are populated in
                            one of two ways: Part.text is set to a part of the phrase
                            that has no parameters. Part.text is set to a part of
                            the phrase that you want to annotate, and the parameterId
                            field is set. Structure is documented below.'
                          items:
                            properties:
                              parameterId:
                                description: The parameter used to annotate this part
                                  of the training phrase. This field is required for
                                  annotated parts of the training phrase.
                                type: string
                              text:
                                description: The text for this part.
                                type: string
                            required:
                            - text
                            type: object
                          type: array
                        repeatCount:
                          description: Indicates how many times this example was added
                            to the intent.
                          type: number
                      required:
                      - parts
                      type: object
                    type: array
                required:
                - displayName
                type: object
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: IntentStatus defines the observed state of Intent.
            properties:
              atProvider:
                properties:
                  id:
                    description: an identifier for the resource with format {{parent}}/intents/{{name}}
                    type: string
                  name:
                    description: 'The unique identifier of the intent. Format: projects//locations//agents//intents/.'
                    type: string
                  trainingPhrases:
                    description: The collection of training phrases the agent is trained
                      on to identify the intent. Structure is documented below.
                    items:
                      properties:
                        id:
                          description: The unique identifier of the training phrase.
                          type: string
                      type: object
                    type: array
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
