---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.13.0
  name: backups.alloydb.gcp.upbound.io
spec:
  group: alloydb.gcp.upbound.io
  names:
    categories:
    - crossplane
    - managed
    - gcp
    kind: Backup
    listKind: BackupList
    plural: backups
    singular: backup
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: Backup is the Schema for the Backups API. An AlloyDB Backup.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: BackupSpec defines the desired state of Backup
            properties:
              deletionPolicy:
                default: Delete
                description: 'DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource. This field is planned to be deprecated
                  in favor of the ManagementPolicies field in a future release. Currently,
                  both could be set independently and non-default values would be
                  honored if the feature flag is enabled. See the design doc for more
                  information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223'
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  annotations:
                    additionalProperties:
                      type: string
                    description: 'Annotations to allow client tools to store small
                      amount of arbitrary data. This is distinct from labels. https://google.aip.dev/128
                      An object containing a list of "key": value pairs. Example:
                      { "name": "wrench", "mass": "1.3kg", "count": "3" }.'
                    type: object
                  clusterName:
                    description: The full resource name of the backup source cluster
                      (e.g., projects/{project}/locations/{location}/clusters/{clusterId}).
                    type: string
                  clusterNameRef:
                    description: Reference to a Cluster in alloydb to populate clusterName.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  clusterNameSelector:
                    description: Selector for a Cluster in alloydb to populate clusterName.
                    properties:
                      matchControllerRef:
                        description: MatchControllerRef ensures an object with the
                          same controller reference as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  description:
                    description: User-provided description of the backup.
                    type: string
                  displayName:
                    description: User-settable and human-readable display name for
                      the Backup.
                    type: string
                  encryptionConfig:
                    description: EncryptionConfig describes the encryption config
                      of a cluster or a backup that is encrypted with a CMEK (customer-managed
                      encryption key). Structure is documented below.
                    items:
                      properties:
                        kmsKeyName:
                          description: 'The fully-qualified resource name of the KMS
                            key. Each Cloud KMS key is regionalized and has the following
                            format: projects/[PROJECT]/locations/[REGION]/keyRings/[RING]/cryptoKeys/[KEY_NAME].'
                          type: string
                      type: object
                    type: array
                  labels:
                    additionalProperties:
                      type: string
                    description: 'User-defined labels for the alloydb backup. An object
                      containing a list of "key": value pairs. Example: { "name":
                      "wrench", "mass": "1.3kg", "count": "3" }.'
                    type: object
                  location:
                    description: The location where the alloydb backup should reside.
                    type: string
                  project:
                    description: The ID of the project in which the resource belongs.
                      If it is not provided, the provider project is used.
                    type: string
                  type:
                    description: 'The backup type, which suggests the trigger for
                      the backup. Possible values are: TYPE_UNSPECIFIED, ON_DEMAND,
                      AUTOMATED, CONTINUOUS.'
                    type: string
                required:
                - location
                type: object
              initProvider:
                description: THIS IS AN ALPHA FIELD. Do not use it in production.
                  It is not honored unless the relevant Crossplane feature flag is
                  enabled, and may be changed or removed without notice. InitProvider
                  holds the same fields as ForProvider, with the exception of Identifier
                  and other resource reference fields. The fields that are in InitProvider
                  are merged into ForProvider when the resource is created. The same
                  fields are also added to the terraform ignore_changes hook, to avoid
                  updating them after creation. This is useful for fields that are
                  required on creation, but we do not desire to update them after
                  creation, for example because of an external controller is managing
                  them, like an autoscaler.
                properties:
                  annotations:
                    additionalProperties:
                      type: string
                    description: 'Annotations to allow client tools to store small
                      amount of arbitrary data. This is distinct from labels. https://google.aip.dev/128
                      An object containing a list of "key": value pairs. Example:
                      { "name": "wrench", "mass": "1.3kg", "count": "3" }.'
                    type: object
                  description:
                    description: User-provided description of the backup.
                    type: string
                  displayName:
                    description: User-settable and human-readable display name for
                      the Backup.
                    type: string
                  encryptionConfig:
                    description: EncryptionConfig describes the encryption config
                      of a cluster or a backup that is encrypted with a CMEK (customer-managed
                      encryption key). Structure is documented below.
                    items:
                      properties:
                        kmsKeyName:
                          description: 'The fully-qualified resource name of the KMS
                            key. Each Cloud KMS key is regionalized and has the following
                            format: projects/[PROJECT]/locations/[REGION]/keyRings/[RING]/cryptoKeys/[KEY_NAME].'
                          type: string
                      type: object
                    type: array
                  labels:
                    additionalProperties:
                      type: string
                    description: 'User-defined labels for the alloydb backup. An object
                      containing a list of "key": value pairs. Example: { "name":
                      "wrench", "mass": "1.3kg", "count": "3" }.'
                    type: object
                  project:
                    description: The ID of the project in which the resource belongs.
                      If it is not provided, the provider project is used.
                    type: string
                  type:
                    description: 'The backup type, which suggests the trigger for
                      the backup. Possible values are: TYPE_UNSPECIFIED, ON_DEMAND,
                      AUTOMATED, CONTINUOUS.'
                    type: string
                type: object
              managementPolicies:
                default:
                - '*'
                description: 'THIS IS AN ALPHA FIELD. Do not use it in production.
                  It is not honored unless the relevant Crossplane feature flag is
                  enabled, and may be changed or removed without notice. ManagementPolicies
                  specify the array of actions Crossplane is allowed to take on the
                  managed and external resources. This field is planned to replace
                  the DeletionPolicy field in a future release. Currently, both could
                  be set independently and non-default values would be honored if
                  the feature flag is enabled. If both are custom, the DeletionPolicy
                  field will be ignored. See the design doc for more information:
                  https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md'
                items:
                  description: A ManagementAction represents an action that the Crossplane
                    controllers can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: BackupStatus defines the observed state of Backup.
            properties:
              atProvider:
                properties:
                  annotations:
                    additionalProperties:
                      type: string
                    description: 'Annotations to allow client tools to store small
                      amount of arbitrary data. This is distinct from labels. https://google.aip.dev/128
                      An object containing a list of "key": value pairs. Example:
                      { "name": "wrench", "mass": "1.3kg", "count": "3" }.'
                    type: object
                  clusterName:
                    description: The full resource name of the backup source cluster
                      (e.g., projects/{project}/locations/{location}/clusters/{clusterId}).
                    type: string
                  clusterUid:
                    description: Output only. The system-generated UID of the cluster
                      which was used to create this resource.
                    type: string
                  createTime:
                    description: 'Output only. Create time stamp. A timestamp in RFC3339
                      UTC "Zulu" format, with nanosecond resolution and up to nine
                      fractional digits. Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".'
                    type: string
                  deleteTime:
                    description: 'Output only. Delete time stamp. A timestamp in RFC3339
                      UTC "Zulu" format, with nanosecond resolution and up to nine
                      fractional digits. Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".'
                    type: string
                  description:
                    description: User-provided description of the backup.
                    type: string
                  displayName:
                    description: User-settable and human-readable display name for
                      the Backup.
                    type: string
                  effectiveAnnotations:
                    additionalProperties:
                      type: string
                    description: for all of the annotations present on the resource.
                    type: object
                  effectiveLabels:
                    additionalProperties:
                      type: string
                    description: for all of the labels present on the resource.
                    type: object
                  encryptionConfig:
                    description: EncryptionConfig describes the encryption config
                      of a cluster or a backup that is encrypted with a CMEK (customer-managed
                      encryption key). Structure is documented below.
                    items:
                      properties:
                        kmsKeyName:
                          description: 'The fully-qualified resource name of the KMS
                            key. Each Cloud KMS key is regionalized and has the following
                            format: projects/[PROJECT]/locations/[REGION]/keyRings/[RING]/cryptoKeys/[KEY_NAME].'
                          type: string
                      type: object
                    type: array
                  encryptionInfo:
                    description: EncryptionInfo describes the encryption information
                      of a cluster or a backup. Structure is documented below.
                    items:
                      properties:
                        encryptionType:
                          description: (Output) Output only. Type of encryption.
                          type: string
                        kmsKeyVersions:
                          description: (Output) Output only. Cloud KMS key versions
                            that are being used to protect the database or the backup.
                          items:
                            type: string
                          type: array
                      type: object
                    type: array
                  etag:
                    description: For Resource freshness validation (https://google.aip.dev/154)
                    type: string
                  expiryQuantity:
                    description: Output only. The QuantityBasedExpiry of the backup,
                      specified by the backup's retention policy. Once the expiry
                      quantity is over retention, the backup is eligible to be garbage
                      collected. Structure is documented below.
                    items:
                      properties:
                        retentionCount:
                          description: (Output) Output only. The backup's position
                            among its backups with the same source cluster and type,
                            by descending chronological order create time (i.e. newest
                            first).
                          type: number
                        totalRetentionCount:
                          description: (Output) Output only. The length of the quantity-based
                            queue, specified by the backup's retention policy.
                          type: number
                      type: object
                    type: array
                  expiryTime:
                    description: Output only. The time at which after the backup is
                      eligible to be garbage collected. It is the duration specified
                      by the backup's retention policy, added to the backup's createTime.
                    type: string
                  id:
                    description: an identifier for the resource with format projects/{{project}}/locations/{{location}}/backups/{{backup_id}}
                    type: string
                  labels:
                    additionalProperties:
                      type: string
                    description: 'User-defined labels for the alloydb backup. An object
                      containing a list of "key": value pairs. Example: { "name":
                      "wrench", "mass": "1.3kg", "count": "3" }.'
                    type: object
                  location:
                    description: The location where the alloydb backup should reside.
                    type: string
                  name:
                    description: 'Output only. The name of the backup resource with
                      the format: * projects/{project}/locations/{region}/backups/{backupId}'
                    type: string
                  project:
                    description: The ID of the project in which the resource belongs.
                      If it is not provided, the provider project is used.
                    type: string
                  reconciling:
                    description: Output only. Reconciling (https://google.aip.dev/128#reconciliation),
                      if true, indicates that the service is actively updating the
                      resource. This can happen due to user-triggered updates or system
                      actions like failover or maintenance.
                    type: boolean
                  sizeBytes:
                    description: Output only. The size of the backup in bytes.
                    type: string
                  state:
                    description: Output only. The current state of the backup.
                    type: string
                  terraformLabels:
                    additionalProperties:
                      type: string
                    description: The combination of labels configured directly on
                      the resource and default labels configured on the provider.
                    type: object
                  type:
                    description: 'The backup type, which suggests the trigger for
                      the backup. Possible values are: TYPE_UNSPECIFIED, ON_DEMAND,
                      AUTOMATED, CONTINUOUS.'
                    type: string
                  uid:
                    description: Output only. The system-generated UID of the resource.
                      The UID is assigned when the resource is created, and it is
                      retained until it is deleted.
                    type: string
                  updateTime:
                    description: 'Output only. Update time stamp. A timestamp in RFC3339
                      UTC "Zulu" format, with nanosecond resolution and up to nine
                      fractional digits. Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".'
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
