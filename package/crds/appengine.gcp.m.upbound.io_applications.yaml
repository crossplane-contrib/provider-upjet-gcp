---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.18.0
  name: applications.appengine.gcp.m.upbound.io
spec:
  group: appengine.gcp.m.upbound.io
  names:
    categories:
    - crossplane
    - managed
    - gcp
    kind: Application
    listKind: ApplicationList
    plural: applications
    singular: application
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: Application is the Schema for the Applications API. Allows management
          of an App Engine application.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: ApplicationSpec defines the desired state of Application
            properties:
              forProvider:
                properties:
                  authDomain:
                    description: The domain to authenticate users with when using
                      App Engine's User API.
                    type: string
                  databaseType:
                    description: |-
                      The type of the Cloud Firestore or Cloud Datastore database associated with this application.
                      Can be CLOUD_FIRESTORE or CLOUD_DATASTORE_COMPATIBILITY for new
                      instances.  To support old instances, the value CLOUD_DATASTORE is accepted by the provider, but will be rejected by the API.
                      To create a Cloud Firestore database without creating an App Engine application, use the
                      google_firestore_database
                      resource instead.
                    type: string
                  featureSettings:
                    description: 'A block of optional settings to configure specific
                      App Engine features:'
                    properties:
                      splitHealthChecks:
                        description: |-
                          Set to false to use the legacy health check instead of the readiness
                          and liveness checks.
                        type: boolean
                    type: object
                  iap:
                    description: Settings for enabling Cloud Identity Aware Proxy
                    properties:
                      enabled:
                        description: |-
                          Whether the serving infrastructure will authenticate and authorize all incoming requests.
                          (default is false)
                        type: boolean
                      oauth2ClientId:
                        description: OAuth2 client ID to use for the authentication
                          flow.
                        type: string
                      oauth2ClientSecretSecretRef:
                        description: |-
                          OAuth2 client secret to use for the authentication flow.
                          The SHA-256 hash of the value is returned in the oauth2ClientSecretSha256 field.
                        properties:
                          key:
                            type: string
                          name:
                            description: Name of the secret.
                            type: string
                        required:
                        - key
                        - name
                        type: object
                    type: object
                  locationId:
                    description: |-
                      The location
                      to serve the app from.
                    type: string
                  project:
                    description: |-
                      The project ID to create the application under.
                      ~>NOTE: GCP only accepts project ID, not project number. If you are using number,
                      you may get a "Permission denied" error.
                    type: string
                  projectRef:
                    description: Reference to a Project in cloudplatform to populate
                      project.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      namespace:
                        description: Namespace of the referenced object
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  projectSelector:
                    description: Selector for a Project in cloudplatform to populate
                      project.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      namespace:
                        description: Namespace for the selector
                        type: string
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  servingStatus:
                    description: The serving status of the app.
                    type: string
                type: object
              initProvider:
                description: |-
                  THIS IS A BETA FIELD. It will be honored
                  unless the Management Policies feature flag is disabled.
                  InitProvider holds the same fields as ForProvider, with the exception
                  of Identifier and other resource reference fields. The fields that are
                  in InitProvider are merged into ForProvider when the resource is created.
                  The same fields are also added to the terraform ignore_changes hook, to
                  avoid updating them after creation. This is useful for fields that are
                  required on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them, like an
                  autoscaler.
                properties:
                  authDomain:
                    description: The domain to authenticate users with when using
                      App Engine's User API.
                    type: string
                  databaseType:
                    description: |-
                      The type of the Cloud Firestore or Cloud Datastore database associated with this application.
                      Can be CLOUD_FIRESTORE or CLOUD_DATASTORE_COMPATIBILITY for new
                      instances.  To support old instances, the value CLOUD_DATASTORE is accepted by the provider, but will be rejected by the API.
                      To create a Cloud Firestore database without creating an App Engine application, use the
                      google_firestore_database
                      resource instead.
                    type: string
                  featureSettings:
                    description: 'A block of optional settings to configure specific
                      App Engine features:'
                    properties:
                      splitHealthChecks:
                        description: |-
                          Set to false to use the legacy health check instead of the readiness
                          and liveness checks.
                        type: boolean
                    type: object
                  iap:
                    description: Settings for enabling Cloud Identity Aware Proxy
                    properties:
                      enabled:
                        description: |-
                          Whether the serving infrastructure will authenticate and authorize all incoming requests.
                          (default is false)
                        type: boolean
                      oauth2ClientId:
                        description: OAuth2 client ID to use for the authentication
                          flow.
                        type: string
                      oauth2ClientSecretSecretRef:
                        description: |-
                          OAuth2 client secret to use for the authentication flow.
                          The SHA-256 hash of the value is returned in the oauth2ClientSecretSha256 field.
                        properties:
                          key:
                            type: string
                          name:
                            description: Name of the secret.
                            type: string
                        required:
                        - key
                        - name
                        type: object
                    required:
                    - oauth2ClientSecretSecretRef
                    type: object
                  locationId:
                    description: |-
                      The location
                      to serve the app from.
                    type: string
                  project:
                    description: |-
                      The project ID to create the application under.
                      ~>NOTE: GCP only accepts project ID, not project number. If you are using number,
                      you may get a "Permission denied" error.
                    type: string
                  projectRef:
                    description: Reference to a Project in cloudplatform to populate
                      project.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      namespace:
                        description: Namespace of the referenced object
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  projectSelector:
                    description: Selector for a Project in cloudplatform to populate
                      project.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      namespace:
                        description: Namespace for the selector
                        type: string
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  servingStatus:
                    description: The serving status of the app.
                    type: string
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  kind: ClusterProviderConfig
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  kind:
                    description: Kind of the referenced object.
                    type: string
                  name:
                    description: Name of the referenced object.
                    type: string
                required:
                - kind
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                required:
                - name
                type: object
            required:
            - forProvider
            type: object
            x-kubernetes-validations:
            - message: spec.forProvider.locationId is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.locationId)
                || (has(self.initProvider) && has(self.initProvider.locationId))'
          status:
            description: ApplicationStatus defines the observed state of Application.
            properties:
              atProvider:
                properties:
                  appId:
                    description: Identifier of the app, usually {PROJECT_ID}
                    type: string
                  authDomain:
                    description: The domain to authenticate users with when using
                      App Engine's User API.
                    type: string
                  codeBucket:
                    description: The GCS bucket code is being stored in for this app.
                    type: string
                  databaseType:
                    description: |-
                      The type of the Cloud Firestore or Cloud Datastore database associated with this application.
                      Can be CLOUD_FIRESTORE or CLOUD_DATASTORE_COMPATIBILITY for new
                      instances.  To support old instances, the value CLOUD_DATASTORE is accepted by the provider, but will be rejected by the API.
                      To create a Cloud Firestore database without creating an App Engine application, use the
                      google_firestore_database
                      resource instead.
                    type: string
                  defaultBucket:
                    description: The GCS bucket content is being stored in for this
                      app.
                    type: string
                  defaultHostname:
                    description: The default hostname for this app.
                    type: string
                  featureSettings:
                    description: 'A block of optional settings to configure specific
                      App Engine features:'
                    properties:
                      splitHealthChecks:
                        description: |-
                          Set to false to use the legacy health check instead of the readiness
                          and liveness checks.
                        type: boolean
                    type: object
                  gcrDomain:
                    description: The GCR domain used for storing managed Docker images
                      for this app.
                    type: string
                  iap:
                    description: Settings for enabling Cloud Identity Aware Proxy
                    properties:
                      enabled:
                        description: |-
                          Whether the serving infrastructure will authenticate and authorize all incoming requests.
                          (default is false)
                        type: boolean
                      oauth2ClientId:
                        description: OAuth2 client ID to use for the authentication
                          flow.
                        type: string
                    type: object
                  id:
                    description: an identifier for the resource with format {{project}}
                    type: string
                  locationId:
                    description: |-
                      The location
                      to serve the app from.
                    type: string
                  name:
                    description: Unique name of the app, usually apps/{PROJECT_ID}
                    type: string
                  project:
                    description: |-
                      The project ID to create the application under.
                      ~>NOTE: GCP only accepts project ID, not project number. If you are using number,
                      you may get a "Permission denied" error.
                    type: string
                  servingStatus:
                    description: The serving status of the app.
                    type: string
                  urlDispatchRule:
                    description: A list of dispatch rule blocks. Each block has a
                      domain, path, and service field.
                    items:
                      properties:
                        domain:
                          type: string
                        path:
                          type: string
                        service:
                          type: string
                      type: object
                    type: array
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: |-
                  ObservedGeneration is the latest metadata.generation
                  which resulted in either a ready state, or stalled due to error
                  it can not recover from without human intervention.
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
