---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.11.1
  creationTimestamp: null
  name: entries.datacatalog.gcp.upbound.io
spec:
  group: datacatalog.gcp.upbound.io
  names:
    categories:
    - crossplane
    - managed
    - gcp
    kind: Entry
    listKind: EntryList
    plural: entries
    singular: entry
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: Entry is the Schema for the Entrys API. Entry Metadata.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: EntrySpec defines the desired state of Entry
            properties:
              deletionPolicy:
                default: Delete
                description: DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource.
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  description:
                    description: Entry description, which can consist of several sentences
                      or paragraphs that describe entry contents.
                    type: string
                  displayName:
                    description: Display information such as title and description.
                      A short name to identify the entry, for example, "Analytics
                      Data - Jan 2011".
                    type: string
                  entryGroup:
                    description: The name of the entry group this entry is in.
                    type: string
                  entryGroupRef:
                    description: Reference to a EntryGroup in datacatalog to populate
                      entryGroup.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  entryGroupSelector:
                    description: Selector for a EntryGroup in datacatalog to populate
                      entryGroup.
                    properties:
                      matchControllerRef:
                        description: MatchControllerRef ensures an object with the
                          same controller reference as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  entryId:
                    description: The id of the entry to create.
                    type: string
                  gcsFilesetSpec:
                    description: Specification that applies to a Cloud Storage fileset.
                      This is only valid on entries of type FILESET. Structure is
                      documented below.
                    items:
                      properties:
                        filePatterns:
                          description: 'Patterns to identify a set of files in Google
                            Cloud Storage. See Cloud Storage documentation for more
                            information. Note that bucket wildcards are currently
                            not supported. Examples of valid filePatterns:'
                          items:
                            type: string
                          type: array
                      required:
                      - filePatterns
                      type: object
                    type: array
                  linkedResource:
                    description: 'The resource this metadata entry refers to. For
                      Google Cloud Platform resources, linkedResource is the full
                      name of the resource. For example, the linkedResource for a
                      table resource from BigQuery is: //bigquery.googleapis.com/projects/projectId/datasets/datasetId/tables/tableId
                      Output only when Entry is of type in the EntryType enum. For
                      entries with userSpecifiedType, this field is optional and defaults
                      to an empty string.'
                    type: string
                  schema:
                    description: Schema of the entry (e.g. BigQuery, GoogleSQL, Avro
                      schema), as a json string. An entry might not have any schema
                      attached to it. See https://cloud.google.com/data-catalog/docs/reference/rest/v1/projects.locations.entryGroups.entries#schema
                      for what fields this schema can contain.
                    type: string
                  type:
                    description: The type of the entry. Only used for Entries with
                      types in the EntryType enum. Currently, only FILESET enum value
                      is allowed. All other entries created through Data Catalog must
                      use userSpecifiedType. Possible values are FILESET.
                    type: string
                  userSpecifiedSystem:
                    description: This field indicates the entry's source system that
                      Data Catalog does not integrate with. userSpecifiedSystem strings
                      must begin with a letter or underscore and can only contain
                      letters, numbers, and underscores; are case insensitive; must
                      be at least 1 character and at most 64 characters long.
                    type: string
                  userSpecifiedType:
                    description: Entry type if it does not fit any of the input-allowed
                      values listed in EntryType enum above. When creating an entry,
                      users should check the enum values first, if nothing matches
                      the entry to be created, then provide a custom value, for example
                      "my_special_type". userSpecifiedType strings must begin with
                      a letter or underscore and can only contain letters, numbers,
                      and underscores; are case insensitive; must be at least 1 character
                      and at most 64 characters long.
                    type: string
                required:
                - entryId
                type: object
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: EntryStatus defines the observed state of Entry.
            properties:
              atProvider:
                properties:
                  bigqueryDateShardedSpec:
                    description: 'Specification for a group of BigQuery tables with
                      name pattern [prefix]YYYYMMDD. Context: https://cloud.google.com/bigquery/docs/partitioned-tables#partitioning_versus_sharding.
                      Structure is documented below.'
                    items:
                      properties:
                        dataset:
                          description: The Data Catalog resource name of the dataset
                            entry the current table belongs to, for example, projects/{project_id}/locations/{location}/entrygroups/{entryGroupId}/entries/{entryId}
                          type: string
                        shardCount:
                          description: Total number of shards.
                          type: number
                        tablePrefix:
                          description: The table name prefix of the shards. The name
                            of any given shard is [tablePrefix]YYYYMMDD, for example,
                            for shard MyTable20180101, the tablePrefix is MyTable.
                          type: string
                      type: object
                    type: array
                  bigqueryTableSpec:
                    description: Specification that applies to a BigQuery table. This
                      is only valid on entries of type TABLE. Structure is documented
                      below.
                    items:
                      properties:
                        tableSourceType:
                          description: The table source type.
                          type: string
                        tableSpec:
                          description: Spec of a BigQuery table. This field should
                            only be populated if tableSourceType is BIGQUERY_TABLE.
                            Structure is documented below.
                          items:
                            properties:
                              groupedEntry:
                                description: If the table is a dated shard, i.e.,
                                  with name pattern [prefix]YYYYMMDD, groupedEntry
                                  is the Data Catalog resource name of the date sharded
                                  grouped entry, for example, projects/{project_id}/locations/{location}/entrygroups/{entryGroupId}/entries/{entryId}.
                                  Otherwise, groupedEntry is empty.
                                type: string
                            type: object
                          type: array
                        viewSpec:
                          description: Table view specification. This field should
                            only be populated if tableSourceType is BIGQUERY_VIEW.
                            Structure is documented below.
                          items:
                            properties:
                              viewQuery:
                                description: The query that defines the table view.
                                type: string
                            type: object
                          type: array
                      type: object
                    type: array
                  gcsFilesetSpec:
                    description: Specification that applies to a Cloud Storage fileset.
                      This is only valid on entries of type FILESET. Structure is
                      documented below.
                    items:
                      properties:
                        sampleGcsFileSpecs:
                          description: Sample files contained in this fileset, not
                            all files contained in this fileset are represented here.
                            Structure is documented below.
                          items:
                            properties:
                              filePath:
                                description: The full file path
                                type: string
                              sizeBytes:
                                description: The size of the file, in bytes.
                                type: number
                            type: object
                          type: array
                      type: object
                    type: array
                  id:
                    description: an identifier for the resource with format {{name}}
                    type: string
                  integratedSystem:
                    description: This field indicates the entry's source system that
                      Data Catalog integrates with, such as BigQuery or Pub/Sub.
                    type: string
                  name:
                    description: 'The Data Catalog resource name of the entry in URL
                      format. Example: projects/{project_id}/locations/{location}/entryGroups/{entryGroupId}/entries/{entryId}.
                      Note that this Entry and its child resources may not actually
                      be stored in the location in this name.'
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
