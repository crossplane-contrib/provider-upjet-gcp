// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1beta1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type NetworkFirewallPolicyAssociationInitParameters struct {

	// The target that the firewall policy is attached to.
	// +crossplane:generate:reference:type=github.com/upbound/provider-gcp/apis/compute/v1beta1.Network
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractResourceID()
	AttachmentTarget *string `json:"attachmentTarget,omitempty" tf:"attachment_target,omitempty"`

	// Reference to a Network in compute to populate attachmentTarget.
	// +kubebuilder:validation:Optional
	AttachmentTargetRef *v1.Reference `json:"attachmentTargetRef,omitempty" tf:"-"`

	// Selector for a Network in compute to populate attachmentTarget.
	// +kubebuilder:validation:Optional
	AttachmentTargetSelector *v1.Selector `json:"attachmentTargetSelector,omitempty" tf:"-"`

	// The project for the resource
	Project *string `json:"project,omitempty" tf:"project,omitempty"`
}

type NetworkFirewallPolicyAssociationObservation struct {

	// The target that the firewall policy is attached to.
	AttachmentTarget *string `json:"attachmentTarget,omitempty" tf:"attachment_target,omitempty"`

	// The firewall policy ID of the association.
	FirewallPolicy *string `json:"firewallPolicy,omitempty" tf:"firewall_policy,omitempty"`

	// an identifier for the resource with format projects/{{project}}/global/firewallPolicies/{{firewall_policy}}/associations/{{name}}
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// The project for the resource
	Project *string `json:"project,omitempty" tf:"project,omitempty"`

	// The short name of the firewall policy of the association.
	ShortName *string `json:"shortName,omitempty" tf:"short_name,omitempty"`
}

type NetworkFirewallPolicyAssociationParameters struct {

	// The target that the firewall policy is attached to.
	// +crossplane:generate:reference:type=github.com/upbound/provider-gcp/apis/compute/v1beta1.Network
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	AttachmentTarget *string `json:"attachmentTarget,omitempty" tf:"attachment_target,omitempty"`

	// Reference to a Network in compute to populate attachmentTarget.
	// +kubebuilder:validation:Optional
	AttachmentTargetRef *v1.Reference `json:"attachmentTargetRef,omitempty" tf:"-"`

	// Selector for a Network in compute to populate attachmentTarget.
	// +kubebuilder:validation:Optional
	AttachmentTargetSelector *v1.Selector `json:"attachmentTargetSelector,omitempty" tf:"-"`

	// The firewall policy ID of the association.
	// +crossplane:generate:reference:type=github.com/upbound/provider-gcp/apis/compute/v1beta1.NetworkFirewallPolicy
	// +kubebuilder:validation:Optional
	FirewallPolicy *string `json:"firewallPolicy,omitempty" tf:"firewall_policy,omitempty"`

	// Reference to a NetworkFirewallPolicy in compute to populate firewallPolicy.
	// +kubebuilder:validation:Optional
	FirewallPolicyRef *v1.Reference `json:"firewallPolicyRef,omitempty" tf:"-"`

	// Selector for a NetworkFirewallPolicy in compute to populate firewallPolicy.
	// +kubebuilder:validation:Optional
	FirewallPolicySelector *v1.Selector `json:"firewallPolicySelector,omitempty" tf:"-"`

	// The project for the resource
	// +kubebuilder:validation:Optional
	Project *string `json:"project,omitempty" tf:"project,omitempty"`
}

// NetworkFirewallPolicyAssociationSpec defines the desired state of NetworkFirewallPolicyAssociation
type NetworkFirewallPolicyAssociationSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     NetworkFirewallPolicyAssociationParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider NetworkFirewallPolicyAssociationInitParameters `json:"initProvider,omitempty"`
}

// NetworkFirewallPolicyAssociationStatus defines the observed state of NetworkFirewallPolicyAssociation.
type NetworkFirewallPolicyAssociationStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        NetworkFirewallPolicyAssociationObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// NetworkFirewallPolicyAssociation is the Schema for the NetworkFirewallPolicyAssociations API. The Compute NetworkFirewallPolicyAssociation resource
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,gcp}
type NetworkFirewallPolicyAssociation struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              NetworkFirewallPolicyAssociationSpec   `json:"spec"`
	Status            NetworkFirewallPolicyAssociationStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// NetworkFirewallPolicyAssociationList contains a list of NetworkFirewallPolicyAssociations
type NetworkFirewallPolicyAssociationList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []NetworkFirewallPolicyAssociation `json:"items"`
}

// Repository type metadata.
var (
	NetworkFirewallPolicyAssociation_Kind             = "NetworkFirewallPolicyAssociation"
	NetworkFirewallPolicyAssociation_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: NetworkFirewallPolicyAssociation_Kind}.String()
	NetworkFirewallPolicyAssociation_KindAPIVersion   = NetworkFirewallPolicyAssociation_Kind + "." + CRDGroupVersion.String()
	NetworkFirewallPolicyAssociation_GroupVersionKind = CRDGroupVersion.WithKind(NetworkFirewallPolicyAssociation_Kind)
)

func init() {
	SchemeBuilder.Register(&NetworkFirewallPolicyAssociation{}, &NetworkFirewallPolicyAssociationList{})
}
