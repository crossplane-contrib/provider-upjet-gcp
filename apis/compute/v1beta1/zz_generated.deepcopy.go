//go:build !ignore_autogenerated

// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by controller-gen. DO NOT EDIT.

package v1beta1

import (
	"github.com/crossplane/crossplane-runtime/apis/common/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AbortInitParameters) DeepCopyInto(out *AbortInitParameters) {
	*out = *in
	if in.HTTPStatus != nil {
		in, out := &in.HTTPStatus, &out.HTTPStatus
		*out = new(float64)
		**out = **in
	}
	if in.Percentage != nil {
		in, out := &in.Percentage, &out.Percentage
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AbortInitParameters.
func (in *AbortInitParameters) DeepCopy() *AbortInitParameters {
	if in == nil {
		return nil
	}
	out := new(AbortInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AbortObservation) DeepCopyInto(out *AbortObservation) {
	*out = *in
	if in.HTTPStatus != nil {
		in, out := &in.HTTPStatus, &out.HTTPStatus
		*out = new(float64)
		**out = **in
	}
	if in.Percentage != nil {
		in, out := &in.Percentage, &out.Percentage
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AbortObservation.
func (in *AbortObservation) DeepCopy() *AbortObservation {
	if in == nil {
		return nil
	}
	out := new(AbortObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AbortParameters) DeepCopyInto(out *AbortParameters) {
	*out = *in
	if in.HTTPStatus != nil {
		in, out := &in.HTTPStatus, &out.HTTPStatus
		*out = new(float64)
		**out = **in
	}
	if in.Percentage != nil {
		in, out := &in.Percentage, &out.Percentage
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AbortParameters.
func (in *AbortParameters) DeepCopy() *AbortParameters {
	if in == nil {
		return nil
	}
	out := new(AbortParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AccessConfigInitParameters) DeepCopyInto(out *AccessConfigInitParameters) {
	*out = *in
	if in.NATIP != nil {
		in, out := &in.NATIP, &out.NATIP
		*out = new(string)
		**out = **in
	}
	if in.NetworkTier != nil {
		in, out := &in.NetworkTier, &out.NetworkTier
		*out = new(string)
		**out = **in
	}
	if in.PublicPtrDomainName != nil {
		in, out := &in.PublicPtrDomainName, &out.PublicPtrDomainName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AccessConfigInitParameters.
func (in *AccessConfigInitParameters) DeepCopy() *AccessConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(AccessConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AccessConfigObservation) DeepCopyInto(out *AccessConfigObservation) {
	*out = *in
	if in.NATIP != nil {
		in, out := &in.NATIP, &out.NATIP
		*out = new(string)
		**out = **in
	}
	if in.NetworkTier != nil {
		in, out := &in.NetworkTier, &out.NetworkTier
		*out = new(string)
		**out = **in
	}
	if in.PublicPtrDomainName != nil {
		in, out := &in.PublicPtrDomainName, &out.PublicPtrDomainName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AccessConfigObservation.
func (in *AccessConfigObservation) DeepCopy() *AccessConfigObservation {
	if in == nil {
		return nil
	}
	out := new(AccessConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AccessConfigParameters) DeepCopyInto(out *AccessConfigParameters) {
	*out = *in
	if in.NATIP != nil {
		in, out := &in.NATIP, &out.NATIP
		*out = new(string)
		**out = **in
	}
	if in.NetworkTier != nil {
		in, out := &in.NetworkTier, &out.NetworkTier
		*out = new(string)
		**out = **in
	}
	if in.PublicPtrDomainName != nil {
		in, out := &in.PublicPtrDomainName, &out.PublicPtrDomainName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AccessConfigParameters.
func (in *AccessConfigParameters) DeepCopy() *AccessConfigParameters {
	if in == nil {
		return nil
	}
	out := new(AccessConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ActionInitParameters) DeepCopyInto(out *ActionInitParameters) {
	*out = *in
	if in.SourceNATActiveIps != nil {
		in, out := &in.SourceNATActiveIps, &out.SourceNATActiveIps
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SourceNATDrainIps != nil {
		in, out := &in.SourceNATDrainIps, &out.SourceNATDrainIps
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ActionInitParameters.
func (in *ActionInitParameters) DeepCopy() *ActionInitParameters {
	if in == nil {
		return nil
	}
	out := new(ActionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ActionObservation) DeepCopyInto(out *ActionObservation) {
	*out = *in
	if in.SourceNATActiveIps != nil {
		in, out := &in.SourceNATActiveIps, &out.SourceNATActiveIps
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SourceNATDrainIps != nil {
		in, out := &in.SourceNATDrainIps, &out.SourceNATDrainIps
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ActionObservation.
func (in *ActionObservation) DeepCopy() *ActionObservation {
	if in == nil {
		return nil
	}
	out := new(ActionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ActionParameters) DeepCopyInto(out *ActionParameters) {
	*out = *in
	if in.SourceNATActiveIps != nil {
		in, out := &in.SourceNATActiveIps, &out.SourceNATActiveIps
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SourceNATDrainIps != nil {
		in, out := &in.SourceNATDrainIps, &out.SourceNATDrainIps
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ActionParameters.
func (in *ActionParameters) DeepCopy() *ActionParameters {
	if in == nil {
		return nil
	}
	out := new(ActionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AdaptiveProtectionConfigInitParameters) DeepCopyInto(out *AdaptiveProtectionConfigInitParameters) {
	*out = *in
	if in.Layer7DdosDefenseConfig != nil {
		in, out := &in.Layer7DdosDefenseConfig, &out.Layer7DdosDefenseConfig
		*out = make([]Layer7DdosDefenseConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AdaptiveProtectionConfigInitParameters.
func (in *AdaptiveProtectionConfigInitParameters) DeepCopy() *AdaptiveProtectionConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(AdaptiveProtectionConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AdaptiveProtectionConfigObservation) DeepCopyInto(out *AdaptiveProtectionConfigObservation) {
	*out = *in
	if in.Layer7DdosDefenseConfig != nil {
		in, out := &in.Layer7DdosDefenseConfig, &out.Layer7DdosDefenseConfig
		*out = make([]Layer7DdosDefenseConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AdaptiveProtectionConfigObservation.
func (in *AdaptiveProtectionConfigObservation) DeepCopy() *AdaptiveProtectionConfigObservation {
	if in == nil {
		return nil
	}
	out := new(AdaptiveProtectionConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AdaptiveProtectionConfigParameters) DeepCopyInto(out *AdaptiveProtectionConfigParameters) {
	*out = *in
	if in.Layer7DdosDefenseConfig != nil {
		in, out := &in.Layer7DdosDefenseConfig, &out.Layer7DdosDefenseConfig
		*out = make([]Layer7DdosDefenseConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AdaptiveProtectionConfigParameters.
func (in *AdaptiveProtectionConfigParameters) DeepCopy() *AdaptiveProtectionConfigParameters {
	if in == nil {
		return nil
	}
	out := new(AdaptiveProtectionConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Address) DeepCopyInto(out *Address) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Address.
func (in *Address) DeepCopy() *Address {
	if in == nil {
		return nil
	}
	out := new(Address)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Address) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AddressInitParameters) DeepCopyInto(out *AddressInitParameters) {
	*out = *in
	if in.Address != nil {
		in, out := &in.Address, &out.Address
		*out = new(string)
		**out = **in
	}
	if in.AddressType != nil {
		in, out := &in.AddressType, &out.AddressType
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.IPVersion != nil {
		in, out := &in.IPVersion, &out.IPVersion
		*out = new(string)
		**out = **in
	}
	if in.IPv6EndpointType != nil {
		in, out := &in.IPv6EndpointType, &out.IPv6EndpointType
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Network != nil {
		in, out := &in.Network, &out.Network
		*out = new(string)
		**out = **in
	}
	if in.NetworkRef != nil {
		in, out := &in.NetworkRef, &out.NetworkRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.NetworkSelector != nil {
		in, out := &in.NetworkSelector, &out.NetworkSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.NetworkTier != nil {
		in, out := &in.NetworkTier, &out.NetworkTier
		*out = new(string)
		**out = **in
	}
	if in.PrefixLength != nil {
		in, out := &in.PrefixLength, &out.PrefixLength
		*out = new(float64)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Purpose != nil {
		in, out := &in.Purpose, &out.Purpose
		*out = new(string)
		**out = **in
	}
	if in.Subnetwork != nil {
		in, out := &in.Subnetwork, &out.Subnetwork
		*out = new(string)
		**out = **in
	}
	if in.SubnetworkRef != nil {
		in, out := &in.SubnetworkRef, &out.SubnetworkRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SubnetworkSelector != nil {
		in, out := &in.SubnetworkSelector, &out.SubnetworkSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AddressInitParameters.
func (in *AddressInitParameters) DeepCopy() *AddressInitParameters {
	if in == nil {
		return nil
	}
	out := new(AddressInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AddressList) DeepCopyInto(out *AddressList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Address, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AddressList.
func (in *AddressList) DeepCopy() *AddressList {
	if in == nil {
		return nil
	}
	out := new(AddressList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AddressList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AddressObservation) DeepCopyInto(out *AddressObservation) {
	*out = *in
	if in.Address != nil {
		in, out := &in.Address, &out.Address
		*out = new(string)
		**out = **in
	}
	if in.AddressType != nil {
		in, out := &in.AddressType, &out.AddressType
		*out = new(string)
		**out = **in
	}
	if in.CreationTimestamp != nil {
		in, out := &in.CreationTimestamp, &out.CreationTimestamp
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.EffectiveLabels != nil {
		in, out := &in.EffectiveLabels, &out.EffectiveLabels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IPVersion != nil {
		in, out := &in.IPVersion, &out.IPVersion
		*out = new(string)
		**out = **in
	}
	if in.IPv6EndpointType != nil {
		in, out := &in.IPv6EndpointType, &out.IPv6EndpointType
		*out = new(string)
		**out = **in
	}
	if in.LabelFingerprint != nil {
		in, out := &in.LabelFingerprint, &out.LabelFingerprint
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Network != nil {
		in, out := &in.Network, &out.Network
		*out = new(string)
		**out = **in
	}
	if in.NetworkTier != nil {
		in, out := &in.NetworkTier, &out.NetworkTier
		*out = new(string)
		**out = **in
	}
	if in.PrefixLength != nil {
		in, out := &in.PrefixLength, &out.PrefixLength
		*out = new(float64)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Purpose != nil {
		in, out := &in.Purpose, &out.Purpose
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.SelfLink != nil {
		in, out := &in.SelfLink, &out.SelfLink
		*out = new(string)
		**out = **in
	}
	if in.Subnetwork != nil {
		in, out := &in.Subnetwork, &out.Subnetwork
		*out = new(string)
		**out = **in
	}
	if in.TerraformLabels != nil {
		in, out := &in.TerraformLabels, &out.TerraformLabels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Users != nil {
		in, out := &in.Users, &out.Users
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AddressObservation.
func (in *AddressObservation) DeepCopy() *AddressObservation {
	if in == nil {
		return nil
	}
	out := new(AddressObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AddressParameters) DeepCopyInto(out *AddressParameters) {
	*out = *in
	if in.Address != nil {
		in, out := &in.Address, &out.Address
		*out = new(string)
		**out = **in
	}
	if in.AddressType != nil {
		in, out := &in.AddressType, &out.AddressType
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.IPVersion != nil {
		in, out := &in.IPVersion, &out.IPVersion
		*out = new(string)
		**out = **in
	}
	if in.IPv6EndpointType != nil {
		in, out := &in.IPv6EndpointType, &out.IPv6EndpointType
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Network != nil {
		in, out := &in.Network, &out.Network
		*out = new(string)
		**out = **in
	}
	if in.NetworkRef != nil {
		in, out := &in.NetworkRef, &out.NetworkRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.NetworkSelector != nil {
		in, out := &in.NetworkSelector, &out.NetworkSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.NetworkTier != nil {
		in, out := &in.NetworkTier, &out.NetworkTier
		*out = new(string)
		**out = **in
	}
	if in.PrefixLength != nil {
		in, out := &in.PrefixLength, &out.PrefixLength
		*out = new(float64)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Purpose != nil {
		in, out := &in.Purpose, &out.Purpose
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.Subnetwork != nil {
		in, out := &in.Subnetwork, &out.Subnetwork
		*out = new(string)
		**out = **in
	}
	if in.SubnetworkRef != nil {
		in, out := &in.SubnetworkRef, &out.SubnetworkRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SubnetworkSelector != nil {
		in, out := &in.SubnetworkSelector, &out.SubnetworkSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AddressParameters.
func (in *AddressParameters) DeepCopy() *AddressParameters {
	if in == nil {
		return nil
	}
	out := new(AddressParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AddressSpec) DeepCopyInto(out *AddressSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AddressSpec.
func (in *AddressSpec) DeepCopy() *AddressSpec {
	if in == nil {
		return nil
	}
	out := new(AddressSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AddressStatus) DeepCopyInto(out *AddressStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AddressStatus.
func (in *AddressStatus) DeepCopy() *AddressStatus {
	if in == nil {
		return nil
	}
	out := new(AddressStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AdvancedMachineFeaturesInitParameters) DeepCopyInto(out *AdvancedMachineFeaturesInitParameters) {
	*out = *in
	if in.EnableNestedVirtualization != nil {
		in, out := &in.EnableNestedVirtualization, &out.EnableNestedVirtualization
		*out = new(bool)
		**out = **in
	}
	if in.ThreadsPerCore != nil {
		in, out := &in.ThreadsPerCore, &out.ThreadsPerCore
		*out = new(float64)
		**out = **in
	}
	if in.VisibleCoreCount != nil {
		in, out := &in.VisibleCoreCount, &out.VisibleCoreCount
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AdvancedMachineFeaturesInitParameters.
func (in *AdvancedMachineFeaturesInitParameters) DeepCopy() *AdvancedMachineFeaturesInitParameters {
	if in == nil {
		return nil
	}
	out := new(AdvancedMachineFeaturesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AdvancedMachineFeaturesObservation) DeepCopyInto(out *AdvancedMachineFeaturesObservation) {
	*out = *in
	if in.EnableNestedVirtualization != nil {
		in, out := &in.EnableNestedVirtualization, &out.EnableNestedVirtualization
		*out = new(bool)
		**out = **in
	}
	if in.ThreadsPerCore != nil {
		in, out := &in.ThreadsPerCore, &out.ThreadsPerCore
		*out = new(float64)
		**out = **in
	}
	if in.VisibleCoreCount != nil {
		in, out := &in.VisibleCoreCount, &out.VisibleCoreCount
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AdvancedMachineFeaturesObservation.
func (in *AdvancedMachineFeaturesObservation) DeepCopy() *AdvancedMachineFeaturesObservation {
	if in == nil {
		return nil
	}
	out := new(AdvancedMachineFeaturesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AdvancedMachineFeaturesParameters) DeepCopyInto(out *AdvancedMachineFeaturesParameters) {
	*out = *in
	if in.EnableNestedVirtualization != nil {
		in, out := &in.EnableNestedVirtualization, &out.EnableNestedVirtualization
		*out = new(bool)
		**out = **in
	}
	if in.ThreadsPerCore != nil {
		in, out := &in.ThreadsPerCore, &out.ThreadsPerCore
		*out = new(float64)
		**out = **in
	}
	if in.VisibleCoreCount != nil {
		in, out := &in.VisibleCoreCount, &out.VisibleCoreCount
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AdvancedMachineFeaturesParameters.
func (in *AdvancedMachineFeaturesParameters) DeepCopy() *AdvancedMachineFeaturesParameters {
	if in == nil {
		return nil
	}
	out := new(AdvancedMachineFeaturesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AdvancedOptionsConfigInitParameters) DeepCopyInto(out *AdvancedOptionsConfigInitParameters) {
	*out = *in
	if in.JSONCustomConfig != nil {
		in, out := &in.JSONCustomConfig, &out.JSONCustomConfig
		*out = make([]JSONCustomConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.JSONParsing != nil {
		in, out := &in.JSONParsing, &out.JSONParsing
		*out = new(string)
		**out = **in
	}
	if in.LogLevel != nil {
		in, out := &in.LogLevel, &out.LogLevel
		*out = new(string)
		**out = **in
	}
	if in.UserIPRequestHeaders != nil {
		in, out := &in.UserIPRequestHeaders, &out.UserIPRequestHeaders
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AdvancedOptionsConfigInitParameters.
func (in *AdvancedOptionsConfigInitParameters) DeepCopy() *AdvancedOptionsConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(AdvancedOptionsConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AdvancedOptionsConfigObservation) DeepCopyInto(out *AdvancedOptionsConfigObservation) {
	*out = *in
	if in.JSONCustomConfig != nil {
		in, out := &in.JSONCustomConfig, &out.JSONCustomConfig
		*out = make([]JSONCustomConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.JSONParsing != nil {
		in, out := &in.JSONParsing, &out.JSONParsing
		*out = new(string)
		**out = **in
	}
	if in.LogLevel != nil {
		in, out := &in.LogLevel, &out.LogLevel
		*out = new(string)
		**out = **in
	}
	if in.UserIPRequestHeaders != nil {
		in, out := &in.UserIPRequestHeaders, &out.UserIPRequestHeaders
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AdvancedOptionsConfigObservation.
func (in *AdvancedOptionsConfigObservation) DeepCopy() *AdvancedOptionsConfigObservation {
	if in == nil {
		return nil
	}
	out := new(AdvancedOptionsConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AdvancedOptionsConfigParameters) DeepCopyInto(out *AdvancedOptionsConfigParameters) {
	*out = *in
	if in.JSONCustomConfig != nil {
		in, out := &in.JSONCustomConfig, &out.JSONCustomConfig
		*out = make([]JSONCustomConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.JSONParsing != nil {
		in, out := &in.JSONParsing, &out.JSONParsing
		*out = new(string)
		**out = **in
	}
	if in.LogLevel != nil {
		in, out := &in.LogLevel, &out.LogLevel
		*out = new(string)
		**out = **in
	}
	if in.UserIPRequestHeaders != nil {
		in, out := &in.UserIPRequestHeaders, &out.UserIPRequestHeaders
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AdvancedOptionsConfigParameters.
func (in *AdvancedOptionsConfigParameters) DeepCopy() *AdvancedOptionsConfigParameters {
	if in == nil {
		return nil
	}
	out := new(AdvancedOptionsConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AdvertisedIPRangesInitParameters) DeepCopyInto(out *AdvertisedIPRangesInitParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Range != nil {
		in, out := &in.Range, &out.Range
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AdvertisedIPRangesInitParameters.
func (in *AdvertisedIPRangesInitParameters) DeepCopy() *AdvertisedIPRangesInitParameters {
	if in == nil {
		return nil
	}
	out := new(AdvertisedIPRangesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AdvertisedIPRangesObservation) DeepCopyInto(out *AdvertisedIPRangesObservation) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Range != nil {
		in, out := &in.Range, &out.Range
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AdvertisedIPRangesObservation.
func (in *AdvertisedIPRangesObservation) DeepCopy() *AdvertisedIPRangesObservation {
	if in == nil {
		return nil
	}
	out := new(AdvertisedIPRangesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AdvertisedIPRangesParameters) DeepCopyInto(out *AdvertisedIPRangesParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Range != nil {
		in, out := &in.Range, &out.Range
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AdvertisedIPRangesParameters.
func (in *AdvertisedIPRangesParameters) DeepCopy() *AdvertisedIPRangesParameters {
	if in == nil {
		return nil
	}
	out := new(AdvertisedIPRangesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AliasIPRangeInitParameters) DeepCopyInto(out *AliasIPRangeInitParameters) {
	*out = *in
	if in.IPCidrRange != nil {
		in, out := &in.IPCidrRange, &out.IPCidrRange
		*out = new(string)
		**out = **in
	}
	if in.SubnetworkRangeName != nil {
		in, out := &in.SubnetworkRangeName, &out.SubnetworkRangeName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AliasIPRangeInitParameters.
func (in *AliasIPRangeInitParameters) DeepCopy() *AliasIPRangeInitParameters {
	if in == nil {
		return nil
	}
	out := new(AliasIPRangeInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AliasIPRangeObservation) DeepCopyInto(out *AliasIPRangeObservation) {
	*out = *in
	if in.IPCidrRange != nil {
		in, out := &in.IPCidrRange, &out.IPCidrRange
		*out = new(string)
		**out = **in
	}
	if in.SubnetworkRangeName != nil {
		in, out := &in.SubnetworkRangeName, &out.SubnetworkRangeName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AliasIPRangeObservation.
func (in *AliasIPRangeObservation) DeepCopy() *AliasIPRangeObservation {
	if in == nil {
		return nil
	}
	out := new(AliasIPRangeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AliasIPRangeParameters) DeepCopyInto(out *AliasIPRangeParameters) {
	*out = *in
	if in.IPCidrRange != nil {
		in, out := &in.IPCidrRange, &out.IPCidrRange
		*out = new(string)
		**out = **in
	}
	if in.SubnetworkRangeName != nil {
		in, out := &in.SubnetworkRangeName, &out.SubnetworkRangeName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AliasIPRangeParameters.
func (in *AliasIPRangeParameters) DeepCopy() *AliasIPRangeParameters {
	if in == nil {
		return nil
	}
	out := new(AliasIPRangeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AllInstancesConfigInitParameters) DeepCopyInto(out *AllInstancesConfigInitParameters) {
	*out = *in
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Metadata != nil {
		in, out := &in.Metadata, &out.Metadata
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AllInstancesConfigInitParameters.
func (in *AllInstancesConfigInitParameters) DeepCopy() *AllInstancesConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(AllInstancesConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AllInstancesConfigObservation) DeepCopyInto(out *AllInstancesConfigObservation) {
	*out = *in
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Metadata != nil {
		in, out := &in.Metadata, &out.Metadata
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AllInstancesConfigObservation.
func (in *AllInstancesConfigObservation) DeepCopy() *AllInstancesConfigObservation {
	if in == nil {
		return nil
	}
	out := new(AllInstancesConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AllInstancesConfigParameters) DeepCopyInto(out *AllInstancesConfigParameters) {
	*out = *in
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Metadata != nil {
		in, out := &in.Metadata, &out.Metadata
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AllInstancesConfigParameters.
func (in *AllInstancesConfigParameters) DeepCopy() *AllInstancesConfigParameters {
	if in == nil {
		return nil
	}
	out := new(AllInstancesConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AllowInitParameters) DeepCopyInto(out *AllowInitParameters) {
	*out = *in
	if in.Ports != nil {
		in, out := &in.Ports, &out.Ports
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Protocol != nil {
		in, out := &in.Protocol, &out.Protocol
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AllowInitParameters.
func (in *AllowInitParameters) DeepCopy() *AllowInitParameters {
	if in == nil {
		return nil
	}
	out := new(AllowInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AllowObservation) DeepCopyInto(out *AllowObservation) {
	*out = *in
	if in.Ports != nil {
		in, out := &in.Ports, &out.Ports
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Protocol != nil {
		in, out := &in.Protocol, &out.Protocol
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AllowObservation.
func (in *AllowObservation) DeepCopy() *AllowObservation {
	if in == nil {
		return nil
	}
	out := new(AllowObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AllowParameters) DeepCopyInto(out *AllowParameters) {
	*out = *in
	if in.Ports != nil {
		in, out := &in.Ports, &out.Ports
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Protocol != nil {
		in, out := &in.Protocol, &out.Protocol
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AllowParameters.
func (in *AllowParameters) DeepCopy() *AllowParameters {
	if in == nil {
		return nil
	}
	out := new(AllowParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AppEngineInitParameters) DeepCopyInto(out *AppEngineInitParameters) {
	*out = *in
	if in.Service != nil {
		in, out := &in.Service, &out.Service
		*out = new(string)
		**out = **in
	}
	if in.URLMask != nil {
		in, out := &in.URLMask, &out.URLMask
		*out = new(string)
		**out = **in
	}
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AppEngineInitParameters.
func (in *AppEngineInitParameters) DeepCopy() *AppEngineInitParameters {
	if in == nil {
		return nil
	}
	out := new(AppEngineInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AppEngineObservation) DeepCopyInto(out *AppEngineObservation) {
	*out = *in
	if in.Service != nil {
		in, out := &in.Service, &out.Service
		*out = new(string)
		**out = **in
	}
	if in.URLMask != nil {
		in, out := &in.URLMask, &out.URLMask
		*out = new(string)
		**out = **in
	}
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AppEngineObservation.
func (in *AppEngineObservation) DeepCopy() *AppEngineObservation {
	if in == nil {
		return nil
	}
	out := new(AppEngineObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AppEngineParameters) DeepCopyInto(out *AppEngineParameters) {
	*out = *in
	if in.Service != nil {
		in, out := &in.Service, &out.Service
		*out = new(string)
		**out = **in
	}
	if in.URLMask != nil {
		in, out := &in.URLMask, &out.URLMask
		*out = new(string)
		**out = **in
	}
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AppEngineParameters.
func (in *AppEngineParameters) DeepCopy() *AppEngineParameters {
	if in == nil {
		return nil
	}
	out := new(AppEngineParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AsyncPrimaryDiskInitParameters) DeepCopyInto(out *AsyncPrimaryDiskInitParameters) {
	*out = *in
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = new(string)
		**out = **in
	}
	if in.DiskRef != nil {
		in, out := &in.DiskRef, &out.DiskRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.DiskSelector != nil {
		in, out := &in.DiskSelector, &out.DiskSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AsyncPrimaryDiskInitParameters.
func (in *AsyncPrimaryDiskInitParameters) DeepCopy() *AsyncPrimaryDiskInitParameters {
	if in == nil {
		return nil
	}
	out := new(AsyncPrimaryDiskInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AsyncPrimaryDiskObservation) DeepCopyInto(out *AsyncPrimaryDiskObservation) {
	*out = *in
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AsyncPrimaryDiskObservation.
func (in *AsyncPrimaryDiskObservation) DeepCopy() *AsyncPrimaryDiskObservation {
	if in == nil {
		return nil
	}
	out := new(AsyncPrimaryDiskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AsyncPrimaryDiskParameters) DeepCopyInto(out *AsyncPrimaryDiskParameters) {
	*out = *in
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = new(string)
		**out = **in
	}
	if in.DiskRef != nil {
		in, out := &in.DiskRef, &out.DiskRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.DiskSelector != nil {
		in, out := &in.DiskSelector, &out.DiskSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AsyncPrimaryDiskParameters.
func (in *AsyncPrimaryDiskParameters) DeepCopy() *AsyncPrimaryDiskParameters {
	if in == nil {
		return nil
	}
	out := new(AsyncPrimaryDiskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AttachedDisk) DeepCopyInto(out *AttachedDisk) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AttachedDisk.
func (in *AttachedDisk) DeepCopy() *AttachedDisk {
	if in == nil {
		return nil
	}
	out := new(AttachedDisk)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AttachedDisk) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AttachedDiskInitParameters) DeepCopyInto(out *AttachedDiskInitParameters) {
	*out = *in
	if in.DeviceName != nil {
		in, out := &in.DeviceName, &out.DeviceName
		*out = new(string)
		**out = **in
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = new(string)
		**out = **in
	}
	if in.DiskRef != nil {
		in, out := &in.DiskRef, &out.DiskRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.DiskSelector != nil {
		in, out := &in.DiskSelector, &out.DiskSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Instance != nil {
		in, out := &in.Instance, &out.Instance
		*out = new(string)
		**out = **in
	}
	if in.InstanceRef != nil {
		in, out := &in.InstanceRef, &out.InstanceRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.InstanceSelector != nil {
		in, out := &in.InstanceSelector, &out.InstanceSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Mode != nil {
		in, out := &in.Mode, &out.Mode
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Zone != nil {
		in, out := &in.Zone, &out.Zone
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AttachedDiskInitParameters.
func (in *AttachedDiskInitParameters) DeepCopy() *AttachedDiskInitParameters {
	if in == nil {
		return nil
	}
	out := new(AttachedDiskInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AttachedDiskList) DeepCopyInto(out *AttachedDiskList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]AttachedDisk, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AttachedDiskList.
func (in *AttachedDiskList) DeepCopy() *AttachedDiskList {
	if in == nil {
		return nil
	}
	out := new(AttachedDiskList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AttachedDiskList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AttachedDiskObservation) DeepCopyInto(out *AttachedDiskObservation) {
	*out = *in
	if in.DeviceName != nil {
		in, out := &in.DeviceName, &out.DeviceName
		*out = new(string)
		**out = **in
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Instance != nil {
		in, out := &in.Instance, &out.Instance
		*out = new(string)
		**out = **in
	}
	if in.Mode != nil {
		in, out := &in.Mode, &out.Mode
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Zone != nil {
		in, out := &in.Zone, &out.Zone
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AttachedDiskObservation.
func (in *AttachedDiskObservation) DeepCopy() *AttachedDiskObservation {
	if in == nil {
		return nil
	}
	out := new(AttachedDiskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AttachedDiskParameters) DeepCopyInto(out *AttachedDiskParameters) {
	*out = *in
	if in.DeviceName != nil {
		in, out := &in.DeviceName, &out.DeviceName
		*out = new(string)
		**out = **in
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = new(string)
		**out = **in
	}
	if in.DiskRef != nil {
		in, out := &in.DiskRef, &out.DiskRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.DiskSelector != nil {
		in, out := &in.DiskSelector, &out.DiskSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Instance != nil {
		in, out := &in.Instance, &out.Instance
		*out = new(string)
		**out = **in
	}
	if in.InstanceRef != nil {
		in, out := &in.InstanceRef, &out.InstanceRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.InstanceSelector != nil {
		in, out := &in.InstanceSelector, &out.InstanceSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Mode != nil {
		in, out := &in.Mode, &out.Mode
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Zone != nil {
		in, out := &in.Zone, &out.Zone
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AttachedDiskParameters.
func (in *AttachedDiskParameters) DeepCopy() *AttachedDiskParameters {
	if in == nil {
		return nil
	}
	out := new(AttachedDiskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AttachedDiskSpec) DeepCopyInto(out *AttachedDiskSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AttachedDiskSpec.
func (in *AttachedDiskSpec) DeepCopy() *AttachedDiskSpec {
	if in == nil {
		return nil
	}
	out := new(AttachedDiskSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AttachedDiskStatus) DeepCopyInto(out *AttachedDiskStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AttachedDiskStatus.
func (in *AttachedDiskStatus) DeepCopy() *AttachedDiskStatus {
	if in == nil {
		return nil
	}
	out := new(AttachedDiskStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoHealingPoliciesInitParameters) DeepCopyInto(out *AutoHealingPoliciesInitParameters) {
	*out = *in
	if in.HealthCheck != nil {
		in, out := &in.HealthCheck, &out.HealthCheck
		*out = new(string)
		**out = **in
	}
	if in.HealthCheckRef != nil {
		in, out := &in.HealthCheckRef, &out.HealthCheckRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.HealthCheckSelector != nil {
		in, out := &in.HealthCheckSelector, &out.HealthCheckSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.InitialDelaySec != nil {
		in, out := &in.InitialDelaySec, &out.InitialDelaySec
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoHealingPoliciesInitParameters.
func (in *AutoHealingPoliciesInitParameters) DeepCopy() *AutoHealingPoliciesInitParameters {
	if in == nil {
		return nil
	}
	out := new(AutoHealingPoliciesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoHealingPoliciesObservation) DeepCopyInto(out *AutoHealingPoliciesObservation) {
	*out = *in
	if in.HealthCheck != nil {
		in, out := &in.HealthCheck, &out.HealthCheck
		*out = new(string)
		**out = **in
	}
	if in.InitialDelaySec != nil {
		in, out := &in.InitialDelaySec, &out.InitialDelaySec
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoHealingPoliciesObservation.
func (in *AutoHealingPoliciesObservation) DeepCopy() *AutoHealingPoliciesObservation {
	if in == nil {
		return nil
	}
	out := new(AutoHealingPoliciesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoHealingPoliciesParameters) DeepCopyInto(out *AutoHealingPoliciesParameters) {
	*out = *in
	if in.HealthCheck != nil {
		in, out := &in.HealthCheck, &out.HealthCheck
		*out = new(string)
		**out = **in
	}
	if in.HealthCheckRef != nil {
		in, out := &in.HealthCheckRef, &out.HealthCheckRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.HealthCheckSelector != nil {
		in, out := &in.HealthCheckSelector, &out.HealthCheckSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.InitialDelaySec != nil {
		in, out := &in.InitialDelaySec, &out.InitialDelaySec
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoHealingPoliciesParameters.
func (in *AutoHealingPoliciesParameters) DeepCopy() *AutoHealingPoliciesParameters {
	if in == nil {
		return nil
	}
	out := new(AutoHealingPoliciesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Autoscaler) DeepCopyInto(out *Autoscaler) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Autoscaler.
func (in *Autoscaler) DeepCopy() *Autoscaler {
	if in == nil {
		return nil
	}
	out := new(Autoscaler)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Autoscaler) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoscalerInitParameters) DeepCopyInto(out *AutoscalerInitParameters) {
	*out = *in
	if in.AutoscalingPolicy != nil {
		in, out := &in.AutoscalingPolicy, &out.AutoscalingPolicy
		*out = make([]AutoscalingPolicyInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Target != nil {
		in, out := &in.Target, &out.Target
		*out = new(string)
		**out = **in
	}
	if in.TargetRef != nil {
		in, out := &in.TargetRef, &out.TargetRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.TargetSelector != nil {
		in, out := &in.TargetSelector, &out.TargetSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoscalerInitParameters.
func (in *AutoscalerInitParameters) DeepCopy() *AutoscalerInitParameters {
	if in == nil {
		return nil
	}
	out := new(AutoscalerInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoscalerList) DeepCopyInto(out *AutoscalerList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Autoscaler, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoscalerList.
func (in *AutoscalerList) DeepCopy() *AutoscalerList {
	if in == nil {
		return nil
	}
	out := new(AutoscalerList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AutoscalerList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoscalerObservation) DeepCopyInto(out *AutoscalerObservation) {
	*out = *in
	if in.AutoscalingPolicy != nil {
		in, out := &in.AutoscalingPolicy, &out.AutoscalingPolicy
		*out = make([]AutoscalingPolicyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CreationTimestamp != nil {
		in, out := &in.CreationTimestamp, &out.CreationTimestamp
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.SelfLink != nil {
		in, out := &in.SelfLink, &out.SelfLink
		*out = new(string)
		**out = **in
	}
	if in.Target != nil {
		in, out := &in.Target, &out.Target
		*out = new(string)
		**out = **in
	}
	if in.Zone != nil {
		in, out := &in.Zone, &out.Zone
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoscalerObservation.
func (in *AutoscalerObservation) DeepCopy() *AutoscalerObservation {
	if in == nil {
		return nil
	}
	out := new(AutoscalerObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoscalerParameters) DeepCopyInto(out *AutoscalerParameters) {
	*out = *in
	if in.AutoscalingPolicy != nil {
		in, out := &in.AutoscalingPolicy, &out.AutoscalingPolicy
		*out = make([]AutoscalingPolicyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Target != nil {
		in, out := &in.Target, &out.Target
		*out = new(string)
		**out = **in
	}
	if in.TargetRef != nil {
		in, out := &in.TargetRef, &out.TargetRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.TargetSelector != nil {
		in, out := &in.TargetSelector, &out.TargetSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Zone != nil {
		in, out := &in.Zone, &out.Zone
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoscalerParameters.
func (in *AutoscalerParameters) DeepCopy() *AutoscalerParameters {
	if in == nil {
		return nil
	}
	out := new(AutoscalerParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoscalerSpec) DeepCopyInto(out *AutoscalerSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoscalerSpec.
func (in *AutoscalerSpec) DeepCopy() *AutoscalerSpec {
	if in == nil {
		return nil
	}
	out := new(AutoscalerSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoscalerStatus) DeepCopyInto(out *AutoscalerStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoscalerStatus.
func (in *AutoscalerStatus) DeepCopy() *AutoscalerStatus {
	if in == nil {
		return nil
	}
	out := new(AutoscalerStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoscalingPolicyCPUUtilizationInitParameters) DeepCopyInto(out *AutoscalingPolicyCPUUtilizationInitParameters) {
	*out = *in
	if in.PredictiveMethod != nil {
		in, out := &in.PredictiveMethod, &out.PredictiveMethod
		*out = new(string)
		**out = **in
	}
	if in.Target != nil {
		in, out := &in.Target, &out.Target
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoscalingPolicyCPUUtilizationInitParameters.
func (in *AutoscalingPolicyCPUUtilizationInitParameters) DeepCopy() *AutoscalingPolicyCPUUtilizationInitParameters {
	if in == nil {
		return nil
	}
	out := new(AutoscalingPolicyCPUUtilizationInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoscalingPolicyCPUUtilizationObservation) DeepCopyInto(out *AutoscalingPolicyCPUUtilizationObservation) {
	*out = *in
	if in.PredictiveMethod != nil {
		in, out := &in.PredictiveMethod, &out.PredictiveMethod
		*out = new(string)
		**out = **in
	}
	if in.Target != nil {
		in, out := &in.Target, &out.Target
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoscalingPolicyCPUUtilizationObservation.
func (in *AutoscalingPolicyCPUUtilizationObservation) DeepCopy() *AutoscalingPolicyCPUUtilizationObservation {
	if in == nil {
		return nil
	}
	out := new(AutoscalingPolicyCPUUtilizationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoscalingPolicyCPUUtilizationParameters) DeepCopyInto(out *AutoscalingPolicyCPUUtilizationParameters) {
	*out = *in
	if in.PredictiveMethod != nil {
		in, out := &in.PredictiveMethod, &out.PredictiveMethod
		*out = new(string)
		**out = **in
	}
	if in.Target != nil {
		in, out := &in.Target, &out.Target
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoscalingPolicyCPUUtilizationParameters.
func (in *AutoscalingPolicyCPUUtilizationParameters) DeepCopy() *AutoscalingPolicyCPUUtilizationParameters {
	if in == nil {
		return nil
	}
	out := new(AutoscalingPolicyCPUUtilizationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoscalingPolicyInitParameters) DeepCopyInto(out *AutoscalingPolicyInitParameters) {
	*out = *in
	if in.CPUUtilization != nil {
		in, out := &in.CPUUtilization, &out.CPUUtilization
		*out = make([]CPUUtilizationInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CooldownPeriod != nil {
		in, out := &in.CooldownPeriod, &out.CooldownPeriod
		*out = new(float64)
		**out = **in
	}
	if in.LoadBalancingUtilization != nil {
		in, out := &in.LoadBalancingUtilization, &out.LoadBalancingUtilization
		*out = make([]LoadBalancingUtilizationInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MaxReplicas != nil {
		in, out := &in.MaxReplicas, &out.MaxReplicas
		*out = new(float64)
		**out = **in
	}
	if in.Metric != nil {
		in, out := &in.Metric, &out.Metric
		*out = make([]MetricInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MinReplicas != nil {
		in, out := &in.MinReplicas, &out.MinReplicas
		*out = new(float64)
		**out = **in
	}
	if in.Mode != nil {
		in, out := &in.Mode, &out.Mode
		*out = new(string)
		**out = **in
	}
	if in.ScaleInControl != nil {
		in, out := &in.ScaleInControl, &out.ScaleInControl
		*out = make([]ScaleInControlInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ScalingSchedules != nil {
		in, out := &in.ScalingSchedules, &out.ScalingSchedules
		*out = make([]ScalingSchedulesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoscalingPolicyInitParameters.
func (in *AutoscalingPolicyInitParameters) DeepCopy() *AutoscalingPolicyInitParameters {
	if in == nil {
		return nil
	}
	out := new(AutoscalingPolicyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoscalingPolicyLoadBalancingUtilizationInitParameters) DeepCopyInto(out *AutoscalingPolicyLoadBalancingUtilizationInitParameters) {
	*out = *in
	if in.Target != nil {
		in, out := &in.Target, &out.Target
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoscalingPolicyLoadBalancingUtilizationInitParameters.
func (in *AutoscalingPolicyLoadBalancingUtilizationInitParameters) DeepCopy() *AutoscalingPolicyLoadBalancingUtilizationInitParameters {
	if in == nil {
		return nil
	}
	out := new(AutoscalingPolicyLoadBalancingUtilizationInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoscalingPolicyLoadBalancingUtilizationObservation) DeepCopyInto(out *AutoscalingPolicyLoadBalancingUtilizationObservation) {
	*out = *in
	if in.Target != nil {
		in, out := &in.Target, &out.Target
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoscalingPolicyLoadBalancingUtilizationObservation.
func (in *AutoscalingPolicyLoadBalancingUtilizationObservation) DeepCopy() *AutoscalingPolicyLoadBalancingUtilizationObservation {
	if in == nil {
		return nil
	}
	out := new(AutoscalingPolicyLoadBalancingUtilizationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoscalingPolicyLoadBalancingUtilizationParameters) DeepCopyInto(out *AutoscalingPolicyLoadBalancingUtilizationParameters) {
	*out = *in
	if in.Target != nil {
		in, out := &in.Target, &out.Target
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoscalingPolicyLoadBalancingUtilizationParameters.
func (in *AutoscalingPolicyLoadBalancingUtilizationParameters) DeepCopy() *AutoscalingPolicyLoadBalancingUtilizationParameters {
	if in == nil {
		return nil
	}
	out := new(AutoscalingPolicyLoadBalancingUtilizationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoscalingPolicyMetricInitParameters) DeepCopyInto(out *AutoscalingPolicyMetricInitParameters) {
	*out = *in
	if in.Filter != nil {
		in, out := &in.Filter, &out.Filter
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.SingleInstanceAssignment != nil {
		in, out := &in.SingleInstanceAssignment, &out.SingleInstanceAssignment
		*out = new(float64)
		**out = **in
	}
	if in.Target != nil {
		in, out := &in.Target, &out.Target
		*out = new(float64)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoscalingPolicyMetricInitParameters.
func (in *AutoscalingPolicyMetricInitParameters) DeepCopy() *AutoscalingPolicyMetricInitParameters {
	if in == nil {
		return nil
	}
	out := new(AutoscalingPolicyMetricInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoscalingPolicyMetricObservation) DeepCopyInto(out *AutoscalingPolicyMetricObservation) {
	*out = *in
	if in.Filter != nil {
		in, out := &in.Filter, &out.Filter
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.SingleInstanceAssignment != nil {
		in, out := &in.SingleInstanceAssignment, &out.SingleInstanceAssignment
		*out = new(float64)
		**out = **in
	}
	if in.Target != nil {
		in, out := &in.Target, &out.Target
		*out = new(float64)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoscalingPolicyMetricObservation.
func (in *AutoscalingPolicyMetricObservation) DeepCopy() *AutoscalingPolicyMetricObservation {
	if in == nil {
		return nil
	}
	out := new(AutoscalingPolicyMetricObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoscalingPolicyMetricParameters) DeepCopyInto(out *AutoscalingPolicyMetricParameters) {
	*out = *in
	if in.Filter != nil {
		in, out := &in.Filter, &out.Filter
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.SingleInstanceAssignment != nil {
		in, out := &in.SingleInstanceAssignment, &out.SingleInstanceAssignment
		*out = new(float64)
		**out = **in
	}
	if in.Target != nil {
		in, out := &in.Target, &out.Target
		*out = new(float64)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoscalingPolicyMetricParameters.
func (in *AutoscalingPolicyMetricParameters) DeepCopy() *AutoscalingPolicyMetricParameters {
	if in == nil {
		return nil
	}
	out := new(AutoscalingPolicyMetricParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoscalingPolicyObservation) DeepCopyInto(out *AutoscalingPolicyObservation) {
	*out = *in
	if in.CPUUtilization != nil {
		in, out := &in.CPUUtilization, &out.CPUUtilization
		*out = make([]CPUUtilizationObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CooldownPeriod != nil {
		in, out := &in.CooldownPeriod, &out.CooldownPeriod
		*out = new(float64)
		**out = **in
	}
	if in.LoadBalancingUtilization != nil {
		in, out := &in.LoadBalancingUtilization, &out.LoadBalancingUtilization
		*out = make([]LoadBalancingUtilizationObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MaxReplicas != nil {
		in, out := &in.MaxReplicas, &out.MaxReplicas
		*out = new(float64)
		**out = **in
	}
	if in.Metric != nil {
		in, out := &in.Metric, &out.Metric
		*out = make([]MetricObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MinReplicas != nil {
		in, out := &in.MinReplicas, &out.MinReplicas
		*out = new(float64)
		**out = **in
	}
	if in.Mode != nil {
		in, out := &in.Mode, &out.Mode
		*out = new(string)
		**out = **in
	}
	if in.ScaleInControl != nil {
		in, out := &in.ScaleInControl, &out.ScaleInControl
		*out = make([]ScaleInControlObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ScalingSchedules != nil {
		in, out := &in.ScalingSchedules, &out.ScalingSchedules
		*out = make([]ScalingSchedulesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoscalingPolicyObservation.
func (in *AutoscalingPolicyObservation) DeepCopy() *AutoscalingPolicyObservation {
	if in == nil {
		return nil
	}
	out := new(AutoscalingPolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoscalingPolicyParameters) DeepCopyInto(out *AutoscalingPolicyParameters) {
	*out = *in
	if in.CPUUtilization != nil {
		in, out := &in.CPUUtilization, &out.CPUUtilization
		*out = make([]CPUUtilizationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CooldownPeriod != nil {
		in, out := &in.CooldownPeriod, &out.CooldownPeriod
		*out = new(float64)
		**out = **in
	}
	if in.LoadBalancingUtilization != nil {
		in, out := &in.LoadBalancingUtilization, &out.LoadBalancingUtilization
		*out = make([]LoadBalancingUtilizationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MaxReplicas != nil {
		in, out := &in.MaxReplicas, &out.MaxReplicas
		*out = new(float64)
		**out = **in
	}
	if in.Metric != nil {
		in, out := &in.Metric, &out.Metric
		*out = make([]MetricParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MinReplicas != nil {
		in, out := &in.MinReplicas, &out.MinReplicas
		*out = new(float64)
		**out = **in
	}
	if in.Mode != nil {
		in, out := &in.Mode, &out.Mode
		*out = new(string)
		**out = **in
	}
	if in.ScaleInControl != nil {
		in, out := &in.ScaleInControl, &out.ScaleInControl
		*out = make([]ScaleInControlParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ScalingSchedules != nil {
		in, out := &in.ScalingSchedules, &out.ScalingSchedules
		*out = make([]ScalingSchedulesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoscalingPolicyParameters.
func (in *AutoscalingPolicyParameters) DeepCopy() *AutoscalingPolicyParameters {
	if in == nil {
		return nil
	}
	out := new(AutoscalingPolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoscalingPolicyScaleInControlInitParameters) DeepCopyInto(out *AutoscalingPolicyScaleInControlInitParameters) {
	*out = *in
	if in.MaxScaledInReplicas != nil {
		in, out := &in.MaxScaledInReplicas, &out.MaxScaledInReplicas
		*out = make([]ScaleInControlMaxScaledInReplicasInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TimeWindowSec != nil {
		in, out := &in.TimeWindowSec, &out.TimeWindowSec
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoscalingPolicyScaleInControlInitParameters.
func (in *AutoscalingPolicyScaleInControlInitParameters) DeepCopy() *AutoscalingPolicyScaleInControlInitParameters {
	if in == nil {
		return nil
	}
	out := new(AutoscalingPolicyScaleInControlInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoscalingPolicyScaleInControlObservation) DeepCopyInto(out *AutoscalingPolicyScaleInControlObservation) {
	*out = *in
	if in.MaxScaledInReplicas != nil {
		in, out := &in.MaxScaledInReplicas, &out.MaxScaledInReplicas
		*out = make([]ScaleInControlMaxScaledInReplicasObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TimeWindowSec != nil {
		in, out := &in.TimeWindowSec, &out.TimeWindowSec
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoscalingPolicyScaleInControlObservation.
func (in *AutoscalingPolicyScaleInControlObservation) DeepCopy() *AutoscalingPolicyScaleInControlObservation {
	if in == nil {
		return nil
	}
	out := new(AutoscalingPolicyScaleInControlObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoscalingPolicyScaleInControlParameters) DeepCopyInto(out *AutoscalingPolicyScaleInControlParameters) {
	*out = *in
	if in.MaxScaledInReplicas != nil {
		in, out := &in.MaxScaledInReplicas, &out.MaxScaledInReplicas
		*out = make([]ScaleInControlMaxScaledInReplicasParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TimeWindowSec != nil {
		in, out := &in.TimeWindowSec, &out.TimeWindowSec
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoscalingPolicyScaleInControlParameters.
func (in *AutoscalingPolicyScaleInControlParameters) DeepCopy() *AutoscalingPolicyScaleInControlParameters {
	if in == nil {
		return nil
	}
	out := new(AutoscalingPolicyScaleInControlParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoscalingPolicyScalingSchedulesInitParameters) DeepCopyInto(out *AutoscalingPolicyScalingSchedulesInitParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Disabled != nil {
		in, out := &in.Disabled, &out.Disabled
		*out = new(bool)
		**out = **in
	}
	if in.DurationSec != nil {
		in, out := &in.DurationSec, &out.DurationSec
		*out = new(float64)
		**out = **in
	}
	if in.MinRequiredReplicas != nil {
		in, out := &in.MinRequiredReplicas, &out.MinRequiredReplicas
		*out = new(float64)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Schedule != nil {
		in, out := &in.Schedule, &out.Schedule
		*out = new(string)
		**out = **in
	}
	if in.TimeZone != nil {
		in, out := &in.TimeZone, &out.TimeZone
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoscalingPolicyScalingSchedulesInitParameters.
func (in *AutoscalingPolicyScalingSchedulesInitParameters) DeepCopy() *AutoscalingPolicyScalingSchedulesInitParameters {
	if in == nil {
		return nil
	}
	out := new(AutoscalingPolicyScalingSchedulesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoscalingPolicyScalingSchedulesObservation) DeepCopyInto(out *AutoscalingPolicyScalingSchedulesObservation) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Disabled != nil {
		in, out := &in.Disabled, &out.Disabled
		*out = new(bool)
		**out = **in
	}
	if in.DurationSec != nil {
		in, out := &in.DurationSec, &out.DurationSec
		*out = new(float64)
		**out = **in
	}
	if in.MinRequiredReplicas != nil {
		in, out := &in.MinRequiredReplicas, &out.MinRequiredReplicas
		*out = new(float64)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Schedule != nil {
		in, out := &in.Schedule, &out.Schedule
		*out = new(string)
		**out = **in
	}
	if in.TimeZone != nil {
		in, out := &in.TimeZone, &out.TimeZone
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoscalingPolicyScalingSchedulesObservation.
func (in *AutoscalingPolicyScalingSchedulesObservation) DeepCopy() *AutoscalingPolicyScalingSchedulesObservation {
	if in == nil {
		return nil
	}
	out := new(AutoscalingPolicyScalingSchedulesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoscalingPolicyScalingSchedulesParameters) DeepCopyInto(out *AutoscalingPolicyScalingSchedulesParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Disabled != nil {
		in, out := &in.Disabled, &out.Disabled
		*out = new(bool)
		**out = **in
	}
	if in.DurationSec != nil {
		in, out := &in.DurationSec, &out.DurationSec
		*out = new(float64)
		**out = **in
	}
	if in.MinRequiredReplicas != nil {
		in, out := &in.MinRequiredReplicas, &out.MinRequiredReplicas
		*out = new(float64)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Schedule != nil {
		in, out := &in.Schedule, &out.Schedule
		*out = new(string)
		**out = **in
	}
	if in.TimeZone != nil {
		in, out := &in.TimeZone, &out.TimeZone
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoscalingPolicyScalingSchedulesParameters.
func (in *AutoscalingPolicyScalingSchedulesParameters) DeepCopy() *AutoscalingPolicyScalingSchedulesParameters {
	if in == nil {
		return nil
	}
	out := new(AutoscalingPolicyScalingSchedulesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AwsV4AuthenticationInitParameters) DeepCopyInto(out *AwsV4AuthenticationInitParameters) {
	*out = *in
	if in.AccessKeyID != nil {
		in, out := &in.AccessKeyID, &out.AccessKeyID
		*out = new(string)
		**out = **in
	}
	if in.AccessKeySecretRef != nil {
		in, out := &in.AccessKeySecretRef, &out.AccessKeySecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.AccessKeyVersion != nil {
		in, out := &in.AccessKeyVersion, &out.AccessKeyVersion
		*out = new(string)
		**out = **in
	}
	if in.OriginRegion != nil {
		in, out := &in.OriginRegion, &out.OriginRegion
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AwsV4AuthenticationInitParameters.
func (in *AwsV4AuthenticationInitParameters) DeepCopy() *AwsV4AuthenticationInitParameters {
	if in == nil {
		return nil
	}
	out := new(AwsV4AuthenticationInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AwsV4AuthenticationObservation) DeepCopyInto(out *AwsV4AuthenticationObservation) {
	*out = *in
	if in.AccessKeyID != nil {
		in, out := &in.AccessKeyID, &out.AccessKeyID
		*out = new(string)
		**out = **in
	}
	if in.AccessKeyVersion != nil {
		in, out := &in.AccessKeyVersion, &out.AccessKeyVersion
		*out = new(string)
		**out = **in
	}
	if in.OriginRegion != nil {
		in, out := &in.OriginRegion, &out.OriginRegion
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AwsV4AuthenticationObservation.
func (in *AwsV4AuthenticationObservation) DeepCopy() *AwsV4AuthenticationObservation {
	if in == nil {
		return nil
	}
	out := new(AwsV4AuthenticationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AwsV4AuthenticationParameters) DeepCopyInto(out *AwsV4AuthenticationParameters) {
	*out = *in
	if in.AccessKeyID != nil {
		in, out := &in.AccessKeyID, &out.AccessKeyID
		*out = new(string)
		**out = **in
	}
	if in.AccessKeySecretRef != nil {
		in, out := &in.AccessKeySecretRef, &out.AccessKeySecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.AccessKeyVersion != nil {
		in, out := &in.AccessKeyVersion, &out.AccessKeyVersion
		*out = new(string)
		**out = **in
	}
	if in.OriginRegion != nil {
		in, out := &in.OriginRegion, &out.OriginRegion
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AwsV4AuthenticationParameters.
func (in *AwsV4AuthenticationParameters) DeepCopy() *AwsV4AuthenticationParameters {
	if in == nil {
		return nil
	}
	out := new(AwsV4AuthenticationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BGPInitParameters) DeepCopyInto(out *BGPInitParameters) {
	*out = *in
	if in.AdvertiseMode != nil {
		in, out := &in.AdvertiseMode, &out.AdvertiseMode
		*out = new(string)
		**out = **in
	}
	if in.AdvertisedGroups != nil {
		in, out := &in.AdvertisedGroups, &out.AdvertisedGroups
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AdvertisedIPRanges != nil {
		in, out := &in.AdvertisedIPRanges, &out.AdvertisedIPRanges
		*out = make([]AdvertisedIPRangesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Asn != nil {
		in, out := &in.Asn, &out.Asn
		*out = new(float64)
		**out = **in
	}
	if in.IdentifierRange != nil {
		in, out := &in.IdentifierRange, &out.IdentifierRange
		*out = new(string)
		**out = **in
	}
	if in.KeepaliveInterval != nil {
		in, out := &in.KeepaliveInterval, &out.KeepaliveInterval
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BGPInitParameters.
func (in *BGPInitParameters) DeepCopy() *BGPInitParameters {
	if in == nil {
		return nil
	}
	out := new(BGPInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BGPObservation) DeepCopyInto(out *BGPObservation) {
	*out = *in
	if in.AdvertiseMode != nil {
		in, out := &in.AdvertiseMode, &out.AdvertiseMode
		*out = new(string)
		**out = **in
	}
	if in.AdvertisedGroups != nil {
		in, out := &in.AdvertisedGroups, &out.AdvertisedGroups
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AdvertisedIPRanges != nil {
		in, out := &in.AdvertisedIPRanges, &out.AdvertisedIPRanges
		*out = make([]AdvertisedIPRangesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Asn != nil {
		in, out := &in.Asn, &out.Asn
		*out = new(float64)
		**out = **in
	}
	if in.IdentifierRange != nil {
		in, out := &in.IdentifierRange, &out.IdentifierRange
		*out = new(string)
		**out = **in
	}
	if in.KeepaliveInterval != nil {
		in, out := &in.KeepaliveInterval, &out.KeepaliveInterval
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BGPObservation.
func (in *BGPObservation) DeepCopy() *BGPObservation {
	if in == nil {
		return nil
	}
	out := new(BGPObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BGPParameters) DeepCopyInto(out *BGPParameters) {
	*out = *in
	if in.AdvertiseMode != nil {
		in, out := &in.AdvertiseMode, &out.AdvertiseMode
		*out = new(string)
		**out = **in
	}
	if in.AdvertisedGroups != nil {
		in, out := &in.AdvertisedGroups, &out.AdvertisedGroups
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AdvertisedIPRanges != nil {
		in, out := &in.AdvertisedIPRanges, &out.AdvertisedIPRanges
		*out = make([]AdvertisedIPRangesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Asn != nil {
		in, out := &in.Asn, &out.Asn
		*out = new(float64)
		**out = **in
	}
	if in.IdentifierRange != nil {
		in, out := &in.IdentifierRange, &out.IdentifierRange
		*out = new(string)
		**out = **in
	}
	if in.KeepaliveInterval != nil {
		in, out := &in.KeepaliveInterval, &out.KeepaliveInterval
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BGPParameters.
func (in *BGPParameters) DeepCopy() *BGPParameters {
	if in == nil {
		return nil
	}
	out := new(BGPParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BackendBucket) DeepCopyInto(out *BackendBucket) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BackendBucket.
func (in *BackendBucket) DeepCopy() *BackendBucket {
	if in == nil {
		return nil
	}
	out := new(BackendBucket)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *BackendBucket) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BackendBucketInitParameters) DeepCopyInto(out *BackendBucketInitParameters) {
	*out = *in
	if in.BucketName != nil {
		in, out := &in.BucketName, &out.BucketName
		*out = new(string)
		**out = **in
	}
	if in.BucketNameRef != nil {
		in, out := &in.BucketNameRef, &out.BucketNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.BucketNameSelector != nil {
		in, out := &in.BucketNameSelector, &out.BucketNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.CdnPolicy != nil {
		in, out := &in.CdnPolicy, &out.CdnPolicy
		*out = make([]CdnPolicyInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CompressionMode != nil {
		in, out := &in.CompressionMode, &out.CompressionMode
		*out = new(string)
		**out = **in
	}
	if in.CustomResponseHeaders != nil {
		in, out := &in.CustomResponseHeaders, &out.CustomResponseHeaders
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.EdgeSecurityPolicy != nil {
		in, out := &in.EdgeSecurityPolicy, &out.EdgeSecurityPolicy
		*out = new(string)
		**out = **in
	}
	if in.EdgeSecurityPolicyRef != nil {
		in, out := &in.EdgeSecurityPolicyRef, &out.EdgeSecurityPolicyRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.EdgeSecurityPolicySelector != nil {
		in, out := &in.EdgeSecurityPolicySelector, &out.EdgeSecurityPolicySelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.EnableCdn != nil {
		in, out := &in.EnableCdn, &out.EnableCdn
		*out = new(bool)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BackendBucketInitParameters.
func (in *BackendBucketInitParameters) DeepCopy() *BackendBucketInitParameters {
	if in == nil {
		return nil
	}
	out := new(BackendBucketInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BackendBucketList) DeepCopyInto(out *BackendBucketList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]BackendBucket, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BackendBucketList.
func (in *BackendBucketList) DeepCopy() *BackendBucketList {
	if in == nil {
		return nil
	}
	out := new(BackendBucketList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *BackendBucketList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BackendBucketObservation) DeepCopyInto(out *BackendBucketObservation) {
	*out = *in
	if in.BucketName != nil {
		in, out := &in.BucketName, &out.BucketName
		*out = new(string)
		**out = **in
	}
	if in.CdnPolicy != nil {
		in, out := &in.CdnPolicy, &out.CdnPolicy
		*out = make([]CdnPolicyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CompressionMode != nil {
		in, out := &in.CompressionMode, &out.CompressionMode
		*out = new(string)
		**out = **in
	}
	if in.CreationTimestamp != nil {
		in, out := &in.CreationTimestamp, &out.CreationTimestamp
		*out = new(string)
		**out = **in
	}
	if in.CustomResponseHeaders != nil {
		in, out := &in.CustomResponseHeaders, &out.CustomResponseHeaders
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.EdgeSecurityPolicy != nil {
		in, out := &in.EdgeSecurityPolicy, &out.EdgeSecurityPolicy
		*out = new(string)
		**out = **in
	}
	if in.EnableCdn != nil {
		in, out := &in.EnableCdn, &out.EnableCdn
		*out = new(bool)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.SelfLink != nil {
		in, out := &in.SelfLink, &out.SelfLink
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BackendBucketObservation.
func (in *BackendBucketObservation) DeepCopy() *BackendBucketObservation {
	if in == nil {
		return nil
	}
	out := new(BackendBucketObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BackendBucketParameters) DeepCopyInto(out *BackendBucketParameters) {
	*out = *in
	if in.BucketName != nil {
		in, out := &in.BucketName, &out.BucketName
		*out = new(string)
		**out = **in
	}
	if in.BucketNameRef != nil {
		in, out := &in.BucketNameRef, &out.BucketNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.BucketNameSelector != nil {
		in, out := &in.BucketNameSelector, &out.BucketNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.CdnPolicy != nil {
		in, out := &in.CdnPolicy, &out.CdnPolicy
		*out = make([]CdnPolicyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CompressionMode != nil {
		in, out := &in.CompressionMode, &out.CompressionMode
		*out = new(string)
		**out = **in
	}
	if in.CustomResponseHeaders != nil {
		in, out := &in.CustomResponseHeaders, &out.CustomResponseHeaders
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.EdgeSecurityPolicy != nil {
		in, out := &in.EdgeSecurityPolicy, &out.EdgeSecurityPolicy
		*out = new(string)
		**out = **in
	}
	if in.EdgeSecurityPolicyRef != nil {
		in, out := &in.EdgeSecurityPolicyRef, &out.EdgeSecurityPolicyRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.EdgeSecurityPolicySelector != nil {
		in, out := &in.EdgeSecurityPolicySelector, &out.EdgeSecurityPolicySelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.EnableCdn != nil {
		in, out := &in.EnableCdn, &out.EnableCdn
		*out = new(bool)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BackendBucketParameters.
func (in *BackendBucketParameters) DeepCopy() *BackendBucketParameters {
	if in == nil {
		return nil
	}
	out := new(BackendBucketParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BackendBucketSignedURLKey) DeepCopyInto(out *BackendBucketSignedURLKey) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BackendBucketSignedURLKey.
func (in *BackendBucketSignedURLKey) DeepCopy() *BackendBucketSignedURLKey {
	if in == nil {
		return nil
	}
	out := new(BackendBucketSignedURLKey)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *BackendBucketSignedURLKey) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BackendBucketSignedURLKeyInitParameters) DeepCopyInto(out *BackendBucketSignedURLKeyInitParameters) {
	*out = *in
	if in.BackendBucket != nil {
		in, out := &in.BackendBucket, &out.BackendBucket
		*out = new(string)
		**out = **in
	}
	if in.BackendBucketRef != nil {
		in, out := &in.BackendBucketRef, &out.BackendBucketRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.BackendBucketSelector != nil {
		in, out := &in.BackendBucketSelector, &out.BackendBucketSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	out.KeyValueSecretRef = in.KeyValueSecretRef
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BackendBucketSignedURLKeyInitParameters.
func (in *BackendBucketSignedURLKeyInitParameters) DeepCopy() *BackendBucketSignedURLKeyInitParameters {
	if in == nil {
		return nil
	}
	out := new(BackendBucketSignedURLKeyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BackendBucketSignedURLKeyList) DeepCopyInto(out *BackendBucketSignedURLKeyList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]BackendBucketSignedURLKey, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BackendBucketSignedURLKeyList.
func (in *BackendBucketSignedURLKeyList) DeepCopy() *BackendBucketSignedURLKeyList {
	if in == nil {
		return nil
	}
	out := new(BackendBucketSignedURLKeyList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *BackendBucketSignedURLKeyList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BackendBucketSignedURLKeyObservation) DeepCopyInto(out *BackendBucketSignedURLKeyObservation) {
	*out = *in
	if in.BackendBucket != nil {
		in, out := &in.BackendBucket, &out.BackendBucket
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BackendBucketSignedURLKeyObservation.
func (in *BackendBucketSignedURLKeyObservation) DeepCopy() *BackendBucketSignedURLKeyObservation {
	if in == nil {
		return nil
	}
	out := new(BackendBucketSignedURLKeyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BackendBucketSignedURLKeyParameters) DeepCopyInto(out *BackendBucketSignedURLKeyParameters) {
	*out = *in
	if in.BackendBucket != nil {
		in, out := &in.BackendBucket, &out.BackendBucket
		*out = new(string)
		**out = **in
	}
	if in.BackendBucketRef != nil {
		in, out := &in.BackendBucketRef, &out.BackendBucketRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.BackendBucketSelector != nil {
		in, out := &in.BackendBucketSelector, &out.BackendBucketSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	out.KeyValueSecretRef = in.KeyValueSecretRef
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BackendBucketSignedURLKeyParameters.
func (in *BackendBucketSignedURLKeyParameters) DeepCopy() *BackendBucketSignedURLKeyParameters {
	if in == nil {
		return nil
	}
	out := new(BackendBucketSignedURLKeyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BackendBucketSignedURLKeySpec) DeepCopyInto(out *BackendBucketSignedURLKeySpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BackendBucketSignedURLKeySpec.
func (in *BackendBucketSignedURLKeySpec) DeepCopy() *BackendBucketSignedURLKeySpec {
	if in == nil {
		return nil
	}
	out := new(BackendBucketSignedURLKeySpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BackendBucketSignedURLKeyStatus) DeepCopyInto(out *BackendBucketSignedURLKeyStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BackendBucketSignedURLKeyStatus.
func (in *BackendBucketSignedURLKeyStatus) DeepCopy() *BackendBucketSignedURLKeyStatus {
	if in == nil {
		return nil
	}
	out := new(BackendBucketSignedURLKeyStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BackendBucketSpec) DeepCopyInto(out *BackendBucketSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BackendBucketSpec.
func (in *BackendBucketSpec) DeepCopy() *BackendBucketSpec {
	if in == nil {
		return nil
	}
	out := new(BackendBucketSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BackendBucketStatus) DeepCopyInto(out *BackendBucketStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BackendBucketStatus.
func (in *BackendBucketStatus) DeepCopy() *BackendBucketStatus {
	if in == nil {
		return nil
	}
	out := new(BackendBucketStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BackendInitParameters) DeepCopyInto(out *BackendInitParameters) {
	*out = *in
	if in.BalancingMode != nil {
		in, out := &in.BalancingMode, &out.BalancingMode
		*out = new(string)
		**out = **in
	}
	if in.CapacityScaler != nil {
		in, out := &in.CapacityScaler, &out.CapacityScaler
		*out = new(float64)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Group != nil {
		in, out := &in.Group, &out.Group
		*out = new(string)
		**out = **in
	}
	if in.GroupRef != nil {
		in, out := &in.GroupRef, &out.GroupRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.GroupSelector != nil {
		in, out := &in.GroupSelector, &out.GroupSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.MaxConnections != nil {
		in, out := &in.MaxConnections, &out.MaxConnections
		*out = new(float64)
		**out = **in
	}
	if in.MaxConnectionsPerEndpoint != nil {
		in, out := &in.MaxConnectionsPerEndpoint, &out.MaxConnectionsPerEndpoint
		*out = new(float64)
		**out = **in
	}
	if in.MaxConnectionsPerInstance != nil {
		in, out := &in.MaxConnectionsPerInstance, &out.MaxConnectionsPerInstance
		*out = new(float64)
		**out = **in
	}
	if in.MaxRate != nil {
		in, out := &in.MaxRate, &out.MaxRate
		*out = new(float64)
		**out = **in
	}
	if in.MaxRatePerEndpoint != nil {
		in, out := &in.MaxRatePerEndpoint, &out.MaxRatePerEndpoint
		*out = new(float64)
		**out = **in
	}
	if in.MaxRatePerInstance != nil {
		in, out := &in.MaxRatePerInstance, &out.MaxRatePerInstance
		*out = new(float64)
		**out = **in
	}
	if in.MaxUtilization != nil {
		in, out := &in.MaxUtilization, &out.MaxUtilization
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BackendInitParameters.
func (in *BackendInitParameters) DeepCopy() *BackendInitParameters {
	if in == nil {
		return nil
	}
	out := new(BackendInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BackendObservation) DeepCopyInto(out *BackendObservation) {
	*out = *in
	if in.BalancingMode != nil {
		in, out := &in.BalancingMode, &out.BalancingMode
		*out = new(string)
		**out = **in
	}
	if in.CapacityScaler != nil {
		in, out := &in.CapacityScaler, &out.CapacityScaler
		*out = new(float64)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Group != nil {
		in, out := &in.Group, &out.Group
		*out = new(string)
		**out = **in
	}
	if in.MaxConnections != nil {
		in, out := &in.MaxConnections, &out.MaxConnections
		*out = new(float64)
		**out = **in
	}
	if in.MaxConnectionsPerEndpoint != nil {
		in, out := &in.MaxConnectionsPerEndpoint, &out.MaxConnectionsPerEndpoint
		*out = new(float64)
		**out = **in
	}
	if in.MaxConnectionsPerInstance != nil {
		in, out := &in.MaxConnectionsPerInstance, &out.MaxConnectionsPerInstance
		*out = new(float64)
		**out = **in
	}
	if in.MaxRate != nil {
		in, out := &in.MaxRate, &out.MaxRate
		*out = new(float64)
		**out = **in
	}
	if in.MaxRatePerEndpoint != nil {
		in, out := &in.MaxRatePerEndpoint, &out.MaxRatePerEndpoint
		*out = new(float64)
		**out = **in
	}
	if in.MaxRatePerInstance != nil {
		in, out := &in.MaxRatePerInstance, &out.MaxRatePerInstance
		*out = new(float64)
		**out = **in
	}
	if in.MaxUtilization != nil {
		in, out := &in.MaxUtilization, &out.MaxUtilization
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BackendObservation.
func (in *BackendObservation) DeepCopy() *BackendObservation {
	if in == nil {
		return nil
	}
	out := new(BackendObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BackendParameters) DeepCopyInto(out *BackendParameters) {
	*out = *in
	if in.BalancingMode != nil {
		in, out := &in.BalancingMode, &out.BalancingMode
		*out = new(string)
		**out = **in
	}
	if in.CapacityScaler != nil {
		in, out := &in.CapacityScaler, &out.CapacityScaler
		*out = new(float64)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Group != nil {
		in, out := &in.Group, &out.Group
		*out = new(string)
		**out = **in
	}
	if in.GroupRef != nil {
		in, out := &in.GroupRef, &out.GroupRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.GroupSelector != nil {
		in, out := &in.GroupSelector, &out.GroupSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.MaxConnections != nil {
		in, out := &in.MaxConnections, &out.MaxConnections
		*out = new(float64)
		**out = **in
	}
	if in.MaxConnectionsPerEndpoint != nil {
		in, out := &in.MaxConnectionsPerEndpoint, &out.MaxConnectionsPerEndpoint
		*out = new(float64)
		**out = **in
	}
	if in.MaxConnectionsPerInstance != nil {
		in, out := &in.MaxConnectionsPerInstance, &out.MaxConnectionsPerInstance
		*out = new(float64)
		**out = **in
	}
	if in.MaxRate != nil {
		in, out := &in.MaxRate, &out.MaxRate
		*out = new(float64)
		**out = **in
	}
	if in.MaxRatePerEndpoint != nil {
		in, out := &in.MaxRatePerEndpoint, &out.MaxRatePerEndpoint
		*out = new(float64)
		**out = **in
	}
	if in.MaxRatePerInstance != nil {
		in, out := &in.MaxRatePerInstance, &out.MaxRatePerInstance
		*out = new(float64)
		**out = **in
	}
	if in.MaxUtilization != nil {
		in, out := &in.MaxUtilization, &out.MaxUtilization
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BackendParameters.
func (in *BackendParameters) DeepCopy() *BackendParameters {
	if in == nil {
		return nil
	}
	out := new(BackendParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BackendService) DeepCopyInto(out *BackendService) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BackendService.
func (in *BackendService) DeepCopy() *BackendService {
	if in == nil {
		return nil
	}
	out := new(BackendService)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *BackendService) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BackendServiceCdnPolicyInitParameters) DeepCopyInto(out *BackendServiceCdnPolicyInitParameters) {
	*out = *in
	if in.BypassCacheOnRequestHeaders != nil {
		in, out := &in.BypassCacheOnRequestHeaders, &out.BypassCacheOnRequestHeaders
		*out = make([]CdnPolicyBypassCacheOnRequestHeadersInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CacheKeyPolicy != nil {
		in, out := &in.CacheKeyPolicy, &out.CacheKeyPolicy
		*out = make([]CdnPolicyCacheKeyPolicyInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CacheMode != nil {
		in, out := &in.CacheMode, &out.CacheMode
		*out = new(string)
		**out = **in
	}
	if in.ClientTTL != nil {
		in, out := &in.ClientTTL, &out.ClientTTL
		*out = new(float64)
		**out = **in
	}
	if in.DefaultTTL != nil {
		in, out := &in.DefaultTTL, &out.DefaultTTL
		*out = new(float64)
		**out = **in
	}
	if in.MaxTTL != nil {
		in, out := &in.MaxTTL, &out.MaxTTL
		*out = new(float64)
		**out = **in
	}
	if in.NegativeCaching != nil {
		in, out := &in.NegativeCaching, &out.NegativeCaching
		*out = new(bool)
		**out = **in
	}
	if in.NegativeCachingPolicy != nil {
		in, out := &in.NegativeCachingPolicy, &out.NegativeCachingPolicy
		*out = make([]CdnPolicyNegativeCachingPolicyInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ServeWhileStale != nil {
		in, out := &in.ServeWhileStale, &out.ServeWhileStale
		*out = new(float64)
		**out = **in
	}
	if in.SignedURLCacheMaxAgeSec != nil {
		in, out := &in.SignedURLCacheMaxAgeSec, &out.SignedURLCacheMaxAgeSec
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BackendServiceCdnPolicyInitParameters.
func (in *BackendServiceCdnPolicyInitParameters) DeepCopy() *BackendServiceCdnPolicyInitParameters {
	if in == nil {
		return nil
	}
	out := new(BackendServiceCdnPolicyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BackendServiceCdnPolicyObservation) DeepCopyInto(out *BackendServiceCdnPolicyObservation) {
	*out = *in
	if in.BypassCacheOnRequestHeaders != nil {
		in, out := &in.BypassCacheOnRequestHeaders, &out.BypassCacheOnRequestHeaders
		*out = make([]CdnPolicyBypassCacheOnRequestHeadersObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CacheKeyPolicy != nil {
		in, out := &in.CacheKeyPolicy, &out.CacheKeyPolicy
		*out = make([]CdnPolicyCacheKeyPolicyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CacheMode != nil {
		in, out := &in.CacheMode, &out.CacheMode
		*out = new(string)
		**out = **in
	}
	if in.ClientTTL != nil {
		in, out := &in.ClientTTL, &out.ClientTTL
		*out = new(float64)
		**out = **in
	}
	if in.DefaultTTL != nil {
		in, out := &in.DefaultTTL, &out.DefaultTTL
		*out = new(float64)
		**out = **in
	}
	if in.MaxTTL != nil {
		in, out := &in.MaxTTL, &out.MaxTTL
		*out = new(float64)
		**out = **in
	}
	if in.NegativeCaching != nil {
		in, out := &in.NegativeCaching, &out.NegativeCaching
		*out = new(bool)
		**out = **in
	}
	if in.NegativeCachingPolicy != nil {
		in, out := &in.NegativeCachingPolicy, &out.NegativeCachingPolicy
		*out = make([]CdnPolicyNegativeCachingPolicyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ServeWhileStale != nil {
		in, out := &in.ServeWhileStale, &out.ServeWhileStale
		*out = new(float64)
		**out = **in
	}
	if in.SignedURLCacheMaxAgeSec != nil {
		in, out := &in.SignedURLCacheMaxAgeSec, &out.SignedURLCacheMaxAgeSec
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BackendServiceCdnPolicyObservation.
func (in *BackendServiceCdnPolicyObservation) DeepCopy() *BackendServiceCdnPolicyObservation {
	if in == nil {
		return nil
	}
	out := new(BackendServiceCdnPolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BackendServiceCdnPolicyParameters) DeepCopyInto(out *BackendServiceCdnPolicyParameters) {
	*out = *in
	if in.BypassCacheOnRequestHeaders != nil {
		in, out := &in.BypassCacheOnRequestHeaders, &out.BypassCacheOnRequestHeaders
		*out = make([]CdnPolicyBypassCacheOnRequestHeadersParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CacheKeyPolicy != nil {
		in, out := &in.CacheKeyPolicy, &out.CacheKeyPolicy
		*out = make([]CdnPolicyCacheKeyPolicyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CacheMode != nil {
		in, out := &in.CacheMode, &out.CacheMode
		*out = new(string)
		**out = **in
	}
	if in.ClientTTL != nil {
		in, out := &in.ClientTTL, &out.ClientTTL
		*out = new(float64)
		**out = **in
	}
	if in.DefaultTTL != nil {
		in, out := &in.DefaultTTL, &out.DefaultTTL
		*out = new(float64)
		**out = **in
	}
	if in.MaxTTL != nil {
		in, out := &in.MaxTTL, &out.MaxTTL
		*out = new(float64)
		**out = **in
	}
	if in.NegativeCaching != nil {
		in, out := &in.NegativeCaching, &out.NegativeCaching
		*out = new(bool)
		**out = **in
	}
	if in.NegativeCachingPolicy != nil {
		in, out := &in.NegativeCachingPolicy, &out.NegativeCachingPolicy
		*out = make([]CdnPolicyNegativeCachingPolicyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ServeWhileStale != nil {
		in, out := &in.ServeWhileStale, &out.ServeWhileStale
		*out = new(float64)
		**out = **in
	}
	if in.SignedURLCacheMaxAgeSec != nil {
		in, out := &in.SignedURLCacheMaxAgeSec, &out.SignedURLCacheMaxAgeSec
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BackendServiceCdnPolicyParameters.
func (in *BackendServiceCdnPolicyParameters) DeepCopy() *BackendServiceCdnPolicyParameters {
	if in == nil {
		return nil
	}
	out := new(BackendServiceCdnPolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BackendServiceInitParameters) DeepCopyInto(out *BackendServiceInitParameters) {
	*out = *in
	if in.AffinityCookieTTLSec != nil {
		in, out := &in.AffinityCookieTTLSec, &out.AffinityCookieTTLSec
		*out = new(float64)
		**out = **in
	}
	if in.Backend != nil {
		in, out := &in.Backend, &out.Backend
		*out = make([]BackendInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CdnPolicy != nil {
		in, out := &in.CdnPolicy, &out.CdnPolicy
		*out = make([]BackendServiceCdnPolicyInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CircuitBreakers != nil {
		in, out := &in.CircuitBreakers, &out.CircuitBreakers
		*out = make([]CircuitBreakersInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CompressionMode != nil {
		in, out := &in.CompressionMode, &out.CompressionMode
		*out = new(string)
		**out = **in
	}
	if in.ConnectionDrainingTimeoutSec != nil {
		in, out := &in.ConnectionDrainingTimeoutSec, &out.ConnectionDrainingTimeoutSec
		*out = new(float64)
		**out = **in
	}
	if in.ConsistentHash != nil {
		in, out := &in.ConsistentHash, &out.ConsistentHash
		*out = make([]ConsistentHashInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CustomRequestHeaders != nil {
		in, out := &in.CustomRequestHeaders, &out.CustomRequestHeaders
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CustomResponseHeaders != nil {
		in, out := &in.CustomResponseHeaders, &out.CustomResponseHeaders
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.EdgeSecurityPolicy != nil {
		in, out := &in.EdgeSecurityPolicy, &out.EdgeSecurityPolicy
		*out = new(string)
		**out = **in
	}
	if in.EnableCdn != nil {
		in, out := &in.EnableCdn, &out.EnableCdn
		*out = new(bool)
		**out = **in
	}
	if in.HealthChecks != nil {
		in, out := &in.HealthChecks, &out.HealthChecks
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.HealthChecksRefs != nil {
		in, out := &in.HealthChecksRefs, &out.HealthChecksRefs
		*out = make([]v1.Reference, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HealthChecksSelector != nil {
		in, out := &in.HealthChecksSelector, &out.HealthChecksSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Iap != nil {
		in, out := &in.Iap, &out.Iap
		*out = make([]IapInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LoadBalancingScheme != nil {
		in, out := &in.LoadBalancingScheme, &out.LoadBalancingScheme
		*out = new(string)
		**out = **in
	}
	if in.LocalityLBPolicies != nil {
		in, out := &in.LocalityLBPolicies, &out.LocalityLBPolicies
		*out = make([]LocalityLBPoliciesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LocalityLBPolicy != nil {
		in, out := &in.LocalityLBPolicy, &out.LocalityLBPolicy
		*out = new(string)
		**out = **in
	}
	if in.LogConfig != nil {
		in, out := &in.LogConfig, &out.LogConfig
		*out = make([]LogConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OutlierDetection != nil {
		in, out := &in.OutlierDetection, &out.OutlierDetection
		*out = make([]OutlierDetectionInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PortName != nil {
		in, out := &in.PortName, &out.PortName
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Protocol != nil {
		in, out := &in.Protocol, &out.Protocol
		*out = new(string)
		**out = **in
	}
	if in.SecurityPolicy != nil {
		in, out := &in.SecurityPolicy, &out.SecurityPolicy
		*out = new(string)
		**out = **in
	}
	if in.SecuritySettings != nil {
		in, out := &in.SecuritySettings, &out.SecuritySettings
		*out = make([]SecuritySettingsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ServiceLBPolicy != nil {
		in, out := &in.ServiceLBPolicy, &out.ServiceLBPolicy
		*out = new(string)
		**out = **in
	}
	if in.SessionAffinity != nil {
		in, out := &in.SessionAffinity, &out.SessionAffinity
		*out = new(string)
		**out = **in
	}
	if in.TimeoutSec != nil {
		in, out := &in.TimeoutSec, &out.TimeoutSec
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BackendServiceInitParameters.
func (in *BackendServiceInitParameters) DeepCopy() *BackendServiceInitParameters {
	if in == nil {
		return nil
	}
	out := new(BackendServiceInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BackendServiceList) DeepCopyInto(out *BackendServiceList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]BackendService, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BackendServiceList.
func (in *BackendServiceList) DeepCopy() *BackendServiceList {
	if in == nil {
		return nil
	}
	out := new(BackendServiceList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *BackendServiceList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BackendServiceObservation) DeepCopyInto(out *BackendServiceObservation) {
	*out = *in
	if in.AffinityCookieTTLSec != nil {
		in, out := &in.AffinityCookieTTLSec, &out.AffinityCookieTTLSec
		*out = new(float64)
		**out = **in
	}
	if in.Backend != nil {
		in, out := &in.Backend, &out.Backend
		*out = make([]BackendObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CdnPolicy != nil {
		in, out := &in.CdnPolicy, &out.CdnPolicy
		*out = make([]BackendServiceCdnPolicyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CircuitBreakers != nil {
		in, out := &in.CircuitBreakers, &out.CircuitBreakers
		*out = make([]CircuitBreakersObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CompressionMode != nil {
		in, out := &in.CompressionMode, &out.CompressionMode
		*out = new(string)
		**out = **in
	}
	if in.ConnectionDrainingTimeoutSec != nil {
		in, out := &in.ConnectionDrainingTimeoutSec, &out.ConnectionDrainingTimeoutSec
		*out = new(float64)
		**out = **in
	}
	if in.ConsistentHash != nil {
		in, out := &in.ConsistentHash, &out.ConsistentHash
		*out = make([]ConsistentHashObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CreationTimestamp != nil {
		in, out := &in.CreationTimestamp, &out.CreationTimestamp
		*out = new(string)
		**out = **in
	}
	if in.CustomRequestHeaders != nil {
		in, out := &in.CustomRequestHeaders, &out.CustomRequestHeaders
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CustomResponseHeaders != nil {
		in, out := &in.CustomResponseHeaders, &out.CustomResponseHeaders
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.EdgeSecurityPolicy != nil {
		in, out := &in.EdgeSecurityPolicy, &out.EdgeSecurityPolicy
		*out = new(string)
		**out = **in
	}
	if in.EnableCdn != nil {
		in, out := &in.EnableCdn, &out.EnableCdn
		*out = new(bool)
		**out = **in
	}
	if in.Fingerprint != nil {
		in, out := &in.Fingerprint, &out.Fingerprint
		*out = new(string)
		**out = **in
	}
	if in.GeneratedID != nil {
		in, out := &in.GeneratedID, &out.GeneratedID
		*out = new(float64)
		**out = **in
	}
	if in.HealthChecks != nil {
		in, out := &in.HealthChecks, &out.HealthChecks
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Iap != nil {
		in, out := &in.Iap, &out.Iap
		*out = make([]IapObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LoadBalancingScheme != nil {
		in, out := &in.LoadBalancingScheme, &out.LoadBalancingScheme
		*out = new(string)
		**out = **in
	}
	if in.LocalityLBPolicies != nil {
		in, out := &in.LocalityLBPolicies, &out.LocalityLBPolicies
		*out = make([]LocalityLBPoliciesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LocalityLBPolicy != nil {
		in, out := &in.LocalityLBPolicy, &out.LocalityLBPolicy
		*out = new(string)
		**out = **in
	}
	if in.LogConfig != nil {
		in, out := &in.LogConfig, &out.LogConfig
		*out = make([]LogConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OutlierDetection != nil {
		in, out := &in.OutlierDetection, &out.OutlierDetection
		*out = make([]OutlierDetectionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PortName != nil {
		in, out := &in.PortName, &out.PortName
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Protocol != nil {
		in, out := &in.Protocol, &out.Protocol
		*out = new(string)
		**out = **in
	}
	if in.SecurityPolicy != nil {
		in, out := &in.SecurityPolicy, &out.SecurityPolicy
		*out = new(string)
		**out = **in
	}
	if in.SecuritySettings != nil {
		in, out := &in.SecuritySettings, &out.SecuritySettings
		*out = make([]SecuritySettingsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SelfLink != nil {
		in, out := &in.SelfLink, &out.SelfLink
		*out = new(string)
		**out = **in
	}
	if in.ServiceLBPolicy != nil {
		in, out := &in.ServiceLBPolicy, &out.ServiceLBPolicy
		*out = new(string)
		**out = **in
	}
	if in.SessionAffinity != nil {
		in, out := &in.SessionAffinity, &out.SessionAffinity
		*out = new(string)
		**out = **in
	}
	if in.TimeoutSec != nil {
		in, out := &in.TimeoutSec, &out.TimeoutSec
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BackendServiceObservation.
func (in *BackendServiceObservation) DeepCopy() *BackendServiceObservation {
	if in == nil {
		return nil
	}
	out := new(BackendServiceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BackendServiceParameters) DeepCopyInto(out *BackendServiceParameters) {
	*out = *in
	if in.AffinityCookieTTLSec != nil {
		in, out := &in.AffinityCookieTTLSec, &out.AffinityCookieTTLSec
		*out = new(float64)
		**out = **in
	}
	if in.Backend != nil {
		in, out := &in.Backend, &out.Backend
		*out = make([]BackendParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CdnPolicy != nil {
		in, out := &in.CdnPolicy, &out.CdnPolicy
		*out = make([]BackendServiceCdnPolicyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CircuitBreakers != nil {
		in, out := &in.CircuitBreakers, &out.CircuitBreakers
		*out = make([]CircuitBreakersParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CompressionMode != nil {
		in, out := &in.CompressionMode, &out.CompressionMode
		*out = new(string)
		**out = **in
	}
	if in.ConnectionDrainingTimeoutSec != nil {
		in, out := &in.ConnectionDrainingTimeoutSec, &out.ConnectionDrainingTimeoutSec
		*out = new(float64)
		**out = **in
	}
	if in.ConsistentHash != nil {
		in, out := &in.ConsistentHash, &out.ConsistentHash
		*out = make([]ConsistentHashParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CustomRequestHeaders != nil {
		in, out := &in.CustomRequestHeaders, &out.CustomRequestHeaders
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CustomResponseHeaders != nil {
		in, out := &in.CustomResponseHeaders, &out.CustomResponseHeaders
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.EdgeSecurityPolicy != nil {
		in, out := &in.EdgeSecurityPolicy, &out.EdgeSecurityPolicy
		*out = new(string)
		**out = **in
	}
	if in.EnableCdn != nil {
		in, out := &in.EnableCdn, &out.EnableCdn
		*out = new(bool)
		**out = **in
	}
	if in.HealthChecks != nil {
		in, out := &in.HealthChecks, &out.HealthChecks
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.HealthChecksRefs != nil {
		in, out := &in.HealthChecksRefs, &out.HealthChecksRefs
		*out = make([]v1.Reference, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HealthChecksSelector != nil {
		in, out := &in.HealthChecksSelector, &out.HealthChecksSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Iap != nil {
		in, out := &in.Iap, &out.Iap
		*out = make([]IapParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LoadBalancingScheme != nil {
		in, out := &in.LoadBalancingScheme, &out.LoadBalancingScheme
		*out = new(string)
		**out = **in
	}
	if in.LocalityLBPolicies != nil {
		in, out := &in.LocalityLBPolicies, &out.LocalityLBPolicies
		*out = make([]LocalityLBPoliciesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LocalityLBPolicy != nil {
		in, out := &in.LocalityLBPolicy, &out.LocalityLBPolicy
		*out = new(string)
		**out = **in
	}
	if in.LogConfig != nil {
		in, out := &in.LogConfig, &out.LogConfig
		*out = make([]LogConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OutlierDetection != nil {
		in, out := &in.OutlierDetection, &out.OutlierDetection
		*out = make([]OutlierDetectionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PortName != nil {
		in, out := &in.PortName, &out.PortName
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Protocol != nil {
		in, out := &in.Protocol, &out.Protocol
		*out = new(string)
		**out = **in
	}
	if in.SecurityPolicy != nil {
		in, out := &in.SecurityPolicy, &out.SecurityPolicy
		*out = new(string)
		**out = **in
	}
	if in.SecuritySettings != nil {
		in, out := &in.SecuritySettings, &out.SecuritySettings
		*out = make([]SecuritySettingsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ServiceLBPolicy != nil {
		in, out := &in.ServiceLBPolicy, &out.ServiceLBPolicy
		*out = new(string)
		**out = **in
	}
	if in.SessionAffinity != nil {
		in, out := &in.SessionAffinity, &out.SessionAffinity
		*out = new(string)
		**out = **in
	}
	if in.TimeoutSec != nil {
		in, out := &in.TimeoutSec, &out.TimeoutSec
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BackendServiceParameters.
func (in *BackendServiceParameters) DeepCopy() *BackendServiceParameters {
	if in == nil {
		return nil
	}
	out := new(BackendServiceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BackendServiceSignedURLKey) DeepCopyInto(out *BackendServiceSignedURLKey) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BackendServiceSignedURLKey.
func (in *BackendServiceSignedURLKey) DeepCopy() *BackendServiceSignedURLKey {
	if in == nil {
		return nil
	}
	out := new(BackendServiceSignedURLKey)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *BackendServiceSignedURLKey) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BackendServiceSignedURLKeyInitParameters) DeepCopyInto(out *BackendServiceSignedURLKeyInitParameters) {
	*out = *in
	if in.BackendService != nil {
		in, out := &in.BackendService, &out.BackendService
		*out = new(string)
		**out = **in
	}
	if in.BackendServiceRef != nil {
		in, out := &in.BackendServiceRef, &out.BackendServiceRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.BackendServiceSelector != nil {
		in, out := &in.BackendServiceSelector, &out.BackendServiceSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	out.KeyValueSecretRef = in.KeyValueSecretRef
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BackendServiceSignedURLKeyInitParameters.
func (in *BackendServiceSignedURLKeyInitParameters) DeepCopy() *BackendServiceSignedURLKeyInitParameters {
	if in == nil {
		return nil
	}
	out := new(BackendServiceSignedURLKeyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BackendServiceSignedURLKeyList) DeepCopyInto(out *BackendServiceSignedURLKeyList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]BackendServiceSignedURLKey, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BackendServiceSignedURLKeyList.
func (in *BackendServiceSignedURLKeyList) DeepCopy() *BackendServiceSignedURLKeyList {
	if in == nil {
		return nil
	}
	out := new(BackendServiceSignedURLKeyList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *BackendServiceSignedURLKeyList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BackendServiceSignedURLKeyObservation) DeepCopyInto(out *BackendServiceSignedURLKeyObservation) {
	*out = *in
	if in.BackendService != nil {
		in, out := &in.BackendService, &out.BackendService
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BackendServiceSignedURLKeyObservation.
func (in *BackendServiceSignedURLKeyObservation) DeepCopy() *BackendServiceSignedURLKeyObservation {
	if in == nil {
		return nil
	}
	out := new(BackendServiceSignedURLKeyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BackendServiceSignedURLKeyParameters) DeepCopyInto(out *BackendServiceSignedURLKeyParameters) {
	*out = *in
	if in.BackendService != nil {
		in, out := &in.BackendService, &out.BackendService
		*out = new(string)
		**out = **in
	}
	if in.BackendServiceRef != nil {
		in, out := &in.BackendServiceRef, &out.BackendServiceRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.BackendServiceSelector != nil {
		in, out := &in.BackendServiceSelector, &out.BackendServiceSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	out.KeyValueSecretRef = in.KeyValueSecretRef
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BackendServiceSignedURLKeyParameters.
func (in *BackendServiceSignedURLKeyParameters) DeepCopy() *BackendServiceSignedURLKeyParameters {
	if in == nil {
		return nil
	}
	out := new(BackendServiceSignedURLKeyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BackendServiceSignedURLKeySpec) DeepCopyInto(out *BackendServiceSignedURLKeySpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BackendServiceSignedURLKeySpec.
func (in *BackendServiceSignedURLKeySpec) DeepCopy() *BackendServiceSignedURLKeySpec {
	if in == nil {
		return nil
	}
	out := new(BackendServiceSignedURLKeySpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BackendServiceSignedURLKeyStatus) DeepCopyInto(out *BackendServiceSignedURLKeyStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BackendServiceSignedURLKeyStatus.
func (in *BackendServiceSignedURLKeyStatus) DeepCopy() *BackendServiceSignedURLKeyStatus {
	if in == nil {
		return nil
	}
	out := new(BackendServiceSignedURLKeyStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BackendServiceSpec) DeepCopyInto(out *BackendServiceSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BackendServiceSpec.
func (in *BackendServiceSpec) DeepCopy() *BackendServiceSpec {
	if in == nil {
		return nil
	}
	out := new(BackendServiceSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BackendServiceStatus) DeepCopyInto(out *BackendServiceStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BackendServiceStatus.
func (in *BackendServiceStatus) DeepCopy() *BackendServiceStatus {
	if in == nil {
		return nil
	}
	out := new(BackendServiceStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BanThresholdInitParameters) DeepCopyInto(out *BanThresholdInitParameters) {
	*out = *in
	if in.Count != nil {
		in, out := &in.Count, &out.Count
		*out = new(float64)
		**out = **in
	}
	if in.IntervalSec != nil {
		in, out := &in.IntervalSec, &out.IntervalSec
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BanThresholdInitParameters.
func (in *BanThresholdInitParameters) DeepCopy() *BanThresholdInitParameters {
	if in == nil {
		return nil
	}
	out := new(BanThresholdInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BanThresholdObservation) DeepCopyInto(out *BanThresholdObservation) {
	*out = *in
	if in.Count != nil {
		in, out := &in.Count, &out.Count
		*out = new(float64)
		**out = **in
	}
	if in.IntervalSec != nil {
		in, out := &in.IntervalSec, &out.IntervalSec
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BanThresholdObservation.
func (in *BanThresholdObservation) DeepCopy() *BanThresholdObservation {
	if in == nil {
		return nil
	}
	out := new(BanThresholdObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BanThresholdParameters) DeepCopyInto(out *BanThresholdParameters) {
	*out = *in
	if in.Count != nil {
		in, out := &in.Count, &out.Count
		*out = new(float64)
		**out = **in
	}
	if in.IntervalSec != nil {
		in, out := &in.IntervalSec, &out.IntervalSec
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BanThresholdParameters.
func (in *BanThresholdParameters) DeepCopy() *BanThresholdParameters {
	if in == nil {
		return nil
	}
	out := new(BanThresholdParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BaseEjectionTimeInitParameters) DeepCopyInto(out *BaseEjectionTimeInitParameters) {
	*out = *in
	if in.Nanos != nil {
		in, out := &in.Nanos, &out.Nanos
		*out = new(float64)
		**out = **in
	}
	if in.Seconds != nil {
		in, out := &in.Seconds, &out.Seconds
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BaseEjectionTimeInitParameters.
func (in *BaseEjectionTimeInitParameters) DeepCopy() *BaseEjectionTimeInitParameters {
	if in == nil {
		return nil
	}
	out := new(BaseEjectionTimeInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BaseEjectionTimeObservation) DeepCopyInto(out *BaseEjectionTimeObservation) {
	*out = *in
	if in.Nanos != nil {
		in, out := &in.Nanos, &out.Nanos
		*out = new(float64)
		**out = **in
	}
	if in.Seconds != nil {
		in, out := &in.Seconds, &out.Seconds
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BaseEjectionTimeObservation.
func (in *BaseEjectionTimeObservation) DeepCopy() *BaseEjectionTimeObservation {
	if in == nil {
		return nil
	}
	out := new(BaseEjectionTimeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BaseEjectionTimeParameters) DeepCopyInto(out *BaseEjectionTimeParameters) {
	*out = *in
	if in.Nanos != nil {
		in, out := &in.Nanos, &out.Nanos
		*out = new(float64)
		**out = **in
	}
	if in.Seconds != nil {
		in, out := &in.Seconds, &out.Seconds
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BaseEjectionTimeParameters.
func (in *BaseEjectionTimeParameters) DeepCopy() *BaseEjectionTimeParameters {
	if in == nil {
		return nil
	}
	out := new(BaseEjectionTimeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BfdInitParameters) DeepCopyInto(out *BfdInitParameters) {
	*out = *in
	if in.MinReceiveInterval != nil {
		in, out := &in.MinReceiveInterval, &out.MinReceiveInterval
		*out = new(float64)
		**out = **in
	}
	if in.MinTransmitInterval != nil {
		in, out := &in.MinTransmitInterval, &out.MinTransmitInterval
		*out = new(float64)
		**out = **in
	}
	if in.Multiplier != nil {
		in, out := &in.Multiplier, &out.Multiplier
		*out = new(float64)
		**out = **in
	}
	if in.SessionInitializationMode != nil {
		in, out := &in.SessionInitializationMode, &out.SessionInitializationMode
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BfdInitParameters.
func (in *BfdInitParameters) DeepCopy() *BfdInitParameters {
	if in == nil {
		return nil
	}
	out := new(BfdInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BfdObservation) DeepCopyInto(out *BfdObservation) {
	*out = *in
	if in.MinReceiveInterval != nil {
		in, out := &in.MinReceiveInterval, &out.MinReceiveInterval
		*out = new(float64)
		**out = **in
	}
	if in.MinTransmitInterval != nil {
		in, out := &in.MinTransmitInterval, &out.MinTransmitInterval
		*out = new(float64)
		**out = **in
	}
	if in.Multiplier != nil {
		in, out := &in.Multiplier, &out.Multiplier
		*out = new(float64)
		**out = **in
	}
	if in.SessionInitializationMode != nil {
		in, out := &in.SessionInitializationMode, &out.SessionInitializationMode
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BfdObservation.
func (in *BfdObservation) DeepCopy() *BfdObservation {
	if in == nil {
		return nil
	}
	out := new(BfdObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BfdParameters) DeepCopyInto(out *BfdParameters) {
	*out = *in
	if in.MinReceiveInterval != nil {
		in, out := &in.MinReceiveInterval, &out.MinReceiveInterval
		*out = new(float64)
		**out = **in
	}
	if in.MinTransmitInterval != nil {
		in, out := &in.MinTransmitInterval, &out.MinTransmitInterval
		*out = new(float64)
		**out = **in
	}
	if in.Multiplier != nil {
		in, out := &in.Multiplier, &out.Multiplier
		*out = new(float64)
		**out = **in
	}
	if in.SessionInitializationMode != nil {
		in, out := &in.SessionInitializationMode, &out.SessionInitializationMode
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BfdParameters.
func (in *BfdParameters) DeepCopy() *BfdParameters {
	if in == nil {
		return nil
	}
	out := new(BfdParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BootDiskInitParameters) DeepCopyInto(out *BootDiskInitParameters) {
	*out = *in
	if in.AutoDelete != nil {
		in, out := &in.AutoDelete, &out.AutoDelete
		*out = new(bool)
		**out = **in
	}
	if in.DeviceName != nil {
		in, out := &in.DeviceName, &out.DeviceName
		*out = new(string)
		**out = **in
	}
	if in.DiskEncryptionKeyRawSecretRef != nil {
		in, out := &in.DiskEncryptionKeyRawSecretRef, &out.DiskEncryptionKeyRawSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.InitializeParams != nil {
		in, out := &in.InitializeParams, &out.InitializeParams
		*out = make([]InitializeParamsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.KMSKeySelfLink != nil {
		in, out := &in.KMSKeySelfLink, &out.KMSKeySelfLink
		*out = new(string)
		**out = **in
	}
	if in.Mode != nil {
		in, out := &in.Mode, &out.Mode
		*out = new(string)
		**out = **in
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BootDiskInitParameters.
func (in *BootDiskInitParameters) DeepCopy() *BootDiskInitParameters {
	if in == nil {
		return nil
	}
	out := new(BootDiskInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BootDiskInitializeParamsInitParameters) DeepCopyInto(out *BootDiskInitializeParamsInitParameters) {
	*out = *in
	if in.EnableConfidentialCompute != nil {
		in, out := &in.EnableConfidentialCompute, &out.EnableConfidentialCompute
		*out = new(bool)
		**out = **in
	}
	if in.Image != nil {
		in, out := &in.Image, &out.Image
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.ProvisionedIops != nil {
		in, out := &in.ProvisionedIops, &out.ProvisionedIops
		*out = new(float64)
		**out = **in
	}
	if in.ProvisionedThroughput != nil {
		in, out := &in.ProvisionedThroughput, &out.ProvisionedThroughput
		*out = new(float64)
		**out = **in
	}
	if in.ResourceManagerTags != nil {
		in, out := &in.ResourceManagerTags, &out.ResourceManagerTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(float64)
		**out = **in
	}
	if in.StoragePool != nil {
		in, out := &in.StoragePool, &out.StoragePool
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BootDiskInitializeParamsInitParameters.
func (in *BootDiskInitializeParamsInitParameters) DeepCopy() *BootDiskInitializeParamsInitParameters {
	if in == nil {
		return nil
	}
	out := new(BootDiskInitializeParamsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BootDiskInitializeParamsObservation) DeepCopyInto(out *BootDiskInitializeParamsObservation) {
	*out = *in
	if in.EnableConfidentialCompute != nil {
		in, out := &in.EnableConfidentialCompute, &out.EnableConfidentialCompute
		*out = new(bool)
		**out = **in
	}
	if in.Image != nil {
		in, out := &in.Image, &out.Image
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.ProvisionedIops != nil {
		in, out := &in.ProvisionedIops, &out.ProvisionedIops
		*out = new(float64)
		**out = **in
	}
	if in.ProvisionedThroughput != nil {
		in, out := &in.ProvisionedThroughput, &out.ProvisionedThroughput
		*out = new(float64)
		**out = **in
	}
	if in.ResourceManagerTags != nil {
		in, out := &in.ResourceManagerTags, &out.ResourceManagerTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(float64)
		**out = **in
	}
	if in.StoragePool != nil {
		in, out := &in.StoragePool, &out.StoragePool
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BootDiskInitializeParamsObservation.
func (in *BootDiskInitializeParamsObservation) DeepCopy() *BootDiskInitializeParamsObservation {
	if in == nil {
		return nil
	}
	out := new(BootDiskInitializeParamsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BootDiskInitializeParamsParameters) DeepCopyInto(out *BootDiskInitializeParamsParameters) {
	*out = *in
	if in.EnableConfidentialCompute != nil {
		in, out := &in.EnableConfidentialCompute, &out.EnableConfidentialCompute
		*out = new(bool)
		**out = **in
	}
	if in.Image != nil {
		in, out := &in.Image, &out.Image
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.ProvisionedIops != nil {
		in, out := &in.ProvisionedIops, &out.ProvisionedIops
		*out = new(float64)
		**out = **in
	}
	if in.ProvisionedThroughput != nil {
		in, out := &in.ProvisionedThroughput, &out.ProvisionedThroughput
		*out = new(float64)
		**out = **in
	}
	if in.ResourceManagerTags != nil {
		in, out := &in.ResourceManagerTags, &out.ResourceManagerTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(float64)
		**out = **in
	}
	if in.StoragePool != nil {
		in, out := &in.StoragePool, &out.StoragePool
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BootDiskInitializeParamsParameters.
func (in *BootDiskInitializeParamsParameters) DeepCopy() *BootDiskInitializeParamsParameters {
	if in == nil {
		return nil
	}
	out := new(BootDiskInitializeParamsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BootDiskObservation) DeepCopyInto(out *BootDiskObservation) {
	*out = *in
	if in.AutoDelete != nil {
		in, out := &in.AutoDelete, &out.AutoDelete
		*out = new(bool)
		**out = **in
	}
	if in.DeviceName != nil {
		in, out := &in.DeviceName, &out.DeviceName
		*out = new(string)
		**out = **in
	}
	if in.DiskEncryptionKeySha256 != nil {
		in, out := &in.DiskEncryptionKeySha256, &out.DiskEncryptionKeySha256
		*out = new(string)
		**out = **in
	}
	if in.InitializeParams != nil {
		in, out := &in.InitializeParams, &out.InitializeParams
		*out = make([]InitializeParamsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.KMSKeySelfLink != nil {
		in, out := &in.KMSKeySelfLink, &out.KMSKeySelfLink
		*out = new(string)
		**out = **in
	}
	if in.Mode != nil {
		in, out := &in.Mode, &out.Mode
		*out = new(string)
		**out = **in
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BootDiskObservation.
func (in *BootDiskObservation) DeepCopy() *BootDiskObservation {
	if in == nil {
		return nil
	}
	out := new(BootDiskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BootDiskParameters) DeepCopyInto(out *BootDiskParameters) {
	*out = *in
	if in.AutoDelete != nil {
		in, out := &in.AutoDelete, &out.AutoDelete
		*out = new(bool)
		**out = **in
	}
	if in.DeviceName != nil {
		in, out := &in.DeviceName, &out.DeviceName
		*out = new(string)
		**out = **in
	}
	if in.DiskEncryptionKeyRawSecretRef != nil {
		in, out := &in.DiskEncryptionKeyRawSecretRef, &out.DiskEncryptionKeyRawSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.InitializeParams != nil {
		in, out := &in.InitializeParams, &out.InitializeParams
		*out = make([]InitializeParamsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.KMSKeySelfLink != nil {
		in, out := &in.KMSKeySelfLink, &out.KMSKeySelfLink
		*out = new(string)
		**out = **in
	}
	if in.Mode != nil {
		in, out := &in.Mode, &out.Mode
		*out = new(string)
		**out = **in
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BootDiskParameters.
func (in *BootDiskParameters) DeepCopy() *BootDiskParameters {
	if in == nil {
		return nil
	}
	out := new(BootDiskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BypassCacheOnRequestHeadersInitParameters) DeepCopyInto(out *BypassCacheOnRequestHeadersInitParameters) {
	*out = *in
	if in.HeaderName != nil {
		in, out := &in.HeaderName, &out.HeaderName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BypassCacheOnRequestHeadersInitParameters.
func (in *BypassCacheOnRequestHeadersInitParameters) DeepCopy() *BypassCacheOnRequestHeadersInitParameters {
	if in == nil {
		return nil
	}
	out := new(BypassCacheOnRequestHeadersInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BypassCacheOnRequestHeadersObservation) DeepCopyInto(out *BypassCacheOnRequestHeadersObservation) {
	*out = *in
	if in.HeaderName != nil {
		in, out := &in.HeaderName, &out.HeaderName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BypassCacheOnRequestHeadersObservation.
func (in *BypassCacheOnRequestHeadersObservation) DeepCopy() *BypassCacheOnRequestHeadersObservation {
	if in == nil {
		return nil
	}
	out := new(BypassCacheOnRequestHeadersObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BypassCacheOnRequestHeadersParameters) DeepCopyInto(out *BypassCacheOnRequestHeadersParameters) {
	*out = *in
	if in.HeaderName != nil {
		in, out := &in.HeaderName, &out.HeaderName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BypassCacheOnRequestHeadersParameters.
func (in *BypassCacheOnRequestHeadersParameters) DeepCopy() *BypassCacheOnRequestHeadersParameters {
	if in == nil {
		return nil
	}
	out := new(BypassCacheOnRequestHeadersParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CPUUtilizationInitParameters) DeepCopyInto(out *CPUUtilizationInitParameters) {
	*out = *in
	if in.PredictiveMethod != nil {
		in, out := &in.PredictiveMethod, &out.PredictiveMethod
		*out = new(string)
		**out = **in
	}
	if in.Target != nil {
		in, out := &in.Target, &out.Target
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CPUUtilizationInitParameters.
func (in *CPUUtilizationInitParameters) DeepCopy() *CPUUtilizationInitParameters {
	if in == nil {
		return nil
	}
	out := new(CPUUtilizationInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CPUUtilizationObservation) DeepCopyInto(out *CPUUtilizationObservation) {
	*out = *in
	if in.PredictiveMethod != nil {
		in, out := &in.PredictiveMethod, &out.PredictiveMethod
		*out = new(string)
		**out = **in
	}
	if in.Target != nil {
		in, out := &in.Target, &out.Target
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CPUUtilizationObservation.
func (in *CPUUtilizationObservation) DeepCopy() *CPUUtilizationObservation {
	if in == nil {
		return nil
	}
	out := new(CPUUtilizationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CPUUtilizationParameters) DeepCopyInto(out *CPUUtilizationParameters) {
	*out = *in
	if in.PredictiveMethod != nil {
		in, out := &in.PredictiveMethod, &out.PredictiveMethod
		*out = new(string)
		**out = **in
	}
	if in.Target != nil {
		in, out := &in.Target, &out.Target
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CPUUtilizationParameters.
func (in *CPUUtilizationParameters) DeepCopy() *CPUUtilizationParameters {
	if in == nil {
		return nil
	}
	out := new(CPUUtilizationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CacheKeyPolicyInitParameters) DeepCopyInto(out *CacheKeyPolicyInitParameters) {
	*out = *in
	if in.IncludeHTTPHeaders != nil {
		in, out := &in.IncludeHTTPHeaders, &out.IncludeHTTPHeaders
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.QueryStringWhitelist != nil {
		in, out := &in.QueryStringWhitelist, &out.QueryStringWhitelist
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CacheKeyPolicyInitParameters.
func (in *CacheKeyPolicyInitParameters) DeepCopy() *CacheKeyPolicyInitParameters {
	if in == nil {
		return nil
	}
	out := new(CacheKeyPolicyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CacheKeyPolicyObservation) DeepCopyInto(out *CacheKeyPolicyObservation) {
	*out = *in
	if in.IncludeHTTPHeaders != nil {
		in, out := &in.IncludeHTTPHeaders, &out.IncludeHTTPHeaders
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.QueryStringWhitelist != nil {
		in, out := &in.QueryStringWhitelist, &out.QueryStringWhitelist
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CacheKeyPolicyObservation.
func (in *CacheKeyPolicyObservation) DeepCopy() *CacheKeyPolicyObservation {
	if in == nil {
		return nil
	}
	out := new(CacheKeyPolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CacheKeyPolicyParameters) DeepCopyInto(out *CacheKeyPolicyParameters) {
	*out = *in
	if in.IncludeHTTPHeaders != nil {
		in, out := &in.IncludeHTTPHeaders, &out.IncludeHTTPHeaders
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.QueryStringWhitelist != nil {
		in, out := &in.QueryStringWhitelist, &out.QueryStringWhitelist
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CacheKeyPolicyParameters.
func (in *CacheKeyPolicyParameters) DeepCopy() *CacheKeyPolicyParameters {
	if in == nil {
		return nil
	}
	out := new(CacheKeyPolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CdnPolicyBypassCacheOnRequestHeadersInitParameters) DeepCopyInto(out *CdnPolicyBypassCacheOnRequestHeadersInitParameters) {
	*out = *in
	if in.HeaderName != nil {
		in, out := &in.HeaderName, &out.HeaderName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CdnPolicyBypassCacheOnRequestHeadersInitParameters.
func (in *CdnPolicyBypassCacheOnRequestHeadersInitParameters) DeepCopy() *CdnPolicyBypassCacheOnRequestHeadersInitParameters {
	if in == nil {
		return nil
	}
	out := new(CdnPolicyBypassCacheOnRequestHeadersInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CdnPolicyBypassCacheOnRequestHeadersObservation) DeepCopyInto(out *CdnPolicyBypassCacheOnRequestHeadersObservation) {
	*out = *in
	if in.HeaderName != nil {
		in, out := &in.HeaderName, &out.HeaderName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CdnPolicyBypassCacheOnRequestHeadersObservation.
func (in *CdnPolicyBypassCacheOnRequestHeadersObservation) DeepCopy() *CdnPolicyBypassCacheOnRequestHeadersObservation {
	if in == nil {
		return nil
	}
	out := new(CdnPolicyBypassCacheOnRequestHeadersObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CdnPolicyBypassCacheOnRequestHeadersParameters) DeepCopyInto(out *CdnPolicyBypassCacheOnRequestHeadersParameters) {
	*out = *in
	if in.HeaderName != nil {
		in, out := &in.HeaderName, &out.HeaderName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CdnPolicyBypassCacheOnRequestHeadersParameters.
func (in *CdnPolicyBypassCacheOnRequestHeadersParameters) DeepCopy() *CdnPolicyBypassCacheOnRequestHeadersParameters {
	if in == nil {
		return nil
	}
	out := new(CdnPolicyBypassCacheOnRequestHeadersParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CdnPolicyCacheKeyPolicyInitParameters) DeepCopyInto(out *CdnPolicyCacheKeyPolicyInitParameters) {
	*out = *in
	if in.IncludeHTTPHeaders != nil {
		in, out := &in.IncludeHTTPHeaders, &out.IncludeHTTPHeaders
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.IncludeHost != nil {
		in, out := &in.IncludeHost, &out.IncludeHost
		*out = new(bool)
		**out = **in
	}
	if in.IncludeNamedCookies != nil {
		in, out := &in.IncludeNamedCookies, &out.IncludeNamedCookies
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.IncludeProtocol != nil {
		in, out := &in.IncludeProtocol, &out.IncludeProtocol
		*out = new(bool)
		**out = **in
	}
	if in.IncludeQueryString != nil {
		in, out := &in.IncludeQueryString, &out.IncludeQueryString
		*out = new(bool)
		**out = **in
	}
	if in.QueryStringBlacklist != nil {
		in, out := &in.QueryStringBlacklist, &out.QueryStringBlacklist
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.QueryStringWhitelist != nil {
		in, out := &in.QueryStringWhitelist, &out.QueryStringWhitelist
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CdnPolicyCacheKeyPolicyInitParameters.
func (in *CdnPolicyCacheKeyPolicyInitParameters) DeepCopy() *CdnPolicyCacheKeyPolicyInitParameters {
	if in == nil {
		return nil
	}
	out := new(CdnPolicyCacheKeyPolicyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CdnPolicyCacheKeyPolicyObservation) DeepCopyInto(out *CdnPolicyCacheKeyPolicyObservation) {
	*out = *in
	if in.IncludeHTTPHeaders != nil {
		in, out := &in.IncludeHTTPHeaders, &out.IncludeHTTPHeaders
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.IncludeHost != nil {
		in, out := &in.IncludeHost, &out.IncludeHost
		*out = new(bool)
		**out = **in
	}
	if in.IncludeNamedCookies != nil {
		in, out := &in.IncludeNamedCookies, &out.IncludeNamedCookies
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.IncludeProtocol != nil {
		in, out := &in.IncludeProtocol, &out.IncludeProtocol
		*out = new(bool)
		**out = **in
	}
	if in.IncludeQueryString != nil {
		in, out := &in.IncludeQueryString, &out.IncludeQueryString
		*out = new(bool)
		**out = **in
	}
	if in.QueryStringBlacklist != nil {
		in, out := &in.QueryStringBlacklist, &out.QueryStringBlacklist
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.QueryStringWhitelist != nil {
		in, out := &in.QueryStringWhitelist, &out.QueryStringWhitelist
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CdnPolicyCacheKeyPolicyObservation.
func (in *CdnPolicyCacheKeyPolicyObservation) DeepCopy() *CdnPolicyCacheKeyPolicyObservation {
	if in == nil {
		return nil
	}
	out := new(CdnPolicyCacheKeyPolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CdnPolicyCacheKeyPolicyParameters) DeepCopyInto(out *CdnPolicyCacheKeyPolicyParameters) {
	*out = *in
	if in.IncludeHTTPHeaders != nil {
		in, out := &in.IncludeHTTPHeaders, &out.IncludeHTTPHeaders
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.IncludeHost != nil {
		in, out := &in.IncludeHost, &out.IncludeHost
		*out = new(bool)
		**out = **in
	}
	if in.IncludeNamedCookies != nil {
		in, out := &in.IncludeNamedCookies, &out.IncludeNamedCookies
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.IncludeProtocol != nil {
		in, out := &in.IncludeProtocol, &out.IncludeProtocol
		*out = new(bool)
		**out = **in
	}
	if in.IncludeQueryString != nil {
		in, out := &in.IncludeQueryString, &out.IncludeQueryString
		*out = new(bool)
		**out = **in
	}
	if in.QueryStringBlacklist != nil {
		in, out := &in.QueryStringBlacklist, &out.QueryStringBlacklist
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.QueryStringWhitelist != nil {
		in, out := &in.QueryStringWhitelist, &out.QueryStringWhitelist
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CdnPolicyCacheKeyPolicyParameters.
func (in *CdnPolicyCacheKeyPolicyParameters) DeepCopy() *CdnPolicyCacheKeyPolicyParameters {
	if in == nil {
		return nil
	}
	out := new(CdnPolicyCacheKeyPolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CdnPolicyInitParameters) DeepCopyInto(out *CdnPolicyInitParameters) {
	*out = *in
	if in.BypassCacheOnRequestHeaders != nil {
		in, out := &in.BypassCacheOnRequestHeaders, &out.BypassCacheOnRequestHeaders
		*out = make([]BypassCacheOnRequestHeadersInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CacheKeyPolicy != nil {
		in, out := &in.CacheKeyPolicy, &out.CacheKeyPolicy
		*out = make([]CacheKeyPolicyInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CacheMode != nil {
		in, out := &in.CacheMode, &out.CacheMode
		*out = new(string)
		**out = **in
	}
	if in.ClientTTL != nil {
		in, out := &in.ClientTTL, &out.ClientTTL
		*out = new(float64)
		**out = **in
	}
	if in.DefaultTTL != nil {
		in, out := &in.DefaultTTL, &out.DefaultTTL
		*out = new(float64)
		**out = **in
	}
	if in.MaxTTL != nil {
		in, out := &in.MaxTTL, &out.MaxTTL
		*out = new(float64)
		**out = **in
	}
	if in.NegativeCaching != nil {
		in, out := &in.NegativeCaching, &out.NegativeCaching
		*out = new(bool)
		**out = **in
	}
	if in.NegativeCachingPolicy != nil {
		in, out := &in.NegativeCachingPolicy, &out.NegativeCachingPolicy
		*out = make([]NegativeCachingPolicyInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RequestCoalescing != nil {
		in, out := &in.RequestCoalescing, &out.RequestCoalescing
		*out = new(bool)
		**out = **in
	}
	if in.ServeWhileStale != nil {
		in, out := &in.ServeWhileStale, &out.ServeWhileStale
		*out = new(float64)
		**out = **in
	}
	if in.SignedURLCacheMaxAgeSec != nil {
		in, out := &in.SignedURLCacheMaxAgeSec, &out.SignedURLCacheMaxAgeSec
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CdnPolicyInitParameters.
func (in *CdnPolicyInitParameters) DeepCopy() *CdnPolicyInitParameters {
	if in == nil {
		return nil
	}
	out := new(CdnPolicyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CdnPolicyNegativeCachingPolicyInitParameters) DeepCopyInto(out *CdnPolicyNegativeCachingPolicyInitParameters) {
	*out = *in
	if in.Code != nil {
		in, out := &in.Code, &out.Code
		*out = new(float64)
		**out = **in
	}
	if in.TTL != nil {
		in, out := &in.TTL, &out.TTL
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CdnPolicyNegativeCachingPolicyInitParameters.
func (in *CdnPolicyNegativeCachingPolicyInitParameters) DeepCopy() *CdnPolicyNegativeCachingPolicyInitParameters {
	if in == nil {
		return nil
	}
	out := new(CdnPolicyNegativeCachingPolicyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CdnPolicyNegativeCachingPolicyObservation) DeepCopyInto(out *CdnPolicyNegativeCachingPolicyObservation) {
	*out = *in
	if in.Code != nil {
		in, out := &in.Code, &out.Code
		*out = new(float64)
		**out = **in
	}
	if in.TTL != nil {
		in, out := &in.TTL, &out.TTL
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CdnPolicyNegativeCachingPolicyObservation.
func (in *CdnPolicyNegativeCachingPolicyObservation) DeepCopy() *CdnPolicyNegativeCachingPolicyObservation {
	if in == nil {
		return nil
	}
	out := new(CdnPolicyNegativeCachingPolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CdnPolicyNegativeCachingPolicyParameters) DeepCopyInto(out *CdnPolicyNegativeCachingPolicyParameters) {
	*out = *in
	if in.Code != nil {
		in, out := &in.Code, &out.Code
		*out = new(float64)
		**out = **in
	}
	if in.TTL != nil {
		in, out := &in.TTL, &out.TTL
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CdnPolicyNegativeCachingPolicyParameters.
func (in *CdnPolicyNegativeCachingPolicyParameters) DeepCopy() *CdnPolicyNegativeCachingPolicyParameters {
	if in == nil {
		return nil
	}
	out := new(CdnPolicyNegativeCachingPolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CdnPolicyObservation) DeepCopyInto(out *CdnPolicyObservation) {
	*out = *in
	if in.BypassCacheOnRequestHeaders != nil {
		in, out := &in.BypassCacheOnRequestHeaders, &out.BypassCacheOnRequestHeaders
		*out = make([]BypassCacheOnRequestHeadersObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CacheKeyPolicy != nil {
		in, out := &in.CacheKeyPolicy, &out.CacheKeyPolicy
		*out = make([]CacheKeyPolicyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CacheMode != nil {
		in, out := &in.CacheMode, &out.CacheMode
		*out = new(string)
		**out = **in
	}
	if in.ClientTTL != nil {
		in, out := &in.ClientTTL, &out.ClientTTL
		*out = new(float64)
		**out = **in
	}
	if in.DefaultTTL != nil {
		in, out := &in.DefaultTTL, &out.DefaultTTL
		*out = new(float64)
		**out = **in
	}
	if in.MaxTTL != nil {
		in, out := &in.MaxTTL, &out.MaxTTL
		*out = new(float64)
		**out = **in
	}
	if in.NegativeCaching != nil {
		in, out := &in.NegativeCaching, &out.NegativeCaching
		*out = new(bool)
		**out = **in
	}
	if in.NegativeCachingPolicy != nil {
		in, out := &in.NegativeCachingPolicy, &out.NegativeCachingPolicy
		*out = make([]NegativeCachingPolicyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RequestCoalescing != nil {
		in, out := &in.RequestCoalescing, &out.RequestCoalescing
		*out = new(bool)
		**out = **in
	}
	if in.ServeWhileStale != nil {
		in, out := &in.ServeWhileStale, &out.ServeWhileStale
		*out = new(float64)
		**out = **in
	}
	if in.SignedURLCacheMaxAgeSec != nil {
		in, out := &in.SignedURLCacheMaxAgeSec, &out.SignedURLCacheMaxAgeSec
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CdnPolicyObservation.
func (in *CdnPolicyObservation) DeepCopy() *CdnPolicyObservation {
	if in == nil {
		return nil
	}
	out := new(CdnPolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CdnPolicyParameters) DeepCopyInto(out *CdnPolicyParameters) {
	*out = *in
	if in.BypassCacheOnRequestHeaders != nil {
		in, out := &in.BypassCacheOnRequestHeaders, &out.BypassCacheOnRequestHeaders
		*out = make([]BypassCacheOnRequestHeadersParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CacheKeyPolicy != nil {
		in, out := &in.CacheKeyPolicy, &out.CacheKeyPolicy
		*out = make([]CacheKeyPolicyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CacheMode != nil {
		in, out := &in.CacheMode, &out.CacheMode
		*out = new(string)
		**out = **in
	}
	if in.ClientTTL != nil {
		in, out := &in.ClientTTL, &out.ClientTTL
		*out = new(float64)
		**out = **in
	}
	if in.DefaultTTL != nil {
		in, out := &in.DefaultTTL, &out.DefaultTTL
		*out = new(float64)
		**out = **in
	}
	if in.MaxTTL != nil {
		in, out := &in.MaxTTL, &out.MaxTTL
		*out = new(float64)
		**out = **in
	}
	if in.NegativeCaching != nil {
		in, out := &in.NegativeCaching, &out.NegativeCaching
		*out = new(bool)
		**out = **in
	}
	if in.NegativeCachingPolicy != nil {
		in, out := &in.NegativeCachingPolicy, &out.NegativeCachingPolicy
		*out = make([]NegativeCachingPolicyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RequestCoalescing != nil {
		in, out := &in.RequestCoalescing, &out.RequestCoalescing
		*out = new(bool)
		**out = **in
	}
	if in.ServeWhileStale != nil {
		in, out := &in.ServeWhileStale, &out.ServeWhileStale
		*out = new(float64)
		**out = **in
	}
	if in.SignedURLCacheMaxAgeSec != nil {
		in, out := &in.SignedURLCacheMaxAgeSec, &out.SignedURLCacheMaxAgeSec
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CdnPolicyParameters.
func (in *CdnPolicyParameters) DeepCopy() *CdnPolicyParameters {
	if in == nil {
		return nil
	}
	out := new(CdnPolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CircuitBreakersInitParameters) DeepCopyInto(out *CircuitBreakersInitParameters) {
	*out = *in
	if in.MaxConnections != nil {
		in, out := &in.MaxConnections, &out.MaxConnections
		*out = new(float64)
		**out = **in
	}
	if in.MaxPendingRequests != nil {
		in, out := &in.MaxPendingRequests, &out.MaxPendingRequests
		*out = new(float64)
		**out = **in
	}
	if in.MaxRequests != nil {
		in, out := &in.MaxRequests, &out.MaxRequests
		*out = new(float64)
		**out = **in
	}
	if in.MaxRequestsPerConnection != nil {
		in, out := &in.MaxRequestsPerConnection, &out.MaxRequestsPerConnection
		*out = new(float64)
		**out = **in
	}
	if in.MaxRetries != nil {
		in, out := &in.MaxRetries, &out.MaxRetries
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CircuitBreakersInitParameters.
func (in *CircuitBreakersInitParameters) DeepCopy() *CircuitBreakersInitParameters {
	if in == nil {
		return nil
	}
	out := new(CircuitBreakersInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CircuitBreakersObservation) DeepCopyInto(out *CircuitBreakersObservation) {
	*out = *in
	if in.MaxConnections != nil {
		in, out := &in.MaxConnections, &out.MaxConnections
		*out = new(float64)
		**out = **in
	}
	if in.MaxPendingRequests != nil {
		in, out := &in.MaxPendingRequests, &out.MaxPendingRequests
		*out = new(float64)
		**out = **in
	}
	if in.MaxRequests != nil {
		in, out := &in.MaxRequests, &out.MaxRequests
		*out = new(float64)
		**out = **in
	}
	if in.MaxRequestsPerConnection != nil {
		in, out := &in.MaxRequestsPerConnection, &out.MaxRequestsPerConnection
		*out = new(float64)
		**out = **in
	}
	if in.MaxRetries != nil {
		in, out := &in.MaxRetries, &out.MaxRetries
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CircuitBreakersObservation.
func (in *CircuitBreakersObservation) DeepCopy() *CircuitBreakersObservation {
	if in == nil {
		return nil
	}
	out := new(CircuitBreakersObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CircuitBreakersParameters) DeepCopyInto(out *CircuitBreakersParameters) {
	*out = *in
	if in.MaxConnections != nil {
		in, out := &in.MaxConnections, &out.MaxConnections
		*out = new(float64)
		**out = **in
	}
	if in.MaxPendingRequests != nil {
		in, out := &in.MaxPendingRequests, &out.MaxPendingRequests
		*out = new(float64)
		**out = **in
	}
	if in.MaxRequests != nil {
		in, out := &in.MaxRequests, &out.MaxRequests
		*out = new(float64)
		**out = **in
	}
	if in.MaxRequestsPerConnection != nil {
		in, out := &in.MaxRequestsPerConnection, &out.MaxRequestsPerConnection
		*out = new(float64)
		**out = **in
	}
	if in.MaxRetries != nil {
		in, out := &in.MaxRetries, &out.MaxRetries
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CircuitBreakersParameters.
func (in *CircuitBreakersParameters) DeepCopy() *CircuitBreakersParameters {
	if in == nil {
		return nil
	}
	out := new(CircuitBreakersParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CloudFunctionInitParameters) DeepCopyInto(out *CloudFunctionInitParameters) {
	*out = *in
	if in.Function != nil {
		in, out := &in.Function, &out.Function
		*out = new(string)
		**out = **in
	}
	if in.FunctionRef != nil {
		in, out := &in.FunctionRef, &out.FunctionRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.FunctionSelector != nil {
		in, out := &in.FunctionSelector, &out.FunctionSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.URLMask != nil {
		in, out := &in.URLMask, &out.URLMask
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CloudFunctionInitParameters.
func (in *CloudFunctionInitParameters) DeepCopy() *CloudFunctionInitParameters {
	if in == nil {
		return nil
	}
	out := new(CloudFunctionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CloudFunctionObservation) DeepCopyInto(out *CloudFunctionObservation) {
	*out = *in
	if in.Function != nil {
		in, out := &in.Function, &out.Function
		*out = new(string)
		**out = **in
	}
	if in.URLMask != nil {
		in, out := &in.URLMask, &out.URLMask
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CloudFunctionObservation.
func (in *CloudFunctionObservation) DeepCopy() *CloudFunctionObservation {
	if in == nil {
		return nil
	}
	out := new(CloudFunctionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CloudFunctionParameters) DeepCopyInto(out *CloudFunctionParameters) {
	*out = *in
	if in.Function != nil {
		in, out := &in.Function, &out.Function
		*out = new(string)
		**out = **in
	}
	if in.FunctionRef != nil {
		in, out := &in.FunctionRef, &out.FunctionRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.FunctionSelector != nil {
		in, out := &in.FunctionSelector, &out.FunctionSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.URLMask != nil {
		in, out := &in.URLMask, &out.URLMask
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CloudFunctionParameters.
func (in *CloudFunctionParameters) DeepCopy() *CloudFunctionParameters {
	if in == nil {
		return nil
	}
	out := new(CloudFunctionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CloudRunInitParameters) DeepCopyInto(out *CloudRunInitParameters) {
	*out = *in
	if in.Service != nil {
		in, out := &in.Service, &out.Service
		*out = new(string)
		**out = **in
	}
	if in.ServiceRef != nil {
		in, out := &in.ServiceRef, &out.ServiceRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ServiceSelector != nil {
		in, out := &in.ServiceSelector, &out.ServiceSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Tag != nil {
		in, out := &in.Tag, &out.Tag
		*out = new(string)
		**out = **in
	}
	if in.URLMask != nil {
		in, out := &in.URLMask, &out.URLMask
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CloudRunInitParameters.
func (in *CloudRunInitParameters) DeepCopy() *CloudRunInitParameters {
	if in == nil {
		return nil
	}
	out := new(CloudRunInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CloudRunObservation) DeepCopyInto(out *CloudRunObservation) {
	*out = *in
	if in.Service != nil {
		in, out := &in.Service, &out.Service
		*out = new(string)
		**out = **in
	}
	if in.Tag != nil {
		in, out := &in.Tag, &out.Tag
		*out = new(string)
		**out = **in
	}
	if in.URLMask != nil {
		in, out := &in.URLMask, &out.URLMask
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CloudRunObservation.
func (in *CloudRunObservation) DeepCopy() *CloudRunObservation {
	if in == nil {
		return nil
	}
	out := new(CloudRunObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CloudRunParameters) DeepCopyInto(out *CloudRunParameters) {
	*out = *in
	if in.Service != nil {
		in, out := &in.Service, &out.Service
		*out = new(string)
		**out = **in
	}
	if in.ServiceRef != nil {
		in, out := &in.ServiceRef, &out.ServiceRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ServiceSelector != nil {
		in, out := &in.ServiceSelector, &out.ServiceSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Tag != nil {
		in, out := &in.Tag, &out.Tag
		*out = new(string)
		**out = **in
	}
	if in.URLMask != nil {
		in, out := &in.URLMask, &out.URLMask
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CloudRunParameters.
func (in *CloudRunParameters) DeepCopy() *CloudRunParameters {
	if in == nil {
		return nil
	}
	out := new(CloudRunParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CollectorIlbInitParameters) DeepCopyInto(out *CollectorIlbInitParameters) {
	*out = *in
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
	if in.URLRef != nil {
		in, out := &in.URLRef, &out.URLRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.URLSelector != nil {
		in, out := &in.URLSelector, &out.URLSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CollectorIlbInitParameters.
func (in *CollectorIlbInitParameters) DeepCopy() *CollectorIlbInitParameters {
	if in == nil {
		return nil
	}
	out := new(CollectorIlbInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CollectorIlbObservation) DeepCopyInto(out *CollectorIlbObservation) {
	*out = *in
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CollectorIlbObservation.
func (in *CollectorIlbObservation) DeepCopy() *CollectorIlbObservation {
	if in == nil {
		return nil
	}
	out := new(CollectorIlbObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CollectorIlbParameters) DeepCopyInto(out *CollectorIlbParameters) {
	*out = *in
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
	if in.URLRef != nil {
		in, out := &in.URLRef, &out.URLRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.URLSelector != nil {
		in, out := &in.URLSelector, &out.URLSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CollectorIlbParameters.
func (in *CollectorIlbParameters) DeepCopy() *CollectorIlbParameters {
	if in == nil {
		return nil
	}
	out := new(CollectorIlbParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConditionInitParameters) DeepCopyInto(out *ConditionInitParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Expression != nil {
		in, out := &in.Expression, &out.Expression
		*out = new(string)
		**out = **in
	}
	if in.Title != nil {
		in, out := &in.Title, &out.Title
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConditionInitParameters.
func (in *ConditionInitParameters) DeepCopy() *ConditionInitParameters {
	if in == nil {
		return nil
	}
	out := new(ConditionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConditionObservation) DeepCopyInto(out *ConditionObservation) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Expression != nil {
		in, out := &in.Expression, &out.Expression
		*out = new(string)
		**out = **in
	}
	if in.Title != nil {
		in, out := &in.Title, &out.Title
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConditionObservation.
func (in *ConditionObservation) DeepCopy() *ConditionObservation {
	if in == nil {
		return nil
	}
	out := new(ConditionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConditionParameters) DeepCopyInto(out *ConditionParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Expression != nil {
		in, out := &in.Expression, &out.Expression
		*out = new(string)
		**out = **in
	}
	if in.Title != nil {
		in, out := &in.Title, &out.Title
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConditionParameters.
func (in *ConditionParameters) DeepCopy() *ConditionParameters {
	if in == nil {
		return nil
	}
	out := new(ConditionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfidentialInstanceConfigInitParameters) DeepCopyInto(out *ConfidentialInstanceConfigInitParameters) {
	*out = *in
	if in.ConfidentialInstanceType != nil {
		in, out := &in.ConfidentialInstanceType, &out.ConfidentialInstanceType
		*out = new(string)
		**out = **in
	}
	if in.EnableConfidentialCompute != nil {
		in, out := &in.EnableConfidentialCompute, &out.EnableConfidentialCompute
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfidentialInstanceConfigInitParameters.
func (in *ConfidentialInstanceConfigInitParameters) DeepCopy() *ConfidentialInstanceConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(ConfidentialInstanceConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfidentialInstanceConfigObservation) DeepCopyInto(out *ConfidentialInstanceConfigObservation) {
	*out = *in
	if in.ConfidentialInstanceType != nil {
		in, out := &in.ConfidentialInstanceType, &out.ConfidentialInstanceType
		*out = new(string)
		**out = **in
	}
	if in.EnableConfidentialCompute != nil {
		in, out := &in.EnableConfidentialCompute, &out.EnableConfidentialCompute
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfidentialInstanceConfigObservation.
func (in *ConfidentialInstanceConfigObservation) DeepCopy() *ConfidentialInstanceConfigObservation {
	if in == nil {
		return nil
	}
	out := new(ConfidentialInstanceConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfidentialInstanceConfigParameters) DeepCopyInto(out *ConfidentialInstanceConfigParameters) {
	*out = *in
	if in.ConfidentialInstanceType != nil {
		in, out := &in.ConfidentialInstanceType, &out.ConfidentialInstanceType
		*out = new(string)
		**out = **in
	}
	if in.EnableConfidentialCompute != nil {
		in, out := &in.EnableConfidentialCompute, &out.EnableConfidentialCompute
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfidentialInstanceConfigParameters.
func (in *ConfidentialInstanceConfigParameters) DeepCopy() *ConfidentialInstanceConfigParameters {
	if in == nil {
		return nil
	}
	out := new(ConfidentialInstanceConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigInitParameters) DeepCopyInto(out *ConfigInitParameters) {
	*out = *in
	if in.SrcIPRanges != nil {
		in, out := &in.SrcIPRanges, &out.SrcIPRanges
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigInitParameters.
func (in *ConfigInitParameters) DeepCopy() *ConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(ConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigObservation) DeepCopyInto(out *ConfigObservation) {
	*out = *in
	if in.SrcIPRanges != nil {
		in, out := &in.SrcIPRanges, &out.SrcIPRanges
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigObservation.
func (in *ConfigObservation) DeepCopy() *ConfigObservation {
	if in == nil {
		return nil
	}
	out := new(ConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigParameters) DeepCopyInto(out *ConfigParameters) {
	*out = *in
	if in.SrcIPRanges != nil {
		in, out := &in.SrcIPRanges, &out.SrcIPRanges
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigParameters.
func (in *ConfigParameters) DeepCopy() *ConfigParameters {
	if in == nil {
		return nil
	}
	out := new(ConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectedEndpointsInitParameters) DeepCopyInto(out *ConnectedEndpointsInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectedEndpointsInitParameters.
func (in *ConnectedEndpointsInitParameters) DeepCopy() *ConnectedEndpointsInitParameters {
	if in == nil {
		return nil
	}
	out := new(ConnectedEndpointsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectedEndpointsObservation) DeepCopyInto(out *ConnectedEndpointsObservation) {
	*out = *in
	if in.Endpoint != nil {
		in, out := &in.Endpoint, &out.Endpoint
		*out = new(string)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectedEndpointsObservation.
func (in *ConnectedEndpointsObservation) DeepCopy() *ConnectedEndpointsObservation {
	if in == nil {
		return nil
	}
	out := new(ConnectedEndpointsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectedEndpointsParameters) DeepCopyInto(out *ConnectedEndpointsParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectedEndpointsParameters.
func (in *ConnectedEndpointsParameters) DeepCopy() *ConnectedEndpointsParameters {
	if in == nil {
		return nil
	}
	out := new(ConnectedEndpointsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConsistentHashHTTPCookieInitParameters) DeepCopyInto(out *ConsistentHashHTTPCookieInitParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.TTL != nil {
		in, out := &in.TTL, &out.TTL
		*out = make([]HTTPCookieTTLInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConsistentHashHTTPCookieInitParameters.
func (in *ConsistentHashHTTPCookieInitParameters) DeepCopy() *ConsistentHashHTTPCookieInitParameters {
	if in == nil {
		return nil
	}
	out := new(ConsistentHashHTTPCookieInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConsistentHashHTTPCookieObservation) DeepCopyInto(out *ConsistentHashHTTPCookieObservation) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.TTL != nil {
		in, out := &in.TTL, &out.TTL
		*out = make([]HTTPCookieTTLObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConsistentHashHTTPCookieObservation.
func (in *ConsistentHashHTTPCookieObservation) DeepCopy() *ConsistentHashHTTPCookieObservation {
	if in == nil {
		return nil
	}
	out := new(ConsistentHashHTTPCookieObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConsistentHashHTTPCookieParameters) DeepCopyInto(out *ConsistentHashHTTPCookieParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.TTL != nil {
		in, out := &in.TTL, &out.TTL
		*out = make([]HTTPCookieTTLParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConsistentHashHTTPCookieParameters.
func (in *ConsistentHashHTTPCookieParameters) DeepCopy() *ConsistentHashHTTPCookieParameters {
	if in == nil {
		return nil
	}
	out := new(ConsistentHashHTTPCookieParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConsistentHashInitParameters) DeepCopyInto(out *ConsistentHashInitParameters) {
	*out = *in
	if in.HTTPCookie != nil {
		in, out := &in.HTTPCookie, &out.HTTPCookie
		*out = make([]HTTPCookieInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HTTPHeaderName != nil {
		in, out := &in.HTTPHeaderName, &out.HTTPHeaderName
		*out = new(string)
		**out = **in
	}
	if in.MinimumRingSize != nil {
		in, out := &in.MinimumRingSize, &out.MinimumRingSize
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConsistentHashInitParameters.
func (in *ConsistentHashInitParameters) DeepCopy() *ConsistentHashInitParameters {
	if in == nil {
		return nil
	}
	out := new(ConsistentHashInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConsistentHashObservation) DeepCopyInto(out *ConsistentHashObservation) {
	*out = *in
	if in.HTTPCookie != nil {
		in, out := &in.HTTPCookie, &out.HTTPCookie
		*out = make([]HTTPCookieObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HTTPHeaderName != nil {
		in, out := &in.HTTPHeaderName, &out.HTTPHeaderName
		*out = new(string)
		**out = **in
	}
	if in.MinimumRingSize != nil {
		in, out := &in.MinimumRingSize, &out.MinimumRingSize
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConsistentHashObservation.
func (in *ConsistentHashObservation) DeepCopy() *ConsistentHashObservation {
	if in == nil {
		return nil
	}
	out := new(ConsistentHashObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConsistentHashParameters) DeepCopyInto(out *ConsistentHashParameters) {
	*out = *in
	if in.HTTPCookie != nil {
		in, out := &in.HTTPCookie, &out.HTTPCookie
		*out = make([]HTTPCookieParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HTTPHeaderName != nil {
		in, out := &in.HTTPHeaderName, &out.HTTPHeaderName
		*out = new(string)
		**out = **in
	}
	if in.MinimumRingSize != nil {
		in, out := &in.MinimumRingSize, &out.MinimumRingSize
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConsistentHashParameters.
func (in *ConsistentHashParameters) DeepCopy() *ConsistentHashParameters {
	if in == nil {
		return nil
	}
	out := new(ConsistentHashParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConsumerAcceptListsInitParameters) DeepCopyInto(out *ConsumerAcceptListsInitParameters) {
	*out = *in
	if in.ConnectionLimit != nil {
		in, out := &in.ConnectionLimit, &out.ConnectionLimit
		*out = new(float64)
		**out = **in
	}
	if in.NetworkURL != nil {
		in, out := &in.NetworkURL, &out.NetworkURL
		*out = new(string)
		**out = **in
	}
	if in.NetworkURLRef != nil {
		in, out := &in.NetworkURLRef, &out.NetworkURLRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.NetworkURLSelector != nil {
		in, out := &in.NetworkURLSelector, &out.NetworkURLSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.ProjectIDOrNum != nil {
		in, out := &in.ProjectIDOrNum, &out.ProjectIDOrNum
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConsumerAcceptListsInitParameters.
func (in *ConsumerAcceptListsInitParameters) DeepCopy() *ConsumerAcceptListsInitParameters {
	if in == nil {
		return nil
	}
	out := new(ConsumerAcceptListsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConsumerAcceptListsObservation) DeepCopyInto(out *ConsumerAcceptListsObservation) {
	*out = *in
	if in.ConnectionLimit != nil {
		in, out := &in.ConnectionLimit, &out.ConnectionLimit
		*out = new(float64)
		**out = **in
	}
	if in.NetworkURL != nil {
		in, out := &in.NetworkURL, &out.NetworkURL
		*out = new(string)
		**out = **in
	}
	if in.ProjectIDOrNum != nil {
		in, out := &in.ProjectIDOrNum, &out.ProjectIDOrNum
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConsumerAcceptListsObservation.
func (in *ConsumerAcceptListsObservation) DeepCopy() *ConsumerAcceptListsObservation {
	if in == nil {
		return nil
	}
	out := new(ConsumerAcceptListsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConsumerAcceptListsParameters) DeepCopyInto(out *ConsumerAcceptListsParameters) {
	*out = *in
	if in.ConnectionLimit != nil {
		in, out := &in.ConnectionLimit, &out.ConnectionLimit
		*out = new(float64)
		**out = **in
	}
	if in.NetworkURL != nil {
		in, out := &in.NetworkURL, &out.NetworkURL
		*out = new(string)
		**out = **in
	}
	if in.NetworkURLRef != nil {
		in, out := &in.NetworkURLRef, &out.NetworkURLRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.NetworkURLSelector != nil {
		in, out := &in.NetworkURLSelector, &out.NetworkURLSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.ProjectIDOrNum != nil {
		in, out := &in.ProjectIDOrNum, &out.ProjectIDOrNum
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConsumerAcceptListsParameters.
func (in *ConsumerAcceptListsParameters) DeepCopy() *ConsumerAcceptListsParameters {
	if in == nil {
		return nil
	}
	out := new(ConsumerAcceptListsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CorsPolicyInitParameters) DeepCopyInto(out *CorsPolicyInitParameters) {
	*out = *in
	if in.AllowCredentials != nil {
		in, out := &in.AllowCredentials, &out.AllowCredentials
		*out = new(bool)
		**out = **in
	}
	if in.AllowHeaders != nil {
		in, out := &in.AllowHeaders, &out.AllowHeaders
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AllowMethods != nil {
		in, out := &in.AllowMethods, &out.AllowMethods
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AllowOriginRegexes != nil {
		in, out := &in.AllowOriginRegexes, &out.AllowOriginRegexes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AllowOrigins != nil {
		in, out := &in.AllowOrigins, &out.AllowOrigins
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Disabled != nil {
		in, out := &in.Disabled, &out.Disabled
		*out = new(bool)
		**out = **in
	}
	if in.ExposeHeaders != nil {
		in, out := &in.ExposeHeaders, &out.ExposeHeaders
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.MaxAge != nil {
		in, out := &in.MaxAge, &out.MaxAge
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CorsPolicyInitParameters.
func (in *CorsPolicyInitParameters) DeepCopy() *CorsPolicyInitParameters {
	if in == nil {
		return nil
	}
	out := new(CorsPolicyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CorsPolicyObservation) DeepCopyInto(out *CorsPolicyObservation) {
	*out = *in
	if in.AllowCredentials != nil {
		in, out := &in.AllowCredentials, &out.AllowCredentials
		*out = new(bool)
		**out = **in
	}
	if in.AllowHeaders != nil {
		in, out := &in.AllowHeaders, &out.AllowHeaders
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AllowMethods != nil {
		in, out := &in.AllowMethods, &out.AllowMethods
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AllowOriginRegexes != nil {
		in, out := &in.AllowOriginRegexes, &out.AllowOriginRegexes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AllowOrigins != nil {
		in, out := &in.AllowOrigins, &out.AllowOrigins
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Disabled != nil {
		in, out := &in.Disabled, &out.Disabled
		*out = new(bool)
		**out = **in
	}
	if in.ExposeHeaders != nil {
		in, out := &in.ExposeHeaders, &out.ExposeHeaders
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.MaxAge != nil {
		in, out := &in.MaxAge, &out.MaxAge
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CorsPolicyObservation.
func (in *CorsPolicyObservation) DeepCopy() *CorsPolicyObservation {
	if in == nil {
		return nil
	}
	out := new(CorsPolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CorsPolicyParameters) DeepCopyInto(out *CorsPolicyParameters) {
	*out = *in
	if in.AllowCredentials != nil {
		in, out := &in.AllowCredentials, &out.AllowCredentials
		*out = new(bool)
		**out = **in
	}
	if in.AllowHeaders != nil {
		in, out := &in.AllowHeaders, &out.AllowHeaders
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AllowMethods != nil {
		in, out := &in.AllowMethods, &out.AllowMethods
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AllowOriginRegexes != nil {
		in, out := &in.AllowOriginRegexes, &out.AllowOriginRegexes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AllowOrigins != nil {
		in, out := &in.AllowOrigins, &out.AllowOrigins
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Disabled != nil {
		in, out := &in.Disabled, &out.Disabled
		*out = new(bool)
		**out = **in
	}
	if in.ExposeHeaders != nil {
		in, out := &in.ExposeHeaders, &out.ExposeHeaders
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.MaxAge != nil {
		in, out := &in.MaxAge, &out.MaxAge
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CorsPolicyParameters.
func (in *CorsPolicyParameters) DeepCopy() *CorsPolicyParameters {
	if in == nil {
		return nil
	}
	out := new(CorsPolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomLearnedIPRangesInitParameters) DeepCopyInto(out *CustomLearnedIPRangesInitParameters) {
	*out = *in
	if in.Range != nil {
		in, out := &in.Range, &out.Range
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomLearnedIPRangesInitParameters.
func (in *CustomLearnedIPRangesInitParameters) DeepCopy() *CustomLearnedIPRangesInitParameters {
	if in == nil {
		return nil
	}
	out := new(CustomLearnedIPRangesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomLearnedIPRangesObservation) DeepCopyInto(out *CustomLearnedIPRangesObservation) {
	*out = *in
	if in.Range != nil {
		in, out := &in.Range, &out.Range
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomLearnedIPRangesObservation.
func (in *CustomLearnedIPRangesObservation) DeepCopy() *CustomLearnedIPRangesObservation {
	if in == nil {
		return nil
	}
	out := new(CustomLearnedIPRangesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomLearnedIPRangesParameters) DeepCopyInto(out *CustomLearnedIPRangesParameters) {
	*out = *in
	if in.Range != nil {
		in, out := &in.Range, &out.Range
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomLearnedIPRangesParameters.
func (in *CustomLearnedIPRangesParameters) DeepCopy() *CustomLearnedIPRangesParameters {
	if in == nil {
		return nil
	}
	out := new(CustomLearnedIPRangesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomPolicyInitParameters) DeepCopyInto(out *CustomPolicyInitParameters) {
	*out = *in
	if in.Data != nil {
		in, out := &in.Data, &out.Data
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomPolicyInitParameters.
func (in *CustomPolicyInitParameters) DeepCopy() *CustomPolicyInitParameters {
	if in == nil {
		return nil
	}
	out := new(CustomPolicyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomPolicyObservation) DeepCopyInto(out *CustomPolicyObservation) {
	*out = *in
	if in.Data != nil {
		in, out := &in.Data, &out.Data
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomPolicyObservation.
func (in *CustomPolicyObservation) DeepCopy() *CustomPolicyObservation {
	if in == nil {
		return nil
	}
	out := new(CustomPolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomPolicyParameters) DeepCopyInto(out *CustomPolicyParameters) {
	*out = *in
	if in.Data != nil {
		in, out := &in.Data, &out.Data
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomPolicyParameters.
func (in *CustomPolicyParameters) DeepCopy() *CustomPolicyParameters {
	if in == nil {
		return nil
	}
	out := new(CustomPolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DailyScheduleInitParameters) DeepCopyInto(out *DailyScheduleInitParameters) {
	*out = *in
	if in.DaysInCycle != nil {
		in, out := &in.DaysInCycle, &out.DaysInCycle
		*out = new(float64)
		**out = **in
	}
	if in.StartTime != nil {
		in, out := &in.StartTime, &out.StartTime
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DailyScheduleInitParameters.
func (in *DailyScheduleInitParameters) DeepCopy() *DailyScheduleInitParameters {
	if in == nil {
		return nil
	}
	out := new(DailyScheduleInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DailyScheduleObservation) DeepCopyInto(out *DailyScheduleObservation) {
	*out = *in
	if in.DaysInCycle != nil {
		in, out := &in.DaysInCycle, &out.DaysInCycle
		*out = new(float64)
		**out = **in
	}
	if in.StartTime != nil {
		in, out := &in.StartTime, &out.StartTime
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DailyScheduleObservation.
func (in *DailyScheduleObservation) DeepCopy() *DailyScheduleObservation {
	if in == nil {
		return nil
	}
	out := new(DailyScheduleObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DailyScheduleParameters) DeepCopyInto(out *DailyScheduleParameters) {
	*out = *in
	if in.DaysInCycle != nil {
		in, out := &in.DaysInCycle, &out.DaysInCycle
		*out = new(float64)
		**out = **in
	}
	if in.StartTime != nil {
		in, out := &in.StartTime, &out.StartTime
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DailyScheduleParameters.
func (in *DailyScheduleParameters) DeepCopy() *DailyScheduleParameters {
	if in == nil {
		return nil
	}
	out := new(DailyScheduleParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DayOfWeeksInitParameters) DeepCopyInto(out *DayOfWeeksInitParameters) {
	*out = *in
	if in.Day != nil {
		in, out := &in.Day, &out.Day
		*out = new(string)
		**out = **in
	}
	if in.StartTime != nil {
		in, out := &in.StartTime, &out.StartTime
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DayOfWeeksInitParameters.
func (in *DayOfWeeksInitParameters) DeepCopy() *DayOfWeeksInitParameters {
	if in == nil {
		return nil
	}
	out := new(DayOfWeeksInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DayOfWeeksObservation) DeepCopyInto(out *DayOfWeeksObservation) {
	*out = *in
	if in.Day != nil {
		in, out := &in.Day, &out.Day
		*out = new(string)
		**out = **in
	}
	if in.StartTime != nil {
		in, out := &in.StartTime, &out.StartTime
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DayOfWeeksObservation.
func (in *DayOfWeeksObservation) DeepCopy() *DayOfWeeksObservation {
	if in == nil {
		return nil
	}
	out := new(DayOfWeeksObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DayOfWeeksParameters) DeepCopyInto(out *DayOfWeeksParameters) {
	*out = *in
	if in.Day != nil {
		in, out := &in.Day, &out.Day
		*out = new(string)
		**out = **in
	}
	if in.StartTime != nil {
		in, out := &in.StartTime, &out.StartTime
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DayOfWeeksParameters.
func (in *DayOfWeeksParameters) DeepCopy() *DayOfWeeksParameters {
	if in == nil {
		return nil
	}
	out := new(DayOfWeeksParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DefaultRouteActionCorsPolicyInitParameters) DeepCopyInto(out *DefaultRouteActionCorsPolicyInitParameters) {
	*out = *in
	if in.AllowCredentials != nil {
		in, out := &in.AllowCredentials, &out.AllowCredentials
		*out = new(bool)
		**out = **in
	}
	if in.AllowHeaders != nil {
		in, out := &in.AllowHeaders, &out.AllowHeaders
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AllowMethods != nil {
		in, out := &in.AllowMethods, &out.AllowMethods
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AllowOriginRegexes != nil {
		in, out := &in.AllowOriginRegexes, &out.AllowOriginRegexes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AllowOrigins != nil {
		in, out := &in.AllowOrigins, &out.AllowOrigins
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Disabled != nil {
		in, out := &in.Disabled, &out.Disabled
		*out = new(bool)
		**out = **in
	}
	if in.ExposeHeaders != nil {
		in, out := &in.ExposeHeaders, &out.ExposeHeaders
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.MaxAge != nil {
		in, out := &in.MaxAge, &out.MaxAge
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DefaultRouteActionCorsPolicyInitParameters.
func (in *DefaultRouteActionCorsPolicyInitParameters) DeepCopy() *DefaultRouteActionCorsPolicyInitParameters {
	if in == nil {
		return nil
	}
	out := new(DefaultRouteActionCorsPolicyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DefaultRouteActionCorsPolicyObservation) DeepCopyInto(out *DefaultRouteActionCorsPolicyObservation) {
	*out = *in
	if in.AllowCredentials != nil {
		in, out := &in.AllowCredentials, &out.AllowCredentials
		*out = new(bool)
		**out = **in
	}
	if in.AllowHeaders != nil {
		in, out := &in.AllowHeaders, &out.AllowHeaders
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AllowMethods != nil {
		in, out := &in.AllowMethods, &out.AllowMethods
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AllowOriginRegexes != nil {
		in, out := &in.AllowOriginRegexes, &out.AllowOriginRegexes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AllowOrigins != nil {
		in, out := &in.AllowOrigins, &out.AllowOrigins
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Disabled != nil {
		in, out := &in.Disabled, &out.Disabled
		*out = new(bool)
		**out = **in
	}
	if in.ExposeHeaders != nil {
		in, out := &in.ExposeHeaders, &out.ExposeHeaders
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.MaxAge != nil {
		in, out := &in.MaxAge, &out.MaxAge
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DefaultRouteActionCorsPolicyObservation.
func (in *DefaultRouteActionCorsPolicyObservation) DeepCopy() *DefaultRouteActionCorsPolicyObservation {
	if in == nil {
		return nil
	}
	out := new(DefaultRouteActionCorsPolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DefaultRouteActionCorsPolicyParameters) DeepCopyInto(out *DefaultRouteActionCorsPolicyParameters) {
	*out = *in
	if in.AllowCredentials != nil {
		in, out := &in.AllowCredentials, &out.AllowCredentials
		*out = new(bool)
		**out = **in
	}
	if in.AllowHeaders != nil {
		in, out := &in.AllowHeaders, &out.AllowHeaders
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AllowMethods != nil {
		in, out := &in.AllowMethods, &out.AllowMethods
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AllowOriginRegexes != nil {
		in, out := &in.AllowOriginRegexes, &out.AllowOriginRegexes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AllowOrigins != nil {
		in, out := &in.AllowOrigins, &out.AllowOrigins
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Disabled != nil {
		in, out := &in.Disabled, &out.Disabled
		*out = new(bool)
		**out = **in
	}
	if in.ExposeHeaders != nil {
		in, out := &in.ExposeHeaders, &out.ExposeHeaders
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.MaxAge != nil {
		in, out := &in.MaxAge, &out.MaxAge
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DefaultRouteActionCorsPolicyParameters.
func (in *DefaultRouteActionCorsPolicyParameters) DeepCopy() *DefaultRouteActionCorsPolicyParameters {
	if in == nil {
		return nil
	}
	out := new(DefaultRouteActionCorsPolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DefaultRouteActionFaultInjectionPolicyAbortInitParameters) DeepCopyInto(out *DefaultRouteActionFaultInjectionPolicyAbortInitParameters) {
	*out = *in
	if in.HTTPStatus != nil {
		in, out := &in.HTTPStatus, &out.HTTPStatus
		*out = new(float64)
		**out = **in
	}
	if in.Percentage != nil {
		in, out := &in.Percentage, &out.Percentage
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DefaultRouteActionFaultInjectionPolicyAbortInitParameters.
func (in *DefaultRouteActionFaultInjectionPolicyAbortInitParameters) DeepCopy() *DefaultRouteActionFaultInjectionPolicyAbortInitParameters {
	if in == nil {
		return nil
	}
	out := new(DefaultRouteActionFaultInjectionPolicyAbortInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DefaultRouteActionFaultInjectionPolicyAbortObservation) DeepCopyInto(out *DefaultRouteActionFaultInjectionPolicyAbortObservation) {
	*out = *in
	if in.HTTPStatus != nil {
		in, out := &in.HTTPStatus, &out.HTTPStatus
		*out = new(float64)
		**out = **in
	}
	if in.Percentage != nil {
		in, out := &in.Percentage, &out.Percentage
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DefaultRouteActionFaultInjectionPolicyAbortObservation.
func (in *DefaultRouteActionFaultInjectionPolicyAbortObservation) DeepCopy() *DefaultRouteActionFaultInjectionPolicyAbortObservation {
	if in == nil {
		return nil
	}
	out := new(DefaultRouteActionFaultInjectionPolicyAbortObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DefaultRouteActionFaultInjectionPolicyAbortParameters) DeepCopyInto(out *DefaultRouteActionFaultInjectionPolicyAbortParameters) {
	*out = *in
	if in.HTTPStatus != nil {
		in, out := &in.HTTPStatus, &out.HTTPStatus
		*out = new(float64)
		**out = **in
	}
	if in.Percentage != nil {
		in, out := &in.Percentage, &out.Percentage
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DefaultRouteActionFaultInjectionPolicyAbortParameters.
func (in *DefaultRouteActionFaultInjectionPolicyAbortParameters) DeepCopy() *DefaultRouteActionFaultInjectionPolicyAbortParameters {
	if in == nil {
		return nil
	}
	out := new(DefaultRouteActionFaultInjectionPolicyAbortParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DefaultRouteActionFaultInjectionPolicyDelayFixedDelayInitParameters) DeepCopyInto(out *DefaultRouteActionFaultInjectionPolicyDelayFixedDelayInitParameters) {
	*out = *in
	if in.Nanos != nil {
		in, out := &in.Nanos, &out.Nanos
		*out = new(float64)
		**out = **in
	}
	if in.Seconds != nil {
		in, out := &in.Seconds, &out.Seconds
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DefaultRouteActionFaultInjectionPolicyDelayFixedDelayInitParameters.
func (in *DefaultRouteActionFaultInjectionPolicyDelayFixedDelayInitParameters) DeepCopy() *DefaultRouteActionFaultInjectionPolicyDelayFixedDelayInitParameters {
	if in == nil {
		return nil
	}
	out := new(DefaultRouteActionFaultInjectionPolicyDelayFixedDelayInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DefaultRouteActionFaultInjectionPolicyDelayFixedDelayObservation) DeepCopyInto(out *DefaultRouteActionFaultInjectionPolicyDelayFixedDelayObservation) {
	*out = *in
	if in.Nanos != nil {
		in, out := &in.Nanos, &out.Nanos
		*out = new(float64)
		**out = **in
	}
	if in.Seconds != nil {
		in, out := &in.Seconds, &out.Seconds
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DefaultRouteActionFaultInjectionPolicyDelayFixedDelayObservation.
func (in *DefaultRouteActionFaultInjectionPolicyDelayFixedDelayObservation) DeepCopy() *DefaultRouteActionFaultInjectionPolicyDelayFixedDelayObservation {
	if in == nil {
		return nil
	}
	out := new(DefaultRouteActionFaultInjectionPolicyDelayFixedDelayObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DefaultRouteActionFaultInjectionPolicyDelayFixedDelayParameters) DeepCopyInto(out *DefaultRouteActionFaultInjectionPolicyDelayFixedDelayParameters) {
	*out = *in
	if in.Nanos != nil {
		in, out := &in.Nanos, &out.Nanos
		*out = new(float64)
		**out = **in
	}
	if in.Seconds != nil {
		in, out := &in.Seconds, &out.Seconds
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DefaultRouteActionFaultInjectionPolicyDelayFixedDelayParameters.
func (in *DefaultRouteActionFaultInjectionPolicyDelayFixedDelayParameters) DeepCopy() *DefaultRouteActionFaultInjectionPolicyDelayFixedDelayParameters {
	if in == nil {
		return nil
	}
	out := new(DefaultRouteActionFaultInjectionPolicyDelayFixedDelayParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DefaultRouteActionFaultInjectionPolicyDelayInitParameters) DeepCopyInto(out *DefaultRouteActionFaultInjectionPolicyDelayInitParameters) {
	*out = *in
	if in.FixedDelay != nil {
		in, out := &in.FixedDelay, &out.FixedDelay
		*out = make([]DefaultRouteActionFaultInjectionPolicyDelayFixedDelayInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Percentage != nil {
		in, out := &in.Percentage, &out.Percentage
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DefaultRouteActionFaultInjectionPolicyDelayInitParameters.
func (in *DefaultRouteActionFaultInjectionPolicyDelayInitParameters) DeepCopy() *DefaultRouteActionFaultInjectionPolicyDelayInitParameters {
	if in == nil {
		return nil
	}
	out := new(DefaultRouteActionFaultInjectionPolicyDelayInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DefaultRouteActionFaultInjectionPolicyDelayObservation) DeepCopyInto(out *DefaultRouteActionFaultInjectionPolicyDelayObservation) {
	*out = *in
	if in.FixedDelay != nil {
		in, out := &in.FixedDelay, &out.FixedDelay
		*out = make([]DefaultRouteActionFaultInjectionPolicyDelayFixedDelayObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Percentage != nil {
		in, out := &in.Percentage, &out.Percentage
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DefaultRouteActionFaultInjectionPolicyDelayObservation.
func (in *DefaultRouteActionFaultInjectionPolicyDelayObservation) DeepCopy() *DefaultRouteActionFaultInjectionPolicyDelayObservation {
	if in == nil {
		return nil
	}
	out := new(DefaultRouteActionFaultInjectionPolicyDelayObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DefaultRouteActionFaultInjectionPolicyDelayParameters) DeepCopyInto(out *DefaultRouteActionFaultInjectionPolicyDelayParameters) {
	*out = *in
	if in.FixedDelay != nil {
		in, out := &in.FixedDelay, &out.FixedDelay
		*out = make([]DefaultRouteActionFaultInjectionPolicyDelayFixedDelayParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Percentage != nil {
		in, out := &in.Percentage, &out.Percentage
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DefaultRouteActionFaultInjectionPolicyDelayParameters.
func (in *DefaultRouteActionFaultInjectionPolicyDelayParameters) DeepCopy() *DefaultRouteActionFaultInjectionPolicyDelayParameters {
	if in == nil {
		return nil
	}
	out := new(DefaultRouteActionFaultInjectionPolicyDelayParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DefaultRouteActionFaultInjectionPolicyInitParameters) DeepCopyInto(out *DefaultRouteActionFaultInjectionPolicyInitParameters) {
	*out = *in
	if in.Abort != nil {
		in, out := &in.Abort, &out.Abort
		*out = make([]DefaultRouteActionFaultInjectionPolicyAbortInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Delay != nil {
		in, out := &in.Delay, &out.Delay
		*out = make([]DefaultRouteActionFaultInjectionPolicyDelayInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DefaultRouteActionFaultInjectionPolicyInitParameters.
func (in *DefaultRouteActionFaultInjectionPolicyInitParameters) DeepCopy() *DefaultRouteActionFaultInjectionPolicyInitParameters {
	if in == nil {
		return nil
	}
	out := new(DefaultRouteActionFaultInjectionPolicyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DefaultRouteActionFaultInjectionPolicyObservation) DeepCopyInto(out *DefaultRouteActionFaultInjectionPolicyObservation) {
	*out = *in
	if in.Abort != nil {
		in, out := &in.Abort, &out.Abort
		*out = make([]DefaultRouteActionFaultInjectionPolicyAbortObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Delay != nil {
		in, out := &in.Delay, &out.Delay
		*out = make([]DefaultRouteActionFaultInjectionPolicyDelayObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DefaultRouteActionFaultInjectionPolicyObservation.
func (in *DefaultRouteActionFaultInjectionPolicyObservation) DeepCopy() *DefaultRouteActionFaultInjectionPolicyObservation {
	if in == nil {
		return nil
	}
	out := new(DefaultRouteActionFaultInjectionPolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DefaultRouteActionFaultInjectionPolicyParameters) DeepCopyInto(out *DefaultRouteActionFaultInjectionPolicyParameters) {
	*out = *in
	if in.Abort != nil {
		in, out := &in.Abort, &out.Abort
		*out = make([]DefaultRouteActionFaultInjectionPolicyAbortParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Delay != nil {
		in, out := &in.Delay, &out.Delay
		*out = make([]DefaultRouteActionFaultInjectionPolicyDelayParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DefaultRouteActionFaultInjectionPolicyParameters.
func (in *DefaultRouteActionFaultInjectionPolicyParameters) DeepCopy() *DefaultRouteActionFaultInjectionPolicyParameters {
	if in == nil {
		return nil
	}
	out := new(DefaultRouteActionFaultInjectionPolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DefaultRouteActionInitParameters) DeepCopyInto(out *DefaultRouteActionInitParameters) {
	*out = *in
	if in.CorsPolicy != nil {
		in, out := &in.CorsPolicy, &out.CorsPolicy
		*out = make([]CorsPolicyInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.FaultInjectionPolicy != nil {
		in, out := &in.FaultInjectionPolicy, &out.FaultInjectionPolicy
		*out = make([]FaultInjectionPolicyInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RequestMirrorPolicy != nil {
		in, out := &in.RequestMirrorPolicy, &out.RequestMirrorPolicy
		*out = make([]RequestMirrorPolicyInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RetryPolicy != nil {
		in, out := &in.RetryPolicy, &out.RetryPolicy
		*out = make([]RetryPolicyInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Timeout != nil {
		in, out := &in.Timeout, &out.Timeout
		*out = make([]TimeoutInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.URLRewrite != nil {
		in, out := &in.URLRewrite, &out.URLRewrite
		*out = make([]URLRewriteInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.WeightedBackendServices != nil {
		in, out := &in.WeightedBackendServices, &out.WeightedBackendServices
		*out = make([]WeightedBackendServicesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DefaultRouteActionInitParameters.
func (in *DefaultRouteActionInitParameters) DeepCopy() *DefaultRouteActionInitParameters {
	if in == nil {
		return nil
	}
	out := new(DefaultRouteActionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DefaultRouteActionObservation) DeepCopyInto(out *DefaultRouteActionObservation) {
	*out = *in
	if in.CorsPolicy != nil {
		in, out := &in.CorsPolicy, &out.CorsPolicy
		*out = make([]CorsPolicyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.FaultInjectionPolicy != nil {
		in, out := &in.FaultInjectionPolicy, &out.FaultInjectionPolicy
		*out = make([]FaultInjectionPolicyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RequestMirrorPolicy != nil {
		in, out := &in.RequestMirrorPolicy, &out.RequestMirrorPolicy
		*out = make([]RequestMirrorPolicyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RetryPolicy != nil {
		in, out := &in.RetryPolicy, &out.RetryPolicy
		*out = make([]RetryPolicyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Timeout != nil {
		in, out := &in.Timeout, &out.Timeout
		*out = make([]TimeoutObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.URLRewrite != nil {
		in, out := &in.URLRewrite, &out.URLRewrite
		*out = make([]URLRewriteObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.WeightedBackendServices != nil {
		in, out := &in.WeightedBackendServices, &out.WeightedBackendServices
		*out = make([]WeightedBackendServicesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DefaultRouteActionObservation.
func (in *DefaultRouteActionObservation) DeepCopy() *DefaultRouteActionObservation {
	if in == nil {
		return nil
	}
	out := new(DefaultRouteActionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DefaultRouteActionParameters) DeepCopyInto(out *DefaultRouteActionParameters) {
	*out = *in
	if in.CorsPolicy != nil {
		in, out := &in.CorsPolicy, &out.CorsPolicy
		*out = make([]CorsPolicyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.FaultInjectionPolicy != nil {
		in, out := &in.FaultInjectionPolicy, &out.FaultInjectionPolicy
		*out = make([]FaultInjectionPolicyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RequestMirrorPolicy != nil {
		in, out := &in.RequestMirrorPolicy, &out.RequestMirrorPolicy
		*out = make([]RequestMirrorPolicyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RetryPolicy != nil {
		in, out := &in.RetryPolicy, &out.RetryPolicy
		*out = make([]RetryPolicyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Timeout != nil {
		in, out := &in.Timeout, &out.Timeout
		*out = make([]TimeoutParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.URLRewrite != nil {
		in, out := &in.URLRewrite, &out.URLRewrite
		*out = make([]URLRewriteParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.WeightedBackendServices != nil {
		in, out := &in.WeightedBackendServices, &out.WeightedBackendServices
		*out = make([]WeightedBackendServicesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DefaultRouteActionParameters.
func (in *DefaultRouteActionParameters) DeepCopy() *DefaultRouteActionParameters {
	if in == nil {
		return nil
	}
	out := new(DefaultRouteActionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DefaultRouteActionRequestMirrorPolicyInitParameters) DeepCopyInto(out *DefaultRouteActionRequestMirrorPolicyInitParameters) {
	*out = *in
	if in.BackendService != nil {
		in, out := &in.BackendService, &out.BackendService
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DefaultRouteActionRequestMirrorPolicyInitParameters.
func (in *DefaultRouteActionRequestMirrorPolicyInitParameters) DeepCopy() *DefaultRouteActionRequestMirrorPolicyInitParameters {
	if in == nil {
		return nil
	}
	out := new(DefaultRouteActionRequestMirrorPolicyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DefaultRouteActionRequestMirrorPolicyObservation) DeepCopyInto(out *DefaultRouteActionRequestMirrorPolicyObservation) {
	*out = *in
	if in.BackendService != nil {
		in, out := &in.BackendService, &out.BackendService
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DefaultRouteActionRequestMirrorPolicyObservation.
func (in *DefaultRouteActionRequestMirrorPolicyObservation) DeepCopy() *DefaultRouteActionRequestMirrorPolicyObservation {
	if in == nil {
		return nil
	}
	out := new(DefaultRouteActionRequestMirrorPolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DefaultRouteActionRequestMirrorPolicyParameters) DeepCopyInto(out *DefaultRouteActionRequestMirrorPolicyParameters) {
	*out = *in
	if in.BackendService != nil {
		in, out := &in.BackendService, &out.BackendService
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DefaultRouteActionRequestMirrorPolicyParameters.
func (in *DefaultRouteActionRequestMirrorPolicyParameters) DeepCopy() *DefaultRouteActionRequestMirrorPolicyParameters {
	if in == nil {
		return nil
	}
	out := new(DefaultRouteActionRequestMirrorPolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DefaultRouteActionRetryPolicyInitParameters) DeepCopyInto(out *DefaultRouteActionRetryPolicyInitParameters) {
	*out = *in
	if in.NumRetries != nil {
		in, out := &in.NumRetries, &out.NumRetries
		*out = new(float64)
		**out = **in
	}
	if in.PerTryTimeout != nil {
		in, out := &in.PerTryTimeout, &out.PerTryTimeout
		*out = make([]DefaultRouteActionRetryPolicyPerTryTimeoutInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RetryConditions != nil {
		in, out := &in.RetryConditions, &out.RetryConditions
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DefaultRouteActionRetryPolicyInitParameters.
func (in *DefaultRouteActionRetryPolicyInitParameters) DeepCopy() *DefaultRouteActionRetryPolicyInitParameters {
	if in == nil {
		return nil
	}
	out := new(DefaultRouteActionRetryPolicyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DefaultRouteActionRetryPolicyObservation) DeepCopyInto(out *DefaultRouteActionRetryPolicyObservation) {
	*out = *in
	if in.NumRetries != nil {
		in, out := &in.NumRetries, &out.NumRetries
		*out = new(float64)
		**out = **in
	}
	if in.PerTryTimeout != nil {
		in, out := &in.PerTryTimeout, &out.PerTryTimeout
		*out = make([]DefaultRouteActionRetryPolicyPerTryTimeoutObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RetryConditions != nil {
		in, out := &in.RetryConditions, &out.RetryConditions
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DefaultRouteActionRetryPolicyObservation.
func (in *DefaultRouteActionRetryPolicyObservation) DeepCopy() *DefaultRouteActionRetryPolicyObservation {
	if in == nil {
		return nil
	}
	out := new(DefaultRouteActionRetryPolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DefaultRouteActionRetryPolicyParameters) DeepCopyInto(out *DefaultRouteActionRetryPolicyParameters) {
	*out = *in
	if in.NumRetries != nil {
		in, out := &in.NumRetries, &out.NumRetries
		*out = new(float64)
		**out = **in
	}
	if in.PerTryTimeout != nil {
		in, out := &in.PerTryTimeout, &out.PerTryTimeout
		*out = make([]DefaultRouteActionRetryPolicyPerTryTimeoutParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RetryConditions != nil {
		in, out := &in.RetryConditions, &out.RetryConditions
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DefaultRouteActionRetryPolicyParameters.
func (in *DefaultRouteActionRetryPolicyParameters) DeepCopy() *DefaultRouteActionRetryPolicyParameters {
	if in == nil {
		return nil
	}
	out := new(DefaultRouteActionRetryPolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DefaultRouteActionRetryPolicyPerTryTimeoutInitParameters) DeepCopyInto(out *DefaultRouteActionRetryPolicyPerTryTimeoutInitParameters) {
	*out = *in
	if in.Nanos != nil {
		in, out := &in.Nanos, &out.Nanos
		*out = new(float64)
		**out = **in
	}
	if in.Seconds != nil {
		in, out := &in.Seconds, &out.Seconds
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DefaultRouteActionRetryPolicyPerTryTimeoutInitParameters.
func (in *DefaultRouteActionRetryPolicyPerTryTimeoutInitParameters) DeepCopy() *DefaultRouteActionRetryPolicyPerTryTimeoutInitParameters {
	if in == nil {
		return nil
	}
	out := new(DefaultRouteActionRetryPolicyPerTryTimeoutInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DefaultRouteActionRetryPolicyPerTryTimeoutObservation) DeepCopyInto(out *DefaultRouteActionRetryPolicyPerTryTimeoutObservation) {
	*out = *in
	if in.Nanos != nil {
		in, out := &in.Nanos, &out.Nanos
		*out = new(float64)
		**out = **in
	}
	if in.Seconds != nil {
		in, out := &in.Seconds, &out.Seconds
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DefaultRouteActionRetryPolicyPerTryTimeoutObservation.
func (in *DefaultRouteActionRetryPolicyPerTryTimeoutObservation) DeepCopy() *DefaultRouteActionRetryPolicyPerTryTimeoutObservation {
	if in == nil {
		return nil
	}
	out := new(DefaultRouteActionRetryPolicyPerTryTimeoutObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DefaultRouteActionRetryPolicyPerTryTimeoutParameters) DeepCopyInto(out *DefaultRouteActionRetryPolicyPerTryTimeoutParameters) {
	*out = *in
	if in.Nanos != nil {
		in, out := &in.Nanos, &out.Nanos
		*out = new(float64)
		**out = **in
	}
	if in.Seconds != nil {
		in, out := &in.Seconds, &out.Seconds
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DefaultRouteActionRetryPolicyPerTryTimeoutParameters.
func (in *DefaultRouteActionRetryPolicyPerTryTimeoutParameters) DeepCopy() *DefaultRouteActionRetryPolicyPerTryTimeoutParameters {
	if in == nil {
		return nil
	}
	out := new(DefaultRouteActionRetryPolicyPerTryTimeoutParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DefaultRouteActionTimeoutInitParameters) DeepCopyInto(out *DefaultRouteActionTimeoutInitParameters) {
	*out = *in
	if in.Nanos != nil {
		in, out := &in.Nanos, &out.Nanos
		*out = new(float64)
		**out = **in
	}
	if in.Seconds != nil {
		in, out := &in.Seconds, &out.Seconds
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DefaultRouteActionTimeoutInitParameters.
func (in *DefaultRouteActionTimeoutInitParameters) DeepCopy() *DefaultRouteActionTimeoutInitParameters {
	if in == nil {
		return nil
	}
	out := new(DefaultRouteActionTimeoutInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DefaultRouteActionTimeoutObservation) DeepCopyInto(out *DefaultRouteActionTimeoutObservation) {
	*out = *in
	if in.Nanos != nil {
		in, out := &in.Nanos, &out.Nanos
		*out = new(float64)
		**out = **in
	}
	if in.Seconds != nil {
		in, out := &in.Seconds, &out.Seconds
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DefaultRouteActionTimeoutObservation.
func (in *DefaultRouteActionTimeoutObservation) DeepCopy() *DefaultRouteActionTimeoutObservation {
	if in == nil {
		return nil
	}
	out := new(DefaultRouteActionTimeoutObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DefaultRouteActionTimeoutParameters) DeepCopyInto(out *DefaultRouteActionTimeoutParameters) {
	*out = *in
	if in.Nanos != nil {
		in, out := &in.Nanos, &out.Nanos
		*out = new(float64)
		**out = **in
	}
	if in.Seconds != nil {
		in, out := &in.Seconds, &out.Seconds
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DefaultRouteActionTimeoutParameters.
func (in *DefaultRouteActionTimeoutParameters) DeepCopy() *DefaultRouteActionTimeoutParameters {
	if in == nil {
		return nil
	}
	out := new(DefaultRouteActionTimeoutParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DefaultRouteActionURLRewriteInitParameters) DeepCopyInto(out *DefaultRouteActionURLRewriteInitParameters) {
	*out = *in
	if in.HostRewrite != nil {
		in, out := &in.HostRewrite, &out.HostRewrite
		*out = new(string)
		**out = **in
	}
	if in.PathPrefixRewrite != nil {
		in, out := &in.PathPrefixRewrite, &out.PathPrefixRewrite
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DefaultRouteActionURLRewriteInitParameters.
func (in *DefaultRouteActionURLRewriteInitParameters) DeepCopy() *DefaultRouteActionURLRewriteInitParameters {
	if in == nil {
		return nil
	}
	out := new(DefaultRouteActionURLRewriteInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DefaultRouteActionURLRewriteObservation) DeepCopyInto(out *DefaultRouteActionURLRewriteObservation) {
	*out = *in
	if in.HostRewrite != nil {
		in, out := &in.HostRewrite, &out.HostRewrite
		*out = new(string)
		**out = **in
	}
	if in.PathPrefixRewrite != nil {
		in, out := &in.PathPrefixRewrite, &out.PathPrefixRewrite
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DefaultRouteActionURLRewriteObservation.
func (in *DefaultRouteActionURLRewriteObservation) DeepCopy() *DefaultRouteActionURLRewriteObservation {
	if in == nil {
		return nil
	}
	out := new(DefaultRouteActionURLRewriteObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DefaultRouteActionURLRewriteParameters) DeepCopyInto(out *DefaultRouteActionURLRewriteParameters) {
	*out = *in
	if in.HostRewrite != nil {
		in, out := &in.HostRewrite, &out.HostRewrite
		*out = new(string)
		**out = **in
	}
	if in.PathPrefixRewrite != nil {
		in, out := &in.PathPrefixRewrite, &out.PathPrefixRewrite
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DefaultRouteActionURLRewriteParameters.
func (in *DefaultRouteActionURLRewriteParameters) DeepCopy() *DefaultRouteActionURLRewriteParameters {
	if in == nil {
		return nil
	}
	out := new(DefaultRouteActionURLRewriteParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DefaultRouteActionWeightedBackendServicesHeaderActionInitParameters) DeepCopyInto(out *DefaultRouteActionWeightedBackendServicesHeaderActionInitParameters) {
	*out = *in
	if in.RequestHeadersToAdd != nil {
		in, out := &in.RequestHeadersToAdd, &out.RequestHeadersToAdd
		*out = make([]DefaultRouteActionWeightedBackendServicesHeaderActionRequestHeadersToAddInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RequestHeadersToRemove != nil {
		in, out := &in.RequestHeadersToRemove, &out.RequestHeadersToRemove
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ResponseHeadersToAdd != nil {
		in, out := &in.ResponseHeadersToAdd, &out.ResponseHeadersToAdd
		*out = make([]DefaultRouteActionWeightedBackendServicesHeaderActionResponseHeadersToAddInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ResponseHeadersToRemove != nil {
		in, out := &in.ResponseHeadersToRemove, &out.ResponseHeadersToRemove
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DefaultRouteActionWeightedBackendServicesHeaderActionInitParameters.
func (in *DefaultRouteActionWeightedBackendServicesHeaderActionInitParameters) DeepCopy() *DefaultRouteActionWeightedBackendServicesHeaderActionInitParameters {
	if in == nil {
		return nil
	}
	out := new(DefaultRouteActionWeightedBackendServicesHeaderActionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DefaultRouteActionWeightedBackendServicesHeaderActionObservation) DeepCopyInto(out *DefaultRouteActionWeightedBackendServicesHeaderActionObservation) {
	*out = *in
	if in.RequestHeadersToAdd != nil {
		in, out := &in.RequestHeadersToAdd, &out.RequestHeadersToAdd
		*out = make([]DefaultRouteActionWeightedBackendServicesHeaderActionRequestHeadersToAddObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RequestHeadersToRemove != nil {
		in, out := &in.RequestHeadersToRemove, &out.RequestHeadersToRemove
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ResponseHeadersToAdd != nil {
		in, out := &in.ResponseHeadersToAdd, &out.ResponseHeadersToAdd
		*out = make([]DefaultRouteActionWeightedBackendServicesHeaderActionResponseHeadersToAddObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ResponseHeadersToRemove != nil {
		in, out := &in.ResponseHeadersToRemove, &out.ResponseHeadersToRemove
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DefaultRouteActionWeightedBackendServicesHeaderActionObservation.
func (in *DefaultRouteActionWeightedBackendServicesHeaderActionObservation) DeepCopy() *DefaultRouteActionWeightedBackendServicesHeaderActionObservation {
	if in == nil {
		return nil
	}
	out := new(DefaultRouteActionWeightedBackendServicesHeaderActionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DefaultRouteActionWeightedBackendServicesHeaderActionParameters) DeepCopyInto(out *DefaultRouteActionWeightedBackendServicesHeaderActionParameters) {
	*out = *in
	if in.RequestHeadersToAdd != nil {
		in, out := &in.RequestHeadersToAdd, &out.RequestHeadersToAdd
		*out = make([]DefaultRouteActionWeightedBackendServicesHeaderActionRequestHeadersToAddParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RequestHeadersToRemove != nil {
		in, out := &in.RequestHeadersToRemove, &out.RequestHeadersToRemove
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ResponseHeadersToAdd != nil {
		in, out := &in.ResponseHeadersToAdd, &out.ResponseHeadersToAdd
		*out = make([]DefaultRouteActionWeightedBackendServicesHeaderActionResponseHeadersToAddParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ResponseHeadersToRemove != nil {
		in, out := &in.ResponseHeadersToRemove, &out.ResponseHeadersToRemove
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DefaultRouteActionWeightedBackendServicesHeaderActionParameters.
func (in *DefaultRouteActionWeightedBackendServicesHeaderActionParameters) DeepCopy() *DefaultRouteActionWeightedBackendServicesHeaderActionParameters {
	if in == nil {
		return nil
	}
	out := new(DefaultRouteActionWeightedBackendServicesHeaderActionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DefaultRouteActionWeightedBackendServicesHeaderActionRequestHeadersToAddInitParameters) DeepCopyInto(out *DefaultRouteActionWeightedBackendServicesHeaderActionRequestHeadersToAddInitParameters) {
	*out = *in
	if in.HeaderName != nil {
		in, out := &in.HeaderName, &out.HeaderName
		*out = new(string)
		**out = **in
	}
	if in.HeaderValue != nil {
		in, out := &in.HeaderValue, &out.HeaderValue
		*out = new(string)
		**out = **in
	}
	if in.Replace != nil {
		in, out := &in.Replace, &out.Replace
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DefaultRouteActionWeightedBackendServicesHeaderActionRequestHeadersToAddInitParameters.
func (in *DefaultRouteActionWeightedBackendServicesHeaderActionRequestHeadersToAddInitParameters) DeepCopy() *DefaultRouteActionWeightedBackendServicesHeaderActionRequestHeadersToAddInitParameters {
	if in == nil {
		return nil
	}
	out := new(DefaultRouteActionWeightedBackendServicesHeaderActionRequestHeadersToAddInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DefaultRouteActionWeightedBackendServicesHeaderActionRequestHeadersToAddObservation) DeepCopyInto(out *DefaultRouteActionWeightedBackendServicesHeaderActionRequestHeadersToAddObservation) {
	*out = *in
	if in.HeaderName != nil {
		in, out := &in.HeaderName, &out.HeaderName
		*out = new(string)
		**out = **in
	}
	if in.HeaderValue != nil {
		in, out := &in.HeaderValue, &out.HeaderValue
		*out = new(string)
		**out = **in
	}
	if in.Replace != nil {
		in, out := &in.Replace, &out.Replace
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DefaultRouteActionWeightedBackendServicesHeaderActionRequestHeadersToAddObservation.
func (in *DefaultRouteActionWeightedBackendServicesHeaderActionRequestHeadersToAddObservation) DeepCopy() *DefaultRouteActionWeightedBackendServicesHeaderActionRequestHeadersToAddObservation {
	if in == nil {
		return nil
	}
	out := new(DefaultRouteActionWeightedBackendServicesHeaderActionRequestHeadersToAddObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DefaultRouteActionWeightedBackendServicesHeaderActionRequestHeadersToAddParameters) DeepCopyInto(out *DefaultRouteActionWeightedBackendServicesHeaderActionRequestHeadersToAddParameters) {
	*out = *in
	if in.HeaderName != nil {
		in, out := &in.HeaderName, &out.HeaderName
		*out = new(string)
		**out = **in
	}
	if in.HeaderValue != nil {
		in, out := &in.HeaderValue, &out.HeaderValue
		*out = new(string)
		**out = **in
	}
	if in.Replace != nil {
		in, out := &in.Replace, &out.Replace
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DefaultRouteActionWeightedBackendServicesHeaderActionRequestHeadersToAddParameters.
func (in *DefaultRouteActionWeightedBackendServicesHeaderActionRequestHeadersToAddParameters) DeepCopy() *DefaultRouteActionWeightedBackendServicesHeaderActionRequestHeadersToAddParameters {
	if in == nil {
		return nil
	}
	out := new(DefaultRouteActionWeightedBackendServicesHeaderActionRequestHeadersToAddParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DefaultRouteActionWeightedBackendServicesHeaderActionResponseHeadersToAddInitParameters) DeepCopyInto(out *DefaultRouteActionWeightedBackendServicesHeaderActionResponseHeadersToAddInitParameters) {
	*out = *in
	if in.HeaderName != nil {
		in, out := &in.HeaderName, &out.HeaderName
		*out = new(string)
		**out = **in
	}
	if in.HeaderValue != nil {
		in, out := &in.HeaderValue, &out.HeaderValue
		*out = new(string)
		**out = **in
	}
	if in.Replace != nil {
		in, out := &in.Replace, &out.Replace
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DefaultRouteActionWeightedBackendServicesHeaderActionResponseHeadersToAddInitParameters.
func (in *DefaultRouteActionWeightedBackendServicesHeaderActionResponseHeadersToAddInitParameters) DeepCopy() *DefaultRouteActionWeightedBackendServicesHeaderActionResponseHeadersToAddInitParameters {
	if in == nil {
		return nil
	}
	out := new(DefaultRouteActionWeightedBackendServicesHeaderActionResponseHeadersToAddInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DefaultRouteActionWeightedBackendServicesHeaderActionResponseHeadersToAddObservation) DeepCopyInto(out *DefaultRouteActionWeightedBackendServicesHeaderActionResponseHeadersToAddObservation) {
	*out = *in
	if in.HeaderName != nil {
		in, out := &in.HeaderName, &out.HeaderName
		*out = new(string)
		**out = **in
	}
	if in.HeaderValue != nil {
		in, out := &in.HeaderValue, &out.HeaderValue
		*out = new(string)
		**out = **in
	}
	if in.Replace != nil {
		in, out := &in.Replace, &out.Replace
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DefaultRouteActionWeightedBackendServicesHeaderActionResponseHeadersToAddObservation.
func (in *DefaultRouteActionWeightedBackendServicesHeaderActionResponseHeadersToAddObservation) DeepCopy() *DefaultRouteActionWeightedBackendServicesHeaderActionResponseHeadersToAddObservation {
	if in == nil {
		return nil
	}
	out := new(DefaultRouteActionWeightedBackendServicesHeaderActionResponseHeadersToAddObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DefaultRouteActionWeightedBackendServicesHeaderActionResponseHeadersToAddParameters) DeepCopyInto(out *DefaultRouteActionWeightedBackendServicesHeaderActionResponseHeadersToAddParameters) {
	*out = *in
	if in.HeaderName != nil {
		in, out := &in.HeaderName, &out.HeaderName
		*out = new(string)
		**out = **in
	}
	if in.HeaderValue != nil {
		in, out := &in.HeaderValue, &out.HeaderValue
		*out = new(string)
		**out = **in
	}
	if in.Replace != nil {
		in, out := &in.Replace, &out.Replace
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DefaultRouteActionWeightedBackendServicesHeaderActionResponseHeadersToAddParameters.
func (in *DefaultRouteActionWeightedBackendServicesHeaderActionResponseHeadersToAddParameters) DeepCopy() *DefaultRouteActionWeightedBackendServicesHeaderActionResponseHeadersToAddParameters {
	if in == nil {
		return nil
	}
	out := new(DefaultRouteActionWeightedBackendServicesHeaderActionResponseHeadersToAddParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DefaultRouteActionWeightedBackendServicesInitParameters) DeepCopyInto(out *DefaultRouteActionWeightedBackendServicesInitParameters) {
	*out = *in
	if in.BackendService != nil {
		in, out := &in.BackendService, &out.BackendService
		*out = new(string)
		**out = **in
	}
	if in.HeaderAction != nil {
		in, out := &in.HeaderAction, &out.HeaderAction
		*out = make([]DefaultRouteActionWeightedBackendServicesHeaderActionInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Weight != nil {
		in, out := &in.Weight, &out.Weight
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DefaultRouteActionWeightedBackendServicesInitParameters.
func (in *DefaultRouteActionWeightedBackendServicesInitParameters) DeepCopy() *DefaultRouteActionWeightedBackendServicesInitParameters {
	if in == nil {
		return nil
	}
	out := new(DefaultRouteActionWeightedBackendServicesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DefaultRouteActionWeightedBackendServicesObservation) DeepCopyInto(out *DefaultRouteActionWeightedBackendServicesObservation) {
	*out = *in
	if in.BackendService != nil {
		in, out := &in.BackendService, &out.BackendService
		*out = new(string)
		**out = **in
	}
	if in.HeaderAction != nil {
		in, out := &in.HeaderAction, &out.HeaderAction
		*out = make([]DefaultRouteActionWeightedBackendServicesHeaderActionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Weight != nil {
		in, out := &in.Weight, &out.Weight
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DefaultRouteActionWeightedBackendServicesObservation.
func (in *DefaultRouteActionWeightedBackendServicesObservation) DeepCopy() *DefaultRouteActionWeightedBackendServicesObservation {
	if in == nil {
		return nil
	}
	out := new(DefaultRouteActionWeightedBackendServicesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DefaultRouteActionWeightedBackendServicesParameters) DeepCopyInto(out *DefaultRouteActionWeightedBackendServicesParameters) {
	*out = *in
	if in.BackendService != nil {
		in, out := &in.BackendService, &out.BackendService
		*out = new(string)
		**out = **in
	}
	if in.HeaderAction != nil {
		in, out := &in.HeaderAction, &out.HeaderAction
		*out = make([]DefaultRouteActionWeightedBackendServicesHeaderActionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Weight != nil {
		in, out := &in.Weight, &out.Weight
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DefaultRouteActionWeightedBackendServicesParameters.
func (in *DefaultRouteActionWeightedBackendServicesParameters) DeepCopy() *DefaultRouteActionWeightedBackendServicesParameters {
	if in == nil {
		return nil
	}
	out := new(DefaultRouteActionWeightedBackendServicesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DefaultURLRedirectInitParameters) DeepCopyInto(out *DefaultURLRedirectInitParameters) {
	*out = *in
	if in.HTTPSRedirect != nil {
		in, out := &in.HTTPSRedirect, &out.HTTPSRedirect
		*out = new(bool)
		**out = **in
	}
	if in.HostRedirect != nil {
		in, out := &in.HostRedirect, &out.HostRedirect
		*out = new(string)
		**out = **in
	}
	if in.PathRedirect != nil {
		in, out := &in.PathRedirect, &out.PathRedirect
		*out = new(string)
		**out = **in
	}
	if in.PrefixRedirect != nil {
		in, out := &in.PrefixRedirect, &out.PrefixRedirect
		*out = new(string)
		**out = **in
	}
	if in.RedirectResponseCode != nil {
		in, out := &in.RedirectResponseCode, &out.RedirectResponseCode
		*out = new(string)
		**out = **in
	}
	if in.StripQuery != nil {
		in, out := &in.StripQuery, &out.StripQuery
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DefaultURLRedirectInitParameters.
func (in *DefaultURLRedirectInitParameters) DeepCopy() *DefaultURLRedirectInitParameters {
	if in == nil {
		return nil
	}
	out := new(DefaultURLRedirectInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DefaultURLRedirectObservation) DeepCopyInto(out *DefaultURLRedirectObservation) {
	*out = *in
	if in.HTTPSRedirect != nil {
		in, out := &in.HTTPSRedirect, &out.HTTPSRedirect
		*out = new(bool)
		**out = **in
	}
	if in.HostRedirect != nil {
		in, out := &in.HostRedirect, &out.HostRedirect
		*out = new(string)
		**out = **in
	}
	if in.PathRedirect != nil {
		in, out := &in.PathRedirect, &out.PathRedirect
		*out = new(string)
		**out = **in
	}
	if in.PrefixRedirect != nil {
		in, out := &in.PrefixRedirect, &out.PrefixRedirect
		*out = new(string)
		**out = **in
	}
	if in.RedirectResponseCode != nil {
		in, out := &in.RedirectResponseCode, &out.RedirectResponseCode
		*out = new(string)
		**out = **in
	}
	if in.StripQuery != nil {
		in, out := &in.StripQuery, &out.StripQuery
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DefaultURLRedirectObservation.
func (in *DefaultURLRedirectObservation) DeepCopy() *DefaultURLRedirectObservation {
	if in == nil {
		return nil
	}
	out := new(DefaultURLRedirectObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DefaultURLRedirectParameters) DeepCopyInto(out *DefaultURLRedirectParameters) {
	*out = *in
	if in.HTTPSRedirect != nil {
		in, out := &in.HTTPSRedirect, &out.HTTPSRedirect
		*out = new(bool)
		**out = **in
	}
	if in.HostRedirect != nil {
		in, out := &in.HostRedirect, &out.HostRedirect
		*out = new(string)
		**out = **in
	}
	if in.PathRedirect != nil {
		in, out := &in.PathRedirect, &out.PathRedirect
		*out = new(string)
		**out = **in
	}
	if in.PrefixRedirect != nil {
		in, out := &in.PrefixRedirect, &out.PrefixRedirect
		*out = new(string)
		**out = **in
	}
	if in.RedirectResponseCode != nil {
		in, out := &in.RedirectResponseCode, &out.RedirectResponseCode
		*out = new(string)
		**out = **in
	}
	if in.StripQuery != nil {
		in, out := &in.StripQuery, &out.StripQuery
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DefaultURLRedirectParameters.
func (in *DefaultURLRedirectParameters) DeepCopy() *DefaultURLRedirectParameters {
	if in == nil {
		return nil
	}
	out := new(DefaultURLRedirectParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DelayFixedDelayInitParameters) DeepCopyInto(out *DelayFixedDelayInitParameters) {
	*out = *in
	if in.Nanos != nil {
		in, out := &in.Nanos, &out.Nanos
		*out = new(float64)
		**out = **in
	}
	if in.Seconds != nil {
		in, out := &in.Seconds, &out.Seconds
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DelayFixedDelayInitParameters.
func (in *DelayFixedDelayInitParameters) DeepCopy() *DelayFixedDelayInitParameters {
	if in == nil {
		return nil
	}
	out := new(DelayFixedDelayInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DelayFixedDelayObservation) DeepCopyInto(out *DelayFixedDelayObservation) {
	*out = *in
	if in.Nanos != nil {
		in, out := &in.Nanos, &out.Nanos
		*out = new(float64)
		**out = **in
	}
	if in.Seconds != nil {
		in, out := &in.Seconds, &out.Seconds
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DelayFixedDelayObservation.
func (in *DelayFixedDelayObservation) DeepCopy() *DelayFixedDelayObservation {
	if in == nil {
		return nil
	}
	out := new(DelayFixedDelayObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DelayFixedDelayParameters) DeepCopyInto(out *DelayFixedDelayParameters) {
	*out = *in
	if in.Nanos != nil {
		in, out := &in.Nanos, &out.Nanos
		*out = new(float64)
		**out = **in
	}
	if in.Seconds != nil {
		in, out := &in.Seconds, &out.Seconds
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DelayFixedDelayParameters.
func (in *DelayFixedDelayParameters) DeepCopy() *DelayFixedDelayParameters {
	if in == nil {
		return nil
	}
	out := new(DelayFixedDelayParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DelayInitParameters) DeepCopyInto(out *DelayInitParameters) {
	*out = *in
	if in.FixedDelay != nil {
		in, out := &in.FixedDelay, &out.FixedDelay
		*out = make([]FixedDelayInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Percentage != nil {
		in, out := &in.Percentage, &out.Percentage
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DelayInitParameters.
func (in *DelayInitParameters) DeepCopy() *DelayInitParameters {
	if in == nil {
		return nil
	}
	out := new(DelayInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DelayObservation) DeepCopyInto(out *DelayObservation) {
	*out = *in
	if in.FixedDelay != nil {
		in, out := &in.FixedDelay, &out.FixedDelay
		*out = make([]FixedDelayObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Percentage != nil {
		in, out := &in.Percentage, &out.Percentage
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DelayObservation.
func (in *DelayObservation) DeepCopy() *DelayObservation {
	if in == nil {
		return nil
	}
	out := new(DelayObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DelayParameters) DeepCopyInto(out *DelayParameters) {
	*out = *in
	if in.FixedDelay != nil {
		in, out := &in.FixedDelay, &out.FixedDelay
		*out = make([]FixedDelayParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Percentage != nil {
		in, out := &in.Percentage, &out.Percentage
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DelayParameters.
func (in *DelayParameters) DeepCopy() *DelayParameters {
	if in == nil {
		return nil
	}
	out := new(DelayParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DenyInitParameters) DeepCopyInto(out *DenyInitParameters) {
	*out = *in
	if in.Ports != nil {
		in, out := &in.Ports, &out.Ports
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Protocol != nil {
		in, out := &in.Protocol, &out.Protocol
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DenyInitParameters.
func (in *DenyInitParameters) DeepCopy() *DenyInitParameters {
	if in == nil {
		return nil
	}
	out := new(DenyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DenyObservation) DeepCopyInto(out *DenyObservation) {
	*out = *in
	if in.Ports != nil {
		in, out := &in.Ports, &out.Ports
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Protocol != nil {
		in, out := &in.Protocol, &out.Protocol
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DenyObservation.
func (in *DenyObservation) DeepCopy() *DenyObservation {
	if in == nil {
		return nil
	}
	out := new(DenyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DenyParameters) DeepCopyInto(out *DenyParameters) {
	*out = *in
	if in.Ports != nil {
		in, out := &in.Ports, &out.Ports
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Protocol != nil {
		in, out := &in.Protocol, &out.Protocol
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DenyParameters.
func (in *DenyParameters) DeepCopy() *DenyParameters {
	if in == nil {
		return nil
	}
	out := new(DenyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Disk) DeepCopyInto(out *Disk) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Disk.
func (in *Disk) DeepCopy() *Disk {
	if in == nil {
		return nil
	}
	out := new(Disk)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Disk) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DiskConsistencyGroupPolicyInitParameters) DeepCopyInto(out *DiskConsistencyGroupPolicyInitParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DiskConsistencyGroupPolicyInitParameters.
func (in *DiskConsistencyGroupPolicyInitParameters) DeepCopy() *DiskConsistencyGroupPolicyInitParameters {
	if in == nil {
		return nil
	}
	out := new(DiskConsistencyGroupPolicyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DiskConsistencyGroupPolicyObservation) DeepCopyInto(out *DiskConsistencyGroupPolicyObservation) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DiskConsistencyGroupPolicyObservation.
func (in *DiskConsistencyGroupPolicyObservation) DeepCopy() *DiskConsistencyGroupPolicyObservation {
	if in == nil {
		return nil
	}
	out := new(DiskConsistencyGroupPolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DiskConsistencyGroupPolicyParameters) DeepCopyInto(out *DiskConsistencyGroupPolicyParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DiskConsistencyGroupPolicyParameters.
func (in *DiskConsistencyGroupPolicyParameters) DeepCopy() *DiskConsistencyGroupPolicyParameters {
	if in == nil {
		return nil
	}
	out := new(DiskConsistencyGroupPolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DiskDiskEncryptionKeyInitParameters) DeepCopyInto(out *DiskDiskEncryptionKeyInitParameters) {
	*out = *in
	if in.KMSKeySelfLink != nil {
		in, out := &in.KMSKeySelfLink, &out.KMSKeySelfLink
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DiskDiskEncryptionKeyInitParameters.
func (in *DiskDiskEncryptionKeyInitParameters) DeepCopy() *DiskDiskEncryptionKeyInitParameters {
	if in == nil {
		return nil
	}
	out := new(DiskDiskEncryptionKeyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DiskDiskEncryptionKeyObservation) DeepCopyInto(out *DiskDiskEncryptionKeyObservation) {
	*out = *in
	if in.KMSKeySelfLink != nil {
		in, out := &in.KMSKeySelfLink, &out.KMSKeySelfLink
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DiskDiskEncryptionKeyObservation.
func (in *DiskDiskEncryptionKeyObservation) DeepCopy() *DiskDiskEncryptionKeyObservation {
	if in == nil {
		return nil
	}
	out := new(DiskDiskEncryptionKeyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DiskDiskEncryptionKeyParameters) DeepCopyInto(out *DiskDiskEncryptionKeyParameters) {
	*out = *in
	if in.KMSKeySelfLink != nil {
		in, out := &in.KMSKeySelfLink, &out.KMSKeySelfLink
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DiskDiskEncryptionKeyParameters.
func (in *DiskDiskEncryptionKeyParameters) DeepCopy() *DiskDiskEncryptionKeyParameters {
	if in == nil {
		return nil
	}
	out := new(DiskDiskEncryptionKeyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DiskEncryptionKeyInitParameters) DeepCopyInto(out *DiskEncryptionKeyInitParameters) {
	*out = *in
	if in.KMSKeySelfLink != nil {
		in, out := &in.KMSKeySelfLink, &out.KMSKeySelfLink
		*out = new(string)
		**out = **in
	}
	if in.KMSKeyServiceAccount != nil {
		in, out := &in.KMSKeyServiceAccount, &out.KMSKeyServiceAccount
		*out = new(string)
		**out = **in
	}
	if in.RawKeySecretRef != nil {
		in, out := &in.RawKeySecretRef, &out.RawKeySecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.RsaEncryptedKeySecretRef != nil {
		in, out := &in.RsaEncryptedKeySecretRef, &out.RsaEncryptedKeySecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DiskEncryptionKeyInitParameters.
func (in *DiskEncryptionKeyInitParameters) DeepCopy() *DiskEncryptionKeyInitParameters {
	if in == nil {
		return nil
	}
	out := new(DiskEncryptionKeyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DiskEncryptionKeyObservation) DeepCopyInto(out *DiskEncryptionKeyObservation) {
	*out = *in
	if in.KMSKeySelfLink != nil {
		in, out := &in.KMSKeySelfLink, &out.KMSKeySelfLink
		*out = new(string)
		**out = **in
	}
	if in.KMSKeyServiceAccount != nil {
		in, out := &in.KMSKeyServiceAccount, &out.KMSKeyServiceAccount
		*out = new(string)
		**out = **in
	}
	if in.Sha256 != nil {
		in, out := &in.Sha256, &out.Sha256
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DiskEncryptionKeyObservation.
func (in *DiskEncryptionKeyObservation) DeepCopy() *DiskEncryptionKeyObservation {
	if in == nil {
		return nil
	}
	out := new(DiskEncryptionKeyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DiskEncryptionKeyParameters) DeepCopyInto(out *DiskEncryptionKeyParameters) {
	*out = *in
	if in.KMSKeySelfLink != nil {
		in, out := &in.KMSKeySelfLink, &out.KMSKeySelfLink
		*out = new(string)
		**out = **in
	}
	if in.KMSKeyServiceAccount != nil {
		in, out := &in.KMSKeyServiceAccount, &out.KMSKeyServiceAccount
		*out = new(string)
		**out = **in
	}
	if in.RawKeySecretRef != nil {
		in, out := &in.RawKeySecretRef, &out.RawKeySecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.RsaEncryptedKeySecretRef != nil {
		in, out := &in.RsaEncryptedKeySecretRef, &out.RsaEncryptedKeySecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DiskEncryptionKeyParameters.
func (in *DiskEncryptionKeyParameters) DeepCopy() *DiskEncryptionKeyParameters {
	if in == nil {
		return nil
	}
	out := new(DiskEncryptionKeyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DiskIAMMember) DeepCopyInto(out *DiskIAMMember) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DiskIAMMember.
func (in *DiskIAMMember) DeepCopy() *DiskIAMMember {
	if in == nil {
		return nil
	}
	out := new(DiskIAMMember)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DiskIAMMember) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DiskIAMMemberInitParameters) DeepCopyInto(out *DiskIAMMemberInitParameters) {
	*out = *in
	if in.Condition != nil {
		in, out := &in.Condition, &out.Condition
		*out = make([]ConditionInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Member != nil {
		in, out := &in.Member, &out.Member
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NameRef != nil {
		in, out := &in.NameRef, &out.NameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.NameSelector != nil {
		in, out := &in.NameSelector, &out.NameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Role != nil {
		in, out := &in.Role, &out.Role
		*out = new(string)
		**out = **in
	}
	if in.Zone != nil {
		in, out := &in.Zone, &out.Zone
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DiskIAMMemberInitParameters.
func (in *DiskIAMMemberInitParameters) DeepCopy() *DiskIAMMemberInitParameters {
	if in == nil {
		return nil
	}
	out := new(DiskIAMMemberInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DiskIAMMemberList) DeepCopyInto(out *DiskIAMMemberList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]DiskIAMMember, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DiskIAMMemberList.
func (in *DiskIAMMemberList) DeepCopy() *DiskIAMMemberList {
	if in == nil {
		return nil
	}
	out := new(DiskIAMMemberList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DiskIAMMemberList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DiskIAMMemberObservation) DeepCopyInto(out *DiskIAMMemberObservation) {
	*out = *in
	if in.Condition != nil {
		in, out := &in.Condition, &out.Condition
		*out = make([]ConditionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Etag != nil {
		in, out := &in.Etag, &out.Etag
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Member != nil {
		in, out := &in.Member, &out.Member
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Role != nil {
		in, out := &in.Role, &out.Role
		*out = new(string)
		**out = **in
	}
	if in.Zone != nil {
		in, out := &in.Zone, &out.Zone
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DiskIAMMemberObservation.
func (in *DiskIAMMemberObservation) DeepCopy() *DiskIAMMemberObservation {
	if in == nil {
		return nil
	}
	out := new(DiskIAMMemberObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DiskIAMMemberParameters) DeepCopyInto(out *DiskIAMMemberParameters) {
	*out = *in
	if in.Condition != nil {
		in, out := &in.Condition, &out.Condition
		*out = make([]ConditionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Member != nil {
		in, out := &in.Member, &out.Member
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NameRef != nil {
		in, out := &in.NameRef, &out.NameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.NameSelector != nil {
		in, out := &in.NameSelector, &out.NameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Role != nil {
		in, out := &in.Role, &out.Role
		*out = new(string)
		**out = **in
	}
	if in.Zone != nil {
		in, out := &in.Zone, &out.Zone
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DiskIAMMemberParameters.
func (in *DiskIAMMemberParameters) DeepCopy() *DiskIAMMemberParameters {
	if in == nil {
		return nil
	}
	out := new(DiskIAMMemberParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DiskIAMMemberSpec) DeepCopyInto(out *DiskIAMMemberSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DiskIAMMemberSpec.
func (in *DiskIAMMemberSpec) DeepCopy() *DiskIAMMemberSpec {
	if in == nil {
		return nil
	}
	out := new(DiskIAMMemberSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DiskIAMMemberStatus) DeepCopyInto(out *DiskIAMMemberStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DiskIAMMemberStatus.
func (in *DiskIAMMemberStatus) DeepCopy() *DiskIAMMemberStatus {
	if in == nil {
		return nil
	}
	out := new(DiskIAMMemberStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DiskInitParameters) DeepCopyInto(out *DiskInitParameters) {
	*out = *in
	if in.AsyncPrimaryDisk != nil {
		in, out := &in.AsyncPrimaryDisk, &out.AsyncPrimaryDisk
		*out = make([]AsyncPrimaryDiskInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DiskEncryptionKey != nil {
		in, out := &in.DiskEncryptionKey, &out.DiskEncryptionKey
		*out = make([]DiskEncryptionKeyInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EnableConfidentialCompute != nil {
		in, out := &in.EnableConfidentialCompute, &out.EnableConfidentialCompute
		*out = new(bool)
		**out = **in
	}
	if in.GuestOsFeatures != nil {
		in, out := &in.GuestOsFeatures, &out.GuestOsFeatures
		*out = make([]GuestOsFeaturesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Image != nil {
		in, out := &in.Image, &out.Image
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Licenses != nil {
		in, out := &in.Licenses, &out.Licenses
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.PhysicalBlockSizeBytes != nil {
		in, out := &in.PhysicalBlockSizeBytes, &out.PhysicalBlockSizeBytes
		*out = new(float64)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.ProvisionedIops != nil {
		in, out := &in.ProvisionedIops, &out.ProvisionedIops
		*out = new(float64)
		**out = **in
	}
	if in.ProvisionedThroughput != nil {
		in, out := &in.ProvisionedThroughput, &out.ProvisionedThroughput
		*out = new(float64)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(float64)
		**out = **in
	}
	if in.Snapshot != nil {
		in, out := &in.Snapshot, &out.Snapshot
		*out = new(string)
		**out = **in
	}
	if in.SourceDisk != nil {
		in, out := &in.SourceDisk, &out.SourceDisk
		*out = new(string)
		**out = **in
	}
	if in.SourceImageEncryptionKey != nil {
		in, out := &in.SourceImageEncryptionKey, &out.SourceImageEncryptionKey
		*out = make([]SourceImageEncryptionKeyInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SourceSnapshotEncryptionKey != nil {
		in, out := &in.SourceSnapshotEncryptionKey, &out.SourceSnapshotEncryptionKey
		*out = make([]SourceSnapshotEncryptionKeyInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StoragePool != nil {
		in, out := &in.StoragePool, &out.StoragePool
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DiskInitParameters.
func (in *DiskInitParameters) DeepCopy() *DiskInitParameters {
	if in == nil {
		return nil
	}
	out := new(DiskInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DiskList) DeepCopyInto(out *DiskList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Disk, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DiskList.
func (in *DiskList) DeepCopy() *DiskList {
	if in == nil {
		return nil
	}
	out := new(DiskList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DiskList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DiskObservation) DeepCopyInto(out *DiskObservation) {
	*out = *in
	if in.AsyncPrimaryDisk != nil {
		in, out := &in.AsyncPrimaryDisk, &out.AsyncPrimaryDisk
		*out = make([]AsyncPrimaryDiskObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CreationTimestamp != nil {
		in, out := &in.CreationTimestamp, &out.CreationTimestamp
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DiskEncryptionKey != nil {
		in, out := &in.DiskEncryptionKey, &out.DiskEncryptionKey
		*out = make([]DiskEncryptionKeyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DiskID != nil {
		in, out := &in.DiskID, &out.DiskID
		*out = new(string)
		**out = **in
	}
	if in.EffectiveLabels != nil {
		in, out := &in.EffectiveLabels, &out.EffectiveLabels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.EnableConfidentialCompute != nil {
		in, out := &in.EnableConfidentialCompute, &out.EnableConfidentialCompute
		*out = new(bool)
		**out = **in
	}
	if in.GuestOsFeatures != nil {
		in, out := &in.GuestOsFeatures, &out.GuestOsFeatures
		*out = make([]GuestOsFeaturesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Image != nil {
		in, out := &in.Image, &out.Image
		*out = new(string)
		**out = **in
	}
	if in.LabelFingerprint != nil {
		in, out := &in.LabelFingerprint, &out.LabelFingerprint
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.LastAttachTimestamp != nil {
		in, out := &in.LastAttachTimestamp, &out.LastAttachTimestamp
		*out = new(string)
		**out = **in
	}
	if in.LastDetachTimestamp != nil {
		in, out := &in.LastDetachTimestamp, &out.LastDetachTimestamp
		*out = new(string)
		**out = **in
	}
	if in.Licenses != nil {
		in, out := &in.Licenses, &out.Licenses
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.PhysicalBlockSizeBytes != nil {
		in, out := &in.PhysicalBlockSizeBytes, &out.PhysicalBlockSizeBytes
		*out = new(float64)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.ProvisionedIops != nil {
		in, out := &in.ProvisionedIops, &out.ProvisionedIops
		*out = new(float64)
		**out = **in
	}
	if in.ProvisionedThroughput != nil {
		in, out := &in.ProvisionedThroughput, &out.ProvisionedThroughput
		*out = new(float64)
		**out = **in
	}
	if in.SelfLink != nil {
		in, out := &in.SelfLink, &out.SelfLink
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(float64)
		**out = **in
	}
	if in.Snapshot != nil {
		in, out := &in.Snapshot, &out.Snapshot
		*out = new(string)
		**out = **in
	}
	if in.SourceDisk != nil {
		in, out := &in.SourceDisk, &out.SourceDisk
		*out = new(string)
		**out = **in
	}
	if in.SourceDiskID != nil {
		in, out := &in.SourceDiskID, &out.SourceDiskID
		*out = new(string)
		**out = **in
	}
	if in.SourceImageEncryptionKey != nil {
		in, out := &in.SourceImageEncryptionKey, &out.SourceImageEncryptionKey
		*out = make([]SourceImageEncryptionKeyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SourceImageID != nil {
		in, out := &in.SourceImageID, &out.SourceImageID
		*out = new(string)
		**out = **in
	}
	if in.SourceSnapshotEncryptionKey != nil {
		in, out := &in.SourceSnapshotEncryptionKey, &out.SourceSnapshotEncryptionKey
		*out = make([]SourceSnapshotEncryptionKeyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SourceSnapshotID != nil {
		in, out := &in.SourceSnapshotID, &out.SourceSnapshotID
		*out = new(string)
		**out = **in
	}
	if in.StoragePool != nil {
		in, out := &in.StoragePool, &out.StoragePool
		*out = new(string)
		**out = **in
	}
	if in.TerraformLabels != nil {
		in, out := &in.TerraformLabels, &out.TerraformLabels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.Users != nil {
		in, out := &in.Users, &out.Users
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Zone != nil {
		in, out := &in.Zone, &out.Zone
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DiskObservation.
func (in *DiskObservation) DeepCopy() *DiskObservation {
	if in == nil {
		return nil
	}
	out := new(DiskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DiskParameters) DeepCopyInto(out *DiskParameters) {
	*out = *in
	if in.AsyncPrimaryDisk != nil {
		in, out := &in.AsyncPrimaryDisk, &out.AsyncPrimaryDisk
		*out = make([]AsyncPrimaryDiskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DiskEncryptionKey != nil {
		in, out := &in.DiskEncryptionKey, &out.DiskEncryptionKey
		*out = make([]DiskEncryptionKeyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EnableConfidentialCompute != nil {
		in, out := &in.EnableConfidentialCompute, &out.EnableConfidentialCompute
		*out = new(bool)
		**out = **in
	}
	if in.GuestOsFeatures != nil {
		in, out := &in.GuestOsFeatures, &out.GuestOsFeatures
		*out = make([]GuestOsFeaturesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Image != nil {
		in, out := &in.Image, &out.Image
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Licenses != nil {
		in, out := &in.Licenses, &out.Licenses
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.PhysicalBlockSizeBytes != nil {
		in, out := &in.PhysicalBlockSizeBytes, &out.PhysicalBlockSizeBytes
		*out = new(float64)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.ProvisionedIops != nil {
		in, out := &in.ProvisionedIops, &out.ProvisionedIops
		*out = new(float64)
		**out = **in
	}
	if in.ProvisionedThroughput != nil {
		in, out := &in.ProvisionedThroughput, &out.ProvisionedThroughput
		*out = new(float64)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(float64)
		**out = **in
	}
	if in.Snapshot != nil {
		in, out := &in.Snapshot, &out.Snapshot
		*out = new(string)
		**out = **in
	}
	if in.SourceDisk != nil {
		in, out := &in.SourceDisk, &out.SourceDisk
		*out = new(string)
		**out = **in
	}
	if in.SourceImageEncryptionKey != nil {
		in, out := &in.SourceImageEncryptionKey, &out.SourceImageEncryptionKey
		*out = make([]SourceImageEncryptionKeyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SourceSnapshotEncryptionKey != nil {
		in, out := &in.SourceSnapshotEncryptionKey, &out.SourceSnapshotEncryptionKey
		*out = make([]SourceSnapshotEncryptionKeyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StoragePool != nil {
		in, out := &in.StoragePool, &out.StoragePool
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.Zone != nil {
		in, out := &in.Zone, &out.Zone
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DiskParameters.
func (in *DiskParameters) DeepCopy() *DiskParameters {
	if in == nil {
		return nil
	}
	out := new(DiskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DiskResourcePolicyAttachment) DeepCopyInto(out *DiskResourcePolicyAttachment) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DiskResourcePolicyAttachment.
func (in *DiskResourcePolicyAttachment) DeepCopy() *DiskResourcePolicyAttachment {
	if in == nil {
		return nil
	}
	out := new(DiskResourcePolicyAttachment)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DiskResourcePolicyAttachment) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DiskResourcePolicyAttachmentInitParameters) DeepCopyInto(out *DiskResourcePolicyAttachmentInitParameters) {
	*out = *in
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = new(string)
		**out = **in
	}
	if in.DiskRef != nil {
		in, out := &in.DiskRef, &out.DiskRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.DiskSelector != nil {
		in, out := &in.DiskSelector, &out.DiskSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NameRef != nil {
		in, out := &in.NameRef, &out.NameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.NameSelector != nil {
		in, out := &in.NameSelector, &out.NameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Zone != nil {
		in, out := &in.Zone, &out.Zone
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DiskResourcePolicyAttachmentInitParameters.
func (in *DiskResourcePolicyAttachmentInitParameters) DeepCopy() *DiskResourcePolicyAttachmentInitParameters {
	if in == nil {
		return nil
	}
	out := new(DiskResourcePolicyAttachmentInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DiskResourcePolicyAttachmentList) DeepCopyInto(out *DiskResourcePolicyAttachmentList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]DiskResourcePolicyAttachment, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DiskResourcePolicyAttachmentList.
func (in *DiskResourcePolicyAttachmentList) DeepCopy() *DiskResourcePolicyAttachmentList {
	if in == nil {
		return nil
	}
	out := new(DiskResourcePolicyAttachmentList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DiskResourcePolicyAttachmentList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DiskResourcePolicyAttachmentObservation) DeepCopyInto(out *DiskResourcePolicyAttachmentObservation) {
	*out = *in
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Zone != nil {
		in, out := &in.Zone, &out.Zone
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DiskResourcePolicyAttachmentObservation.
func (in *DiskResourcePolicyAttachmentObservation) DeepCopy() *DiskResourcePolicyAttachmentObservation {
	if in == nil {
		return nil
	}
	out := new(DiskResourcePolicyAttachmentObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DiskResourcePolicyAttachmentParameters) DeepCopyInto(out *DiskResourcePolicyAttachmentParameters) {
	*out = *in
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = new(string)
		**out = **in
	}
	if in.DiskRef != nil {
		in, out := &in.DiskRef, &out.DiskRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.DiskSelector != nil {
		in, out := &in.DiskSelector, &out.DiskSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NameRef != nil {
		in, out := &in.NameRef, &out.NameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.NameSelector != nil {
		in, out := &in.NameSelector, &out.NameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Zone != nil {
		in, out := &in.Zone, &out.Zone
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DiskResourcePolicyAttachmentParameters.
func (in *DiskResourcePolicyAttachmentParameters) DeepCopy() *DiskResourcePolicyAttachmentParameters {
	if in == nil {
		return nil
	}
	out := new(DiskResourcePolicyAttachmentParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DiskResourcePolicyAttachmentSpec) DeepCopyInto(out *DiskResourcePolicyAttachmentSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DiskResourcePolicyAttachmentSpec.
func (in *DiskResourcePolicyAttachmentSpec) DeepCopy() *DiskResourcePolicyAttachmentSpec {
	if in == nil {
		return nil
	}
	out := new(DiskResourcePolicyAttachmentSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DiskResourcePolicyAttachmentStatus) DeepCopyInto(out *DiskResourcePolicyAttachmentStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DiskResourcePolicyAttachmentStatus.
func (in *DiskResourcePolicyAttachmentStatus) DeepCopy() *DiskResourcePolicyAttachmentStatus {
	if in == nil {
		return nil
	}
	out := new(DiskResourcePolicyAttachmentStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DiskSourceImageEncryptionKeyInitParameters) DeepCopyInto(out *DiskSourceImageEncryptionKeyInitParameters) {
	*out = *in
	if in.KMSKeySelfLink != nil {
		in, out := &in.KMSKeySelfLink, &out.KMSKeySelfLink
		*out = new(string)
		**out = **in
	}
	if in.KMSKeyServiceAccount != nil {
		in, out := &in.KMSKeyServiceAccount, &out.KMSKeyServiceAccount
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DiskSourceImageEncryptionKeyInitParameters.
func (in *DiskSourceImageEncryptionKeyInitParameters) DeepCopy() *DiskSourceImageEncryptionKeyInitParameters {
	if in == nil {
		return nil
	}
	out := new(DiskSourceImageEncryptionKeyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DiskSourceImageEncryptionKeyObservation) DeepCopyInto(out *DiskSourceImageEncryptionKeyObservation) {
	*out = *in
	if in.KMSKeySelfLink != nil {
		in, out := &in.KMSKeySelfLink, &out.KMSKeySelfLink
		*out = new(string)
		**out = **in
	}
	if in.KMSKeyServiceAccount != nil {
		in, out := &in.KMSKeyServiceAccount, &out.KMSKeyServiceAccount
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DiskSourceImageEncryptionKeyObservation.
func (in *DiskSourceImageEncryptionKeyObservation) DeepCopy() *DiskSourceImageEncryptionKeyObservation {
	if in == nil {
		return nil
	}
	out := new(DiskSourceImageEncryptionKeyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DiskSourceImageEncryptionKeyParameters) DeepCopyInto(out *DiskSourceImageEncryptionKeyParameters) {
	*out = *in
	if in.KMSKeySelfLink != nil {
		in, out := &in.KMSKeySelfLink, &out.KMSKeySelfLink
		*out = new(string)
		**out = **in
	}
	if in.KMSKeyServiceAccount != nil {
		in, out := &in.KMSKeyServiceAccount, &out.KMSKeyServiceAccount
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DiskSourceImageEncryptionKeyParameters.
func (in *DiskSourceImageEncryptionKeyParameters) DeepCopy() *DiskSourceImageEncryptionKeyParameters {
	if in == nil {
		return nil
	}
	out := new(DiskSourceImageEncryptionKeyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DiskSourceSnapshotEncryptionKeyInitParameters) DeepCopyInto(out *DiskSourceSnapshotEncryptionKeyInitParameters) {
	*out = *in
	if in.KMSKeySelfLink != nil {
		in, out := &in.KMSKeySelfLink, &out.KMSKeySelfLink
		*out = new(string)
		**out = **in
	}
	if in.KMSKeyServiceAccount != nil {
		in, out := &in.KMSKeyServiceAccount, &out.KMSKeyServiceAccount
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DiskSourceSnapshotEncryptionKeyInitParameters.
func (in *DiskSourceSnapshotEncryptionKeyInitParameters) DeepCopy() *DiskSourceSnapshotEncryptionKeyInitParameters {
	if in == nil {
		return nil
	}
	out := new(DiskSourceSnapshotEncryptionKeyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DiskSourceSnapshotEncryptionKeyObservation) DeepCopyInto(out *DiskSourceSnapshotEncryptionKeyObservation) {
	*out = *in
	if in.KMSKeySelfLink != nil {
		in, out := &in.KMSKeySelfLink, &out.KMSKeySelfLink
		*out = new(string)
		**out = **in
	}
	if in.KMSKeyServiceAccount != nil {
		in, out := &in.KMSKeyServiceAccount, &out.KMSKeyServiceAccount
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DiskSourceSnapshotEncryptionKeyObservation.
func (in *DiskSourceSnapshotEncryptionKeyObservation) DeepCopy() *DiskSourceSnapshotEncryptionKeyObservation {
	if in == nil {
		return nil
	}
	out := new(DiskSourceSnapshotEncryptionKeyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DiskSourceSnapshotEncryptionKeyParameters) DeepCopyInto(out *DiskSourceSnapshotEncryptionKeyParameters) {
	*out = *in
	if in.KMSKeySelfLink != nil {
		in, out := &in.KMSKeySelfLink, &out.KMSKeySelfLink
		*out = new(string)
		**out = **in
	}
	if in.KMSKeyServiceAccount != nil {
		in, out := &in.KMSKeyServiceAccount, &out.KMSKeyServiceAccount
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DiskSourceSnapshotEncryptionKeyParameters.
func (in *DiskSourceSnapshotEncryptionKeyParameters) DeepCopy() *DiskSourceSnapshotEncryptionKeyParameters {
	if in == nil {
		return nil
	}
	out := new(DiskSourceSnapshotEncryptionKeyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DiskSpec) DeepCopyInto(out *DiskSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DiskSpec.
func (in *DiskSpec) DeepCopy() *DiskSpec {
	if in == nil {
		return nil
	}
	out := new(DiskSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DiskStatus) DeepCopyInto(out *DiskStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DiskStatus.
func (in *DiskStatus) DeepCopy() *DiskStatus {
	if in == nil {
		return nil
	}
	out := new(DiskStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExceedRedirectOptionsInitParameters) DeepCopyInto(out *ExceedRedirectOptionsInitParameters) {
	*out = *in
	if in.Target != nil {
		in, out := &in.Target, &out.Target
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExceedRedirectOptionsInitParameters.
func (in *ExceedRedirectOptionsInitParameters) DeepCopy() *ExceedRedirectOptionsInitParameters {
	if in == nil {
		return nil
	}
	out := new(ExceedRedirectOptionsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExceedRedirectOptionsObservation) DeepCopyInto(out *ExceedRedirectOptionsObservation) {
	*out = *in
	if in.Target != nil {
		in, out := &in.Target, &out.Target
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExceedRedirectOptionsObservation.
func (in *ExceedRedirectOptionsObservation) DeepCopy() *ExceedRedirectOptionsObservation {
	if in == nil {
		return nil
	}
	out := new(ExceedRedirectOptionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExceedRedirectOptionsParameters) DeepCopyInto(out *ExceedRedirectOptionsParameters) {
	*out = *in
	if in.Target != nil {
		in, out := &in.Target, &out.Target
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExceedRedirectOptionsParameters.
func (in *ExceedRedirectOptionsParameters) DeepCopy() *ExceedRedirectOptionsParameters {
	if in == nil {
		return nil
	}
	out := new(ExceedRedirectOptionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExprInitParameters) DeepCopyInto(out *ExprInitParameters) {
	*out = *in
	if in.Expression != nil {
		in, out := &in.Expression, &out.Expression
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExprInitParameters.
func (in *ExprInitParameters) DeepCopy() *ExprInitParameters {
	if in == nil {
		return nil
	}
	out := new(ExprInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExprObservation) DeepCopyInto(out *ExprObservation) {
	*out = *in
	if in.Expression != nil {
		in, out := &in.Expression, &out.Expression
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExprObservation.
func (in *ExprObservation) DeepCopy() *ExprObservation {
	if in == nil {
		return nil
	}
	out := new(ExprObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExprOptionsInitParameters) DeepCopyInto(out *ExprOptionsInitParameters) {
	*out = *in
	if in.RecaptchaOptions != nil {
		in, out := &in.RecaptchaOptions, &out.RecaptchaOptions
		*out = make([]RecaptchaOptionsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExprOptionsInitParameters.
func (in *ExprOptionsInitParameters) DeepCopy() *ExprOptionsInitParameters {
	if in == nil {
		return nil
	}
	out := new(ExprOptionsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExprOptionsObservation) DeepCopyInto(out *ExprOptionsObservation) {
	*out = *in
	if in.RecaptchaOptions != nil {
		in, out := &in.RecaptchaOptions, &out.RecaptchaOptions
		*out = make([]RecaptchaOptionsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExprOptionsObservation.
func (in *ExprOptionsObservation) DeepCopy() *ExprOptionsObservation {
	if in == nil {
		return nil
	}
	out := new(ExprOptionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExprOptionsParameters) DeepCopyInto(out *ExprOptionsParameters) {
	*out = *in
	if in.RecaptchaOptions != nil {
		in, out := &in.RecaptchaOptions, &out.RecaptchaOptions
		*out = make([]RecaptchaOptionsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExprOptionsParameters.
func (in *ExprOptionsParameters) DeepCopy() *ExprOptionsParameters {
	if in == nil {
		return nil
	}
	out := new(ExprOptionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExprParameters) DeepCopyInto(out *ExprParameters) {
	*out = *in
	if in.Expression != nil {
		in, out := &in.Expression, &out.Expression
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExprParameters.
func (in *ExprParameters) DeepCopy() *ExprParameters {
	if in == nil {
		return nil
	}
	out := new(ExprParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExternalIPIPAddressInitParameters) DeepCopyInto(out *ExternalIPIPAddressInitParameters) {
	*out = *in
	if in.Address != nil {
		in, out := &in.Address, &out.Address
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExternalIPIPAddressInitParameters.
func (in *ExternalIPIPAddressInitParameters) DeepCopy() *ExternalIPIPAddressInitParameters {
	if in == nil {
		return nil
	}
	out := new(ExternalIPIPAddressInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExternalIPIPAddressObservation) DeepCopyInto(out *ExternalIPIPAddressObservation) {
	*out = *in
	if in.Address != nil {
		in, out := &in.Address, &out.Address
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExternalIPIPAddressObservation.
func (in *ExternalIPIPAddressObservation) DeepCopy() *ExternalIPIPAddressObservation {
	if in == nil {
		return nil
	}
	out := new(ExternalIPIPAddressObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExternalIPIPAddressParameters) DeepCopyInto(out *ExternalIPIPAddressParameters) {
	*out = *in
	if in.Address != nil {
		in, out := &in.Address, &out.Address
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExternalIPIPAddressParameters.
func (in *ExternalIPIPAddressParameters) DeepCopy() *ExternalIPIPAddressParameters {
	if in == nil {
		return nil
	}
	out := new(ExternalIPIPAddressParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExternalIPInitParameters) DeepCopyInto(out *ExternalIPInitParameters) {
	*out = *in
	if in.AutoDelete != nil {
		in, out := &in.AutoDelete, &out.AutoDelete
		*out = new(string)
		**out = **in
	}
	if in.IPAddress != nil {
		in, out := &in.IPAddress, &out.IPAddress
		*out = make([]IPAddressInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.InterfaceName != nil {
		in, out := &in.InterfaceName, &out.InterfaceName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExternalIPInitParameters.
func (in *ExternalIPInitParameters) DeepCopy() *ExternalIPInitParameters {
	if in == nil {
		return nil
	}
	out := new(ExternalIPInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExternalIPObservation) DeepCopyInto(out *ExternalIPObservation) {
	*out = *in
	if in.AutoDelete != nil {
		in, out := &in.AutoDelete, &out.AutoDelete
		*out = new(string)
		**out = **in
	}
	if in.IPAddress != nil {
		in, out := &in.IPAddress, &out.IPAddress
		*out = make([]IPAddressObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.InterfaceName != nil {
		in, out := &in.InterfaceName, &out.InterfaceName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExternalIPObservation.
func (in *ExternalIPObservation) DeepCopy() *ExternalIPObservation {
	if in == nil {
		return nil
	}
	out := new(ExternalIPObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExternalIPParameters) DeepCopyInto(out *ExternalIPParameters) {
	*out = *in
	if in.AutoDelete != nil {
		in, out := &in.AutoDelete, &out.AutoDelete
		*out = new(string)
		**out = **in
	}
	if in.IPAddress != nil {
		in, out := &in.IPAddress, &out.IPAddress
		*out = make([]IPAddressParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.InterfaceName != nil {
		in, out := &in.InterfaceName, &out.InterfaceName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExternalIPParameters.
func (in *ExternalIPParameters) DeepCopy() *ExternalIPParameters {
	if in == nil {
		return nil
	}
	out := new(ExternalIPParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExternalVPNGateway) DeepCopyInto(out *ExternalVPNGateway) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExternalVPNGateway.
func (in *ExternalVPNGateway) DeepCopy() *ExternalVPNGateway {
	if in == nil {
		return nil
	}
	out := new(ExternalVPNGateway)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ExternalVPNGateway) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExternalVPNGatewayInitParameters) DeepCopyInto(out *ExternalVPNGatewayInitParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Interface != nil {
		in, out := &in.Interface, &out.Interface
		*out = make([]InterfaceInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.RedundancyType != nil {
		in, out := &in.RedundancyType, &out.RedundancyType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExternalVPNGatewayInitParameters.
func (in *ExternalVPNGatewayInitParameters) DeepCopy() *ExternalVPNGatewayInitParameters {
	if in == nil {
		return nil
	}
	out := new(ExternalVPNGatewayInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExternalVPNGatewayList) DeepCopyInto(out *ExternalVPNGatewayList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ExternalVPNGateway, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExternalVPNGatewayList.
func (in *ExternalVPNGatewayList) DeepCopy() *ExternalVPNGatewayList {
	if in == nil {
		return nil
	}
	out := new(ExternalVPNGatewayList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ExternalVPNGatewayList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExternalVPNGatewayObservation) DeepCopyInto(out *ExternalVPNGatewayObservation) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.EffectiveLabels != nil {
		in, out := &in.EffectiveLabels, &out.EffectiveLabels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Interface != nil {
		in, out := &in.Interface, &out.Interface
		*out = make([]InterfaceObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LabelFingerprint != nil {
		in, out := &in.LabelFingerprint, &out.LabelFingerprint
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.RedundancyType != nil {
		in, out := &in.RedundancyType, &out.RedundancyType
		*out = new(string)
		**out = **in
	}
	if in.SelfLink != nil {
		in, out := &in.SelfLink, &out.SelfLink
		*out = new(string)
		**out = **in
	}
	if in.TerraformLabels != nil {
		in, out := &in.TerraformLabels, &out.TerraformLabels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExternalVPNGatewayObservation.
func (in *ExternalVPNGatewayObservation) DeepCopy() *ExternalVPNGatewayObservation {
	if in == nil {
		return nil
	}
	out := new(ExternalVPNGatewayObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExternalVPNGatewayParameters) DeepCopyInto(out *ExternalVPNGatewayParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Interface != nil {
		in, out := &in.Interface, &out.Interface
		*out = make([]InterfaceParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.RedundancyType != nil {
		in, out := &in.RedundancyType, &out.RedundancyType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExternalVPNGatewayParameters.
func (in *ExternalVPNGatewayParameters) DeepCopy() *ExternalVPNGatewayParameters {
	if in == nil {
		return nil
	}
	out := new(ExternalVPNGatewayParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExternalVPNGatewaySpec) DeepCopyInto(out *ExternalVPNGatewaySpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExternalVPNGatewaySpec.
func (in *ExternalVPNGatewaySpec) DeepCopy() *ExternalVPNGatewaySpec {
	if in == nil {
		return nil
	}
	out := new(ExternalVPNGatewaySpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExternalVPNGatewayStatus) DeepCopyInto(out *ExternalVPNGatewayStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExternalVPNGatewayStatus.
func (in *ExternalVPNGatewayStatus) DeepCopy() *ExternalVPNGatewayStatus {
	if in == nil {
		return nil
	}
	out := new(ExternalVPNGatewayStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FailoverPolicyInitParameters) DeepCopyInto(out *FailoverPolicyInitParameters) {
	*out = *in
	if in.DisableConnectionDrainOnFailover != nil {
		in, out := &in.DisableConnectionDrainOnFailover, &out.DisableConnectionDrainOnFailover
		*out = new(bool)
		**out = **in
	}
	if in.DropTrafficIfUnhealthy != nil {
		in, out := &in.DropTrafficIfUnhealthy, &out.DropTrafficIfUnhealthy
		*out = new(bool)
		**out = **in
	}
	if in.FailoverRatio != nil {
		in, out := &in.FailoverRatio, &out.FailoverRatio
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FailoverPolicyInitParameters.
func (in *FailoverPolicyInitParameters) DeepCopy() *FailoverPolicyInitParameters {
	if in == nil {
		return nil
	}
	out := new(FailoverPolicyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FailoverPolicyObservation) DeepCopyInto(out *FailoverPolicyObservation) {
	*out = *in
	if in.DisableConnectionDrainOnFailover != nil {
		in, out := &in.DisableConnectionDrainOnFailover, &out.DisableConnectionDrainOnFailover
		*out = new(bool)
		**out = **in
	}
	if in.DropTrafficIfUnhealthy != nil {
		in, out := &in.DropTrafficIfUnhealthy, &out.DropTrafficIfUnhealthy
		*out = new(bool)
		**out = **in
	}
	if in.FailoverRatio != nil {
		in, out := &in.FailoverRatio, &out.FailoverRatio
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FailoverPolicyObservation.
func (in *FailoverPolicyObservation) DeepCopy() *FailoverPolicyObservation {
	if in == nil {
		return nil
	}
	out := new(FailoverPolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FailoverPolicyParameters) DeepCopyInto(out *FailoverPolicyParameters) {
	*out = *in
	if in.DisableConnectionDrainOnFailover != nil {
		in, out := &in.DisableConnectionDrainOnFailover, &out.DisableConnectionDrainOnFailover
		*out = new(bool)
		**out = **in
	}
	if in.DropTrafficIfUnhealthy != nil {
		in, out := &in.DropTrafficIfUnhealthy, &out.DropTrafficIfUnhealthy
		*out = new(bool)
		**out = **in
	}
	if in.FailoverRatio != nil {
		in, out := &in.FailoverRatio, &out.FailoverRatio
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FailoverPolicyParameters.
func (in *FailoverPolicyParameters) DeepCopy() *FailoverPolicyParameters {
	if in == nil {
		return nil
	}
	out := new(FailoverPolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FaultInjectionPolicyAbortInitParameters) DeepCopyInto(out *FaultInjectionPolicyAbortInitParameters) {
	*out = *in
	if in.HTTPStatus != nil {
		in, out := &in.HTTPStatus, &out.HTTPStatus
		*out = new(float64)
		**out = **in
	}
	if in.Percentage != nil {
		in, out := &in.Percentage, &out.Percentage
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FaultInjectionPolicyAbortInitParameters.
func (in *FaultInjectionPolicyAbortInitParameters) DeepCopy() *FaultInjectionPolicyAbortInitParameters {
	if in == nil {
		return nil
	}
	out := new(FaultInjectionPolicyAbortInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FaultInjectionPolicyAbortObservation) DeepCopyInto(out *FaultInjectionPolicyAbortObservation) {
	*out = *in
	if in.HTTPStatus != nil {
		in, out := &in.HTTPStatus, &out.HTTPStatus
		*out = new(float64)
		**out = **in
	}
	if in.Percentage != nil {
		in, out := &in.Percentage, &out.Percentage
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FaultInjectionPolicyAbortObservation.
func (in *FaultInjectionPolicyAbortObservation) DeepCopy() *FaultInjectionPolicyAbortObservation {
	if in == nil {
		return nil
	}
	out := new(FaultInjectionPolicyAbortObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FaultInjectionPolicyAbortParameters) DeepCopyInto(out *FaultInjectionPolicyAbortParameters) {
	*out = *in
	if in.HTTPStatus != nil {
		in, out := &in.HTTPStatus, &out.HTTPStatus
		*out = new(float64)
		**out = **in
	}
	if in.Percentage != nil {
		in, out := &in.Percentage, &out.Percentage
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FaultInjectionPolicyAbortParameters.
func (in *FaultInjectionPolicyAbortParameters) DeepCopy() *FaultInjectionPolicyAbortParameters {
	if in == nil {
		return nil
	}
	out := new(FaultInjectionPolicyAbortParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FaultInjectionPolicyDelayFixedDelayInitParameters) DeepCopyInto(out *FaultInjectionPolicyDelayFixedDelayInitParameters) {
	*out = *in
	if in.Nanos != nil {
		in, out := &in.Nanos, &out.Nanos
		*out = new(float64)
		**out = **in
	}
	if in.Seconds != nil {
		in, out := &in.Seconds, &out.Seconds
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FaultInjectionPolicyDelayFixedDelayInitParameters.
func (in *FaultInjectionPolicyDelayFixedDelayInitParameters) DeepCopy() *FaultInjectionPolicyDelayFixedDelayInitParameters {
	if in == nil {
		return nil
	}
	out := new(FaultInjectionPolicyDelayFixedDelayInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FaultInjectionPolicyDelayFixedDelayObservation) DeepCopyInto(out *FaultInjectionPolicyDelayFixedDelayObservation) {
	*out = *in
	if in.Nanos != nil {
		in, out := &in.Nanos, &out.Nanos
		*out = new(float64)
		**out = **in
	}
	if in.Seconds != nil {
		in, out := &in.Seconds, &out.Seconds
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FaultInjectionPolicyDelayFixedDelayObservation.
func (in *FaultInjectionPolicyDelayFixedDelayObservation) DeepCopy() *FaultInjectionPolicyDelayFixedDelayObservation {
	if in == nil {
		return nil
	}
	out := new(FaultInjectionPolicyDelayFixedDelayObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FaultInjectionPolicyDelayFixedDelayParameters) DeepCopyInto(out *FaultInjectionPolicyDelayFixedDelayParameters) {
	*out = *in
	if in.Nanos != nil {
		in, out := &in.Nanos, &out.Nanos
		*out = new(float64)
		**out = **in
	}
	if in.Seconds != nil {
		in, out := &in.Seconds, &out.Seconds
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FaultInjectionPolicyDelayFixedDelayParameters.
func (in *FaultInjectionPolicyDelayFixedDelayParameters) DeepCopy() *FaultInjectionPolicyDelayFixedDelayParameters {
	if in == nil {
		return nil
	}
	out := new(FaultInjectionPolicyDelayFixedDelayParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FaultInjectionPolicyDelayInitParameters) DeepCopyInto(out *FaultInjectionPolicyDelayInitParameters) {
	*out = *in
	if in.FixedDelay != nil {
		in, out := &in.FixedDelay, &out.FixedDelay
		*out = make([]DelayFixedDelayInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Percentage != nil {
		in, out := &in.Percentage, &out.Percentage
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FaultInjectionPolicyDelayInitParameters.
func (in *FaultInjectionPolicyDelayInitParameters) DeepCopy() *FaultInjectionPolicyDelayInitParameters {
	if in == nil {
		return nil
	}
	out := new(FaultInjectionPolicyDelayInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FaultInjectionPolicyDelayObservation) DeepCopyInto(out *FaultInjectionPolicyDelayObservation) {
	*out = *in
	if in.FixedDelay != nil {
		in, out := &in.FixedDelay, &out.FixedDelay
		*out = make([]DelayFixedDelayObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Percentage != nil {
		in, out := &in.Percentage, &out.Percentage
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FaultInjectionPolicyDelayObservation.
func (in *FaultInjectionPolicyDelayObservation) DeepCopy() *FaultInjectionPolicyDelayObservation {
	if in == nil {
		return nil
	}
	out := new(FaultInjectionPolicyDelayObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FaultInjectionPolicyDelayParameters) DeepCopyInto(out *FaultInjectionPolicyDelayParameters) {
	*out = *in
	if in.FixedDelay != nil {
		in, out := &in.FixedDelay, &out.FixedDelay
		*out = make([]DelayFixedDelayParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Percentage != nil {
		in, out := &in.Percentage, &out.Percentage
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FaultInjectionPolicyDelayParameters.
func (in *FaultInjectionPolicyDelayParameters) DeepCopy() *FaultInjectionPolicyDelayParameters {
	if in == nil {
		return nil
	}
	out := new(FaultInjectionPolicyDelayParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FaultInjectionPolicyInitParameters) DeepCopyInto(out *FaultInjectionPolicyInitParameters) {
	*out = *in
	if in.Abort != nil {
		in, out := &in.Abort, &out.Abort
		*out = make([]AbortInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Delay != nil {
		in, out := &in.Delay, &out.Delay
		*out = make([]DelayInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FaultInjectionPolicyInitParameters.
func (in *FaultInjectionPolicyInitParameters) DeepCopy() *FaultInjectionPolicyInitParameters {
	if in == nil {
		return nil
	}
	out := new(FaultInjectionPolicyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FaultInjectionPolicyObservation) DeepCopyInto(out *FaultInjectionPolicyObservation) {
	*out = *in
	if in.Abort != nil {
		in, out := &in.Abort, &out.Abort
		*out = make([]AbortObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Delay != nil {
		in, out := &in.Delay, &out.Delay
		*out = make([]DelayObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FaultInjectionPolicyObservation.
func (in *FaultInjectionPolicyObservation) DeepCopy() *FaultInjectionPolicyObservation {
	if in == nil {
		return nil
	}
	out := new(FaultInjectionPolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FaultInjectionPolicyParameters) DeepCopyInto(out *FaultInjectionPolicyParameters) {
	*out = *in
	if in.Abort != nil {
		in, out := &in.Abort, &out.Abort
		*out = make([]AbortParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Delay != nil {
		in, out := &in.Delay, &out.Delay
		*out = make([]DelayParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FaultInjectionPolicyParameters.
func (in *FaultInjectionPolicyParameters) DeepCopy() *FaultInjectionPolicyParameters {
	if in == nil {
		return nil
	}
	out := new(FaultInjectionPolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FilterInitParameters) DeepCopyInto(out *FilterInitParameters) {
	*out = *in
	if in.CidrRanges != nil {
		in, out := &in.CidrRanges, &out.CidrRanges
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Direction != nil {
		in, out := &in.Direction, &out.Direction
		*out = new(string)
		**out = **in
	}
	if in.IPProtocols != nil {
		in, out := &in.IPProtocols, &out.IPProtocols
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FilterInitParameters.
func (in *FilterInitParameters) DeepCopy() *FilterInitParameters {
	if in == nil {
		return nil
	}
	out := new(FilterInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FilterLabelsInitParameters) DeepCopyInto(out *FilterLabelsInitParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FilterLabelsInitParameters.
func (in *FilterLabelsInitParameters) DeepCopy() *FilterLabelsInitParameters {
	if in == nil {
		return nil
	}
	out := new(FilterLabelsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FilterLabelsObservation) DeepCopyInto(out *FilterLabelsObservation) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FilterLabelsObservation.
func (in *FilterLabelsObservation) DeepCopy() *FilterLabelsObservation {
	if in == nil {
		return nil
	}
	out := new(FilterLabelsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FilterLabelsParameters) DeepCopyInto(out *FilterLabelsParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FilterLabelsParameters.
func (in *FilterLabelsParameters) DeepCopy() *FilterLabelsParameters {
	if in == nil {
		return nil
	}
	out := new(FilterLabelsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FilterObservation) DeepCopyInto(out *FilterObservation) {
	*out = *in
	if in.CidrRanges != nil {
		in, out := &in.CidrRanges, &out.CidrRanges
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Direction != nil {
		in, out := &in.Direction, &out.Direction
		*out = new(string)
		**out = **in
	}
	if in.IPProtocols != nil {
		in, out := &in.IPProtocols, &out.IPProtocols
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FilterObservation.
func (in *FilterObservation) DeepCopy() *FilterObservation {
	if in == nil {
		return nil
	}
	out := new(FilterObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FilterParameters) DeepCopyInto(out *FilterParameters) {
	*out = *in
	if in.CidrRanges != nil {
		in, out := &in.CidrRanges, &out.CidrRanges
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Direction != nil {
		in, out := &in.Direction, &out.Direction
		*out = new(string)
		**out = **in
	}
	if in.IPProtocols != nil {
		in, out := &in.IPProtocols, &out.IPProtocols
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FilterParameters.
func (in *FilterParameters) DeepCopy() *FilterParameters {
	if in == nil {
		return nil
	}
	out := new(FilterParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Firewall) DeepCopyInto(out *Firewall) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Firewall.
func (in *Firewall) DeepCopy() *Firewall {
	if in == nil {
		return nil
	}
	out := new(Firewall)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Firewall) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FirewallInitParameters) DeepCopyInto(out *FirewallInitParameters) {
	*out = *in
	if in.Allow != nil {
		in, out := &in.Allow, &out.Allow
		*out = make([]AllowInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Deny != nil {
		in, out := &in.Deny, &out.Deny
		*out = make([]DenyInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DestinationRanges != nil {
		in, out := &in.DestinationRanges, &out.DestinationRanges
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Direction != nil {
		in, out := &in.Direction, &out.Direction
		*out = new(string)
		**out = **in
	}
	if in.Disabled != nil {
		in, out := &in.Disabled, &out.Disabled
		*out = new(bool)
		**out = **in
	}
	if in.EnableLogging != nil {
		in, out := &in.EnableLogging, &out.EnableLogging
		*out = new(bool)
		**out = **in
	}
	if in.LogConfig != nil {
		in, out := &in.LogConfig, &out.LogConfig
		*out = make([]FirewallLogConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Network != nil {
		in, out := &in.Network, &out.Network
		*out = new(string)
		**out = **in
	}
	if in.NetworkRef != nil {
		in, out := &in.NetworkRef, &out.NetworkRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.NetworkSelector != nil {
		in, out := &in.NetworkSelector, &out.NetworkSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Priority != nil {
		in, out := &in.Priority, &out.Priority
		*out = new(float64)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.SourceRanges != nil {
		in, out := &in.SourceRanges, &out.SourceRanges
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SourceServiceAccounts != nil {
		in, out := &in.SourceServiceAccounts, &out.SourceServiceAccounts
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SourceTags != nil {
		in, out := &in.SourceTags, &out.SourceTags
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.TargetServiceAccounts != nil {
		in, out := &in.TargetServiceAccounts, &out.TargetServiceAccounts
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.TargetTags != nil {
		in, out := &in.TargetTags, &out.TargetTags
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FirewallInitParameters.
func (in *FirewallInitParameters) DeepCopy() *FirewallInitParameters {
	if in == nil {
		return nil
	}
	out := new(FirewallInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FirewallList) DeepCopyInto(out *FirewallList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Firewall, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FirewallList.
func (in *FirewallList) DeepCopy() *FirewallList {
	if in == nil {
		return nil
	}
	out := new(FirewallList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *FirewallList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FirewallLogConfigInitParameters) DeepCopyInto(out *FirewallLogConfigInitParameters) {
	*out = *in
	if in.Metadata != nil {
		in, out := &in.Metadata, &out.Metadata
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FirewallLogConfigInitParameters.
func (in *FirewallLogConfigInitParameters) DeepCopy() *FirewallLogConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(FirewallLogConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FirewallLogConfigObservation) DeepCopyInto(out *FirewallLogConfigObservation) {
	*out = *in
	if in.Metadata != nil {
		in, out := &in.Metadata, &out.Metadata
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FirewallLogConfigObservation.
func (in *FirewallLogConfigObservation) DeepCopy() *FirewallLogConfigObservation {
	if in == nil {
		return nil
	}
	out := new(FirewallLogConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FirewallLogConfigParameters) DeepCopyInto(out *FirewallLogConfigParameters) {
	*out = *in
	if in.Metadata != nil {
		in, out := &in.Metadata, &out.Metadata
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FirewallLogConfigParameters.
func (in *FirewallLogConfigParameters) DeepCopy() *FirewallLogConfigParameters {
	if in == nil {
		return nil
	}
	out := new(FirewallLogConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FirewallObservation) DeepCopyInto(out *FirewallObservation) {
	*out = *in
	if in.Allow != nil {
		in, out := &in.Allow, &out.Allow
		*out = make([]AllowObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CreationTimestamp != nil {
		in, out := &in.CreationTimestamp, &out.CreationTimestamp
		*out = new(string)
		**out = **in
	}
	if in.Deny != nil {
		in, out := &in.Deny, &out.Deny
		*out = make([]DenyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DestinationRanges != nil {
		in, out := &in.DestinationRanges, &out.DestinationRanges
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Direction != nil {
		in, out := &in.Direction, &out.Direction
		*out = new(string)
		**out = **in
	}
	if in.Disabled != nil {
		in, out := &in.Disabled, &out.Disabled
		*out = new(bool)
		**out = **in
	}
	if in.EnableLogging != nil {
		in, out := &in.EnableLogging, &out.EnableLogging
		*out = new(bool)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.LogConfig != nil {
		in, out := &in.LogConfig, &out.LogConfig
		*out = make([]FirewallLogConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Network != nil {
		in, out := &in.Network, &out.Network
		*out = new(string)
		**out = **in
	}
	if in.Priority != nil {
		in, out := &in.Priority, &out.Priority
		*out = new(float64)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.SelfLink != nil {
		in, out := &in.SelfLink, &out.SelfLink
		*out = new(string)
		**out = **in
	}
	if in.SourceRanges != nil {
		in, out := &in.SourceRanges, &out.SourceRanges
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SourceServiceAccounts != nil {
		in, out := &in.SourceServiceAccounts, &out.SourceServiceAccounts
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SourceTags != nil {
		in, out := &in.SourceTags, &out.SourceTags
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.TargetServiceAccounts != nil {
		in, out := &in.TargetServiceAccounts, &out.TargetServiceAccounts
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.TargetTags != nil {
		in, out := &in.TargetTags, &out.TargetTags
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FirewallObservation.
func (in *FirewallObservation) DeepCopy() *FirewallObservation {
	if in == nil {
		return nil
	}
	out := new(FirewallObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FirewallParameters) DeepCopyInto(out *FirewallParameters) {
	*out = *in
	if in.Allow != nil {
		in, out := &in.Allow, &out.Allow
		*out = make([]AllowParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Deny != nil {
		in, out := &in.Deny, &out.Deny
		*out = make([]DenyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DestinationRanges != nil {
		in, out := &in.DestinationRanges, &out.DestinationRanges
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Direction != nil {
		in, out := &in.Direction, &out.Direction
		*out = new(string)
		**out = **in
	}
	if in.Disabled != nil {
		in, out := &in.Disabled, &out.Disabled
		*out = new(bool)
		**out = **in
	}
	if in.EnableLogging != nil {
		in, out := &in.EnableLogging, &out.EnableLogging
		*out = new(bool)
		**out = **in
	}
	if in.LogConfig != nil {
		in, out := &in.LogConfig, &out.LogConfig
		*out = make([]FirewallLogConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Network != nil {
		in, out := &in.Network, &out.Network
		*out = new(string)
		**out = **in
	}
	if in.NetworkRef != nil {
		in, out := &in.NetworkRef, &out.NetworkRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.NetworkSelector != nil {
		in, out := &in.NetworkSelector, &out.NetworkSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Priority != nil {
		in, out := &in.Priority, &out.Priority
		*out = new(float64)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.SourceRanges != nil {
		in, out := &in.SourceRanges, &out.SourceRanges
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SourceServiceAccounts != nil {
		in, out := &in.SourceServiceAccounts, &out.SourceServiceAccounts
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SourceTags != nil {
		in, out := &in.SourceTags, &out.SourceTags
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.TargetServiceAccounts != nil {
		in, out := &in.TargetServiceAccounts, &out.TargetServiceAccounts
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.TargetTags != nil {
		in, out := &in.TargetTags, &out.TargetTags
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FirewallParameters.
func (in *FirewallParameters) DeepCopy() *FirewallParameters {
	if in == nil {
		return nil
	}
	out := new(FirewallParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FirewallPolicy) DeepCopyInto(out *FirewallPolicy) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FirewallPolicy.
func (in *FirewallPolicy) DeepCopy() *FirewallPolicy {
	if in == nil {
		return nil
	}
	out := new(FirewallPolicy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *FirewallPolicy) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FirewallPolicyAssociation) DeepCopyInto(out *FirewallPolicyAssociation) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FirewallPolicyAssociation.
func (in *FirewallPolicyAssociation) DeepCopy() *FirewallPolicyAssociation {
	if in == nil {
		return nil
	}
	out := new(FirewallPolicyAssociation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *FirewallPolicyAssociation) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FirewallPolicyAssociationInitParameters) DeepCopyInto(out *FirewallPolicyAssociationInitParameters) {
	*out = *in
	if in.AttachmentTarget != nil {
		in, out := &in.AttachmentTarget, &out.AttachmentTarget
		*out = new(string)
		**out = **in
	}
	if in.AttachmentTargetRef != nil {
		in, out := &in.AttachmentTargetRef, &out.AttachmentTargetRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.AttachmentTargetSelector != nil {
		in, out := &in.AttachmentTargetSelector, &out.AttachmentTargetSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.FirewallPolicy != nil {
		in, out := &in.FirewallPolicy, &out.FirewallPolicy
		*out = new(string)
		**out = **in
	}
	if in.FirewallPolicyRef != nil {
		in, out := &in.FirewallPolicyRef, &out.FirewallPolicyRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.FirewallPolicySelector != nil {
		in, out := &in.FirewallPolicySelector, &out.FirewallPolicySelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FirewallPolicyAssociationInitParameters.
func (in *FirewallPolicyAssociationInitParameters) DeepCopy() *FirewallPolicyAssociationInitParameters {
	if in == nil {
		return nil
	}
	out := new(FirewallPolicyAssociationInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FirewallPolicyAssociationList) DeepCopyInto(out *FirewallPolicyAssociationList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]FirewallPolicyAssociation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FirewallPolicyAssociationList.
func (in *FirewallPolicyAssociationList) DeepCopy() *FirewallPolicyAssociationList {
	if in == nil {
		return nil
	}
	out := new(FirewallPolicyAssociationList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *FirewallPolicyAssociationList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FirewallPolicyAssociationObservation) DeepCopyInto(out *FirewallPolicyAssociationObservation) {
	*out = *in
	if in.AttachmentTarget != nil {
		in, out := &in.AttachmentTarget, &out.AttachmentTarget
		*out = new(string)
		**out = **in
	}
	if in.FirewallPolicy != nil {
		in, out := &in.FirewallPolicy, &out.FirewallPolicy
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ShortName != nil {
		in, out := &in.ShortName, &out.ShortName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FirewallPolicyAssociationObservation.
func (in *FirewallPolicyAssociationObservation) DeepCopy() *FirewallPolicyAssociationObservation {
	if in == nil {
		return nil
	}
	out := new(FirewallPolicyAssociationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FirewallPolicyAssociationParameters) DeepCopyInto(out *FirewallPolicyAssociationParameters) {
	*out = *in
	if in.AttachmentTarget != nil {
		in, out := &in.AttachmentTarget, &out.AttachmentTarget
		*out = new(string)
		**out = **in
	}
	if in.AttachmentTargetRef != nil {
		in, out := &in.AttachmentTargetRef, &out.AttachmentTargetRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.AttachmentTargetSelector != nil {
		in, out := &in.AttachmentTargetSelector, &out.AttachmentTargetSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.FirewallPolicy != nil {
		in, out := &in.FirewallPolicy, &out.FirewallPolicy
		*out = new(string)
		**out = **in
	}
	if in.FirewallPolicyRef != nil {
		in, out := &in.FirewallPolicyRef, &out.FirewallPolicyRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.FirewallPolicySelector != nil {
		in, out := &in.FirewallPolicySelector, &out.FirewallPolicySelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FirewallPolicyAssociationParameters.
func (in *FirewallPolicyAssociationParameters) DeepCopy() *FirewallPolicyAssociationParameters {
	if in == nil {
		return nil
	}
	out := new(FirewallPolicyAssociationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FirewallPolicyAssociationSpec) DeepCopyInto(out *FirewallPolicyAssociationSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FirewallPolicyAssociationSpec.
func (in *FirewallPolicyAssociationSpec) DeepCopy() *FirewallPolicyAssociationSpec {
	if in == nil {
		return nil
	}
	out := new(FirewallPolicyAssociationSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FirewallPolicyAssociationStatus) DeepCopyInto(out *FirewallPolicyAssociationStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FirewallPolicyAssociationStatus.
func (in *FirewallPolicyAssociationStatus) DeepCopy() *FirewallPolicyAssociationStatus {
	if in == nil {
		return nil
	}
	out := new(FirewallPolicyAssociationStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FirewallPolicyInitParameters) DeepCopyInto(out *FirewallPolicyInitParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Parent != nil {
		in, out := &in.Parent, &out.Parent
		*out = new(string)
		**out = **in
	}
	if in.ShortName != nil {
		in, out := &in.ShortName, &out.ShortName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FirewallPolicyInitParameters.
func (in *FirewallPolicyInitParameters) DeepCopy() *FirewallPolicyInitParameters {
	if in == nil {
		return nil
	}
	out := new(FirewallPolicyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FirewallPolicyList) DeepCopyInto(out *FirewallPolicyList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]FirewallPolicy, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FirewallPolicyList.
func (in *FirewallPolicyList) DeepCopy() *FirewallPolicyList {
	if in == nil {
		return nil
	}
	out := new(FirewallPolicyList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *FirewallPolicyList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FirewallPolicyObservation) DeepCopyInto(out *FirewallPolicyObservation) {
	*out = *in
	if in.CreationTimestamp != nil {
		in, out := &in.CreationTimestamp, &out.CreationTimestamp
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Fingerprint != nil {
		in, out := &in.Fingerprint, &out.Fingerprint
		*out = new(string)
		**out = **in
	}
	if in.FirewallPolicyID != nil {
		in, out := &in.FirewallPolicyID, &out.FirewallPolicyID
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Parent != nil {
		in, out := &in.Parent, &out.Parent
		*out = new(string)
		**out = **in
	}
	if in.RuleTupleCount != nil {
		in, out := &in.RuleTupleCount, &out.RuleTupleCount
		*out = new(float64)
		**out = **in
	}
	if in.SelfLink != nil {
		in, out := &in.SelfLink, &out.SelfLink
		*out = new(string)
		**out = **in
	}
	if in.SelfLinkWithID != nil {
		in, out := &in.SelfLinkWithID, &out.SelfLinkWithID
		*out = new(string)
		**out = **in
	}
	if in.ShortName != nil {
		in, out := &in.ShortName, &out.ShortName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FirewallPolicyObservation.
func (in *FirewallPolicyObservation) DeepCopy() *FirewallPolicyObservation {
	if in == nil {
		return nil
	}
	out := new(FirewallPolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FirewallPolicyParameters) DeepCopyInto(out *FirewallPolicyParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Parent != nil {
		in, out := &in.Parent, &out.Parent
		*out = new(string)
		**out = **in
	}
	if in.ShortName != nil {
		in, out := &in.ShortName, &out.ShortName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FirewallPolicyParameters.
func (in *FirewallPolicyParameters) DeepCopy() *FirewallPolicyParameters {
	if in == nil {
		return nil
	}
	out := new(FirewallPolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FirewallPolicyRule) DeepCopyInto(out *FirewallPolicyRule) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FirewallPolicyRule.
func (in *FirewallPolicyRule) DeepCopy() *FirewallPolicyRule {
	if in == nil {
		return nil
	}
	out := new(FirewallPolicyRule)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *FirewallPolicyRule) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FirewallPolicyRuleInitParameters) DeepCopyInto(out *FirewallPolicyRuleInitParameters) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Direction != nil {
		in, out := &in.Direction, &out.Direction
		*out = new(string)
		**out = **in
	}
	if in.Disabled != nil {
		in, out := &in.Disabled, &out.Disabled
		*out = new(bool)
		**out = **in
	}
	if in.EnableLogging != nil {
		in, out := &in.EnableLogging, &out.EnableLogging
		*out = new(bool)
		**out = **in
	}
	if in.FirewallPolicy != nil {
		in, out := &in.FirewallPolicy, &out.FirewallPolicy
		*out = new(string)
		**out = **in
	}
	if in.FirewallPolicyRef != nil {
		in, out := &in.FirewallPolicyRef, &out.FirewallPolicyRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.FirewallPolicySelector != nil {
		in, out := &in.FirewallPolicySelector, &out.FirewallPolicySelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Match != nil {
		in, out := &in.Match, &out.Match
		*out = make([]MatchInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Priority != nil {
		in, out := &in.Priority, &out.Priority
		*out = new(float64)
		**out = **in
	}
	if in.SecurityProfileGroup != nil {
		in, out := &in.SecurityProfileGroup, &out.SecurityProfileGroup
		*out = new(string)
		**out = **in
	}
	if in.TLSInspect != nil {
		in, out := &in.TLSInspect, &out.TLSInspect
		*out = new(bool)
		**out = **in
	}
	if in.TargetResources != nil {
		in, out := &in.TargetResources, &out.TargetResources
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.TargetServiceAccounts != nil {
		in, out := &in.TargetServiceAccounts, &out.TargetServiceAccounts
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FirewallPolicyRuleInitParameters.
func (in *FirewallPolicyRuleInitParameters) DeepCopy() *FirewallPolicyRuleInitParameters {
	if in == nil {
		return nil
	}
	out := new(FirewallPolicyRuleInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FirewallPolicyRuleList) DeepCopyInto(out *FirewallPolicyRuleList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]FirewallPolicyRule, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FirewallPolicyRuleList.
func (in *FirewallPolicyRuleList) DeepCopy() *FirewallPolicyRuleList {
	if in == nil {
		return nil
	}
	out := new(FirewallPolicyRuleList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *FirewallPolicyRuleList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FirewallPolicyRuleObservation) DeepCopyInto(out *FirewallPolicyRuleObservation) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Direction != nil {
		in, out := &in.Direction, &out.Direction
		*out = new(string)
		**out = **in
	}
	if in.Disabled != nil {
		in, out := &in.Disabled, &out.Disabled
		*out = new(bool)
		**out = **in
	}
	if in.EnableLogging != nil {
		in, out := &in.EnableLogging, &out.EnableLogging
		*out = new(bool)
		**out = **in
	}
	if in.FirewallPolicy != nil {
		in, out := &in.FirewallPolicy, &out.FirewallPolicy
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Kind != nil {
		in, out := &in.Kind, &out.Kind
		*out = new(string)
		**out = **in
	}
	if in.Match != nil {
		in, out := &in.Match, &out.Match
		*out = make([]MatchObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Priority != nil {
		in, out := &in.Priority, &out.Priority
		*out = new(float64)
		**out = **in
	}
	if in.RuleTupleCount != nil {
		in, out := &in.RuleTupleCount, &out.RuleTupleCount
		*out = new(float64)
		**out = **in
	}
	if in.SecurityProfileGroup != nil {
		in, out := &in.SecurityProfileGroup, &out.SecurityProfileGroup
		*out = new(string)
		**out = **in
	}
	if in.TLSInspect != nil {
		in, out := &in.TLSInspect, &out.TLSInspect
		*out = new(bool)
		**out = **in
	}
	if in.TargetResources != nil {
		in, out := &in.TargetResources, &out.TargetResources
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.TargetServiceAccounts != nil {
		in, out := &in.TargetServiceAccounts, &out.TargetServiceAccounts
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FirewallPolicyRuleObservation.
func (in *FirewallPolicyRuleObservation) DeepCopy() *FirewallPolicyRuleObservation {
	if in == nil {
		return nil
	}
	out := new(FirewallPolicyRuleObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FirewallPolicyRuleParameters) DeepCopyInto(out *FirewallPolicyRuleParameters) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Direction != nil {
		in, out := &in.Direction, &out.Direction
		*out = new(string)
		**out = **in
	}
	if in.Disabled != nil {
		in, out := &in.Disabled, &out.Disabled
		*out = new(bool)
		**out = **in
	}
	if in.EnableLogging != nil {
		in, out := &in.EnableLogging, &out.EnableLogging
		*out = new(bool)
		**out = **in
	}
	if in.FirewallPolicy != nil {
		in, out := &in.FirewallPolicy, &out.FirewallPolicy
		*out = new(string)
		**out = **in
	}
	if in.FirewallPolicyRef != nil {
		in, out := &in.FirewallPolicyRef, &out.FirewallPolicyRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.FirewallPolicySelector != nil {
		in, out := &in.FirewallPolicySelector, &out.FirewallPolicySelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Match != nil {
		in, out := &in.Match, &out.Match
		*out = make([]MatchParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Priority != nil {
		in, out := &in.Priority, &out.Priority
		*out = new(float64)
		**out = **in
	}
	if in.SecurityProfileGroup != nil {
		in, out := &in.SecurityProfileGroup, &out.SecurityProfileGroup
		*out = new(string)
		**out = **in
	}
	if in.TLSInspect != nil {
		in, out := &in.TLSInspect, &out.TLSInspect
		*out = new(bool)
		**out = **in
	}
	if in.TargetResources != nil {
		in, out := &in.TargetResources, &out.TargetResources
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.TargetServiceAccounts != nil {
		in, out := &in.TargetServiceAccounts, &out.TargetServiceAccounts
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FirewallPolicyRuleParameters.
func (in *FirewallPolicyRuleParameters) DeepCopy() *FirewallPolicyRuleParameters {
	if in == nil {
		return nil
	}
	out := new(FirewallPolicyRuleParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FirewallPolicyRuleSpec) DeepCopyInto(out *FirewallPolicyRuleSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FirewallPolicyRuleSpec.
func (in *FirewallPolicyRuleSpec) DeepCopy() *FirewallPolicyRuleSpec {
	if in == nil {
		return nil
	}
	out := new(FirewallPolicyRuleSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FirewallPolicyRuleStatus) DeepCopyInto(out *FirewallPolicyRuleStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FirewallPolicyRuleStatus.
func (in *FirewallPolicyRuleStatus) DeepCopy() *FirewallPolicyRuleStatus {
	if in == nil {
		return nil
	}
	out := new(FirewallPolicyRuleStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FirewallPolicySpec) DeepCopyInto(out *FirewallPolicySpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FirewallPolicySpec.
func (in *FirewallPolicySpec) DeepCopy() *FirewallPolicySpec {
	if in == nil {
		return nil
	}
	out := new(FirewallPolicySpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FirewallPolicyStatus) DeepCopyInto(out *FirewallPolicyStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FirewallPolicyStatus.
func (in *FirewallPolicyStatus) DeepCopy() *FirewallPolicyStatus {
	if in == nil {
		return nil
	}
	out := new(FirewallPolicyStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FirewallSpec) DeepCopyInto(out *FirewallSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FirewallSpec.
func (in *FirewallSpec) DeepCopy() *FirewallSpec {
	if in == nil {
		return nil
	}
	out := new(FirewallSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FirewallStatus) DeepCopyInto(out *FirewallStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FirewallStatus.
func (in *FirewallStatus) DeepCopy() *FirewallStatus {
	if in == nil {
		return nil
	}
	out := new(FirewallStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FixedDelayInitParameters) DeepCopyInto(out *FixedDelayInitParameters) {
	*out = *in
	if in.Nanos != nil {
		in, out := &in.Nanos, &out.Nanos
		*out = new(float64)
		**out = **in
	}
	if in.Seconds != nil {
		in, out := &in.Seconds, &out.Seconds
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FixedDelayInitParameters.
func (in *FixedDelayInitParameters) DeepCopy() *FixedDelayInitParameters {
	if in == nil {
		return nil
	}
	out := new(FixedDelayInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FixedDelayObservation) DeepCopyInto(out *FixedDelayObservation) {
	*out = *in
	if in.Nanos != nil {
		in, out := &in.Nanos, &out.Nanos
		*out = new(float64)
		**out = **in
	}
	if in.Seconds != nil {
		in, out := &in.Seconds, &out.Seconds
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FixedDelayObservation.
func (in *FixedDelayObservation) DeepCopy() *FixedDelayObservation {
	if in == nil {
		return nil
	}
	out := new(FixedDelayObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FixedDelayParameters) DeepCopyInto(out *FixedDelayParameters) {
	*out = *in
	if in.Nanos != nil {
		in, out := &in.Nanos, &out.Nanos
		*out = new(float64)
		**out = **in
	}
	if in.Seconds != nil {
		in, out := &in.Seconds, &out.Seconds
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FixedDelayParameters.
func (in *FixedDelayParameters) DeepCopy() *FixedDelayParameters {
	if in == nil {
		return nil
	}
	out := new(FixedDelayParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ForwardingRule) DeepCopyInto(out *ForwardingRule) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ForwardingRule.
func (in *ForwardingRule) DeepCopy() *ForwardingRule {
	if in == nil {
		return nil
	}
	out := new(ForwardingRule)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ForwardingRule) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ForwardingRuleInitParameters) DeepCopyInto(out *ForwardingRuleInitParameters) {
	*out = *in
	if in.AllPorts != nil {
		in, out := &in.AllPorts, &out.AllPorts
		*out = new(bool)
		**out = **in
	}
	if in.AllowGlobalAccess != nil {
		in, out := &in.AllowGlobalAccess, &out.AllowGlobalAccess
		*out = new(bool)
		**out = **in
	}
	if in.AllowPscGlobalAccess != nil {
		in, out := &in.AllowPscGlobalAccess, &out.AllowPscGlobalAccess
		*out = new(bool)
		**out = **in
	}
	if in.BackendService != nil {
		in, out := &in.BackendService, &out.BackendService
		*out = new(string)
		**out = **in
	}
	if in.BackendServiceRef != nil {
		in, out := &in.BackendServiceRef, &out.BackendServiceRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.BackendServiceSelector != nil {
		in, out := &in.BackendServiceSelector, &out.BackendServiceSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.IPAddress != nil {
		in, out := &in.IPAddress, &out.IPAddress
		*out = new(string)
		**out = **in
	}
	if in.IPAddressRef != nil {
		in, out := &in.IPAddressRef, &out.IPAddressRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.IPAddressSelector != nil {
		in, out := &in.IPAddressSelector, &out.IPAddressSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.IPProtocol != nil {
		in, out := &in.IPProtocol, &out.IPProtocol
		*out = new(string)
		**out = **in
	}
	if in.IPVersion != nil {
		in, out := &in.IPVersion, &out.IPVersion
		*out = new(string)
		**out = **in
	}
	if in.IsMirroringCollector != nil {
		in, out := &in.IsMirroringCollector, &out.IsMirroringCollector
		*out = new(bool)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.LoadBalancingScheme != nil {
		in, out := &in.LoadBalancingScheme, &out.LoadBalancingScheme
		*out = new(string)
		**out = **in
	}
	if in.Network != nil {
		in, out := &in.Network, &out.Network
		*out = new(string)
		**out = **in
	}
	if in.NetworkRef != nil {
		in, out := &in.NetworkRef, &out.NetworkRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.NetworkSelector != nil {
		in, out := &in.NetworkSelector, &out.NetworkSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.NetworkTier != nil {
		in, out := &in.NetworkTier, &out.NetworkTier
		*out = new(string)
		**out = **in
	}
	if in.NoAutomateDNSZone != nil {
		in, out := &in.NoAutomateDNSZone, &out.NoAutomateDNSZone
		*out = new(bool)
		**out = **in
	}
	if in.PortRange != nil {
		in, out := &in.PortRange, &out.PortRange
		*out = new(string)
		**out = **in
	}
	if in.Ports != nil {
		in, out := &in.Ports, &out.Ports
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.RecreateClosedPsc != nil {
		in, out := &in.RecreateClosedPsc, &out.RecreateClosedPsc
		*out = new(bool)
		**out = **in
	}
	if in.ServiceDirectoryRegistrations != nil {
		in, out := &in.ServiceDirectoryRegistrations, &out.ServiceDirectoryRegistrations
		*out = make([]ServiceDirectoryRegistrationsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ServiceLabel != nil {
		in, out := &in.ServiceLabel, &out.ServiceLabel
		*out = new(string)
		**out = **in
	}
	if in.SourceIPRanges != nil {
		in, out := &in.SourceIPRanges, &out.SourceIPRanges
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Subnetwork != nil {
		in, out := &in.Subnetwork, &out.Subnetwork
		*out = new(string)
		**out = **in
	}
	if in.SubnetworkRef != nil {
		in, out := &in.SubnetworkRef, &out.SubnetworkRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SubnetworkSelector != nil {
		in, out := &in.SubnetworkSelector, &out.SubnetworkSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Target != nil {
		in, out := &in.Target, &out.Target
		*out = new(string)
		**out = **in
	}
	if in.TargetRef != nil {
		in, out := &in.TargetRef, &out.TargetRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.TargetSelector != nil {
		in, out := &in.TargetSelector, &out.TargetSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ForwardingRuleInitParameters.
func (in *ForwardingRuleInitParameters) DeepCopy() *ForwardingRuleInitParameters {
	if in == nil {
		return nil
	}
	out := new(ForwardingRuleInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ForwardingRuleList) DeepCopyInto(out *ForwardingRuleList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ForwardingRule, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ForwardingRuleList.
func (in *ForwardingRuleList) DeepCopy() *ForwardingRuleList {
	if in == nil {
		return nil
	}
	out := new(ForwardingRuleList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ForwardingRuleList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ForwardingRuleObservation) DeepCopyInto(out *ForwardingRuleObservation) {
	*out = *in
	if in.AllPorts != nil {
		in, out := &in.AllPorts, &out.AllPorts
		*out = new(bool)
		**out = **in
	}
	if in.AllowGlobalAccess != nil {
		in, out := &in.AllowGlobalAccess, &out.AllowGlobalAccess
		*out = new(bool)
		**out = **in
	}
	if in.AllowPscGlobalAccess != nil {
		in, out := &in.AllowPscGlobalAccess, &out.AllowPscGlobalAccess
		*out = new(bool)
		**out = **in
	}
	if in.BackendService != nil {
		in, out := &in.BackendService, &out.BackendService
		*out = new(string)
		**out = **in
	}
	if in.BaseForwardingRule != nil {
		in, out := &in.BaseForwardingRule, &out.BaseForwardingRule
		*out = new(string)
		**out = **in
	}
	if in.CreationTimestamp != nil {
		in, out := &in.CreationTimestamp, &out.CreationTimestamp
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.EffectiveLabels != nil {
		in, out := &in.EffectiveLabels, &out.EffectiveLabels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IPAddress != nil {
		in, out := &in.IPAddress, &out.IPAddress
		*out = new(string)
		**out = **in
	}
	if in.IPProtocol != nil {
		in, out := &in.IPProtocol, &out.IPProtocol
		*out = new(string)
		**out = **in
	}
	if in.IPVersion != nil {
		in, out := &in.IPVersion, &out.IPVersion
		*out = new(string)
		**out = **in
	}
	if in.IsMirroringCollector != nil {
		in, out := &in.IsMirroringCollector, &out.IsMirroringCollector
		*out = new(bool)
		**out = **in
	}
	if in.LabelFingerprint != nil {
		in, out := &in.LabelFingerprint, &out.LabelFingerprint
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.LoadBalancingScheme != nil {
		in, out := &in.LoadBalancingScheme, &out.LoadBalancingScheme
		*out = new(string)
		**out = **in
	}
	if in.Network != nil {
		in, out := &in.Network, &out.Network
		*out = new(string)
		**out = **in
	}
	if in.NetworkTier != nil {
		in, out := &in.NetworkTier, &out.NetworkTier
		*out = new(string)
		**out = **in
	}
	if in.NoAutomateDNSZone != nil {
		in, out := &in.NoAutomateDNSZone, &out.NoAutomateDNSZone
		*out = new(bool)
		**out = **in
	}
	if in.PortRange != nil {
		in, out := &in.PortRange, &out.PortRange
		*out = new(string)
		**out = **in
	}
	if in.Ports != nil {
		in, out := &in.Ports, &out.Ports
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.PscConnectionID != nil {
		in, out := &in.PscConnectionID, &out.PscConnectionID
		*out = new(string)
		**out = **in
	}
	if in.PscConnectionStatus != nil {
		in, out := &in.PscConnectionStatus, &out.PscConnectionStatus
		*out = new(string)
		**out = **in
	}
	if in.RecreateClosedPsc != nil {
		in, out := &in.RecreateClosedPsc, &out.RecreateClosedPsc
		*out = new(bool)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.SelfLink != nil {
		in, out := &in.SelfLink, &out.SelfLink
		*out = new(string)
		**out = **in
	}
	if in.ServiceDirectoryRegistrations != nil {
		in, out := &in.ServiceDirectoryRegistrations, &out.ServiceDirectoryRegistrations
		*out = make([]ServiceDirectoryRegistrationsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ServiceLabel != nil {
		in, out := &in.ServiceLabel, &out.ServiceLabel
		*out = new(string)
		**out = **in
	}
	if in.ServiceName != nil {
		in, out := &in.ServiceName, &out.ServiceName
		*out = new(string)
		**out = **in
	}
	if in.SourceIPRanges != nil {
		in, out := &in.SourceIPRanges, &out.SourceIPRanges
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Subnetwork != nil {
		in, out := &in.Subnetwork, &out.Subnetwork
		*out = new(string)
		**out = **in
	}
	if in.Target != nil {
		in, out := &in.Target, &out.Target
		*out = new(string)
		**out = **in
	}
	if in.TerraformLabels != nil {
		in, out := &in.TerraformLabels, &out.TerraformLabels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ForwardingRuleObservation.
func (in *ForwardingRuleObservation) DeepCopy() *ForwardingRuleObservation {
	if in == nil {
		return nil
	}
	out := new(ForwardingRuleObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ForwardingRuleParameters) DeepCopyInto(out *ForwardingRuleParameters) {
	*out = *in
	if in.AllPorts != nil {
		in, out := &in.AllPorts, &out.AllPorts
		*out = new(bool)
		**out = **in
	}
	if in.AllowGlobalAccess != nil {
		in, out := &in.AllowGlobalAccess, &out.AllowGlobalAccess
		*out = new(bool)
		**out = **in
	}
	if in.AllowPscGlobalAccess != nil {
		in, out := &in.AllowPscGlobalAccess, &out.AllowPscGlobalAccess
		*out = new(bool)
		**out = **in
	}
	if in.BackendService != nil {
		in, out := &in.BackendService, &out.BackendService
		*out = new(string)
		**out = **in
	}
	if in.BackendServiceRef != nil {
		in, out := &in.BackendServiceRef, &out.BackendServiceRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.BackendServiceSelector != nil {
		in, out := &in.BackendServiceSelector, &out.BackendServiceSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.IPAddress != nil {
		in, out := &in.IPAddress, &out.IPAddress
		*out = new(string)
		**out = **in
	}
	if in.IPAddressRef != nil {
		in, out := &in.IPAddressRef, &out.IPAddressRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.IPAddressSelector != nil {
		in, out := &in.IPAddressSelector, &out.IPAddressSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.IPProtocol != nil {
		in, out := &in.IPProtocol, &out.IPProtocol
		*out = new(string)
		**out = **in
	}
	if in.IPVersion != nil {
		in, out := &in.IPVersion, &out.IPVersion
		*out = new(string)
		**out = **in
	}
	if in.IsMirroringCollector != nil {
		in, out := &in.IsMirroringCollector, &out.IsMirroringCollector
		*out = new(bool)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.LoadBalancingScheme != nil {
		in, out := &in.LoadBalancingScheme, &out.LoadBalancingScheme
		*out = new(string)
		**out = **in
	}
	if in.Network != nil {
		in, out := &in.Network, &out.Network
		*out = new(string)
		**out = **in
	}
	if in.NetworkRef != nil {
		in, out := &in.NetworkRef, &out.NetworkRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.NetworkSelector != nil {
		in, out := &in.NetworkSelector, &out.NetworkSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.NetworkTier != nil {
		in, out := &in.NetworkTier, &out.NetworkTier
		*out = new(string)
		**out = **in
	}
	if in.NoAutomateDNSZone != nil {
		in, out := &in.NoAutomateDNSZone, &out.NoAutomateDNSZone
		*out = new(bool)
		**out = **in
	}
	if in.PortRange != nil {
		in, out := &in.PortRange, &out.PortRange
		*out = new(string)
		**out = **in
	}
	if in.Ports != nil {
		in, out := &in.Ports, &out.Ports
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.RecreateClosedPsc != nil {
		in, out := &in.RecreateClosedPsc, &out.RecreateClosedPsc
		*out = new(bool)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.ServiceDirectoryRegistrations != nil {
		in, out := &in.ServiceDirectoryRegistrations, &out.ServiceDirectoryRegistrations
		*out = make([]ServiceDirectoryRegistrationsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ServiceLabel != nil {
		in, out := &in.ServiceLabel, &out.ServiceLabel
		*out = new(string)
		**out = **in
	}
	if in.SourceIPRanges != nil {
		in, out := &in.SourceIPRanges, &out.SourceIPRanges
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Subnetwork != nil {
		in, out := &in.Subnetwork, &out.Subnetwork
		*out = new(string)
		**out = **in
	}
	if in.SubnetworkRef != nil {
		in, out := &in.SubnetworkRef, &out.SubnetworkRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SubnetworkSelector != nil {
		in, out := &in.SubnetworkSelector, &out.SubnetworkSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Target != nil {
		in, out := &in.Target, &out.Target
		*out = new(string)
		**out = **in
	}
	if in.TargetRef != nil {
		in, out := &in.TargetRef, &out.TargetRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.TargetSelector != nil {
		in, out := &in.TargetSelector, &out.TargetSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ForwardingRuleParameters.
func (in *ForwardingRuleParameters) DeepCopy() *ForwardingRuleParameters {
	if in == nil {
		return nil
	}
	out := new(ForwardingRuleParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ForwardingRuleSpec) DeepCopyInto(out *ForwardingRuleSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ForwardingRuleSpec.
func (in *ForwardingRuleSpec) DeepCopy() *ForwardingRuleSpec {
	if in == nil {
		return nil
	}
	out := new(ForwardingRuleSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ForwardingRuleStatus) DeepCopyInto(out *ForwardingRuleStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ForwardingRuleStatus.
func (in *ForwardingRuleStatus) DeepCopy() *ForwardingRuleStatus {
	if in == nil {
		return nil
	}
	out := new(ForwardingRuleStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GRPCHealthCheckInitParameters) DeepCopyInto(out *GRPCHealthCheckInitParameters) {
	*out = *in
	if in.GRPCServiceName != nil {
		in, out := &in.GRPCServiceName, &out.GRPCServiceName
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
	if in.PortName != nil {
		in, out := &in.PortName, &out.PortName
		*out = new(string)
		**out = **in
	}
	if in.PortSpecification != nil {
		in, out := &in.PortSpecification, &out.PortSpecification
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GRPCHealthCheckInitParameters.
func (in *GRPCHealthCheckInitParameters) DeepCopy() *GRPCHealthCheckInitParameters {
	if in == nil {
		return nil
	}
	out := new(GRPCHealthCheckInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GRPCHealthCheckObservation) DeepCopyInto(out *GRPCHealthCheckObservation) {
	*out = *in
	if in.GRPCServiceName != nil {
		in, out := &in.GRPCServiceName, &out.GRPCServiceName
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
	if in.PortName != nil {
		in, out := &in.PortName, &out.PortName
		*out = new(string)
		**out = **in
	}
	if in.PortSpecification != nil {
		in, out := &in.PortSpecification, &out.PortSpecification
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GRPCHealthCheckObservation.
func (in *GRPCHealthCheckObservation) DeepCopy() *GRPCHealthCheckObservation {
	if in == nil {
		return nil
	}
	out := new(GRPCHealthCheckObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GRPCHealthCheckParameters) DeepCopyInto(out *GRPCHealthCheckParameters) {
	*out = *in
	if in.GRPCServiceName != nil {
		in, out := &in.GRPCServiceName, &out.GRPCServiceName
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
	if in.PortName != nil {
		in, out := &in.PortName, &out.PortName
		*out = new(string)
		**out = **in
	}
	if in.PortSpecification != nil {
		in, out := &in.PortSpecification, &out.PortSpecification
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GRPCHealthCheckParameters.
func (in *GRPCHealthCheckParameters) DeepCopy() *GRPCHealthCheckParameters {
	if in == nil {
		return nil
	}
	out := new(GRPCHealthCheckParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GlobalAddress) DeepCopyInto(out *GlobalAddress) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GlobalAddress.
func (in *GlobalAddress) DeepCopy() *GlobalAddress {
	if in == nil {
		return nil
	}
	out := new(GlobalAddress)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *GlobalAddress) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GlobalAddressInitParameters) DeepCopyInto(out *GlobalAddressInitParameters) {
	*out = *in
	if in.Address != nil {
		in, out := &in.Address, &out.Address
		*out = new(string)
		**out = **in
	}
	if in.AddressType != nil {
		in, out := &in.AddressType, &out.AddressType
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.IPVersion != nil {
		in, out := &in.IPVersion, &out.IPVersion
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Network != nil {
		in, out := &in.Network, &out.Network
		*out = new(string)
		**out = **in
	}
	if in.NetworkRef != nil {
		in, out := &in.NetworkRef, &out.NetworkRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.NetworkSelector != nil {
		in, out := &in.NetworkSelector, &out.NetworkSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.PrefixLength != nil {
		in, out := &in.PrefixLength, &out.PrefixLength
		*out = new(float64)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Purpose != nil {
		in, out := &in.Purpose, &out.Purpose
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GlobalAddressInitParameters.
func (in *GlobalAddressInitParameters) DeepCopy() *GlobalAddressInitParameters {
	if in == nil {
		return nil
	}
	out := new(GlobalAddressInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GlobalAddressList) DeepCopyInto(out *GlobalAddressList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]GlobalAddress, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GlobalAddressList.
func (in *GlobalAddressList) DeepCopy() *GlobalAddressList {
	if in == nil {
		return nil
	}
	out := new(GlobalAddressList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *GlobalAddressList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GlobalAddressObservation) DeepCopyInto(out *GlobalAddressObservation) {
	*out = *in
	if in.Address != nil {
		in, out := &in.Address, &out.Address
		*out = new(string)
		**out = **in
	}
	if in.AddressType != nil {
		in, out := &in.AddressType, &out.AddressType
		*out = new(string)
		**out = **in
	}
	if in.CreationTimestamp != nil {
		in, out := &in.CreationTimestamp, &out.CreationTimestamp
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.EffectiveLabels != nil {
		in, out := &in.EffectiveLabels, &out.EffectiveLabels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IPVersion != nil {
		in, out := &in.IPVersion, &out.IPVersion
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Network != nil {
		in, out := &in.Network, &out.Network
		*out = new(string)
		**out = **in
	}
	if in.PrefixLength != nil {
		in, out := &in.PrefixLength, &out.PrefixLength
		*out = new(float64)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Purpose != nil {
		in, out := &in.Purpose, &out.Purpose
		*out = new(string)
		**out = **in
	}
	if in.SelfLink != nil {
		in, out := &in.SelfLink, &out.SelfLink
		*out = new(string)
		**out = **in
	}
	if in.TerraformLabels != nil {
		in, out := &in.TerraformLabels, &out.TerraformLabels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GlobalAddressObservation.
func (in *GlobalAddressObservation) DeepCopy() *GlobalAddressObservation {
	if in == nil {
		return nil
	}
	out := new(GlobalAddressObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GlobalAddressParameters) DeepCopyInto(out *GlobalAddressParameters) {
	*out = *in
	if in.Address != nil {
		in, out := &in.Address, &out.Address
		*out = new(string)
		**out = **in
	}
	if in.AddressType != nil {
		in, out := &in.AddressType, &out.AddressType
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.IPVersion != nil {
		in, out := &in.IPVersion, &out.IPVersion
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Network != nil {
		in, out := &in.Network, &out.Network
		*out = new(string)
		**out = **in
	}
	if in.NetworkRef != nil {
		in, out := &in.NetworkRef, &out.NetworkRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.NetworkSelector != nil {
		in, out := &in.NetworkSelector, &out.NetworkSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.PrefixLength != nil {
		in, out := &in.PrefixLength, &out.PrefixLength
		*out = new(float64)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Purpose != nil {
		in, out := &in.Purpose, &out.Purpose
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GlobalAddressParameters.
func (in *GlobalAddressParameters) DeepCopy() *GlobalAddressParameters {
	if in == nil {
		return nil
	}
	out := new(GlobalAddressParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GlobalAddressSpec) DeepCopyInto(out *GlobalAddressSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GlobalAddressSpec.
func (in *GlobalAddressSpec) DeepCopy() *GlobalAddressSpec {
	if in == nil {
		return nil
	}
	out := new(GlobalAddressSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GlobalAddressStatus) DeepCopyInto(out *GlobalAddressStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GlobalAddressStatus.
func (in *GlobalAddressStatus) DeepCopy() *GlobalAddressStatus {
	if in == nil {
		return nil
	}
	out := new(GlobalAddressStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GlobalForwardingRule) DeepCopyInto(out *GlobalForwardingRule) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GlobalForwardingRule.
func (in *GlobalForwardingRule) DeepCopy() *GlobalForwardingRule {
	if in == nil {
		return nil
	}
	out := new(GlobalForwardingRule)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *GlobalForwardingRule) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GlobalForwardingRuleInitParameters) DeepCopyInto(out *GlobalForwardingRuleInitParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.IPAddress != nil {
		in, out := &in.IPAddress, &out.IPAddress
		*out = new(string)
		**out = **in
	}
	if in.IPAddressRef != nil {
		in, out := &in.IPAddressRef, &out.IPAddressRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.IPAddressSelector != nil {
		in, out := &in.IPAddressSelector, &out.IPAddressSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.IPProtocol != nil {
		in, out := &in.IPProtocol, &out.IPProtocol
		*out = new(string)
		**out = **in
	}
	if in.IPVersion != nil {
		in, out := &in.IPVersion, &out.IPVersion
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.LoadBalancingScheme != nil {
		in, out := &in.LoadBalancingScheme, &out.LoadBalancingScheme
		*out = new(string)
		**out = **in
	}
	if in.MetadataFilters != nil {
		in, out := &in.MetadataFilters, &out.MetadataFilters
		*out = make([]MetadataFiltersInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Network != nil {
		in, out := &in.Network, &out.Network
		*out = new(string)
		**out = **in
	}
	if in.NetworkRef != nil {
		in, out := &in.NetworkRef, &out.NetworkRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.NetworkSelector != nil {
		in, out := &in.NetworkSelector, &out.NetworkSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.NoAutomateDNSZone != nil {
		in, out := &in.NoAutomateDNSZone, &out.NoAutomateDNSZone
		*out = new(bool)
		**out = **in
	}
	if in.PortRange != nil {
		in, out := &in.PortRange, &out.PortRange
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.ProjectRef != nil {
		in, out := &in.ProjectRef, &out.ProjectRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ProjectSelector != nil {
		in, out := &in.ProjectSelector, &out.ProjectSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.ServiceDirectoryRegistrations != nil {
		in, out := &in.ServiceDirectoryRegistrations, &out.ServiceDirectoryRegistrations
		*out = make([]GlobalForwardingRuleServiceDirectoryRegistrationsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SourceIPRanges != nil {
		in, out := &in.SourceIPRanges, &out.SourceIPRanges
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Subnetwork != nil {
		in, out := &in.Subnetwork, &out.Subnetwork
		*out = new(string)
		**out = **in
	}
	if in.SubnetworkRef != nil {
		in, out := &in.SubnetworkRef, &out.SubnetworkRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SubnetworkSelector != nil {
		in, out := &in.SubnetworkSelector, &out.SubnetworkSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Target != nil {
		in, out := &in.Target, &out.Target
		*out = new(string)
		**out = **in
	}
	if in.TargetRef != nil {
		in, out := &in.TargetRef, &out.TargetRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.TargetSelector != nil {
		in, out := &in.TargetSelector, &out.TargetSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GlobalForwardingRuleInitParameters.
func (in *GlobalForwardingRuleInitParameters) DeepCopy() *GlobalForwardingRuleInitParameters {
	if in == nil {
		return nil
	}
	out := new(GlobalForwardingRuleInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GlobalForwardingRuleList) DeepCopyInto(out *GlobalForwardingRuleList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]GlobalForwardingRule, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GlobalForwardingRuleList.
func (in *GlobalForwardingRuleList) DeepCopy() *GlobalForwardingRuleList {
	if in == nil {
		return nil
	}
	out := new(GlobalForwardingRuleList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *GlobalForwardingRuleList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GlobalForwardingRuleObservation) DeepCopyInto(out *GlobalForwardingRuleObservation) {
	*out = *in
	if in.BaseForwardingRule != nil {
		in, out := &in.BaseForwardingRule, &out.BaseForwardingRule
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.EffectiveLabels != nil {
		in, out := &in.EffectiveLabels, &out.EffectiveLabels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IPAddress != nil {
		in, out := &in.IPAddress, &out.IPAddress
		*out = new(string)
		**out = **in
	}
	if in.IPProtocol != nil {
		in, out := &in.IPProtocol, &out.IPProtocol
		*out = new(string)
		**out = **in
	}
	if in.IPVersion != nil {
		in, out := &in.IPVersion, &out.IPVersion
		*out = new(string)
		**out = **in
	}
	if in.LabelFingerprint != nil {
		in, out := &in.LabelFingerprint, &out.LabelFingerprint
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.LoadBalancingScheme != nil {
		in, out := &in.LoadBalancingScheme, &out.LoadBalancingScheme
		*out = new(string)
		**out = **in
	}
	if in.MetadataFilters != nil {
		in, out := &in.MetadataFilters, &out.MetadataFilters
		*out = make([]MetadataFiltersObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Network != nil {
		in, out := &in.Network, &out.Network
		*out = new(string)
		**out = **in
	}
	if in.NoAutomateDNSZone != nil {
		in, out := &in.NoAutomateDNSZone, &out.NoAutomateDNSZone
		*out = new(bool)
		**out = **in
	}
	if in.PortRange != nil {
		in, out := &in.PortRange, &out.PortRange
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.PscConnectionID != nil {
		in, out := &in.PscConnectionID, &out.PscConnectionID
		*out = new(string)
		**out = **in
	}
	if in.PscConnectionStatus != nil {
		in, out := &in.PscConnectionStatus, &out.PscConnectionStatus
		*out = new(string)
		**out = **in
	}
	if in.SelfLink != nil {
		in, out := &in.SelfLink, &out.SelfLink
		*out = new(string)
		**out = **in
	}
	if in.ServiceDirectoryRegistrations != nil {
		in, out := &in.ServiceDirectoryRegistrations, &out.ServiceDirectoryRegistrations
		*out = make([]GlobalForwardingRuleServiceDirectoryRegistrationsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SourceIPRanges != nil {
		in, out := &in.SourceIPRanges, &out.SourceIPRanges
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Subnetwork != nil {
		in, out := &in.Subnetwork, &out.Subnetwork
		*out = new(string)
		**out = **in
	}
	if in.Target != nil {
		in, out := &in.Target, &out.Target
		*out = new(string)
		**out = **in
	}
	if in.TerraformLabels != nil {
		in, out := &in.TerraformLabels, &out.TerraformLabels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GlobalForwardingRuleObservation.
func (in *GlobalForwardingRuleObservation) DeepCopy() *GlobalForwardingRuleObservation {
	if in == nil {
		return nil
	}
	out := new(GlobalForwardingRuleObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GlobalForwardingRuleParameters) DeepCopyInto(out *GlobalForwardingRuleParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.IPAddress != nil {
		in, out := &in.IPAddress, &out.IPAddress
		*out = new(string)
		**out = **in
	}
	if in.IPAddressRef != nil {
		in, out := &in.IPAddressRef, &out.IPAddressRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.IPAddressSelector != nil {
		in, out := &in.IPAddressSelector, &out.IPAddressSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.IPProtocol != nil {
		in, out := &in.IPProtocol, &out.IPProtocol
		*out = new(string)
		**out = **in
	}
	if in.IPVersion != nil {
		in, out := &in.IPVersion, &out.IPVersion
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.LoadBalancingScheme != nil {
		in, out := &in.LoadBalancingScheme, &out.LoadBalancingScheme
		*out = new(string)
		**out = **in
	}
	if in.MetadataFilters != nil {
		in, out := &in.MetadataFilters, &out.MetadataFilters
		*out = make([]MetadataFiltersParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Network != nil {
		in, out := &in.Network, &out.Network
		*out = new(string)
		**out = **in
	}
	if in.NetworkRef != nil {
		in, out := &in.NetworkRef, &out.NetworkRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.NetworkSelector != nil {
		in, out := &in.NetworkSelector, &out.NetworkSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.NoAutomateDNSZone != nil {
		in, out := &in.NoAutomateDNSZone, &out.NoAutomateDNSZone
		*out = new(bool)
		**out = **in
	}
	if in.PortRange != nil {
		in, out := &in.PortRange, &out.PortRange
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.ProjectRef != nil {
		in, out := &in.ProjectRef, &out.ProjectRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ProjectSelector != nil {
		in, out := &in.ProjectSelector, &out.ProjectSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.ServiceDirectoryRegistrations != nil {
		in, out := &in.ServiceDirectoryRegistrations, &out.ServiceDirectoryRegistrations
		*out = make([]GlobalForwardingRuleServiceDirectoryRegistrationsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SourceIPRanges != nil {
		in, out := &in.SourceIPRanges, &out.SourceIPRanges
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Subnetwork != nil {
		in, out := &in.Subnetwork, &out.Subnetwork
		*out = new(string)
		**out = **in
	}
	if in.SubnetworkRef != nil {
		in, out := &in.SubnetworkRef, &out.SubnetworkRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SubnetworkSelector != nil {
		in, out := &in.SubnetworkSelector, &out.SubnetworkSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Target != nil {
		in, out := &in.Target, &out.Target
		*out = new(string)
		**out = **in
	}
	if in.TargetRef != nil {
		in, out := &in.TargetRef, &out.TargetRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.TargetSelector != nil {
		in, out := &in.TargetSelector, &out.TargetSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GlobalForwardingRuleParameters.
func (in *GlobalForwardingRuleParameters) DeepCopy() *GlobalForwardingRuleParameters {
	if in == nil {
		return nil
	}
	out := new(GlobalForwardingRuleParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GlobalForwardingRuleServiceDirectoryRegistrationsInitParameters) DeepCopyInto(out *GlobalForwardingRuleServiceDirectoryRegistrationsInitParameters) {
	*out = *in
	if in.Namespace != nil {
		in, out := &in.Namespace, &out.Namespace
		*out = new(string)
		**out = **in
	}
	if in.ServiceDirectoryRegion != nil {
		in, out := &in.ServiceDirectoryRegion, &out.ServiceDirectoryRegion
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GlobalForwardingRuleServiceDirectoryRegistrationsInitParameters.
func (in *GlobalForwardingRuleServiceDirectoryRegistrationsInitParameters) DeepCopy() *GlobalForwardingRuleServiceDirectoryRegistrationsInitParameters {
	if in == nil {
		return nil
	}
	out := new(GlobalForwardingRuleServiceDirectoryRegistrationsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GlobalForwardingRuleServiceDirectoryRegistrationsObservation) DeepCopyInto(out *GlobalForwardingRuleServiceDirectoryRegistrationsObservation) {
	*out = *in
	if in.Namespace != nil {
		in, out := &in.Namespace, &out.Namespace
		*out = new(string)
		**out = **in
	}
	if in.ServiceDirectoryRegion != nil {
		in, out := &in.ServiceDirectoryRegion, &out.ServiceDirectoryRegion
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GlobalForwardingRuleServiceDirectoryRegistrationsObservation.
func (in *GlobalForwardingRuleServiceDirectoryRegistrationsObservation) DeepCopy() *GlobalForwardingRuleServiceDirectoryRegistrationsObservation {
	if in == nil {
		return nil
	}
	out := new(GlobalForwardingRuleServiceDirectoryRegistrationsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GlobalForwardingRuleServiceDirectoryRegistrationsParameters) DeepCopyInto(out *GlobalForwardingRuleServiceDirectoryRegistrationsParameters) {
	*out = *in
	if in.Namespace != nil {
		in, out := &in.Namespace, &out.Namespace
		*out = new(string)
		**out = **in
	}
	if in.ServiceDirectoryRegion != nil {
		in, out := &in.ServiceDirectoryRegion, &out.ServiceDirectoryRegion
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GlobalForwardingRuleServiceDirectoryRegistrationsParameters.
func (in *GlobalForwardingRuleServiceDirectoryRegistrationsParameters) DeepCopy() *GlobalForwardingRuleServiceDirectoryRegistrationsParameters {
	if in == nil {
		return nil
	}
	out := new(GlobalForwardingRuleServiceDirectoryRegistrationsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GlobalForwardingRuleSpec) DeepCopyInto(out *GlobalForwardingRuleSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GlobalForwardingRuleSpec.
func (in *GlobalForwardingRuleSpec) DeepCopy() *GlobalForwardingRuleSpec {
	if in == nil {
		return nil
	}
	out := new(GlobalForwardingRuleSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GlobalForwardingRuleStatus) DeepCopyInto(out *GlobalForwardingRuleStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GlobalForwardingRuleStatus.
func (in *GlobalForwardingRuleStatus) DeepCopy() *GlobalForwardingRuleStatus {
	if in == nil {
		return nil
	}
	out := new(GlobalForwardingRuleStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GlobalNetworkEndpoint) DeepCopyInto(out *GlobalNetworkEndpoint) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GlobalNetworkEndpoint.
func (in *GlobalNetworkEndpoint) DeepCopy() *GlobalNetworkEndpoint {
	if in == nil {
		return nil
	}
	out := new(GlobalNetworkEndpoint)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *GlobalNetworkEndpoint) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GlobalNetworkEndpointGroup) DeepCopyInto(out *GlobalNetworkEndpointGroup) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GlobalNetworkEndpointGroup.
func (in *GlobalNetworkEndpointGroup) DeepCopy() *GlobalNetworkEndpointGroup {
	if in == nil {
		return nil
	}
	out := new(GlobalNetworkEndpointGroup)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *GlobalNetworkEndpointGroup) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GlobalNetworkEndpointGroupInitParameters) DeepCopyInto(out *GlobalNetworkEndpointGroupInitParameters) {
	*out = *in
	if in.DefaultPort != nil {
		in, out := &in.DefaultPort, &out.DefaultPort
		*out = new(float64)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.NetworkEndpointType != nil {
		in, out := &in.NetworkEndpointType, &out.NetworkEndpointType
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GlobalNetworkEndpointGroupInitParameters.
func (in *GlobalNetworkEndpointGroupInitParameters) DeepCopy() *GlobalNetworkEndpointGroupInitParameters {
	if in == nil {
		return nil
	}
	out := new(GlobalNetworkEndpointGroupInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GlobalNetworkEndpointGroupList) DeepCopyInto(out *GlobalNetworkEndpointGroupList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]GlobalNetworkEndpointGroup, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GlobalNetworkEndpointGroupList.
func (in *GlobalNetworkEndpointGroupList) DeepCopy() *GlobalNetworkEndpointGroupList {
	if in == nil {
		return nil
	}
	out := new(GlobalNetworkEndpointGroupList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *GlobalNetworkEndpointGroupList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GlobalNetworkEndpointGroupObservation) DeepCopyInto(out *GlobalNetworkEndpointGroupObservation) {
	*out = *in
	if in.DefaultPort != nil {
		in, out := &in.DefaultPort, &out.DefaultPort
		*out = new(float64)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.NetworkEndpointType != nil {
		in, out := &in.NetworkEndpointType, &out.NetworkEndpointType
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.SelfLink != nil {
		in, out := &in.SelfLink, &out.SelfLink
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GlobalNetworkEndpointGroupObservation.
func (in *GlobalNetworkEndpointGroupObservation) DeepCopy() *GlobalNetworkEndpointGroupObservation {
	if in == nil {
		return nil
	}
	out := new(GlobalNetworkEndpointGroupObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GlobalNetworkEndpointGroupParameters) DeepCopyInto(out *GlobalNetworkEndpointGroupParameters) {
	*out = *in
	if in.DefaultPort != nil {
		in, out := &in.DefaultPort, &out.DefaultPort
		*out = new(float64)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.NetworkEndpointType != nil {
		in, out := &in.NetworkEndpointType, &out.NetworkEndpointType
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GlobalNetworkEndpointGroupParameters.
func (in *GlobalNetworkEndpointGroupParameters) DeepCopy() *GlobalNetworkEndpointGroupParameters {
	if in == nil {
		return nil
	}
	out := new(GlobalNetworkEndpointGroupParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GlobalNetworkEndpointGroupSpec) DeepCopyInto(out *GlobalNetworkEndpointGroupSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GlobalNetworkEndpointGroupSpec.
func (in *GlobalNetworkEndpointGroupSpec) DeepCopy() *GlobalNetworkEndpointGroupSpec {
	if in == nil {
		return nil
	}
	out := new(GlobalNetworkEndpointGroupSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GlobalNetworkEndpointGroupStatus) DeepCopyInto(out *GlobalNetworkEndpointGroupStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GlobalNetworkEndpointGroupStatus.
func (in *GlobalNetworkEndpointGroupStatus) DeepCopy() *GlobalNetworkEndpointGroupStatus {
	if in == nil {
		return nil
	}
	out := new(GlobalNetworkEndpointGroupStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GlobalNetworkEndpointInitParameters) DeepCopyInto(out *GlobalNetworkEndpointInitParameters) {
	*out = *in
	if in.Fqdn != nil {
		in, out := &in.Fqdn, &out.Fqdn
		*out = new(string)
		**out = **in
	}
	if in.GlobalNetworkEndpointGroup != nil {
		in, out := &in.GlobalNetworkEndpointGroup, &out.GlobalNetworkEndpointGroup
		*out = new(string)
		**out = **in
	}
	if in.GlobalNetworkEndpointGroupRef != nil {
		in, out := &in.GlobalNetworkEndpointGroupRef, &out.GlobalNetworkEndpointGroupRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.GlobalNetworkEndpointGroupSelector != nil {
		in, out := &in.GlobalNetworkEndpointGroupSelector, &out.GlobalNetworkEndpointGroupSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.IPAddress != nil {
		in, out := &in.IPAddress, &out.IPAddress
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GlobalNetworkEndpointInitParameters.
func (in *GlobalNetworkEndpointInitParameters) DeepCopy() *GlobalNetworkEndpointInitParameters {
	if in == nil {
		return nil
	}
	out := new(GlobalNetworkEndpointInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GlobalNetworkEndpointList) DeepCopyInto(out *GlobalNetworkEndpointList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]GlobalNetworkEndpoint, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GlobalNetworkEndpointList.
func (in *GlobalNetworkEndpointList) DeepCopy() *GlobalNetworkEndpointList {
	if in == nil {
		return nil
	}
	out := new(GlobalNetworkEndpointList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *GlobalNetworkEndpointList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GlobalNetworkEndpointObservation) DeepCopyInto(out *GlobalNetworkEndpointObservation) {
	*out = *in
	if in.Fqdn != nil {
		in, out := &in.Fqdn, &out.Fqdn
		*out = new(string)
		**out = **in
	}
	if in.GlobalNetworkEndpointGroup != nil {
		in, out := &in.GlobalNetworkEndpointGroup, &out.GlobalNetworkEndpointGroup
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IPAddress != nil {
		in, out := &in.IPAddress, &out.IPAddress
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GlobalNetworkEndpointObservation.
func (in *GlobalNetworkEndpointObservation) DeepCopy() *GlobalNetworkEndpointObservation {
	if in == nil {
		return nil
	}
	out := new(GlobalNetworkEndpointObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GlobalNetworkEndpointParameters) DeepCopyInto(out *GlobalNetworkEndpointParameters) {
	*out = *in
	if in.Fqdn != nil {
		in, out := &in.Fqdn, &out.Fqdn
		*out = new(string)
		**out = **in
	}
	if in.GlobalNetworkEndpointGroup != nil {
		in, out := &in.GlobalNetworkEndpointGroup, &out.GlobalNetworkEndpointGroup
		*out = new(string)
		**out = **in
	}
	if in.GlobalNetworkEndpointGroupRef != nil {
		in, out := &in.GlobalNetworkEndpointGroupRef, &out.GlobalNetworkEndpointGroupRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.GlobalNetworkEndpointGroupSelector != nil {
		in, out := &in.GlobalNetworkEndpointGroupSelector, &out.GlobalNetworkEndpointGroupSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.IPAddress != nil {
		in, out := &in.IPAddress, &out.IPAddress
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GlobalNetworkEndpointParameters.
func (in *GlobalNetworkEndpointParameters) DeepCopy() *GlobalNetworkEndpointParameters {
	if in == nil {
		return nil
	}
	out := new(GlobalNetworkEndpointParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GlobalNetworkEndpointSpec) DeepCopyInto(out *GlobalNetworkEndpointSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GlobalNetworkEndpointSpec.
func (in *GlobalNetworkEndpointSpec) DeepCopy() *GlobalNetworkEndpointSpec {
	if in == nil {
		return nil
	}
	out := new(GlobalNetworkEndpointSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GlobalNetworkEndpointStatus) DeepCopyInto(out *GlobalNetworkEndpointStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GlobalNetworkEndpointStatus.
func (in *GlobalNetworkEndpointStatus) DeepCopy() *GlobalNetworkEndpointStatus {
	if in == nil {
		return nil
	}
	out := new(GlobalNetworkEndpointStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GroupPlacementPolicyInitParameters) DeepCopyInto(out *GroupPlacementPolicyInitParameters) {
	*out = *in
	if in.AvailabilityDomainCount != nil {
		in, out := &in.AvailabilityDomainCount, &out.AvailabilityDomainCount
		*out = new(float64)
		**out = **in
	}
	if in.Collocation != nil {
		in, out := &in.Collocation, &out.Collocation
		*out = new(string)
		**out = **in
	}
	if in.VMCount != nil {
		in, out := &in.VMCount, &out.VMCount
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GroupPlacementPolicyInitParameters.
func (in *GroupPlacementPolicyInitParameters) DeepCopy() *GroupPlacementPolicyInitParameters {
	if in == nil {
		return nil
	}
	out := new(GroupPlacementPolicyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GroupPlacementPolicyObservation) DeepCopyInto(out *GroupPlacementPolicyObservation) {
	*out = *in
	if in.AvailabilityDomainCount != nil {
		in, out := &in.AvailabilityDomainCount, &out.AvailabilityDomainCount
		*out = new(float64)
		**out = **in
	}
	if in.Collocation != nil {
		in, out := &in.Collocation, &out.Collocation
		*out = new(string)
		**out = **in
	}
	if in.VMCount != nil {
		in, out := &in.VMCount, &out.VMCount
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GroupPlacementPolicyObservation.
func (in *GroupPlacementPolicyObservation) DeepCopy() *GroupPlacementPolicyObservation {
	if in == nil {
		return nil
	}
	out := new(GroupPlacementPolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GroupPlacementPolicyParameters) DeepCopyInto(out *GroupPlacementPolicyParameters) {
	*out = *in
	if in.AvailabilityDomainCount != nil {
		in, out := &in.AvailabilityDomainCount, &out.AvailabilityDomainCount
		*out = new(float64)
		**out = **in
	}
	if in.Collocation != nil {
		in, out := &in.Collocation, &out.Collocation
		*out = new(string)
		**out = **in
	}
	if in.VMCount != nil {
		in, out := &in.VMCount, &out.VMCount
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GroupPlacementPolicyParameters.
func (in *GroupPlacementPolicyParameters) DeepCopy() *GroupPlacementPolicyParameters {
	if in == nil {
		return nil
	}
	out := new(GroupPlacementPolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GuestAcceleratorInitParameters) DeepCopyInto(out *GuestAcceleratorInitParameters) {
	*out = *in
	if in.Count != nil {
		in, out := &in.Count, &out.Count
		*out = new(float64)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GuestAcceleratorInitParameters.
func (in *GuestAcceleratorInitParameters) DeepCopy() *GuestAcceleratorInitParameters {
	if in == nil {
		return nil
	}
	out := new(GuestAcceleratorInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GuestAcceleratorObservation) DeepCopyInto(out *GuestAcceleratorObservation) {
	*out = *in
	if in.Count != nil {
		in, out := &in.Count, &out.Count
		*out = new(float64)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GuestAcceleratorObservation.
func (in *GuestAcceleratorObservation) DeepCopy() *GuestAcceleratorObservation {
	if in == nil {
		return nil
	}
	out := new(GuestAcceleratorObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GuestAcceleratorParameters) DeepCopyInto(out *GuestAcceleratorParameters) {
	*out = *in
	if in.Count != nil {
		in, out := &in.Count, &out.Count
		*out = new(float64)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GuestAcceleratorParameters.
func (in *GuestAcceleratorParameters) DeepCopy() *GuestAcceleratorParameters {
	if in == nil {
		return nil
	}
	out := new(GuestAcceleratorParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GuestAcceleratorsInitParameters) DeepCopyInto(out *GuestAcceleratorsInitParameters) {
	*out = *in
	if in.AcceleratorCount != nil {
		in, out := &in.AcceleratorCount, &out.AcceleratorCount
		*out = new(float64)
		**out = **in
	}
	if in.AcceleratorType != nil {
		in, out := &in.AcceleratorType, &out.AcceleratorType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GuestAcceleratorsInitParameters.
func (in *GuestAcceleratorsInitParameters) DeepCopy() *GuestAcceleratorsInitParameters {
	if in == nil {
		return nil
	}
	out := new(GuestAcceleratorsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GuestAcceleratorsObservation) DeepCopyInto(out *GuestAcceleratorsObservation) {
	*out = *in
	if in.AcceleratorCount != nil {
		in, out := &in.AcceleratorCount, &out.AcceleratorCount
		*out = new(float64)
		**out = **in
	}
	if in.AcceleratorType != nil {
		in, out := &in.AcceleratorType, &out.AcceleratorType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GuestAcceleratorsObservation.
func (in *GuestAcceleratorsObservation) DeepCopy() *GuestAcceleratorsObservation {
	if in == nil {
		return nil
	}
	out := new(GuestAcceleratorsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GuestAcceleratorsParameters) DeepCopyInto(out *GuestAcceleratorsParameters) {
	*out = *in
	if in.AcceleratorCount != nil {
		in, out := &in.AcceleratorCount, &out.AcceleratorCount
		*out = new(float64)
		**out = **in
	}
	if in.AcceleratorType != nil {
		in, out := &in.AcceleratorType, &out.AcceleratorType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GuestAcceleratorsParameters.
func (in *GuestAcceleratorsParameters) DeepCopy() *GuestAcceleratorsParameters {
	if in == nil {
		return nil
	}
	out := new(GuestAcceleratorsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GuestOsFeaturesInitParameters) DeepCopyInto(out *GuestOsFeaturesInitParameters) {
	*out = *in
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GuestOsFeaturesInitParameters.
func (in *GuestOsFeaturesInitParameters) DeepCopy() *GuestOsFeaturesInitParameters {
	if in == nil {
		return nil
	}
	out := new(GuestOsFeaturesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GuestOsFeaturesObservation) DeepCopyInto(out *GuestOsFeaturesObservation) {
	*out = *in
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GuestOsFeaturesObservation.
func (in *GuestOsFeaturesObservation) DeepCopy() *GuestOsFeaturesObservation {
	if in == nil {
		return nil
	}
	out := new(GuestOsFeaturesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GuestOsFeaturesParameters) DeepCopyInto(out *GuestOsFeaturesParameters) {
	*out = *in
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GuestOsFeaturesParameters.
func (in *GuestOsFeaturesParameters) DeepCopy() *GuestOsFeaturesParameters {
	if in == nil {
		return nil
	}
	out := new(GuestOsFeaturesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HTTPCookieInitParameters) DeepCopyInto(out *HTTPCookieInitParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.TTL != nil {
		in, out := &in.TTL, &out.TTL
		*out = make([]TTLInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HTTPCookieInitParameters.
func (in *HTTPCookieInitParameters) DeepCopy() *HTTPCookieInitParameters {
	if in == nil {
		return nil
	}
	out := new(HTTPCookieInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HTTPCookieObservation) DeepCopyInto(out *HTTPCookieObservation) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.TTL != nil {
		in, out := &in.TTL, &out.TTL
		*out = make([]TTLObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HTTPCookieObservation.
func (in *HTTPCookieObservation) DeepCopy() *HTTPCookieObservation {
	if in == nil {
		return nil
	}
	out := new(HTTPCookieObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HTTPCookieParameters) DeepCopyInto(out *HTTPCookieParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.TTL != nil {
		in, out := &in.TTL, &out.TTL
		*out = make([]TTLParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HTTPCookieParameters.
func (in *HTTPCookieParameters) DeepCopy() *HTTPCookieParameters {
	if in == nil {
		return nil
	}
	out := new(HTTPCookieParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HTTPCookieTTLInitParameters) DeepCopyInto(out *HTTPCookieTTLInitParameters) {
	*out = *in
	if in.Nanos != nil {
		in, out := &in.Nanos, &out.Nanos
		*out = new(float64)
		**out = **in
	}
	if in.Seconds != nil {
		in, out := &in.Seconds, &out.Seconds
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HTTPCookieTTLInitParameters.
func (in *HTTPCookieTTLInitParameters) DeepCopy() *HTTPCookieTTLInitParameters {
	if in == nil {
		return nil
	}
	out := new(HTTPCookieTTLInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HTTPCookieTTLObservation) DeepCopyInto(out *HTTPCookieTTLObservation) {
	*out = *in
	if in.Nanos != nil {
		in, out := &in.Nanos, &out.Nanos
		*out = new(float64)
		**out = **in
	}
	if in.Seconds != nil {
		in, out := &in.Seconds, &out.Seconds
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HTTPCookieTTLObservation.
func (in *HTTPCookieTTLObservation) DeepCopy() *HTTPCookieTTLObservation {
	if in == nil {
		return nil
	}
	out := new(HTTPCookieTTLObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HTTPCookieTTLParameters) DeepCopyInto(out *HTTPCookieTTLParameters) {
	*out = *in
	if in.Nanos != nil {
		in, out := &in.Nanos, &out.Nanos
		*out = new(float64)
		**out = **in
	}
	if in.Seconds != nil {
		in, out := &in.Seconds, &out.Seconds
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HTTPCookieTTLParameters.
func (in *HTTPCookieTTLParameters) DeepCopy() *HTTPCookieTTLParameters {
	if in == nil {
		return nil
	}
	out := new(HTTPCookieTTLParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HTTPHealthCheck) DeepCopyInto(out *HTTPHealthCheck) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HTTPHealthCheck.
func (in *HTTPHealthCheck) DeepCopy() *HTTPHealthCheck {
	if in == nil {
		return nil
	}
	out := new(HTTPHealthCheck)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *HTTPHealthCheck) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HTTPHealthCheckInitParameters) DeepCopyInto(out *HTTPHealthCheckInitParameters) {
	*out = *in
	if in.Host != nil {
		in, out := &in.Host, &out.Host
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
	if in.PortName != nil {
		in, out := &in.PortName, &out.PortName
		*out = new(string)
		**out = **in
	}
	if in.PortSpecification != nil {
		in, out := &in.PortSpecification, &out.PortSpecification
		*out = new(string)
		**out = **in
	}
	if in.ProxyHeader != nil {
		in, out := &in.ProxyHeader, &out.ProxyHeader
		*out = new(string)
		**out = **in
	}
	if in.RequestPath != nil {
		in, out := &in.RequestPath, &out.RequestPath
		*out = new(string)
		**out = **in
	}
	if in.Response != nil {
		in, out := &in.Response, &out.Response
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HTTPHealthCheckInitParameters.
func (in *HTTPHealthCheckInitParameters) DeepCopy() *HTTPHealthCheckInitParameters {
	if in == nil {
		return nil
	}
	out := new(HTTPHealthCheckInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HTTPHealthCheckInitParameters_2) DeepCopyInto(out *HTTPHealthCheckInitParameters_2) {
	*out = *in
	if in.CheckIntervalSec != nil {
		in, out := &in.CheckIntervalSec, &out.CheckIntervalSec
		*out = new(float64)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.HealthyThreshold != nil {
		in, out := &in.HealthyThreshold, &out.HealthyThreshold
		*out = new(float64)
		**out = **in
	}
	if in.Host != nil {
		in, out := &in.Host, &out.Host
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.RequestPath != nil {
		in, out := &in.RequestPath, &out.RequestPath
		*out = new(string)
		**out = **in
	}
	if in.TimeoutSec != nil {
		in, out := &in.TimeoutSec, &out.TimeoutSec
		*out = new(float64)
		**out = **in
	}
	if in.UnhealthyThreshold != nil {
		in, out := &in.UnhealthyThreshold, &out.UnhealthyThreshold
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HTTPHealthCheckInitParameters_2.
func (in *HTTPHealthCheckInitParameters_2) DeepCopy() *HTTPHealthCheckInitParameters_2 {
	if in == nil {
		return nil
	}
	out := new(HTTPHealthCheckInitParameters_2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HTTPHealthCheckList) DeepCopyInto(out *HTTPHealthCheckList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]HTTPHealthCheck, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HTTPHealthCheckList.
func (in *HTTPHealthCheckList) DeepCopy() *HTTPHealthCheckList {
	if in == nil {
		return nil
	}
	out := new(HTTPHealthCheckList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *HTTPHealthCheckList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HTTPHealthCheckObservation) DeepCopyInto(out *HTTPHealthCheckObservation) {
	*out = *in
	if in.Host != nil {
		in, out := &in.Host, &out.Host
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
	if in.PortName != nil {
		in, out := &in.PortName, &out.PortName
		*out = new(string)
		**out = **in
	}
	if in.PortSpecification != nil {
		in, out := &in.PortSpecification, &out.PortSpecification
		*out = new(string)
		**out = **in
	}
	if in.ProxyHeader != nil {
		in, out := &in.ProxyHeader, &out.ProxyHeader
		*out = new(string)
		**out = **in
	}
	if in.RequestPath != nil {
		in, out := &in.RequestPath, &out.RequestPath
		*out = new(string)
		**out = **in
	}
	if in.Response != nil {
		in, out := &in.Response, &out.Response
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HTTPHealthCheckObservation.
func (in *HTTPHealthCheckObservation) DeepCopy() *HTTPHealthCheckObservation {
	if in == nil {
		return nil
	}
	out := new(HTTPHealthCheckObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HTTPHealthCheckObservation_2) DeepCopyInto(out *HTTPHealthCheckObservation_2) {
	*out = *in
	if in.CheckIntervalSec != nil {
		in, out := &in.CheckIntervalSec, &out.CheckIntervalSec
		*out = new(float64)
		**out = **in
	}
	if in.CreationTimestamp != nil {
		in, out := &in.CreationTimestamp, &out.CreationTimestamp
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.HealthyThreshold != nil {
		in, out := &in.HealthyThreshold, &out.HealthyThreshold
		*out = new(float64)
		**out = **in
	}
	if in.Host != nil {
		in, out := &in.Host, &out.Host
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.RequestPath != nil {
		in, out := &in.RequestPath, &out.RequestPath
		*out = new(string)
		**out = **in
	}
	if in.SelfLink != nil {
		in, out := &in.SelfLink, &out.SelfLink
		*out = new(string)
		**out = **in
	}
	if in.TimeoutSec != nil {
		in, out := &in.TimeoutSec, &out.TimeoutSec
		*out = new(float64)
		**out = **in
	}
	if in.UnhealthyThreshold != nil {
		in, out := &in.UnhealthyThreshold, &out.UnhealthyThreshold
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HTTPHealthCheckObservation_2.
func (in *HTTPHealthCheckObservation_2) DeepCopy() *HTTPHealthCheckObservation_2 {
	if in == nil {
		return nil
	}
	out := new(HTTPHealthCheckObservation_2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HTTPHealthCheckParameters) DeepCopyInto(out *HTTPHealthCheckParameters) {
	*out = *in
	if in.Host != nil {
		in, out := &in.Host, &out.Host
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
	if in.PortName != nil {
		in, out := &in.PortName, &out.PortName
		*out = new(string)
		**out = **in
	}
	if in.PortSpecification != nil {
		in, out := &in.PortSpecification, &out.PortSpecification
		*out = new(string)
		**out = **in
	}
	if in.ProxyHeader != nil {
		in, out := &in.ProxyHeader, &out.ProxyHeader
		*out = new(string)
		**out = **in
	}
	if in.RequestPath != nil {
		in, out := &in.RequestPath, &out.RequestPath
		*out = new(string)
		**out = **in
	}
	if in.Response != nil {
		in, out := &in.Response, &out.Response
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HTTPHealthCheckParameters.
func (in *HTTPHealthCheckParameters) DeepCopy() *HTTPHealthCheckParameters {
	if in == nil {
		return nil
	}
	out := new(HTTPHealthCheckParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HTTPHealthCheckParameters_2) DeepCopyInto(out *HTTPHealthCheckParameters_2) {
	*out = *in
	if in.CheckIntervalSec != nil {
		in, out := &in.CheckIntervalSec, &out.CheckIntervalSec
		*out = new(float64)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.HealthyThreshold != nil {
		in, out := &in.HealthyThreshold, &out.HealthyThreshold
		*out = new(float64)
		**out = **in
	}
	if in.Host != nil {
		in, out := &in.Host, &out.Host
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.RequestPath != nil {
		in, out := &in.RequestPath, &out.RequestPath
		*out = new(string)
		**out = **in
	}
	if in.TimeoutSec != nil {
		in, out := &in.TimeoutSec, &out.TimeoutSec
		*out = new(float64)
		**out = **in
	}
	if in.UnhealthyThreshold != nil {
		in, out := &in.UnhealthyThreshold, &out.UnhealthyThreshold
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HTTPHealthCheckParameters_2.
func (in *HTTPHealthCheckParameters_2) DeepCopy() *HTTPHealthCheckParameters_2 {
	if in == nil {
		return nil
	}
	out := new(HTTPHealthCheckParameters_2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HTTPHealthCheckSpec) DeepCopyInto(out *HTTPHealthCheckSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HTTPHealthCheckSpec.
func (in *HTTPHealthCheckSpec) DeepCopy() *HTTPHealthCheckSpec {
	if in == nil {
		return nil
	}
	out := new(HTTPHealthCheckSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HTTPHealthCheckStatus) DeepCopyInto(out *HTTPHealthCheckStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HTTPHealthCheckStatus.
func (in *HTTPHealthCheckStatus) DeepCopy() *HTTPHealthCheckStatus {
	if in == nil {
		return nil
	}
	out := new(HTTPHealthCheckStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HTTPSHealthCheck) DeepCopyInto(out *HTTPSHealthCheck) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HTTPSHealthCheck.
func (in *HTTPSHealthCheck) DeepCopy() *HTTPSHealthCheck {
	if in == nil {
		return nil
	}
	out := new(HTTPSHealthCheck)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *HTTPSHealthCheck) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HTTPSHealthCheckInitParameters) DeepCopyInto(out *HTTPSHealthCheckInitParameters) {
	*out = *in
	if in.Host != nil {
		in, out := &in.Host, &out.Host
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
	if in.PortName != nil {
		in, out := &in.PortName, &out.PortName
		*out = new(string)
		**out = **in
	}
	if in.PortSpecification != nil {
		in, out := &in.PortSpecification, &out.PortSpecification
		*out = new(string)
		**out = **in
	}
	if in.ProxyHeader != nil {
		in, out := &in.ProxyHeader, &out.ProxyHeader
		*out = new(string)
		**out = **in
	}
	if in.RequestPath != nil {
		in, out := &in.RequestPath, &out.RequestPath
		*out = new(string)
		**out = **in
	}
	if in.Response != nil {
		in, out := &in.Response, &out.Response
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HTTPSHealthCheckInitParameters.
func (in *HTTPSHealthCheckInitParameters) DeepCopy() *HTTPSHealthCheckInitParameters {
	if in == nil {
		return nil
	}
	out := new(HTTPSHealthCheckInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HTTPSHealthCheckInitParameters_2) DeepCopyInto(out *HTTPSHealthCheckInitParameters_2) {
	*out = *in
	if in.CheckIntervalSec != nil {
		in, out := &in.CheckIntervalSec, &out.CheckIntervalSec
		*out = new(float64)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.HealthyThreshold != nil {
		in, out := &in.HealthyThreshold, &out.HealthyThreshold
		*out = new(float64)
		**out = **in
	}
	if in.Host != nil {
		in, out := &in.Host, &out.Host
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.RequestPath != nil {
		in, out := &in.RequestPath, &out.RequestPath
		*out = new(string)
		**out = **in
	}
	if in.TimeoutSec != nil {
		in, out := &in.TimeoutSec, &out.TimeoutSec
		*out = new(float64)
		**out = **in
	}
	if in.UnhealthyThreshold != nil {
		in, out := &in.UnhealthyThreshold, &out.UnhealthyThreshold
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HTTPSHealthCheckInitParameters_2.
func (in *HTTPSHealthCheckInitParameters_2) DeepCopy() *HTTPSHealthCheckInitParameters_2 {
	if in == nil {
		return nil
	}
	out := new(HTTPSHealthCheckInitParameters_2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HTTPSHealthCheckList) DeepCopyInto(out *HTTPSHealthCheckList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]HTTPSHealthCheck, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HTTPSHealthCheckList.
func (in *HTTPSHealthCheckList) DeepCopy() *HTTPSHealthCheckList {
	if in == nil {
		return nil
	}
	out := new(HTTPSHealthCheckList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *HTTPSHealthCheckList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HTTPSHealthCheckObservation) DeepCopyInto(out *HTTPSHealthCheckObservation) {
	*out = *in
	if in.Host != nil {
		in, out := &in.Host, &out.Host
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
	if in.PortName != nil {
		in, out := &in.PortName, &out.PortName
		*out = new(string)
		**out = **in
	}
	if in.PortSpecification != nil {
		in, out := &in.PortSpecification, &out.PortSpecification
		*out = new(string)
		**out = **in
	}
	if in.ProxyHeader != nil {
		in, out := &in.ProxyHeader, &out.ProxyHeader
		*out = new(string)
		**out = **in
	}
	if in.RequestPath != nil {
		in, out := &in.RequestPath, &out.RequestPath
		*out = new(string)
		**out = **in
	}
	if in.Response != nil {
		in, out := &in.Response, &out.Response
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HTTPSHealthCheckObservation.
func (in *HTTPSHealthCheckObservation) DeepCopy() *HTTPSHealthCheckObservation {
	if in == nil {
		return nil
	}
	out := new(HTTPSHealthCheckObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HTTPSHealthCheckObservation_2) DeepCopyInto(out *HTTPSHealthCheckObservation_2) {
	*out = *in
	if in.CheckIntervalSec != nil {
		in, out := &in.CheckIntervalSec, &out.CheckIntervalSec
		*out = new(float64)
		**out = **in
	}
	if in.CreationTimestamp != nil {
		in, out := &in.CreationTimestamp, &out.CreationTimestamp
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.HealthyThreshold != nil {
		in, out := &in.HealthyThreshold, &out.HealthyThreshold
		*out = new(float64)
		**out = **in
	}
	if in.Host != nil {
		in, out := &in.Host, &out.Host
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.RequestPath != nil {
		in, out := &in.RequestPath, &out.RequestPath
		*out = new(string)
		**out = **in
	}
	if in.SelfLink != nil {
		in, out := &in.SelfLink, &out.SelfLink
		*out = new(string)
		**out = **in
	}
	if in.TimeoutSec != nil {
		in, out := &in.TimeoutSec, &out.TimeoutSec
		*out = new(float64)
		**out = **in
	}
	if in.UnhealthyThreshold != nil {
		in, out := &in.UnhealthyThreshold, &out.UnhealthyThreshold
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HTTPSHealthCheckObservation_2.
func (in *HTTPSHealthCheckObservation_2) DeepCopy() *HTTPSHealthCheckObservation_2 {
	if in == nil {
		return nil
	}
	out := new(HTTPSHealthCheckObservation_2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HTTPSHealthCheckParameters) DeepCopyInto(out *HTTPSHealthCheckParameters) {
	*out = *in
	if in.Host != nil {
		in, out := &in.Host, &out.Host
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
	if in.PortName != nil {
		in, out := &in.PortName, &out.PortName
		*out = new(string)
		**out = **in
	}
	if in.PortSpecification != nil {
		in, out := &in.PortSpecification, &out.PortSpecification
		*out = new(string)
		**out = **in
	}
	if in.ProxyHeader != nil {
		in, out := &in.ProxyHeader, &out.ProxyHeader
		*out = new(string)
		**out = **in
	}
	if in.RequestPath != nil {
		in, out := &in.RequestPath, &out.RequestPath
		*out = new(string)
		**out = **in
	}
	if in.Response != nil {
		in, out := &in.Response, &out.Response
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HTTPSHealthCheckParameters.
func (in *HTTPSHealthCheckParameters) DeepCopy() *HTTPSHealthCheckParameters {
	if in == nil {
		return nil
	}
	out := new(HTTPSHealthCheckParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HTTPSHealthCheckParameters_2) DeepCopyInto(out *HTTPSHealthCheckParameters_2) {
	*out = *in
	if in.CheckIntervalSec != nil {
		in, out := &in.CheckIntervalSec, &out.CheckIntervalSec
		*out = new(float64)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.HealthyThreshold != nil {
		in, out := &in.HealthyThreshold, &out.HealthyThreshold
		*out = new(float64)
		**out = **in
	}
	if in.Host != nil {
		in, out := &in.Host, &out.Host
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.RequestPath != nil {
		in, out := &in.RequestPath, &out.RequestPath
		*out = new(string)
		**out = **in
	}
	if in.TimeoutSec != nil {
		in, out := &in.TimeoutSec, &out.TimeoutSec
		*out = new(float64)
		**out = **in
	}
	if in.UnhealthyThreshold != nil {
		in, out := &in.UnhealthyThreshold, &out.UnhealthyThreshold
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HTTPSHealthCheckParameters_2.
func (in *HTTPSHealthCheckParameters_2) DeepCopy() *HTTPSHealthCheckParameters_2 {
	if in == nil {
		return nil
	}
	out := new(HTTPSHealthCheckParameters_2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HTTPSHealthCheckSpec) DeepCopyInto(out *HTTPSHealthCheckSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HTTPSHealthCheckSpec.
func (in *HTTPSHealthCheckSpec) DeepCopy() *HTTPSHealthCheckSpec {
	if in == nil {
		return nil
	}
	out := new(HTTPSHealthCheckSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HTTPSHealthCheckStatus) DeepCopyInto(out *HTTPSHealthCheckStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HTTPSHealthCheckStatus.
func (in *HTTPSHealthCheckStatus) DeepCopy() *HTTPSHealthCheckStatus {
	if in == nil {
		return nil
	}
	out := new(HTTPSHealthCheckStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HaVPNGateway) DeepCopyInto(out *HaVPNGateway) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HaVPNGateway.
func (in *HaVPNGateway) DeepCopy() *HaVPNGateway {
	if in == nil {
		return nil
	}
	out := new(HaVPNGateway)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *HaVPNGateway) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HaVPNGatewayInitParameters) DeepCopyInto(out *HaVPNGatewayInitParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Network != nil {
		in, out := &in.Network, &out.Network
		*out = new(string)
		**out = **in
	}
	if in.NetworkRef != nil {
		in, out := &in.NetworkRef, &out.NetworkRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.NetworkSelector != nil {
		in, out := &in.NetworkSelector, &out.NetworkSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.StackType != nil {
		in, out := &in.StackType, &out.StackType
		*out = new(string)
		**out = **in
	}
	if in.VPNInterfaces != nil {
		in, out := &in.VPNInterfaces, &out.VPNInterfaces
		*out = make([]VPNInterfacesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HaVPNGatewayInitParameters.
func (in *HaVPNGatewayInitParameters) DeepCopy() *HaVPNGatewayInitParameters {
	if in == nil {
		return nil
	}
	out := new(HaVPNGatewayInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HaVPNGatewayList) DeepCopyInto(out *HaVPNGatewayList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]HaVPNGateway, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HaVPNGatewayList.
func (in *HaVPNGatewayList) DeepCopy() *HaVPNGatewayList {
	if in == nil {
		return nil
	}
	out := new(HaVPNGatewayList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *HaVPNGatewayList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HaVPNGatewayObservation) DeepCopyInto(out *HaVPNGatewayObservation) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Network != nil {
		in, out := &in.Network, &out.Network
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.SelfLink != nil {
		in, out := &in.SelfLink, &out.SelfLink
		*out = new(string)
		**out = **in
	}
	if in.StackType != nil {
		in, out := &in.StackType, &out.StackType
		*out = new(string)
		**out = **in
	}
	if in.VPNInterfaces != nil {
		in, out := &in.VPNInterfaces, &out.VPNInterfaces
		*out = make([]VPNInterfacesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HaVPNGatewayObservation.
func (in *HaVPNGatewayObservation) DeepCopy() *HaVPNGatewayObservation {
	if in == nil {
		return nil
	}
	out := new(HaVPNGatewayObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HaVPNGatewayParameters) DeepCopyInto(out *HaVPNGatewayParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Network != nil {
		in, out := &in.Network, &out.Network
		*out = new(string)
		**out = **in
	}
	if in.NetworkRef != nil {
		in, out := &in.NetworkRef, &out.NetworkRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.NetworkSelector != nil {
		in, out := &in.NetworkSelector, &out.NetworkSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.StackType != nil {
		in, out := &in.StackType, &out.StackType
		*out = new(string)
		**out = **in
	}
	if in.VPNInterfaces != nil {
		in, out := &in.VPNInterfaces, &out.VPNInterfaces
		*out = make([]VPNInterfacesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HaVPNGatewayParameters.
func (in *HaVPNGatewayParameters) DeepCopy() *HaVPNGatewayParameters {
	if in == nil {
		return nil
	}
	out := new(HaVPNGatewayParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HaVPNGatewaySpec) DeepCopyInto(out *HaVPNGatewaySpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HaVPNGatewaySpec.
func (in *HaVPNGatewaySpec) DeepCopy() *HaVPNGatewaySpec {
	if in == nil {
		return nil
	}
	out := new(HaVPNGatewaySpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HaVPNGatewayStatus) DeepCopyInto(out *HaVPNGatewayStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HaVPNGatewayStatus.
func (in *HaVPNGatewayStatus) DeepCopy() *HaVPNGatewayStatus {
	if in == nil {
		return nil
	}
	out := new(HaVPNGatewayStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HeaderActionInitParameters) DeepCopyInto(out *HeaderActionInitParameters) {
	*out = *in
	if in.RequestHeadersToAdd != nil {
		in, out := &in.RequestHeadersToAdd, &out.RequestHeadersToAdd
		*out = make([]RequestHeadersToAddInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RequestHeadersToRemove != nil {
		in, out := &in.RequestHeadersToRemove, &out.RequestHeadersToRemove
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ResponseHeadersToAdd != nil {
		in, out := &in.ResponseHeadersToAdd, &out.ResponseHeadersToAdd
		*out = make([]ResponseHeadersToAddInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ResponseHeadersToRemove != nil {
		in, out := &in.ResponseHeadersToRemove, &out.ResponseHeadersToRemove
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HeaderActionInitParameters.
func (in *HeaderActionInitParameters) DeepCopy() *HeaderActionInitParameters {
	if in == nil {
		return nil
	}
	out := new(HeaderActionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HeaderActionObservation) DeepCopyInto(out *HeaderActionObservation) {
	*out = *in
	if in.RequestHeadersToAdd != nil {
		in, out := &in.RequestHeadersToAdd, &out.RequestHeadersToAdd
		*out = make([]RequestHeadersToAddObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RequestHeadersToRemove != nil {
		in, out := &in.RequestHeadersToRemove, &out.RequestHeadersToRemove
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ResponseHeadersToAdd != nil {
		in, out := &in.ResponseHeadersToAdd, &out.ResponseHeadersToAdd
		*out = make([]ResponseHeadersToAddObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ResponseHeadersToRemove != nil {
		in, out := &in.ResponseHeadersToRemove, &out.ResponseHeadersToRemove
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HeaderActionObservation.
func (in *HeaderActionObservation) DeepCopy() *HeaderActionObservation {
	if in == nil {
		return nil
	}
	out := new(HeaderActionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HeaderActionParameters) DeepCopyInto(out *HeaderActionParameters) {
	*out = *in
	if in.RequestHeadersToAdd != nil {
		in, out := &in.RequestHeadersToAdd, &out.RequestHeadersToAdd
		*out = make([]RequestHeadersToAddParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RequestHeadersToRemove != nil {
		in, out := &in.RequestHeadersToRemove, &out.RequestHeadersToRemove
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ResponseHeadersToAdd != nil {
		in, out := &in.ResponseHeadersToAdd, &out.ResponseHeadersToAdd
		*out = make([]ResponseHeadersToAddParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ResponseHeadersToRemove != nil {
		in, out := &in.ResponseHeadersToRemove, &out.ResponseHeadersToRemove
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HeaderActionParameters.
func (in *HeaderActionParameters) DeepCopy() *HeaderActionParameters {
	if in == nil {
		return nil
	}
	out := new(HeaderActionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HeaderActionRequestHeadersToAddInitParameters) DeepCopyInto(out *HeaderActionRequestHeadersToAddInitParameters) {
	*out = *in
	if in.HeaderName != nil {
		in, out := &in.HeaderName, &out.HeaderName
		*out = new(string)
		**out = **in
	}
	if in.HeaderValue != nil {
		in, out := &in.HeaderValue, &out.HeaderValue
		*out = new(string)
		**out = **in
	}
	if in.Replace != nil {
		in, out := &in.Replace, &out.Replace
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HeaderActionRequestHeadersToAddInitParameters.
func (in *HeaderActionRequestHeadersToAddInitParameters) DeepCopy() *HeaderActionRequestHeadersToAddInitParameters {
	if in == nil {
		return nil
	}
	out := new(HeaderActionRequestHeadersToAddInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HeaderActionRequestHeadersToAddObservation) DeepCopyInto(out *HeaderActionRequestHeadersToAddObservation) {
	*out = *in
	if in.HeaderName != nil {
		in, out := &in.HeaderName, &out.HeaderName
		*out = new(string)
		**out = **in
	}
	if in.HeaderValue != nil {
		in, out := &in.HeaderValue, &out.HeaderValue
		*out = new(string)
		**out = **in
	}
	if in.Replace != nil {
		in, out := &in.Replace, &out.Replace
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HeaderActionRequestHeadersToAddObservation.
func (in *HeaderActionRequestHeadersToAddObservation) DeepCopy() *HeaderActionRequestHeadersToAddObservation {
	if in == nil {
		return nil
	}
	out := new(HeaderActionRequestHeadersToAddObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HeaderActionRequestHeadersToAddParameters) DeepCopyInto(out *HeaderActionRequestHeadersToAddParameters) {
	*out = *in
	if in.HeaderName != nil {
		in, out := &in.HeaderName, &out.HeaderName
		*out = new(string)
		**out = **in
	}
	if in.HeaderValue != nil {
		in, out := &in.HeaderValue, &out.HeaderValue
		*out = new(string)
		**out = **in
	}
	if in.Replace != nil {
		in, out := &in.Replace, &out.Replace
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HeaderActionRequestHeadersToAddParameters.
func (in *HeaderActionRequestHeadersToAddParameters) DeepCopy() *HeaderActionRequestHeadersToAddParameters {
	if in == nil {
		return nil
	}
	out := new(HeaderActionRequestHeadersToAddParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HeaderActionResponseHeadersToAddInitParameters) DeepCopyInto(out *HeaderActionResponseHeadersToAddInitParameters) {
	*out = *in
	if in.HeaderName != nil {
		in, out := &in.HeaderName, &out.HeaderName
		*out = new(string)
		**out = **in
	}
	if in.HeaderValue != nil {
		in, out := &in.HeaderValue, &out.HeaderValue
		*out = new(string)
		**out = **in
	}
	if in.Replace != nil {
		in, out := &in.Replace, &out.Replace
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HeaderActionResponseHeadersToAddInitParameters.
func (in *HeaderActionResponseHeadersToAddInitParameters) DeepCopy() *HeaderActionResponseHeadersToAddInitParameters {
	if in == nil {
		return nil
	}
	out := new(HeaderActionResponseHeadersToAddInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HeaderActionResponseHeadersToAddObservation) DeepCopyInto(out *HeaderActionResponseHeadersToAddObservation) {
	*out = *in
	if in.HeaderName != nil {
		in, out := &in.HeaderName, &out.HeaderName
		*out = new(string)
		**out = **in
	}
	if in.HeaderValue != nil {
		in, out := &in.HeaderValue, &out.HeaderValue
		*out = new(string)
		**out = **in
	}
	if in.Replace != nil {
		in, out := &in.Replace, &out.Replace
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HeaderActionResponseHeadersToAddObservation.
func (in *HeaderActionResponseHeadersToAddObservation) DeepCopy() *HeaderActionResponseHeadersToAddObservation {
	if in == nil {
		return nil
	}
	out := new(HeaderActionResponseHeadersToAddObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HeaderActionResponseHeadersToAddParameters) DeepCopyInto(out *HeaderActionResponseHeadersToAddParameters) {
	*out = *in
	if in.HeaderName != nil {
		in, out := &in.HeaderName, &out.HeaderName
		*out = new(string)
		**out = **in
	}
	if in.HeaderValue != nil {
		in, out := &in.HeaderValue, &out.HeaderValue
		*out = new(string)
		**out = **in
	}
	if in.Replace != nil {
		in, out := &in.Replace, &out.Replace
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HeaderActionResponseHeadersToAddParameters.
func (in *HeaderActionResponseHeadersToAddParameters) DeepCopy() *HeaderActionResponseHeadersToAddParameters {
	if in == nil {
		return nil
	}
	out := new(HeaderActionResponseHeadersToAddParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HeaderMatchesInitParameters) DeepCopyInto(out *HeaderMatchesInitParameters) {
	*out = *in
	if in.ExactMatch != nil {
		in, out := &in.ExactMatch, &out.ExactMatch
		*out = new(string)
		**out = **in
	}
	if in.HeaderName != nil {
		in, out := &in.HeaderName, &out.HeaderName
		*out = new(string)
		**out = **in
	}
	if in.InvertMatch != nil {
		in, out := &in.InvertMatch, &out.InvertMatch
		*out = new(bool)
		**out = **in
	}
	if in.PrefixMatch != nil {
		in, out := &in.PrefixMatch, &out.PrefixMatch
		*out = new(string)
		**out = **in
	}
	if in.PresentMatch != nil {
		in, out := &in.PresentMatch, &out.PresentMatch
		*out = new(bool)
		**out = **in
	}
	if in.RangeMatch != nil {
		in, out := &in.RangeMatch, &out.RangeMatch
		*out = make([]RangeMatchInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RegexMatch != nil {
		in, out := &in.RegexMatch, &out.RegexMatch
		*out = new(string)
		**out = **in
	}
	if in.SuffixMatch != nil {
		in, out := &in.SuffixMatch, &out.SuffixMatch
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HeaderMatchesInitParameters.
func (in *HeaderMatchesInitParameters) DeepCopy() *HeaderMatchesInitParameters {
	if in == nil {
		return nil
	}
	out := new(HeaderMatchesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HeaderMatchesObservation) DeepCopyInto(out *HeaderMatchesObservation) {
	*out = *in
	if in.ExactMatch != nil {
		in, out := &in.ExactMatch, &out.ExactMatch
		*out = new(string)
		**out = **in
	}
	if in.HeaderName != nil {
		in, out := &in.HeaderName, &out.HeaderName
		*out = new(string)
		**out = **in
	}
	if in.InvertMatch != nil {
		in, out := &in.InvertMatch, &out.InvertMatch
		*out = new(bool)
		**out = **in
	}
	if in.PrefixMatch != nil {
		in, out := &in.PrefixMatch, &out.PrefixMatch
		*out = new(string)
		**out = **in
	}
	if in.PresentMatch != nil {
		in, out := &in.PresentMatch, &out.PresentMatch
		*out = new(bool)
		**out = **in
	}
	if in.RangeMatch != nil {
		in, out := &in.RangeMatch, &out.RangeMatch
		*out = make([]RangeMatchObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RegexMatch != nil {
		in, out := &in.RegexMatch, &out.RegexMatch
		*out = new(string)
		**out = **in
	}
	if in.SuffixMatch != nil {
		in, out := &in.SuffixMatch, &out.SuffixMatch
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HeaderMatchesObservation.
func (in *HeaderMatchesObservation) DeepCopy() *HeaderMatchesObservation {
	if in == nil {
		return nil
	}
	out := new(HeaderMatchesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HeaderMatchesParameters) DeepCopyInto(out *HeaderMatchesParameters) {
	*out = *in
	if in.ExactMatch != nil {
		in, out := &in.ExactMatch, &out.ExactMatch
		*out = new(string)
		**out = **in
	}
	if in.HeaderName != nil {
		in, out := &in.HeaderName, &out.HeaderName
		*out = new(string)
		**out = **in
	}
	if in.InvertMatch != nil {
		in, out := &in.InvertMatch, &out.InvertMatch
		*out = new(bool)
		**out = **in
	}
	if in.PrefixMatch != nil {
		in, out := &in.PrefixMatch, &out.PrefixMatch
		*out = new(string)
		**out = **in
	}
	if in.PresentMatch != nil {
		in, out := &in.PresentMatch, &out.PresentMatch
		*out = new(bool)
		**out = **in
	}
	if in.RangeMatch != nil {
		in, out := &in.RangeMatch, &out.RangeMatch
		*out = make([]RangeMatchParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RegexMatch != nil {
		in, out := &in.RegexMatch, &out.RegexMatch
		*out = new(string)
		**out = **in
	}
	if in.SuffixMatch != nil {
		in, out := &in.SuffixMatch, &out.SuffixMatch
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HeaderMatchesParameters.
func (in *HeaderMatchesParameters) DeepCopy() *HeaderMatchesParameters {
	if in == nil {
		return nil
	}
	out := new(HeaderMatchesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HeaderMatchesRangeMatchInitParameters) DeepCopyInto(out *HeaderMatchesRangeMatchInitParameters) {
	*out = *in
	if in.RangeEnd != nil {
		in, out := &in.RangeEnd, &out.RangeEnd
		*out = new(float64)
		**out = **in
	}
	if in.RangeStart != nil {
		in, out := &in.RangeStart, &out.RangeStart
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HeaderMatchesRangeMatchInitParameters.
func (in *HeaderMatchesRangeMatchInitParameters) DeepCopy() *HeaderMatchesRangeMatchInitParameters {
	if in == nil {
		return nil
	}
	out := new(HeaderMatchesRangeMatchInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HeaderMatchesRangeMatchObservation) DeepCopyInto(out *HeaderMatchesRangeMatchObservation) {
	*out = *in
	if in.RangeEnd != nil {
		in, out := &in.RangeEnd, &out.RangeEnd
		*out = new(float64)
		**out = **in
	}
	if in.RangeStart != nil {
		in, out := &in.RangeStart, &out.RangeStart
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HeaderMatchesRangeMatchObservation.
func (in *HeaderMatchesRangeMatchObservation) DeepCopy() *HeaderMatchesRangeMatchObservation {
	if in == nil {
		return nil
	}
	out := new(HeaderMatchesRangeMatchObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HeaderMatchesRangeMatchParameters) DeepCopyInto(out *HeaderMatchesRangeMatchParameters) {
	*out = *in
	if in.RangeEnd != nil {
		in, out := &in.RangeEnd, &out.RangeEnd
		*out = new(float64)
		**out = **in
	}
	if in.RangeStart != nil {
		in, out := &in.RangeStart, &out.RangeStart
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HeaderMatchesRangeMatchParameters.
func (in *HeaderMatchesRangeMatchParameters) DeepCopy() *HeaderMatchesRangeMatchParameters {
	if in == nil {
		return nil
	}
	out := new(HeaderMatchesRangeMatchParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HealthCheck) DeepCopyInto(out *HealthCheck) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HealthCheck.
func (in *HealthCheck) DeepCopy() *HealthCheck {
	if in == nil {
		return nil
	}
	out := new(HealthCheck)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *HealthCheck) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HealthCheckInitParameters) DeepCopyInto(out *HealthCheckInitParameters) {
	*out = *in
	if in.CheckIntervalSec != nil {
		in, out := &in.CheckIntervalSec, &out.CheckIntervalSec
		*out = new(float64)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.GRPCHealthCheck != nil {
		in, out := &in.GRPCHealthCheck, &out.GRPCHealthCheck
		*out = make([]GRPCHealthCheckInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HTTPHealthCheck != nil {
		in, out := &in.HTTPHealthCheck, &out.HTTPHealthCheck
		*out = make([]HTTPHealthCheckInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HTTPSHealthCheck != nil {
		in, out := &in.HTTPSHealthCheck, &out.HTTPSHealthCheck
		*out = make([]HTTPSHealthCheckInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HealthyThreshold != nil {
		in, out := &in.HealthyThreshold, &out.HealthyThreshold
		*out = new(float64)
		**out = **in
	}
	if in.Http2HealthCheck != nil {
		in, out := &in.Http2HealthCheck, &out.Http2HealthCheck
		*out = make([]Http2HealthCheckInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LogConfig != nil {
		in, out := &in.LogConfig, &out.LogConfig
		*out = make([]HealthCheckLogConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.SSLHealthCheck != nil {
		in, out := &in.SSLHealthCheck, &out.SSLHealthCheck
		*out = make([]SSLHealthCheckInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TCPHealthCheck != nil {
		in, out := &in.TCPHealthCheck, &out.TCPHealthCheck
		*out = make([]TCPHealthCheckInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TimeoutSec != nil {
		in, out := &in.TimeoutSec, &out.TimeoutSec
		*out = new(float64)
		**out = **in
	}
	if in.UnhealthyThreshold != nil {
		in, out := &in.UnhealthyThreshold, &out.UnhealthyThreshold
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HealthCheckInitParameters.
func (in *HealthCheckInitParameters) DeepCopy() *HealthCheckInitParameters {
	if in == nil {
		return nil
	}
	out := new(HealthCheckInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HealthCheckList) DeepCopyInto(out *HealthCheckList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]HealthCheck, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HealthCheckList.
func (in *HealthCheckList) DeepCopy() *HealthCheckList {
	if in == nil {
		return nil
	}
	out := new(HealthCheckList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *HealthCheckList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HealthCheckLogConfigInitParameters) DeepCopyInto(out *HealthCheckLogConfigInitParameters) {
	*out = *in
	if in.Enable != nil {
		in, out := &in.Enable, &out.Enable
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HealthCheckLogConfigInitParameters.
func (in *HealthCheckLogConfigInitParameters) DeepCopy() *HealthCheckLogConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(HealthCheckLogConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HealthCheckLogConfigObservation) DeepCopyInto(out *HealthCheckLogConfigObservation) {
	*out = *in
	if in.Enable != nil {
		in, out := &in.Enable, &out.Enable
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HealthCheckLogConfigObservation.
func (in *HealthCheckLogConfigObservation) DeepCopy() *HealthCheckLogConfigObservation {
	if in == nil {
		return nil
	}
	out := new(HealthCheckLogConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HealthCheckLogConfigParameters) DeepCopyInto(out *HealthCheckLogConfigParameters) {
	*out = *in
	if in.Enable != nil {
		in, out := &in.Enable, &out.Enable
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HealthCheckLogConfigParameters.
func (in *HealthCheckLogConfigParameters) DeepCopy() *HealthCheckLogConfigParameters {
	if in == nil {
		return nil
	}
	out := new(HealthCheckLogConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HealthCheckObservation) DeepCopyInto(out *HealthCheckObservation) {
	*out = *in
	if in.CheckIntervalSec != nil {
		in, out := &in.CheckIntervalSec, &out.CheckIntervalSec
		*out = new(float64)
		**out = **in
	}
	if in.CreationTimestamp != nil {
		in, out := &in.CreationTimestamp, &out.CreationTimestamp
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.GRPCHealthCheck != nil {
		in, out := &in.GRPCHealthCheck, &out.GRPCHealthCheck
		*out = make([]GRPCHealthCheckObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HTTPHealthCheck != nil {
		in, out := &in.HTTPHealthCheck, &out.HTTPHealthCheck
		*out = make([]HTTPHealthCheckObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HTTPSHealthCheck != nil {
		in, out := &in.HTTPSHealthCheck, &out.HTTPSHealthCheck
		*out = make([]HTTPSHealthCheckObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HealthyThreshold != nil {
		in, out := &in.HealthyThreshold, &out.HealthyThreshold
		*out = new(float64)
		**out = **in
	}
	if in.Http2HealthCheck != nil {
		in, out := &in.Http2HealthCheck, &out.Http2HealthCheck
		*out = make([]Http2HealthCheckObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.LogConfig != nil {
		in, out := &in.LogConfig, &out.LogConfig
		*out = make([]HealthCheckLogConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.SSLHealthCheck != nil {
		in, out := &in.SSLHealthCheck, &out.SSLHealthCheck
		*out = make([]SSLHealthCheckObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SelfLink != nil {
		in, out := &in.SelfLink, &out.SelfLink
		*out = new(string)
		**out = **in
	}
	if in.TCPHealthCheck != nil {
		in, out := &in.TCPHealthCheck, &out.TCPHealthCheck
		*out = make([]TCPHealthCheckObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TimeoutSec != nil {
		in, out := &in.TimeoutSec, &out.TimeoutSec
		*out = new(float64)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.UnhealthyThreshold != nil {
		in, out := &in.UnhealthyThreshold, &out.UnhealthyThreshold
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HealthCheckObservation.
func (in *HealthCheckObservation) DeepCopy() *HealthCheckObservation {
	if in == nil {
		return nil
	}
	out := new(HealthCheckObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HealthCheckParameters) DeepCopyInto(out *HealthCheckParameters) {
	*out = *in
	if in.CheckIntervalSec != nil {
		in, out := &in.CheckIntervalSec, &out.CheckIntervalSec
		*out = new(float64)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.GRPCHealthCheck != nil {
		in, out := &in.GRPCHealthCheck, &out.GRPCHealthCheck
		*out = make([]GRPCHealthCheckParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HTTPHealthCheck != nil {
		in, out := &in.HTTPHealthCheck, &out.HTTPHealthCheck
		*out = make([]HTTPHealthCheckParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HTTPSHealthCheck != nil {
		in, out := &in.HTTPSHealthCheck, &out.HTTPSHealthCheck
		*out = make([]HTTPSHealthCheckParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HealthyThreshold != nil {
		in, out := &in.HealthyThreshold, &out.HealthyThreshold
		*out = new(float64)
		**out = **in
	}
	if in.Http2HealthCheck != nil {
		in, out := &in.Http2HealthCheck, &out.Http2HealthCheck
		*out = make([]Http2HealthCheckParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LogConfig != nil {
		in, out := &in.LogConfig, &out.LogConfig
		*out = make([]HealthCheckLogConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.SSLHealthCheck != nil {
		in, out := &in.SSLHealthCheck, &out.SSLHealthCheck
		*out = make([]SSLHealthCheckParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TCPHealthCheck != nil {
		in, out := &in.TCPHealthCheck, &out.TCPHealthCheck
		*out = make([]TCPHealthCheckParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TimeoutSec != nil {
		in, out := &in.TimeoutSec, &out.TimeoutSec
		*out = new(float64)
		**out = **in
	}
	if in.UnhealthyThreshold != nil {
		in, out := &in.UnhealthyThreshold, &out.UnhealthyThreshold
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HealthCheckParameters.
func (in *HealthCheckParameters) DeepCopy() *HealthCheckParameters {
	if in == nil {
		return nil
	}
	out := new(HealthCheckParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HealthCheckSpec) DeepCopyInto(out *HealthCheckSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HealthCheckSpec.
func (in *HealthCheckSpec) DeepCopy() *HealthCheckSpec {
	if in == nil {
		return nil
	}
	out := new(HealthCheckSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HealthCheckStatus) DeepCopyInto(out *HealthCheckStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HealthCheckStatus.
func (in *HealthCheckStatus) DeepCopy() *HealthCheckStatus {
	if in == nil {
		return nil
	}
	out := new(HealthCheckStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HostRuleInitParameters) DeepCopyInto(out *HostRuleInitParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Hosts != nil {
		in, out := &in.Hosts, &out.Hosts
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.PathMatcher != nil {
		in, out := &in.PathMatcher, &out.PathMatcher
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HostRuleInitParameters.
func (in *HostRuleInitParameters) DeepCopy() *HostRuleInitParameters {
	if in == nil {
		return nil
	}
	out := new(HostRuleInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HostRuleObservation) DeepCopyInto(out *HostRuleObservation) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Hosts != nil {
		in, out := &in.Hosts, &out.Hosts
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.PathMatcher != nil {
		in, out := &in.PathMatcher, &out.PathMatcher
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HostRuleObservation.
func (in *HostRuleObservation) DeepCopy() *HostRuleObservation {
	if in == nil {
		return nil
	}
	out := new(HostRuleObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HostRuleParameters) DeepCopyInto(out *HostRuleParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Hosts != nil {
		in, out := &in.Hosts, &out.Hosts
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.PathMatcher != nil {
		in, out := &in.PathMatcher, &out.PathMatcher
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HostRuleParameters.
func (in *HostRuleParameters) DeepCopy() *HostRuleParameters {
	if in == nil {
		return nil
	}
	out := new(HostRuleParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HourlyScheduleInitParameters) DeepCopyInto(out *HourlyScheduleInitParameters) {
	*out = *in
	if in.HoursInCycle != nil {
		in, out := &in.HoursInCycle, &out.HoursInCycle
		*out = new(float64)
		**out = **in
	}
	if in.StartTime != nil {
		in, out := &in.StartTime, &out.StartTime
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HourlyScheduleInitParameters.
func (in *HourlyScheduleInitParameters) DeepCopy() *HourlyScheduleInitParameters {
	if in == nil {
		return nil
	}
	out := new(HourlyScheduleInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HourlyScheduleObservation) DeepCopyInto(out *HourlyScheduleObservation) {
	*out = *in
	if in.HoursInCycle != nil {
		in, out := &in.HoursInCycle, &out.HoursInCycle
		*out = new(float64)
		**out = **in
	}
	if in.StartTime != nil {
		in, out := &in.StartTime, &out.StartTime
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HourlyScheduleObservation.
func (in *HourlyScheduleObservation) DeepCopy() *HourlyScheduleObservation {
	if in == nil {
		return nil
	}
	out := new(HourlyScheduleObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HourlyScheduleParameters) DeepCopyInto(out *HourlyScheduleParameters) {
	*out = *in
	if in.HoursInCycle != nil {
		in, out := &in.HoursInCycle, &out.HoursInCycle
		*out = new(float64)
		**out = **in
	}
	if in.StartTime != nil {
		in, out := &in.StartTime, &out.StartTime
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HourlyScheduleParameters.
func (in *HourlyScheduleParameters) DeepCopy() *HourlyScheduleParameters {
	if in == nil {
		return nil
	}
	out := new(HourlyScheduleParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Http2HealthCheckInitParameters) DeepCopyInto(out *Http2HealthCheckInitParameters) {
	*out = *in
	if in.Host != nil {
		in, out := &in.Host, &out.Host
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
	if in.PortName != nil {
		in, out := &in.PortName, &out.PortName
		*out = new(string)
		**out = **in
	}
	if in.PortSpecification != nil {
		in, out := &in.PortSpecification, &out.PortSpecification
		*out = new(string)
		**out = **in
	}
	if in.ProxyHeader != nil {
		in, out := &in.ProxyHeader, &out.ProxyHeader
		*out = new(string)
		**out = **in
	}
	if in.RequestPath != nil {
		in, out := &in.RequestPath, &out.RequestPath
		*out = new(string)
		**out = **in
	}
	if in.Response != nil {
		in, out := &in.Response, &out.Response
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Http2HealthCheckInitParameters.
func (in *Http2HealthCheckInitParameters) DeepCopy() *Http2HealthCheckInitParameters {
	if in == nil {
		return nil
	}
	out := new(Http2HealthCheckInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Http2HealthCheckObservation) DeepCopyInto(out *Http2HealthCheckObservation) {
	*out = *in
	if in.Host != nil {
		in, out := &in.Host, &out.Host
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
	if in.PortName != nil {
		in, out := &in.PortName, &out.PortName
		*out = new(string)
		**out = **in
	}
	if in.PortSpecification != nil {
		in, out := &in.PortSpecification, &out.PortSpecification
		*out = new(string)
		**out = **in
	}
	if in.ProxyHeader != nil {
		in, out := &in.ProxyHeader, &out.ProxyHeader
		*out = new(string)
		**out = **in
	}
	if in.RequestPath != nil {
		in, out := &in.RequestPath, &out.RequestPath
		*out = new(string)
		**out = **in
	}
	if in.Response != nil {
		in, out := &in.Response, &out.Response
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Http2HealthCheckObservation.
func (in *Http2HealthCheckObservation) DeepCopy() *Http2HealthCheckObservation {
	if in == nil {
		return nil
	}
	out := new(Http2HealthCheckObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Http2HealthCheckParameters) DeepCopyInto(out *Http2HealthCheckParameters) {
	*out = *in
	if in.Host != nil {
		in, out := &in.Host, &out.Host
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
	if in.PortName != nil {
		in, out := &in.PortName, &out.PortName
		*out = new(string)
		**out = **in
	}
	if in.PortSpecification != nil {
		in, out := &in.PortSpecification, &out.PortSpecification
		*out = new(string)
		**out = **in
	}
	if in.ProxyHeader != nil {
		in, out := &in.ProxyHeader, &out.ProxyHeader
		*out = new(string)
		**out = **in
	}
	if in.RequestPath != nil {
		in, out := &in.RequestPath, &out.RequestPath
		*out = new(string)
		**out = **in
	}
	if in.Response != nil {
		in, out := &in.Response, &out.Response
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Http2HealthCheckParameters.
func (in *Http2HealthCheckParameters) DeepCopy() *Http2HealthCheckParameters {
	if in == nil {
		return nil
	}
	out := new(Http2HealthCheckParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IPAddressInitParameters) DeepCopyInto(out *IPAddressInitParameters) {
	*out = *in
	if in.Address != nil {
		in, out := &in.Address, &out.Address
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IPAddressInitParameters.
func (in *IPAddressInitParameters) DeepCopy() *IPAddressInitParameters {
	if in == nil {
		return nil
	}
	out := new(IPAddressInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IPAddressObservation) DeepCopyInto(out *IPAddressObservation) {
	*out = *in
	if in.Address != nil {
		in, out := &in.Address, &out.Address
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IPAddressObservation.
func (in *IPAddressObservation) DeepCopy() *IPAddressObservation {
	if in == nil {
		return nil
	}
	out := new(IPAddressObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IPAddressParameters) DeepCopyInto(out *IPAddressParameters) {
	*out = *in
	if in.Address != nil {
		in, out := &in.Address, &out.Address
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IPAddressParameters.
func (in *IPAddressParameters) DeepCopy() *IPAddressParameters {
	if in == nil {
		return nil
	}
	out := new(IPAddressParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IPv6AccessConfigInitParameters) DeepCopyInto(out *IPv6AccessConfigInitParameters) {
	*out = *in
	if in.ExternalIPv6 != nil {
		in, out := &in.ExternalIPv6, &out.ExternalIPv6
		*out = new(string)
		**out = **in
	}
	if in.ExternalIPv6PrefixLength != nil {
		in, out := &in.ExternalIPv6PrefixLength, &out.ExternalIPv6PrefixLength
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NetworkTier != nil {
		in, out := &in.NetworkTier, &out.NetworkTier
		*out = new(string)
		**out = **in
	}
	if in.PublicPtrDomainName != nil {
		in, out := &in.PublicPtrDomainName, &out.PublicPtrDomainName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IPv6AccessConfigInitParameters.
func (in *IPv6AccessConfigInitParameters) DeepCopy() *IPv6AccessConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(IPv6AccessConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IPv6AccessConfigObservation) DeepCopyInto(out *IPv6AccessConfigObservation) {
	*out = *in
	if in.ExternalIPv6 != nil {
		in, out := &in.ExternalIPv6, &out.ExternalIPv6
		*out = new(string)
		**out = **in
	}
	if in.ExternalIPv6PrefixLength != nil {
		in, out := &in.ExternalIPv6PrefixLength, &out.ExternalIPv6PrefixLength
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NetworkTier != nil {
		in, out := &in.NetworkTier, &out.NetworkTier
		*out = new(string)
		**out = **in
	}
	if in.PublicPtrDomainName != nil {
		in, out := &in.PublicPtrDomainName, &out.PublicPtrDomainName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IPv6AccessConfigObservation.
func (in *IPv6AccessConfigObservation) DeepCopy() *IPv6AccessConfigObservation {
	if in == nil {
		return nil
	}
	out := new(IPv6AccessConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IPv6AccessConfigParameters) DeepCopyInto(out *IPv6AccessConfigParameters) {
	*out = *in
	if in.ExternalIPv6 != nil {
		in, out := &in.ExternalIPv6, &out.ExternalIPv6
		*out = new(string)
		**out = **in
	}
	if in.ExternalIPv6PrefixLength != nil {
		in, out := &in.ExternalIPv6PrefixLength, &out.ExternalIPv6PrefixLength
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NetworkTier != nil {
		in, out := &in.NetworkTier, &out.NetworkTier
		*out = new(string)
		**out = **in
	}
	if in.PublicPtrDomainName != nil {
		in, out := &in.PublicPtrDomainName, &out.PublicPtrDomainName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IPv6AccessConfigParameters.
func (in *IPv6AccessConfigParameters) DeepCopy() *IPv6AccessConfigParameters {
	if in == nil {
		return nil
	}
	out := new(IPv6AccessConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IapInitParameters) DeepCopyInto(out *IapInitParameters) {
	*out = *in
	if in.Oauth2ClientID != nil {
		in, out := &in.Oauth2ClientID, &out.Oauth2ClientID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IapInitParameters.
func (in *IapInitParameters) DeepCopy() *IapInitParameters {
	if in == nil {
		return nil
	}
	out := new(IapInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IapObservation) DeepCopyInto(out *IapObservation) {
	*out = *in
	if in.Oauth2ClientID != nil {
		in, out := &in.Oauth2ClientID, &out.Oauth2ClientID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IapObservation.
func (in *IapObservation) DeepCopy() *IapObservation {
	if in == nil {
		return nil
	}
	out := new(IapObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IapParameters) DeepCopyInto(out *IapParameters) {
	*out = *in
	if in.Oauth2ClientID != nil {
		in, out := &in.Oauth2ClientID, &out.Oauth2ClientID
		*out = new(string)
		**out = **in
	}
	out.Oauth2ClientSecretSecretRef = in.Oauth2ClientSecretSecretRef
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IapParameters.
func (in *IapParameters) DeepCopy() *IapParameters {
	if in == nil {
		return nil
	}
	out := new(IapParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Image) DeepCopyInto(out *Image) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Image.
func (in *Image) DeepCopy() *Image {
	if in == nil {
		return nil
	}
	out := new(Image)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Image) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ImageEncryptionKeyInitParameters) DeepCopyInto(out *ImageEncryptionKeyInitParameters) {
	*out = *in
	if in.KMSKeySelfLink != nil {
		in, out := &in.KMSKeySelfLink, &out.KMSKeySelfLink
		*out = new(string)
		**out = **in
	}
	if in.KMSKeyServiceAccount != nil {
		in, out := &in.KMSKeyServiceAccount, &out.KMSKeyServiceAccount
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ImageEncryptionKeyInitParameters.
func (in *ImageEncryptionKeyInitParameters) DeepCopy() *ImageEncryptionKeyInitParameters {
	if in == nil {
		return nil
	}
	out := new(ImageEncryptionKeyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ImageEncryptionKeyObservation) DeepCopyInto(out *ImageEncryptionKeyObservation) {
	*out = *in
	if in.KMSKeySelfLink != nil {
		in, out := &in.KMSKeySelfLink, &out.KMSKeySelfLink
		*out = new(string)
		**out = **in
	}
	if in.KMSKeyServiceAccount != nil {
		in, out := &in.KMSKeyServiceAccount, &out.KMSKeyServiceAccount
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ImageEncryptionKeyObservation.
func (in *ImageEncryptionKeyObservation) DeepCopy() *ImageEncryptionKeyObservation {
	if in == nil {
		return nil
	}
	out := new(ImageEncryptionKeyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ImageEncryptionKeyParameters) DeepCopyInto(out *ImageEncryptionKeyParameters) {
	*out = *in
	if in.KMSKeySelfLink != nil {
		in, out := &in.KMSKeySelfLink, &out.KMSKeySelfLink
		*out = new(string)
		**out = **in
	}
	if in.KMSKeyServiceAccount != nil {
		in, out := &in.KMSKeyServiceAccount, &out.KMSKeyServiceAccount
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ImageEncryptionKeyParameters.
func (in *ImageEncryptionKeyParameters) DeepCopy() *ImageEncryptionKeyParameters {
	if in == nil {
		return nil
	}
	out := new(ImageEncryptionKeyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ImageGuestOsFeaturesInitParameters) DeepCopyInto(out *ImageGuestOsFeaturesInitParameters) {
	*out = *in
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ImageGuestOsFeaturesInitParameters.
func (in *ImageGuestOsFeaturesInitParameters) DeepCopy() *ImageGuestOsFeaturesInitParameters {
	if in == nil {
		return nil
	}
	out := new(ImageGuestOsFeaturesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ImageGuestOsFeaturesObservation) DeepCopyInto(out *ImageGuestOsFeaturesObservation) {
	*out = *in
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ImageGuestOsFeaturesObservation.
func (in *ImageGuestOsFeaturesObservation) DeepCopy() *ImageGuestOsFeaturesObservation {
	if in == nil {
		return nil
	}
	out := new(ImageGuestOsFeaturesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ImageGuestOsFeaturesParameters) DeepCopyInto(out *ImageGuestOsFeaturesParameters) {
	*out = *in
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ImageGuestOsFeaturesParameters.
func (in *ImageGuestOsFeaturesParameters) DeepCopy() *ImageGuestOsFeaturesParameters {
	if in == nil {
		return nil
	}
	out := new(ImageGuestOsFeaturesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ImageIAMMember) DeepCopyInto(out *ImageIAMMember) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ImageIAMMember.
func (in *ImageIAMMember) DeepCopy() *ImageIAMMember {
	if in == nil {
		return nil
	}
	out := new(ImageIAMMember)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ImageIAMMember) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ImageIAMMemberConditionInitParameters) DeepCopyInto(out *ImageIAMMemberConditionInitParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Expression != nil {
		in, out := &in.Expression, &out.Expression
		*out = new(string)
		**out = **in
	}
	if in.Title != nil {
		in, out := &in.Title, &out.Title
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ImageIAMMemberConditionInitParameters.
func (in *ImageIAMMemberConditionInitParameters) DeepCopy() *ImageIAMMemberConditionInitParameters {
	if in == nil {
		return nil
	}
	out := new(ImageIAMMemberConditionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ImageIAMMemberConditionObservation) DeepCopyInto(out *ImageIAMMemberConditionObservation) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Expression != nil {
		in, out := &in.Expression, &out.Expression
		*out = new(string)
		**out = **in
	}
	if in.Title != nil {
		in, out := &in.Title, &out.Title
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ImageIAMMemberConditionObservation.
func (in *ImageIAMMemberConditionObservation) DeepCopy() *ImageIAMMemberConditionObservation {
	if in == nil {
		return nil
	}
	out := new(ImageIAMMemberConditionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ImageIAMMemberConditionParameters) DeepCopyInto(out *ImageIAMMemberConditionParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Expression != nil {
		in, out := &in.Expression, &out.Expression
		*out = new(string)
		**out = **in
	}
	if in.Title != nil {
		in, out := &in.Title, &out.Title
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ImageIAMMemberConditionParameters.
func (in *ImageIAMMemberConditionParameters) DeepCopy() *ImageIAMMemberConditionParameters {
	if in == nil {
		return nil
	}
	out := new(ImageIAMMemberConditionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ImageIAMMemberInitParameters) DeepCopyInto(out *ImageIAMMemberInitParameters) {
	*out = *in
	if in.Condition != nil {
		in, out := &in.Condition, &out.Condition
		*out = make([]ImageIAMMemberConditionInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Image != nil {
		in, out := &in.Image, &out.Image
		*out = new(string)
		**out = **in
	}
	if in.ImageRef != nil {
		in, out := &in.ImageRef, &out.ImageRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ImageSelector != nil {
		in, out := &in.ImageSelector, &out.ImageSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Member != nil {
		in, out := &in.Member, &out.Member
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Role != nil {
		in, out := &in.Role, &out.Role
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ImageIAMMemberInitParameters.
func (in *ImageIAMMemberInitParameters) DeepCopy() *ImageIAMMemberInitParameters {
	if in == nil {
		return nil
	}
	out := new(ImageIAMMemberInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ImageIAMMemberList) DeepCopyInto(out *ImageIAMMemberList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ImageIAMMember, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ImageIAMMemberList.
func (in *ImageIAMMemberList) DeepCopy() *ImageIAMMemberList {
	if in == nil {
		return nil
	}
	out := new(ImageIAMMemberList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ImageIAMMemberList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ImageIAMMemberObservation) DeepCopyInto(out *ImageIAMMemberObservation) {
	*out = *in
	if in.Condition != nil {
		in, out := &in.Condition, &out.Condition
		*out = make([]ImageIAMMemberConditionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Etag != nil {
		in, out := &in.Etag, &out.Etag
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Image != nil {
		in, out := &in.Image, &out.Image
		*out = new(string)
		**out = **in
	}
	if in.Member != nil {
		in, out := &in.Member, &out.Member
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Role != nil {
		in, out := &in.Role, &out.Role
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ImageIAMMemberObservation.
func (in *ImageIAMMemberObservation) DeepCopy() *ImageIAMMemberObservation {
	if in == nil {
		return nil
	}
	out := new(ImageIAMMemberObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ImageIAMMemberParameters) DeepCopyInto(out *ImageIAMMemberParameters) {
	*out = *in
	if in.Condition != nil {
		in, out := &in.Condition, &out.Condition
		*out = make([]ImageIAMMemberConditionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Image != nil {
		in, out := &in.Image, &out.Image
		*out = new(string)
		**out = **in
	}
	if in.ImageRef != nil {
		in, out := &in.ImageRef, &out.ImageRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ImageSelector != nil {
		in, out := &in.ImageSelector, &out.ImageSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Member != nil {
		in, out := &in.Member, &out.Member
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Role != nil {
		in, out := &in.Role, &out.Role
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ImageIAMMemberParameters.
func (in *ImageIAMMemberParameters) DeepCopy() *ImageIAMMemberParameters {
	if in == nil {
		return nil
	}
	out := new(ImageIAMMemberParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ImageIAMMemberSpec) DeepCopyInto(out *ImageIAMMemberSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ImageIAMMemberSpec.
func (in *ImageIAMMemberSpec) DeepCopy() *ImageIAMMemberSpec {
	if in == nil {
		return nil
	}
	out := new(ImageIAMMemberSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ImageIAMMemberStatus) DeepCopyInto(out *ImageIAMMemberStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ImageIAMMemberStatus.
func (in *ImageIAMMemberStatus) DeepCopy() *ImageIAMMemberStatus {
	if in == nil {
		return nil
	}
	out := new(ImageIAMMemberStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ImageInitParameters) DeepCopyInto(out *ImageInitParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DiskSizeGb != nil {
		in, out := &in.DiskSizeGb, &out.DiskSizeGb
		*out = new(float64)
		**out = **in
	}
	if in.Family != nil {
		in, out := &in.Family, &out.Family
		*out = new(string)
		**out = **in
	}
	if in.GuestOsFeatures != nil {
		in, out := &in.GuestOsFeatures, &out.GuestOsFeatures
		*out = make([]ImageGuestOsFeaturesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ImageEncryptionKey != nil {
		in, out := &in.ImageEncryptionKey, &out.ImageEncryptionKey
		*out = make([]ImageEncryptionKeyInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Licenses != nil {
		in, out := &in.Licenses, &out.Licenses
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.RawDisk != nil {
		in, out := &in.RawDisk, &out.RawDisk
		*out = make([]RawDiskInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SourceDisk != nil {
		in, out := &in.SourceDisk, &out.SourceDisk
		*out = new(string)
		**out = **in
	}
	if in.SourceImage != nil {
		in, out := &in.SourceImage, &out.SourceImage
		*out = new(string)
		**out = **in
	}
	if in.SourceSnapshot != nil {
		in, out := &in.SourceSnapshot, &out.SourceSnapshot
		*out = new(string)
		**out = **in
	}
	if in.StorageLocations != nil {
		in, out := &in.StorageLocations, &out.StorageLocations
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ImageInitParameters.
func (in *ImageInitParameters) DeepCopy() *ImageInitParameters {
	if in == nil {
		return nil
	}
	out := new(ImageInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ImageList) DeepCopyInto(out *ImageList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Image, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ImageList.
func (in *ImageList) DeepCopy() *ImageList {
	if in == nil {
		return nil
	}
	out := new(ImageList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ImageList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ImageObservation) DeepCopyInto(out *ImageObservation) {
	*out = *in
	if in.ArchiveSizeBytes != nil {
		in, out := &in.ArchiveSizeBytes, &out.ArchiveSizeBytes
		*out = new(float64)
		**out = **in
	}
	if in.CreationTimestamp != nil {
		in, out := &in.CreationTimestamp, &out.CreationTimestamp
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DiskSizeGb != nil {
		in, out := &in.DiskSizeGb, &out.DiskSizeGb
		*out = new(float64)
		**out = **in
	}
	if in.EffectiveLabels != nil {
		in, out := &in.EffectiveLabels, &out.EffectiveLabels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Family != nil {
		in, out := &in.Family, &out.Family
		*out = new(string)
		**out = **in
	}
	if in.GuestOsFeatures != nil {
		in, out := &in.GuestOsFeatures, &out.GuestOsFeatures
		*out = make([]ImageGuestOsFeaturesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.ImageEncryptionKey != nil {
		in, out := &in.ImageEncryptionKey, &out.ImageEncryptionKey
		*out = make([]ImageEncryptionKeyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LabelFingerprint != nil {
		in, out := &in.LabelFingerprint, &out.LabelFingerprint
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Licenses != nil {
		in, out := &in.Licenses, &out.Licenses
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.RawDisk != nil {
		in, out := &in.RawDisk, &out.RawDisk
		*out = make([]RawDiskObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SelfLink != nil {
		in, out := &in.SelfLink, &out.SelfLink
		*out = new(string)
		**out = **in
	}
	if in.SourceDisk != nil {
		in, out := &in.SourceDisk, &out.SourceDisk
		*out = new(string)
		**out = **in
	}
	if in.SourceImage != nil {
		in, out := &in.SourceImage, &out.SourceImage
		*out = new(string)
		**out = **in
	}
	if in.SourceSnapshot != nil {
		in, out := &in.SourceSnapshot, &out.SourceSnapshot
		*out = new(string)
		**out = **in
	}
	if in.StorageLocations != nil {
		in, out := &in.StorageLocations, &out.StorageLocations
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.TerraformLabels != nil {
		in, out := &in.TerraformLabels, &out.TerraformLabels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ImageObservation.
func (in *ImageObservation) DeepCopy() *ImageObservation {
	if in == nil {
		return nil
	}
	out := new(ImageObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ImageParameters) DeepCopyInto(out *ImageParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DiskSizeGb != nil {
		in, out := &in.DiskSizeGb, &out.DiskSizeGb
		*out = new(float64)
		**out = **in
	}
	if in.Family != nil {
		in, out := &in.Family, &out.Family
		*out = new(string)
		**out = **in
	}
	if in.GuestOsFeatures != nil {
		in, out := &in.GuestOsFeatures, &out.GuestOsFeatures
		*out = make([]ImageGuestOsFeaturesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ImageEncryptionKey != nil {
		in, out := &in.ImageEncryptionKey, &out.ImageEncryptionKey
		*out = make([]ImageEncryptionKeyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Licenses != nil {
		in, out := &in.Licenses, &out.Licenses
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.RawDisk != nil {
		in, out := &in.RawDisk, &out.RawDisk
		*out = make([]RawDiskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SourceDisk != nil {
		in, out := &in.SourceDisk, &out.SourceDisk
		*out = new(string)
		**out = **in
	}
	if in.SourceImage != nil {
		in, out := &in.SourceImage, &out.SourceImage
		*out = new(string)
		**out = **in
	}
	if in.SourceSnapshot != nil {
		in, out := &in.SourceSnapshot, &out.SourceSnapshot
		*out = new(string)
		**out = **in
	}
	if in.StorageLocations != nil {
		in, out := &in.StorageLocations, &out.StorageLocations
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ImageParameters.
func (in *ImageParameters) DeepCopy() *ImageParameters {
	if in == nil {
		return nil
	}
	out := new(ImageParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ImageSpec) DeepCopyInto(out *ImageSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ImageSpec.
func (in *ImageSpec) DeepCopy() *ImageSpec {
	if in == nil {
		return nil
	}
	out := new(ImageSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ImageStatus) DeepCopyInto(out *ImageStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ImageStatus.
func (in *ImageStatus) DeepCopy() *ImageStatus {
	if in == nil {
		return nil
	}
	out := new(ImageStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InitializeParamsInitParameters) DeepCopyInto(out *InitializeParamsInitParameters) {
	*out = *in
	if in.EnableConfidentialCompute != nil {
		in, out := &in.EnableConfidentialCompute, &out.EnableConfidentialCompute
		*out = new(bool)
		**out = **in
	}
	if in.Image != nil {
		in, out := &in.Image, &out.Image
		*out = new(string)
		**out = **in
	}
	if in.ImageRef != nil {
		in, out := &in.ImageRef, &out.ImageRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ImageSelector != nil {
		in, out := &in.ImageSelector, &out.ImageSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.ProvisionedIops != nil {
		in, out := &in.ProvisionedIops, &out.ProvisionedIops
		*out = new(float64)
		**out = **in
	}
	if in.ProvisionedThroughput != nil {
		in, out := &in.ProvisionedThroughput, &out.ProvisionedThroughput
		*out = new(float64)
		**out = **in
	}
	if in.ResourceManagerTags != nil {
		in, out := &in.ResourceManagerTags, &out.ResourceManagerTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(float64)
		**out = **in
	}
	if in.StoragePool != nil {
		in, out := &in.StoragePool, &out.StoragePool
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InitializeParamsInitParameters.
func (in *InitializeParamsInitParameters) DeepCopy() *InitializeParamsInitParameters {
	if in == nil {
		return nil
	}
	out := new(InitializeParamsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InitializeParamsObservation) DeepCopyInto(out *InitializeParamsObservation) {
	*out = *in
	if in.EnableConfidentialCompute != nil {
		in, out := &in.EnableConfidentialCompute, &out.EnableConfidentialCompute
		*out = new(bool)
		**out = **in
	}
	if in.Image != nil {
		in, out := &in.Image, &out.Image
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.ProvisionedIops != nil {
		in, out := &in.ProvisionedIops, &out.ProvisionedIops
		*out = new(float64)
		**out = **in
	}
	if in.ProvisionedThroughput != nil {
		in, out := &in.ProvisionedThroughput, &out.ProvisionedThroughput
		*out = new(float64)
		**out = **in
	}
	if in.ResourceManagerTags != nil {
		in, out := &in.ResourceManagerTags, &out.ResourceManagerTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(float64)
		**out = **in
	}
	if in.StoragePool != nil {
		in, out := &in.StoragePool, &out.StoragePool
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InitializeParamsObservation.
func (in *InitializeParamsObservation) DeepCopy() *InitializeParamsObservation {
	if in == nil {
		return nil
	}
	out := new(InitializeParamsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InitializeParamsParameters) DeepCopyInto(out *InitializeParamsParameters) {
	*out = *in
	if in.EnableConfidentialCompute != nil {
		in, out := &in.EnableConfidentialCompute, &out.EnableConfidentialCompute
		*out = new(bool)
		**out = **in
	}
	if in.Image != nil {
		in, out := &in.Image, &out.Image
		*out = new(string)
		**out = **in
	}
	if in.ImageRef != nil {
		in, out := &in.ImageRef, &out.ImageRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ImageSelector != nil {
		in, out := &in.ImageSelector, &out.ImageSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.ProvisionedIops != nil {
		in, out := &in.ProvisionedIops, &out.ProvisionedIops
		*out = new(float64)
		**out = **in
	}
	if in.ProvisionedThroughput != nil {
		in, out := &in.ProvisionedThroughput, &out.ProvisionedThroughput
		*out = new(float64)
		**out = **in
	}
	if in.ResourceManagerTags != nil {
		in, out := &in.ResourceManagerTags, &out.ResourceManagerTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(float64)
		**out = **in
	}
	if in.StoragePool != nil {
		in, out := &in.StoragePool, &out.StoragePool
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InitializeParamsParameters.
func (in *InitializeParamsParameters) DeepCopy() *InitializeParamsParameters {
	if in == nil {
		return nil
	}
	out := new(InitializeParamsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Instance) DeepCopyInto(out *Instance) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Instance.
func (in *Instance) DeepCopy() *Instance {
	if in == nil {
		return nil
	}
	out := new(Instance)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Instance) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceAttachedDiskInitParameters) DeepCopyInto(out *InstanceAttachedDiskInitParameters) {
	*out = *in
	if in.DeviceName != nil {
		in, out := &in.DeviceName, &out.DeviceName
		*out = new(string)
		**out = **in
	}
	if in.KMSKeySelfLink != nil {
		in, out := &in.KMSKeySelfLink, &out.KMSKeySelfLink
		*out = new(string)
		**out = **in
	}
	if in.Mode != nil {
		in, out := &in.Mode, &out.Mode
		*out = new(string)
		**out = **in
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceAttachedDiskInitParameters.
func (in *InstanceAttachedDiskInitParameters) DeepCopy() *InstanceAttachedDiskInitParameters {
	if in == nil {
		return nil
	}
	out := new(InstanceAttachedDiskInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceAttachedDiskObservation) DeepCopyInto(out *InstanceAttachedDiskObservation) {
	*out = *in
	if in.DeviceName != nil {
		in, out := &in.DeviceName, &out.DeviceName
		*out = new(string)
		**out = **in
	}
	if in.DiskEncryptionKeySha256 != nil {
		in, out := &in.DiskEncryptionKeySha256, &out.DiskEncryptionKeySha256
		*out = new(string)
		**out = **in
	}
	if in.KMSKeySelfLink != nil {
		in, out := &in.KMSKeySelfLink, &out.KMSKeySelfLink
		*out = new(string)
		**out = **in
	}
	if in.Mode != nil {
		in, out := &in.Mode, &out.Mode
		*out = new(string)
		**out = **in
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceAttachedDiskObservation.
func (in *InstanceAttachedDiskObservation) DeepCopy() *InstanceAttachedDiskObservation {
	if in == nil {
		return nil
	}
	out := new(InstanceAttachedDiskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceAttachedDiskParameters) DeepCopyInto(out *InstanceAttachedDiskParameters) {
	*out = *in
	if in.DeviceName != nil {
		in, out := &in.DeviceName, &out.DeviceName
		*out = new(string)
		**out = **in
	}
	if in.DiskEncryptionKeyRawSecretRef != nil {
		in, out := &in.DiskEncryptionKeyRawSecretRef, &out.DiskEncryptionKeyRawSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.KMSKeySelfLink != nil {
		in, out := &in.KMSKeySelfLink, &out.KMSKeySelfLink
		*out = new(string)
		**out = **in
	}
	if in.Mode != nil {
		in, out := &in.Mode, &out.Mode
		*out = new(string)
		**out = **in
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceAttachedDiskParameters.
func (in *InstanceAttachedDiskParameters) DeepCopy() *InstanceAttachedDiskParameters {
	if in == nil {
		return nil
	}
	out := new(InstanceAttachedDiskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceFromTemplate) DeepCopyInto(out *InstanceFromTemplate) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceFromTemplate.
func (in *InstanceFromTemplate) DeepCopy() *InstanceFromTemplate {
	if in == nil {
		return nil
	}
	out := new(InstanceFromTemplate)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *InstanceFromTemplate) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceFromTemplateAdvancedMachineFeaturesInitParameters) DeepCopyInto(out *InstanceFromTemplateAdvancedMachineFeaturesInitParameters) {
	*out = *in
	if in.EnableNestedVirtualization != nil {
		in, out := &in.EnableNestedVirtualization, &out.EnableNestedVirtualization
		*out = new(bool)
		**out = **in
	}
	if in.ThreadsPerCore != nil {
		in, out := &in.ThreadsPerCore, &out.ThreadsPerCore
		*out = new(float64)
		**out = **in
	}
	if in.VisibleCoreCount != nil {
		in, out := &in.VisibleCoreCount, &out.VisibleCoreCount
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceFromTemplateAdvancedMachineFeaturesInitParameters.
func (in *InstanceFromTemplateAdvancedMachineFeaturesInitParameters) DeepCopy() *InstanceFromTemplateAdvancedMachineFeaturesInitParameters {
	if in == nil {
		return nil
	}
	out := new(InstanceFromTemplateAdvancedMachineFeaturesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceFromTemplateAdvancedMachineFeaturesObservation) DeepCopyInto(out *InstanceFromTemplateAdvancedMachineFeaturesObservation) {
	*out = *in
	if in.EnableNestedVirtualization != nil {
		in, out := &in.EnableNestedVirtualization, &out.EnableNestedVirtualization
		*out = new(bool)
		**out = **in
	}
	if in.ThreadsPerCore != nil {
		in, out := &in.ThreadsPerCore, &out.ThreadsPerCore
		*out = new(float64)
		**out = **in
	}
	if in.VisibleCoreCount != nil {
		in, out := &in.VisibleCoreCount, &out.VisibleCoreCount
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceFromTemplateAdvancedMachineFeaturesObservation.
func (in *InstanceFromTemplateAdvancedMachineFeaturesObservation) DeepCopy() *InstanceFromTemplateAdvancedMachineFeaturesObservation {
	if in == nil {
		return nil
	}
	out := new(InstanceFromTemplateAdvancedMachineFeaturesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceFromTemplateAdvancedMachineFeaturesParameters) DeepCopyInto(out *InstanceFromTemplateAdvancedMachineFeaturesParameters) {
	*out = *in
	if in.EnableNestedVirtualization != nil {
		in, out := &in.EnableNestedVirtualization, &out.EnableNestedVirtualization
		*out = new(bool)
		**out = **in
	}
	if in.ThreadsPerCore != nil {
		in, out := &in.ThreadsPerCore, &out.ThreadsPerCore
		*out = new(float64)
		**out = **in
	}
	if in.VisibleCoreCount != nil {
		in, out := &in.VisibleCoreCount, &out.VisibleCoreCount
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceFromTemplateAdvancedMachineFeaturesParameters.
func (in *InstanceFromTemplateAdvancedMachineFeaturesParameters) DeepCopy() *InstanceFromTemplateAdvancedMachineFeaturesParameters {
	if in == nil {
		return nil
	}
	out := new(InstanceFromTemplateAdvancedMachineFeaturesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceFromTemplateAttachedDiskInitParameters) DeepCopyInto(out *InstanceFromTemplateAttachedDiskInitParameters) {
	*out = *in
	if in.DeviceName != nil {
		in, out := &in.DeviceName, &out.DeviceName
		*out = new(string)
		**out = **in
	}
	if in.DiskEncryptionKeyRaw != nil {
		in, out := &in.DiskEncryptionKeyRaw, &out.DiskEncryptionKeyRaw
		*out = new(string)
		**out = **in
	}
	if in.DiskEncryptionKeySha256 != nil {
		in, out := &in.DiskEncryptionKeySha256, &out.DiskEncryptionKeySha256
		*out = new(string)
		**out = **in
	}
	if in.KMSKeySelfLink != nil {
		in, out := &in.KMSKeySelfLink, &out.KMSKeySelfLink
		*out = new(string)
		**out = **in
	}
	if in.Mode != nil {
		in, out := &in.Mode, &out.Mode
		*out = new(string)
		**out = **in
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceFromTemplateAttachedDiskInitParameters.
func (in *InstanceFromTemplateAttachedDiskInitParameters) DeepCopy() *InstanceFromTemplateAttachedDiskInitParameters {
	if in == nil {
		return nil
	}
	out := new(InstanceFromTemplateAttachedDiskInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceFromTemplateAttachedDiskObservation) DeepCopyInto(out *InstanceFromTemplateAttachedDiskObservation) {
	*out = *in
	if in.DeviceName != nil {
		in, out := &in.DeviceName, &out.DeviceName
		*out = new(string)
		**out = **in
	}
	if in.DiskEncryptionKeyRaw != nil {
		in, out := &in.DiskEncryptionKeyRaw, &out.DiskEncryptionKeyRaw
		*out = new(string)
		**out = **in
	}
	if in.DiskEncryptionKeySha256 != nil {
		in, out := &in.DiskEncryptionKeySha256, &out.DiskEncryptionKeySha256
		*out = new(string)
		**out = **in
	}
	if in.KMSKeySelfLink != nil {
		in, out := &in.KMSKeySelfLink, &out.KMSKeySelfLink
		*out = new(string)
		**out = **in
	}
	if in.Mode != nil {
		in, out := &in.Mode, &out.Mode
		*out = new(string)
		**out = **in
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceFromTemplateAttachedDiskObservation.
func (in *InstanceFromTemplateAttachedDiskObservation) DeepCopy() *InstanceFromTemplateAttachedDiskObservation {
	if in == nil {
		return nil
	}
	out := new(InstanceFromTemplateAttachedDiskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceFromTemplateAttachedDiskParameters) DeepCopyInto(out *InstanceFromTemplateAttachedDiskParameters) {
	*out = *in
	if in.DeviceName != nil {
		in, out := &in.DeviceName, &out.DeviceName
		*out = new(string)
		**out = **in
	}
	if in.DiskEncryptionKeyRaw != nil {
		in, out := &in.DiskEncryptionKeyRaw, &out.DiskEncryptionKeyRaw
		*out = new(string)
		**out = **in
	}
	if in.DiskEncryptionKeySha256 != nil {
		in, out := &in.DiskEncryptionKeySha256, &out.DiskEncryptionKeySha256
		*out = new(string)
		**out = **in
	}
	if in.KMSKeySelfLink != nil {
		in, out := &in.KMSKeySelfLink, &out.KMSKeySelfLink
		*out = new(string)
		**out = **in
	}
	if in.Mode != nil {
		in, out := &in.Mode, &out.Mode
		*out = new(string)
		**out = **in
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceFromTemplateAttachedDiskParameters.
func (in *InstanceFromTemplateAttachedDiskParameters) DeepCopy() *InstanceFromTemplateAttachedDiskParameters {
	if in == nil {
		return nil
	}
	out := new(InstanceFromTemplateAttachedDiskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceFromTemplateBootDiskInitParameters) DeepCopyInto(out *InstanceFromTemplateBootDiskInitParameters) {
	*out = *in
	if in.AutoDelete != nil {
		in, out := &in.AutoDelete, &out.AutoDelete
		*out = new(bool)
		**out = **in
	}
	if in.DeviceName != nil {
		in, out := &in.DeviceName, &out.DeviceName
		*out = new(string)
		**out = **in
	}
	if in.DiskEncryptionKeyRawSecretRef != nil {
		in, out := &in.DiskEncryptionKeyRawSecretRef, &out.DiskEncryptionKeyRawSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.InitializeParams != nil {
		in, out := &in.InitializeParams, &out.InitializeParams
		*out = make([]BootDiskInitializeParamsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.KMSKeySelfLink != nil {
		in, out := &in.KMSKeySelfLink, &out.KMSKeySelfLink
		*out = new(string)
		**out = **in
	}
	if in.Mode != nil {
		in, out := &in.Mode, &out.Mode
		*out = new(string)
		**out = **in
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceFromTemplateBootDiskInitParameters.
func (in *InstanceFromTemplateBootDiskInitParameters) DeepCopy() *InstanceFromTemplateBootDiskInitParameters {
	if in == nil {
		return nil
	}
	out := new(InstanceFromTemplateBootDiskInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceFromTemplateBootDiskObservation) DeepCopyInto(out *InstanceFromTemplateBootDiskObservation) {
	*out = *in
	if in.AutoDelete != nil {
		in, out := &in.AutoDelete, &out.AutoDelete
		*out = new(bool)
		**out = **in
	}
	if in.DeviceName != nil {
		in, out := &in.DeviceName, &out.DeviceName
		*out = new(string)
		**out = **in
	}
	if in.DiskEncryptionKeySha256 != nil {
		in, out := &in.DiskEncryptionKeySha256, &out.DiskEncryptionKeySha256
		*out = new(string)
		**out = **in
	}
	if in.InitializeParams != nil {
		in, out := &in.InitializeParams, &out.InitializeParams
		*out = make([]BootDiskInitializeParamsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.KMSKeySelfLink != nil {
		in, out := &in.KMSKeySelfLink, &out.KMSKeySelfLink
		*out = new(string)
		**out = **in
	}
	if in.Mode != nil {
		in, out := &in.Mode, &out.Mode
		*out = new(string)
		**out = **in
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceFromTemplateBootDiskObservation.
func (in *InstanceFromTemplateBootDiskObservation) DeepCopy() *InstanceFromTemplateBootDiskObservation {
	if in == nil {
		return nil
	}
	out := new(InstanceFromTemplateBootDiskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceFromTemplateBootDiskParameters) DeepCopyInto(out *InstanceFromTemplateBootDiskParameters) {
	*out = *in
	if in.AutoDelete != nil {
		in, out := &in.AutoDelete, &out.AutoDelete
		*out = new(bool)
		**out = **in
	}
	if in.DeviceName != nil {
		in, out := &in.DeviceName, &out.DeviceName
		*out = new(string)
		**out = **in
	}
	if in.DiskEncryptionKeyRawSecretRef != nil {
		in, out := &in.DiskEncryptionKeyRawSecretRef, &out.DiskEncryptionKeyRawSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.InitializeParams != nil {
		in, out := &in.InitializeParams, &out.InitializeParams
		*out = make([]BootDiskInitializeParamsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.KMSKeySelfLink != nil {
		in, out := &in.KMSKeySelfLink, &out.KMSKeySelfLink
		*out = new(string)
		**out = **in
	}
	if in.Mode != nil {
		in, out := &in.Mode, &out.Mode
		*out = new(string)
		**out = **in
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceFromTemplateBootDiskParameters.
func (in *InstanceFromTemplateBootDiskParameters) DeepCopy() *InstanceFromTemplateBootDiskParameters {
	if in == nil {
		return nil
	}
	out := new(InstanceFromTemplateBootDiskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceFromTemplateConfidentialInstanceConfigInitParameters) DeepCopyInto(out *InstanceFromTemplateConfidentialInstanceConfigInitParameters) {
	*out = *in
	if in.ConfidentialInstanceType != nil {
		in, out := &in.ConfidentialInstanceType, &out.ConfidentialInstanceType
		*out = new(string)
		**out = **in
	}
	if in.EnableConfidentialCompute != nil {
		in, out := &in.EnableConfidentialCompute, &out.EnableConfidentialCompute
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceFromTemplateConfidentialInstanceConfigInitParameters.
func (in *InstanceFromTemplateConfidentialInstanceConfigInitParameters) DeepCopy() *InstanceFromTemplateConfidentialInstanceConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(InstanceFromTemplateConfidentialInstanceConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceFromTemplateConfidentialInstanceConfigObservation) DeepCopyInto(out *InstanceFromTemplateConfidentialInstanceConfigObservation) {
	*out = *in
	if in.ConfidentialInstanceType != nil {
		in, out := &in.ConfidentialInstanceType, &out.ConfidentialInstanceType
		*out = new(string)
		**out = **in
	}
	if in.EnableConfidentialCompute != nil {
		in, out := &in.EnableConfidentialCompute, &out.EnableConfidentialCompute
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceFromTemplateConfidentialInstanceConfigObservation.
func (in *InstanceFromTemplateConfidentialInstanceConfigObservation) DeepCopy() *InstanceFromTemplateConfidentialInstanceConfigObservation {
	if in == nil {
		return nil
	}
	out := new(InstanceFromTemplateConfidentialInstanceConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceFromTemplateConfidentialInstanceConfigParameters) DeepCopyInto(out *InstanceFromTemplateConfidentialInstanceConfigParameters) {
	*out = *in
	if in.ConfidentialInstanceType != nil {
		in, out := &in.ConfidentialInstanceType, &out.ConfidentialInstanceType
		*out = new(string)
		**out = **in
	}
	if in.EnableConfidentialCompute != nil {
		in, out := &in.EnableConfidentialCompute, &out.EnableConfidentialCompute
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceFromTemplateConfidentialInstanceConfigParameters.
func (in *InstanceFromTemplateConfidentialInstanceConfigParameters) DeepCopy() *InstanceFromTemplateConfidentialInstanceConfigParameters {
	if in == nil {
		return nil
	}
	out := new(InstanceFromTemplateConfidentialInstanceConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceFromTemplateGuestAcceleratorInitParameters) DeepCopyInto(out *InstanceFromTemplateGuestAcceleratorInitParameters) {
	*out = *in
	if in.Count != nil {
		in, out := &in.Count, &out.Count
		*out = new(float64)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceFromTemplateGuestAcceleratorInitParameters.
func (in *InstanceFromTemplateGuestAcceleratorInitParameters) DeepCopy() *InstanceFromTemplateGuestAcceleratorInitParameters {
	if in == nil {
		return nil
	}
	out := new(InstanceFromTemplateGuestAcceleratorInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceFromTemplateGuestAcceleratorObservation) DeepCopyInto(out *InstanceFromTemplateGuestAcceleratorObservation) {
	*out = *in
	if in.Count != nil {
		in, out := &in.Count, &out.Count
		*out = new(float64)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceFromTemplateGuestAcceleratorObservation.
func (in *InstanceFromTemplateGuestAcceleratorObservation) DeepCopy() *InstanceFromTemplateGuestAcceleratorObservation {
	if in == nil {
		return nil
	}
	out := new(InstanceFromTemplateGuestAcceleratorObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceFromTemplateGuestAcceleratorParameters) DeepCopyInto(out *InstanceFromTemplateGuestAcceleratorParameters) {
	*out = *in
	if in.Count != nil {
		in, out := &in.Count, &out.Count
		*out = new(float64)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceFromTemplateGuestAcceleratorParameters.
func (in *InstanceFromTemplateGuestAcceleratorParameters) DeepCopy() *InstanceFromTemplateGuestAcceleratorParameters {
	if in == nil {
		return nil
	}
	out := new(InstanceFromTemplateGuestAcceleratorParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceFromTemplateInitParameters) DeepCopyInto(out *InstanceFromTemplateInitParameters) {
	*out = *in
	if in.AdvancedMachineFeatures != nil {
		in, out := &in.AdvancedMachineFeatures, &out.AdvancedMachineFeatures
		*out = make([]InstanceFromTemplateAdvancedMachineFeaturesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AllowStoppingForUpdate != nil {
		in, out := &in.AllowStoppingForUpdate, &out.AllowStoppingForUpdate
		*out = new(bool)
		**out = **in
	}
	if in.AttachedDisk != nil {
		in, out := &in.AttachedDisk, &out.AttachedDisk
		*out = make([]InstanceFromTemplateAttachedDiskInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.BootDisk != nil {
		in, out := &in.BootDisk, &out.BootDisk
		*out = make([]InstanceFromTemplateBootDiskInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CanIPForward != nil {
		in, out := &in.CanIPForward, &out.CanIPForward
		*out = new(bool)
		**out = **in
	}
	if in.ConfidentialInstanceConfig != nil {
		in, out := &in.ConfidentialInstanceConfig, &out.ConfidentialInstanceConfig
		*out = make([]InstanceFromTemplateConfidentialInstanceConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DeletionProtection != nil {
		in, out := &in.DeletionProtection, &out.DeletionProtection
		*out = new(bool)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DesiredStatus != nil {
		in, out := &in.DesiredStatus, &out.DesiredStatus
		*out = new(string)
		**out = **in
	}
	if in.EnableDisplay != nil {
		in, out := &in.EnableDisplay, &out.EnableDisplay
		*out = new(bool)
		**out = **in
	}
	if in.GuestAccelerator != nil {
		in, out := &in.GuestAccelerator, &out.GuestAccelerator
		*out = make([]InstanceFromTemplateGuestAcceleratorInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Hostname != nil {
		in, out := &in.Hostname, &out.Hostname
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.MachineType != nil {
		in, out := &in.MachineType, &out.MachineType
		*out = new(string)
		**out = **in
	}
	if in.Metadata != nil {
		in, out := &in.Metadata, &out.Metadata
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.MetadataStartupScript != nil {
		in, out := &in.MetadataStartupScript, &out.MetadataStartupScript
		*out = new(string)
		**out = **in
	}
	if in.MinCPUPlatform != nil {
		in, out := &in.MinCPUPlatform, &out.MinCPUPlatform
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NetworkInterface != nil {
		in, out := &in.NetworkInterface, &out.NetworkInterface
		*out = make([]InstanceFromTemplateNetworkInterfaceInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NetworkPerformanceConfig != nil {
		in, out := &in.NetworkPerformanceConfig, &out.NetworkPerformanceConfig
		*out = make([]InstanceFromTemplateNetworkPerformanceConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Params != nil {
		in, out := &in.Params, &out.Params
		*out = make([]InstanceFromTemplateParamsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.ReservationAffinity != nil {
		in, out := &in.ReservationAffinity, &out.ReservationAffinity
		*out = make([]InstanceFromTemplateReservationAffinityInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ResourcePolicies != nil {
		in, out := &in.ResourcePolicies, &out.ResourcePolicies
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Scheduling != nil {
		in, out := &in.Scheduling, &out.Scheduling
		*out = make([]InstanceFromTemplateSchedulingInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ScratchDisk != nil {
		in, out := &in.ScratchDisk, &out.ScratchDisk
		*out = make([]InstanceFromTemplateScratchDiskInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ServiceAccount != nil {
		in, out := &in.ServiceAccount, &out.ServiceAccount
		*out = make([]InstanceFromTemplateServiceAccountInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ShieldedInstanceConfig != nil {
		in, out := &in.ShieldedInstanceConfig, &out.ShieldedInstanceConfig
		*out = make([]InstanceFromTemplateShieldedInstanceConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SourceInstanceTemplate != nil {
		in, out := &in.SourceInstanceTemplate, &out.SourceInstanceTemplate
		*out = new(string)
		**out = **in
	}
	if in.SourceInstanceTemplateRef != nil {
		in, out := &in.SourceInstanceTemplateRef, &out.SourceInstanceTemplateRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SourceInstanceTemplateSelector != nil {
		in, out := &in.SourceInstanceTemplateSelector, &out.SourceInstanceTemplateSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Zone != nil {
		in, out := &in.Zone, &out.Zone
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceFromTemplateInitParameters.
func (in *InstanceFromTemplateInitParameters) DeepCopy() *InstanceFromTemplateInitParameters {
	if in == nil {
		return nil
	}
	out := new(InstanceFromTemplateInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceFromTemplateList) DeepCopyInto(out *InstanceFromTemplateList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]InstanceFromTemplate, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceFromTemplateList.
func (in *InstanceFromTemplateList) DeepCopy() *InstanceFromTemplateList {
	if in == nil {
		return nil
	}
	out := new(InstanceFromTemplateList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *InstanceFromTemplateList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceFromTemplateNetworkInterfaceInitParameters) DeepCopyInto(out *InstanceFromTemplateNetworkInterfaceInitParameters) {
	*out = *in
	if in.AccessConfig != nil {
		in, out := &in.AccessConfig, &out.AccessConfig
		*out = make([]NetworkInterfaceAccessConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AliasIPRange != nil {
		in, out := &in.AliasIPRange, &out.AliasIPRange
		*out = make([]NetworkInterfaceAliasIPRangeInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IPv6AccessConfig != nil {
		in, out := &in.IPv6AccessConfig, &out.IPv6AccessConfig
		*out = make([]NetworkInterfaceIPv6AccessConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IPv6Address != nil {
		in, out := &in.IPv6Address, &out.IPv6Address
		*out = new(string)
		**out = **in
	}
	if in.InternalIPv6PrefixLength != nil {
		in, out := &in.InternalIPv6PrefixLength, &out.InternalIPv6PrefixLength
		*out = new(float64)
		**out = **in
	}
	if in.Network != nil {
		in, out := &in.Network, &out.Network
		*out = new(string)
		**out = **in
	}
	if in.NetworkIP != nil {
		in, out := &in.NetworkIP, &out.NetworkIP
		*out = new(string)
		**out = **in
	}
	if in.NetworkRef != nil {
		in, out := &in.NetworkRef, &out.NetworkRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.NetworkSelector != nil {
		in, out := &in.NetworkSelector, &out.NetworkSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.NicType != nil {
		in, out := &in.NicType, &out.NicType
		*out = new(string)
		**out = **in
	}
	if in.QueueCount != nil {
		in, out := &in.QueueCount, &out.QueueCount
		*out = new(float64)
		**out = **in
	}
	if in.StackType != nil {
		in, out := &in.StackType, &out.StackType
		*out = new(string)
		**out = **in
	}
	if in.Subnetwork != nil {
		in, out := &in.Subnetwork, &out.Subnetwork
		*out = new(string)
		**out = **in
	}
	if in.SubnetworkProject != nil {
		in, out := &in.SubnetworkProject, &out.SubnetworkProject
		*out = new(string)
		**out = **in
	}
	if in.SubnetworkRef != nil {
		in, out := &in.SubnetworkRef, &out.SubnetworkRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SubnetworkSelector != nil {
		in, out := &in.SubnetworkSelector, &out.SubnetworkSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceFromTemplateNetworkInterfaceInitParameters.
func (in *InstanceFromTemplateNetworkInterfaceInitParameters) DeepCopy() *InstanceFromTemplateNetworkInterfaceInitParameters {
	if in == nil {
		return nil
	}
	out := new(InstanceFromTemplateNetworkInterfaceInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceFromTemplateNetworkInterfaceObservation) DeepCopyInto(out *InstanceFromTemplateNetworkInterfaceObservation) {
	*out = *in
	if in.AccessConfig != nil {
		in, out := &in.AccessConfig, &out.AccessConfig
		*out = make([]NetworkInterfaceAccessConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AliasIPRange != nil {
		in, out := &in.AliasIPRange, &out.AliasIPRange
		*out = make([]NetworkInterfaceAliasIPRangeObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IPv6AccessConfig != nil {
		in, out := &in.IPv6AccessConfig, &out.IPv6AccessConfig
		*out = make([]NetworkInterfaceIPv6AccessConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IPv6AccessType != nil {
		in, out := &in.IPv6AccessType, &out.IPv6AccessType
		*out = new(string)
		**out = **in
	}
	if in.IPv6Address != nil {
		in, out := &in.IPv6Address, &out.IPv6Address
		*out = new(string)
		**out = **in
	}
	if in.InternalIPv6PrefixLength != nil {
		in, out := &in.InternalIPv6PrefixLength, &out.InternalIPv6PrefixLength
		*out = new(float64)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Network != nil {
		in, out := &in.Network, &out.Network
		*out = new(string)
		**out = **in
	}
	if in.NetworkIP != nil {
		in, out := &in.NetworkIP, &out.NetworkIP
		*out = new(string)
		**out = **in
	}
	if in.NicType != nil {
		in, out := &in.NicType, &out.NicType
		*out = new(string)
		**out = **in
	}
	if in.QueueCount != nil {
		in, out := &in.QueueCount, &out.QueueCount
		*out = new(float64)
		**out = **in
	}
	if in.StackType != nil {
		in, out := &in.StackType, &out.StackType
		*out = new(string)
		**out = **in
	}
	if in.Subnetwork != nil {
		in, out := &in.Subnetwork, &out.Subnetwork
		*out = new(string)
		**out = **in
	}
	if in.SubnetworkProject != nil {
		in, out := &in.SubnetworkProject, &out.SubnetworkProject
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceFromTemplateNetworkInterfaceObservation.
func (in *InstanceFromTemplateNetworkInterfaceObservation) DeepCopy() *InstanceFromTemplateNetworkInterfaceObservation {
	if in == nil {
		return nil
	}
	out := new(InstanceFromTemplateNetworkInterfaceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceFromTemplateNetworkInterfaceParameters) DeepCopyInto(out *InstanceFromTemplateNetworkInterfaceParameters) {
	*out = *in
	if in.AccessConfig != nil {
		in, out := &in.AccessConfig, &out.AccessConfig
		*out = make([]NetworkInterfaceAccessConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AliasIPRange != nil {
		in, out := &in.AliasIPRange, &out.AliasIPRange
		*out = make([]NetworkInterfaceAliasIPRangeParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IPv6AccessConfig != nil {
		in, out := &in.IPv6AccessConfig, &out.IPv6AccessConfig
		*out = make([]NetworkInterfaceIPv6AccessConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IPv6Address != nil {
		in, out := &in.IPv6Address, &out.IPv6Address
		*out = new(string)
		**out = **in
	}
	if in.InternalIPv6PrefixLength != nil {
		in, out := &in.InternalIPv6PrefixLength, &out.InternalIPv6PrefixLength
		*out = new(float64)
		**out = **in
	}
	if in.Network != nil {
		in, out := &in.Network, &out.Network
		*out = new(string)
		**out = **in
	}
	if in.NetworkIP != nil {
		in, out := &in.NetworkIP, &out.NetworkIP
		*out = new(string)
		**out = **in
	}
	if in.NetworkRef != nil {
		in, out := &in.NetworkRef, &out.NetworkRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.NetworkSelector != nil {
		in, out := &in.NetworkSelector, &out.NetworkSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.NicType != nil {
		in, out := &in.NicType, &out.NicType
		*out = new(string)
		**out = **in
	}
	if in.QueueCount != nil {
		in, out := &in.QueueCount, &out.QueueCount
		*out = new(float64)
		**out = **in
	}
	if in.StackType != nil {
		in, out := &in.StackType, &out.StackType
		*out = new(string)
		**out = **in
	}
	if in.Subnetwork != nil {
		in, out := &in.Subnetwork, &out.Subnetwork
		*out = new(string)
		**out = **in
	}
	if in.SubnetworkProject != nil {
		in, out := &in.SubnetworkProject, &out.SubnetworkProject
		*out = new(string)
		**out = **in
	}
	if in.SubnetworkRef != nil {
		in, out := &in.SubnetworkRef, &out.SubnetworkRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SubnetworkSelector != nil {
		in, out := &in.SubnetworkSelector, &out.SubnetworkSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceFromTemplateNetworkInterfaceParameters.
func (in *InstanceFromTemplateNetworkInterfaceParameters) DeepCopy() *InstanceFromTemplateNetworkInterfaceParameters {
	if in == nil {
		return nil
	}
	out := new(InstanceFromTemplateNetworkInterfaceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceFromTemplateNetworkPerformanceConfigInitParameters) DeepCopyInto(out *InstanceFromTemplateNetworkPerformanceConfigInitParameters) {
	*out = *in
	if in.TotalEgressBandwidthTier != nil {
		in, out := &in.TotalEgressBandwidthTier, &out.TotalEgressBandwidthTier
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceFromTemplateNetworkPerformanceConfigInitParameters.
func (in *InstanceFromTemplateNetworkPerformanceConfigInitParameters) DeepCopy() *InstanceFromTemplateNetworkPerformanceConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(InstanceFromTemplateNetworkPerformanceConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceFromTemplateNetworkPerformanceConfigObservation) DeepCopyInto(out *InstanceFromTemplateNetworkPerformanceConfigObservation) {
	*out = *in
	if in.TotalEgressBandwidthTier != nil {
		in, out := &in.TotalEgressBandwidthTier, &out.TotalEgressBandwidthTier
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceFromTemplateNetworkPerformanceConfigObservation.
func (in *InstanceFromTemplateNetworkPerformanceConfigObservation) DeepCopy() *InstanceFromTemplateNetworkPerformanceConfigObservation {
	if in == nil {
		return nil
	}
	out := new(InstanceFromTemplateNetworkPerformanceConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceFromTemplateNetworkPerformanceConfigParameters) DeepCopyInto(out *InstanceFromTemplateNetworkPerformanceConfigParameters) {
	*out = *in
	if in.TotalEgressBandwidthTier != nil {
		in, out := &in.TotalEgressBandwidthTier, &out.TotalEgressBandwidthTier
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceFromTemplateNetworkPerformanceConfigParameters.
func (in *InstanceFromTemplateNetworkPerformanceConfigParameters) DeepCopy() *InstanceFromTemplateNetworkPerformanceConfigParameters {
	if in == nil {
		return nil
	}
	out := new(InstanceFromTemplateNetworkPerformanceConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceFromTemplateObservation) DeepCopyInto(out *InstanceFromTemplateObservation) {
	*out = *in
	if in.AdvancedMachineFeatures != nil {
		in, out := &in.AdvancedMachineFeatures, &out.AdvancedMachineFeatures
		*out = make([]InstanceFromTemplateAdvancedMachineFeaturesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AllowStoppingForUpdate != nil {
		in, out := &in.AllowStoppingForUpdate, &out.AllowStoppingForUpdate
		*out = new(bool)
		**out = **in
	}
	if in.AttachedDisk != nil {
		in, out := &in.AttachedDisk, &out.AttachedDisk
		*out = make([]InstanceFromTemplateAttachedDiskObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.BootDisk != nil {
		in, out := &in.BootDisk, &out.BootDisk
		*out = make([]InstanceFromTemplateBootDiskObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CPUPlatform != nil {
		in, out := &in.CPUPlatform, &out.CPUPlatform
		*out = new(string)
		**out = **in
	}
	if in.CanIPForward != nil {
		in, out := &in.CanIPForward, &out.CanIPForward
		*out = new(bool)
		**out = **in
	}
	if in.ConfidentialInstanceConfig != nil {
		in, out := &in.ConfidentialInstanceConfig, &out.ConfidentialInstanceConfig
		*out = make([]InstanceFromTemplateConfidentialInstanceConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CurrentStatus != nil {
		in, out := &in.CurrentStatus, &out.CurrentStatus
		*out = new(string)
		**out = **in
	}
	if in.DeletionProtection != nil {
		in, out := &in.DeletionProtection, &out.DeletionProtection
		*out = new(bool)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DesiredStatus != nil {
		in, out := &in.DesiredStatus, &out.DesiredStatus
		*out = new(string)
		**out = **in
	}
	if in.EffectiveLabels != nil {
		in, out := &in.EffectiveLabels, &out.EffectiveLabels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.EnableDisplay != nil {
		in, out := &in.EnableDisplay, &out.EnableDisplay
		*out = new(bool)
		**out = **in
	}
	if in.GuestAccelerator != nil {
		in, out := &in.GuestAccelerator, &out.GuestAccelerator
		*out = make([]InstanceFromTemplateGuestAcceleratorObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Hostname != nil {
		in, out := &in.Hostname, &out.Hostname
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.InstanceID != nil {
		in, out := &in.InstanceID, &out.InstanceID
		*out = new(string)
		**out = **in
	}
	if in.LabelFingerprint != nil {
		in, out := &in.LabelFingerprint, &out.LabelFingerprint
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.MachineType != nil {
		in, out := &in.MachineType, &out.MachineType
		*out = new(string)
		**out = **in
	}
	if in.Metadata != nil {
		in, out := &in.Metadata, &out.Metadata
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.MetadataFingerprint != nil {
		in, out := &in.MetadataFingerprint, &out.MetadataFingerprint
		*out = new(string)
		**out = **in
	}
	if in.MetadataStartupScript != nil {
		in, out := &in.MetadataStartupScript, &out.MetadataStartupScript
		*out = new(string)
		**out = **in
	}
	if in.MinCPUPlatform != nil {
		in, out := &in.MinCPUPlatform, &out.MinCPUPlatform
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NetworkInterface != nil {
		in, out := &in.NetworkInterface, &out.NetworkInterface
		*out = make([]InstanceFromTemplateNetworkInterfaceObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NetworkPerformanceConfig != nil {
		in, out := &in.NetworkPerformanceConfig, &out.NetworkPerformanceConfig
		*out = make([]InstanceFromTemplateNetworkPerformanceConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Params != nil {
		in, out := &in.Params, &out.Params
		*out = make([]InstanceFromTemplateParamsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.ReservationAffinity != nil {
		in, out := &in.ReservationAffinity, &out.ReservationAffinity
		*out = make([]InstanceFromTemplateReservationAffinityObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ResourcePolicies != nil {
		in, out := &in.ResourcePolicies, &out.ResourcePolicies
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Scheduling != nil {
		in, out := &in.Scheduling, &out.Scheduling
		*out = make([]InstanceFromTemplateSchedulingObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ScratchDisk != nil {
		in, out := &in.ScratchDisk, &out.ScratchDisk
		*out = make([]InstanceFromTemplateScratchDiskObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SelfLink != nil {
		in, out := &in.SelfLink, &out.SelfLink
		*out = new(string)
		**out = **in
	}
	if in.ServiceAccount != nil {
		in, out := &in.ServiceAccount, &out.ServiceAccount
		*out = make([]InstanceFromTemplateServiceAccountObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ShieldedInstanceConfig != nil {
		in, out := &in.ShieldedInstanceConfig, &out.ShieldedInstanceConfig
		*out = make([]InstanceFromTemplateShieldedInstanceConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SourceInstanceTemplate != nil {
		in, out := &in.SourceInstanceTemplate, &out.SourceInstanceTemplate
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.TagsFingerprint != nil {
		in, out := &in.TagsFingerprint, &out.TagsFingerprint
		*out = new(string)
		**out = **in
	}
	if in.TerraformLabels != nil {
		in, out := &in.TerraformLabels, &out.TerraformLabels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Zone != nil {
		in, out := &in.Zone, &out.Zone
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceFromTemplateObservation.
func (in *InstanceFromTemplateObservation) DeepCopy() *InstanceFromTemplateObservation {
	if in == nil {
		return nil
	}
	out := new(InstanceFromTemplateObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceFromTemplateParameters) DeepCopyInto(out *InstanceFromTemplateParameters) {
	*out = *in
	if in.AdvancedMachineFeatures != nil {
		in, out := &in.AdvancedMachineFeatures, &out.AdvancedMachineFeatures
		*out = make([]InstanceFromTemplateAdvancedMachineFeaturesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AllowStoppingForUpdate != nil {
		in, out := &in.AllowStoppingForUpdate, &out.AllowStoppingForUpdate
		*out = new(bool)
		**out = **in
	}
	if in.AttachedDisk != nil {
		in, out := &in.AttachedDisk, &out.AttachedDisk
		*out = make([]InstanceFromTemplateAttachedDiskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.BootDisk != nil {
		in, out := &in.BootDisk, &out.BootDisk
		*out = make([]InstanceFromTemplateBootDiskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CanIPForward != nil {
		in, out := &in.CanIPForward, &out.CanIPForward
		*out = new(bool)
		**out = **in
	}
	if in.ConfidentialInstanceConfig != nil {
		in, out := &in.ConfidentialInstanceConfig, &out.ConfidentialInstanceConfig
		*out = make([]InstanceFromTemplateConfidentialInstanceConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DeletionProtection != nil {
		in, out := &in.DeletionProtection, &out.DeletionProtection
		*out = new(bool)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DesiredStatus != nil {
		in, out := &in.DesiredStatus, &out.DesiredStatus
		*out = new(string)
		**out = **in
	}
	if in.EnableDisplay != nil {
		in, out := &in.EnableDisplay, &out.EnableDisplay
		*out = new(bool)
		**out = **in
	}
	if in.GuestAccelerator != nil {
		in, out := &in.GuestAccelerator, &out.GuestAccelerator
		*out = make([]InstanceFromTemplateGuestAcceleratorParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Hostname != nil {
		in, out := &in.Hostname, &out.Hostname
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.MachineType != nil {
		in, out := &in.MachineType, &out.MachineType
		*out = new(string)
		**out = **in
	}
	if in.Metadata != nil {
		in, out := &in.Metadata, &out.Metadata
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.MetadataStartupScript != nil {
		in, out := &in.MetadataStartupScript, &out.MetadataStartupScript
		*out = new(string)
		**out = **in
	}
	if in.MinCPUPlatform != nil {
		in, out := &in.MinCPUPlatform, &out.MinCPUPlatform
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NetworkInterface != nil {
		in, out := &in.NetworkInterface, &out.NetworkInterface
		*out = make([]InstanceFromTemplateNetworkInterfaceParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NetworkPerformanceConfig != nil {
		in, out := &in.NetworkPerformanceConfig, &out.NetworkPerformanceConfig
		*out = make([]InstanceFromTemplateNetworkPerformanceConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Params != nil {
		in, out := &in.Params, &out.Params
		*out = make([]InstanceFromTemplateParamsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.ReservationAffinity != nil {
		in, out := &in.ReservationAffinity, &out.ReservationAffinity
		*out = make([]InstanceFromTemplateReservationAffinityParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ResourcePolicies != nil {
		in, out := &in.ResourcePolicies, &out.ResourcePolicies
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Scheduling != nil {
		in, out := &in.Scheduling, &out.Scheduling
		*out = make([]InstanceFromTemplateSchedulingParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ScratchDisk != nil {
		in, out := &in.ScratchDisk, &out.ScratchDisk
		*out = make([]InstanceFromTemplateScratchDiskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ServiceAccount != nil {
		in, out := &in.ServiceAccount, &out.ServiceAccount
		*out = make([]InstanceFromTemplateServiceAccountParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ShieldedInstanceConfig != nil {
		in, out := &in.ShieldedInstanceConfig, &out.ShieldedInstanceConfig
		*out = make([]InstanceFromTemplateShieldedInstanceConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SourceInstanceTemplate != nil {
		in, out := &in.SourceInstanceTemplate, &out.SourceInstanceTemplate
		*out = new(string)
		**out = **in
	}
	if in.SourceInstanceTemplateRef != nil {
		in, out := &in.SourceInstanceTemplateRef, &out.SourceInstanceTemplateRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SourceInstanceTemplateSelector != nil {
		in, out := &in.SourceInstanceTemplateSelector, &out.SourceInstanceTemplateSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Zone != nil {
		in, out := &in.Zone, &out.Zone
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceFromTemplateParameters.
func (in *InstanceFromTemplateParameters) DeepCopy() *InstanceFromTemplateParameters {
	if in == nil {
		return nil
	}
	out := new(InstanceFromTemplateParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceFromTemplateParamsInitParameters) DeepCopyInto(out *InstanceFromTemplateParamsInitParameters) {
	*out = *in
	if in.ResourceManagerTags != nil {
		in, out := &in.ResourceManagerTags, &out.ResourceManagerTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceFromTemplateParamsInitParameters.
func (in *InstanceFromTemplateParamsInitParameters) DeepCopy() *InstanceFromTemplateParamsInitParameters {
	if in == nil {
		return nil
	}
	out := new(InstanceFromTemplateParamsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceFromTemplateParamsObservation) DeepCopyInto(out *InstanceFromTemplateParamsObservation) {
	*out = *in
	if in.ResourceManagerTags != nil {
		in, out := &in.ResourceManagerTags, &out.ResourceManagerTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceFromTemplateParamsObservation.
func (in *InstanceFromTemplateParamsObservation) DeepCopy() *InstanceFromTemplateParamsObservation {
	if in == nil {
		return nil
	}
	out := new(InstanceFromTemplateParamsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceFromTemplateParamsParameters) DeepCopyInto(out *InstanceFromTemplateParamsParameters) {
	*out = *in
	if in.ResourceManagerTags != nil {
		in, out := &in.ResourceManagerTags, &out.ResourceManagerTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceFromTemplateParamsParameters.
func (in *InstanceFromTemplateParamsParameters) DeepCopy() *InstanceFromTemplateParamsParameters {
	if in == nil {
		return nil
	}
	out := new(InstanceFromTemplateParamsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceFromTemplateReservationAffinityInitParameters) DeepCopyInto(out *InstanceFromTemplateReservationAffinityInitParameters) {
	*out = *in
	if in.SpecificReservation != nil {
		in, out := &in.SpecificReservation, &out.SpecificReservation
		*out = make([]ReservationAffinitySpecificReservationInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceFromTemplateReservationAffinityInitParameters.
func (in *InstanceFromTemplateReservationAffinityInitParameters) DeepCopy() *InstanceFromTemplateReservationAffinityInitParameters {
	if in == nil {
		return nil
	}
	out := new(InstanceFromTemplateReservationAffinityInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceFromTemplateReservationAffinityObservation) DeepCopyInto(out *InstanceFromTemplateReservationAffinityObservation) {
	*out = *in
	if in.SpecificReservation != nil {
		in, out := &in.SpecificReservation, &out.SpecificReservation
		*out = make([]ReservationAffinitySpecificReservationObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceFromTemplateReservationAffinityObservation.
func (in *InstanceFromTemplateReservationAffinityObservation) DeepCopy() *InstanceFromTemplateReservationAffinityObservation {
	if in == nil {
		return nil
	}
	out := new(InstanceFromTemplateReservationAffinityObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceFromTemplateReservationAffinityParameters) DeepCopyInto(out *InstanceFromTemplateReservationAffinityParameters) {
	*out = *in
	if in.SpecificReservation != nil {
		in, out := &in.SpecificReservation, &out.SpecificReservation
		*out = make([]ReservationAffinitySpecificReservationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceFromTemplateReservationAffinityParameters.
func (in *InstanceFromTemplateReservationAffinityParameters) DeepCopy() *InstanceFromTemplateReservationAffinityParameters {
	if in == nil {
		return nil
	}
	out := new(InstanceFromTemplateReservationAffinityParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceFromTemplateSchedulingInitParameters) DeepCopyInto(out *InstanceFromTemplateSchedulingInitParameters) {
	*out = *in
	if in.AutomaticRestart != nil {
		in, out := &in.AutomaticRestart, &out.AutomaticRestart
		*out = new(bool)
		**out = **in
	}
	if in.InstanceTerminationAction != nil {
		in, out := &in.InstanceTerminationAction, &out.InstanceTerminationAction
		*out = new(string)
		**out = **in
	}
	if in.LocalSsdRecoveryTimeout != nil {
		in, out := &in.LocalSsdRecoveryTimeout, &out.LocalSsdRecoveryTimeout
		*out = make([]SchedulingLocalSsdRecoveryTimeoutInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MaxRunDuration != nil {
		in, out := &in.MaxRunDuration, &out.MaxRunDuration
		*out = make([]SchedulingMaxRunDurationInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MinNodeCpus != nil {
		in, out := &in.MinNodeCpus, &out.MinNodeCpus
		*out = new(float64)
		**out = **in
	}
	if in.NodeAffinities != nil {
		in, out := &in.NodeAffinities, &out.NodeAffinities
		*out = make([]SchedulingNodeAffinitiesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OnHostMaintenance != nil {
		in, out := &in.OnHostMaintenance, &out.OnHostMaintenance
		*out = new(string)
		**out = **in
	}
	if in.OnInstanceStopAction != nil {
		in, out := &in.OnInstanceStopAction, &out.OnInstanceStopAction
		*out = make([]SchedulingOnInstanceStopActionInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Preemptible != nil {
		in, out := &in.Preemptible, &out.Preemptible
		*out = new(bool)
		**out = **in
	}
	if in.ProvisioningModel != nil {
		in, out := &in.ProvisioningModel, &out.ProvisioningModel
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceFromTemplateSchedulingInitParameters.
func (in *InstanceFromTemplateSchedulingInitParameters) DeepCopy() *InstanceFromTemplateSchedulingInitParameters {
	if in == nil {
		return nil
	}
	out := new(InstanceFromTemplateSchedulingInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceFromTemplateSchedulingObservation) DeepCopyInto(out *InstanceFromTemplateSchedulingObservation) {
	*out = *in
	if in.AutomaticRestart != nil {
		in, out := &in.AutomaticRestart, &out.AutomaticRestart
		*out = new(bool)
		**out = **in
	}
	if in.InstanceTerminationAction != nil {
		in, out := &in.InstanceTerminationAction, &out.InstanceTerminationAction
		*out = new(string)
		**out = **in
	}
	if in.LocalSsdRecoveryTimeout != nil {
		in, out := &in.LocalSsdRecoveryTimeout, &out.LocalSsdRecoveryTimeout
		*out = make([]SchedulingLocalSsdRecoveryTimeoutObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MaxRunDuration != nil {
		in, out := &in.MaxRunDuration, &out.MaxRunDuration
		*out = make([]SchedulingMaxRunDurationObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MinNodeCpus != nil {
		in, out := &in.MinNodeCpus, &out.MinNodeCpus
		*out = new(float64)
		**out = **in
	}
	if in.NodeAffinities != nil {
		in, out := &in.NodeAffinities, &out.NodeAffinities
		*out = make([]SchedulingNodeAffinitiesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OnHostMaintenance != nil {
		in, out := &in.OnHostMaintenance, &out.OnHostMaintenance
		*out = new(string)
		**out = **in
	}
	if in.OnInstanceStopAction != nil {
		in, out := &in.OnInstanceStopAction, &out.OnInstanceStopAction
		*out = make([]SchedulingOnInstanceStopActionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Preemptible != nil {
		in, out := &in.Preemptible, &out.Preemptible
		*out = new(bool)
		**out = **in
	}
	if in.ProvisioningModel != nil {
		in, out := &in.ProvisioningModel, &out.ProvisioningModel
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceFromTemplateSchedulingObservation.
func (in *InstanceFromTemplateSchedulingObservation) DeepCopy() *InstanceFromTemplateSchedulingObservation {
	if in == nil {
		return nil
	}
	out := new(InstanceFromTemplateSchedulingObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceFromTemplateSchedulingParameters) DeepCopyInto(out *InstanceFromTemplateSchedulingParameters) {
	*out = *in
	if in.AutomaticRestart != nil {
		in, out := &in.AutomaticRestart, &out.AutomaticRestart
		*out = new(bool)
		**out = **in
	}
	if in.InstanceTerminationAction != nil {
		in, out := &in.InstanceTerminationAction, &out.InstanceTerminationAction
		*out = new(string)
		**out = **in
	}
	if in.LocalSsdRecoveryTimeout != nil {
		in, out := &in.LocalSsdRecoveryTimeout, &out.LocalSsdRecoveryTimeout
		*out = make([]SchedulingLocalSsdRecoveryTimeoutParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MaxRunDuration != nil {
		in, out := &in.MaxRunDuration, &out.MaxRunDuration
		*out = make([]SchedulingMaxRunDurationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MinNodeCpus != nil {
		in, out := &in.MinNodeCpus, &out.MinNodeCpus
		*out = new(float64)
		**out = **in
	}
	if in.NodeAffinities != nil {
		in, out := &in.NodeAffinities, &out.NodeAffinities
		*out = make([]SchedulingNodeAffinitiesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OnHostMaintenance != nil {
		in, out := &in.OnHostMaintenance, &out.OnHostMaintenance
		*out = new(string)
		**out = **in
	}
	if in.OnInstanceStopAction != nil {
		in, out := &in.OnInstanceStopAction, &out.OnInstanceStopAction
		*out = make([]SchedulingOnInstanceStopActionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Preemptible != nil {
		in, out := &in.Preemptible, &out.Preemptible
		*out = new(bool)
		**out = **in
	}
	if in.ProvisioningModel != nil {
		in, out := &in.ProvisioningModel, &out.ProvisioningModel
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceFromTemplateSchedulingParameters.
func (in *InstanceFromTemplateSchedulingParameters) DeepCopy() *InstanceFromTemplateSchedulingParameters {
	if in == nil {
		return nil
	}
	out := new(InstanceFromTemplateSchedulingParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceFromTemplateScratchDiskInitParameters) DeepCopyInto(out *InstanceFromTemplateScratchDiskInitParameters) {
	*out = *in
	if in.DeviceName != nil {
		in, out := &in.DeviceName, &out.DeviceName
		*out = new(string)
		**out = **in
	}
	if in.Interface != nil {
		in, out := &in.Interface, &out.Interface
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceFromTemplateScratchDiskInitParameters.
func (in *InstanceFromTemplateScratchDiskInitParameters) DeepCopy() *InstanceFromTemplateScratchDiskInitParameters {
	if in == nil {
		return nil
	}
	out := new(InstanceFromTemplateScratchDiskInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceFromTemplateScratchDiskObservation) DeepCopyInto(out *InstanceFromTemplateScratchDiskObservation) {
	*out = *in
	if in.DeviceName != nil {
		in, out := &in.DeviceName, &out.DeviceName
		*out = new(string)
		**out = **in
	}
	if in.Interface != nil {
		in, out := &in.Interface, &out.Interface
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceFromTemplateScratchDiskObservation.
func (in *InstanceFromTemplateScratchDiskObservation) DeepCopy() *InstanceFromTemplateScratchDiskObservation {
	if in == nil {
		return nil
	}
	out := new(InstanceFromTemplateScratchDiskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceFromTemplateScratchDiskParameters) DeepCopyInto(out *InstanceFromTemplateScratchDiskParameters) {
	*out = *in
	if in.DeviceName != nil {
		in, out := &in.DeviceName, &out.DeviceName
		*out = new(string)
		**out = **in
	}
	if in.Interface != nil {
		in, out := &in.Interface, &out.Interface
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceFromTemplateScratchDiskParameters.
func (in *InstanceFromTemplateScratchDiskParameters) DeepCopy() *InstanceFromTemplateScratchDiskParameters {
	if in == nil {
		return nil
	}
	out := new(InstanceFromTemplateScratchDiskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceFromTemplateServiceAccountInitParameters) DeepCopyInto(out *InstanceFromTemplateServiceAccountInitParameters) {
	*out = *in
	if in.Email != nil {
		in, out := &in.Email, &out.Email
		*out = new(string)
		**out = **in
	}
	if in.Scopes != nil {
		in, out := &in.Scopes, &out.Scopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceFromTemplateServiceAccountInitParameters.
func (in *InstanceFromTemplateServiceAccountInitParameters) DeepCopy() *InstanceFromTemplateServiceAccountInitParameters {
	if in == nil {
		return nil
	}
	out := new(InstanceFromTemplateServiceAccountInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceFromTemplateServiceAccountObservation) DeepCopyInto(out *InstanceFromTemplateServiceAccountObservation) {
	*out = *in
	if in.Email != nil {
		in, out := &in.Email, &out.Email
		*out = new(string)
		**out = **in
	}
	if in.Scopes != nil {
		in, out := &in.Scopes, &out.Scopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceFromTemplateServiceAccountObservation.
func (in *InstanceFromTemplateServiceAccountObservation) DeepCopy() *InstanceFromTemplateServiceAccountObservation {
	if in == nil {
		return nil
	}
	out := new(InstanceFromTemplateServiceAccountObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceFromTemplateServiceAccountParameters) DeepCopyInto(out *InstanceFromTemplateServiceAccountParameters) {
	*out = *in
	if in.Email != nil {
		in, out := &in.Email, &out.Email
		*out = new(string)
		**out = **in
	}
	if in.Scopes != nil {
		in, out := &in.Scopes, &out.Scopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceFromTemplateServiceAccountParameters.
func (in *InstanceFromTemplateServiceAccountParameters) DeepCopy() *InstanceFromTemplateServiceAccountParameters {
	if in == nil {
		return nil
	}
	out := new(InstanceFromTemplateServiceAccountParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceFromTemplateShieldedInstanceConfigInitParameters) DeepCopyInto(out *InstanceFromTemplateShieldedInstanceConfigInitParameters) {
	*out = *in
	if in.EnableIntegrityMonitoring != nil {
		in, out := &in.EnableIntegrityMonitoring, &out.EnableIntegrityMonitoring
		*out = new(bool)
		**out = **in
	}
	if in.EnableSecureBoot != nil {
		in, out := &in.EnableSecureBoot, &out.EnableSecureBoot
		*out = new(bool)
		**out = **in
	}
	if in.EnableVtpm != nil {
		in, out := &in.EnableVtpm, &out.EnableVtpm
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceFromTemplateShieldedInstanceConfigInitParameters.
func (in *InstanceFromTemplateShieldedInstanceConfigInitParameters) DeepCopy() *InstanceFromTemplateShieldedInstanceConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(InstanceFromTemplateShieldedInstanceConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceFromTemplateShieldedInstanceConfigObservation) DeepCopyInto(out *InstanceFromTemplateShieldedInstanceConfigObservation) {
	*out = *in
	if in.EnableIntegrityMonitoring != nil {
		in, out := &in.EnableIntegrityMonitoring, &out.EnableIntegrityMonitoring
		*out = new(bool)
		**out = **in
	}
	if in.EnableSecureBoot != nil {
		in, out := &in.EnableSecureBoot, &out.EnableSecureBoot
		*out = new(bool)
		**out = **in
	}
	if in.EnableVtpm != nil {
		in, out := &in.EnableVtpm, &out.EnableVtpm
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceFromTemplateShieldedInstanceConfigObservation.
func (in *InstanceFromTemplateShieldedInstanceConfigObservation) DeepCopy() *InstanceFromTemplateShieldedInstanceConfigObservation {
	if in == nil {
		return nil
	}
	out := new(InstanceFromTemplateShieldedInstanceConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceFromTemplateShieldedInstanceConfigParameters) DeepCopyInto(out *InstanceFromTemplateShieldedInstanceConfigParameters) {
	*out = *in
	if in.EnableIntegrityMonitoring != nil {
		in, out := &in.EnableIntegrityMonitoring, &out.EnableIntegrityMonitoring
		*out = new(bool)
		**out = **in
	}
	if in.EnableSecureBoot != nil {
		in, out := &in.EnableSecureBoot, &out.EnableSecureBoot
		*out = new(bool)
		**out = **in
	}
	if in.EnableVtpm != nil {
		in, out := &in.EnableVtpm, &out.EnableVtpm
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceFromTemplateShieldedInstanceConfigParameters.
func (in *InstanceFromTemplateShieldedInstanceConfigParameters) DeepCopy() *InstanceFromTemplateShieldedInstanceConfigParameters {
	if in == nil {
		return nil
	}
	out := new(InstanceFromTemplateShieldedInstanceConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceFromTemplateSpec) DeepCopyInto(out *InstanceFromTemplateSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceFromTemplateSpec.
func (in *InstanceFromTemplateSpec) DeepCopy() *InstanceFromTemplateSpec {
	if in == nil {
		return nil
	}
	out := new(InstanceFromTemplateSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceFromTemplateStatus) DeepCopyInto(out *InstanceFromTemplateStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceFromTemplateStatus.
func (in *InstanceFromTemplateStatus) DeepCopy() *InstanceFromTemplateStatus {
	if in == nil {
		return nil
	}
	out := new(InstanceFromTemplateStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceGroup) DeepCopyInto(out *InstanceGroup) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceGroup.
func (in *InstanceGroup) DeepCopy() *InstanceGroup {
	if in == nil {
		return nil
	}
	out := new(InstanceGroup)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *InstanceGroup) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceGroupInitParameters) DeepCopyInto(out *InstanceGroupInitParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Instances != nil {
		in, out := &in.Instances, &out.Instances
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.InstancesRefs != nil {
		in, out := &in.InstancesRefs, &out.InstancesRefs
		*out = make([]v1.Reference, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.InstancesSelector != nil {
		in, out := &in.InstancesSelector, &out.InstancesSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.NamedPort != nil {
		in, out := &in.NamedPort, &out.NamedPort
		*out = make([]NamedPortInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Network != nil {
		in, out := &in.Network, &out.Network
		*out = new(string)
		**out = **in
	}
	if in.NetworkRef != nil {
		in, out := &in.NetworkRef, &out.NetworkRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.NetworkSelector != nil {
		in, out := &in.NetworkSelector, &out.NetworkSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceGroupInitParameters.
func (in *InstanceGroupInitParameters) DeepCopy() *InstanceGroupInitParameters {
	if in == nil {
		return nil
	}
	out := new(InstanceGroupInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceGroupList) DeepCopyInto(out *InstanceGroupList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]InstanceGroup, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceGroupList.
func (in *InstanceGroupList) DeepCopy() *InstanceGroupList {
	if in == nil {
		return nil
	}
	out := new(InstanceGroupList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *InstanceGroupList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceGroupManager) DeepCopyInto(out *InstanceGroupManager) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceGroupManager.
func (in *InstanceGroupManager) DeepCopy() *InstanceGroupManager {
	if in == nil {
		return nil
	}
	out := new(InstanceGroupManager)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *InstanceGroupManager) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceGroupManagerInitParameters) DeepCopyInto(out *InstanceGroupManagerInitParameters) {
	*out = *in
	if in.AllInstancesConfig != nil {
		in, out := &in.AllInstancesConfig, &out.AllInstancesConfig
		*out = make([]AllInstancesConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AutoHealingPolicies != nil {
		in, out := &in.AutoHealingPolicies, &out.AutoHealingPolicies
		*out = make([]AutoHealingPoliciesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.BaseInstanceName != nil {
		in, out := &in.BaseInstanceName, &out.BaseInstanceName
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.InstanceLifecyclePolicy != nil {
		in, out := &in.InstanceLifecyclePolicy, &out.InstanceLifecyclePolicy
		*out = make([]InstanceLifecyclePolicyInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ListManagedInstancesResults != nil {
		in, out := &in.ListManagedInstancesResults, &out.ListManagedInstancesResults
		*out = new(string)
		**out = **in
	}
	if in.NamedPort != nil {
		in, out := &in.NamedPort, &out.NamedPort
		*out = make([]InstanceGroupManagerNamedPortInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.StatefulDisk != nil {
		in, out := &in.StatefulDisk, &out.StatefulDisk
		*out = make([]StatefulDiskInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StatefulExternalIP != nil {
		in, out := &in.StatefulExternalIP, &out.StatefulExternalIP
		*out = make([]StatefulExternalIPInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StatefulInternalIP != nil {
		in, out := &in.StatefulInternalIP, &out.StatefulInternalIP
		*out = make([]StatefulInternalIPInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TargetPools != nil {
		in, out := &in.TargetPools, &out.TargetPools
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.TargetPoolsRefs != nil {
		in, out := &in.TargetPoolsRefs, &out.TargetPoolsRefs
		*out = make([]v1.Reference, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TargetPoolsSelector != nil {
		in, out := &in.TargetPoolsSelector, &out.TargetPoolsSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.TargetSize != nil {
		in, out := &in.TargetSize, &out.TargetSize
		*out = new(float64)
		**out = **in
	}
	if in.UpdatePolicy != nil {
		in, out := &in.UpdatePolicy, &out.UpdatePolicy
		*out = make([]UpdatePolicyInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = make([]VersionInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.WaitForInstances != nil {
		in, out := &in.WaitForInstances, &out.WaitForInstances
		*out = new(bool)
		**out = **in
	}
	if in.WaitForInstancesStatus != nil {
		in, out := &in.WaitForInstancesStatus, &out.WaitForInstancesStatus
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceGroupManagerInitParameters.
func (in *InstanceGroupManagerInitParameters) DeepCopy() *InstanceGroupManagerInitParameters {
	if in == nil {
		return nil
	}
	out := new(InstanceGroupManagerInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceGroupManagerList) DeepCopyInto(out *InstanceGroupManagerList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]InstanceGroupManager, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceGroupManagerList.
func (in *InstanceGroupManagerList) DeepCopy() *InstanceGroupManagerList {
	if in == nil {
		return nil
	}
	out := new(InstanceGroupManagerList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *InstanceGroupManagerList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceGroupManagerNamedPortInitParameters) DeepCopyInto(out *InstanceGroupManagerNamedPortInitParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceGroupManagerNamedPortInitParameters.
func (in *InstanceGroupManagerNamedPortInitParameters) DeepCopy() *InstanceGroupManagerNamedPortInitParameters {
	if in == nil {
		return nil
	}
	out := new(InstanceGroupManagerNamedPortInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceGroupManagerNamedPortObservation) DeepCopyInto(out *InstanceGroupManagerNamedPortObservation) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceGroupManagerNamedPortObservation.
func (in *InstanceGroupManagerNamedPortObservation) DeepCopy() *InstanceGroupManagerNamedPortObservation {
	if in == nil {
		return nil
	}
	out := new(InstanceGroupManagerNamedPortObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceGroupManagerNamedPortParameters) DeepCopyInto(out *InstanceGroupManagerNamedPortParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceGroupManagerNamedPortParameters.
func (in *InstanceGroupManagerNamedPortParameters) DeepCopy() *InstanceGroupManagerNamedPortParameters {
	if in == nil {
		return nil
	}
	out := new(InstanceGroupManagerNamedPortParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceGroupManagerObservation) DeepCopyInto(out *InstanceGroupManagerObservation) {
	*out = *in
	if in.AllInstancesConfig != nil {
		in, out := &in.AllInstancesConfig, &out.AllInstancesConfig
		*out = make([]AllInstancesConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AutoHealingPolicies != nil {
		in, out := &in.AutoHealingPolicies, &out.AutoHealingPolicies
		*out = make([]AutoHealingPoliciesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.BaseInstanceName != nil {
		in, out := &in.BaseInstanceName, &out.BaseInstanceName
		*out = new(string)
		**out = **in
	}
	if in.CreationTimestamp != nil {
		in, out := &in.CreationTimestamp, &out.CreationTimestamp
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Fingerprint != nil {
		in, out := &in.Fingerprint, &out.Fingerprint
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.InstanceGroup != nil {
		in, out := &in.InstanceGroup, &out.InstanceGroup
		*out = new(string)
		**out = **in
	}
	if in.InstanceLifecyclePolicy != nil {
		in, out := &in.InstanceLifecyclePolicy, &out.InstanceLifecyclePolicy
		*out = make([]InstanceLifecyclePolicyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ListManagedInstancesResults != nil {
		in, out := &in.ListManagedInstancesResults, &out.ListManagedInstancesResults
		*out = new(string)
		**out = **in
	}
	if in.NamedPort != nil {
		in, out := &in.NamedPort, &out.NamedPort
		*out = make([]InstanceGroupManagerNamedPortObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Operation != nil {
		in, out := &in.Operation, &out.Operation
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.SelfLink != nil {
		in, out := &in.SelfLink, &out.SelfLink
		*out = new(string)
		**out = **in
	}
	if in.StatefulDisk != nil {
		in, out := &in.StatefulDisk, &out.StatefulDisk
		*out = make([]StatefulDiskObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StatefulExternalIP != nil {
		in, out := &in.StatefulExternalIP, &out.StatefulExternalIP
		*out = make([]StatefulExternalIPObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StatefulInternalIP != nil {
		in, out := &in.StatefulInternalIP, &out.StatefulInternalIP
		*out = make([]StatefulInternalIPObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = make([]StatusObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TargetPools != nil {
		in, out := &in.TargetPools, &out.TargetPools
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.TargetSize != nil {
		in, out := &in.TargetSize, &out.TargetSize
		*out = new(float64)
		**out = **in
	}
	if in.UpdatePolicy != nil {
		in, out := &in.UpdatePolicy, &out.UpdatePolicy
		*out = make([]UpdatePolicyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = make([]VersionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.WaitForInstances != nil {
		in, out := &in.WaitForInstances, &out.WaitForInstances
		*out = new(bool)
		**out = **in
	}
	if in.WaitForInstancesStatus != nil {
		in, out := &in.WaitForInstancesStatus, &out.WaitForInstancesStatus
		*out = new(string)
		**out = **in
	}
	if in.Zone != nil {
		in, out := &in.Zone, &out.Zone
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceGroupManagerObservation.
func (in *InstanceGroupManagerObservation) DeepCopy() *InstanceGroupManagerObservation {
	if in == nil {
		return nil
	}
	out := new(InstanceGroupManagerObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceGroupManagerParameters) DeepCopyInto(out *InstanceGroupManagerParameters) {
	*out = *in
	if in.AllInstancesConfig != nil {
		in, out := &in.AllInstancesConfig, &out.AllInstancesConfig
		*out = make([]AllInstancesConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AutoHealingPolicies != nil {
		in, out := &in.AutoHealingPolicies, &out.AutoHealingPolicies
		*out = make([]AutoHealingPoliciesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.BaseInstanceName != nil {
		in, out := &in.BaseInstanceName, &out.BaseInstanceName
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.InstanceLifecyclePolicy != nil {
		in, out := &in.InstanceLifecyclePolicy, &out.InstanceLifecyclePolicy
		*out = make([]InstanceLifecyclePolicyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ListManagedInstancesResults != nil {
		in, out := &in.ListManagedInstancesResults, &out.ListManagedInstancesResults
		*out = new(string)
		**out = **in
	}
	if in.NamedPort != nil {
		in, out := &in.NamedPort, &out.NamedPort
		*out = make([]InstanceGroupManagerNamedPortParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.StatefulDisk != nil {
		in, out := &in.StatefulDisk, &out.StatefulDisk
		*out = make([]StatefulDiskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StatefulExternalIP != nil {
		in, out := &in.StatefulExternalIP, &out.StatefulExternalIP
		*out = make([]StatefulExternalIPParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StatefulInternalIP != nil {
		in, out := &in.StatefulInternalIP, &out.StatefulInternalIP
		*out = make([]StatefulInternalIPParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TargetPools != nil {
		in, out := &in.TargetPools, &out.TargetPools
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.TargetPoolsRefs != nil {
		in, out := &in.TargetPoolsRefs, &out.TargetPoolsRefs
		*out = make([]v1.Reference, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TargetPoolsSelector != nil {
		in, out := &in.TargetPoolsSelector, &out.TargetPoolsSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.TargetSize != nil {
		in, out := &in.TargetSize, &out.TargetSize
		*out = new(float64)
		**out = **in
	}
	if in.UpdatePolicy != nil {
		in, out := &in.UpdatePolicy, &out.UpdatePolicy
		*out = make([]UpdatePolicyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = make([]VersionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.WaitForInstances != nil {
		in, out := &in.WaitForInstances, &out.WaitForInstances
		*out = new(bool)
		**out = **in
	}
	if in.WaitForInstancesStatus != nil {
		in, out := &in.WaitForInstancesStatus, &out.WaitForInstancesStatus
		*out = new(string)
		**out = **in
	}
	if in.Zone != nil {
		in, out := &in.Zone, &out.Zone
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceGroupManagerParameters.
func (in *InstanceGroupManagerParameters) DeepCopy() *InstanceGroupManagerParameters {
	if in == nil {
		return nil
	}
	out := new(InstanceGroupManagerParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceGroupManagerSpec) DeepCopyInto(out *InstanceGroupManagerSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceGroupManagerSpec.
func (in *InstanceGroupManagerSpec) DeepCopy() *InstanceGroupManagerSpec {
	if in == nil {
		return nil
	}
	out := new(InstanceGroupManagerSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceGroupManagerStatus) DeepCopyInto(out *InstanceGroupManagerStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceGroupManagerStatus.
func (in *InstanceGroupManagerStatus) DeepCopy() *InstanceGroupManagerStatus {
	if in == nil {
		return nil
	}
	out := new(InstanceGroupManagerStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceGroupNamedPort) DeepCopyInto(out *InstanceGroupNamedPort) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceGroupNamedPort.
func (in *InstanceGroupNamedPort) DeepCopy() *InstanceGroupNamedPort {
	if in == nil {
		return nil
	}
	out := new(InstanceGroupNamedPort)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *InstanceGroupNamedPort) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceGroupNamedPortInitParameters) DeepCopyInto(out *InstanceGroupNamedPortInitParameters) {
	*out = *in
	if in.Group != nil {
		in, out := &in.Group, &out.Group
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Zone != nil {
		in, out := &in.Zone, &out.Zone
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceGroupNamedPortInitParameters.
func (in *InstanceGroupNamedPortInitParameters) DeepCopy() *InstanceGroupNamedPortInitParameters {
	if in == nil {
		return nil
	}
	out := new(InstanceGroupNamedPortInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceGroupNamedPortList) DeepCopyInto(out *InstanceGroupNamedPortList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]InstanceGroupNamedPort, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceGroupNamedPortList.
func (in *InstanceGroupNamedPortList) DeepCopy() *InstanceGroupNamedPortList {
	if in == nil {
		return nil
	}
	out := new(InstanceGroupNamedPortList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *InstanceGroupNamedPortList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceGroupNamedPortObservation) DeepCopyInto(out *InstanceGroupNamedPortObservation) {
	*out = *in
	if in.Group != nil {
		in, out := &in.Group, &out.Group
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Zone != nil {
		in, out := &in.Zone, &out.Zone
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceGroupNamedPortObservation.
func (in *InstanceGroupNamedPortObservation) DeepCopy() *InstanceGroupNamedPortObservation {
	if in == nil {
		return nil
	}
	out := new(InstanceGroupNamedPortObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceGroupNamedPortParameters) DeepCopyInto(out *InstanceGroupNamedPortParameters) {
	*out = *in
	if in.Group != nil {
		in, out := &in.Group, &out.Group
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Zone != nil {
		in, out := &in.Zone, &out.Zone
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceGroupNamedPortParameters.
func (in *InstanceGroupNamedPortParameters) DeepCopy() *InstanceGroupNamedPortParameters {
	if in == nil {
		return nil
	}
	out := new(InstanceGroupNamedPortParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceGroupNamedPortSpec) DeepCopyInto(out *InstanceGroupNamedPortSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceGroupNamedPortSpec.
func (in *InstanceGroupNamedPortSpec) DeepCopy() *InstanceGroupNamedPortSpec {
	if in == nil {
		return nil
	}
	out := new(InstanceGroupNamedPortSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceGroupNamedPortStatus) DeepCopyInto(out *InstanceGroupNamedPortStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceGroupNamedPortStatus.
func (in *InstanceGroupNamedPortStatus) DeepCopy() *InstanceGroupNamedPortStatus {
	if in == nil {
		return nil
	}
	out := new(InstanceGroupNamedPortStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceGroupObservation) DeepCopyInto(out *InstanceGroupObservation) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Instances != nil {
		in, out := &in.Instances, &out.Instances
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.NamedPort != nil {
		in, out := &in.NamedPort, &out.NamedPort
		*out = make([]NamedPortObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Network != nil {
		in, out := &in.Network, &out.Network
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.SelfLink != nil {
		in, out := &in.SelfLink, &out.SelfLink
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(float64)
		**out = **in
	}
	if in.Zone != nil {
		in, out := &in.Zone, &out.Zone
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceGroupObservation.
func (in *InstanceGroupObservation) DeepCopy() *InstanceGroupObservation {
	if in == nil {
		return nil
	}
	out := new(InstanceGroupObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceGroupParameters) DeepCopyInto(out *InstanceGroupParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Instances != nil {
		in, out := &in.Instances, &out.Instances
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.InstancesRefs != nil {
		in, out := &in.InstancesRefs, &out.InstancesRefs
		*out = make([]v1.Reference, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.InstancesSelector != nil {
		in, out := &in.InstancesSelector, &out.InstancesSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.NamedPort != nil {
		in, out := &in.NamedPort, &out.NamedPort
		*out = make([]NamedPortParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Network != nil {
		in, out := &in.Network, &out.Network
		*out = new(string)
		**out = **in
	}
	if in.NetworkRef != nil {
		in, out := &in.NetworkRef, &out.NetworkRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.NetworkSelector != nil {
		in, out := &in.NetworkSelector, &out.NetworkSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Zone != nil {
		in, out := &in.Zone, &out.Zone
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceGroupParameters.
func (in *InstanceGroupParameters) DeepCopy() *InstanceGroupParameters {
	if in == nil {
		return nil
	}
	out := new(InstanceGroupParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceGroupSpec) DeepCopyInto(out *InstanceGroupSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceGroupSpec.
func (in *InstanceGroupSpec) DeepCopy() *InstanceGroupSpec {
	if in == nil {
		return nil
	}
	out := new(InstanceGroupSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceGroupStatus) DeepCopyInto(out *InstanceGroupStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceGroupStatus.
func (in *InstanceGroupStatus) DeepCopy() *InstanceGroupStatus {
	if in == nil {
		return nil
	}
	out := new(InstanceGroupStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceIAMMember) DeepCopyInto(out *InstanceIAMMember) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceIAMMember.
func (in *InstanceIAMMember) DeepCopy() *InstanceIAMMember {
	if in == nil {
		return nil
	}
	out := new(InstanceIAMMember)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *InstanceIAMMember) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceIAMMemberConditionInitParameters) DeepCopyInto(out *InstanceIAMMemberConditionInitParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Expression != nil {
		in, out := &in.Expression, &out.Expression
		*out = new(string)
		**out = **in
	}
	if in.Title != nil {
		in, out := &in.Title, &out.Title
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceIAMMemberConditionInitParameters.
func (in *InstanceIAMMemberConditionInitParameters) DeepCopy() *InstanceIAMMemberConditionInitParameters {
	if in == nil {
		return nil
	}
	out := new(InstanceIAMMemberConditionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceIAMMemberConditionObservation) DeepCopyInto(out *InstanceIAMMemberConditionObservation) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Expression != nil {
		in, out := &in.Expression, &out.Expression
		*out = new(string)
		**out = **in
	}
	if in.Title != nil {
		in, out := &in.Title, &out.Title
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceIAMMemberConditionObservation.
func (in *InstanceIAMMemberConditionObservation) DeepCopy() *InstanceIAMMemberConditionObservation {
	if in == nil {
		return nil
	}
	out := new(InstanceIAMMemberConditionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceIAMMemberConditionParameters) DeepCopyInto(out *InstanceIAMMemberConditionParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Expression != nil {
		in, out := &in.Expression, &out.Expression
		*out = new(string)
		**out = **in
	}
	if in.Title != nil {
		in, out := &in.Title, &out.Title
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceIAMMemberConditionParameters.
func (in *InstanceIAMMemberConditionParameters) DeepCopy() *InstanceIAMMemberConditionParameters {
	if in == nil {
		return nil
	}
	out := new(InstanceIAMMemberConditionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceIAMMemberInitParameters) DeepCopyInto(out *InstanceIAMMemberInitParameters) {
	*out = *in
	if in.Condition != nil {
		in, out := &in.Condition, &out.Condition
		*out = make([]InstanceIAMMemberConditionInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.InstanceName != nil {
		in, out := &in.InstanceName, &out.InstanceName
		*out = new(string)
		**out = **in
	}
	if in.InstanceNameRef != nil {
		in, out := &in.InstanceNameRef, &out.InstanceNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.InstanceNameSelector != nil {
		in, out := &in.InstanceNameSelector, &out.InstanceNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Member != nil {
		in, out := &in.Member, &out.Member
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Role != nil {
		in, out := &in.Role, &out.Role
		*out = new(string)
		**out = **in
	}
	if in.Zone != nil {
		in, out := &in.Zone, &out.Zone
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceIAMMemberInitParameters.
func (in *InstanceIAMMemberInitParameters) DeepCopy() *InstanceIAMMemberInitParameters {
	if in == nil {
		return nil
	}
	out := new(InstanceIAMMemberInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceIAMMemberList) DeepCopyInto(out *InstanceIAMMemberList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]InstanceIAMMember, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceIAMMemberList.
func (in *InstanceIAMMemberList) DeepCopy() *InstanceIAMMemberList {
	if in == nil {
		return nil
	}
	out := new(InstanceIAMMemberList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *InstanceIAMMemberList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceIAMMemberObservation) DeepCopyInto(out *InstanceIAMMemberObservation) {
	*out = *in
	if in.Condition != nil {
		in, out := &in.Condition, &out.Condition
		*out = make([]InstanceIAMMemberConditionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Etag != nil {
		in, out := &in.Etag, &out.Etag
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.InstanceName != nil {
		in, out := &in.InstanceName, &out.InstanceName
		*out = new(string)
		**out = **in
	}
	if in.Member != nil {
		in, out := &in.Member, &out.Member
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Role != nil {
		in, out := &in.Role, &out.Role
		*out = new(string)
		**out = **in
	}
	if in.Zone != nil {
		in, out := &in.Zone, &out.Zone
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceIAMMemberObservation.
func (in *InstanceIAMMemberObservation) DeepCopy() *InstanceIAMMemberObservation {
	if in == nil {
		return nil
	}
	out := new(InstanceIAMMemberObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceIAMMemberParameters) DeepCopyInto(out *InstanceIAMMemberParameters) {
	*out = *in
	if in.Condition != nil {
		in, out := &in.Condition, &out.Condition
		*out = make([]InstanceIAMMemberConditionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.InstanceName != nil {
		in, out := &in.InstanceName, &out.InstanceName
		*out = new(string)
		**out = **in
	}
	if in.InstanceNameRef != nil {
		in, out := &in.InstanceNameRef, &out.InstanceNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.InstanceNameSelector != nil {
		in, out := &in.InstanceNameSelector, &out.InstanceNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Member != nil {
		in, out := &in.Member, &out.Member
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Role != nil {
		in, out := &in.Role, &out.Role
		*out = new(string)
		**out = **in
	}
	if in.Zone != nil {
		in, out := &in.Zone, &out.Zone
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceIAMMemberParameters.
func (in *InstanceIAMMemberParameters) DeepCopy() *InstanceIAMMemberParameters {
	if in == nil {
		return nil
	}
	out := new(InstanceIAMMemberParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceIAMMemberSpec) DeepCopyInto(out *InstanceIAMMemberSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceIAMMemberSpec.
func (in *InstanceIAMMemberSpec) DeepCopy() *InstanceIAMMemberSpec {
	if in == nil {
		return nil
	}
	out := new(InstanceIAMMemberSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceIAMMemberStatus) DeepCopyInto(out *InstanceIAMMemberStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceIAMMemberStatus.
func (in *InstanceIAMMemberStatus) DeepCopy() *InstanceIAMMemberStatus {
	if in == nil {
		return nil
	}
	out := new(InstanceIAMMemberStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceInitParameters) DeepCopyInto(out *InstanceInitParameters) {
	*out = *in
	if in.AdvancedMachineFeatures != nil {
		in, out := &in.AdvancedMachineFeatures, &out.AdvancedMachineFeatures
		*out = make([]AdvancedMachineFeaturesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AllowStoppingForUpdate != nil {
		in, out := &in.AllowStoppingForUpdate, &out.AllowStoppingForUpdate
		*out = new(bool)
		**out = **in
	}
	if in.AttachedDisk != nil {
		in, out := &in.AttachedDisk, &out.AttachedDisk
		*out = make([]InstanceAttachedDiskInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.BootDisk != nil {
		in, out := &in.BootDisk, &out.BootDisk
		*out = make([]BootDiskInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CanIPForward != nil {
		in, out := &in.CanIPForward, &out.CanIPForward
		*out = new(bool)
		**out = **in
	}
	if in.ConfidentialInstanceConfig != nil {
		in, out := &in.ConfidentialInstanceConfig, &out.ConfidentialInstanceConfig
		*out = make([]ConfidentialInstanceConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DeletionProtection != nil {
		in, out := &in.DeletionProtection, &out.DeletionProtection
		*out = new(bool)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DesiredStatus != nil {
		in, out := &in.DesiredStatus, &out.DesiredStatus
		*out = new(string)
		**out = **in
	}
	if in.EnableDisplay != nil {
		in, out := &in.EnableDisplay, &out.EnableDisplay
		*out = new(bool)
		**out = **in
	}
	if in.GuestAccelerator != nil {
		in, out := &in.GuestAccelerator, &out.GuestAccelerator
		*out = make([]GuestAcceleratorInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Hostname != nil {
		in, out := &in.Hostname, &out.Hostname
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.MachineType != nil {
		in, out := &in.MachineType, &out.MachineType
		*out = new(string)
		**out = **in
	}
	if in.Metadata != nil {
		in, out := &in.Metadata, &out.Metadata
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.MetadataStartupScript != nil {
		in, out := &in.MetadataStartupScript, &out.MetadataStartupScript
		*out = new(string)
		**out = **in
	}
	if in.MinCPUPlatform != nil {
		in, out := &in.MinCPUPlatform, &out.MinCPUPlatform
		*out = new(string)
		**out = **in
	}
	if in.NetworkInterface != nil {
		in, out := &in.NetworkInterface, &out.NetworkInterface
		*out = make([]NetworkInterfaceInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NetworkPerformanceConfig != nil {
		in, out := &in.NetworkPerformanceConfig, &out.NetworkPerformanceConfig
		*out = make([]NetworkPerformanceConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Params != nil {
		in, out := &in.Params, &out.Params
		*out = make([]ParamsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.ReservationAffinity != nil {
		in, out := &in.ReservationAffinity, &out.ReservationAffinity
		*out = make([]ReservationAffinityInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ResourcePolicies != nil {
		in, out := &in.ResourcePolicies, &out.ResourcePolicies
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Scheduling != nil {
		in, out := &in.Scheduling, &out.Scheduling
		*out = make([]SchedulingInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ScratchDisk != nil {
		in, out := &in.ScratchDisk, &out.ScratchDisk
		*out = make([]ScratchDiskInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ServiceAccount != nil {
		in, out := &in.ServiceAccount, &out.ServiceAccount
		*out = make([]ServiceAccountInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ShieldedInstanceConfig != nil {
		in, out := &in.ShieldedInstanceConfig, &out.ShieldedInstanceConfig
		*out = make([]ShieldedInstanceConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceInitParameters.
func (in *InstanceInitParameters) DeepCopy() *InstanceInitParameters {
	if in == nil {
		return nil
	}
	out := new(InstanceInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceLifecyclePolicyInitParameters) DeepCopyInto(out *InstanceLifecyclePolicyInitParameters) {
	*out = *in
	if in.DefaultActionOnFailure != nil {
		in, out := &in.DefaultActionOnFailure, &out.DefaultActionOnFailure
		*out = new(string)
		**out = **in
	}
	if in.ForceUpdateOnRepair != nil {
		in, out := &in.ForceUpdateOnRepair, &out.ForceUpdateOnRepair
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceLifecyclePolicyInitParameters.
func (in *InstanceLifecyclePolicyInitParameters) DeepCopy() *InstanceLifecyclePolicyInitParameters {
	if in == nil {
		return nil
	}
	out := new(InstanceLifecyclePolicyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceLifecyclePolicyObservation) DeepCopyInto(out *InstanceLifecyclePolicyObservation) {
	*out = *in
	if in.DefaultActionOnFailure != nil {
		in, out := &in.DefaultActionOnFailure, &out.DefaultActionOnFailure
		*out = new(string)
		**out = **in
	}
	if in.ForceUpdateOnRepair != nil {
		in, out := &in.ForceUpdateOnRepair, &out.ForceUpdateOnRepair
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceLifecyclePolicyObservation.
func (in *InstanceLifecyclePolicyObservation) DeepCopy() *InstanceLifecyclePolicyObservation {
	if in == nil {
		return nil
	}
	out := new(InstanceLifecyclePolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceLifecyclePolicyParameters) DeepCopyInto(out *InstanceLifecyclePolicyParameters) {
	*out = *in
	if in.DefaultActionOnFailure != nil {
		in, out := &in.DefaultActionOnFailure, &out.DefaultActionOnFailure
		*out = new(string)
		**out = **in
	}
	if in.ForceUpdateOnRepair != nil {
		in, out := &in.ForceUpdateOnRepair, &out.ForceUpdateOnRepair
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceLifecyclePolicyParameters.
func (in *InstanceLifecyclePolicyParameters) DeepCopy() *InstanceLifecyclePolicyParameters {
	if in == nil {
		return nil
	}
	out := new(InstanceLifecyclePolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceList) DeepCopyInto(out *InstanceList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Instance, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceList.
func (in *InstanceList) DeepCopy() *InstanceList {
	if in == nil {
		return nil
	}
	out := new(InstanceList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *InstanceList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceObservation) DeepCopyInto(out *InstanceObservation) {
	*out = *in
	if in.AdvancedMachineFeatures != nil {
		in, out := &in.AdvancedMachineFeatures, &out.AdvancedMachineFeatures
		*out = make([]AdvancedMachineFeaturesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AllowStoppingForUpdate != nil {
		in, out := &in.AllowStoppingForUpdate, &out.AllowStoppingForUpdate
		*out = new(bool)
		**out = **in
	}
	if in.AttachedDisk != nil {
		in, out := &in.AttachedDisk, &out.AttachedDisk
		*out = make([]InstanceAttachedDiskObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.BootDisk != nil {
		in, out := &in.BootDisk, &out.BootDisk
		*out = make([]BootDiskObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CPUPlatform != nil {
		in, out := &in.CPUPlatform, &out.CPUPlatform
		*out = new(string)
		**out = **in
	}
	if in.CanIPForward != nil {
		in, out := &in.CanIPForward, &out.CanIPForward
		*out = new(bool)
		**out = **in
	}
	if in.ConfidentialInstanceConfig != nil {
		in, out := &in.ConfidentialInstanceConfig, &out.ConfidentialInstanceConfig
		*out = make([]ConfidentialInstanceConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CurrentStatus != nil {
		in, out := &in.CurrentStatus, &out.CurrentStatus
		*out = new(string)
		**out = **in
	}
	if in.DeletionProtection != nil {
		in, out := &in.DeletionProtection, &out.DeletionProtection
		*out = new(bool)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DesiredStatus != nil {
		in, out := &in.DesiredStatus, &out.DesiredStatus
		*out = new(string)
		**out = **in
	}
	if in.EffectiveLabels != nil {
		in, out := &in.EffectiveLabels, &out.EffectiveLabels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.EnableDisplay != nil {
		in, out := &in.EnableDisplay, &out.EnableDisplay
		*out = new(bool)
		**out = **in
	}
	if in.GuestAccelerator != nil {
		in, out := &in.GuestAccelerator, &out.GuestAccelerator
		*out = make([]GuestAcceleratorObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Hostname != nil {
		in, out := &in.Hostname, &out.Hostname
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.InstanceID != nil {
		in, out := &in.InstanceID, &out.InstanceID
		*out = new(string)
		**out = **in
	}
	if in.LabelFingerprint != nil {
		in, out := &in.LabelFingerprint, &out.LabelFingerprint
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.MachineType != nil {
		in, out := &in.MachineType, &out.MachineType
		*out = new(string)
		**out = **in
	}
	if in.Metadata != nil {
		in, out := &in.Metadata, &out.Metadata
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.MetadataFingerprint != nil {
		in, out := &in.MetadataFingerprint, &out.MetadataFingerprint
		*out = new(string)
		**out = **in
	}
	if in.MetadataStartupScript != nil {
		in, out := &in.MetadataStartupScript, &out.MetadataStartupScript
		*out = new(string)
		**out = **in
	}
	if in.MinCPUPlatform != nil {
		in, out := &in.MinCPUPlatform, &out.MinCPUPlatform
		*out = new(string)
		**out = **in
	}
	if in.NetworkInterface != nil {
		in, out := &in.NetworkInterface, &out.NetworkInterface
		*out = make([]NetworkInterfaceObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NetworkPerformanceConfig != nil {
		in, out := &in.NetworkPerformanceConfig, &out.NetworkPerformanceConfig
		*out = make([]NetworkPerformanceConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Params != nil {
		in, out := &in.Params, &out.Params
		*out = make([]ParamsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.ReservationAffinity != nil {
		in, out := &in.ReservationAffinity, &out.ReservationAffinity
		*out = make([]ReservationAffinityObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ResourcePolicies != nil {
		in, out := &in.ResourcePolicies, &out.ResourcePolicies
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Scheduling != nil {
		in, out := &in.Scheduling, &out.Scheduling
		*out = make([]SchedulingObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ScratchDisk != nil {
		in, out := &in.ScratchDisk, &out.ScratchDisk
		*out = make([]ScratchDiskObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SelfLink != nil {
		in, out := &in.SelfLink, &out.SelfLink
		*out = new(string)
		**out = **in
	}
	if in.ServiceAccount != nil {
		in, out := &in.ServiceAccount, &out.ServiceAccount
		*out = make([]ServiceAccountObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ShieldedInstanceConfig != nil {
		in, out := &in.ShieldedInstanceConfig, &out.ShieldedInstanceConfig
		*out = make([]ShieldedInstanceConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.TagsFingerprint != nil {
		in, out := &in.TagsFingerprint, &out.TagsFingerprint
		*out = new(string)
		**out = **in
	}
	if in.TerraformLabels != nil {
		in, out := &in.TerraformLabels, &out.TerraformLabels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Zone != nil {
		in, out := &in.Zone, &out.Zone
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceObservation.
func (in *InstanceObservation) DeepCopy() *InstanceObservation {
	if in == nil {
		return nil
	}
	out := new(InstanceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceParameters) DeepCopyInto(out *InstanceParameters) {
	*out = *in
	if in.AdvancedMachineFeatures != nil {
		in, out := &in.AdvancedMachineFeatures, &out.AdvancedMachineFeatures
		*out = make([]AdvancedMachineFeaturesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AllowStoppingForUpdate != nil {
		in, out := &in.AllowStoppingForUpdate, &out.AllowStoppingForUpdate
		*out = new(bool)
		**out = **in
	}
	if in.AttachedDisk != nil {
		in, out := &in.AttachedDisk, &out.AttachedDisk
		*out = make([]InstanceAttachedDiskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.BootDisk != nil {
		in, out := &in.BootDisk, &out.BootDisk
		*out = make([]BootDiskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CanIPForward != nil {
		in, out := &in.CanIPForward, &out.CanIPForward
		*out = new(bool)
		**out = **in
	}
	if in.ConfidentialInstanceConfig != nil {
		in, out := &in.ConfidentialInstanceConfig, &out.ConfidentialInstanceConfig
		*out = make([]ConfidentialInstanceConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DeletionProtection != nil {
		in, out := &in.DeletionProtection, &out.DeletionProtection
		*out = new(bool)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DesiredStatus != nil {
		in, out := &in.DesiredStatus, &out.DesiredStatus
		*out = new(string)
		**out = **in
	}
	if in.EnableDisplay != nil {
		in, out := &in.EnableDisplay, &out.EnableDisplay
		*out = new(bool)
		**out = **in
	}
	if in.GuestAccelerator != nil {
		in, out := &in.GuestAccelerator, &out.GuestAccelerator
		*out = make([]GuestAcceleratorParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Hostname != nil {
		in, out := &in.Hostname, &out.Hostname
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.MachineType != nil {
		in, out := &in.MachineType, &out.MachineType
		*out = new(string)
		**out = **in
	}
	if in.Metadata != nil {
		in, out := &in.Metadata, &out.Metadata
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.MetadataStartupScript != nil {
		in, out := &in.MetadataStartupScript, &out.MetadataStartupScript
		*out = new(string)
		**out = **in
	}
	if in.MinCPUPlatform != nil {
		in, out := &in.MinCPUPlatform, &out.MinCPUPlatform
		*out = new(string)
		**out = **in
	}
	if in.NetworkInterface != nil {
		in, out := &in.NetworkInterface, &out.NetworkInterface
		*out = make([]NetworkInterfaceParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NetworkPerformanceConfig != nil {
		in, out := &in.NetworkPerformanceConfig, &out.NetworkPerformanceConfig
		*out = make([]NetworkPerformanceConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Params != nil {
		in, out := &in.Params, &out.Params
		*out = make([]ParamsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.ReservationAffinity != nil {
		in, out := &in.ReservationAffinity, &out.ReservationAffinity
		*out = make([]ReservationAffinityParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ResourcePolicies != nil {
		in, out := &in.ResourcePolicies, &out.ResourcePolicies
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Scheduling != nil {
		in, out := &in.Scheduling, &out.Scheduling
		*out = make([]SchedulingParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ScratchDisk != nil {
		in, out := &in.ScratchDisk, &out.ScratchDisk
		*out = make([]ScratchDiskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ServiceAccount != nil {
		in, out := &in.ServiceAccount, &out.ServiceAccount
		*out = make([]ServiceAccountParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ShieldedInstanceConfig != nil {
		in, out := &in.ShieldedInstanceConfig, &out.ShieldedInstanceConfig
		*out = make([]ShieldedInstanceConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Zone != nil {
		in, out := &in.Zone, &out.Zone
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceParameters.
func (in *InstanceParameters) DeepCopy() *InstanceParameters {
	if in == nil {
		return nil
	}
	out := new(InstanceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstancePropertiesInitParameters) DeepCopyInto(out *InstancePropertiesInitParameters) {
	*out = *in
	if in.GuestAccelerators != nil {
		in, out := &in.GuestAccelerators, &out.GuestAccelerators
		*out = make([]GuestAcceleratorsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LocalSsds != nil {
		in, out := &in.LocalSsds, &out.LocalSsds
		*out = make([]LocalSsdsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MachineType != nil {
		in, out := &in.MachineType, &out.MachineType
		*out = new(string)
		**out = **in
	}
	if in.MinCPUPlatform != nil {
		in, out := &in.MinCPUPlatform, &out.MinCPUPlatform
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstancePropertiesInitParameters.
func (in *InstancePropertiesInitParameters) DeepCopy() *InstancePropertiesInitParameters {
	if in == nil {
		return nil
	}
	out := new(InstancePropertiesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstancePropertiesObservation) DeepCopyInto(out *InstancePropertiesObservation) {
	*out = *in
	if in.GuestAccelerators != nil {
		in, out := &in.GuestAccelerators, &out.GuestAccelerators
		*out = make([]GuestAcceleratorsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LocalSsds != nil {
		in, out := &in.LocalSsds, &out.LocalSsds
		*out = make([]LocalSsdsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MachineType != nil {
		in, out := &in.MachineType, &out.MachineType
		*out = new(string)
		**out = **in
	}
	if in.MinCPUPlatform != nil {
		in, out := &in.MinCPUPlatform, &out.MinCPUPlatform
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstancePropertiesObservation.
func (in *InstancePropertiesObservation) DeepCopy() *InstancePropertiesObservation {
	if in == nil {
		return nil
	}
	out := new(InstancePropertiesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstancePropertiesParameters) DeepCopyInto(out *InstancePropertiesParameters) {
	*out = *in
	if in.GuestAccelerators != nil {
		in, out := &in.GuestAccelerators, &out.GuestAccelerators
		*out = make([]GuestAcceleratorsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LocalSsds != nil {
		in, out := &in.LocalSsds, &out.LocalSsds
		*out = make([]LocalSsdsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MachineType != nil {
		in, out := &in.MachineType, &out.MachineType
		*out = new(string)
		**out = **in
	}
	if in.MinCPUPlatform != nil {
		in, out := &in.MinCPUPlatform, &out.MinCPUPlatform
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstancePropertiesParameters.
func (in *InstancePropertiesParameters) DeepCopy() *InstancePropertiesParameters {
	if in == nil {
		return nil
	}
	out := new(InstancePropertiesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceSchedulePolicyInitParameters) DeepCopyInto(out *InstanceSchedulePolicyInitParameters) {
	*out = *in
	if in.ExpirationTime != nil {
		in, out := &in.ExpirationTime, &out.ExpirationTime
		*out = new(string)
		**out = **in
	}
	if in.StartTime != nil {
		in, out := &in.StartTime, &out.StartTime
		*out = new(string)
		**out = **in
	}
	if in.TimeZone != nil {
		in, out := &in.TimeZone, &out.TimeZone
		*out = new(string)
		**out = **in
	}
	if in.VMStartSchedule != nil {
		in, out := &in.VMStartSchedule, &out.VMStartSchedule
		*out = make([]VMStartScheduleInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VMStopSchedule != nil {
		in, out := &in.VMStopSchedule, &out.VMStopSchedule
		*out = make([]VMStopScheduleInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceSchedulePolicyInitParameters.
func (in *InstanceSchedulePolicyInitParameters) DeepCopy() *InstanceSchedulePolicyInitParameters {
	if in == nil {
		return nil
	}
	out := new(InstanceSchedulePolicyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceSchedulePolicyObservation) DeepCopyInto(out *InstanceSchedulePolicyObservation) {
	*out = *in
	if in.ExpirationTime != nil {
		in, out := &in.ExpirationTime, &out.ExpirationTime
		*out = new(string)
		**out = **in
	}
	if in.StartTime != nil {
		in, out := &in.StartTime, &out.StartTime
		*out = new(string)
		**out = **in
	}
	if in.TimeZone != nil {
		in, out := &in.TimeZone, &out.TimeZone
		*out = new(string)
		**out = **in
	}
	if in.VMStartSchedule != nil {
		in, out := &in.VMStartSchedule, &out.VMStartSchedule
		*out = make([]VMStartScheduleObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VMStopSchedule != nil {
		in, out := &in.VMStopSchedule, &out.VMStopSchedule
		*out = make([]VMStopScheduleObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceSchedulePolicyObservation.
func (in *InstanceSchedulePolicyObservation) DeepCopy() *InstanceSchedulePolicyObservation {
	if in == nil {
		return nil
	}
	out := new(InstanceSchedulePolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceSchedulePolicyParameters) DeepCopyInto(out *InstanceSchedulePolicyParameters) {
	*out = *in
	if in.ExpirationTime != nil {
		in, out := &in.ExpirationTime, &out.ExpirationTime
		*out = new(string)
		**out = **in
	}
	if in.StartTime != nil {
		in, out := &in.StartTime, &out.StartTime
		*out = new(string)
		**out = **in
	}
	if in.TimeZone != nil {
		in, out := &in.TimeZone, &out.TimeZone
		*out = new(string)
		**out = **in
	}
	if in.VMStartSchedule != nil {
		in, out := &in.VMStartSchedule, &out.VMStartSchedule
		*out = make([]VMStartScheduleParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VMStopSchedule != nil {
		in, out := &in.VMStopSchedule, &out.VMStopSchedule
		*out = make([]VMStopScheduleParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceSchedulePolicyParameters.
func (in *InstanceSchedulePolicyParameters) DeepCopy() *InstanceSchedulePolicyParameters {
	if in == nil {
		return nil
	}
	out := new(InstanceSchedulePolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceSpec) DeepCopyInto(out *InstanceSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceSpec.
func (in *InstanceSpec) DeepCopy() *InstanceSpec {
	if in == nil {
		return nil
	}
	out := new(InstanceSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceStatus) DeepCopyInto(out *InstanceStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceStatus.
func (in *InstanceStatus) DeepCopy() *InstanceStatus {
	if in == nil {
		return nil
	}
	out := new(InstanceStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceTemplate) DeepCopyInto(out *InstanceTemplate) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceTemplate.
func (in *InstanceTemplate) DeepCopy() *InstanceTemplate {
	if in == nil {
		return nil
	}
	out := new(InstanceTemplate)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *InstanceTemplate) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceTemplateAdvancedMachineFeaturesInitParameters) DeepCopyInto(out *InstanceTemplateAdvancedMachineFeaturesInitParameters) {
	*out = *in
	if in.EnableNestedVirtualization != nil {
		in, out := &in.EnableNestedVirtualization, &out.EnableNestedVirtualization
		*out = new(bool)
		**out = **in
	}
	if in.ThreadsPerCore != nil {
		in, out := &in.ThreadsPerCore, &out.ThreadsPerCore
		*out = new(float64)
		**out = **in
	}
	if in.VisibleCoreCount != nil {
		in, out := &in.VisibleCoreCount, &out.VisibleCoreCount
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceTemplateAdvancedMachineFeaturesInitParameters.
func (in *InstanceTemplateAdvancedMachineFeaturesInitParameters) DeepCopy() *InstanceTemplateAdvancedMachineFeaturesInitParameters {
	if in == nil {
		return nil
	}
	out := new(InstanceTemplateAdvancedMachineFeaturesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceTemplateAdvancedMachineFeaturesObservation) DeepCopyInto(out *InstanceTemplateAdvancedMachineFeaturesObservation) {
	*out = *in
	if in.EnableNestedVirtualization != nil {
		in, out := &in.EnableNestedVirtualization, &out.EnableNestedVirtualization
		*out = new(bool)
		**out = **in
	}
	if in.ThreadsPerCore != nil {
		in, out := &in.ThreadsPerCore, &out.ThreadsPerCore
		*out = new(float64)
		**out = **in
	}
	if in.VisibleCoreCount != nil {
		in, out := &in.VisibleCoreCount, &out.VisibleCoreCount
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceTemplateAdvancedMachineFeaturesObservation.
func (in *InstanceTemplateAdvancedMachineFeaturesObservation) DeepCopy() *InstanceTemplateAdvancedMachineFeaturesObservation {
	if in == nil {
		return nil
	}
	out := new(InstanceTemplateAdvancedMachineFeaturesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceTemplateAdvancedMachineFeaturesParameters) DeepCopyInto(out *InstanceTemplateAdvancedMachineFeaturesParameters) {
	*out = *in
	if in.EnableNestedVirtualization != nil {
		in, out := &in.EnableNestedVirtualization, &out.EnableNestedVirtualization
		*out = new(bool)
		**out = **in
	}
	if in.ThreadsPerCore != nil {
		in, out := &in.ThreadsPerCore, &out.ThreadsPerCore
		*out = new(float64)
		**out = **in
	}
	if in.VisibleCoreCount != nil {
		in, out := &in.VisibleCoreCount, &out.VisibleCoreCount
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceTemplateAdvancedMachineFeaturesParameters.
func (in *InstanceTemplateAdvancedMachineFeaturesParameters) DeepCopy() *InstanceTemplateAdvancedMachineFeaturesParameters {
	if in == nil {
		return nil
	}
	out := new(InstanceTemplateAdvancedMachineFeaturesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceTemplateConfidentialInstanceConfigInitParameters) DeepCopyInto(out *InstanceTemplateConfidentialInstanceConfigInitParameters) {
	*out = *in
	if in.ConfidentialInstanceType != nil {
		in, out := &in.ConfidentialInstanceType, &out.ConfidentialInstanceType
		*out = new(string)
		**out = **in
	}
	if in.EnableConfidentialCompute != nil {
		in, out := &in.EnableConfidentialCompute, &out.EnableConfidentialCompute
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceTemplateConfidentialInstanceConfigInitParameters.
func (in *InstanceTemplateConfidentialInstanceConfigInitParameters) DeepCopy() *InstanceTemplateConfidentialInstanceConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(InstanceTemplateConfidentialInstanceConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceTemplateConfidentialInstanceConfigObservation) DeepCopyInto(out *InstanceTemplateConfidentialInstanceConfigObservation) {
	*out = *in
	if in.ConfidentialInstanceType != nil {
		in, out := &in.ConfidentialInstanceType, &out.ConfidentialInstanceType
		*out = new(string)
		**out = **in
	}
	if in.EnableConfidentialCompute != nil {
		in, out := &in.EnableConfidentialCompute, &out.EnableConfidentialCompute
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceTemplateConfidentialInstanceConfigObservation.
func (in *InstanceTemplateConfidentialInstanceConfigObservation) DeepCopy() *InstanceTemplateConfidentialInstanceConfigObservation {
	if in == nil {
		return nil
	}
	out := new(InstanceTemplateConfidentialInstanceConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceTemplateConfidentialInstanceConfigParameters) DeepCopyInto(out *InstanceTemplateConfidentialInstanceConfigParameters) {
	*out = *in
	if in.ConfidentialInstanceType != nil {
		in, out := &in.ConfidentialInstanceType, &out.ConfidentialInstanceType
		*out = new(string)
		**out = **in
	}
	if in.EnableConfidentialCompute != nil {
		in, out := &in.EnableConfidentialCompute, &out.EnableConfidentialCompute
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceTemplateConfidentialInstanceConfigParameters.
func (in *InstanceTemplateConfidentialInstanceConfigParameters) DeepCopy() *InstanceTemplateConfidentialInstanceConfigParameters {
	if in == nil {
		return nil
	}
	out := new(InstanceTemplateConfidentialInstanceConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceTemplateDiskInitParameters) DeepCopyInto(out *InstanceTemplateDiskInitParameters) {
	*out = *in
	if in.AutoDelete != nil {
		in, out := &in.AutoDelete, &out.AutoDelete
		*out = new(bool)
		**out = **in
	}
	if in.Boot != nil {
		in, out := &in.Boot, &out.Boot
		*out = new(bool)
		**out = **in
	}
	if in.DeviceName != nil {
		in, out := &in.DeviceName, &out.DeviceName
		*out = new(string)
		**out = **in
	}
	if in.DiskEncryptionKey != nil {
		in, out := &in.DiskEncryptionKey, &out.DiskEncryptionKey
		*out = make([]DiskDiskEncryptionKeyInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DiskName != nil {
		in, out := &in.DiskName, &out.DiskName
		*out = new(string)
		**out = **in
	}
	if in.DiskSizeGb != nil {
		in, out := &in.DiskSizeGb, &out.DiskSizeGb
		*out = new(float64)
		**out = **in
	}
	if in.DiskType != nil {
		in, out := &in.DiskType, &out.DiskType
		*out = new(string)
		**out = **in
	}
	if in.Interface != nil {
		in, out := &in.Interface, &out.Interface
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Mode != nil {
		in, out := &in.Mode, &out.Mode
		*out = new(string)
		**out = **in
	}
	if in.ProvisionedIops != nil {
		in, out := &in.ProvisionedIops, &out.ProvisionedIops
		*out = new(float64)
		**out = **in
	}
	if in.ResourceManagerTags != nil {
		in, out := &in.ResourceManagerTags, &out.ResourceManagerTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ResourcePolicies != nil {
		in, out := &in.ResourcePolicies, &out.ResourcePolicies
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(string)
		**out = **in
	}
	if in.SourceImage != nil {
		in, out := &in.SourceImage, &out.SourceImage
		*out = new(string)
		**out = **in
	}
	if in.SourceImageEncryptionKey != nil {
		in, out := &in.SourceImageEncryptionKey, &out.SourceImageEncryptionKey
		*out = make([]DiskSourceImageEncryptionKeyInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SourceRef != nil {
		in, out := &in.SourceRef, &out.SourceRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SourceSelector != nil {
		in, out := &in.SourceSelector, &out.SourceSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.SourceSnapshot != nil {
		in, out := &in.SourceSnapshot, &out.SourceSnapshot
		*out = new(string)
		**out = **in
	}
	if in.SourceSnapshotEncryptionKey != nil {
		in, out := &in.SourceSnapshotEncryptionKey, &out.SourceSnapshotEncryptionKey
		*out = make([]DiskSourceSnapshotEncryptionKeyInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceTemplateDiskInitParameters.
func (in *InstanceTemplateDiskInitParameters) DeepCopy() *InstanceTemplateDiskInitParameters {
	if in == nil {
		return nil
	}
	out := new(InstanceTemplateDiskInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceTemplateDiskObservation) DeepCopyInto(out *InstanceTemplateDiskObservation) {
	*out = *in
	if in.AutoDelete != nil {
		in, out := &in.AutoDelete, &out.AutoDelete
		*out = new(bool)
		**out = **in
	}
	if in.Boot != nil {
		in, out := &in.Boot, &out.Boot
		*out = new(bool)
		**out = **in
	}
	if in.DeviceName != nil {
		in, out := &in.DeviceName, &out.DeviceName
		*out = new(string)
		**out = **in
	}
	if in.DiskEncryptionKey != nil {
		in, out := &in.DiskEncryptionKey, &out.DiskEncryptionKey
		*out = make([]DiskDiskEncryptionKeyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DiskName != nil {
		in, out := &in.DiskName, &out.DiskName
		*out = new(string)
		**out = **in
	}
	if in.DiskSizeGb != nil {
		in, out := &in.DiskSizeGb, &out.DiskSizeGb
		*out = new(float64)
		**out = **in
	}
	if in.DiskType != nil {
		in, out := &in.DiskType, &out.DiskType
		*out = new(string)
		**out = **in
	}
	if in.Interface != nil {
		in, out := &in.Interface, &out.Interface
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Mode != nil {
		in, out := &in.Mode, &out.Mode
		*out = new(string)
		**out = **in
	}
	if in.ProvisionedIops != nil {
		in, out := &in.ProvisionedIops, &out.ProvisionedIops
		*out = new(float64)
		**out = **in
	}
	if in.ResourceManagerTags != nil {
		in, out := &in.ResourceManagerTags, &out.ResourceManagerTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ResourcePolicies != nil {
		in, out := &in.ResourcePolicies, &out.ResourcePolicies
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(string)
		**out = **in
	}
	if in.SourceImage != nil {
		in, out := &in.SourceImage, &out.SourceImage
		*out = new(string)
		**out = **in
	}
	if in.SourceImageEncryptionKey != nil {
		in, out := &in.SourceImageEncryptionKey, &out.SourceImageEncryptionKey
		*out = make([]DiskSourceImageEncryptionKeyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SourceSnapshot != nil {
		in, out := &in.SourceSnapshot, &out.SourceSnapshot
		*out = new(string)
		**out = **in
	}
	if in.SourceSnapshotEncryptionKey != nil {
		in, out := &in.SourceSnapshotEncryptionKey, &out.SourceSnapshotEncryptionKey
		*out = make([]DiskSourceSnapshotEncryptionKeyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceTemplateDiskObservation.
func (in *InstanceTemplateDiskObservation) DeepCopy() *InstanceTemplateDiskObservation {
	if in == nil {
		return nil
	}
	out := new(InstanceTemplateDiskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceTemplateDiskParameters) DeepCopyInto(out *InstanceTemplateDiskParameters) {
	*out = *in
	if in.AutoDelete != nil {
		in, out := &in.AutoDelete, &out.AutoDelete
		*out = new(bool)
		**out = **in
	}
	if in.Boot != nil {
		in, out := &in.Boot, &out.Boot
		*out = new(bool)
		**out = **in
	}
	if in.DeviceName != nil {
		in, out := &in.DeviceName, &out.DeviceName
		*out = new(string)
		**out = **in
	}
	if in.DiskEncryptionKey != nil {
		in, out := &in.DiskEncryptionKey, &out.DiskEncryptionKey
		*out = make([]DiskDiskEncryptionKeyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DiskName != nil {
		in, out := &in.DiskName, &out.DiskName
		*out = new(string)
		**out = **in
	}
	if in.DiskSizeGb != nil {
		in, out := &in.DiskSizeGb, &out.DiskSizeGb
		*out = new(float64)
		**out = **in
	}
	if in.DiskType != nil {
		in, out := &in.DiskType, &out.DiskType
		*out = new(string)
		**out = **in
	}
	if in.Interface != nil {
		in, out := &in.Interface, &out.Interface
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Mode != nil {
		in, out := &in.Mode, &out.Mode
		*out = new(string)
		**out = **in
	}
	if in.ProvisionedIops != nil {
		in, out := &in.ProvisionedIops, &out.ProvisionedIops
		*out = new(float64)
		**out = **in
	}
	if in.ResourceManagerTags != nil {
		in, out := &in.ResourceManagerTags, &out.ResourceManagerTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ResourcePolicies != nil {
		in, out := &in.ResourcePolicies, &out.ResourcePolicies
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(string)
		**out = **in
	}
	if in.SourceImage != nil {
		in, out := &in.SourceImage, &out.SourceImage
		*out = new(string)
		**out = **in
	}
	if in.SourceImageEncryptionKey != nil {
		in, out := &in.SourceImageEncryptionKey, &out.SourceImageEncryptionKey
		*out = make([]DiskSourceImageEncryptionKeyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SourceRef != nil {
		in, out := &in.SourceRef, &out.SourceRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SourceSelector != nil {
		in, out := &in.SourceSelector, &out.SourceSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.SourceSnapshot != nil {
		in, out := &in.SourceSnapshot, &out.SourceSnapshot
		*out = new(string)
		**out = **in
	}
	if in.SourceSnapshotEncryptionKey != nil {
		in, out := &in.SourceSnapshotEncryptionKey, &out.SourceSnapshotEncryptionKey
		*out = make([]DiskSourceSnapshotEncryptionKeyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceTemplateDiskParameters.
func (in *InstanceTemplateDiskParameters) DeepCopy() *InstanceTemplateDiskParameters {
	if in == nil {
		return nil
	}
	out := new(InstanceTemplateDiskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceTemplateGuestAcceleratorInitParameters) DeepCopyInto(out *InstanceTemplateGuestAcceleratorInitParameters) {
	*out = *in
	if in.Count != nil {
		in, out := &in.Count, &out.Count
		*out = new(float64)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceTemplateGuestAcceleratorInitParameters.
func (in *InstanceTemplateGuestAcceleratorInitParameters) DeepCopy() *InstanceTemplateGuestAcceleratorInitParameters {
	if in == nil {
		return nil
	}
	out := new(InstanceTemplateGuestAcceleratorInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceTemplateGuestAcceleratorObservation) DeepCopyInto(out *InstanceTemplateGuestAcceleratorObservation) {
	*out = *in
	if in.Count != nil {
		in, out := &in.Count, &out.Count
		*out = new(float64)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceTemplateGuestAcceleratorObservation.
func (in *InstanceTemplateGuestAcceleratorObservation) DeepCopy() *InstanceTemplateGuestAcceleratorObservation {
	if in == nil {
		return nil
	}
	out := new(InstanceTemplateGuestAcceleratorObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceTemplateGuestAcceleratorParameters) DeepCopyInto(out *InstanceTemplateGuestAcceleratorParameters) {
	*out = *in
	if in.Count != nil {
		in, out := &in.Count, &out.Count
		*out = new(float64)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceTemplateGuestAcceleratorParameters.
func (in *InstanceTemplateGuestAcceleratorParameters) DeepCopy() *InstanceTemplateGuestAcceleratorParameters {
	if in == nil {
		return nil
	}
	out := new(InstanceTemplateGuestAcceleratorParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceTemplateInitParameters) DeepCopyInto(out *InstanceTemplateInitParameters) {
	*out = *in
	if in.AdvancedMachineFeatures != nil {
		in, out := &in.AdvancedMachineFeatures, &out.AdvancedMachineFeatures
		*out = make([]InstanceTemplateAdvancedMachineFeaturesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CanIPForward != nil {
		in, out := &in.CanIPForward, &out.CanIPForward
		*out = new(bool)
		**out = **in
	}
	if in.ConfidentialInstanceConfig != nil {
		in, out := &in.ConfidentialInstanceConfig, &out.ConfidentialInstanceConfig
		*out = make([]InstanceTemplateConfidentialInstanceConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]InstanceTemplateDiskInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.GuestAccelerator != nil {
		in, out := &in.GuestAccelerator, &out.GuestAccelerator
		*out = make([]InstanceTemplateGuestAcceleratorInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.InstanceDescription != nil {
		in, out := &in.InstanceDescription, &out.InstanceDescription
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.MachineType != nil {
		in, out := &in.MachineType, &out.MachineType
		*out = new(string)
		**out = **in
	}
	if in.Metadata != nil {
		in, out := &in.Metadata, &out.Metadata
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.MetadataStartupScript != nil {
		in, out := &in.MetadataStartupScript, &out.MetadataStartupScript
		*out = new(string)
		**out = **in
	}
	if in.MinCPUPlatform != nil {
		in, out := &in.MinCPUPlatform, &out.MinCPUPlatform
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NamePrefix != nil {
		in, out := &in.NamePrefix, &out.NamePrefix
		*out = new(string)
		**out = **in
	}
	if in.NetworkInterface != nil {
		in, out := &in.NetworkInterface, &out.NetworkInterface
		*out = make([]InstanceTemplateNetworkInterfaceInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NetworkPerformanceConfig != nil {
		in, out := &in.NetworkPerformanceConfig, &out.NetworkPerformanceConfig
		*out = make([]InstanceTemplateNetworkPerformanceConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.ReservationAffinity != nil {
		in, out := &in.ReservationAffinity, &out.ReservationAffinity
		*out = make([]InstanceTemplateReservationAffinityInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ResourceManagerTags != nil {
		in, out := &in.ResourceManagerTags, &out.ResourceManagerTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ResourcePolicies != nil {
		in, out := &in.ResourcePolicies, &out.ResourcePolicies
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Scheduling != nil {
		in, out := &in.Scheduling, &out.Scheduling
		*out = make([]InstanceTemplateSchedulingInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ServiceAccount != nil {
		in, out := &in.ServiceAccount, &out.ServiceAccount
		*out = make([]InstanceTemplateServiceAccountInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ShieldedInstanceConfig != nil {
		in, out := &in.ShieldedInstanceConfig, &out.ShieldedInstanceConfig
		*out = make([]InstanceTemplateShieldedInstanceConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceTemplateInitParameters.
func (in *InstanceTemplateInitParameters) DeepCopy() *InstanceTemplateInitParameters {
	if in == nil {
		return nil
	}
	out := new(InstanceTemplateInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceTemplateList) DeepCopyInto(out *InstanceTemplateList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]InstanceTemplate, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceTemplateList.
func (in *InstanceTemplateList) DeepCopy() *InstanceTemplateList {
	if in == nil {
		return nil
	}
	out := new(InstanceTemplateList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *InstanceTemplateList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceTemplateNetworkInterfaceAccessConfigInitParameters) DeepCopyInto(out *InstanceTemplateNetworkInterfaceAccessConfigInitParameters) {
	*out = *in
	if in.NATIP != nil {
		in, out := &in.NATIP, &out.NATIP
		*out = new(string)
		**out = **in
	}
	if in.NetworkTier != nil {
		in, out := &in.NetworkTier, &out.NetworkTier
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceTemplateNetworkInterfaceAccessConfigInitParameters.
func (in *InstanceTemplateNetworkInterfaceAccessConfigInitParameters) DeepCopy() *InstanceTemplateNetworkInterfaceAccessConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(InstanceTemplateNetworkInterfaceAccessConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceTemplateNetworkInterfaceAccessConfigObservation) DeepCopyInto(out *InstanceTemplateNetworkInterfaceAccessConfigObservation) {
	*out = *in
	if in.NATIP != nil {
		in, out := &in.NATIP, &out.NATIP
		*out = new(string)
		**out = **in
	}
	if in.NetworkTier != nil {
		in, out := &in.NetworkTier, &out.NetworkTier
		*out = new(string)
		**out = **in
	}
	if in.PublicPtrDomainName != nil {
		in, out := &in.PublicPtrDomainName, &out.PublicPtrDomainName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceTemplateNetworkInterfaceAccessConfigObservation.
func (in *InstanceTemplateNetworkInterfaceAccessConfigObservation) DeepCopy() *InstanceTemplateNetworkInterfaceAccessConfigObservation {
	if in == nil {
		return nil
	}
	out := new(InstanceTemplateNetworkInterfaceAccessConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceTemplateNetworkInterfaceAccessConfigParameters) DeepCopyInto(out *InstanceTemplateNetworkInterfaceAccessConfigParameters) {
	*out = *in
	if in.NATIP != nil {
		in, out := &in.NATIP, &out.NATIP
		*out = new(string)
		**out = **in
	}
	if in.NetworkTier != nil {
		in, out := &in.NetworkTier, &out.NetworkTier
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceTemplateNetworkInterfaceAccessConfigParameters.
func (in *InstanceTemplateNetworkInterfaceAccessConfigParameters) DeepCopy() *InstanceTemplateNetworkInterfaceAccessConfigParameters {
	if in == nil {
		return nil
	}
	out := new(InstanceTemplateNetworkInterfaceAccessConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceTemplateNetworkInterfaceAliasIPRangeInitParameters) DeepCopyInto(out *InstanceTemplateNetworkInterfaceAliasIPRangeInitParameters) {
	*out = *in
	if in.IPCidrRange != nil {
		in, out := &in.IPCidrRange, &out.IPCidrRange
		*out = new(string)
		**out = **in
	}
	if in.SubnetworkRangeName != nil {
		in, out := &in.SubnetworkRangeName, &out.SubnetworkRangeName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceTemplateNetworkInterfaceAliasIPRangeInitParameters.
func (in *InstanceTemplateNetworkInterfaceAliasIPRangeInitParameters) DeepCopy() *InstanceTemplateNetworkInterfaceAliasIPRangeInitParameters {
	if in == nil {
		return nil
	}
	out := new(InstanceTemplateNetworkInterfaceAliasIPRangeInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceTemplateNetworkInterfaceAliasIPRangeObservation) DeepCopyInto(out *InstanceTemplateNetworkInterfaceAliasIPRangeObservation) {
	*out = *in
	if in.IPCidrRange != nil {
		in, out := &in.IPCidrRange, &out.IPCidrRange
		*out = new(string)
		**out = **in
	}
	if in.SubnetworkRangeName != nil {
		in, out := &in.SubnetworkRangeName, &out.SubnetworkRangeName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceTemplateNetworkInterfaceAliasIPRangeObservation.
func (in *InstanceTemplateNetworkInterfaceAliasIPRangeObservation) DeepCopy() *InstanceTemplateNetworkInterfaceAliasIPRangeObservation {
	if in == nil {
		return nil
	}
	out := new(InstanceTemplateNetworkInterfaceAliasIPRangeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceTemplateNetworkInterfaceAliasIPRangeParameters) DeepCopyInto(out *InstanceTemplateNetworkInterfaceAliasIPRangeParameters) {
	*out = *in
	if in.IPCidrRange != nil {
		in, out := &in.IPCidrRange, &out.IPCidrRange
		*out = new(string)
		**out = **in
	}
	if in.SubnetworkRangeName != nil {
		in, out := &in.SubnetworkRangeName, &out.SubnetworkRangeName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceTemplateNetworkInterfaceAliasIPRangeParameters.
func (in *InstanceTemplateNetworkInterfaceAliasIPRangeParameters) DeepCopy() *InstanceTemplateNetworkInterfaceAliasIPRangeParameters {
	if in == nil {
		return nil
	}
	out := new(InstanceTemplateNetworkInterfaceAliasIPRangeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceTemplateNetworkInterfaceIPv6AccessConfigInitParameters) DeepCopyInto(out *InstanceTemplateNetworkInterfaceIPv6AccessConfigInitParameters) {
	*out = *in
	if in.NetworkTier != nil {
		in, out := &in.NetworkTier, &out.NetworkTier
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceTemplateNetworkInterfaceIPv6AccessConfigInitParameters.
func (in *InstanceTemplateNetworkInterfaceIPv6AccessConfigInitParameters) DeepCopy() *InstanceTemplateNetworkInterfaceIPv6AccessConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(InstanceTemplateNetworkInterfaceIPv6AccessConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceTemplateNetworkInterfaceIPv6AccessConfigObservation) DeepCopyInto(out *InstanceTemplateNetworkInterfaceIPv6AccessConfigObservation) {
	*out = *in
	if in.ExternalIPv6 != nil {
		in, out := &in.ExternalIPv6, &out.ExternalIPv6
		*out = new(string)
		**out = **in
	}
	if in.ExternalIPv6PrefixLength != nil {
		in, out := &in.ExternalIPv6PrefixLength, &out.ExternalIPv6PrefixLength
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NetworkTier != nil {
		in, out := &in.NetworkTier, &out.NetworkTier
		*out = new(string)
		**out = **in
	}
	if in.PublicPtrDomainName != nil {
		in, out := &in.PublicPtrDomainName, &out.PublicPtrDomainName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceTemplateNetworkInterfaceIPv6AccessConfigObservation.
func (in *InstanceTemplateNetworkInterfaceIPv6AccessConfigObservation) DeepCopy() *InstanceTemplateNetworkInterfaceIPv6AccessConfigObservation {
	if in == nil {
		return nil
	}
	out := new(InstanceTemplateNetworkInterfaceIPv6AccessConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceTemplateNetworkInterfaceIPv6AccessConfigParameters) DeepCopyInto(out *InstanceTemplateNetworkInterfaceIPv6AccessConfigParameters) {
	*out = *in
	if in.NetworkTier != nil {
		in, out := &in.NetworkTier, &out.NetworkTier
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceTemplateNetworkInterfaceIPv6AccessConfigParameters.
func (in *InstanceTemplateNetworkInterfaceIPv6AccessConfigParameters) DeepCopy() *InstanceTemplateNetworkInterfaceIPv6AccessConfigParameters {
	if in == nil {
		return nil
	}
	out := new(InstanceTemplateNetworkInterfaceIPv6AccessConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceTemplateNetworkInterfaceInitParameters) DeepCopyInto(out *InstanceTemplateNetworkInterfaceInitParameters) {
	*out = *in
	if in.AccessConfig != nil {
		in, out := &in.AccessConfig, &out.AccessConfig
		*out = make([]InstanceTemplateNetworkInterfaceAccessConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AliasIPRange != nil {
		in, out := &in.AliasIPRange, &out.AliasIPRange
		*out = make([]InstanceTemplateNetworkInterfaceAliasIPRangeInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IPv6AccessConfig != nil {
		in, out := &in.IPv6AccessConfig, &out.IPv6AccessConfig
		*out = make([]InstanceTemplateNetworkInterfaceIPv6AccessConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IPv6Address != nil {
		in, out := &in.IPv6Address, &out.IPv6Address
		*out = new(string)
		**out = **in
	}
	if in.InternalIPv6PrefixLength != nil {
		in, out := &in.InternalIPv6PrefixLength, &out.InternalIPv6PrefixLength
		*out = new(float64)
		**out = **in
	}
	if in.Network != nil {
		in, out := &in.Network, &out.Network
		*out = new(string)
		**out = **in
	}
	if in.NetworkIP != nil {
		in, out := &in.NetworkIP, &out.NetworkIP
		*out = new(string)
		**out = **in
	}
	if in.NetworkRef != nil {
		in, out := &in.NetworkRef, &out.NetworkRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.NetworkSelector != nil {
		in, out := &in.NetworkSelector, &out.NetworkSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.NicType != nil {
		in, out := &in.NicType, &out.NicType
		*out = new(string)
		**out = **in
	}
	if in.QueueCount != nil {
		in, out := &in.QueueCount, &out.QueueCount
		*out = new(float64)
		**out = **in
	}
	if in.StackType != nil {
		in, out := &in.StackType, &out.StackType
		*out = new(string)
		**out = **in
	}
	if in.Subnetwork != nil {
		in, out := &in.Subnetwork, &out.Subnetwork
		*out = new(string)
		**out = **in
	}
	if in.SubnetworkProject != nil {
		in, out := &in.SubnetworkProject, &out.SubnetworkProject
		*out = new(string)
		**out = **in
	}
	if in.SubnetworkRef != nil {
		in, out := &in.SubnetworkRef, &out.SubnetworkRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SubnetworkSelector != nil {
		in, out := &in.SubnetworkSelector, &out.SubnetworkSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceTemplateNetworkInterfaceInitParameters.
func (in *InstanceTemplateNetworkInterfaceInitParameters) DeepCopy() *InstanceTemplateNetworkInterfaceInitParameters {
	if in == nil {
		return nil
	}
	out := new(InstanceTemplateNetworkInterfaceInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceTemplateNetworkInterfaceObservation) DeepCopyInto(out *InstanceTemplateNetworkInterfaceObservation) {
	*out = *in
	if in.AccessConfig != nil {
		in, out := &in.AccessConfig, &out.AccessConfig
		*out = make([]InstanceTemplateNetworkInterfaceAccessConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AliasIPRange != nil {
		in, out := &in.AliasIPRange, &out.AliasIPRange
		*out = make([]InstanceTemplateNetworkInterfaceAliasIPRangeObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IPv6AccessConfig != nil {
		in, out := &in.IPv6AccessConfig, &out.IPv6AccessConfig
		*out = make([]InstanceTemplateNetworkInterfaceIPv6AccessConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IPv6AccessType != nil {
		in, out := &in.IPv6AccessType, &out.IPv6AccessType
		*out = new(string)
		**out = **in
	}
	if in.IPv6Address != nil {
		in, out := &in.IPv6Address, &out.IPv6Address
		*out = new(string)
		**out = **in
	}
	if in.InternalIPv6PrefixLength != nil {
		in, out := &in.InternalIPv6PrefixLength, &out.InternalIPv6PrefixLength
		*out = new(float64)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Network != nil {
		in, out := &in.Network, &out.Network
		*out = new(string)
		**out = **in
	}
	if in.NetworkIP != nil {
		in, out := &in.NetworkIP, &out.NetworkIP
		*out = new(string)
		**out = **in
	}
	if in.NicType != nil {
		in, out := &in.NicType, &out.NicType
		*out = new(string)
		**out = **in
	}
	if in.QueueCount != nil {
		in, out := &in.QueueCount, &out.QueueCount
		*out = new(float64)
		**out = **in
	}
	if in.StackType != nil {
		in, out := &in.StackType, &out.StackType
		*out = new(string)
		**out = **in
	}
	if in.Subnetwork != nil {
		in, out := &in.Subnetwork, &out.Subnetwork
		*out = new(string)
		**out = **in
	}
	if in.SubnetworkProject != nil {
		in, out := &in.SubnetworkProject, &out.SubnetworkProject
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceTemplateNetworkInterfaceObservation.
func (in *InstanceTemplateNetworkInterfaceObservation) DeepCopy() *InstanceTemplateNetworkInterfaceObservation {
	if in == nil {
		return nil
	}
	out := new(InstanceTemplateNetworkInterfaceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceTemplateNetworkInterfaceParameters) DeepCopyInto(out *InstanceTemplateNetworkInterfaceParameters) {
	*out = *in
	if in.AccessConfig != nil {
		in, out := &in.AccessConfig, &out.AccessConfig
		*out = make([]InstanceTemplateNetworkInterfaceAccessConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AliasIPRange != nil {
		in, out := &in.AliasIPRange, &out.AliasIPRange
		*out = make([]InstanceTemplateNetworkInterfaceAliasIPRangeParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IPv6AccessConfig != nil {
		in, out := &in.IPv6AccessConfig, &out.IPv6AccessConfig
		*out = make([]InstanceTemplateNetworkInterfaceIPv6AccessConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IPv6Address != nil {
		in, out := &in.IPv6Address, &out.IPv6Address
		*out = new(string)
		**out = **in
	}
	if in.InternalIPv6PrefixLength != nil {
		in, out := &in.InternalIPv6PrefixLength, &out.InternalIPv6PrefixLength
		*out = new(float64)
		**out = **in
	}
	if in.Network != nil {
		in, out := &in.Network, &out.Network
		*out = new(string)
		**out = **in
	}
	if in.NetworkIP != nil {
		in, out := &in.NetworkIP, &out.NetworkIP
		*out = new(string)
		**out = **in
	}
	if in.NetworkRef != nil {
		in, out := &in.NetworkRef, &out.NetworkRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.NetworkSelector != nil {
		in, out := &in.NetworkSelector, &out.NetworkSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.NicType != nil {
		in, out := &in.NicType, &out.NicType
		*out = new(string)
		**out = **in
	}
	if in.QueueCount != nil {
		in, out := &in.QueueCount, &out.QueueCount
		*out = new(float64)
		**out = **in
	}
	if in.StackType != nil {
		in, out := &in.StackType, &out.StackType
		*out = new(string)
		**out = **in
	}
	if in.Subnetwork != nil {
		in, out := &in.Subnetwork, &out.Subnetwork
		*out = new(string)
		**out = **in
	}
	if in.SubnetworkProject != nil {
		in, out := &in.SubnetworkProject, &out.SubnetworkProject
		*out = new(string)
		**out = **in
	}
	if in.SubnetworkRef != nil {
		in, out := &in.SubnetworkRef, &out.SubnetworkRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SubnetworkSelector != nil {
		in, out := &in.SubnetworkSelector, &out.SubnetworkSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceTemplateNetworkInterfaceParameters.
func (in *InstanceTemplateNetworkInterfaceParameters) DeepCopy() *InstanceTemplateNetworkInterfaceParameters {
	if in == nil {
		return nil
	}
	out := new(InstanceTemplateNetworkInterfaceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceTemplateNetworkPerformanceConfigInitParameters) DeepCopyInto(out *InstanceTemplateNetworkPerformanceConfigInitParameters) {
	*out = *in
	if in.TotalEgressBandwidthTier != nil {
		in, out := &in.TotalEgressBandwidthTier, &out.TotalEgressBandwidthTier
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceTemplateNetworkPerformanceConfigInitParameters.
func (in *InstanceTemplateNetworkPerformanceConfigInitParameters) DeepCopy() *InstanceTemplateNetworkPerformanceConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(InstanceTemplateNetworkPerformanceConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceTemplateNetworkPerformanceConfigObservation) DeepCopyInto(out *InstanceTemplateNetworkPerformanceConfigObservation) {
	*out = *in
	if in.TotalEgressBandwidthTier != nil {
		in, out := &in.TotalEgressBandwidthTier, &out.TotalEgressBandwidthTier
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceTemplateNetworkPerformanceConfigObservation.
func (in *InstanceTemplateNetworkPerformanceConfigObservation) DeepCopy() *InstanceTemplateNetworkPerformanceConfigObservation {
	if in == nil {
		return nil
	}
	out := new(InstanceTemplateNetworkPerformanceConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceTemplateNetworkPerformanceConfigParameters) DeepCopyInto(out *InstanceTemplateNetworkPerformanceConfigParameters) {
	*out = *in
	if in.TotalEgressBandwidthTier != nil {
		in, out := &in.TotalEgressBandwidthTier, &out.TotalEgressBandwidthTier
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceTemplateNetworkPerformanceConfigParameters.
func (in *InstanceTemplateNetworkPerformanceConfigParameters) DeepCopy() *InstanceTemplateNetworkPerformanceConfigParameters {
	if in == nil {
		return nil
	}
	out := new(InstanceTemplateNetworkPerformanceConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceTemplateObservation) DeepCopyInto(out *InstanceTemplateObservation) {
	*out = *in
	if in.AdvancedMachineFeatures != nil {
		in, out := &in.AdvancedMachineFeatures, &out.AdvancedMachineFeatures
		*out = make([]InstanceTemplateAdvancedMachineFeaturesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CanIPForward != nil {
		in, out := &in.CanIPForward, &out.CanIPForward
		*out = new(bool)
		**out = **in
	}
	if in.ConfidentialInstanceConfig != nil {
		in, out := &in.ConfidentialInstanceConfig, &out.ConfidentialInstanceConfig
		*out = make([]InstanceTemplateConfidentialInstanceConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]InstanceTemplateDiskObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EffectiveLabels != nil {
		in, out := &in.EffectiveLabels, &out.EffectiveLabels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.GuestAccelerator != nil {
		in, out := &in.GuestAccelerator, &out.GuestAccelerator
		*out = make([]InstanceTemplateGuestAcceleratorObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.InstanceDescription != nil {
		in, out := &in.InstanceDescription, &out.InstanceDescription
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.MachineType != nil {
		in, out := &in.MachineType, &out.MachineType
		*out = new(string)
		**out = **in
	}
	if in.Metadata != nil {
		in, out := &in.Metadata, &out.Metadata
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.MetadataFingerprint != nil {
		in, out := &in.MetadataFingerprint, &out.MetadataFingerprint
		*out = new(string)
		**out = **in
	}
	if in.MetadataStartupScript != nil {
		in, out := &in.MetadataStartupScript, &out.MetadataStartupScript
		*out = new(string)
		**out = **in
	}
	if in.MinCPUPlatform != nil {
		in, out := &in.MinCPUPlatform, &out.MinCPUPlatform
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NamePrefix != nil {
		in, out := &in.NamePrefix, &out.NamePrefix
		*out = new(string)
		**out = **in
	}
	if in.NetworkInterface != nil {
		in, out := &in.NetworkInterface, &out.NetworkInterface
		*out = make([]InstanceTemplateNetworkInterfaceObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NetworkPerformanceConfig != nil {
		in, out := &in.NetworkPerformanceConfig, &out.NetworkPerformanceConfig
		*out = make([]InstanceTemplateNetworkPerformanceConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.ReservationAffinity != nil {
		in, out := &in.ReservationAffinity, &out.ReservationAffinity
		*out = make([]InstanceTemplateReservationAffinityObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ResourceManagerTags != nil {
		in, out := &in.ResourceManagerTags, &out.ResourceManagerTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ResourcePolicies != nil {
		in, out := &in.ResourcePolicies, &out.ResourcePolicies
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Scheduling != nil {
		in, out := &in.Scheduling, &out.Scheduling
		*out = make([]InstanceTemplateSchedulingObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SelfLink != nil {
		in, out := &in.SelfLink, &out.SelfLink
		*out = new(string)
		**out = **in
	}
	if in.SelfLinkUnique != nil {
		in, out := &in.SelfLinkUnique, &out.SelfLinkUnique
		*out = new(string)
		**out = **in
	}
	if in.ServiceAccount != nil {
		in, out := &in.ServiceAccount, &out.ServiceAccount
		*out = make([]InstanceTemplateServiceAccountObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ShieldedInstanceConfig != nil {
		in, out := &in.ShieldedInstanceConfig, &out.ShieldedInstanceConfig
		*out = make([]InstanceTemplateShieldedInstanceConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.TagsFingerprint != nil {
		in, out := &in.TagsFingerprint, &out.TagsFingerprint
		*out = new(string)
		**out = **in
	}
	if in.TerraformLabels != nil {
		in, out := &in.TerraformLabels, &out.TerraformLabels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceTemplateObservation.
func (in *InstanceTemplateObservation) DeepCopy() *InstanceTemplateObservation {
	if in == nil {
		return nil
	}
	out := new(InstanceTemplateObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceTemplateParameters) DeepCopyInto(out *InstanceTemplateParameters) {
	*out = *in
	if in.AdvancedMachineFeatures != nil {
		in, out := &in.AdvancedMachineFeatures, &out.AdvancedMachineFeatures
		*out = make([]InstanceTemplateAdvancedMachineFeaturesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CanIPForward != nil {
		in, out := &in.CanIPForward, &out.CanIPForward
		*out = new(bool)
		**out = **in
	}
	if in.ConfidentialInstanceConfig != nil {
		in, out := &in.ConfidentialInstanceConfig, &out.ConfidentialInstanceConfig
		*out = make([]InstanceTemplateConfidentialInstanceConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]InstanceTemplateDiskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.GuestAccelerator != nil {
		in, out := &in.GuestAccelerator, &out.GuestAccelerator
		*out = make([]InstanceTemplateGuestAcceleratorParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.InstanceDescription != nil {
		in, out := &in.InstanceDescription, &out.InstanceDescription
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.MachineType != nil {
		in, out := &in.MachineType, &out.MachineType
		*out = new(string)
		**out = **in
	}
	if in.Metadata != nil {
		in, out := &in.Metadata, &out.Metadata
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.MetadataStartupScript != nil {
		in, out := &in.MetadataStartupScript, &out.MetadataStartupScript
		*out = new(string)
		**out = **in
	}
	if in.MinCPUPlatform != nil {
		in, out := &in.MinCPUPlatform, &out.MinCPUPlatform
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NamePrefix != nil {
		in, out := &in.NamePrefix, &out.NamePrefix
		*out = new(string)
		**out = **in
	}
	if in.NetworkInterface != nil {
		in, out := &in.NetworkInterface, &out.NetworkInterface
		*out = make([]InstanceTemplateNetworkInterfaceParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NetworkPerformanceConfig != nil {
		in, out := &in.NetworkPerformanceConfig, &out.NetworkPerformanceConfig
		*out = make([]InstanceTemplateNetworkPerformanceConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.ReservationAffinity != nil {
		in, out := &in.ReservationAffinity, &out.ReservationAffinity
		*out = make([]InstanceTemplateReservationAffinityParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ResourceManagerTags != nil {
		in, out := &in.ResourceManagerTags, &out.ResourceManagerTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ResourcePolicies != nil {
		in, out := &in.ResourcePolicies, &out.ResourcePolicies
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Scheduling != nil {
		in, out := &in.Scheduling, &out.Scheduling
		*out = make([]InstanceTemplateSchedulingParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ServiceAccount != nil {
		in, out := &in.ServiceAccount, &out.ServiceAccount
		*out = make([]InstanceTemplateServiceAccountParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ShieldedInstanceConfig != nil {
		in, out := &in.ShieldedInstanceConfig, &out.ShieldedInstanceConfig
		*out = make([]InstanceTemplateShieldedInstanceConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceTemplateParameters.
func (in *InstanceTemplateParameters) DeepCopy() *InstanceTemplateParameters {
	if in == nil {
		return nil
	}
	out := new(InstanceTemplateParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceTemplateReservationAffinityInitParameters) DeepCopyInto(out *InstanceTemplateReservationAffinityInitParameters) {
	*out = *in
	if in.SpecificReservation != nil {
		in, out := &in.SpecificReservation, &out.SpecificReservation
		*out = make([]InstanceTemplateReservationAffinitySpecificReservationInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceTemplateReservationAffinityInitParameters.
func (in *InstanceTemplateReservationAffinityInitParameters) DeepCopy() *InstanceTemplateReservationAffinityInitParameters {
	if in == nil {
		return nil
	}
	out := new(InstanceTemplateReservationAffinityInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceTemplateReservationAffinityObservation) DeepCopyInto(out *InstanceTemplateReservationAffinityObservation) {
	*out = *in
	if in.SpecificReservation != nil {
		in, out := &in.SpecificReservation, &out.SpecificReservation
		*out = make([]InstanceTemplateReservationAffinitySpecificReservationObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceTemplateReservationAffinityObservation.
func (in *InstanceTemplateReservationAffinityObservation) DeepCopy() *InstanceTemplateReservationAffinityObservation {
	if in == nil {
		return nil
	}
	out := new(InstanceTemplateReservationAffinityObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceTemplateReservationAffinityParameters) DeepCopyInto(out *InstanceTemplateReservationAffinityParameters) {
	*out = *in
	if in.SpecificReservation != nil {
		in, out := &in.SpecificReservation, &out.SpecificReservation
		*out = make([]InstanceTemplateReservationAffinitySpecificReservationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceTemplateReservationAffinityParameters.
func (in *InstanceTemplateReservationAffinityParameters) DeepCopy() *InstanceTemplateReservationAffinityParameters {
	if in == nil {
		return nil
	}
	out := new(InstanceTemplateReservationAffinityParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceTemplateReservationAffinitySpecificReservationInitParameters) DeepCopyInto(out *InstanceTemplateReservationAffinitySpecificReservationInitParameters) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceTemplateReservationAffinitySpecificReservationInitParameters.
func (in *InstanceTemplateReservationAffinitySpecificReservationInitParameters) DeepCopy() *InstanceTemplateReservationAffinitySpecificReservationInitParameters {
	if in == nil {
		return nil
	}
	out := new(InstanceTemplateReservationAffinitySpecificReservationInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceTemplateReservationAffinitySpecificReservationObservation) DeepCopyInto(out *InstanceTemplateReservationAffinitySpecificReservationObservation) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceTemplateReservationAffinitySpecificReservationObservation.
func (in *InstanceTemplateReservationAffinitySpecificReservationObservation) DeepCopy() *InstanceTemplateReservationAffinitySpecificReservationObservation {
	if in == nil {
		return nil
	}
	out := new(InstanceTemplateReservationAffinitySpecificReservationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceTemplateReservationAffinitySpecificReservationParameters) DeepCopyInto(out *InstanceTemplateReservationAffinitySpecificReservationParameters) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceTemplateReservationAffinitySpecificReservationParameters.
func (in *InstanceTemplateReservationAffinitySpecificReservationParameters) DeepCopy() *InstanceTemplateReservationAffinitySpecificReservationParameters {
	if in == nil {
		return nil
	}
	out := new(InstanceTemplateReservationAffinitySpecificReservationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceTemplateSchedulingInitParameters) DeepCopyInto(out *InstanceTemplateSchedulingInitParameters) {
	*out = *in
	if in.AutomaticRestart != nil {
		in, out := &in.AutomaticRestart, &out.AutomaticRestart
		*out = new(bool)
		**out = **in
	}
	if in.InstanceTerminationAction != nil {
		in, out := &in.InstanceTerminationAction, &out.InstanceTerminationAction
		*out = new(string)
		**out = **in
	}
	if in.LocalSsdRecoveryTimeout != nil {
		in, out := &in.LocalSsdRecoveryTimeout, &out.LocalSsdRecoveryTimeout
		*out = make([]InstanceTemplateSchedulingLocalSsdRecoveryTimeoutInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MaxRunDuration != nil {
		in, out := &in.MaxRunDuration, &out.MaxRunDuration
		*out = make([]InstanceTemplateSchedulingMaxRunDurationInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MinNodeCpus != nil {
		in, out := &in.MinNodeCpus, &out.MinNodeCpus
		*out = new(float64)
		**out = **in
	}
	if in.NodeAffinities != nil {
		in, out := &in.NodeAffinities, &out.NodeAffinities
		*out = make([]InstanceTemplateSchedulingNodeAffinitiesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OnHostMaintenance != nil {
		in, out := &in.OnHostMaintenance, &out.OnHostMaintenance
		*out = new(string)
		**out = **in
	}
	if in.OnInstanceStopAction != nil {
		in, out := &in.OnInstanceStopAction, &out.OnInstanceStopAction
		*out = make([]InstanceTemplateSchedulingOnInstanceStopActionInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Preemptible != nil {
		in, out := &in.Preemptible, &out.Preemptible
		*out = new(bool)
		**out = **in
	}
	if in.ProvisioningModel != nil {
		in, out := &in.ProvisioningModel, &out.ProvisioningModel
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceTemplateSchedulingInitParameters.
func (in *InstanceTemplateSchedulingInitParameters) DeepCopy() *InstanceTemplateSchedulingInitParameters {
	if in == nil {
		return nil
	}
	out := new(InstanceTemplateSchedulingInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceTemplateSchedulingLocalSsdRecoveryTimeoutInitParameters) DeepCopyInto(out *InstanceTemplateSchedulingLocalSsdRecoveryTimeoutInitParameters) {
	*out = *in
	if in.Nanos != nil {
		in, out := &in.Nanos, &out.Nanos
		*out = new(float64)
		**out = **in
	}
	if in.Seconds != nil {
		in, out := &in.Seconds, &out.Seconds
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceTemplateSchedulingLocalSsdRecoveryTimeoutInitParameters.
func (in *InstanceTemplateSchedulingLocalSsdRecoveryTimeoutInitParameters) DeepCopy() *InstanceTemplateSchedulingLocalSsdRecoveryTimeoutInitParameters {
	if in == nil {
		return nil
	}
	out := new(InstanceTemplateSchedulingLocalSsdRecoveryTimeoutInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceTemplateSchedulingLocalSsdRecoveryTimeoutObservation) DeepCopyInto(out *InstanceTemplateSchedulingLocalSsdRecoveryTimeoutObservation) {
	*out = *in
	if in.Nanos != nil {
		in, out := &in.Nanos, &out.Nanos
		*out = new(float64)
		**out = **in
	}
	if in.Seconds != nil {
		in, out := &in.Seconds, &out.Seconds
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceTemplateSchedulingLocalSsdRecoveryTimeoutObservation.
func (in *InstanceTemplateSchedulingLocalSsdRecoveryTimeoutObservation) DeepCopy() *InstanceTemplateSchedulingLocalSsdRecoveryTimeoutObservation {
	if in == nil {
		return nil
	}
	out := new(InstanceTemplateSchedulingLocalSsdRecoveryTimeoutObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceTemplateSchedulingLocalSsdRecoveryTimeoutParameters) DeepCopyInto(out *InstanceTemplateSchedulingLocalSsdRecoveryTimeoutParameters) {
	*out = *in
	if in.Nanos != nil {
		in, out := &in.Nanos, &out.Nanos
		*out = new(float64)
		**out = **in
	}
	if in.Seconds != nil {
		in, out := &in.Seconds, &out.Seconds
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceTemplateSchedulingLocalSsdRecoveryTimeoutParameters.
func (in *InstanceTemplateSchedulingLocalSsdRecoveryTimeoutParameters) DeepCopy() *InstanceTemplateSchedulingLocalSsdRecoveryTimeoutParameters {
	if in == nil {
		return nil
	}
	out := new(InstanceTemplateSchedulingLocalSsdRecoveryTimeoutParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceTemplateSchedulingMaxRunDurationInitParameters) DeepCopyInto(out *InstanceTemplateSchedulingMaxRunDurationInitParameters) {
	*out = *in
	if in.Nanos != nil {
		in, out := &in.Nanos, &out.Nanos
		*out = new(float64)
		**out = **in
	}
	if in.Seconds != nil {
		in, out := &in.Seconds, &out.Seconds
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceTemplateSchedulingMaxRunDurationInitParameters.
func (in *InstanceTemplateSchedulingMaxRunDurationInitParameters) DeepCopy() *InstanceTemplateSchedulingMaxRunDurationInitParameters {
	if in == nil {
		return nil
	}
	out := new(InstanceTemplateSchedulingMaxRunDurationInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceTemplateSchedulingMaxRunDurationObservation) DeepCopyInto(out *InstanceTemplateSchedulingMaxRunDurationObservation) {
	*out = *in
	if in.Nanos != nil {
		in, out := &in.Nanos, &out.Nanos
		*out = new(float64)
		**out = **in
	}
	if in.Seconds != nil {
		in, out := &in.Seconds, &out.Seconds
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceTemplateSchedulingMaxRunDurationObservation.
func (in *InstanceTemplateSchedulingMaxRunDurationObservation) DeepCopy() *InstanceTemplateSchedulingMaxRunDurationObservation {
	if in == nil {
		return nil
	}
	out := new(InstanceTemplateSchedulingMaxRunDurationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceTemplateSchedulingMaxRunDurationParameters) DeepCopyInto(out *InstanceTemplateSchedulingMaxRunDurationParameters) {
	*out = *in
	if in.Nanos != nil {
		in, out := &in.Nanos, &out.Nanos
		*out = new(float64)
		**out = **in
	}
	if in.Seconds != nil {
		in, out := &in.Seconds, &out.Seconds
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceTemplateSchedulingMaxRunDurationParameters.
func (in *InstanceTemplateSchedulingMaxRunDurationParameters) DeepCopy() *InstanceTemplateSchedulingMaxRunDurationParameters {
	if in == nil {
		return nil
	}
	out := new(InstanceTemplateSchedulingMaxRunDurationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceTemplateSchedulingNodeAffinitiesInitParameters) DeepCopyInto(out *InstanceTemplateSchedulingNodeAffinitiesInitParameters) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceTemplateSchedulingNodeAffinitiesInitParameters.
func (in *InstanceTemplateSchedulingNodeAffinitiesInitParameters) DeepCopy() *InstanceTemplateSchedulingNodeAffinitiesInitParameters {
	if in == nil {
		return nil
	}
	out := new(InstanceTemplateSchedulingNodeAffinitiesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceTemplateSchedulingNodeAffinitiesObservation) DeepCopyInto(out *InstanceTemplateSchedulingNodeAffinitiesObservation) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceTemplateSchedulingNodeAffinitiesObservation.
func (in *InstanceTemplateSchedulingNodeAffinitiesObservation) DeepCopy() *InstanceTemplateSchedulingNodeAffinitiesObservation {
	if in == nil {
		return nil
	}
	out := new(InstanceTemplateSchedulingNodeAffinitiesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceTemplateSchedulingNodeAffinitiesParameters) DeepCopyInto(out *InstanceTemplateSchedulingNodeAffinitiesParameters) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceTemplateSchedulingNodeAffinitiesParameters.
func (in *InstanceTemplateSchedulingNodeAffinitiesParameters) DeepCopy() *InstanceTemplateSchedulingNodeAffinitiesParameters {
	if in == nil {
		return nil
	}
	out := new(InstanceTemplateSchedulingNodeAffinitiesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceTemplateSchedulingObservation) DeepCopyInto(out *InstanceTemplateSchedulingObservation) {
	*out = *in
	if in.AutomaticRestart != nil {
		in, out := &in.AutomaticRestart, &out.AutomaticRestart
		*out = new(bool)
		**out = **in
	}
	if in.InstanceTerminationAction != nil {
		in, out := &in.InstanceTerminationAction, &out.InstanceTerminationAction
		*out = new(string)
		**out = **in
	}
	if in.LocalSsdRecoveryTimeout != nil {
		in, out := &in.LocalSsdRecoveryTimeout, &out.LocalSsdRecoveryTimeout
		*out = make([]InstanceTemplateSchedulingLocalSsdRecoveryTimeoutObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MaxRunDuration != nil {
		in, out := &in.MaxRunDuration, &out.MaxRunDuration
		*out = make([]InstanceTemplateSchedulingMaxRunDurationObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MinNodeCpus != nil {
		in, out := &in.MinNodeCpus, &out.MinNodeCpus
		*out = new(float64)
		**out = **in
	}
	if in.NodeAffinities != nil {
		in, out := &in.NodeAffinities, &out.NodeAffinities
		*out = make([]InstanceTemplateSchedulingNodeAffinitiesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OnHostMaintenance != nil {
		in, out := &in.OnHostMaintenance, &out.OnHostMaintenance
		*out = new(string)
		**out = **in
	}
	if in.OnInstanceStopAction != nil {
		in, out := &in.OnInstanceStopAction, &out.OnInstanceStopAction
		*out = make([]InstanceTemplateSchedulingOnInstanceStopActionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Preemptible != nil {
		in, out := &in.Preemptible, &out.Preemptible
		*out = new(bool)
		**out = **in
	}
	if in.ProvisioningModel != nil {
		in, out := &in.ProvisioningModel, &out.ProvisioningModel
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceTemplateSchedulingObservation.
func (in *InstanceTemplateSchedulingObservation) DeepCopy() *InstanceTemplateSchedulingObservation {
	if in == nil {
		return nil
	}
	out := new(InstanceTemplateSchedulingObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceTemplateSchedulingOnInstanceStopActionInitParameters) DeepCopyInto(out *InstanceTemplateSchedulingOnInstanceStopActionInitParameters) {
	*out = *in
	if in.DiscardLocalSsd != nil {
		in, out := &in.DiscardLocalSsd, &out.DiscardLocalSsd
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceTemplateSchedulingOnInstanceStopActionInitParameters.
func (in *InstanceTemplateSchedulingOnInstanceStopActionInitParameters) DeepCopy() *InstanceTemplateSchedulingOnInstanceStopActionInitParameters {
	if in == nil {
		return nil
	}
	out := new(InstanceTemplateSchedulingOnInstanceStopActionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceTemplateSchedulingOnInstanceStopActionObservation) DeepCopyInto(out *InstanceTemplateSchedulingOnInstanceStopActionObservation) {
	*out = *in
	if in.DiscardLocalSsd != nil {
		in, out := &in.DiscardLocalSsd, &out.DiscardLocalSsd
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceTemplateSchedulingOnInstanceStopActionObservation.
func (in *InstanceTemplateSchedulingOnInstanceStopActionObservation) DeepCopy() *InstanceTemplateSchedulingOnInstanceStopActionObservation {
	if in == nil {
		return nil
	}
	out := new(InstanceTemplateSchedulingOnInstanceStopActionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceTemplateSchedulingOnInstanceStopActionParameters) DeepCopyInto(out *InstanceTemplateSchedulingOnInstanceStopActionParameters) {
	*out = *in
	if in.DiscardLocalSsd != nil {
		in, out := &in.DiscardLocalSsd, &out.DiscardLocalSsd
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceTemplateSchedulingOnInstanceStopActionParameters.
func (in *InstanceTemplateSchedulingOnInstanceStopActionParameters) DeepCopy() *InstanceTemplateSchedulingOnInstanceStopActionParameters {
	if in == nil {
		return nil
	}
	out := new(InstanceTemplateSchedulingOnInstanceStopActionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceTemplateSchedulingParameters) DeepCopyInto(out *InstanceTemplateSchedulingParameters) {
	*out = *in
	if in.AutomaticRestart != nil {
		in, out := &in.AutomaticRestart, &out.AutomaticRestart
		*out = new(bool)
		**out = **in
	}
	if in.InstanceTerminationAction != nil {
		in, out := &in.InstanceTerminationAction, &out.InstanceTerminationAction
		*out = new(string)
		**out = **in
	}
	if in.LocalSsdRecoveryTimeout != nil {
		in, out := &in.LocalSsdRecoveryTimeout, &out.LocalSsdRecoveryTimeout
		*out = make([]InstanceTemplateSchedulingLocalSsdRecoveryTimeoutParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MaxRunDuration != nil {
		in, out := &in.MaxRunDuration, &out.MaxRunDuration
		*out = make([]InstanceTemplateSchedulingMaxRunDurationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MinNodeCpus != nil {
		in, out := &in.MinNodeCpus, &out.MinNodeCpus
		*out = new(float64)
		**out = **in
	}
	if in.NodeAffinities != nil {
		in, out := &in.NodeAffinities, &out.NodeAffinities
		*out = make([]InstanceTemplateSchedulingNodeAffinitiesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OnHostMaintenance != nil {
		in, out := &in.OnHostMaintenance, &out.OnHostMaintenance
		*out = new(string)
		**out = **in
	}
	if in.OnInstanceStopAction != nil {
		in, out := &in.OnInstanceStopAction, &out.OnInstanceStopAction
		*out = make([]InstanceTemplateSchedulingOnInstanceStopActionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Preemptible != nil {
		in, out := &in.Preemptible, &out.Preemptible
		*out = new(bool)
		**out = **in
	}
	if in.ProvisioningModel != nil {
		in, out := &in.ProvisioningModel, &out.ProvisioningModel
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceTemplateSchedulingParameters.
func (in *InstanceTemplateSchedulingParameters) DeepCopy() *InstanceTemplateSchedulingParameters {
	if in == nil {
		return nil
	}
	out := new(InstanceTemplateSchedulingParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceTemplateServiceAccountInitParameters) DeepCopyInto(out *InstanceTemplateServiceAccountInitParameters) {
	*out = *in
	if in.Email != nil {
		in, out := &in.Email, &out.Email
		*out = new(string)
		**out = **in
	}
	if in.EmailRef != nil {
		in, out := &in.EmailRef, &out.EmailRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.EmailSelector != nil {
		in, out := &in.EmailSelector, &out.EmailSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Scopes != nil {
		in, out := &in.Scopes, &out.Scopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceTemplateServiceAccountInitParameters.
func (in *InstanceTemplateServiceAccountInitParameters) DeepCopy() *InstanceTemplateServiceAccountInitParameters {
	if in == nil {
		return nil
	}
	out := new(InstanceTemplateServiceAccountInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceTemplateServiceAccountObservation) DeepCopyInto(out *InstanceTemplateServiceAccountObservation) {
	*out = *in
	if in.Email != nil {
		in, out := &in.Email, &out.Email
		*out = new(string)
		**out = **in
	}
	if in.Scopes != nil {
		in, out := &in.Scopes, &out.Scopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceTemplateServiceAccountObservation.
func (in *InstanceTemplateServiceAccountObservation) DeepCopy() *InstanceTemplateServiceAccountObservation {
	if in == nil {
		return nil
	}
	out := new(InstanceTemplateServiceAccountObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceTemplateServiceAccountParameters) DeepCopyInto(out *InstanceTemplateServiceAccountParameters) {
	*out = *in
	if in.Email != nil {
		in, out := &in.Email, &out.Email
		*out = new(string)
		**out = **in
	}
	if in.EmailRef != nil {
		in, out := &in.EmailRef, &out.EmailRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.EmailSelector != nil {
		in, out := &in.EmailSelector, &out.EmailSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Scopes != nil {
		in, out := &in.Scopes, &out.Scopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceTemplateServiceAccountParameters.
func (in *InstanceTemplateServiceAccountParameters) DeepCopy() *InstanceTemplateServiceAccountParameters {
	if in == nil {
		return nil
	}
	out := new(InstanceTemplateServiceAccountParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceTemplateShieldedInstanceConfigInitParameters) DeepCopyInto(out *InstanceTemplateShieldedInstanceConfigInitParameters) {
	*out = *in
	if in.EnableIntegrityMonitoring != nil {
		in, out := &in.EnableIntegrityMonitoring, &out.EnableIntegrityMonitoring
		*out = new(bool)
		**out = **in
	}
	if in.EnableSecureBoot != nil {
		in, out := &in.EnableSecureBoot, &out.EnableSecureBoot
		*out = new(bool)
		**out = **in
	}
	if in.EnableVtpm != nil {
		in, out := &in.EnableVtpm, &out.EnableVtpm
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceTemplateShieldedInstanceConfigInitParameters.
func (in *InstanceTemplateShieldedInstanceConfigInitParameters) DeepCopy() *InstanceTemplateShieldedInstanceConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(InstanceTemplateShieldedInstanceConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceTemplateShieldedInstanceConfigObservation) DeepCopyInto(out *InstanceTemplateShieldedInstanceConfigObservation) {
	*out = *in
	if in.EnableIntegrityMonitoring != nil {
		in, out := &in.EnableIntegrityMonitoring, &out.EnableIntegrityMonitoring
		*out = new(bool)
		**out = **in
	}
	if in.EnableSecureBoot != nil {
		in, out := &in.EnableSecureBoot, &out.EnableSecureBoot
		*out = new(bool)
		**out = **in
	}
	if in.EnableVtpm != nil {
		in, out := &in.EnableVtpm, &out.EnableVtpm
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceTemplateShieldedInstanceConfigObservation.
func (in *InstanceTemplateShieldedInstanceConfigObservation) DeepCopy() *InstanceTemplateShieldedInstanceConfigObservation {
	if in == nil {
		return nil
	}
	out := new(InstanceTemplateShieldedInstanceConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceTemplateShieldedInstanceConfigParameters) DeepCopyInto(out *InstanceTemplateShieldedInstanceConfigParameters) {
	*out = *in
	if in.EnableIntegrityMonitoring != nil {
		in, out := &in.EnableIntegrityMonitoring, &out.EnableIntegrityMonitoring
		*out = new(bool)
		**out = **in
	}
	if in.EnableSecureBoot != nil {
		in, out := &in.EnableSecureBoot, &out.EnableSecureBoot
		*out = new(bool)
		**out = **in
	}
	if in.EnableVtpm != nil {
		in, out := &in.EnableVtpm, &out.EnableVtpm
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceTemplateShieldedInstanceConfigParameters.
func (in *InstanceTemplateShieldedInstanceConfigParameters) DeepCopy() *InstanceTemplateShieldedInstanceConfigParameters {
	if in == nil {
		return nil
	}
	out := new(InstanceTemplateShieldedInstanceConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceTemplateSpec) DeepCopyInto(out *InstanceTemplateSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceTemplateSpec.
func (in *InstanceTemplateSpec) DeepCopy() *InstanceTemplateSpec {
	if in == nil {
		return nil
	}
	out := new(InstanceTemplateSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceTemplateStatus) DeepCopyInto(out *InstanceTemplateStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceTemplateStatus.
func (in *InstanceTemplateStatus) DeepCopy() *InstanceTemplateStatus {
	if in == nil {
		return nil
	}
	out := new(InstanceTemplateStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstancesInitParameters) DeepCopyInto(out *InstancesInitParameters) {
	*out = *in
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
	if in.URLRef != nil {
		in, out := &in.URLRef, &out.URLRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.URLSelector != nil {
		in, out := &in.URLSelector, &out.URLSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstancesInitParameters.
func (in *InstancesInitParameters) DeepCopy() *InstancesInitParameters {
	if in == nil {
		return nil
	}
	out := new(InstancesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstancesObservation) DeepCopyInto(out *InstancesObservation) {
	*out = *in
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstancesObservation.
func (in *InstancesObservation) DeepCopy() *InstancesObservation {
	if in == nil {
		return nil
	}
	out := new(InstancesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstancesParameters) DeepCopyInto(out *InstancesParameters) {
	*out = *in
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
	if in.URLRef != nil {
		in, out := &in.URLRef, &out.URLRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.URLSelector != nil {
		in, out := &in.URLSelector, &out.URLSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstancesParameters.
func (in *InstancesParameters) DeepCopy() *InstancesParameters {
	if in == nil {
		return nil
	}
	out := new(InstancesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InterconnectAttachment) DeepCopyInto(out *InterconnectAttachment) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InterconnectAttachment.
func (in *InterconnectAttachment) DeepCopy() *InterconnectAttachment {
	if in == nil {
		return nil
	}
	out := new(InterconnectAttachment)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *InterconnectAttachment) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InterconnectAttachmentInitParameters) DeepCopyInto(out *InterconnectAttachmentInitParameters) {
	*out = *in
	if in.AdminEnabled != nil {
		in, out := &in.AdminEnabled, &out.AdminEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Bandwidth != nil {
		in, out := &in.Bandwidth, &out.Bandwidth
		*out = new(string)
		**out = **in
	}
	if in.CandidateSubnets != nil {
		in, out := &in.CandidateSubnets, &out.CandidateSubnets
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.EdgeAvailabilityDomain != nil {
		in, out := &in.EdgeAvailabilityDomain, &out.EdgeAvailabilityDomain
		*out = new(string)
		**out = **in
	}
	if in.Encryption != nil {
		in, out := &in.Encryption, &out.Encryption
		*out = new(string)
		**out = **in
	}
	if in.Interconnect != nil {
		in, out := &in.Interconnect, &out.Interconnect
		*out = new(string)
		**out = **in
	}
	if in.IpsecInternalAddresses != nil {
		in, out := &in.IpsecInternalAddresses, &out.IpsecInternalAddresses
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.IpsecInternalAddressesRefs != nil {
		in, out := &in.IpsecInternalAddressesRefs, &out.IpsecInternalAddressesRefs
		*out = make([]v1.Reference, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IpsecInternalAddressesSelector != nil {
		in, out := &in.IpsecInternalAddressesSelector, &out.IpsecInternalAddressesSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Mtu != nil {
		in, out := &in.Mtu, &out.Mtu
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Router != nil {
		in, out := &in.Router, &out.Router
		*out = new(string)
		**out = **in
	}
	if in.RouterRef != nil {
		in, out := &in.RouterRef, &out.RouterRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.RouterSelector != nil {
		in, out := &in.RouterSelector, &out.RouterSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.StackType != nil {
		in, out := &in.StackType, &out.StackType
		*out = new(string)
		**out = **in
	}
	if in.SubnetLength != nil {
		in, out := &in.SubnetLength, &out.SubnetLength
		*out = new(float64)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.VlanTag8021Q != nil {
		in, out := &in.VlanTag8021Q, &out.VlanTag8021Q
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InterconnectAttachmentInitParameters.
func (in *InterconnectAttachmentInitParameters) DeepCopy() *InterconnectAttachmentInitParameters {
	if in == nil {
		return nil
	}
	out := new(InterconnectAttachmentInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InterconnectAttachmentList) DeepCopyInto(out *InterconnectAttachmentList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]InterconnectAttachment, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InterconnectAttachmentList.
func (in *InterconnectAttachmentList) DeepCopy() *InterconnectAttachmentList {
	if in == nil {
		return nil
	}
	out := new(InterconnectAttachmentList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *InterconnectAttachmentList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InterconnectAttachmentObservation) DeepCopyInto(out *InterconnectAttachmentObservation) {
	*out = *in
	if in.AdminEnabled != nil {
		in, out := &in.AdminEnabled, &out.AdminEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Bandwidth != nil {
		in, out := &in.Bandwidth, &out.Bandwidth
		*out = new(string)
		**out = **in
	}
	if in.CandidateSubnets != nil {
		in, out := &in.CandidateSubnets, &out.CandidateSubnets
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CloudRouterIPAddress != nil {
		in, out := &in.CloudRouterIPAddress, &out.CloudRouterIPAddress
		*out = new(string)
		**out = **in
	}
	if in.CloudRouterIPv6Address != nil {
		in, out := &in.CloudRouterIPv6Address, &out.CloudRouterIPv6Address
		*out = new(string)
		**out = **in
	}
	if in.CreationTimestamp != nil {
		in, out := &in.CreationTimestamp, &out.CreationTimestamp
		*out = new(string)
		**out = **in
	}
	if in.CustomerRouterIPAddress != nil {
		in, out := &in.CustomerRouterIPAddress, &out.CustomerRouterIPAddress
		*out = new(string)
		**out = **in
	}
	if in.CustomerRouterIPv6Address != nil {
		in, out := &in.CustomerRouterIPv6Address, &out.CustomerRouterIPv6Address
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.EdgeAvailabilityDomain != nil {
		in, out := &in.EdgeAvailabilityDomain, &out.EdgeAvailabilityDomain
		*out = new(string)
		**out = **in
	}
	if in.Encryption != nil {
		in, out := &in.Encryption, &out.Encryption
		*out = new(string)
		**out = **in
	}
	if in.GoogleReferenceID != nil {
		in, out := &in.GoogleReferenceID, &out.GoogleReferenceID
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Interconnect != nil {
		in, out := &in.Interconnect, &out.Interconnect
		*out = new(string)
		**out = **in
	}
	if in.IpsecInternalAddresses != nil {
		in, out := &in.IpsecInternalAddresses, &out.IpsecInternalAddresses
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Mtu != nil {
		in, out := &in.Mtu, &out.Mtu
		*out = new(string)
		**out = **in
	}
	if in.PairingKey != nil {
		in, out := &in.PairingKey, &out.PairingKey
		*out = new(string)
		**out = **in
	}
	if in.PartnerAsn != nil {
		in, out := &in.PartnerAsn, &out.PartnerAsn
		*out = new(string)
		**out = **in
	}
	if in.PrivateInterconnectInfo != nil {
		in, out := &in.PrivateInterconnectInfo, &out.PrivateInterconnectInfo
		*out = make([]PrivateInterconnectInfoObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.Router != nil {
		in, out := &in.Router, &out.Router
		*out = new(string)
		**out = **in
	}
	if in.SelfLink != nil {
		in, out := &in.SelfLink, &out.SelfLink
		*out = new(string)
		**out = **in
	}
	if in.StackType != nil {
		in, out := &in.StackType, &out.StackType
		*out = new(string)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.SubnetLength != nil {
		in, out := &in.SubnetLength, &out.SubnetLength
		*out = new(float64)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.VlanTag8021Q != nil {
		in, out := &in.VlanTag8021Q, &out.VlanTag8021Q
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InterconnectAttachmentObservation.
func (in *InterconnectAttachmentObservation) DeepCopy() *InterconnectAttachmentObservation {
	if in == nil {
		return nil
	}
	out := new(InterconnectAttachmentObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InterconnectAttachmentParameters) DeepCopyInto(out *InterconnectAttachmentParameters) {
	*out = *in
	if in.AdminEnabled != nil {
		in, out := &in.AdminEnabled, &out.AdminEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Bandwidth != nil {
		in, out := &in.Bandwidth, &out.Bandwidth
		*out = new(string)
		**out = **in
	}
	if in.CandidateSubnets != nil {
		in, out := &in.CandidateSubnets, &out.CandidateSubnets
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.EdgeAvailabilityDomain != nil {
		in, out := &in.EdgeAvailabilityDomain, &out.EdgeAvailabilityDomain
		*out = new(string)
		**out = **in
	}
	if in.Encryption != nil {
		in, out := &in.Encryption, &out.Encryption
		*out = new(string)
		**out = **in
	}
	if in.Interconnect != nil {
		in, out := &in.Interconnect, &out.Interconnect
		*out = new(string)
		**out = **in
	}
	if in.IpsecInternalAddresses != nil {
		in, out := &in.IpsecInternalAddresses, &out.IpsecInternalAddresses
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.IpsecInternalAddressesRefs != nil {
		in, out := &in.IpsecInternalAddressesRefs, &out.IpsecInternalAddressesRefs
		*out = make([]v1.Reference, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IpsecInternalAddressesSelector != nil {
		in, out := &in.IpsecInternalAddressesSelector, &out.IpsecInternalAddressesSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Mtu != nil {
		in, out := &in.Mtu, &out.Mtu
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.Router != nil {
		in, out := &in.Router, &out.Router
		*out = new(string)
		**out = **in
	}
	if in.RouterRef != nil {
		in, out := &in.RouterRef, &out.RouterRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.RouterSelector != nil {
		in, out := &in.RouterSelector, &out.RouterSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.StackType != nil {
		in, out := &in.StackType, &out.StackType
		*out = new(string)
		**out = **in
	}
	if in.SubnetLength != nil {
		in, out := &in.SubnetLength, &out.SubnetLength
		*out = new(float64)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.VlanTag8021Q != nil {
		in, out := &in.VlanTag8021Q, &out.VlanTag8021Q
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InterconnectAttachmentParameters.
func (in *InterconnectAttachmentParameters) DeepCopy() *InterconnectAttachmentParameters {
	if in == nil {
		return nil
	}
	out := new(InterconnectAttachmentParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InterconnectAttachmentSpec) DeepCopyInto(out *InterconnectAttachmentSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InterconnectAttachmentSpec.
func (in *InterconnectAttachmentSpec) DeepCopy() *InterconnectAttachmentSpec {
	if in == nil {
		return nil
	}
	out := new(InterconnectAttachmentSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InterconnectAttachmentStatus) DeepCopyInto(out *InterconnectAttachmentStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InterconnectAttachmentStatus.
func (in *InterconnectAttachmentStatus) DeepCopy() *InterconnectAttachmentStatus {
	if in == nil {
		return nil
	}
	out := new(InterconnectAttachmentStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InterfaceInitParameters) DeepCopyInto(out *InterfaceInitParameters) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(float64)
		**out = **in
	}
	if in.IPAddress != nil {
		in, out := &in.IPAddress, &out.IPAddress
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InterfaceInitParameters.
func (in *InterfaceInitParameters) DeepCopy() *InterfaceInitParameters {
	if in == nil {
		return nil
	}
	out := new(InterfaceInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InterfaceObservation) DeepCopyInto(out *InterfaceObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(float64)
		**out = **in
	}
	if in.IPAddress != nil {
		in, out := &in.IPAddress, &out.IPAddress
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InterfaceObservation.
func (in *InterfaceObservation) DeepCopy() *InterfaceObservation {
	if in == nil {
		return nil
	}
	out := new(InterfaceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InterfaceParameters) DeepCopyInto(out *InterfaceParameters) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(float64)
		**out = **in
	}
	if in.IPAddress != nil {
		in, out := &in.IPAddress, &out.IPAddress
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InterfaceParameters.
func (in *InterfaceParameters) DeepCopy() *InterfaceParameters {
	if in == nil {
		return nil
	}
	out := new(InterfaceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InternalIPIPAddressInitParameters) DeepCopyInto(out *InternalIPIPAddressInitParameters) {
	*out = *in
	if in.Address != nil {
		in, out := &in.Address, &out.Address
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InternalIPIPAddressInitParameters.
func (in *InternalIPIPAddressInitParameters) DeepCopy() *InternalIPIPAddressInitParameters {
	if in == nil {
		return nil
	}
	out := new(InternalIPIPAddressInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InternalIPIPAddressObservation) DeepCopyInto(out *InternalIPIPAddressObservation) {
	*out = *in
	if in.Address != nil {
		in, out := &in.Address, &out.Address
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InternalIPIPAddressObservation.
func (in *InternalIPIPAddressObservation) DeepCopy() *InternalIPIPAddressObservation {
	if in == nil {
		return nil
	}
	out := new(InternalIPIPAddressObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InternalIPIPAddressParameters) DeepCopyInto(out *InternalIPIPAddressParameters) {
	*out = *in
	if in.Address != nil {
		in, out := &in.Address, &out.Address
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InternalIPIPAddressParameters.
func (in *InternalIPIPAddressParameters) DeepCopy() *InternalIPIPAddressParameters {
	if in == nil {
		return nil
	}
	out := new(InternalIPIPAddressParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InternalIPInitParameters) DeepCopyInto(out *InternalIPInitParameters) {
	*out = *in
	if in.AutoDelete != nil {
		in, out := &in.AutoDelete, &out.AutoDelete
		*out = new(string)
		**out = **in
	}
	if in.IPAddress != nil {
		in, out := &in.IPAddress, &out.IPAddress
		*out = make([]InternalIPIPAddressInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.InterfaceName != nil {
		in, out := &in.InterfaceName, &out.InterfaceName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InternalIPInitParameters.
func (in *InternalIPInitParameters) DeepCopy() *InternalIPInitParameters {
	if in == nil {
		return nil
	}
	out := new(InternalIPInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InternalIPObservation) DeepCopyInto(out *InternalIPObservation) {
	*out = *in
	if in.AutoDelete != nil {
		in, out := &in.AutoDelete, &out.AutoDelete
		*out = new(string)
		**out = **in
	}
	if in.IPAddress != nil {
		in, out := &in.IPAddress, &out.IPAddress
		*out = make([]InternalIPIPAddressObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.InterfaceName != nil {
		in, out := &in.InterfaceName, &out.InterfaceName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InternalIPObservation.
func (in *InternalIPObservation) DeepCopy() *InternalIPObservation {
	if in == nil {
		return nil
	}
	out := new(InternalIPObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InternalIPParameters) DeepCopyInto(out *InternalIPParameters) {
	*out = *in
	if in.AutoDelete != nil {
		in, out := &in.AutoDelete, &out.AutoDelete
		*out = new(string)
		**out = **in
	}
	if in.IPAddress != nil {
		in, out := &in.IPAddress, &out.IPAddress
		*out = make([]InternalIPIPAddressParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.InterfaceName != nil {
		in, out := &in.InterfaceName, &out.InterfaceName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InternalIPParameters.
func (in *InternalIPParameters) DeepCopy() *InternalIPParameters {
	if in == nil {
		return nil
	}
	out := new(InternalIPParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IntervalInitParameters) DeepCopyInto(out *IntervalInitParameters) {
	*out = *in
	if in.Nanos != nil {
		in, out := &in.Nanos, &out.Nanos
		*out = new(float64)
		**out = **in
	}
	if in.Seconds != nil {
		in, out := &in.Seconds, &out.Seconds
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IntervalInitParameters.
func (in *IntervalInitParameters) DeepCopy() *IntervalInitParameters {
	if in == nil {
		return nil
	}
	out := new(IntervalInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IntervalObservation) DeepCopyInto(out *IntervalObservation) {
	*out = *in
	if in.Nanos != nil {
		in, out := &in.Nanos, &out.Nanos
		*out = new(float64)
		**out = **in
	}
	if in.Seconds != nil {
		in, out := &in.Seconds, &out.Seconds
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IntervalObservation.
func (in *IntervalObservation) DeepCopy() *IntervalObservation {
	if in == nil {
		return nil
	}
	out := new(IntervalObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IntervalParameters) DeepCopyInto(out *IntervalParameters) {
	*out = *in
	if in.Nanos != nil {
		in, out := &in.Nanos, &out.Nanos
		*out = new(float64)
		**out = **in
	}
	if in.Seconds != nil {
		in, out := &in.Seconds, &out.Seconds
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IntervalParameters.
func (in *IntervalParameters) DeepCopy() *IntervalParameters {
	if in == nil {
		return nil
	}
	out := new(IntervalParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JSONCustomConfigInitParameters) DeepCopyInto(out *JSONCustomConfigInitParameters) {
	*out = *in
	if in.ContentTypes != nil {
		in, out := &in.ContentTypes, &out.ContentTypes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JSONCustomConfigInitParameters.
func (in *JSONCustomConfigInitParameters) DeepCopy() *JSONCustomConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(JSONCustomConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JSONCustomConfigObservation) DeepCopyInto(out *JSONCustomConfigObservation) {
	*out = *in
	if in.ContentTypes != nil {
		in, out := &in.ContentTypes, &out.ContentTypes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JSONCustomConfigObservation.
func (in *JSONCustomConfigObservation) DeepCopy() *JSONCustomConfigObservation {
	if in == nil {
		return nil
	}
	out := new(JSONCustomConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JSONCustomConfigParameters) DeepCopyInto(out *JSONCustomConfigParameters) {
	*out = *in
	if in.ContentTypes != nil {
		in, out := &in.ContentTypes, &out.ContentTypes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JSONCustomConfigParameters.
func (in *JSONCustomConfigParameters) DeepCopy() *JSONCustomConfigParameters {
	if in == nil {
		return nil
	}
	out := new(JSONCustomConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Layer4ConfigsInitParameters) DeepCopyInto(out *Layer4ConfigsInitParameters) {
	*out = *in
	if in.IPProtocol != nil {
		in, out := &in.IPProtocol, &out.IPProtocol
		*out = new(string)
		**out = **in
	}
	if in.Ports != nil {
		in, out := &in.Ports, &out.Ports
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Layer4ConfigsInitParameters.
func (in *Layer4ConfigsInitParameters) DeepCopy() *Layer4ConfigsInitParameters {
	if in == nil {
		return nil
	}
	out := new(Layer4ConfigsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Layer4ConfigsObservation) DeepCopyInto(out *Layer4ConfigsObservation) {
	*out = *in
	if in.IPProtocol != nil {
		in, out := &in.IPProtocol, &out.IPProtocol
		*out = new(string)
		**out = **in
	}
	if in.Ports != nil {
		in, out := &in.Ports, &out.Ports
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Layer4ConfigsObservation.
func (in *Layer4ConfigsObservation) DeepCopy() *Layer4ConfigsObservation {
	if in == nil {
		return nil
	}
	out := new(Layer4ConfigsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Layer4ConfigsParameters) DeepCopyInto(out *Layer4ConfigsParameters) {
	*out = *in
	if in.IPProtocol != nil {
		in, out := &in.IPProtocol, &out.IPProtocol
		*out = new(string)
		**out = **in
	}
	if in.Ports != nil {
		in, out := &in.Ports, &out.Ports
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Layer4ConfigsParameters.
func (in *Layer4ConfigsParameters) DeepCopy() *Layer4ConfigsParameters {
	if in == nil {
		return nil
	}
	out := new(Layer4ConfigsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Layer7DdosDefenseConfigInitParameters) DeepCopyInto(out *Layer7DdosDefenseConfigInitParameters) {
	*out = *in
	if in.Enable != nil {
		in, out := &in.Enable, &out.Enable
		*out = new(bool)
		**out = **in
	}
	if in.RuleVisibility != nil {
		in, out := &in.RuleVisibility, &out.RuleVisibility
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Layer7DdosDefenseConfigInitParameters.
func (in *Layer7DdosDefenseConfigInitParameters) DeepCopy() *Layer7DdosDefenseConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(Layer7DdosDefenseConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Layer7DdosDefenseConfigObservation) DeepCopyInto(out *Layer7DdosDefenseConfigObservation) {
	*out = *in
	if in.Enable != nil {
		in, out := &in.Enable, &out.Enable
		*out = new(bool)
		**out = **in
	}
	if in.RuleVisibility != nil {
		in, out := &in.RuleVisibility, &out.RuleVisibility
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Layer7DdosDefenseConfigObservation.
func (in *Layer7DdosDefenseConfigObservation) DeepCopy() *Layer7DdosDefenseConfigObservation {
	if in == nil {
		return nil
	}
	out := new(Layer7DdosDefenseConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Layer7DdosDefenseConfigParameters) DeepCopyInto(out *Layer7DdosDefenseConfigParameters) {
	*out = *in
	if in.Enable != nil {
		in, out := &in.Enable, &out.Enable
		*out = new(bool)
		**out = **in
	}
	if in.RuleVisibility != nil {
		in, out := &in.RuleVisibility, &out.RuleVisibility
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Layer7DdosDefenseConfigParameters.
func (in *Layer7DdosDefenseConfigParameters) DeepCopy() *Layer7DdosDefenseConfigParameters {
	if in == nil {
		return nil
	}
	out := new(Layer7DdosDefenseConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoadBalancingUtilizationInitParameters) DeepCopyInto(out *LoadBalancingUtilizationInitParameters) {
	*out = *in
	if in.Target != nil {
		in, out := &in.Target, &out.Target
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoadBalancingUtilizationInitParameters.
func (in *LoadBalancingUtilizationInitParameters) DeepCopy() *LoadBalancingUtilizationInitParameters {
	if in == nil {
		return nil
	}
	out := new(LoadBalancingUtilizationInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoadBalancingUtilizationObservation) DeepCopyInto(out *LoadBalancingUtilizationObservation) {
	*out = *in
	if in.Target != nil {
		in, out := &in.Target, &out.Target
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoadBalancingUtilizationObservation.
func (in *LoadBalancingUtilizationObservation) DeepCopy() *LoadBalancingUtilizationObservation {
	if in == nil {
		return nil
	}
	out := new(LoadBalancingUtilizationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoadBalancingUtilizationParameters) DeepCopyInto(out *LoadBalancingUtilizationParameters) {
	*out = *in
	if in.Target != nil {
		in, out := &in.Target, &out.Target
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoadBalancingUtilizationParameters.
func (in *LoadBalancingUtilizationParameters) DeepCopy() *LoadBalancingUtilizationParameters {
	if in == nil {
		return nil
	}
	out := new(LoadBalancingUtilizationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LocalSsdRecoveryTimeoutInitParameters) DeepCopyInto(out *LocalSsdRecoveryTimeoutInitParameters) {
	*out = *in
	if in.Nanos != nil {
		in, out := &in.Nanos, &out.Nanos
		*out = new(float64)
		**out = **in
	}
	if in.Seconds != nil {
		in, out := &in.Seconds, &out.Seconds
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LocalSsdRecoveryTimeoutInitParameters.
func (in *LocalSsdRecoveryTimeoutInitParameters) DeepCopy() *LocalSsdRecoveryTimeoutInitParameters {
	if in == nil {
		return nil
	}
	out := new(LocalSsdRecoveryTimeoutInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LocalSsdRecoveryTimeoutObservation) DeepCopyInto(out *LocalSsdRecoveryTimeoutObservation) {
	*out = *in
	if in.Nanos != nil {
		in, out := &in.Nanos, &out.Nanos
		*out = new(float64)
		**out = **in
	}
	if in.Seconds != nil {
		in, out := &in.Seconds, &out.Seconds
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LocalSsdRecoveryTimeoutObservation.
func (in *LocalSsdRecoveryTimeoutObservation) DeepCopy() *LocalSsdRecoveryTimeoutObservation {
	if in == nil {
		return nil
	}
	out := new(LocalSsdRecoveryTimeoutObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LocalSsdRecoveryTimeoutParameters) DeepCopyInto(out *LocalSsdRecoveryTimeoutParameters) {
	*out = *in
	if in.Nanos != nil {
		in, out := &in.Nanos, &out.Nanos
		*out = new(float64)
		**out = **in
	}
	if in.Seconds != nil {
		in, out := &in.Seconds, &out.Seconds
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LocalSsdRecoveryTimeoutParameters.
func (in *LocalSsdRecoveryTimeoutParameters) DeepCopy() *LocalSsdRecoveryTimeoutParameters {
	if in == nil {
		return nil
	}
	out := new(LocalSsdRecoveryTimeoutParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LocalSsdsInitParameters) DeepCopyInto(out *LocalSsdsInitParameters) {
	*out = *in
	if in.DiskSizeGb != nil {
		in, out := &in.DiskSizeGb, &out.DiskSizeGb
		*out = new(float64)
		**out = **in
	}
	if in.Interface != nil {
		in, out := &in.Interface, &out.Interface
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LocalSsdsInitParameters.
func (in *LocalSsdsInitParameters) DeepCopy() *LocalSsdsInitParameters {
	if in == nil {
		return nil
	}
	out := new(LocalSsdsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LocalSsdsObservation) DeepCopyInto(out *LocalSsdsObservation) {
	*out = *in
	if in.DiskSizeGb != nil {
		in, out := &in.DiskSizeGb, &out.DiskSizeGb
		*out = new(float64)
		**out = **in
	}
	if in.Interface != nil {
		in, out := &in.Interface, &out.Interface
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LocalSsdsObservation.
func (in *LocalSsdsObservation) DeepCopy() *LocalSsdsObservation {
	if in == nil {
		return nil
	}
	out := new(LocalSsdsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LocalSsdsParameters) DeepCopyInto(out *LocalSsdsParameters) {
	*out = *in
	if in.DiskSizeGb != nil {
		in, out := &in.DiskSizeGb, &out.DiskSizeGb
		*out = new(float64)
		**out = **in
	}
	if in.Interface != nil {
		in, out := &in.Interface, &out.Interface
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LocalSsdsParameters.
func (in *LocalSsdsParameters) DeepCopy() *LocalSsdsParameters {
	if in == nil {
		return nil
	}
	out := new(LocalSsdsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LocalityLBPoliciesInitParameters) DeepCopyInto(out *LocalityLBPoliciesInitParameters) {
	*out = *in
	if in.CustomPolicy != nil {
		in, out := &in.CustomPolicy, &out.CustomPolicy
		*out = make([]CustomPolicyInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Policy != nil {
		in, out := &in.Policy, &out.Policy
		*out = make([]PolicyInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LocalityLBPoliciesInitParameters.
func (in *LocalityLBPoliciesInitParameters) DeepCopy() *LocalityLBPoliciesInitParameters {
	if in == nil {
		return nil
	}
	out := new(LocalityLBPoliciesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LocalityLBPoliciesObservation) DeepCopyInto(out *LocalityLBPoliciesObservation) {
	*out = *in
	if in.CustomPolicy != nil {
		in, out := &in.CustomPolicy, &out.CustomPolicy
		*out = make([]CustomPolicyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Policy != nil {
		in, out := &in.Policy, &out.Policy
		*out = make([]PolicyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LocalityLBPoliciesObservation.
func (in *LocalityLBPoliciesObservation) DeepCopy() *LocalityLBPoliciesObservation {
	if in == nil {
		return nil
	}
	out := new(LocalityLBPoliciesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LocalityLBPoliciesParameters) DeepCopyInto(out *LocalityLBPoliciesParameters) {
	*out = *in
	if in.CustomPolicy != nil {
		in, out := &in.CustomPolicy, &out.CustomPolicy
		*out = make([]CustomPolicyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Policy != nil {
		in, out := &in.Policy, &out.Policy
		*out = make([]PolicyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LocalityLBPoliciesParameters.
func (in *LocalityLBPoliciesParameters) DeepCopy() *LocalityLBPoliciesParameters {
	if in == nil {
		return nil
	}
	out := new(LocalityLBPoliciesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LogConfigInitParameters) DeepCopyInto(out *LogConfigInitParameters) {
	*out = *in
	if in.Enable != nil {
		in, out := &in.Enable, &out.Enable
		*out = new(bool)
		**out = **in
	}
	if in.SampleRate != nil {
		in, out := &in.SampleRate, &out.SampleRate
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LogConfigInitParameters.
func (in *LogConfigInitParameters) DeepCopy() *LogConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(LogConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LogConfigObservation) DeepCopyInto(out *LogConfigObservation) {
	*out = *in
	if in.Enable != nil {
		in, out := &in.Enable, &out.Enable
		*out = new(bool)
		**out = **in
	}
	if in.SampleRate != nil {
		in, out := &in.SampleRate, &out.SampleRate
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LogConfigObservation.
func (in *LogConfigObservation) DeepCopy() *LogConfigObservation {
	if in == nil {
		return nil
	}
	out := new(LogConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LogConfigParameters) DeepCopyInto(out *LogConfigParameters) {
	*out = *in
	if in.Enable != nil {
		in, out := &in.Enable, &out.Enable
		*out = new(bool)
		**out = **in
	}
	if in.SampleRate != nil {
		in, out := &in.SampleRate, &out.SampleRate
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LogConfigParameters.
func (in *LogConfigParameters) DeepCopy() *LogConfigParameters {
	if in == nil {
		return nil
	}
	out := new(LogConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MaintenanceWindowInitParameters) DeepCopyInto(out *MaintenanceWindowInitParameters) {
	*out = *in
	if in.StartTime != nil {
		in, out := &in.StartTime, &out.StartTime
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MaintenanceWindowInitParameters.
func (in *MaintenanceWindowInitParameters) DeepCopy() *MaintenanceWindowInitParameters {
	if in == nil {
		return nil
	}
	out := new(MaintenanceWindowInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MaintenanceWindowObservation) DeepCopyInto(out *MaintenanceWindowObservation) {
	*out = *in
	if in.StartTime != nil {
		in, out := &in.StartTime, &out.StartTime
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MaintenanceWindowObservation.
func (in *MaintenanceWindowObservation) DeepCopy() *MaintenanceWindowObservation {
	if in == nil {
		return nil
	}
	out := new(MaintenanceWindowObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MaintenanceWindowParameters) DeepCopyInto(out *MaintenanceWindowParameters) {
	*out = *in
	if in.StartTime != nil {
		in, out := &in.StartTime, &out.StartTime
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MaintenanceWindowParameters.
func (in *MaintenanceWindowParameters) DeepCopy() *MaintenanceWindowParameters {
	if in == nil {
		return nil
	}
	out := new(MaintenanceWindowParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagedInitParameters) DeepCopyInto(out *ManagedInitParameters) {
	*out = *in
	if in.Domains != nil {
		in, out := &in.Domains, &out.Domains
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagedInitParameters.
func (in *ManagedInitParameters) DeepCopy() *ManagedInitParameters {
	if in == nil {
		return nil
	}
	out := new(ManagedInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagedObservation) DeepCopyInto(out *ManagedObservation) {
	*out = *in
	if in.Domains != nil {
		in, out := &in.Domains, &out.Domains
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagedObservation.
func (in *ManagedObservation) DeepCopy() *ManagedObservation {
	if in == nil {
		return nil
	}
	out := new(ManagedObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagedParameters) DeepCopyInto(out *ManagedParameters) {
	*out = *in
	if in.Domains != nil {
		in, out := &in.Domains, &out.Domains
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagedParameters.
func (in *ManagedParameters) DeepCopy() *ManagedParameters {
	if in == nil {
		return nil
	}
	out := new(ManagedParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagedSSLCertificate) DeepCopyInto(out *ManagedSSLCertificate) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagedSSLCertificate.
func (in *ManagedSSLCertificate) DeepCopy() *ManagedSSLCertificate {
	if in == nil {
		return nil
	}
	out := new(ManagedSSLCertificate)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ManagedSSLCertificate) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagedSSLCertificateInitParameters) DeepCopyInto(out *ManagedSSLCertificateInitParameters) {
	*out = *in
	if in.CertificateID != nil {
		in, out := &in.CertificateID, &out.CertificateID
		*out = new(float64)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Managed != nil {
		in, out := &in.Managed, &out.Managed
		*out = make([]ManagedInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagedSSLCertificateInitParameters.
func (in *ManagedSSLCertificateInitParameters) DeepCopy() *ManagedSSLCertificateInitParameters {
	if in == nil {
		return nil
	}
	out := new(ManagedSSLCertificateInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagedSSLCertificateList) DeepCopyInto(out *ManagedSSLCertificateList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ManagedSSLCertificate, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagedSSLCertificateList.
func (in *ManagedSSLCertificateList) DeepCopy() *ManagedSSLCertificateList {
	if in == nil {
		return nil
	}
	out := new(ManagedSSLCertificateList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ManagedSSLCertificateList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagedSSLCertificateObservation) DeepCopyInto(out *ManagedSSLCertificateObservation) {
	*out = *in
	if in.CertificateID != nil {
		in, out := &in.CertificateID, &out.CertificateID
		*out = new(float64)
		**out = **in
	}
	if in.CreationTimestamp != nil {
		in, out := &in.CreationTimestamp, &out.CreationTimestamp
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.ExpireTime != nil {
		in, out := &in.ExpireTime, &out.ExpireTime
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Managed != nil {
		in, out := &in.Managed, &out.Managed
		*out = make([]ManagedObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.SelfLink != nil {
		in, out := &in.SelfLink, &out.SelfLink
		*out = new(string)
		**out = **in
	}
	if in.SubjectAlternativeNames != nil {
		in, out := &in.SubjectAlternativeNames, &out.SubjectAlternativeNames
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagedSSLCertificateObservation.
func (in *ManagedSSLCertificateObservation) DeepCopy() *ManagedSSLCertificateObservation {
	if in == nil {
		return nil
	}
	out := new(ManagedSSLCertificateObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagedSSLCertificateParameters) DeepCopyInto(out *ManagedSSLCertificateParameters) {
	*out = *in
	if in.CertificateID != nil {
		in, out := &in.CertificateID, &out.CertificateID
		*out = new(float64)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Managed != nil {
		in, out := &in.Managed, &out.Managed
		*out = make([]ManagedParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagedSSLCertificateParameters.
func (in *ManagedSSLCertificateParameters) DeepCopy() *ManagedSSLCertificateParameters {
	if in == nil {
		return nil
	}
	out := new(ManagedSSLCertificateParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagedSSLCertificateSpec) DeepCopyInto(out *ManagedSSLCertificateSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagedSSLCertificateSpec.
func (in *ManagedSSLCertificateSpec) DeepCopy() *ManagedSSLCertificateSpec {
	if in == nil {
		return nil
	}
	out := new(ManagedSSLCertificateSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagedSSLCertificateStatus) DeepCopyInto(out *ManagedSSLCertificateStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagedSSLCertificateStatus.
func (in *ManagedSSLCertificateStatus) DeepCopy() *ManagedSSLCertificateStatus {
	if in == nil {
		return nil
	}
	out := new(ManagedSSLCertificateStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MatchInitParameters) DeepCopyInto(out *MatchInitParameters) {
	*out = *in
	if in.DestAddressGroups != nil {
		in, out := &in.DestAddressGroups, &out.DestAddressGroups
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.DestFqdns != nil {
		in, out := &in.DestFqdns, &out.DestFqdns
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.DestIPRanges != nil {
		in, out := &in.DestIPRanges, &out.DestIPRanges
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.DestRegionCodes != nil {
		in, out := &in.DestRegionCodes, &out.DestRegionCodes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.DestThreatIntelligences != nil {
		in, out := &in.DestThreatIntelligences, &out.DestThreatIntelligences
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Layer4Configs != nil {
		in, out := &in.Layer4Configs, &out.Layer4Configs
		*out = make([]Layer4ConfigsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SrcAddressGroups != nil {
		in, out := &in.SrcAddressGroups, &out.SrcAddressGroups
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SrcFqdns != nil {
		in, out := &in.SrcFqdns, &out.SrcFqdns
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SrcIPRanges != nil {
		in, out := &in.SrcIPRanges, &out.SrcIPRanges
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SrcRegionCodes != nil {
		in, out := &in.SrcRegionCodes, &out.SrcRegionCodes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SrcThreatIntelligences != nil {
		in, out := &in.SrcThreatIntelligences, &out.SrcThreatIntelligences
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MatchInitParameters.
func (in *MatchInitParameters) DeepCopy() *MatchInitParameters {
	if in == nil {
		return nil
	}
	out := new(MatchInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MatchObservation) DeepCopyInto(out *MatchObservation) {
	*out = *in
	if in.DestAddressGroups != nil {
		in, out := &in.DestAddressGroups, &out.DestAddressGroups
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.DestFqdns != nil {
		in, out := &in.DestFqdns, &out.DestFqdns
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.DestIPRanges != nil {
		in, out := &in.DestIPRanges, &out.DestIPRanges
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.DestRegionCodes != nil {
		in, out := &in.DestRegionCodes, &out.DestRegionCodes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.DestThreatIntelligences != nil {
		in, out := &in.DestThreatIntelligences, &out.DestThreatIntelligences
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Layer4Configs != nil {
		in, out := &in.Layer4Configs, &out.Layer4Configs
		*out = make([]Layer4ConfigsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SrcAddressGroups != nil {
		in, out := &in.SrcAddressGroups, &out.SrcAddressGroups
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SrcFqdns != nil {
		in, out := &in.SrcFqdns, &out.SrcFqdns
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SrcIPRanges != nil {
		in, out := &in.SrcIPRanges, &out.SrcIPRanges
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SrcRegionCodes != nil {
		in, out := &in.SrcRegionCodes, &out.SrcRegionCodes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SrcThreatIntelligences != nil {
		in, out := &in.SrcThreatIntelligences, &out.SrcThreatIntelligences
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MatchObservation.
func (in *MatchObservation) DeepCopy() *MatchObservation {
	if in == nil {
		return nil
	}
	out := new(MatchObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MatchParameters) DeepCopyInto(out *MatchParameters) {
	*out = *in
	if in.DestAddressGroups != nil {
		in, out := &in.DestAddressGroups, &out.DestAddressGroups
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.DestFqdns != nil {
		in, out := &in.DestFqdns, &out.DestFqdns
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.DestIPRanges != nil {
		in, out := &in.DestIPRanges, &out.DestIPRanges
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.DestRegionCodes != nil {
		in, out := &in.DestRegionCodes, &out.DestRegionCodes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.DestThreatIntelligences != nil {
		in, out := &in.DestThreatIntelligences, &out.DestThreatIntelligences
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Layer4Configs != nil {
		in, out := &in.Layer4Configs, &out.Layer4Configs
		*out = make([]Layer4ConfigsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SrcAddressGroups != nil {
		in, out := &in.SrcAddressGroups, &out.SrcAddressGroups
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SrcFqdns != nil {
		in, out := &in.SrcFqdns, &out.SrcFqdns
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SrcIPRanges != nil {
		in, out := &in.SrcIPRanges, &out.SrcIPRanges
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SrcRegionCodes != nil {
		in, out := &in.SrcRegionCodes, &out.SrcRegionCodes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SrcThreatIntelligences != nil {
		in, out := &in.SrcThreatIntelligences, &out.SrcThreatIntelligences
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MatchParameters.
func (in *MatchParameters) DeepCopy() *MatchParameters {
	if in == nil {
		return nil
	}
	out := new(MatchParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MatchRulesHeaderMatchesInitParameters) DeepCopyInto(out *MatchRulesHeaderMatchesInitParameters) {
	*out = *in
	if in.ExactMatch != nil {
		in, out := &in.ExactMatch, &out.ExactMatch
		*out = new(string)
		**out = **in
	}
	if in.HeaderName != nil {
		in, out := &in.HeaderName, &out.HeaderName
		*out = new(string)
		**out = **in
	}
	if in.InvertMatch != nil {
		in, out := &in.InvertMatch, &out.InvertMatch
		*out = new(bool)
		**out = **in
	}
	if in.PrefixMatch != nil {
		in, out := &in.PrefixMatch, &out.PrefixMatch
		*out = new(string)
		**out = **in
	}
	if in.PresentMatch != nil {
		in, out := &in.PresentMatch, &out.PresentMatch
		*out = new(bool)
		**out = **in
	}
	if in.RangeMatch != nil {
		in, out := &in.RangeMatch, &out.RangeMatch
		*out = make([]HeaderMatchesRangeMatchInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RegexMatch != nil {
		in, out := &in.RegexMatch, &out.RegexMatch
		*out = new(string)
		**out = **in
	}
	if in.SuffixMatch != nil {
		in, out := &in.SuffixMatch, &out.SuffixMatch
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MatchRulesHeaderMatchesInitParameters.
func (in *MatchRulesHeaderMatchesInitParameters) DeepCopy() *MatchRulesHeaderMatchesInitParameters {
	if in == nil {
		return nil
	}
	out := new(MatchRulesHeaderMatchesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MatchRulesHeaderMatchesObservation) DeepCopyInto(out *MatchRulesHeaderMatchesObservation) {
	*out = *in
	if in.ExactMatch != nil {
		in, out := &in.ExactMatch, &out.ExactMatch
		*out = new(string)
		**out = **in
	}
	if in.HeaderName != nil {
		in, out := &in.HeaderName, &out.HeaderName
		*out = new(string)
		**out = **in
	}
	if in.InvertMatch != nil {
		in, out := &in.InvertMatch, &out.InvertMatch
		*out = new(bool)
		**out = **in
	}
	if in.PrefixMatch != nil {
		in, out := &in.PrefixMatch, &out.PrefixMatch
		*out = new(string)
		**out = **in
	}
	if in.PresentMatch != nil {
		in, out := &in.PresentMatch, &out.PresentMatch
		*out = new(bool)
		**out = **in
	}
	if in.RangeMatch != nil {
		in, out := &in.RangeMatch, &out.RangeMatch
		*out = make([]HeaderMatchesRangeMatchObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RegexMatch != nil {
		in, out := &in.RegexMatch, &out.RegexMatch
		*out = new(string)
		**out = **in
	}
	if in.SuffixMatch != nil {
		in, out := &in.SuffixMatch, &out.SuffixMatch
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MatchRulesHeaderMatchesObservation.
func (in *MatchRulesHeaderMatchesObservation) DeepCopy() *MatchRulesHeaderMatchesObservation {
	if in == nil {
		return nil
	}
	out := new(MatchRulesHeaderMatchesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MatchRulesHeaderMatchesParameters) DeepCopyInto(out *MatchRulesHeaderMatchesParameters) {
	*out = *in
	if in.ExactMatch != nil {
		in, out := &in.ExactMatch, &out.ExactMatch
		*out = new(string)
		**out = **in
	}
	if in.HeaderName != nil {
		in, out := &in.HeaderName, &out.HeaderName
		*out = new(string)
		**out = **in
	}
	if in.InvertMatch != nil {
		in, out := &in.InvertMatch, &out.InvertMatch
		*out = new(bool)
		**out = **in
	}
	if in.PrefixMatch != nil {
		in, out := &in.PrefixMatch, &out.PrefixMatch
		*out = new(string)
		**out = **in
	}
	if in.PresentMatch != nil {
		in, out := &in.PresentMatch, &out.PresentMatch
		*out = new(bool)
		**out = **in
	}
	if in.RangeMatch != nil {
		in, out := &in.RangeMatch, &out.RangeMatch
		*out = make([]HeaderMatchesRangeMatchParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RegexMatch != nil {
		in, out := &in.RegexMatch, &out.RegexMatch
		*out = new(string)
		**out = **in
	}
	if in.SuffixMatch != nil {
		in, out := &in.SuffixMatch, &out.SuffixMatch
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MatchRulesHeaderMatchesParameters.
func (in *MatchRulesHeaderMatchesParameters) DeepCopy() *MatchRulesHeaderMatchesParameters {
	if in == nil {
		return nil
	}
	out := new(MatchRulesHeaderMatchesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MatchRulesInitParameters) DeepCopyInto(out *MatchRulesInitParameters) {
	*out = *in
	if in.FullPathMatch != nil {
		in, out := &in.FullPathMatch, &out.FullPathMatch
		*out = new(string)
		**out = **in
	}
	if in.HeaderMatches != nil {
		in, out := &in.HeaderMatches, &out.HeaderMatches
		*out = make([]HeaderMatchesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IgnoreCase != nil {
		in, out := &in.IgnoreCase, &out.IgnoreCase
		*out = new(bool)
		**out = **in
	}
	if in.MetadataFilters != nil {
		in, out := &in.MetadataFilters, &out.MetadataFilters
		*out = make([]MatchRulesMetadataFiltersInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PathTemplateMatch != nil {
		in, out := &in.PathTemplateMatch, &out.PathTemplateMatch
		*out = new(string)
		**out = **in
	}
	if in.PrefixMatch != nil {
		in, out := &in.PrefixMatch, &out.PrefixMatch
		*out = new(string)
		**out = **in
	}
	if in.QueryParameterMatches != nil {
		in, out := &in.QueryParameterMatches, &out.QueryParameterMatches
		*out = make([]QueryParameterMatchesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RegexMatch != nil {
		in, out := &in.RegexMatch, &out.RegexMatch
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MatchRulesInitParameters.
func (in *MatchRulesInitParameters) DeepCopy() *MatchRulesInitParameters {
	if in == nil {
		return nil
	}
	out := new(MatchRulesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MatchRulesMetadataFiltersFilterLabelsInitParameters) DeepCopyInto(out *MatchRulesMetadataFiltersFilterLabelsInitParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MatchRulesMetadataFiltersFilterLabelsInitParameters.
func (in *MatchRulesMetadataFiltersFilterLabelsInitParameters) DeepCopy() *MatchRulesMetadataFiltersFilterLabelsInitParameters {
	if in == nil {
		return nil
	}
	out := new(MatchRulesMetadataFiltersFilterLabelsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MatchRulesMetadataFiltersFilterLabelsObservation) DeepCopyInto(out *MatchRulesMetadataFiltersFilterLabelsObservation) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MatchRulesMetadataFiltersFilterLabelsObservation.
func (in *MatchRulesMetadataFiltersFilterLabelsObservation) DeepCopy() *MatchRulesMetadataFiltersFilterLabelsObservation {
	if in == nil {
		return nil
	}
	out := new(MatchRulesMetadataFiltersFilterLabelsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MatchRulesMetadataFiltersFilterLabelsParameters) DeepCopyInto(out *MatchRulesMetadataFiltersFilterLabelsParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MatchRulesMetadataFiltersFilterLabelsParameters.
func (in *MatchRulesMetadataFiltersFilterLabelsParameters) DeepCopy() *MatchRulesMetadataFiltersFilterLabelsParameters {
	if in == nil {
		return nil
	}
	out := new(MatchRulesMetadataFiltersFilterLabelsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MatchRulesMetadataFiltersInitParameters) DeepCopyInto(out *MatchRulesMetadataFiltersInitParameters) {
	*out = *in
	if in.FilterLabels != nil {
		in, out := &in.FilterLabels, &out.FilterLabels
		*out = make([]MetadataFiltersFilterLabelsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.FilterMatchCriteria != nil {
		in, out := &in.FilterMatchCriteria, &out.FilterMatchCriteria
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MatchRulesMetadataFiltersInitParameters.
func (in *MatchRulesMetadataFiltersInitParameters) DeepCopy() *MatchRulesMetadataFiltersInitParameters {
	if in == nil {
		return nil
	}
	out := new(MatchRulesMetadataFiltersInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MatchRulesMetadataFiltersObservation) DeepCopyInto(out *MatchRulesMetadataFiltersObservation) {
	*out = *in
	if in.FilterLabels != nil {
		in, out := &in.FilterLabels, &out.FilterLabels
		*out = make([]MetadataFiltersFilterLabelsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.FilterMatchCriteria != nil {
		in, out := &in.FilterMatchCriteria, &out.FilterMatchCriteria
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MatchRulesMetadataFiltersObservation.
func (in *MatchRulesMetadataFiltersObservation) DeepCopy() *MatchRulesMetadataFiltersObservation {
	if in == nil {
		return nil
	}
	out := new(MatchRulesMetadataFiltersObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MatchRulesMetadataFiltersParameters) DeepCopyInto(out *MatchRulesMetadataFiltersParameters) {
	*out = *in
	if in.FilterLabels != nil {
		in, out := &in.FilterLabels, &out.FilterLabels
		*out = make([]MetadataFiltersFilterLabelsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.FilterMatchCriteria != nil {
		in, out := &in.FilterMatchCriteria, &out.FilterMatchCriteria
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MatchRulesMetadataFiltersParameters.
func (in *MatchRulesMetadataFiltersParameters) DeepCopy() *MatchRulesMetadataFiltersParameters {
	if in == nil {
		return nil
	}
	out := new(MatchRulesMetadataFiltersParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MatchRulesObservation) DeepCopyInto(out *MatchRulesObservation) {
	*out = *in
	if in.FullPathMatch != nil {
		in, out := &in.FullPathMatch, &out.FullPathMatch
		*out = new(string)
		**out = **in
	}
	if in.HeaderMatches != nil {
		in, out := &in.HeaderMatches, &out.HeaderMatches
		*out = make([]HeaderMatchesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IgnoreCase != nil {
		in, out := &in.IgnoreCase, &out.IgnoreCase
		*out = new(bool)
		**out = **in
	}
	if in.MetadataFilters != nil {
		in, out := &in.MetadataFilters, &out.MetadataFilters
		*out = make([]MatchRulesMetadataFiltersObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PathTemplateMatch != nil {
		in, out := &in.PathTemplateMatch, &out.PathTemplateMatch
		*out = new(string)
		**out = **in
	}
	if in.PrefixMatch != nil {
		in, out := &in.PrefixMatch, &out.PrefixMatch
		*out = new(string)
		**out = **in
	}
	if in.QueryParameterMatches != nil {
		in, out := &in.QueryParameterMatches, &out.QueryParameterMatches
		*out = make([]QueryParameterMatchesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RegexMatch != nil {
		in, out := &in.RegexMatch, &out.RegexMatch
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MatchRulesObservation.
func (in *MatchRulesObservation) DeepCopy() *MatchRulesObservation {
	if in == nil {
		return nil
	}
	out := new(MatchRulesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MatchRulesParameters) DeepCopyInto(out *MatchRulesParameters) {
	*out = *in
	if in.FullPathMatch != nil {
		in, out := &in.FullPathMatch, &out.FullPathMatch
		*out = new(string)
		**out = **in
	}
	if in.HeaderMatches != nil {
		in, out := &in.HeaderMatches, &out.HeaderMatches
		*out = make([]HeaderMatchesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IgnoreCase != nil {
		in, out := &in.IgnoreCase, &out.IgnoreCase
		*out = new(bool)
		**out = **in
	}
	if in.MetadataFilters != nil {
		in, out := &in.MetadataFilters, &out.MetadataFilters
		*out = make([]MatchRulesMetadataFiltersParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PathTemplateMatch != nil {
		in, out := &in.PathTemplateMatch, &out.PathTemplateMatch
		*out = new(string)
		**out = **in
	}
	if in.PrefixMatch != nil {
		in, out := &in.PrefixMatch, &out.PrefixMatch
		*out = new(string)
		**out = **in
	}
	if in.QueryParameterMatches != nil {
		in, out := &in.QueryParameterMatches, &out.QueryParameterMatches
		*out = make([]QueryParameterMatchesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RegexMatch != nil {
		in, out := &in.RegexMatch, &out.RegexMatch
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MatchRulesParameters.
func (in *MatchRulesParameters) DeepCopy() *MatchRulesParameters {
	if in == nil {
		return nil
	}
	out := new(MatchRulesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MatchRulesQueryParameterMatchesInitParameters) DeepCopyInto(out *MatchRulesQueryParameterMatchesInitParameters) {
	*out = *in
	if in.ExactMatch != nil {
		in, out := &in.ExactMatch, &out.ExactMatch
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PresentMatch != nil {
		in, out := &in.PresentMatch, &out.PresentMatch
		*out = new(bool)
		**out = **in
	}
	if in.RegexMatch != nil {
		in, out := &in.RegexMatch, &out.RegexMatch
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MatchRulesQueryParameterMatchesInitParameters.
func (in *MatchRulesQueryParameterMatchesInitParameters) DeepCopy() *MatchRulesQueryParameterMatchesInitParameters {
	if in == nil {
		return nil
	}
	out := new(MatchRulesQueryParameterMatchesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MatchRulesQueryParameterMatchesObservation) DeepCopyInto(out *MatchRulesQueryParameterMatchesObservation) {
	*out = *in
	if in.ExactMatch != nil {
		in, out := &in.ExactMatch, &out.ExactMatch
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PresentMatch != nil {
		in, out := &in.PresentMatch, &out.PresentMatch
		*out = new(bool)
		**out = **in
	}
	if in.RegexMatch != nil {
		in, out := &in.RegexMatch, &out.RegexMatch
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MatchRulesQueryParameterMatchesObservation.
func (in *MatchRulesQueryParameterMatchesObservation) DeepCopy() *MatchRulesQueryParameterMatchesObservation {
	if in == nil {
		return nil
	}
	out := new(MatchRulesQueryParameterMatchesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MatchRulesQueryParameterMatchesParameters) DeepCopyInto(out *MatchRulesQueryParameterMatchesParameters) {
	*out = *in
	if in.ExactMatch != nil {
		in, out := &in.ExactMatch, &out.ExactMatch
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PresentMatch != nil {
		in, out := &in.PresentMatch, &out.PresentMatch
		*out = new(bool)
		**out = **in
	}
	if in.RegexMatch != nil {
		in, out := &in.RegexMatch, &out.RegexMatch
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MatchRulesQueryParameterMatchesParameters.
func (in *MatchRulesQueryParameterMatchesParameters) DeepCopy() *MatchRulesQueryParameterMatchesParameters {
	if in == nil {
		return nil
	}
	out := new(MatchRulesQueryParameterMatchesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MaxRunDurationInitParameters) DeepCopyInto(out *MaxRunDurationInitParameters) {
	*out = *in
	if in.Nanos != nil {
		in, out := &in.Nanos, &out.Nanos
		*out = new(float64)
		**out = **in
	}
	if in.Seconds != nil {
		in, out := &in.Seconds, &out.Seconds
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MaxRunDurationInitParameters.
func (in *MaxRunDurationInitParameters) DeepCopy() *MaxRunDurationInitParameters {
	if in == nil {
		return nil
	}
	out := new(MaxRunDurationInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MaxRunDurationObservation) DeepCopyInto(out *MaxRunDurationObservation) {
	*out = *in
	if in.Nanos != nil {
		in, out := &in.Nanos, &out.Nanos
		*out = new(float64)
		**out = **in
	}
	if in.Seconds != nil {
		in, out := &in.Seconds, &out.Seconds
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MaxRunDurationObservation.
func (in *MaxRunDurationObservation) DeepCopy() *MaxRunDurationObservation {
	if in == nil {
		return nil
	}
	out := new(MaxRunDurationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MaxRunDurationParameters) DeepCopyInto(out *MaxRunDurationParameters) {
	*out = *in
	if in.Nanos != nil {
		in, out := &in.Nanos, &out.Nanos
		*out = new(float64)
		**out = **in
	}
	if in.Seconds != nil {
		in, out := &in.Seconds, &out.Seconds
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MaxRunDurationParameters.
func (in *MaxRunDurationParameters) DeepCopy() *MaxRunDurationParameters {
	if in == nil {
		return nil
	}
	out := new(MaxRunDurationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MaxScaledInReplicasInitParameters) DeepCopyInto(out *MaxScaledInReplicasInitParameters) {
	*out = *in
	if in.Fixed != nil {
		in, out := &in.Fixed, &out.Fixed
		*out = new(float64)
		**out = **in
	}
	if in.Percent != nil {
		in, out := &in.Percent, &out.Percent
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MaxScaledInReplicasInitParameters.
func (in *MaxScaledInReplicasInitParameters) DeepCopy() *MaxScaledInReplicasInitParameters {
	if in == nil {
		return nil
	}
	out := new(MaxScaledInReplicasInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MaxScaledInReplicasObservation) DeepCopyInto(out *MaxScaledInReplicasObservation) {
	*out = *in
	if in.Fixed != nil {
		in, out := &in.Fixed, &out.Fixed
		*out = new(float64)
		**out = **in
	}
	if in.Percent != nil {
		in, out := &in.Percent, &out.Percent
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MaxScaledInReplicasObservation.
func (in *MaxScaledInReplicasObservation) DeepCopy() *MaxScaledInReplicasObservation {
	if in == nil {
		return nil
	}
	out := new(MaxScaledInReplicasObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MaxScaledInReplicasParameters) DeepCopyInto(out *MaxScaledInReplicasParameters) {
	*out = *in
	if in.Fixed != nil {
		in, out := &in.Fixed, &out.Fixed
		*out = new(float64)
		**out = **in
	}
	if in.Percent != nil {
		in, out := &in.Percent, &out.Percent
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MaxScaledInReplicasParameters.
func (in *MaxScaledInReplicasParameters) DeepCopy() *MaxScaledInReplicasParameters {
	if in == nil {
		return nil
	}
	out := new(MaxScaledInReplicasParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Md5AuthenticationKeyInitParameters) DeepCopyInto(out *Md5AuthenticationKeyInitParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Md5AuthenticationKeyInitParameters.
func (in *Md5AuthenticationKeyInitParameters) DeepCopy() *Md5AuthenticationKeyInitParameters {
	if in == nil {
		return nil
	}
	out := new(Md5AuthenticationKeyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Md5AuthenticationKeyObservation) DeepCopyInto(out *Md5AuthenticationKeyObservation) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Md5AuthenticationKeyObservation.
func (in *Md5AuthenticationKeyObservation) DeepCopy() *Md5AuthenticationKeyObservation {
	if in == nil {
		return nil
	}
	out := new(Md5AuthenticationKeyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Md5AuthenticationKeyParameters) DeepCopyInto(out *Md5AuthenticationKeyParameters) {
	*out = *in
	out.KeySecretRef = in.KeySecretRef
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Md5AuthenticationKeyParameters.
func (in *Md5AuthenticationKeyParameters) DeepCopy() *Md5AuthenticationKeyParameters {
	if in == nil {
		return nil
	}
	out := new(Md5AuthenticationKeyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MetadataFiltersFilterLabelsInitParameters) DeepCopyInto(out *MetadataFiltersFilterLabelsInitParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MetadataFiltersFilterLabelsInitParameters.
func (in *MetadataFiltersFilterLabelsInitParameters) DeepCopy() *MetadataFiltersFilterLabelsInitParameters {
	if in == nil {
		return nil
	}
	out := new(MetadataFiltersFilterLabelsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MetadataFiltersFilterLabelsObservation) DeepCopyInto(out *MetadataFiltersFilterLabelsObservation) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MetadataFiltersFilterLabelsObservation.
func (in *MetadataFiltersFilterLabelsObservation) DeepCopy() *MetadataFiltersFilterLabelsObservation {
	if in == nil {
		return nil
	}
	out := new(MetadataFiltersFilterLabelsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MetadataFiltersFilterLabelsParameters) DeepCopyInto(out *MetadataFiltersFilterLabelsParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MetadataFiltersFilterLabelsParameters.
func (in *MetadataFiltersFilterLabelsParameters) DeepCopy() *MetadataFiltersFilterLabelsParameters {
	if in == nil {
		return nil
	}
	out := new(MetadataFiltersFilterLabelsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MetadataFiltersInitParameters) DeepCopyInto(out *MetadataFiltersInitParameters) {
	*out = *in
	if in.FilterLabels != nil {
		in, out := &in.FilterLabels, &out.FilterLabels
		*out = make([]FilterLabelsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.FilterMatchCriteria != nil {
		in, out := &in.FilterMatchCriteria, &out.FilterMatchCriteria
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MetadataFiltersInitParameters.
func (in *MetadataFiltersInitParameters) DeepCopy() *MetadataFiltersInitParameters {
	if in == nil {
		return nil
	}
	out := new(MetadataFiltersInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MetadataFiltersObservation) DeepCopyInto(out *MetadataFiltersObservation) {
	*out = *in
	if in.FilterLabels != nil {
		in, out := &in.FilterLabels, &out.FilterLabels
		*out = make([]FilterLabelsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.FilterMatchCriteria != nil {
		in, out := &in.FilterMatchCriteria, &out.FilterMatchCriteria
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MetadataFiltersObservation.
func (in *MetadataFiltersObservation) DeepCopy() *MetadataFiltersObservation {
	if in == nil {
		return nil
	}
	out := new(MetadataFiltersObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MetadataFiltersParameters) DeepCopyInto(out *MetadataFiltersParameters) {
	*out = *in
	if in.FilterLabels != nil {
		in, out := &in.FilterLabels, &out.FilterLabels
		*out = make([]FilterLabelsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.FilterMatchCriteria != nil {
		in, out := &in.FilterMatchCriteria, &out.FilterMatchCriteria
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MetadataFiltersParameters.
func (in *MetadataFiltersParameters) DeepCopy() *MetadataFiltersParameters {
	if in == nil {
		return nil
	}
	out := new(MetadataFiltersParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MetricInitParameters) DeepCopyInto(out *MetricInitParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Target != nil {
		in, out := &in.Target, &out.Target
		*out = new(float64)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MetricInitParameters.
func (in *MetricInitParameters) DeepCopy() *MetricInitParameters {
	if in == nil {
		return nil
	}
	out := new(MetricInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MetricObservation) DeepCopyInto(out *MetricObservation) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Target != nil {
		in, out := &in.Target, &out.Target
		*out = new(float64)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MetricObservation.
func (in *MetricObservation) DeepCopy() *MetricObservation {
	if in == nil {
		return nil
	}
	out := new(MetricObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MetricParameters) DeepCopyInto(out *MetricParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Target != nil {
		in, out := &in.Target, &out.Target
		*out = new(float64)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MetricParameters.
func (in *MetricParameters) DeepCopy() *MetricParameters {
	if in == nil {
		return nil
	}
	out := new(MetricParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MirroredResourcesInitParameters) DeepCopyInto(out *MirroredResourcesInitParameters) {
	*out = *in
	if in.Instances != nil {
		in, out := &in.Instances, &out.Instances
		*out = make([]InstancesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Subnetworks != nil {
		in, out := &in.Subnetworks, &out.Subnetworks
		*out = make([]SubnetworksInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MirroredResourcesInitParameters.
func (in *MirroredResourcesInitParameters) DeepCopy() *MirroredResourcesInitParameters {
	if in == nil {
		return nil
	}
	out := new(MirroredResourcesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MirroredResourcesObservation) DeepCopyInto(out *MirroredResourcesObservation) {
	*out = *in
	if in.Instances != nil {
		in, out := &in.Instances, &out.Instances
		*out = make([]InstancesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Subnetworks != nil {
		in, out := &in.Subnetworks, &out.Subnetworks
		*out = make([]SubnetworksObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MirroredResourcesObservation.
func (in *MirroredResourcesObservation) DeepCopy() *MirroredResourcesObservation {
	if in == nil {
		return nil
	}
	out := new(MirroredResourcesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MirroredResourcesParameters) DeepCopyInto(out *MirroredResourcesParameters) {
	*out = *in
	if in.Instances != nil {
		in, out := &in.Instances, &out.Instances
		*out = make([]InstancesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Subnetworks != nil {
		in, out := &in.Subnetworks, &out.Subnetworks
		*out = make([]SubnetworksParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MirroredResourcesParameters.
func (in *MirroredResourcesParameters) DeepCopy() *MirroredResourcesParameters {
	if in == nil {
		return nil
	}
	out := new(MirroredResourcesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NamedPortInitParameters) DeepCopyInto(out *NamedPortInitParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NamedPortInitParameters.
func (in *NamedPortInitParameters) DeepCopy() *NamedPortInitParameters {
	if in == nil {
		return nil
	}
	out := new(NamedPortInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NamedPortObservation) DeepCopyInto(out *NamedPortObservation) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NamedPortObservation.
func (in *NamedPortObservation) DeepCopy() *NamedPortObservation {
	if in == nil {
		return nil
	}
	out := new(NamedPortObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NamedPortParameters) DeepCopyInto(out *NamedPortParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NamedPortParameters.
func (in *NamedPortParameters) DeepCopy() *NamedPortParameters {
	if in == nil {
		return nil
	}
	out := new(NamedPortParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NegativeCachingPolicyInitParameters) DeepCopyInto(out *NegativeCachingPolicyInitParameters) {
	*out = *in
	if in.Code != nil {
		in, out := &in.Code, &out.Code
		*out = new(float64)
		**out = **in
	}
	if in.TTL != nil {
		in, out := &in.TTL, &out.TTL
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NegativeCachingPolicyInitParameters.
func (in *NegativeCachingPolicyInitParameters) DeepCopy() *NegativeCachingPolicyInitParameters {
	if in == nil {
		return nil
	}
	out := new(NegativeCachingPolicyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NegativeCachingPolicyObservation) DeepCopyInto(out *NegativeCachingPolicyObservation) {
	*out = *in
	if in.Code != nil {
		in, out := &in.Code, &out.Code
		*out = new(float64)
		**out = **in
	}
	if in.TTL != nil {
		in, out := &in.TTL, &out.TTL
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NegativeCachingPolicyObservation.
func (in *NegativeCachingPolicyObservation) DeepCopy() *NegativeCachingPolicyObservation {
	if in == nil {
		return nil
	}
	out := new(NegativeCachingPolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NegativeCachingPolicyParameters) DeepCopyInto(out *NegativeCachingPolicyParameters) {
	*out = *in
	if in.Code != nil {
		in, out := &in.Code, &out.Code
		*out = new(float64)
		**out = **in
	}
	if in.TTL != nil {
		in, out := &in.TTL, &out.TTL
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NegativeCachingPolicyParameters.
func (in *NegativeCachingPolicyParameters) DeepCopy() *NegativeCachingPolicyParameters {
	if in == nil {
		return nil
	}
	out := new(NegativeCachingPolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Network) DeepCopyInto(out *Network) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Network.
func (in *Network) DeepCopy() *Network {
	if in == nil {
		return nil
	}
	out := new(Network)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Network) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkEndpoint) DeepCopyInto(out *NetworkEndpoint) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkEndpoint.
func (in *NetworkEndpoint) DeepCopy() *NetworkEndpoint {
	if in == nil {
		return nil
	}
	out := new(NetworkEndpoint)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *NetworkEndpoint) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkEndpointGroup) DeepCopyInto(out *NetworkEndpointGroup) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkEndpointGroup.
func (in *NetworkEndpointGroup) DeepCopy() *NetworkEndpointGroup {
	if in == nil {
		return nil
	}
	out := new(NetworkEndpointGroup)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *NetworkEndpointGroup) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkEndpointGroupInitParameters) DeepCopyInto(out *NetworkEndpointGroupInitParameters) {
	*out = *in
	if in.DefaultPort != nil {
		in, out := &in.DefaultPort, &out.DefaultPort
		*out = new(float64)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Network != nil {
		in, out := &in.Network, &out.Network
		*out = new(string)
		**out = **in
	}
	if in.NetworkEndpointType != nil {
		in, out := &in.NetworkEndpointType, &out.NetworkEndpointType
		*out = new(string)
		**out = **in
	}
	if in.NetworkRef != nil {
		in, out := &in.NetworkRef, &out.NetworkRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.NetworkSelector != nil {
		in, out := &in.NetworkSelector, &out.NetworkSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Subnetwork != nil {
		in, out := &in.Subnetwork, &out.Subnetwork
		*out = new(string)
		**out = **in
	}
	if in.SubnetworkRef != nil {
		in, out := &in.SubnetworkRef, &out.SubnetworkRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SubnetworkSelector != nil {
		in, out := &in.SubnetworkSelector, &out.SubnetworkSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkEndpointGroupInitParameters.
func (in *NetworkEndpointGroupInitParameters) DeepCopy() *NetworkEndpointGroupInitParameters {
	if in == nil {
		return nil
	}
	out := new(NetworkEndpointGroupInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkEndpointGroupList) DeepCopyInto(out *NetworkEndpointGroupList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]NetworkEndpointGroup, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkEndpointGroupList.
func (in *NetworkEndpointGroupList) DeepCopy() *NetworkEndpointGroupList {
	if in == nil {
		return nil
	}
	out := new(NetworkEndpointGroupList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *NetworkEndpointGroupList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkEndpointGroupObservation) DeepCopyInto(out *NetworkEndpointGroupObservation) {
	*out = *in
	if in.DefaultPort != nil {
		in, out := &in.DefaultPort, &out.DefaultPort
		*out = new(float64)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Network != nil {
		in, out := &in.Network, &out.Network
		*out = new(string)
		**out = **in
	}
	if in.NetworkEndpointType != nil {
		in, out := &in.NetworkEndpointType, &out.NetworkEndpointType
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.SelfLink != nil {
		in, out := &in.SelfLink, &out.SelfLink
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(float64)
		**out = **in
	}
	if in.Subnetwork != nil {
		in, out := &in.Subnetwork, &out.Subnetwork
		*out = new(string)
		**out = **in
	}
	if in.Zone != nil {
		in, out := &in.Zone, &out.Zone
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkEndpointGroupObservation.
func (in *NetworkEndpointGroupObservation) DeepCopy() *NetworkEndpointGroupObservation {
	if in == nil {
		return nil
	}
	out := new(NetworkEndpointGroupObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkEndpointGroupParameters) DeepCopyInto(out *NetworkEndpointGroupParameters) {
	*out = *in
	if in.DefaultPort != nil {
		in, out := &in.DefaultPort, &out.DefaultPort
		*out = new(float64)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Network != nil {
		in, out := &in.Network, &out.Network
		*out = new(string)
		**out = **in
	}
	if in.NetworkEndpointType != nil {
		in, out := &in.NetworkEndpointType, &out.NetworkEndpointType
		*out = new(string)
		**out = **in
	}
	if in.NetworkRef != nil {
		in, out := &in.NetworkRef, &out.NetworkRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.NetworkSelector != nil {
		in, out := &in.NetworkSelector, &out.NetworkSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Subnetwork != nil {
		in, out := &in.Subnetwork, &out.Subnetwork
		*out = new(string)
		**out = **in
	}
	if in.SubnetworkRef != nil {
		in, out := &in.SubnetworkRef, &out.SubnetworkRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SubnetworkSelector != nil {
		in, out := &in.SubnetworkSelector, &out.SubnetworkSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Zone != nil {
		in, out := &in.Zone, &out.Zone
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkEndpointGroupParameters.
func (in *NetworkEndpointGroupParameters) DeepCopy() *NetworkEndpointGroupParameters {
	if in == nil {
		return nil
	}
	out := new(NetworkEndpointGroupParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkEndpointGroupSpec) DeepCopyInto(out *NetworkEndpointGroupSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkEndpointGroupSpec.
func (in *NetworkEndpointGroupSpec) DeepCopy() *NetworkEndpointGroupSpec {
	if in == nil {
		return nil
	}
	out := new(NetworkEndpointGroupSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkEndpointGroupStatus) DeepCopyInto(out *NetworkEndpointGroupStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkEndpointGroupStatus.
func (in *NetworkEndpointGroupStatus) DeepCopy() *NetworkEndpointGroupStatus {
	if in == nil {
		return nil
	}
	out := new(NetworkEndpointGroupStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkEndpointInitParameters) DeepCopyInto(out *NetworkEndpointInitParameters) {
	*out = *in
	if in.IPAddress != nil {
		in, out := &in.IPAddress, &out.IPAddress
		*out = new(string)
		**out = **in
	}
	if in.Instance != nil {
		in, out := &in.Instance, &out.Instance
		*out = new(string)
		**out = **in
	}
	if in.InstanceRef != nil {
		in, out := &in.InstanceRef, &out.InstanceRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.InstanceSelector != nil {
		in, out := &in.InstanceSelector, &out.InstanceSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.NetworkEndpointGroup != nil {
		in, out := &in.NetworkEndpointGroup, &out.NetworkEndpointGroup
		*out = new(string)
		**out = **in
	}
	if in.NetworkEndpointGroupRef != nil {
		in, out := &in.NetworkEndpointGroupRef, &out.NetworkEndpointGroupRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.NetworkEndpointGroupSelector != nil {
		in, out := &in.NetworkEndpointGroupSelector, &out.NetworkEndpointGroupSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Zone != nil {
		in, out := &in.Zone, &out.Zone
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkEndpointInitParameters.
func (in *NetworkEndpointInitParameters) DeepCopy() *NetworkEndpointInitParameters {
	if in == nil {
		return nil
	}
	out := new(NetworkEndpointInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkEndpointList) DeepCopyInto(out *NetworkEndpointList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]NetworkEndpoint, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkEndpointList.
func (in *NetworkEndpointList) DeepCopy() *NetworkEndpointList {
	if in == nil {
		return nil
	}
	out := new(NetworkEndpointList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *NetworkEndpointList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkEndpointObservation) DeepCopyInto(out *NetworkEndpointObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IPAddress != nil {
		in, out := &in.IPAddress, &out.IPAddress
		*out = new(string)
		**out = **in
	}
	if in.Instance != nil {
		in, out := &in.Instance, &out.Instance
		*out = new(string)
		**out = **in
	}
	if in.NetworkEndpointGroup != nil {
		in, out := &in.NetworkEndpointGroup, &out.NetworkEndpointGroup
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Zone != nil {
		in, out := &in.Zone, &out.Zone
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkEndpointObservation.
func (in *NetworkEndpointObservation) DeepCopy() *NetworkEndpointObservation {
	if in == nil {
		return nil
	}
	out := new(NetworkEndpointObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkEndpointParameters) DeepCopyInto(out *NetworkEndpointParameters) {
	*out = *in
	if in.IPAddress != nil {
		in, out := &in.IPAddress, &out.IPAddress
		*out = new(string)
		**out = **in
	}
	if in.Instance != nil {
		in, out := &in.Instance, &out.Instance
		*out = new(string)
		**out = **in
	}
	if in.InstanceRef != nil {
		in, out := &in.InstanceRef, &out.InstanceRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.InstanceSelector != nil {
		in, out := &in.InstanceSelector, &out.InstanceSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.NetworkEndpointGroup != nil {
		in, out := &in.NetworkEndpointGroup, &out.NetworkEndpointGroup
		*out = new(string)
		**out = **in
	}
	if in.NetworkEndpointGroupRef != nil {
		in, out := &in.NetworkEndpointGroupRef, &out.NetworkEndpointGroupRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.NetworkEndpointGroupSelector != nil {
		in, out := &in.NetworkEndpointGroupSelector, &out.NetworkEndpointGroupSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Zone != nil {
		in, out := &in.Zone, &out.Zone
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkEndpointParameters.
func (in *NetworkEndpointParameters) DeepCopy() *NetworkEndpointParameters {
	if in == nil {
		return nil
	}
	out := new(NetworkEndpointParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkEndpointSpec) DeepCopyInto(out *NetworkEndpointSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkEndpointSpec.
func (in *NetworkEndpointSpec) DeepCopy() *NetworkEndpointSpec {
	if in == nil {
		return nil
	}
	out := new(NetworkEndpointSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkEndpointStatus) DeepCopyInto(out *NetworkEndpointStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkEndpointStatus.
func (in *NetworkEndpointStatus) DeepCopy() *NetworkEndpointStatus {
	if in == nil {
		return nil
	}
	out := new(NetworkEndpointStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkFirewallPolicy) DeepCopyInto(out *NetworkFirewallPolicy) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkFirewallPolicy.
func (in *NetworkFirewallPolicy) DeepCopy() *NetworkFirewallPolicy {
	if in == nil {
		return nil
	}
	out := new(NetworkFirewallPolicy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *NetworkFirewallPolicy) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkFirewallPolicyAssociation) DeepCopyInto(out *NetworkFirewallPolicyAssociation) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkFirewallPolicyAssociation.
func (in *NetworkFirewallPolicyAssociation) DeepCopy() *NetworkFirewallPolicyAssociation {
	if in == nil {
		return nil
	}
	out := new(NetworkFirewallPolicyAssociation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *NetworkFirewallPolicyAssociation) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkFirewallPolicyAssociationInitParameters) DeepCopyInto(out *NetworkFirewallPolicyAssociationInitParameters) {
	*out = *in
	if in.AttachmentTarget != nil {
		in, out := &in.AttachmentTarget, &out.AttachmentTarget
		*out = new(string)
		**out = **in
	}
	if in.AttachmentTargetRef != nil {
		in, out := &in.AttachmentTargetRef, &out.AttachmentTargetRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.AttachmentTargetSelector != nil {
		in, out := &in.AttachmentTargetSelector, &out.AttachmentTargetSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkFirewallPolicyAssociationInitParameters.
func (in *NetworkFirewallPolicyAssociationInitParameters) DeepCopy() *NetworkFirewallPolicyAssociationInitParameters {
	if in == nil {
		return nil
	}
	out := new(NetworkFirewallPolicyAssociationInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkFirewallPolicyAssociationList) DeepCopyInto(out *NetworkFirewallPolicyAssociationList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]NetworkFirewallPolicyAssociation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkFirewallPolicyAssociationList.
func (in *NetworkFirewallPolicyAssociationList) DeepCopy() *NetworkFirewallPolicyAssociationList {
	if in == nil {
		return nil
	}
	out := new(NetworkFirewallPolicyAssociationList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *NetworkFirewallPolicyAssociationList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkFirewallPolicyAssociationObservation) DeepCopyInto(out *NetworkFirewallPolicyAssociationObservation) {
	*out = *in
	if in.AttachmentTarget != nil {
		in, out := &in.AttachmentTarget, &out.AttachmentTarget
		*out = new(string)
		**out = **in
	}
	if in.FirewallPolicy != nil {
		in, out := &in.FirewallPolicy, &out.FirewallPolicy
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.ShortName != nil {
		in, out := &in.ShortName, &out.ShortName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkFirewallPolicyAssociationObservation.
func (in *NetworkFirewallPolicyAssociationObservation) DeepCopy() *NetworkFirewallPolicyAssociationObservation {
	if in == nil {
		return nil
	}
	out := new(NetworkFirewallPolicyAssociationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkFirewallPolicyAssociationParameters) DeepCopyInto(out *NetworkFirewallPolicyAssociationParameters) {
	*out = *in
	if in.AttachmentTarget != nil {
		in, out := &in.AttachmentTarget, &out.AttachmentTarget
		*out = new(string)
		**out = **in
	}
	if in.AttachmentTargetRef != nil {
		in, out := &in.AttachmentTargetRef, &out.AttachmentTargetRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.AttachmentTargetSelector != nil {
		in, out := &in.AttachmentTargetSelector, &out.AttachmentTargetSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.FirewallPolicy != nil {
		in, out := &in.FirewallPolicy, &out.FirewallPolicy
		*out = new(string)
		**out = **in
	}
	if in.FirewallPolicyRef != nil {
		in, out := &in.FirewallPolicyRef, &out.FirewallPolicyRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.FirewallPolicySelector != nil {
		in, out := &in.FirewallPolicySelector, &out.FirewallPolicySelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkFirewallPolicyAssociationParameters.
func (in *NetworkFirewallPolicyAssociationParameters) DeepCopy() *NetworkFirewallPolicyAssociationParameters {
	if in == nil {
		return nil
	}
	out := new(NetworkFirewallPolicyAssociationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkFirewallPolicyAssociationSpec) DeepCopyInto(out *NetworkFirewallPolicyAssociationSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkFirewallPolicyAssociationSpec.
func (in *NetworkFirewallPolicyAssociationSpec) DeepCopy() *NetworkFirewallPolicyAssociationSpec {
	if in == nil {
		return nil
	}
	out := new(NetworkFirewallPolicyAssociationSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkFirewallPolicyAssociationStatus) DeepCopyInto(out *NetworkFirewallPolicyAssociationStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkFirewallPolicyAssociationStatus.
func (in *NetworkFirewallPolicyAssociationStatus) DeepCopy() *NetworkFirewallPolicyAssociationStatus {
	if in == nil {
		return nil
	}
	out := new(NetworkFirewallPolicyAssociationStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkFirewallPolicyInitParameters) DeepCopyInto(out *NetworkFirewallPolicyInitParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkFirewallPolicyInitParameters.
func (in *NetworkFirewallPolicyInitParameters) DeepCopy() *NetworkFirewallPolicyInitParameters {
	if in == nil {
		return nil
	}
	out := new(NetworkFirewallPolicyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkFirewallPolicyList) DeepCopyInto(out *NetworkFirewallPolicyList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]NetworkFirewallPolicy, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkFirewallPolicyList.
func (in *NetworkFirewallPolicyList) DeepCopy() *NetworkFirewallPolicyList {
	if in == nil {
		return nil
	}
	out := new(NetworkFirewallPolicyList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *NetworkFirewallPolicyList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkFirewallPolicyObservation) DeepCopyInto(out *NetworkFirewallPolicyObservation) {
	*out = *in
	if in.CreationTimestamp != nil {
		in, out := &in.CreationTimestamp, &out.CreationTimestamp
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Fingerprint != nil {
		in, out := &in.Fingerprint, &out.Fingerprint
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.NetworkFirewallPolicyID != nil {
		in, out := &in.NetworkFirewallPolicyID, &out.NetworkFirewallPolicyID
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.RuleTupleCount != nil {
		in, out := &in.RuleTupleCount, &out.RuleTupleCount
		*out = new(float64)
		**out = **in
	}
	if in.SelfLink != nil {
		in, out := &in.SelfLink, &out.SelfLink
		*out = new(string)
		**out = **in
	}
	if in.SelfLinkWithID != nil {
		in, out := &in.SelfLinkWithID, &out.SelfLinkWithID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkFirewallPolicyObservation.
func (in *NetworkFirewallPolicyObservation) DeepCopy() *NetworkFirewallPolicyObservation {
	if in == nil {
		return nil
	}
	out := new(NetworkFirewallPolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkFirewallPolicyParameters) DeepCopyInto(out *NetworkFirewallPolicyParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkFirewallPolicyParameters.
func (in *NetworkFirewallPolicyParameters) DeepCopy() *NetworkFirewallPolicyParameters {
	if in == nil {
		return nil
	}
	out := new(NetworkFirewallPolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkFirewallPolicySpec) DeepCopyInto(out *NetworkFirewallPolicySpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkFirewallPolicySpec.
func (in *NetworkFirewallPolicySpec) DeepCopy() *NetworkFirewallPolicySpec {
	if in == nil {
		return nil
	}
	out := new(NetworkFirewallPolicySpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkFirewallPolicyStatus) DeepCopyInto(out *NetworkFirewallPolicyStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkFirewallPolicyStatus.
func (in *NetworkFirewallPolicyStatus) DeepCopy() *NetworkFirewallPolicyStatus {
	if in == nil {
		return nil
	}
	out := new(NetworkFirewallPolicyStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkInitParameters) DeepCopyInto(out *NetworkInitParameters) {
	*out = *in
	if in.AutoCreateSubnetworks != nil {
		in, out := &in.AutoCreateSubnetworks, &out.AutoCreateSubnetworks
		*out = new(bool)
		**out = **in
	}
	if in.DeleteDefaultRoutesOnCreate != nil {
		in, out := &in.DeleteDefaultRoutesOnCreate, &out.DeleteDefaultRoutesOnCreate
		*out = new(bool)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.EnableUlaInternalIPv6 != nil {
		in, out := &in.EnableUlaInternalIPv6, &out.EnableUlaInternalIPv6
		*out = new(bool)
		**out = **in
	}
	if in.InternalIPv6Range != nil {
		in, out := &in.InternalIPv6Range, &out.InternalIPv6Range
		*out = new(string)
		**out = **in
	}
	if in.Mtu != nil {
		in, out := &in.Mtu, &out.Mtu
		*out = new(float64)
		**out = **in
	}
	if in.NetworkFirewallPolicyEnforcementOrder != nil {
		in, out := &in.NetworkFirewallPolicyEnforcementOrder, &out.NetworkFirewallPolicyEnforcementOrder
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.RoutingMode != nil {
		in, out := &in.RoutingMode, &out.RoutingMode
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkInitParameters.
func (in *NetworkInitParameters) DeepCopy() *NetworkInitParameters {
	if in == nil {
		return nil
	}
	out := new(NetworkInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkInterfaceAccessConfigInitParameters) DeepCopyInto(out *NetworkInterfaceAccessConfigInitParameters) {
	*out = *in
	if in.NATIP != nil {
		in, out := &in.NATIP, &out.NATIP
		*out = new(string)
		**out = **in
	}
	if in.NetworkTier != nil {
		in, out := &in.NetworkTier, &out.NetworkTier
		*out = new(string)
		**out = **in
	}
	if in.PublicPtrDomainName != nil {
		in, out := &in.PublicPtrDomainName, &out.PublicPtrDomainName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkInterfaceAccessConfigInitParameters.
func (in *NetworkInterfaceAccessConfigInitParameters) DeepCopy() *NetworkInterfaceAccessConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(NetworkInterfaceAccessConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkInterfaceAccessConfigObservation) DeepCopyInto(out *NetworkInterfaceAccessConfigObservation) {
	*out = *in
	if in.NATIP != nil {
		in, out := &in.NATIP, &out.NATIP
		*out = new(string)
		**out = **in
	}
	if in.NetworkTier != nil {
		in, out := &in.NetworkTier, &out.NetworkTier
		*out = new(string)
		**out = **in
	}
	if in.PublicPtrDomainName != nil {
		in, out := &in.PublicPtrDomainName, &out.PublicPtrDomainName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkInterfaceAccessConfigObservation.
func (in *NetworkInterfaceAccessConfigObservation) DeepCopy() *NetworkInterfaceAccessConfigObservation {
	if in == nil {
		return nil
	}
	out := new(NetworkInterfaceAccessConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkInterfaceAccessConfigParameters) DeepCopyInto(out *NetworkInterfaceAccessConfigParameters) {
	*out = *in
	if in.NATIP != nil {
		in, out := &in.NATIP, &out.NATIP
		*out = new(string)
		**out = **in
	}
	if in.NetworkTier != nil {
		in, out := &in.NetworkTier, &out.NetworkTier
		*out = new(string)
		**out = **in
	}
	if in.PublicPtrDomainName != nil {
		in, out := &in.PublicPtrDomainName, &out.PublicPtrDomainName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkInterfaceAccessConfigParameters.
func (in *NetworkInterfaceAccessConfigParameters) DeepCopy() *NetworkInterfaceAccessConfigParameters {
	if in == nil {
		return nil
	}
	out := new(NetworkInterfaceAccessConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkInterfaceAliasIPRangeInitParameters) DeepCopyInto(out *NetworkInterfaceAliasIPRangeInitParameters) {
	*out = *in
	if in.IPCidrRange != nil {
		in, out := &in.IPCidrRange, &out.IPCidrRange
		*out = new(string)
		**out = **in
	}
	if in.SubnetworkRangeName != nil {
		in, out := &in.SubnetworkRangeName, &out.SubnetworkRangeName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkInterfaceAliasIPRangeInitParameters.
func (in *NetworkInterfaceAliasIPRangeInitParameters) DeepCopy() *NetworkInterfaceAliasIPRangeInitParameters {
	if in == nil {
		return nil
	}
	out := new(NetworkInterfaceAliasIPRangeInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkInterfaceAliasIPRangeObservation) DeepCopyInto(out *NetworkInterfaceAliasIPRangeObservation) {
	*out = *in
	if in.IPCidrRange != nil {
		in, out := &in.IPCidrRange, &out.IPCidrRange
		*out = new(string)
		**out = **in
	}
	if in.SubnetworkRangeName != nil {
		in, out := &in.SubnetworkRangeName, &out.SubnetworkRangeName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkInterfaceAliasIPRangeObservation.
func (in *NetworkInterfaceAliasIPRangeObservation) DeepCopy() *NetworkInterfaceAliasIPRangeObservation {
	if in == nil {
		return nil
	}
	out := new(NetworkInterfaceAliasIPRangeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkInterfaceAliasIPRangeParameters) DeepCopyInto(out *NetworkInterfaceAliasIPRangeParameters) {
	*out = *in
	if in.IPCidrRange != nil {
		in, out := &in.IPCidrRange, &out.IPCidrRange
		*out = new(string)
		**out = **in
	}
	if in.SubnetworkRangeName != nil {
		in, out := &in.SubnetworkRangeName, &out.SubnetworkRangeName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkInterfaceAliasIPRangeParameters.
func (in *NetworkInterfaceAliasIPRangeParameters) DeepCopy() *NetworkInterfaceAliasIPRangeParameters {
	if in == nil {
		return nil
	}
	out := new(NetworkInterfaceAliasIPRangeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkInterfaceIPv6AccessConfigInitParameters) DeepCopyInto(out *NetworkInterfaceIPv6AccessConfigInitParameters) {
	*out = *in
	if in.ExternalIPv6 != nil {
		in, out := &in.ExternalIPv6, &out.ExternalIPv6
		*out = new(string)
		**out = **in
	}
	if in.ExternalIPv6PrefixLength != nil {
		in, out := &in.ExternalIPv6PrefixLength, &out.ExternalIPv6PrefixLength
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NetworkTier != nil {
		in, out := &in.NetworkTier, &out.NetworkTier
		*out = new(string)
		**out = **in
	}
	if in.PublicPtrDomainName != nil {
		in, out := &in.PublicPtrDomainName, &out.PublicPtrDomainName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkInterfaceIPv6AccessConfigInitParameters.
func (in *NetworkInterfaceIPv6AccessConfigInitParameters) DeepCopy() *NetworkInterfaceIPv6AccessConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(NetworkInterfaceIPv6AccessConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkInterfaceIPv6AccessConfigObservation) DeepCopyInto(out *NetworkInterfaceIPv6AccessConfigObservation) {
	*out = *in
	if in.ExternalIPv6 != nil {
		in, out := &in.ExternalIPv6, &out.ExternalIPv6
		*out = new(string)
		**out = **in
	}
	if in.ExternalIPv6PrefixLength != nil {
		in, out := &in.ExternalIPv6PrefixLength, &out.ExternalIPv6PrefixLength
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NetworkTier != nil {
		in, out := &in.NetworkTier, &out.NetworkTier
		*out = new(string)
		**out = **in
	}
	if in.PublicPtrDomainName != nil {
		in, out := &in.PublicPtrDomainName, &out.PublicPtrDomainName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkInterfaceIPv6AccessConfigObservation.
func (in *NetworkInterfaceIPv6AccessConfigObservation) DeepCopy() *NetworkInterfaceIPv6AccessConfigObservation {
	if in == nil {
		return nil
	}
	out := new(NetworkInterfaceIPv6AccessConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkInterfaceIPv6AccessConfigParameters) DeepCopyInto(out *NetworkInterfaceIPv6AccessConfigParameters) {
	*out = *in
	if in.ExternalIPv6 != nil {
		in, out := &in.ExternalIPv6, &out.ExternalIPv6
		*out = new(string)
		**out = **in
	}
	if in.ExternalIPv6PrefixLength != nil {
		in, out := &in.ExternalIPv6PrefixLength, &out.ExternalIPv6PrefixLength
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NetworkTier != nil {
		in, out := &in.NetworkTier, &out.NetworkTier
		*out = new(string)
		**out = **in
	}
	if in.PublicPtrDomainName != nil {
		in, out := &in.PublicPtrDomainName, &out.PublicPtrDomainName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkInterfaceIPv6AccessConfigParameters.
func (in *NetworkInterfaceIPv6AccessConfigParameters) DeepCopy() *NetworkInterfaceIPv6AccessConfigParameters {
	if in == nil {
		return nil
	}
	out := new(NetworkInterfaceIPv6AccessConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkInterfaceInitParameters) DeepCopyInto(out *NetworkInterfaceInitParameters) {
	*out = *in
	if in.AccessConfig != nil {
		in, out := &in.AccessConfig, &out.AccessConfig
		*out = make([]AccessConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AliasIPRange != nil {
		in, out := &in.AliasIPRange, &out.AliasIPRange
		*out = make([]AliasIPRangeInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IPv6AccessConfig != nil {
		in, out := &in.IPv6AccessConfig, &out.IPv6AccessConfig
		*out = make([]IPv6AccessConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IPv6Address != nil {
		in, out := &in.IPv6Address, &out.IPv6Address
		*out = new(string)
		**out = **in
	}
	if in.InternalIPv6PrefixLength != nil {
		in, out := &in.InternalIPv6PrefixLength, &out.InternalIPv6PrefixLength
		*out = new(float64)
		**out = **in
	}
	if in.Network != nil {
		in, out := &in.Network, &out.Network
		*out = new(string)
		**out = **in
	}
	if in.NetworkIP != nil {
		in, out := &in.NetworkIP, &out.NetworkIP
		*out = new(string)
		**out = **in
	}
	if in.NetworkRef != nil {
		in, out := &in.NetworkRef, &out.NetworkRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.NetworkSelector != nil {
		in, out := &in.NetworkSelector, &out.NetworkSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.NicType != nil {
		in, out := &in.NicType, &out.NicType
		*out = new(string)
		**out = **in
	}
	if in.QueueCount != nil {
		in, out := &in.QueueCount, &out.QueueCount
		*out = new(float64)
		**out = **in
	}
	if in.StackType != nil {
		in, out := &in.StackType, &out.StackType
		*out = new(string)
		**out = **in
	}
	if in.Subnetwork != nil {
		in, out := &in.Subnetwork, &out.Subnetwork
		*out = new(string)
		**out = **in
	}
	if in.SubnetworkProject != nil {
		in, out := &in.SubnetworkProject, &out.SubnetworkProject
		*out = new(string)
		**out = **in
	}
	if in.SubnetworkRef != nil {
		in, out := &in.SubnetworkRef, &out.SubnetworkRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SubnetworkSelector != nil {
		in, out := &in.SubnetworkSelector, &out.SubnetworkSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkInterfaceInitParameters.
func (in *NetworkInterfaceInitParameters) DeepCopy() *NetworkInterfaceInitParameters {
	if in == nil {
		return nil
	}
	out := new(NetworkInterfaceInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkInterfaceObservation) DeepCopyInto(out *NetworkInterfaceObservation) {
	*out = *in
	if in.AccessConfig != nil {
		in, out := &in.AccessConfig, &out.AccessConfig
		*out = make([]AccessConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AliasIPRange != nil {
		in, out := &in.AliasIPRange, &out.AliasIPRange
		*out = make([]AliasIPRangeObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IPv6AccessConfig != nil {
		in, out := &in.IPv6AccessConfig, &out.IPv6AccessConfig
		*out = make([]IPv6AccessConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IPv6AccessType != nil {
		in, out := &in.IPv6AccessType, &out.IPv6AccessType
		*out = new(string)
		**out = **in
	}
	if in.IPv6Address != nil {
		in, out := &in.IPv6Address, &out.IPv6Address
		*out = new(string)
		**out = **in
	}
	if in.InternalIPv6PrefixLength != nil {
		in, out := &in.InternalIPv6PrefixLength, &out.InternalIPv6PrefixLength
		*out = new(float64)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Network != nil {
		in, out := &in.Network, &out.Network
		*out = new(string)
		**out = **in
	}
	if in.NetworkIP != nil {
		in, out := &in.NetworkIP, &out.NetworkIP
		*out = new(string)
		**out = **in
	}
	if in.NicType != nil {
		in, out := &in.NicType, &out.NicType
		*out = new(string)
		**out = **in
	}
	if in.QueueCount != nil {
		in, out := &in.QueueCount, &out.QueueCount
		*out = new(float64)
		**out = **in
	}
	if in.StackType != nil {
		in, out := &in.StackType, &out.StackType
		*out = new(string)
		**out = **in
	}
	if in.Subnetwork != nil {
		in, out := &in.Subnetwork, &out.Subnetwork
		*out = new(string)
		**out = **in
	}
	if in.SubnetworkProject != nil {
		in, out := &in.SubnetworkProject, &out.SubnetworkProject
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkInterfaceObservation.
func (in *NetworkInterfaceObservation) DeepCopy() *NetworkInterfaceObservation {
	if in == nil {
		return nil
	}
	out := new(NetworkInterfaceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkInterfaceParameters) DeepCopyInto(out *NetworkInterfaceParameters) {
	*out = *in
	if in.AccessConfig != nil {
		in, out := &in.AccessConfig, &out.AccessConfig
		*out = make([]AccessConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AliasIPRange != nil {
		in, out := &in.AliasIPRange, &out.AliasIPRange
		*out = make([]AliasIPRangeParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IPv6AccessConfig != nil {
		in, out := &in.IPv6AccessConfig, &out.IPv6AccessConfig
		*out = make([]IPv6AccessConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IPv6Address != nil {
		in, out := &in.IPv6Address, &out.IPv6Address
		*out = new(string)
		**out = **in
	}
	if in.InternalIPv6PrefixLength != nil {
		in, out := &in.InternalIPv6PrefixLength, &out.InternalIPv6PrefixLength
		*out = new(float64)
		**out = **in
	}
	if in.Network != nil {
		in, out := &in.Network, &out.Network
		*out = new(string)
		**out = **in
	}
	if in.NetworkIP != nil {
		in, out := &in.NetworkIP, &out.NetworkIP
		*out = new(string)
		**out = **in
	}
	if in.NetworkRef != nil {
		in, out := &in.NetworkRef, &out.NetworkRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.NetworkSelector != nil {
		in, out := &in.NetworkSelector, &out.NetworkSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.NicType != nil {
		in, out := &in.NicType, &out.NicType
		*out = new(string)
		**out = **in
	}
	if in.QueueCount != nil {
		in, out := &in.QueueCount, &out.QueueCount
		*out = new(float64)
		**out = **in
	}
	if in.StackType != nil {
		in, out := &in.StackType, &out.StackType
		*out = new(string)
		**out = **in
	}
	if in.Subnetwork != nil {
		in, out := &in.Subnetwork, &out.Subnetwork
		*out = new(string)
		**out = **in
	}
	if in.SubnetworkProject != nil {
		in, out := &in.SubnetworkProject, &out.SubnetworkProject
		*out = new(string)
		**out = **in
	}
	if in.SubnetworkRef != nil {
		in, out := &in.SubnetworkRef, &out.SubnetworkRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SubnetworkSelector != nil {
		in, out := &in.SubnetworkSelector, &out.SubnetworkSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkInterfaceParameters.
func (in *NetworkInterfaceParameters) DeepCopy() *NetworkInterfaceParameters {
	if in == nil {
		return nil
	}
	out := new(NetworkInterfaceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkList) DeepCopyInto(out *NetworkList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Network, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkList.
func (in *NetworkList) DeepCopy() *NetworkList {
	if in == nil {
		return nil
	}
	out := new(NetworkList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *NetworkList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkObservation) DeepCopyInto(out *NetworkObservation) {
	*out = *in
	if in.AutoCreateSubnetworks != nil {
		in, out := &in.AutoCreateSubnetworks, &out.AutoCreateSubnetworks
		*out = new(bool)
		**out = **in
	}
	if in.DeleteDefaultRoutesOnCreate != nil {
		in, out := &in.DeleteDefaultRoutesOnCreate, &out.DeleteDefaultRoutesOnCreate
		*out = new(bool)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.EnableUlaInternalIPv6 != nil {
		in, out := &in.EnableUlaInternalIPv6, &out.EnableUlaInternalIPv6
		*out = new(bool)
		**out = **in
	}
	if in.GatewayIPv4 != nil {
		in, out := &in.GatewayIPv4, &out.GatewayIPv4
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.InternalIPv6Range != nil {
		in, out := &in.InternalIPv6Range, &out.InternalIPv6Range
		*out = new(string)
		**out = **in
	}
	if in.Mtu != nil {
		in, out := &in.Mtu, &out.Mtu
		*out = new(float64)
		**out = **in
	}
	if in.NetworkFirewallPolicyEnforcementOrder != nil {
		in, out := &in.NetworkFirewallPolicyEnforcementOrder, &out.NetworkFirewallPolicyEnforcementOrder
		*out = new(string)
		**out = **in
	}
	if in.NumericID != nil {
		in, out := &in.NumericID, &out.NumericID
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.RoutingMode != nil {
		in, out := &in.RoutingMode, &out.RoutingMode
		*out = new(string)
		**out = **in
	}
	if in.SelfLink != nil {
		in, out := &in.SelfLink, &out.SelfLink
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkObservation.
func (in *NetworkObservation) DeepCopy() *NetworkObservation {
	if in == nil {
		return nil
	}
	out := new(NetworkObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkParameters) DeepCopyInto(out *NetworkParameters) {
	*out = *in
	if in.AutoCreateSubnetworks != nil {
		in, out := &in.AutoCreateSubnetworks, &out.AutoCreateSubnetworks
		*out = new(bool)
		**out = **in
	}
	if in.DeleteDefaultRoutesOnCreate != nil {
		in, out := &in.DeleteDefaultRoutesOnCreate, &out.DeleteDefaultRoutesOnCreate
		*out = new(bool)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.EnableUlaInternalIPv6 != nil {
		in, out := &in.EnableUlaInternalIPv6, &out.EnableUlaInternalIPv6
		*out = new(bool)
		**out = **in
	}
	if in.InternalIPv6Range != nil {
		in, out := &in.InternalIPv6Range, &out.InternalIPv6Range
		*out = new(string)
		**out = **in
	}
	if in.Mtu != nil {
		in, out := &in.Mtu, &out.Mtu
		*out = new(float64)
		**out = **in
	}
	if in.NetworkFirewallPolicyEnforcementOrder != nil {
		in, out := &in.NetworkFirewallPolicyEnforcementOrder, &out.NetworkFirewallPolicyEnforcementOrder
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.RoutingMode != nil {
		in, out := &in.RoutingMode, &out.RoutingMode
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkParameters.
func (in *NetworkParameters) DeepCopy() *NetworkParameters {
	if in == nil {
		return nil
	}
	out := new(NetworkParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkPeering) DeepCopyInto(out *NetworkPeering) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkPeering.
func (in *NetworkPeering) DeepCopy() *NetworkPeering {
	if in == nil {
		return nil
	}
	out := new(NetworkPeering)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *NetworkPeering) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkPeeringInitParameters) DeepCopyInto(out *NetworkPeeringInitParameters) {
	*out = *in
	if in.ExportCustomRoutes != nil {
		in, out := &in.ExportCustomRoutes, &out.ExportCustomRoutes
		*out = new(bool)
		**out = **in
	}
	if in.ExportSubnetRoutesWithPublicIP != nil {
		in, out := &in.ExportSubnetRoutesWithPublicIP, &out.ExportSubnetRoutesWithPublicIP
		*out = new(bool)
		**out = **in
	}
	if in.ImportCustomRoutes != nil {
		in, out := &in.ImportCustomRoutes, &out.ImportCustomRoutes
		*out = new(bool)
		**out = **in
	}
	if in.ImportSubnetRoutesWithPublicIP != nil {
		in, out := &in.ImportSubnetRoutesWithPublicIP, &out.ImportSubnetRoutesWithPublicIP
		*out = new(bool)
		**out = **in
	}
	if in.PeerNetwork != nil {
		in, out := &in.PeerNetwork, &out.PeerNetwork
		*out = new(string)
		**out = **in
	}
	if in.PeerNetworkRef != nil {
		in, out := &in.PeerNetworkRef, &out.PeerNetworkRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.PeerNetworkSelector != nil {
		in, out := &in.PeerNetworkSelector, &out.PeerNetworkSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.StackType != nil {
		in, out := &in.StackType, &out.StackType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkPeeringInitParameters.
func (in *NetworkPeeringInitParameters) DeepCopy() *NetworkPeeringInitParameters {
	if in == nil {
		return nil
	}
	out := new(NetworkPeeringInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkPeeringList) DeepCopyInto(out *NetworkPeeringList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]NetworkPeering, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkPeeringList.
func (in *NetworkPeeringList) DeepCopy() *NetworkPeeringList {
	if in == nil {
		return nil
	}
	out := new(NetworkPeeringList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *NetworkPeeringList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkPeeringObservation) DeepCopyInto(out *NetworkPeeringObservation) {
	*out = *in
	if in.ExportCustomRoutes != nil {
		in, out := &in.ExportCustomRoutes, &out.ExportCustomRoutes
		*out = new(bool)
		**out = **in
	}
	if in.ExportSubnetRoutesWithPublicIP != nil {
		in, out := &in.ExportSubnetRoutesWithPublicIP, &out.ExportSubnetRoutesWithPublicIP
		*out = new(bool)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.ImportCustomRoutes != nil {
		in, out := &in.ImportCustomRoutes, &out.ImportCustomRoutes
		*out = new(bool)
		**out = **in
	}
	if in.ImportSubnetRoutesWithPublicIP != nil {
		in, out := &in.ImportSubnetRoutesWithPublicIP, &out.ImportSubnetRoutesWithPublicIP
		*out = new(bool)
		**out = **in
	}
	if in.Network != nil {
		in, out := &in.Network, &out.Network
		*out = new(string)
		**out = **in
	}
	if in.PeerNetwork != nil {
		in, out := &in.PeerNetwork, &out.PeerNetwork
		*out = new(string)
		**out = **in
	}
	if in.StackType != nil {
		in, out := &in.StackType, &out.StackType
		*out = new(string)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.StateDetails != nil {
		in, out := &in.StateDetails, &out.StateDetails
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkPeeringObservation.
func (in *NetworkPeeringObservation) DeepCopy() *NetworkPeeringObservation {
	if in == nil {
		return nil
	}
	out := new(NetworkPeeringObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkPeeringParameters) DeepCopyInto(out *NetworkPeeringParameters) {
	*out = *in
	if in.ExportCustomRoutes != nil {
		in, out := &in.ExportCustomRoutes, &out.ExportCustomRoutes
		*out = new(bool)
		**out = **in
	}
	if in.ExportSubnetRoutesWithPublicIP != nil {
		in, out := &in.ExportSubnetRoutesWithPublicIP, &out.ExportSubnetRoutesWithPublicIP
		*out = new(bool)
		**out = **in
	}
	if in.ImportCustomRoutes != nil {
		in, out := &in.ImportCustomRoutes, &out.ImportCustomRoutes
		*out = new(bool)
		**out = **in
	}
	if in.ImportSubnetRoutesWithPublicIP != nil {
		in, out := &in.ImportSubnetRoutesWithPublicIP, &out.ImportSubnetRoutesWithPublicIP
		*out = new(bool)
		**out = **in
	}
	if in.Network != nil {
		in, out := &in.Network, &out.Network
		*out = new(string)
		**out = **in
	}
	if in.NetworkRef != nil {
		in, out := &in.NetworkRef, &out.NetworkRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.NetworkSelector != nil {
		in, out := &in.NetworkSelector, &out.NetworkSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.PeerNetwork != nil {
		in, out := &in.PeerNetwork, &out.PeerNetwork
		*out = new(string)
		**out = **in
	}
	if in.PeerNetworkRef != nil {
		in, out := &in.PeerNetworkRef, &out.PeerNetworkRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.PeerNetworkSelector != nil {
		in, out := &in.PeerNetworkSelector, &out.PeerNetworkSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.StackType != nil {
		in, out := &in.StackType, &out.StackType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkPeeringParameters.
func (in *NetworkPeeringParameters) DeepCopy() *NetworkPeeringParameters {
	if in == nil {
		return nil
	}
	out := new(NetworkPeeringParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkPeeringRoutesConfig) DeepCopyInto(out *NetworkPeeringRoutesConfig) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkPeeringRoutesConfig.
func (in *NetworkPeeringRoutesConfig) DeepCopy() *NetworkPeeringRoutesConfig {
	if in == nil {
		return nil
	}
	out := new(NetworkPeeringRoutesConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *NetworkPeeringRoutesConfig) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkPeeringRoutesConfigInitParameters) DeepCopyInto(out *NetworkPeeringRoutesConfigInitParameters) {
	*out = *in
	if in.ExportCustomRoutes != nil {
		in, out := &in.ExportCustomRoutes, &out.ExportCustomRoutes
		*out = new(bool)
		**out = **in
	}
	if in.ImportCustomRoutes != nil {
		in, out := &in.ImportCustomRoutes, &out.ImportCustomRoutes
		*out = new(bool)
		**out = **in
	}
	if in.Network != nil {
		in, out := &in.Network, &out.Network
		*out = new(string)
		**out = **in
	}
	if in.NetworkRef != nil {
		in, out := &in.NetworkRef, &out.NetworkRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.NetworkSelector != nil {
		in, out := &in.NetworkSelector, &out.NetworkSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Peering != nil {
		in, out := &in.Peering, &out.Peering
		*out = new(string)
		**out = **in
	}
	if in.PeeringRef != nil {
		in, out := &in.PeeringRef, &out.PeeringRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.PeeringSelector != nil {
		in, out := &in.PeeringSelector, &out.PeeringSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkPeeringRoutesConfigInitParameters.
func (in *NetworkPeeringRoutesConfigInitParameters) DeepCopy() *NetworkPeeringRoutesConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(NetworkPeeringRoutesConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkPeeringRoutesConfigList) DeepCopyInto(out *NetworkPeeringRoutesConfigList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]NetworkPeeringRoutesConfig, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkPeeringRoutesConfigList.
func (in *NetworkPeeringRoutesConfigList) DeepCopy() *NetworkPeeringRoutesConfigList {
	if in == nil {
		return nil
	}
	out := new(NetworkPeeringRoutesConfigList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *NetworkPeeringRoutesConfigList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkPeeringRoutesConfigObservation) DeepCopyInto(out *NetworkPeeringRoutesConfigObservation) {
	*out = *in
	if in.ExportCustomRoutes != nil {
		in, out := &in.ExportCustomRoutes, &out.ExportCustomRoutes
		*out = new(bool)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.ImportCustomRoutes != nil {
		in, out := &in.ImportCustomRoutes, &out.ImportCustomRoutes
		*out = new(bool)
		**out = **in
	}
	if in.Network != nil {
		in, out := &in.Network, &out.Network
		*out = new(string)
		**out = **in
	}
	if in.Peering != nil {
		in, out := &in.Peering, &out.Peering
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkPeeringRoutesConfigObservation.
func (in *NetworkPeeringRoutesConfigObservation) DeepCopy() *NetworkPeeringRoutesConfigObservation {
	if in == nil {
		return nil
	}
	out := new(NetworkPeeringRoutesConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkPeeringRoutesConfigParameters) DeepCopyInto(out *NetworkPeeringRoutesConfigParameters) {
	*out = *in
	if in.ExportCustomRoutes != nil {
		in, out := &in.ExportCustomRoutes, &out.ExportCustomRoutes
		*out = new(bool)
		**out = **in
	}
	if in.ImportCustomRoutes != nil {
		in, out := &in.ImportCustomRoutes, &out.ImportCustomRoutes
		*out = new(bool)
		**out = **in
	}
	if in.Network != nil {
		in, out := &in.Network, &out.Network
		*out = new(string)
		**out = **in
	}
	if in.NetworkRef != nil {
		in, out := &in.NetworkRef, &out.NetworkRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.NetworkSelector != nil {
		in, out := &in.NetworkSelector, &out.NetworkSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Peering != nil {
		in, out := &in.Peering, &out.Peering
		*out = new(string)
		**out = **in
	}
	if in.PeeringRef != nil {
		in, out := &in.PeeringRef, &out.PeeringRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.PeeringSelector != nil {
		in, out := &in.PeeringSelector, &out.PeeringSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkPeeringRoutesConfigParameters.
func (in *NetworkPeeringRoutesConfigParameters) DeepCopy() *NetworkPeeringRoutesConfigParameters {
	if in == nil {
		return nil
	}
	out := new(NetworkPeeringRoutesConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkPeeringRoutesConfigSpec) DeepCopyInto(out *NetworkPeeringRoutesConfigSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkPeeringRoutesConfigSpec.
func (in *NetworkPeeringRoutesConfigSpec) DeepCopy() *NetworkPeeringRoutesConfigSpec {
	if in == nil {
		return nil
	}
	out := new(NetworkPeeringRoutesConfigSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkPeeringRoutesConfigStatus) DeepCopyInto(out *NetworkPeeringRoutesConfigStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkPeeringRoutesConfigStatus.
func (in *NetworkPeeringRoutesConfigStatus) DeepCopy() *NetworkPeeringRoutesConfigStatus {
	if in == nil {
		return nil
	}
	out := new(NetworkPeeringRoutesConfigStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkPeeringSpec) DeepCopyInto(out *NetworkPeeringSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkPeeringSpec.
func (in *NetworkPeeringSpec) DeepCopy() *NetworkPeeringSpec {
	if in == nil {
		return nil
	}
	out := new(NetworkPeeringSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkPeeringStatus) DeepCopyInto(out *NetworkPeeringStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkPeeringStatus.
func (in *NetworkPeeringStatus) DeepCopy() *NetworkPeeringStatus {
	if in == nil {
		return nil
	}
	out := new(NetworkPeeringStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkPerformanceConfigInitParameters) DeepCopyInto(out *NetworkPerformanceConfigInitParameters) {
	*out = *in
	if in.TotalEgressBandwidthTier != nil {
		in, out := &in.TotalEgressBandwidthTier, &out.TotalEgressBandwidthTier
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkPerformanceConfigInitParameters.
func (in *NetworkPerformanceConfigInitParameters) DeepCopy() *NetworkPerformanceConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(NetworkPerformanceConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkPerformanceConfigObservation) DeepCopyInto(out *NetworkPerformanceConfigObservation) {
	*out = *in
	if in.TotalEgressBandwidthTier != nil {
		in, out := &in.TotalEgressBandwidthTier, &out.TotalEgressBandwidthTier
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkPerformanceConfigObservation.
func (in *NetworkPerformanceConfigObservation) DeepCopy() *NetworkPerformanceConfigObservation {
	if in == nil {
		return nil
	}
	out := new(NetworkPerformanceConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkPerformanceConfigParameters) DeepCopyInto(out *NetworkPerformanceConfigParameters) {
	*out = *in
	if in.TotalEgressBandwidthTier != nil {
		in, out := &in.TotalEgressBandwidthTier, &out.TotalEgressBandwidthTier
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkPerformanceConfigParameters.
func (in *NetworkPerformanceConfigParameters) DeepCopy() *NetworkPerformanceConfigParameters {
	if in == nil {
		return nil
	}
	out := new(NetworkPerformanceConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkSpec) DeepCopyInto(out *NetworkSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkSpec.
func (in *NetworkSpec) DeepCopy() *NetworkSpec {
	if in == nil {
		return nil
	}
	out := new(NetworkSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkStatus) DeepCopyInto(out *NetworkStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkStatus.
func (in *NetworkStatus) DeepCopy() *NetworkStatus {
	if in == nil {
		return nil
	}
	out := new(NetworkStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodeAffinitiesInitParameters) DeepCopyInto(out *NodeAffinitiesInitParameters) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodeAffinitiesInitParameters.
func (in *NodeAffinitiesInitParameters) DeepCopy() *NodeAffinitiesInitParameters {
	if in == nil {
		return nil
	}
	out := new(NodeAffinitiesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodeAffinitiesObservation) DeepCopyInto(out *NodeAffinitiesObservation) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodeAffinitiesObservation.
func (in *NodeAffinitiesObservation) DeepCopy() *NodeAffinitiesObservation {
	if in == nil {
		return nil
	}
	out := new(NodeAffinitiesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodeAffinitiesParameters) DeepCopyInto(out *NodeAffinitiesParameters) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodeAffinitiesParameters.
func (in *NodeAffinitiesParameters) DeepCopy() *NodeAffinitiesParameters {
	if in == nil {
		return nil
	}
	out := new(NodeAffinitiesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodeGroup) DeepCopyInto(out *NodeGroup) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodeGroup.
func (in *NodeGroup) DeepCopy() *NodeGroup {
	if in == nil {
		return nil
	}
	out := new(NodeGroup)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *NodeGroup) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodeGroupAutoscalingPolicyInitParameters) DeepCopyInto(out *NodeGroupAutoscalingPolicyInitParameters) {
	*out = *in
	if in.MaxNodes != nil {
		in, out := &in.MaxNodes, &out.MaxNodes
		*out = new(float64)
		**out = **in
	}
	if in.MinNodes != nil {
		in, out := &in.MinNodes, &out.MinNodes
		*out = new(float64)
		**out = **in
	}
	if in.Mode != nil {
		in, out := &in.Mode, &out.Mode
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodeGroupAutoscalingPolicyInitParameters.
func (in *NodeGroupAutoscalingPolicyInitParameters) DeepCopy() *NodeGroupAutoscalingPolicyInitParameters {
	if in == nil {
		return nil
	}
	out := new(NodeGroupAutoscalingPolicyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodeGroupAutoscalingPolicyObservation) DeepCopyInto(out *NodeGroupAutoscalingPolicyObservation) {
	*out = *in
	if in.MaxNodes != nil {
		in, out := &in.MaxNodes, &out.MaxNodes
		*out = new(float64)
		**out = **in
	}
	if in.MinNodes != nil {
		in, out := &in.MinNodes, &out.MinNodes
		*out = new(float64)
		**out = **in
	}
	if in.Mode != nil {
		in, out := &in.Mode, &out.Mode
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodeGroupAutoscalingPolicyObservation.
func (in *NodeGroupAutoscalingPolicyObservation) DeepCopy() *NodeGroupAutoscalingPolicyObservation {
	if in == nil {
		return nil
	}
	out := new(NodeGroupAutoscalingPolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodeGroupAutoscalingPolicyParameters) DeepCopyInto(out *NodeGroupAutoscalingPolicyParameters) {
	*out = *in
	if in.MaxNodes != nil {
		in, out := &in.MaxNodes, &out.MaxNodes
		*out = new(float64)
		**out = **in
	}
	if in.MinNodes != nil {
		in, out := &in.MinNodes, &out.MinNodes
		*out = new(float64)
		**out = **in
	}
	if in.Mode != nil {
		in, out := &in.Mode, &out.Mode
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodeGroupAutoscalingPolicyParameters.
func (in *NodeGroupAutoscalingPolicyParameters) DeepCopy() *NodeGroupAutoscalingPolicyParameters {
	if in == nil {
		return nil
	}
	out := new(NodeGroupAutoscalingPolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodeGroupInitParameters) DeepCopyInto(out *NodeGroupInitParameters) {
	*out = *in
	if in.AutoscalingPolicy != nil {
		in, out := &in.AutoscalingPolicy, &out.AutoscalingPolicy
		*out = make([]NodeGroupAutoscalingPolicyInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.InitialSize != nil {
		in, out := &in.InitialSize, &out.InitialSize
		*out = new(float64)
		**out = **in
	}
	if in.MaintenancePolicy != nil {
		in, out := &in.MaintenancePolicy, &out.MaintenancePolicy
		*out = new(string)
		**out = **in
	}
	if in.MaintenanceWindow != nil {
		in, out := &in.MaintenanceWindow, &out.MaintenanceWindow
		*out = make([]MaintenanceWindowInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NodeTemplate != nil {
		in, out := &in.NodeTemplate, &out.NodeTemplate
		*out = new(string)
		**out = **in
	}
	if in.NodeTemplateRef != nil {
		in, out := &in.NodeTemplateRef, &out.NodeTemplateRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.NodeTemplateSelector != nil {
		in, out := &in.NodeTemplateSelector, &out.NodeTemplateSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.ShareSettings != nil {
		in, out := &in.ShareSettings, &out.ShareSettings
		*out = make([]ShareSettingsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodeGroupInitParameters.
func (in *NodeGroupInitParameters) DeepCopy() *NodeGroupInitParameters {
	if in == nil {
		return nil
	}
	out := new(NodeGroupInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodeGroupList) DeepCopyInto(out *NodeGroupList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]NodeGroup, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodeGroupList.
func (in *NodeGroupList) DeepCopy() *NodeGroupList {
	if in == nil {
		return nil
	}
	out := new(NodeGroupList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *NodeGroupList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodeGroupObservation) DeepCopyInto(out *NodeGroupObservation) {
	*out = *in
	if in.AutoscalingPolicy != nil {
		in, out := &in.AutoscalingPolicy, &out.AutoscalingPolicy
		*out = make([]NodeGroupAutoscalingPolicyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CreationTimestamp != nil {
		in, out := &in.CreationTimestamp, &out.CreationTimestamp
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.InitialSize != nil {
		in, out := &in.InitialSize, &out.InitialSize
		*out = new(float64)
		**out = **in
	}
	if in.MaintenancePolicy != nil {
		in, out := &in.MaintenancePolicy, &out.MaintenancePolicy
		*out = new(string)
		**out = **in
	}
	if in.MaintenanceWindow != nil {
		in, out := &in.MaintenanceWindow, &out.MaintenanceWindow
		*out = make([]MaintenanceWindowObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NodeTemplate != nil {
		in, out := &in.NodeTemplate, &out.NodeTemplate
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.SelfLink != nil {
		in, out := &in.SelfLink, &out.SelfLink
		*out = new(string)
		**out = **in
	}
	if in.ShareSettings != nil {
		in, out := &in.ShareSettings, &out.ShareSettings
		*out = make([]ShareSettingsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(float64)
		**out = **in
	}
	if in.Zone != nil {
		in, out := &in.Zone, &out.Zone
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodeGroupObservation.
func (in *NodeGroupObservation) DeepCopy() *NodeGroupObservation {
	if in == nil {
		return nil
	}
	out := new(NodeGroupObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodeGroupParameters) DeepCopyInto(out *NodeGroupParameters) {
	*out = *in
	if in.AutoscalingPolicy != nil {
		in, out := &in.AutoscalingPolicy, &out.AutoscalingPolicy
		*out = make([]NodeGroupAutoscalingPolicyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.InitialSize != nil {
		in, out := &in.InitialSize, &out.InitialSize
		*out = new(float64)
		**out = **in
	}
	if in.MaintenancePolicy != nil {
		in, out := &in.MaintenancePolicy, &out.MaintenancePolicy
		*out = new(string)
		**out = **in
	}
	if in.MaintenanceWindow != nil {
		in, out := &in.MaintenanceWindow, &out.MaintenanceWindow
		*out = make([]MaintenanceWindowParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NodeTemplate != nil {
		in, out := &in.NodeTemplate, &out.NodeTemplate
		*out = new(string)
		**out = **in
	}
	if in.NodeTemplateRef != nil {
		in, out := &in.NodeTemplateRef, &out.NodeTemplateRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.NodeTemplateSelector != nil {
		in, out := &in.NodeTemplateSelector, &out.NodeTemplateSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.ShareSettings != nil {
		in, out := &in.ShareSettings, &out.ShareSettings
		*out = make([]ShareSettingsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Zone != nil {
		in, out := &in.Zone, &out.Zone
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodeGroupParameters.
func (in *NodeGroupParameters) DeepCopy() *NodeGroupParameters {
	if in == nil {
		return nil
	}
	out := new(NodeGroupParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodeGroupSpec) DeepCopyInto(out *NodeGroupSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodeGroupSpec.
func (in *NodeGroupSpec) DeepCopy() *NodeGroupSpec {
	if in == nil {
		return nil
	}
	out := new(NodeGroupSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodeGroupStatus) DeepCopyInto(out *NodeGroupStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodeGroupStatus.
func (in *NodeGroupStatus) DeepCopy() *NodeGroupStatus {
	if in == nil {
		return nil
	}
	out := new(NodeGroupStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodeTemplate) DeepCopyInto(out *NodeTemplate) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodeTemplate.
func (in *NodeTemplate) DeepCopy() *NodeTemplate {
	if in == nil {
		return nil
	}
	out := new(NodeTemplate)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *NodeTemplate) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodeTemplateInitParameters) DeepCopyInto(out *NodeTemplateInitParameters) {
	*out = *in
	if in.CPUOvercommitType != nil {
		in, out := &in.CPUOvercommitType, &out.CPUOvercommitType
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.NodeAffinityLabels != nil {
		in, out := &in.NodeAffinityLabels, &out.NodeAffinityLabels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.NodeType != nil {
		in, out := &in.NodeType, &out.NodeType
		*out = new(string)
		**out = **in
	}
	if in.NodeTypeFlexibility != nil {
		in, out := &in.NodeTypeFlexibility, &out.NodeTypeFlexibility
		*out = make([]NodeTypeFlexibilityInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.ServerBinding != nil {
		in, out := &in.ServerBinding, &out.ServerBinding
		*out = make([]ServerBindingInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodeTemplateInitParameters.
func (in *NodeTemplateInitParameters) DeepCopy() *NodeTemplateInitParameters {
	if in == nil {
		return nil
	}
	out := new(NodeTemplateInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodeTemplateList) DeepCopyInto(out *NodeTemplateList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]NodeTemplate, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodeTemplateList.
func (in *NodeTemplateList) DeepCopy() *NodeTemplateList {
	if in == nil {
		return nil
	}
	out := new(NodeTemplateList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *NodeTemplateList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodeTemplateObservation) DeepCopyInto(out *NodeTemplateObservation) {
	*out = *in
	if in.CPUOvercommitType != nil {
		in, out := &in.CPUOvercommitType, &out.CPUOvercommitType
		*out = new(string)
		**out = **in
	}
	if in.CreationTimestamp != nil {
		in, out := &in.CreationTimestamp, &out.CreationTimestamp
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.NodeAffinityLabels != nil {
		in, out := &in.NodeAffinityLabels, &out.NodeAffinityLabels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.NodeType != nil {
		in, out := &in.NodeType, &out.NodeType
		*out = new(string)
		**out = **in
	}
	if in.NodeTypeFlexibility != nil {
		in, out := &in.NodeTypeFlexibility, &out.NodeTypeFlexibility
		*out = make([]NodeTypeFlexibilityObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.SelfLink != nil {
		in, out := &in.SelfLink, &out.SelfLink
		*out = new(string)
		**out = **in
	}
	if in.ServerBinding != nil {
		in, out := &in.ServerBinding, &out.ServerBinding
		*out = make([]ServerBindingObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodeTemplateObservation.
func (in *NodeTemplateObservation) DeepCopy() *NodeTemplateObservation {
	if in == nil {
		return nil
	}
	out := new(NodeTemplateObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodeTemplateParameters) DeepCopyInto(out *NodeTemplateParameters) {
	*out = *in
	if in.CPUOvercommitType != nil {
		in, out := &in.CPUOvercommitType, &out.CPUOvercommitType
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.NodeAffinityLabels != nil {
		in, out := &in.NodeAffinityLabels, &out.NodeAffinityLabels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.NodeType != nil {
		in, out := &in.NodeType, &out.NodeType
		*out = new(string)
		**out = **in
	}
	if in.NodeTypeFlexibility != nil {
		in, out := &in.NodeTypeFlexibility, &out.NodeTypeFlexibility
		*out = make([]NodeTypeFlexibilityParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.ServerBinding != nil {
		in, out := &in.ServerBinding, &out.ServerBinding
		*out = make([]ServerBindingParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodeTemplateParameters.
func (in *NodeTemplateParameters) DeepCopy() *NodeTemplateParameters {
	if in == nil {
		return nil
	}
	out := new(NodeTemplateParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodeTemplateSpec) DeepCopyInto(out *NodeTemplateSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodeTemplateSpec.
func (in *NodeTemplateSpec) DeepCopy() *NodeTemplateSpec {
	if in == nil {
		return nil
	}
	out := new(NodeTemplateSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodeTemplateStatus) DeepCopyInto(out *NodeTemplateStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodeTemplateStatus.
func (in *NodeTemplateStatus) DeepCopy() *NodeTemplateStatus {
	if in == nil {
		return nil
	}
	out := new(NodeTemplateStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodeTypeFlexibilityInitParameters) DeepCopyInto(out *NodeTypeFlexibilityInitParameters) {
	*out = *in
	if in.Cpus != nil {
		in, out := &in.Cpus, &out.Cpus
		*out = new(string)
		**out = **in
	}
	if in.Memory != nil {
		in, out := &in.Memory, &out.Memory
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodeTypeFlexibilityInitParameters.
func (in *NodeTypeFlexibilityInitParameters) DeepCopy() *NodeTypeFlexibilityInitParameters {
	if in == nil {
		return nil
	}
	out := new(NodeTypeFlexibilityInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodeTypeFlexibilityObservation) DeepCopyInto(out *NodeTypeFlexibilityObservation) {
	*out = *in
	if in.Cpus != nil {
		in, out := &in.Cpus, &out.Cpus
		*out = new(string)
		**out = **in
	}
	if in.LocalSsd != nil {
		in, out := &in.LocalSsd, &out.LocalSsd
		*out = new(string)
		**out = **in
	}
	if in.Memory != nil {
		in, out := &in.Memory, &out.Memory
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodeTypeFlexibilityObservation.
func (in *NodeTypeFlexibilityObservation) DeepCopy() *NodeTypeFlexibilityObservation {
	if in == nil {
		return nil
	}
	out := new(NodeTypeFlexibilityObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodeTypeFlexibilityParameters) DeepCopyInto(out *NodeTypeFlexibilityParameters) {
	*out = *in
	if in.Cpus != nil {
		in, out := &in.Cpus, &out.Cpus
		*out = new(string)
		**out = **in
	}
	if in.Memory != nil {
		in, out := &in.Memory, &out.Memory
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodeTypeFlexibilityParameters.
func (in *NodeTypeFlexibilityParameters) DeepCopy() *NodeTypeFlexibilityParameters {
	if in == nil {
		return nil
	}
	out := new(NodeTypeFlexibilityParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OnInstanceStopActionInitParameters) DeepCopyInto(out *OnInstanceStopActionInitParameters) {
	*out = *in
	if in.DiscardLocalSsd != nil {
		in, out := &in.DiscardLocalSsd, &out.DiscardLocalSsd
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OnInstanceStopActionInitParameters.
func (in *OnInstanceStopActionInitParameters) DeepCopy() *OnInstanceStopActionInitParameters {
	if in == nil {
		return nil
	}
	out := new(OnInstanceStopActionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OnInstanceStopActionObservation) DeepCopyInto(out *OnInstanceStopActionObservation) {
	*out = *in
	if in.DiscardLocalSsd != nil {
		in, out := &in.DiscardLocalSsd, &out.DiscardLocalSsd
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OnInstanceStopActionObservation.
func (in *OnInstanceStopActionObservation) DeepCopy() *OnInstanceStopActionObservation {
	if in == nil {
		return nil
	}
	out := new(OnInstanceStopActionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OnInstanceStopActionParameters) DeepCopyInto(out *OnInstanceStopActionParameters) {
	*out = *in
	if in.DiscardLocalSsd != nil {
		in, out := &in.DiscardLocalSsd, &out.DiscardLocalSsd
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OnInstanceStopActionParameters.
func (in *OnInstanceStopActionParameters) DeepCopy() *OnInstanceStopActionParameters {
	if in == nil {
		return nil
	}
	out := new(OnInstanceStopActionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OutlierDetectionBaseEjectionTimeInitParameters) DeepCopyInto(out *OutlierDetectionBaseEjectionTimeInitParameters) {
	*out = *in
	if in.Nanos != nil {
		in, out := &in.Nanos, &out.Nanos
		*out = new(float64)
		**out = **in
	}
	if in.Seconds != nil {
		in, out := &in.Seconds, &out.Seconds
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OutlierDetectionBaseEjectionTimeInitParameters.
func (in *OutlierDetectionBaseEjectionTimeInitParameters) DeepCopy() *OutlierDetectionBaseEjectionTimeInitParameters {
	if in == nil {
		return nil
	}
	out := new(OutlierDetectionBaseEjectionTimeInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OutlierDetectionBaseEjectionTimeObservation) DeepCopyInto(out *OutlierDetectionBaseEjectionTimeObservation) {
	*out = *in
	if in.Nanos != nil {
		in, out := &in.Nanos, &out.Nanos
		*out = new(float64)
		**out = **in
	}
	if in.Seconds != nil {
		in, out := &in.Seconds, &out.Seconds
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OutlierDetectionBaseEjectionTimeObservation.
func (in *OutlierDetectionBaseEjectionTimeObservation) DeepCopy() *OutlierDetectionBaseEjectionTimeObservation {
	if in == nil {
		return nil
	}
	out := new(OutlierDetectionBaseEjectionTimeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OutlierDetectionBaseEjectionTimeParameters) DeepCopyInto(out *OutlierDetectionBaseEjectionTimeParameters) {
	*out = *in
	if in.Nanos != nil {
		in, out := &in.Nanos, &out.Nanos
		*out = new(float64)
		**out = **in
	}
	if in.Seconds != nil {
		in, out := &in.Seconds, &out.Seconds
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OutlierDetectionBaseEjectionTimeParameters.
func (in *OutlierDetectionBaseEjectionTimeParameters) DeepCopy() *OutlierDetectionBaseEjectionTimeParameters {
	if in == nil {
		return nil
	}
	out := new(OutlierDetectionBaseEjectionTimeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OutlierDetectionInitParameters) DeepCopyInto(out *OutlierDetectionInitParameters) {
	*out = *in
	if in.BaseEjectionTime != nil {
		in, out := &in.BaseEjectionTime, &out.BaseEjectionTime
		*out = make([]BaseEjectionTimeInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ConsecutiveErrors != nil {
		in, out := &in.ConsecutiveErrors, &out.ConsecutiveErrors
		*out = new(float64)
		**out = **in
	}
	if in.ConsecutiveGatewayFailure != nil {
		in, out := &in.ConsecutiveGatewayFailure, &out.ConsecutiveGatewayFailure
		*out = new(float64)
		**out = **in
	}
	if in.EnforcingConsecutiveErrors != nil {
		in, out := &in.EnforcingConsecutiveErrors, &out.EnforcingConsecutiveErrors
		*out = new(float64)
		**out = **in
	}
	if in.EnforcingConsecutiveGatewayFailure != nil {
		in, out := &in.EnforcingConsecutiveGatewayFailure, &out.EnforcingConsecutiveGatewayFailure
		*out = new(float64)
		**out = **in
	}
	if in.EnforcingSuccessRate != nil {
		in, out := &in.EnforcingSuccessRate, &out.EnforcingSuccessRate
		*out = new(float64)
		**out = **in
	}
	if in.Interval != nil {
		in, out := &in.Interval, &out.Interval
		*out = make([]IntervalInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MaxEjectionPercent != nil {
		in, out := &in.MaxEjectionPercent, &out.MaxEjectionPercent
		*out = new(float64)
		**out = **in
	}
	if in.SuccessRateMinimumHosts != nil {
		in, out := &in.SuccessRateMinimumHosts, &out.SuccessRateMinimumHosts
		*out = new(float64)
		**out = **in
	}
	if in.SuccessRateRequestVolume != nil {
		in, out := &in.SuccessRateRequestVolume, &out.SuccessRateRequestVolume
		*out = new(float64)
		**out = **in
	}
	if in.SuccessRateStdevFactor != nil {
		in, out := &in.SuccessRateStdevFactor, &out.SuccessRateStdevFactor
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OutlierDetectionInitParameters.
func (in *OutlierDetectionInitParameters) DeepCopy() *OutlierDetectionInitParameters {
	if in == nil {
		return nil
	}
	out := new(OutlierDetectionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OutlierDetectionIntervalInitParameters) DeepCopyInto(out *OutlierDetectionIntervalInitParameters) {
	*out = *in
	if in.Nanos != nil {
		in, out := &in.Nanos, &out.Nanos
		*out = new(float64)
		**out = **in
	}
	if in.Seconds != nil {
		in, out := &in.Seconds, &out.Seconds
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OutlierDetectionIntervalInitParameters.
func (in *OutlierDetectionIntervalInitParameters) DeepCopy() *OutlierDetectionIntervalInitParameters {
	if in == nil {
		return nil
	}
	out := new(OutlierDetectionIntervalInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OutlierDetectionIntervalObservation) DeepCopyInto(out *OutlierDetectionIntervalObservation) {
	*out = *in
	if in.Nanos != nil {
		in, out := &in.Nanos, &out.Nanos
		*out = new(float64)
		**out = **in
	}
	if in.Seconds != nil {
		in, out := &in.Seconds, &out.Seconds
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OutlierDetectionIntervalObservation.
func (in *OutlierDetectionIntervalObservation) DeepCopy() *OutlierDetectionIntervalObservation {
	if in == nil {
		return nil
	}
	out := new(OutlierDetectionIntervalObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OutlierDetectionIntervalParameters) DeepCopyInto(out *OutlierDetectionIntervalParameters) {
	*out = *in
	if in.Nanos != nil {
		in, out := &in.Nanos, &out.Nanos
		*out = new(float64)
		**out = **in
	}
	if in.Seconds != nil {
		in, out := &in.Seconds, &out.Seconds
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OutlierDetectionIntervalParameters.
func (in *OutlierDetectionIntervalParameters) DeepCopy() *OutlierDetectionIntervalParameters {
	if in == nil {
		return nil
	}
	out := new(OutlierDetectionIntervalParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OutlierDetectionObservation) DeepCopyInto(out *OutlierDetectionObservation) {
	*out = *in
	if in.BaseEjectionTime != nil {
		in, out := &in.BaseEjectionTime, &out.BaseEjectionTime
		*out = make([]BaseEjectionTimeObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ConsecutiveErrors != nil {
		in, out := &in.ConsecutiveErrors, &out.ConsecutiveErrors
		*out = new(float64)
		**out = **in
	}
	if in.ConsecutiveGatewayFailure != nil {
		in, out := &in.ConsecutiveGatewayFailure, &out.ConsecutiveGatewayFailure
		*out = new(float64)
		**out = **in
	}
	if in.EnforcingConsecutiveErrors != nil {
		in, out := &in.EnforcingConsecutiveErrors, &out.EnforcingConsecutiveErrors
		*out = new(float64)
		**out = **in
	}
	if in.EnforcingConsecutiveGatewayFailure != nil {
		in, out := &in.EnforcingConsecutiveGatewayFailure, &out.EnforcingConsecutiveGatewayFailure
		*out = new(float64)
		**out = **in
	}
	if in.EnforcingSuccessRate != nil {
		in, out := &in.EnforcingSuccessRate, &out.EnforcingSuccessRate
		*out = new(float64)
		**out = **in
	}
	if in.Interval != nil {
		in, out := &in.Interval, &out.Interval
		*out = make([]IntervalObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MaxEjectionPercent != nil {
		in, out := &in.MaxEjectionPercent, &out.MaxEjectionPercent
		*out = new(float64)
		**out = **in
	}
	if in.SuccessRateMinimumHosts != nil {
		in, out := &in.SuccessRateMinimumHosts, &out.SuccessRateMinimumHosts
		*out = new(float64)
		**out = **in
	}
	if in.SuccessRateRequestVolume != nil {
		in, out := &in.SuccessRateRequestVolume, &out.SuccessRateRequestVolume
		*out = new(float64)
		**out = **in
	}
	if in.SuccessRateStdevFactor != nil {
		in, out := &in.SuccessRateStdevFactor, &out.SuccessRateStdevFactor
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OutlierDetectionObservation.
func (in *OutlierDetectionObservation) DeepCopy() *OutlierDetectionObservation {
	if in == nil {
		return nil
	}
	out := new(OutlierDetectionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OutlierDetectionParameters) DeepCopyInto(out *OutlierDetectionParameters) {
	*out = *in
	if in.BaseEjectionTime != nil {
		in, out := &in.BaseEjectionTime, &out.BaseEjectionTime
		*out = make([]BaseEjectionTimeParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ConsecutiveErrors != nil {
		in, out := &in.ConsecutiveErrors, &out.ConsecutiveErrors
		*out = new(float64)
		**out = **in
	}
	if in.ConsecutiveGatewayFailure != nil {
		in, out := &in.ConsecutiveGatewayFailure, &out.ConsecutiveGatewayFailure
		*out = new(float64)
		**out = **in
	}
	if in.EnforcingConsecutiveErrors != nil {
		in, out := &in.EnforcingConsecutiveErrors, &out.EnforcingConsecutiveErrors
		*out = new(float64)
		**out = **in
	}
	if in.EnforcingConsecutiveGatewayFailure != nil {
		in, out := &in.EnforcingConsecutiveGatewayFailure, &out.EnforcingConsecutiveGatewayFailure
		*out = new(float64)
		**out = **in
	}
	if in.EnforcingSuccessRate != nil {
		in, out := &in.EnforcingSuccessRate, &out.EnforcingSuccessRate
		*out = new(float64)
		**out = **in
	}
	if in.Interval != nil {
		in, out := &in.Interval, &out.Interval
		*out = make([]IntervalParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MaxEjectionPercent != nil {
		in, out := &in.MaxEjectionPercent, &out.MaxEjectionPercent
		*out = new(float64)
		**out = **in
	}
	if in.SuccessRateMinimumHosts != nil {
		in, out := &in.SuccessRateMinimumHosts, &out.SuccessRateMinimumHosts
		*out = new(float64)
		**out = **in
	}
	if in.SuccessRateRequestVolume != nil {
		in, out := &in.SuccessRateRequestVolume, &out.SuccessRateRequestVolume
		*out = new(float64)
		**out = **in
	}
	if in.SuccessRateStdevFactor != nil {
		in, out := &in.SuccessRateStdevFactor, &out.SuccessRateStdevFactor
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OutlierDetectionParameters.
func (in *OutlierDetectionParameters) DeepCopy() *OutlierDetectionParameters {
	if in == nil {
		return nil
	}
	out := new(OutlierDetectionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PacketMirroring) DeepCopyInto(out *PacketMirroring) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PacketMirroring.
func (in *PacketMirroring) DeepCopy() *PacketMirroring {
	if in == nil {
		return nil
	}
	out := new(PacketMirroring)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *PacketMirroring) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PacketMirroringInitParameters) DeepCopyInto(out *PacketMirroringInitParameters) {
	*out = *in
	if in.CollectorIlb != nil {
		in, out := &in.CollectorIlb, &out.CollectorIlb
		*out = make([]CollectorIlbInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Filter != nil {
		in, out := &in.Filter, &out.Filter
		*out = make([]FilterInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MirroredResources != nil {
		in, out := &in.MirroredResources, &out.MirroredResources
		*out = make([]MirroredResourcesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Network != nil {
		in, out := &in.Network, &out.Network
		*out = make([]PacketMirroringNetworkInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Priority != nil {
		in, out := &in.Priority, &out.Priority
		*out = new(float64)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PacketMirroringInitParameters.
func (in *PacketMirroringInitParameters) DeepCopy() *PacketMirroringInitParameters {
	if in == nil {
		return nil
	}
	out := new(PacketMirroringInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PacketMirroringList) DeepCopyInto(out *PacketMirroringList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]PacketMirroring, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PacketMirroringList.
func (in *PacketMirroringList) DeepCopy() *PacketMirroringList {
	if in == nil {
		return nil
	}
	out := new(PacketMirroringList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *PacketMirroringList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PacketMirroringNetworkInitParameters) DeepCopyInto(out *PacketMirroringNetworkInitParameters) {
	*out = *in
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
	if in.URLRef != nil {
		in, out := &in.URLRef, &out.URLRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.URLSelector != nil {
		in, out := &in.URLSelector, &out.URLSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PacketMirroringNetworkInitParameters.
func (in *PacketMirroringNetworkInitParameters) DeepCopy() *PacketMirroringNetworkInitParameters {
	if in == nil {
		return nil
	}
	out := new(PacketMirroringNetworkInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PacketMirroringNetworkObservation) DeepCopyInto(out *PacketMirroringNetworkObservation) {
	*out = *in
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PacketMirroringNetworkObservation.
func (in *PacketMirroringNetworkObservation) DeepCopy() *PacketMirroringNetworkObservation {
	if in == nil {
		return nil
	}
	out := new(PacketMirroringNetworkObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PacketMirroringNetworkParameters) DeepCopyInto(out *PacketMirroringNetworkParameters) {
	*out = *in
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
	if in.URLRef != nil {
		in, out := &in.URLRef, &out.URLRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.URLSelector != nil {
		in, out := &in.URLSelector, &out.URLSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PacketMirroringNetworkParameters.
func (in *PacketMirroringNetworkParameters) DeepCopy() *PacketMirroringNetworkParameters {
	if in == nil {
		return nil
	}
	out := new(PacketMirroringNetworkParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PacketMirroringObservation) DeepCopyInto(out *PacketMirroringObservation) {
	*out = *in
	if in.CollectorIlb != nil {
		in, out := &in.CollectorIlb, &out.CollectorIlb
		*out = make([]CollectorIlbObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Filter != nil {
		in, out := &in.Filter, &out.Filter
		*out = make([]FilterObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.MirroredResources != nil {
		in, out := &in.MirroredResources, &out.MirroredResources
		*out = make([]MirroredResourcesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Network != nil {
		in, out := &in.Network, &out.Network
		*out = make([]PacketMirroringNetworkObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Priority != nil {
		in, out := &in.Priority, &out.Priority
		*out = new(float64)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PacketMirroringObservation.
func (in *PacketMirroringObservation) DeepCopy() *PacketMirroringObservation {
	if in == nil {
		return nil
	}
	out := new(PacketMirroringObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PacketMirroringParameters) DeepCopyInto(out *PacketMirroringParameters) {
	*out = *in
	if in.CollectorIlb != nil {
		in, out := &in.CollectorIlb, &out.CollectorIlb
		*out = make([]CollectorIlbParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Filter != nil {
		in, out := &in.Filter, &out.Filter
		*out = make([]FilterParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MirroredResources != nil {
		in, out := &in.MirroredResources, &out.MirroredResources
		*out = make([]MirroredResourcesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Network != nil {
		in, out := &in.Network, &out.Network
		*out = make([]PacketMirroringNetworkParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Priority != nil {
		in, out := &in.Priority, &out.Priority
		*out = new(float64)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PacketMirroringParameters.
func (in *PacketMirroringParameters) DeepCopy() *PacketMirroringParameters {
	if in == nil {
		return nil
	}
	out := new(PacketMirroringParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PacketMirroringSpec) DeepCopyInto(out *PacketMirroringSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PacketMirroringSpec.
func (in *PacketMirroringSpec) DeepCopy() *PacketMirroringSpec {
	if in == nil {
		return nil
	}
	out := new(PacketMirroringSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PacketMirroringStatus) DeepCopyInto(out *PacketMirroringStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PacketMirroringStatus.
func (in *PacketMirroringStatus) DeepCopy() *PacketMirroringStatus {
	if in == nil {
		return nil
	}
	out := new(PacketMirroringStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ParamsInitParameters) DeepCopyInto(out *ParamsInitParameters) {
	*out = *in
	if in.ResourceManagerTags != nil {
		in, out := &in.ResourceManagerTags, &out.ResourceManagerTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ParamsInitParameters.
func (in *ParamsInitParameters) DeepCopy() *ParamsInitParameters {
	if in == nil {
		return nil
	}
	out := new(ParamsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ParamsObservation) DeepCopyInto(out *ParamsObservation) {
	*out = *in
	if in.ResourceManagerTags != nil {
		in, out := &in.ResourceManagerTags, &out.ResourceManagerTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ParamsObservation.
func (in *ParamsObservation) DeepCopy() *ParamsObservation {
	if in == nil {
		return nil
	}
	out := new(ParamsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ParamsParameters) DeepCopyInto(out *ParamsParameters) {
	*out = *in
	if in.ResourceManagerTags != nil {
		in, out := &in.ResourceManagerTags, &out.ResourceManagerTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ParamsParameters.
func (in *ParamsParameters) DeepCopy() *ParamsParameters {
	if in == nil {
		return nil
	}
	out := new(ParamsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PathMatcherDefaultRouteActionCorsPolicyInitParameters) DeepCopyInto(out *PathMatcherDefaultRouteActionCorsPolicyInitParameters) {
	*out = *in
	if in.AllowCredentials != nil {
		in, out := &in.AllowCredentials, &out.AllowCredentials
		*out = new(bool)
		**out = **in
	}
	if in.AllowHeaders != nil {
		in, out := &in.AllowHeaders, &out.AllowHeaders
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AllowMethods != nil {
		in, out := &in.AllowMethods, &out.AllowMethods
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AllowOriginRegexes != nil {
		in, out := &in.AllowOriginRegexes, &out.AllowOriginRegexes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AllowOrigins != nil {
		in, out := &in.AllowOrigins, &out.AllowOrigins
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Disabled != nil {
		in, out := &in.Disabled, &out.Disabled
		*out = new(bool)
		**out = **in
	}
	if in.ExposeHeaders != nil {
		in, out := &in.ExposeHeaders, &out.ExposeHeaders
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.MaxAge != nil {
		in, out := &in.MaxAge, &out.MaxAge
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PathMatcherDefaultRouteActionCorsPolicyInitParameters.
func (in *PathMatcherDefaultRouteActionCorsPolicyInitParameters) DeepCopy() *PathMatcherDefaultRouteActionCorsPolicyInitParameters {
	if in == nil {
		return nil
	}
	out := new(PathMatcherDefaultRouteActionCorsPolicyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PathMatcherDefaultRouteActionCorsPolicyObservation) DeepCopyInto(out *PathMatcherDefaultRouteActionCorsPolicyObservation) {
	*out = *in
	if in.AllowCredentials != nil {
		in, out := &in.AllowCredentials, &out.AllowCredentials
		*out = new(bool)
		**out = **in
	}
	if in.AllowHeaders != nil {
		in, out := &in.AllowHeaders, &out.AllowHeaders
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AllowMethods != nil {
		in, out := &in.AllowMethods, &out.AllowMethods
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AllowOriginRegexes != nil {
		in, out := &in.AllowOriginRegexes, &out.AllowOriginRegexes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AllowOrigins != nil {
		in, out := &in.AllowOrigins, &out.AllowOrigins
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Disabled != nil {
		in, out := &in.Disabled, &out.Disabled
		*out = new(bool)
		**out = **in
	}
	if in.ExposeHeaders != nil {
		in, out := &in.ExposeHeaders, &out.ExposeHeaders
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.MaxAge != nil {
		in, out := &in.MaxAge, &out.MaxAge
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PathMatcherDefaultRouteActionCorsPolicyObservation.
func (in *PathMatcherDefaultRouteActionCorsPolicyObservation) DeepCopy() *PathMatcherDefaultRouteActionCorsPolicyObservation {
	if in == nil {
		return nil
	}
	out := new(PathMatcherDefaultRouteActionCorsPolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PathMatcherDefaultRouteActionCorsPolicyParameters) DeepCopyInto(out *PathMatcherDefaultRouteActionCorsPolicyParameters) {
	*out = *in
	if in.AllowCredentials != nil {
		in, out := &in.AllowCredentials, &out.AllowCredentials
		*out = new(bool)
		**out = **in
	}
	if in.AllowHeaders != nil {
		in, out := &in.AllowHeaders, &out.AllowHeaders
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AllowMethods != nil {
		in, out := &in.AllowMethods, &out.AllowMethods
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AllowOriginRegexes != nil {
		in, out := &in.AllowOriginRegexes, &out.AllowOriginRegexes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AllowOrigins != nil {
		in, out := &in.AllowOrigins, &out.AllowOrigins
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Disabled != nil {
		in, out := &in.Disabled, &out.Disabled
		*out = new(bool)
		**out = **in
	}
	if in.ExposeHeaders != nil {
		in, out := &in.ExposeHeaders, &out.ExposeHeaders
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.MaxAge != nil {
		in, out := &in.MaxAge, &out.MaxAge
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PathMatcherDefaultRouteActionCorsPolicyParameters.
func (in *PathMatcherDefaultRouteActionCorsPolicyParameters) DeepCopy() *PathMatcherDefaultRouteActionCorsPolicyParameters {
	if in == nil {
		return nil
	}
	out := new(PathMatcherDefaultRouteActionCorsPolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PathMatcherDefaultRouteActionFaultInjectionPolicyAbortInitParameters) DeepCopyInto(out *PathMatcherDefaultRouteActionFaultInjectionPolicyAbortInitParameters) {
	*out = *in
	if in.HTTPStatus != nil {
		in, out := &in.HTTPStatus, &out.HTTPStatus
		*out = new(float64)
		**out = **in
	}
	if in.Percentage != nil {
		in, out := &in.Percentage, &out.Percentage
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PathMatcherDefaultRouteActionFaultInjectionPolicyAbortInitParameters.
func (in *PathMatcherDefaultRouteActionFaultInjectionPolicyAbortInitParameters) DeepCopy() *PathMatcherDefaultRouteActionFaultInjectionPolicyAbortInitParameters {
	if in == nil {
		return nil
	}
	out := new(PathMatcherDefaultRouteActionFaultInjectionPolicyAbortInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PathMatcherDefaultRouteActionFaultInjectionPolicyAbortObservation) DeepCopyInto(out *PathMatcherDefaultRouteActionFaultInjectionPolicyAbortObservation) {
	*out = *in
	if in.HTTPStatus != nil {
		in, out := &in.HTTPStatus, &out.HTTPStatus
		*out = new(float64)
		**out = **in
	}
	if in.Percentage != nil {
		in, out := &in.Percentage, &out.Percentage
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PathMatcherDefaultRouteActionFaultInjectionPolicyAbortObservation.
func (in *PathMatcherDefaultRouteActionFaultInjectionPolicyAbortObservation) DeepCopy() *PathMatcherDefaultRouteActionFaultInjectionPolicyAbortObservation {
	if in == nil {
		return nil
	}
	out := new(PathMatcherDefaultRouteActionFaultInjectionPolicyAbortObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PathMatcherDefaultRouteActionFaultInjectionPolicyAbortParameters) DeepCopyInto(out *PathMatcherDefaultRouteActionFaultInjectionPolicyAbortParameters) {
	*out = *in
	if in.HTTPStatus != nil {
		in, out := &in.HTTPStatus, &out.HTTPStatus
		*out = new(float64)
		**out = **in
	}
	if in.Percentage != nil {
		in, out := &in.Percentage, &out.Percentage
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PathMatcherDefaultRouteActionFaultInjectionPolicyAbortParameters.
func (in *PathMatcherDefaultRouteActionFaultInjectionPolicyAbortParameters) DeepCopy() *PathMatcherDefaultRouteActionFaultInjectionPolicyAbortParameters {
	if in == nil {
		return nil
	}
	out := new(PathMatcherDefaultRouteActionFaultInjectionPolicyAbortParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PathMatcherDefaultRouteActionFaultInjectionPolicyDelayFixedDelayInitParameters) DeepCopyInto(out *PathMatcherDefaultRouteActionFaultInjectionPolicyDelayFixedDelayInitParameters) {
	*out = *in
	if in.Nanos != nil {
		in, out := &in.Nanos, &out.Nanos
		*out = new(float64)
		**out = **in
	}
	if in.Seconds != nil {
		in, out := &in.Seconds, &out.Seconds
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PathMatcherDefaultRouteActionFaultInjectionPolicyDelayFixedDelayInitParameters.
func (in *PathMatcherDefaultRouteActionFaultInjectionPolicyDelayFixedDelayInitParameters) DeepCopy() *PathMatcherDefaultRouteActionFaultInjectionPolicyDelayFixedDelayInitParameters {
	if in == nil {
		return nil
	}
	out := new(PathMatcherDefaultRouteActionFaultInjectionPolicyDelayFixedDelayInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PathMatcherDefaultRouteActionFaultInjectionPolicyDelayFixedDelayObservation) DeepCopyInto(out *PathMatcherDefaultRouteActionFaultInjectionPolicyDelayFixedDelayObservation) {
	*out = *in
	if in.Nanos != nil {
		in, out := &in.Nanos, &out.Nanos
		*out = new(float64)
		**out = **in
	}
	if in.Seconds != nil {
		in, out := &in.Seconds, &out.Seconds
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PathMatcherDefaultRouteActionFaultInjectionPolicyDelayFixedDelayObservation.
func (in *PathMatcherDefaultRouteActionFaultInjectionPolicyDelayFixedDelayObservation) DeepCopy() *PathMatcherDefaultRouteActionFaultInjectionPolicyDelayFixedDelayObservation {
	if in == nil {
		return nil
	}
	out := new(PathMatcherDefaultRouteActionFaultInjectionPolicyDelayFixedDelayObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PathMatcherDefaultRouteActionFaultInjectionPolicyDelayFixedDelayParameters) DeepCopyInto(out *PathMatcherDefaultRouteActionFaultInjectionPolicyDelayFixedDelayParameters) {
	*out = *in
	if in.Nanos != nil {
		in, out := &in.Nanos, &out.Nanos
		*out = new(float64)
		**out = **in
	}
	if in.Seconds != nil {
		in, out := &in.Seconds, &out.Seconds
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PathMatcherDefaultRouteActionFaultInjectionPolicyDelayFixedDelayParameters.
func (in *PathMatcherDefaultRouteActionFaultInjectionPolicyDelayFixedDelayParameters) DeepCopy() *PathMatcherDefaultRouteActionFaultInjectionPolicyDelayFixedDelayParameters {
	if in == nil {
		return nil
	}
	out := new(PathMatcherDefaultRouteActionFaultInjectionPolicyDelayFixedDelayParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PathMatcherDefaultRouteActionFaultInjectionPolicyDelayInitParameters) DeepCopyInto(out *PathMatcherDefaultRouteActionFaultInjectionPolicyDelayInitParameters) {
	*out = *in
	if in.FixedDelay != nil {
		in, out := &in.FixedDelay, &out.FixedDelay
		*out = make([]PathMatcherDefaultRouteActionFaultInjectionPolicyDelayFixedDelayInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Percentage != nil {
		in, out := &in.Percentage, &out.Percentage
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PathMatcherDefaultRouteActionFaultInjectionPolicyDelayInitParameters.
func (in *PathMatcherDefaultRouteActionFaultInjectionPolicyDelayInitParameters) DeepCopy() *PathMatcherDefaultRouteActionFaultInjectionPolicyDelayInitParameters {
	if in == nil {
		return nil
	}
	out := new(PathMatcherDefaultRouteActionFaultInjectionPolicyDelayInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PathMatcherDefaultRouteActionFaultInjectionPolicyDelayObservation) DeepCopyInto(out *PathMatcherDefaultRouteActionFaultInjectionPolicyDelayObservation) {
	*out = *in
	if in.FixedDelay != nil {
		in, out := &in.FixedDelay, &out.FixedDelay
		*out = make([]PathMatcherDefaultRouteActionFaultInjectionPolicyDelayFixedDelayObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Percentage != nil {
		in, out := &in.Percentage, &out.Percentage
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PathMatcherDefaultRouteActionFaultInjectionPolicyDelayObservation.
func (in *PathMatcherDefaultRouteActionFaultInjectionPolicyDelayObservation) DeepCopy() *PathMatcherDefaultRouteActionFaultInjectionPolicyDelayObservation {
	if in == nil {
		return nil
	}
	out := new(PathMatcherDefaultRouteActionFaultInjectionPolicyDelayObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PathMatcherDefaultRouteActionFaultInjectionPolicyDelayParameters) DeepCopyInto(out *PathMatcherDefaultRouteActionFaultInjectionPolicyDelayParameters) {
	*out = *in
	if in.FixedDelay != nil {
		in, out := &in.FixedDelay, &out.FixedDelay
		*out = make([]PathMatcherDefaultRouteActionFaultInjectionPolicyDelayFixedDelayParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Percentage != nil {
		in, out := &in.Percentage, &out.Percentage
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PathMatcherDefaultRouteActionFaultInjectionPolicyDelayParameters.
func (in *PathMatcherDefaultRouteActionFaultInjectionPolicyDelayParameters) DeepCopy() *PathMatcherDefaultRouteActionFaultInjectionPolicyDelayParameters {
	if in == nil {
		return nil
	}
	out := new(PathMatcherDefaultRouteActionFaultInjectionPolicyDelayParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PathMatcherDefaultRouteActionFaultInjectionPolicyInitParameters) DeepCopyInto(out *PathMatcherDefaultRouteActionFaultInjectionPolicyInitParameters) {
	*out = *in
	if in.Abort != nil {
		in, out := &in.Abort, &out.Abort
		*out = make([]PathMatcherDefaultRouteActionFaultInjectionPolicyAbortInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Delay != nil {
		in, out := &in.Delay, &out.Delay
		*out = make([]PathMatcherDefaultRouteActionFaultInjectionPolicyDelayInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PathMatcherDefaultRouteActionFaultInjectionPolicyInitParameters.
func (in *PathMatcherDefaultRouteActionFaultInjectionPolicyInitParameters) DeepCopy() *PathMatcherDefaultRouteActionFaultInjectionPolicyInitParameters {
	if in == nil {
		return nil
	}
	out := new(PathMatcherDefaultRouteActionFaultInjectionPolicyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PathMatcherDefaultRouteActionFaultInjectionPolicyObservation) DeepCopyInto(out *PathMatcherDefaultRouteActionFaultInjectionPolicyObservation) {
	*out = *in
	if in.Abort != nil {
		in, out := &in.Abort, &out.Abort
		*out = make([]PathMatcherDefaultRouteActionFaultInjectionPolicyAbortObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Delay != nil {
		in, out := &in.Delay, &out.Delay
		*out = make([]PathMatcherDefaultRouteActionFaultInjectionPolicyDelayObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PathMatcherDefaultRouteActionFaultInjectionPolicyObservation.
func (in *PathMatcherDefaultRouteActionFaultInjectionPolicyObservation) DeepCopy() *PathMatcherDefaultRouteActionFaultInjectionPolicyObservation {
	if in == nil {
		return nil
	}
	out := new(PathMatcherDefaultRouteActionFaultInjectionPolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PathMatcherDefaultRouteActionFaultInjectionPolicyParameters) DeepCopyInto(out *PathMatcherDefaultRouteActionFaultInjectionPolicyParameters) {
	*out = *in
	if in.Abort != nil {
		in, out := &in.Abort, &out.Abort
		*out = make([]PathMatcherDefaultRouteActionFaultInjectionPolicyAbortParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Delay != nil {
		in, out := &in.Delay, &out.Delay
		*out = make([]PathMatcherDefaultRouteActionFaultInjectionPolicyDelayParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PathMatcherDefaultRouteActionFaultInjectionPolicyParameters.
func (in *PathMatcherDefaultRouteActionFaultInjectionPolicyParameters) DeepCopy() *PathMatcherDefaultRouteActionFaultInjectionPolicyParameters {
	if in == nil {
		return nil
	}
	out := new(PathMatcherDefaultRouteActionFaultInjectionPolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PathMatcherDefaultRouteActionInitParameters) DeepCopyInto(out *PathMatcherDefaultRouteActionInitParameters) {
	*out = *in
	if in.CorsPolicy != nil {
		in, out := &in.CorsPolicy, &out.CorsPolicy
		*out = make([]PathMatcherDefaultRouteActionCorsPolicyInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.FaultInjectionPolicy != nil {
		in, out := &in.FaultInjectionPolicy, &out.FaultInjectionPolicy
		*out = make([]PathMatcherDefaultRouteActionFaultInjectionPolicyInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RequestMirrorPolicy != nil {
		in, out := &in.RequestMirrorPolicy, &out.RequestMirrorPolicy
		*out = make([]PathMatcherDefaultRouteActionRequestMirrorPolicyInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RetryPolicy != nil {
		in, out := &in.RetryPolicy, &out.RetryPolicy
		*out = make([]PathMatcherDefaultRouteActionRetryPolicyInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Timeout != nil {
		in, out := &in.Timeout, &out.Timeout
		*out = make([]PathMatcherDefaultRouteActionTimeoutInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.URLRewrite != nil {
		in, out := &in.URLRewrite, &out.URLRewrite
		*out = make([]PathMatcherDefaultRouteActionURLRewriteInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.WeightedBackendServices != nil {
		in, out := &in.WeightedBackendServices, &out.WeightedBackendServices
		*out = make([]PathMatcherDefaultRouteActionWeightedBackendServicesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PathMatcherDefaultRouteActionInitParameters.
func (in *PathMatcherDefaultRouteActionInitParameters) DeepCopy() *PathMatcherDefaultRouteActionInitParameters {
	if in == nil {
		return nil
	}
	out := new(PathMatcherDefaultRouteActionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PathMatcherDefaultRouteActionObservation) DeepCopyInto(out *PathMatcherDefaultRouteActionObservation) {
	*out = *in
	if in.CorsPolicy != nil {
		in, out := &in.CorsPolicy, &out.CorsPolicy
		*out = make([]PathMatcherDefaultRouteActionCorsPolicyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.FaultInjectionPolicy != nil {
		in, out := &in.FaultInjectionPolicy, &out.FaultInjectionPolicy
		*out = make([]PathMatcherDefaultRouteActionFaultInjectionPolicyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RequestMirrorPolicy != nil {
		in, out := &in.RequestMirrorPolicy, &out.RequestMirrorPolicy
		*out = make([]PathMatcherDefaultRouteActionRequestMirrorPolicyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RetryPolicy != nil {
		in, out := &in.RetryPolicy, &out.RetryPolicy
		*out = make([]PathMatcherDefaultRouteActionRetryPolicyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Timeout != nil {
		in, out := &in.Timeout, &out.Timeout
		*out = make([]PathMatcherDefaultRouteActionTimeoutObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.URLRewrite != nil {
		in, out := &in.URLRewrite, &out.URLRewrite
		*out = make([]PathMatcherDefaultRouteActionURLRewriteObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.WeightedBackendServices != nil {
		in, out := &in.WeightedBackendServices, &out.WeightedBackendServices
		*out = make([]PathMatcherDefaultRouteActionWeightedBackendServicesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PathMatcherDefaultRouteActionObservation.
func (in *PathMatcherDefaultRouteActionObservation) DeepCopy() *PathMatcherDefaultRouteActionObservation {
	if in == nil {
		return nil
	}
	out := new(PathMatcherDefaultRouteActionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PathMatcherDefaultRouteActionParameters) DeepCopyInto(out *PathMatcherDefaultRouteActionParameters) {
	*out = *in
	if in.CorsPolicy != nil {
		in, out := &in.CorsPolicy, &out.CorsPolicy
		*out = make([]PathMatcherDefaultRouteActionCorsPolicyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.FaultInjectionPolicy != nil {
		in, out := &in.FaultInjectionPolicy, &out.FaultInjectionPolicy
		*out = make([]PathMatcherDefaultRouteActionFaultInjectionPolicyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RequestMirrorPolicy != nil {
		in, out := &in.RequestMirrorPolicy, &out.RequestMirrorPolicy
		*out = make([]PathMatcherDefaultRouteActionRequestMirrorPolicyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RetryPolicy != nil {
		in, out := &in.RetryPolicy, &out.RetryPolicy
		*out = make([]PathMatcherDefaultRouteActionRetryPolicyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Timeout != nil {
		in, out := &in.Timeout, &out.Timeout
		*out = make([]PathMatcherDefaultRouteActionTimeoutParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.URLRewrite != nil {
		in, out := &in.URLRewrite, &out.URLRewrite
		*out = make([]PathMatcherDefaultRouteActionURLRewriteParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.WeightedBackendServices != nil {
		in, out := &in.WeightedBackendServices, &out.WeightedBackendServices
		*out = make([]PathMatcherDefaultRouteActionWeightedBackendServicesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PathMatcherDefaultRouteActionParameters.
func (in *PathMatcherDefaultRouteActionParameters) DeepCopy() *PathMatcherDefaultRouteActionParameters {
	if in == nil {
		return nil
	}
	out := new(PathMatcherDefaultRouteActionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PathMatcherDefaultRouteActionRequestMirrorPolicyInitParameters) DeepCopyInto(out *PathMatcherDefaultRouteActionRequestMirrorPolicyInitParameters) {
	*out = *in
	if in.BackendService != nil {
		in, out := &in.BackendService, &out.BackendService
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PathMatcherDefaultRouteActionRequestMirrorPolicyInitParameters.
func (in *PathMatcherDefaultRouteActionRequestMirrorPolicyInitParameters) DeepCopy() *PathMatcherDefaultRouteActionRequestMirrorPolicyInitParameters {
	if in == nil {
		return nil
	}
	out := new(PathMatcherDefaultRouteActionRequestMirrorPolicyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PathMatcherDefaultRouteActionRequestMirrorPolicyObservation) DeepCopyInto(out *PathMatcherDefaultRouteActionRequestMirrorPolicyObservation) {
	*out = *in
	if in.BackendService != nil {
		in, out := &in.BackendService, &out.BackendService
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PathMatcherDefaultRouteActionRequestMirrorPolicyObservation.
func (in *PathMatcherDefaultRouteActionRequestMirrorPolicyObservation) DeepCopy() *PathMatcherDefaultRouteActionRequestMirrorPolicyObservation {
	if in == nil {
		return nil
	}
	out := new(PathMatcherDefaultRouteActionRequestMirrorPolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PathMatcherDefaultRouteActionRequestMirrorPolicyParameters) DeepCopyInto(out *PathMatcherDefaultRouteActionRequestMirrorPolicyParameters) {
	*out = *in
	if in.BackendService != nil {
		in, out := &in.BackendService, &out.BackendService
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PathMatcherDefaultRouteActionRequestMirrorPolicyParameters.
func (in *PathMatcherDefaultRouteActionRequestMirrorPolicyParameters) DeepCopy() *PathMatcherDefaultRouteActionRequestMirrorPolicyParameters {
	if in == nil {
		return nil
	}
	out := new(PathMatcherDefaultRouteActionRequestMirrorPolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PathMatcherDefaultRouteActionRetryPolicyInitParameters) DeepCopyInto(out *PathMatcherDefaultRouteActionRetryPolicyInitParameters) {
	*out = *in
	if in.NumRetries != nil {
		in, out := &in.NumRetries, &out.NumRetries
		*out = new(float64)
		**out = **in
	}
	if in.PerTryTimeout != nil {
		in, out := &in.PerTryTimeout, &out.PerTryTimeout
		*out = make([]PathMatcherDefaultRouteActionRetryPolicyPerTryTimeoutInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RetryConditions != nil {
		in, out := &in.RetryConditions, &out.RetryConditions
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PathMatcherDefaultRouteActionRetryPolicyInitParameters.
func (in *PathMatcherDefaultRouteActionRetryPolicyInitParameters) DeepCopy() *PathMatcherDefaultRouteActionRetryPolicyInitParameters {
	if in == nil {
		return nil
	}
	out := new(PathMatcherDefaultRouteActionRetryPolicyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PathMatcherDefaultRouteActionRetryPolicyObservation) DeepCopyInto(out *PathMatcherDefaultRouteActionRetryPolicyObservation) {
	*out = *in
	if in.NumRetries != nil {
		in, out := &in.NumRetries, &out.NumRetries
		*out = new(float64)
		**out = **in
	}
	if in.PerTryTimeout != nil {
		in, out := &in.PerTryTimeout, &out.PerTryTimeout
		*out = make([]PathMatcherDefaultRouteActionRetryPolicyPerTryTimeoutObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RetryConditions != nil {
		in, out := &in.RetryConditions, &out.RetryConditions
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PathMatcherDefaultRouteActionRetryPolicyObservation.
func (in *PathMatcherDefaultRouteActionRetryPolicyObservation) DeepCopy() *PathMatcherDefaultRouteActionRetryPolicyObservation {
	if in == nil {
		return nil
	}
	out := new(PathMatcherDefaultRouteActionRetryPolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PathMatcherDefaultRouteActionRetryPolicyParameters) DeepCopyInto(out *PathMatcherDefaultRouteActionRetryPolicyParameters) {
	*out = *in
	if in.NumRetries != nil {
		in, out := &in.NumRetries, &out.NumRetries
		*out = new(float64)
		**out = **in
	}
	if in.PerTryTimeout != nil {
		in, out := &in.PerTryTimeout, &out.PerTryTimeout
		*out = make([]PathMatcherDefaultRouteActionRetryPolicyPerTryTimeoutParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RetryConditions != nil {
		in, out := &in.RetryConditions, &out.RetryConditions
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PathMatcherDefaultRouteActionRetryPolicyParameters.
func (in *PathMatcherDefaultRouteActionRetryPolicyParameters) DeepCopy() *PathMatcherDefaultRouteActionRetryPolicyParameters {
	if in == nil {
		return nil
	}
	out := new(PathMatcherDefaultRouteActionRetryPolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PathMatcherDefaultRouteActionRetryPolicyPerTryTimeoutInitParameters) DeepCopyInto(out *PathMatcherDefaultRouteActionRetryPolicyPerTryTimeoutInitParameters) {
	*out = *in
	if in.Nanos != nil {
		in, out := &in.Nanos, &out.Nanos
		*out = new(float64)
		**out = **in
	}
	if in.Seconds != nil {
		in, out := &in.Seconds, &out.Seconds
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PathMatcherDefaultRouteActionRetryPolicyPerTryTimeoutInitParameters.
func (in *PathMatcherDefaultRouteActionRetryPolicyPerTryTimeoutInitParameters) DeepCopy() *PathMatcherDefaultRouteActionRetryPolicyPerTryTimeoutInitParameters {
	if in == nil {
		return nil
	}
	out := new(PathMatcherDefaultRouteActionRetryPolicyPerTryTimeoutInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PathMatcherDefaultRouteActionRetryPolicyPerTryTimeoutObservation) DeepCopyInto(out *PathMatcherDefaultRouteActionRetryPolicyPerTryTimeoutObservation) {
	*out = *in
	if in.Nanos != nil {
		in, out := &in.Nanos, &out.Nanos
		*out = new(float64)
		**out = **in
	}
	if in.Seconds != nil {
		in, out := &in.Seconds, &out.Seconds
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PathMatcherDefaultRouteActionRetryPolicyPerTryTimeoutObservation.
func (in *PathMatcherDefaultRouteActionRetryPolicyPerTryTimeoutObservation) DeepCopy() *PathMatcherDefaultRouteActionRetryPolicyPerTryTimeoutObservation {
	if in == nil {
		return nil
	}
	out := new(PathMatcherDefaultRouteActionRetryPolicyPerTryTimeoutObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PathMatcherDefaultRouteActionRetryPolicyPerTryTimeoutParameters) DeepCopyInto(out *PathMatcherDefaultRouteActionRetryPolicyPerTryTimeoutParameters) {
	*out = *in
	if in.Nanos != nil {
		in, out := &in.Nanos, &out.Nanos
		*out = new(float64)
		**out = **in
	}
	if in.Seconds != nil {
		in, out := &in.Seconds, &out.Seconds
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PathMatcherDefaultRouteActionRetryPolicyPerTryTimeoutParameters.
func (in *PathMatcherDefaultRouteActionRetryPolicyPerTryTimeoutParameters) DeepCopy() *PathMatcherDefaultRouteActionRetryPolicyPerTryTimeoutParameters {
	if in == nil {
		return nil
	}
	out := new(PathMatcherDefaultRouteActionRetryPolicyPerTryTimeoutParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PathMatcherDefaultRouteActionTimeoutInitParameters) DeepCopyInto(out *PathMatcherDefaultRouteActionTimeoutInitParameters) {
	*out = *in
	if in.Nanos != nil {
		in, out := &in.Nanos, &out.Nanos
		*out = new(float64)
		**out = **in
	}
	if in.Seconds != nil {
		in, out := &in.Seconds, &out.Seconds
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PathMatcherDefaultRouteActionTimeoutInitParameters.
func (in *PathMatcherDefaultRouteActionTimeoutInitParameters) DeepCopy() *PathMatcherDefaultRouteActionTimeoutInitParameters {
	if in == nil {
		return nil
	}
	out := new(PathMatcherDefaultRouteActionTimeoutInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PathMatcherDefaultRouteActionTimeoutObservation) DeepCopyInto(out *PathMatcherDefaultRouteActionTimeoutObservation) {
	*out = *in
	if in.Nanos != nil {
		in, out := &in.Nanos, &out.Nanos
		*out = new(float64)
		**out = **in
	}
	if in.Seconds != nil {
		in, out := &in.Seconds, &out.Seconds
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PathMatcherDefaultRouteActionTimeoutObservation.
func (in *PathMatcherDefaultRouteActionTimeoutObservation) DeepCopy() *PathMatcherDefaultRouteActionTimeoutObservation {
	if in == nil {
		return nil
	}
	out := new(PathMatcherDefaultRouteActionTimeoutObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PathMatcherDefaultRouteActionTimeoutParameters) DeepCopyInto(out *PathMatcherDefaultRouteActionTimeoutParameters) {
	*out = *in
	if in.Nanos != nil {
		in, out := &in.Nanos, &out.Nanos
		*out = new(float64)
		**out = **in
	}
	if in.Seconds != nil {
		in, out := &in.Seconds, &out.Seconds
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PathMatcherDefaultRouteActionTimeoutParameters.
func (in *PathMatcherDefaultRouteActionTimeoutParameters) DeepCopy() *PathMatcherDefaultRouteActionTimeoutParameters {
	if in == nil {
		return nil
	}
	out := new(PathMatcherDefaultRouteActionTimeoutParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PathMatcherDefaultRouteActionURLRewriteInitParameters) DeepCopyInto(out *PathMatcherDefaultRouteActionURLRewriteInitParameters) {
	*out = *in
	if in.HostRewrite != nil {
		in, out := &in.HostRewrite, &out.HostRewrite
		*out = new(string)
		**out = **in
	}
	if in.PathPrefixRewrite != nil {
		in, out := &in.PathPrefixRewrite, &out.PathPrefixRewrite
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PathMatcherDefaultRouteActionURLRewriteInitParameters.
func (in *PathMatcherDefaultRouteActionURLRewriteInitParameters) DeepCopy() *PathMatcherDefaultRouteActionURLRewriteInitParameters {
	if in == nil {
		return nil
	}
	out := new(PathMatcherDefaultRouteActionURLRewriteInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PathMatcherDefaultRouteActionURLRewriteObservation) DeepCopyInto(out *PathMatcherDefaultRouteActionURLRewriteObservation) {
	*out = *in
	if in.HostRewrite != nil {
		in, out := &in.HostRewrite, &out.HostRewrite
		*out = new(string)
		**out = **in
	}
	if in.PathPrefixRewrite != nil {
		in, out := &in.PathPrefixRewrite, &out.PathPrefixRewrite
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PathMatcherDefaultRouteActionURLRewriteObservation.
func (in *PathMatcherDefaultRouteActionURLRewriteObservation) DeepCopy() *PathMatcherDefaultRouteActionURLRewriteObservation {
	if in == nil {
		return nil
	}
	out := new(PathMatcherDefaultRouteActionURLRewriteObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PathMatcherDefaultRouteActionURLRewriteParameters) DeepCopyInto(out *PathMatcherDefaultRouteActionURLRewriteParameters) {
	*out = *in
	if in.HostRewrite != nil {
		in, out := &in.HostRewrite, &out.HostRewrite
		*out = new(string)
		**out = **in
	}
	if in.PathPrefixRewrite != nil {
		in, out := &in.PathPrefixRewrite, &out.PathPrefixRewrite
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PathMatcherDefaultRouteActionURLRewriteParameters.
func (in *PathMatcherDefaultRouteActionURLRewriteParameters) DeepCopy() *PathMatcherDefaultRouteActionURLRewriteParameters {
	if in == nil {
		return nil
	}
	out := new(PathMatcherDefaultRouteActionURLRewriteParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PathMatcherDefaultRouteActionWeightedBackendServicesHeaderActionInitParameters) DeepCopyInto(out *PathMatcherDefaultRouteActionWeightedBackendServicesHeaderActionInitParameters) {
	*out = *in
	if in.RequestHeadersToAdd != nil {
		in, out := &in.RequestHeadersToAdd, &out.RequestHeadersToAdd
		*out = make([]PathMatcherDefaultRouteActionWeightedBackendServicesHeaderActionRequestHeadersToAddInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RequestHeadersToRemove != nil {
		in, out := &in.RequestHeadersToRemove, &out.RequestHeadersToRemove
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ResponseHeadersToAdd != nil {
		in, out := &in.ResponseHeadersToAdd, &out.ResponseHeadersToAdd
		*out = make([]PathMatcherDefaultRouteActionWeightedBackendServicesHeaderActionResponseHeadersToAddInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ResponseHeadersToRemove != nil {
		in, out := &in.ResponseHeadersToRemove, &out.ResponseHeadersToRemove
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PathMatcherDefaultRouteActionWeightedBackendServicesHeaderActionInitParameters.
func (in *PathMatcherDefaultRouteActionWeightedBackendServicesHeaderActionInitParameters) DeepCopy() *PathMatcherDefaultRouteActionWeightedBackendServicesHeaderActionInitParameters {
	if in == nil {
		return nil
	}
	out := new(PathMatcherDefaultRouteActionWeightedBackendServicesHeaderActionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PathMatcherDefaultRouteActionWeightedBackendServicesHeaderActionObservation) DeepCopyInto(out *PathMatcherDefaultRouteActionWeightedBackendServicesHeaderActionObservation) {
	*out = *in
	if in.RequestHeadersToAdd != nil {
		in, out := &in.RequestHeadersToAdd, &out.RequestHeadersToAdd
		*out = make([]PathMatcherDefaultRouteActionWeightedBackendServicesHeaderActionRequestHeadersToAddObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RequestHeadersToRemove != nil {
		in, out := &in.RequestHeadersToRemove, &out.RequestHeadersToRemove
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ResponseHeadersToAdd != nil {
		in, out := &in.ResponseHeadersToAdd, &out.ResponseHeadersToAdd
		*out = make([]PathMatcherDefaultRouteActionWeightedBackendServicesHeaderActionResponseHeadersToAddObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ResponseHeadersToRemove != nil {
		in, out := &in.ResponseHeadersToRemove, &out.ResponseHeadersToRemove
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PathMatcherDefaultRouteActionWeightedBackendServicesHeaderActionObservation.
func (in *PathMatcherDefaultRouteActionWeightedBackendServicesHeaderActionObservation) DeepCopy() *PathMatcherDefaultRouteActionWeightedBackendServicesHeaderActionObservation {
	if in == nil {
		return nil
	}
	out := new(PathMatcherDefaultRouteActionWeightedBackendServicesHeaderActionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PathMatcherDefaultRouteActionWeightedBackendServicesHeaderActionParameters) DeepCopyInto(out *PathMatcherDefaultRouteActionWeightedBackendServicesHeaderActionParameters) {
	*out = *in
	if in.RequestHeadersToAdd != nil {
		in, out := &in.RequestHeadersToAdd, &out.RequestHeadersToAdd
		*out = make([]PathMatcherDefaultRouteActionWeightedBackendServicesHeaderActionRequestHeadersToAddParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RequestHeadersToRemove != nil {
		in, out := &in.RequestHeadersToRemove, &out.RequestHeadersToRemove
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ResponseHeadersToAdd != nil {
		in, out := &in.ResponseHeadersToAdd, &out.ResponseHeadersToAdd
		*out = make([]PathMatcherDefaultRouteActionWeightedBackendServicesHeaderActionResponseHeadersToAddParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ResponseHeadersToRemove != nil {
		in, out := &in.ResponseHeadersToRemove, &out.ResponseHeadersToRemove
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PathMatcherDefaultRouteActionWeightedBackendServicesHeaderActionParameters.
func (in *PathMatcherDefaultRouteActionWeightedBackendServicesHeaderActionParameters) DeepCopy() *PathMatcherDefaultRouteActionWeightedBackendServicesHeaderActionParameters {
	if in == nil {
		return nil
	}
	out := new(PathMatcherDefaultRouteActionWeightedBackendServicesHeaderActionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PathMatcherDefaultRouteActionWeightedBackendServicesHeaderActionRequestHeadersToAddInitParameters) DeepCopyInto(out *PathMatcherDefaultRouteActionWeightedBackendServicesHeaderActionRequestHeadersToAddInitParameters) {
	*out = *in
	if in.HeaderName != nil {
		in, out := &in.HeaderName, &out.HeaderName
		*out = new(string)
		**out = **in
	}
	if in.HeaderValue != nil {
		in, out := &in.HeaderValue, &out.HeaderValue
		*out = new(string)
		**out = **in
	}
	if in.Replace != nil {
		in, out := &in.Replace, &out.Replace
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PathMatcherDefaultRouteActionWeightedBackendServicesHeaderActionRequestHeadersToAddInitParameters.
func (in *PathMatcherDefaultRouteActionWeightedBackendServicesHeaderActionRequestHeadersToAddInitParameters) DeepCopy() *PathMatcherDefaultRouteActionWeightedBackendServicesHeaderActionRequestHeadersToAddInitParameters {
	if in == nil {
		return nil
	}
	out := new(PathMatcherDefaultRouteActionWeightedBackendServicesHeaderActionRequestHeadersToAddInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PathMatcherDefaultRouteActionWeightedBackendServicesHeaderActionRequestHeadersToAddObservation) DeepCopyInto(out *PathMatcherDefaultRouteActionWeightedBackendServicesHeaderActionRequestHeadersToAddObservation) {
	*out = *in
	if in.HeaderName != nil {
		in, out := &in.HeaderName, &out.HeaderName
		*out = new(string)
		**out = **in
	}
	if in.HeaderValue != nil {
		in, out := &in.HeaderValue, &out.HeaderValue
		*out = new(string)
		**out = **in
	}
	if in.Replace != nil {
		in, out := &in.Replace, &out.Replace
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PathMatcherDefaultRouteActionWeightedBackendServicesHeaderActionRequestHeadersToAddObservation.
func (in *PathMatcherDefaultRouteActionWeightedBackendServicesHeaderActionRequestHeadersToAddObservation) DeepCopy() *PathMatcherDefaultRouteActionWeightedBackendServicesHeaderActionRequestHeadersToAddObservation {
	if in == nil {
		return nil
	}
	out := new(PathMatcherDefaultRouteActionWeightedBackendServicesHeaderActionRequestHeadersToAddObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PathMatcherDefaultRouteActionWeightedBackendServicesHeaderActionRequestHeadersToAddParameters) DeepCopyInto(out *PathMatcherDefaultRouteActionWeightedBackendServicesHeaderActionRequestHeadersToAddParameters) {
	*out = *in
	if in.HeaderName != nil {
		in, out := &in.HeaderName, &out.HeaderName
		*out = new(string)
		**out = **in
	}
	if in.HeaderValue != nil {
		in, out := &in.HeaderValue, &out.HeaderValue
		*out = new(string)
		**out = **in
	}
	if in.Replace != nil {
		in, out := &in.Replace, &out.Replace
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PathMatcherDefaultRouteActionWeightedBackendServicesHeaderActionRequestHeadersToAddParameters.
func (in *PathMatcherDefaultRouteActionWeightedBackendServicesHeaderActionRequestHeadersToAddParameters) DeepCopy() *PathMatcherDefaultRouteActionWeightedBackendServicesHeaderActionRequestHeadersToAddParameters {
	if in == nil {
		return nil
	}
	out := new(PathMatcherDefaultRouteActionWeightedBackendServicesHeaderActionRequestHeadersToAddParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PathMatcherDefaultRouteActionWeightedBackendServicesHeaderActionResponseHeadersToAddInitParameters) DeepCopyInto(out *PathMatcherDefaultRouteActionWeightedBackendServicesHeaderActionResponseHeadersToAddInitParameters) {
	*out = *in
	if in.HeaderName != nil {
		in, out := &in.HeaderName, &out.HeaderName
		*out = new(string)
		**out = **in
	}
	if in.HeaderValue != nil {
		in, out := &in.HeaderValue, &out.HeaderValue
		*out = new(string)
		**out = **in
	}
	if in.Replace != nil {
		in, out := &in.Replace, &out.Replace
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PathMatcherDefaultRouteActionWeightedBackendServicesHeaderActionResponseHeadersToAddInitParameters.
func (in *PathMatcherDefaultRouteActionWeightedBackendServicesHeaderActionResponseHeadersToAddInitParameters) DeepCopy() *PathMatcherDefaultRouteActionWeightedBackendServicesHeaderActionResponseHeadersToAddInitParameters {
	if in == nil {
		return nil
	}
	out := new(PathMatcherDefaultRouteActionWeightedBackendServicesHeaderActionResponseHeadersToAddInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PathMatcherDefaultRouteActionWeightedBackendServicesHeaderActionResponseHeadersToAddObservation) DeepCopyInto(out *PathMatcherDefaultRouteActionWeightedBackendServicesHeaderActionResponseHeadersToAddObservation) {
	*out = *in
	if in.HeaderName != nil {
		in, out := &in.HeaderName, &out.HeaderName
		*out = new(string)
		**out = **in
	}
	if in.HeaderValue != nil {
		in, out := &in.HeaderValue, &out.HeaderValue
		*out = new(string)
		**out = **in
	}
	if in.Replace != nil {
		in, out := &in.Replace, &out.Replace
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PathMatcherDefaultRouteActionWeightedBackendServicesHeaderActionResponseHeadersToAddObservation.
func (in *PathMatcherDefaultRouteActionWeightedBackendServicesHeaderActionResponseHeadersToAddObservation) DeepCopy() *PathMatcherDefaultRouteActionWeightedBackendServicesHeaderActionResponseHeadersToAddObservation {
	if in == nil {
		return nil
	}
	out := new(PathMatcherDefaultRouteActionWeightedBackendServicesHeaderActionResponseHeadersToAddObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PathMatcherDefaultRouteActionWeightedBackendServicesHeaderActionResponseHeadersToAddParameters) DeepCopyInto(out *PathMatcherDefaultRouteActionWeightedBackendServicesHeaderActionResponseHeadersToAddParameters) {
	*out = *in
	if in.HeaderName != nil {
		in, out := &in.HeaderName, &out.HeaderName
		*out = new(string)
		**out = **in
	}
	if in.HeaderValue != nil {
		in, out := &in.HeaderValue, &out.HeaderValue
		*out = new(string)
		**out = **in
	}
	if in.Replace != nil {
		in, out := &in.Replace, &out.Replace
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PathMatcherDefaultRouteActionWeightedBackendServicesHeaderActionResponseHeadersToAddParameters.
func (in *PathMatcherDefaultRouteActionWeightedBackendServicesHeaderActionResponseHeadersToAddParameters) DeepCopy() *PathMatcherDefaultRouteActionWeightedBackendServicesHeaderActionResponseHeadersToAddParameters {
	if in == nil {
		return nil
	}
	out := new(PathMatcherDefaultRouteActionWeightedBackendServicesHeaderActionResponseHeadersToAddParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PathMatcherDefaultRouteActionWeightedBackendServicesInitParameters) DeepCopyInto(out *PathMatcherDefaultRouteActionWeightedBackendServicesInitParameters) {
	*out = *in
	if in.BackendService != nil {
		in, out := &in.BackendService, &out.BackendService
		*out = new(string)
		**out = **in
	}
	if in.HeaderAction != nil {
		in, out := &in.HeaderAction, &out.HeaderAction
		*out = make([]PathMatcherDefaultRouteActionWeightedBackendServicesHeaderActionInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Weight != nil {
		in, out := &in.Weight, &out.Weight
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PathMatcherDefaultRouteActionWeightedBackendServicesInitParameters.
func (in *PathMatcherDefaultRouteActionWeightedBackendServicesInitParameters) DeepCopy() *PathMatcherDefaultRouteActionWeightedBackendServicesInitParameters {
	if in == nil {
		return nil
	}
	out := new(PathMatcherDefaultRouteActionWeightedBackendServicesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PathMatcherDefaultRouteActionWeightedBackendServicesObservation) DeepCopyInto(out *PathMatcherDefaultRouteActionWeightedBackendServicesObservation) {
	*out = *in
	if in.BackendService != nil {
		in, out := &in.BackendService, &out.BackendService
		*out = new(string)
		**out = **in
	}
	if in.HeaderAction != nil {
		in, out := &in.HeaderAction, &out.HeaderAction
		*out = make([]PathMatcherDefaultRouteActionWeightedBackendServicesHeaderActionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Weight != nil {
		in, out := &in.Weight, &out.Weight
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PathMatcherDefaultRouteActionWeightedBackendServicesObservation.
func (in *PathMatcherDefaultRouteActionWeightedBackendServicesObservation) DeepCopy() *PathMatcherDefaultRouteActionWeightedBackendServicesObservation {
	if in == nil {
		return nil
	}
	out := new(PathMatcherDefaultRouteActionWeightedBackendServicesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PathMatcherDefaultRouteActionWeightedBackendServicesParameters) DeepCopyInto(out *PathMatcherDefaultRouteActionWeightedBackendServicesParameters) {
	*out = *in
	if in.BackendService != nil {
		in, out := &in.BackendService, &out.BackendService
		*out = new(string)
		**out = **in
	}
	if in.HeaderAction != nil {
		in, out := &in.HeaderAction, &out.HeaderAction
		*out = make([]PathMatcherDefaultRouteActionWeightedBackendServicesHeaderActionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Weight != nil {
		in, out := &in.Weight, &out.Weight
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PathMatcherDefaultRouteActionWeightedBackendServicesParameters.
func (in *PathMatcherDefaultRouteActionWeightedBackendServicesParameters) DeepCopy() *PathMatcherDefaultRouteActionWeightedBackendServicesParameters {
	if in == nil {
		return nil
	}
	out := new(PathMatcherDefaultRouteActionWeightedBackendServicesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PathMatcherDefaultURLRedirectInitParameters) DeepCopyInto(out *PathMatcherDefaultURLRedirectInitParameters) {
	*out = *in
	if in.HTTPSRedirect != nil {
		in, out := &in.HTTPSRedirect, &out.HTTPSRedirect
		*out = new(bool)
		**out = **in
	}
	if in.HostRedirect != nil {
		in, out := &in.HostRedirect, &out.HostRedirect
		*out = new(string)
		**out = **in
	}
	if in.PathRedirect != nil {
		in, out := &in.PathRedirect, &out.PathRedirect
		*out = new(string)
		**out = **in
	}
	if in.PrefixRedirect != nil {
		in, out := &in.PrefixRedirect, &out.PrefixRedirect
		*out = new(string)
		**out = **in
	}
	if in.RedirectResponseCode != nil {
		in, out := &in.RedirectResponseCode, &out.RedirectResponseCode
		*out = new(string)
		**out = **in
	}
	if in.StripQuery != nil {
		in, out := &in.StripQuery, &out.StripQuery
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PathMatcherDefaultURLRedirectInitParameters.
func (in *PathMatcherDefaultURLRedirectInitParameters) DeepCopy() *PathMatcherDefaultURLRedirectInitParameters {
	if in == nil {
		return nil
	}
	out := new(PathMatcherDefaultURLRedirectInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PathMatcherDefaultURLRedirectObservation) DeepCopyInto(out *PathMatcherDefaultURLRedirectObservation) {
	*out = *in
	if in.HTTPSRedirect != nil {
		in, out := &in.HTTPSRedirect, &out.HTTPSRedirect
		*out = new(bool)
		**out = **in
	}
	if in.HostRedirect != nil {
		in, out := &in.HostRedirect, &out.HostRedirect
		*out = new(string)
		**out = **in
	}
	if in.PathRedirect != nil {
		in, out := &in.PathRedirect, &out.PathRedirect
		*out = new(string)
		**out = **in
	}
	if in.PrefixRedirect != nil {
		in, out := &in.PrefixRedirect, &out.PrefixRedirect
		*out = new(string)
		**out = **in
	}
	if in.RedirectResponseCode != nil {
		in, out := &in.RedirectResponseCode, &out.RedirectResponseCode
		*out = new(string)
		**out = **in
	}
	if in.StripQuery != nil {
		in, out := &in.StripQuery, &out.StripQuery
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PathMatcherDefaultURLRedirectObservation.
func (in *PathMatcherDefaultURLRedirectObservation) DeepCopy() *PathMatcherDefaultURLRedirectObservation {
	if in == nil {
		return nil
	}
	out := new(PathMatcherDefaultURLRedirectObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PathMatcherDefaultURLRedirectParameters) DeepCopyInto(out *PathMatcherDefaultURLRedirectParameters) {
	*out = *in
	if in.HTTPSRedirect != nil {
		in, out := &in.HTTPSRedirect, &out.HTTPSRedirect
		*out = new(bool)
		**out = **in
	}
	if in.HostRedirect != nil {
		in, out := &in.HostRedirect, &out.HostRedirect
		*out = new(string)
		**out = **in
	}
	if in.PathRedirect != nil {
		in, out := &in.PathRedirect, &out.PathRedirect
		*out = new(string)
		**out = **in
	}
	if in.PrefixRedirect != nil {
		in, out := &in.PrefixRedirect, &out.PrefixRedirect
		*out = new(string)
		**out = **in
	}
	if in.RedirectResponseCode != nil {
		in, out := &in.RedirectResponseCode, &out.RedirectResponseCode
		*out = new(string)
		**out = **in
	}
	if in.StripQuery != nil {
		in, out := &in.StripQuery, &out.StripQuery
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PathMatcherDefaultURLRedirectParameters.
func (in *PathMatcherDefaultURLRedirectParameters) DeepCopy() *PathMatcherDefaultURLRedirectParameters {
	if in == nil {
		return nil
	}
	out := new(PathMatcherDefaultURLRedirectParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PathMatcherHeaderActionInitParameters) DeepCopyInto(out *PathMatcherHeaderActionInitParameters) {
	*out = *in
	if in.RequestHeadersToAdd != nil {
		in, out := &in.RequestHeadersToAdd, &out.RequestHeadersToAdd
		*out = make([]PathMatcherHeaderActionRequestHeadersToAddInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RequestHeadersToRemove != nil {
		in, out := &in.RequestHeadersToRemove, &out.RequestHeadersToRemove
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ResponseHeadersToAdd != nil {
		in, out := &in.ResponseHeadersToAdd, &out.ResponseHeadersToAdd
		*out = make([]PathMatcherHeaderActionResponseHeadersToAddInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ResponseHeadersToRemove != nil {
		in, out := &in.ResponseHeadersToRemove, &out.ResponseHeadersToRemove
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PathMatcherHeaderActionInitParameters.
func (in *PathMatcherHeaderActionInitParameters) DeepCopy() *PathMatcherHeaderActionInitParameters {
	if in == nil {
		return nil
	}
	out := new(PathMatcherHeaderActionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PathMatcherHeaderActionObservation) DeepCopyInto(out *PathMatcherHeaderActionObservation) {
	*out = *in
	if in.RequestHeadersToAdd != nil {
		in, out := &in.RequestHeadersToAdd, &out.RequestHeadersToAdd
		*out = make([]PathMatcherHeaderActionRequestHeadersToAddObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RequestHeadersToRemove != nil {
		in, out := &in.RequestHeadersToRemove, &out.RequestHeadersToRemove
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ResponseHeadersToAdd != nil {
		in, out := &in.ResponseHeadersToAdd, &out.ResponseHeadersToAdd
		*out = make([]PathMatcherHeaderActionResponseHeadersToAddObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ResponseHeadersToRemove != nil {
		in, out := &in.ResponseHeadersToRemove, &out.ResponseHeadersToRemove
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PathMatcherHeaderActionObservation.
func (in *PathMatcherHeaderActionObservation) DeepCopy() *PathMatcherHeaderActionObservation {
	if in == nil {
		return nil
	}
	out := new(PathMatcherHeaderActionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PathMatcherHeaderActionParameters) DeepCopyInto(out *PathMatcherHeaderActionParameters) {
	*out = *in
	if in.RequestHeadersToAdd != nil {
		in, out := &in.RequestHeadersToAdd, &out.RequestHeadersToAdd
		*out = make([]PathMatcherHeaderActionRequestHeadersToAddParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RequestHeadersToRemove != nil {
		in, out := &in.RequestHeadersToRemove, &out.RequestHeadersToRemove
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ResponseHeadersToAdd != nil {
		in, out := &in.ResponseHeadersToAdd, &out.ResponseHeadersToAdd
		*out = make([]PathMatcherHeaderActionResponseHeadersToAddParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ResponseHeadersToRemove != nil {
		in, out := &in.ResponseHeadersToRemove, &out.ResponseHeadersToRemove
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PathMatcherHeaderActionParameters.
func (in *PathMatcherHeaderActionParameters) DeepCopy() *PathMatcherHeaderActionParameters {
	if in == nil {
		return nil
	}
	out := new(PathMatcherHeaderActionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PathMatcherHeaderActionRequestHeadersToAddInitParameters) DeepCopyInto(out *PathMatcherHeaderActionRequestHeadersToAddInitParameters) {
	*out = *in
	if in.HeaderName != nil {
		in, out := &in.HeaderName, &out.HeaderName
		*out = new(string)
		**out = **in
	}
	if in.HeaderValue != nil {
		in, out := &in.HeaderValue, &out.HeaderValue
		*out = new(string)
		**out = **in
	}
	if in.Replace != nil {
		in, out := &in.Replace, &out.Replace
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PathMatcherHeaderActionRequestHeadersToAddInitParameters.
func (in *PathMatcherHeaderActionRequestHeadersToAddInitParameters) DeepCopy() *PathMatcherHeaderActionRequestHeadersToAddInitParameters {
	if in == nil {
		return nil
	}
	out := new(PathMatcherHeaderActionRequestHeadersToAddInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PathMatcherHeaderActionRequestHeadersToAddObservation) DeepCopyInto(out *PathMatcherHeaderActionRequestHeadersToAddObservation) {
	*out = *in
	if in.HeaderName != nil {
		in, out := &in.HeaderName, &out.HeaderName
		*out = new(string)
		**out = **in
	}
	if in.HeaderValue != nil {
		in, out := &in.HeaderValue, &out.HeaderValue
		*out = new(string)
		**out = **in
	}
	if in.Replace != nil {
		in, out := &in.Replace, &out.Replace
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PathMatcherHeaderActionRequestHeadersToAddObservation.
func (in *PathMatcherHeaderActionRequestHeadersToAddObservation) DeepCopy() *PathMatcherHeaderActionRequestHeadersToAddObservation {
	if in == nil {
		return nil
	}
	out := new(PathMatcherHeaderActionRequestHeadersToAddObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PathMatcherHeaderActionRequestHeadersToAddParameters) DeepCopyInto(out *PathMatcherHeaderActionRequestHeadersToAddParameters) {
	*out = *in
	if in.HeaderName != nil {
		in, out := &in.HeaderName, &out.HeaderName
		*out = new(string)
		**out = **in
	}
	if in.HeaderValue != nil {
		in, out := &in.HeaderValue, &out.HeaderValue
		*out = new(string)
		**out = **in
	}
	if in.Replace != nil {
		in, out := &in.Replace, &out.Replace
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PathMatcherHeaderActionRequestHeadersToAddParameters.
func (in *PathMatcherHeaderActionRequestHeadersToAddParameters) DeepCopy() *PathMatcherHeaderActionRequestHeadersToAddParameters {
	if in == nil {
		return nil
	}
	out := new(PathMatcherHeaderActionRequestHeadersToAddParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PathMatcherHeaderActionResponseHeadersToAddInitParameters) DeepCopyInto(out *PathMatcherHeaderActionResponseHeadersToAddInitParameters) {
	*out = *in
	if in.HeaderName != nil {
		in, out := &in.HeaderName, &out.HeaderName
		*out = new(string)
		**out = **in
	}
	if in.HeaderValue != nil {
		in, out := &in.HeaderValue, &out.HeaderValue
		*out = new(string)
		**out = **in
	}
	if in.Replace != nil {
		in, out := &in.Replace, &out.Replace
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PathMatcherHeaderActionResponseHeadersToAddInitParameters.
func (in *PathMatcherHeaderActionResponseHeadersToAddInitParameters) DeepCopy() *PathMatcherHeaderActionResponseHeadersToAddInitParameters {
	if in == nil {
		return nil
	}
	out := new(PathMatcherHeaderActionResponseHeadersToAddInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PathMatcherHeaderActionResponseHeadersToAddObservation) DeepCopyInto(out *PathMatcherHeaderActionResponseHeadersToAddObservation) {
	*out = *in
	if in.HeaderName != nil {
		in, out := &in.HeaderName, &out.HeaderName
		*out = new(string)
		**out = **in
	}
	if in.HeaderValue != nil {
		in, out := &in.HeaderValue, &out.HeaderValue
		*out = new(string)
		**out = **in
	}
	if in.Replace != nil {
		in, out := &in.Replace, &out.Replace
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PathMatcherHeaderActionResponseHeadersToAddObservation.
func (in *PathMatcherHeaderActionResponseHeadersToAddObservation) DeepCopy() *PathMatcherHeaderActionResponseHeadersToAddObservation {
	if in == nil {
		return nil
	}
	out := new(PathMatcherHeaderActionResponseHeadersToAddObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PathMatcherHeaderActionResponseHeadersToAddParameters) DeepCopyInto(out *PathMatcherHeaderActionResponseHeadersToAddParameters) {
	*out = *in
	if in.HeaderName != nil {
		in, out := &in.HeaderName, &out.HeaderName
		*out = new(string)
		**out = **in
	}
	if in.HeaderValue != nil {
		in, out := &in.HeaderValue, &out.HeaderValue
		*out = new(string)
		**out = **in
	}
	if in.Replace != nil {
		in, out := &in.Replace, &out.Replace
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PathMatcherHeaderActionResponseHeadersToAddParameters.
func (in *PathMatcherHeaderActionResponseHeadersToAddParameters) DeepCopy() *PathMatcherHeaderActionResponseHeadersToAddParameters {
	if in == nil {
		return nil
	}
	out := new(PathMatcherHeaderActionResponseHeadersToAddParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PathMatcherInitParameters) DeepCopyInto(out *PathMatcherInitParameters) {
	*out = *in
	if in.DefaultService != nil {
		in, out := &in.DefaultService, &out.DefaultService
		*out = new(string)
		**out = **in
	}
	if in.DefaultServiceRef != nil {
		in, out := &in.DefaultServiceRef, &out.DefaultServiceRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.DefaultServiceSelector != nil {
		in, out := &in.DefaultServiceSelector, &out.DefaultServiceSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.DefaultURLRedirect != nil {
		in, out := &in.DefaultURLRedirect, &out.DefaultURLRedirect
		*out = make([]PathMatcherDefaultURLRedirectInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PathRule != nil {
		in, out := &in.PathRule, &out.PathRule
		*out = make([]PathRuleInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RouteRules != nil {
		in, out := &in.RouteRules, &out.RouteRules
		*out = make([]RouteRulesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PathMatcherInitParameters.
func (in *PathMatcherInitParameters) DeepCopy() *PathMatcherInitParameters {
	if in == nil {
		return nil
	}
	out := new(PathMatcherInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PathMatcherObservation) DeepCopyInto(out *PathMatcherObservation) {
	*out = *in
	if in.DefaultService != nil {
		in, out := &in.DefaultService, &out.DefaultService
		*out = new(string)
		**out = **in
	}
	if in.DefaultURLRedirect != nil {
		in, out := &in.DefaultURLRedirect, &out.DefaultURLRedirect
		*out = make([]PathMatcherDefaultURLRedirectObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PathRule != nil {
		in, out := &in.PathRule, &out.PathRule
		*out = make([]PathRuleObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RouteRules != nil {
		in, out := &in.RouteRules, &out.RouteRules
		*out = make([]RouteRulesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PathMatcherObservation.
func (in *PathMatcherObservation) DeepCopy() *PathMatcherObservation {
	if in == nil {
		return nil
	}
	out := new(PathMatcherObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PathMatcherParameters) DeepCopyInto(out *PathMatcherParameters) {
	*out = *in
	if in.DefaultService != nil {
		in, out := &in.DefaultService, &out.DefaultService
		*out = new(string)
		**out = **in
	}
	if in.DefaultServiceRef != nil {
		in, out := &in.DefaultServiceRef, &out.DefaultServiceRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.DefaultServiceSelector != nil {
		in, out := &in.DefaultServiceSelector, &out.DefaultServiceSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.DefaultURLRedirect != nil {
		in, out := &in.DefaultURLRedirect, &out.DefaultURLRedirect
		*out = make([]PathMatcherDefaultURLRedirectParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PathRule != nil {
		in, out := &in.PathRule, &out.PathRule
		*out = make([]PathRuleParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RouteRules != nil {
		in, out := &in.RouteRules, &out.RouteRules
		*out = make([]RouteRulesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PathMatcherParameters.
func (in *PathMatcherParameters) DeepCopy() *PathMatcherParameters {
	if in == nil {
		return nil
	}
	out := new(PathMatcherParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PathMatcherPathRuleInitParameters) DeepCopyInto(out *PathMatcherPathRuleInitParameters) {
	*out = *in
	if in.Paths != nil {
		in, out := &in.Paths, &out.Paths
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.RouteAction != nil {
		in, out := &in.RouteAction, &out.RouteAction
		*out = make([]PathRuleRouteActionInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Service != nil {
		in, out := &in.Service, &out.Service
		*out = new(string)
		**out = **in
	}
	if in.ServiceRef != nil {
		in, out := &in.ServiceRef, &out.ServiceRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ServiceSelector != nil {
		in, out := &in.ServiceSelector, &out.ServiceSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.URLRedirect != nil {
		in, out := &in.URLRedirect, &out.URLRedirect
		*out = make([]PathRuleURLRedirectInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PathMatcherPathRuleInitParameters.
func (in *PathMatcherPathRuleInitParameters) DeepCopy() *PathMatcherPathRuleInitParameters {
	if in == nil {
		return nil
	}
	out := new(PathMatcherPathRuleInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PathMatcherPathRuleObservation) DeepCopyInto(out *PathMatcherPathRuleObservation) {
	*out = *in
	if in.Paths != nil {
		in, out := &in.Paths, &out.Paths
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.RouteAction != nil {
		in, out := &in.RouteAction, &out.RouteAction
		*out = make([]PathRuleRouteActionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Service != nil {
		in, out := &in.Service, &out.Service
		*out = new(string)
		**out = **in
	}
	if in.URLRedirect != nil {
		in, out := &in.URLRedirect, &out.URLRedirect
		*out = make([]PathRuleURLRedirectObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PathMatcherPathRuleObservation.
func (in *PathMatcherPathRuleObservation) DeepCopy() *PathMatcherPathRuleObservation {
	if in == nil {
		return nil
	}
	out := new(PathMatcherPathRuleObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PathMatcherPathRuleParameters) DeepCopyInto(out *PathMatcherPathRuleParameters) {
	*out = *in
	if in.Paths != nil {
		in, out := &in.Paths, &out.Paths
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.RouteAction != nil {
		in, out := &in.RouteAction, &out.RouteAction
		*out = make([]PathRuleRouteActionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Service != nil {
		in, out := &in.Service, &out.Service
		*out = new(string)
		**out = **in
	}
	if in.ServiceRef != nil {
		in, out := &in.ServiceRef, &out.ServiceRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ServiceSelector != nil {
		in, out := &in.ServiceSelector, &out.ServiceSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.URLRedirect != nil {
		in, out := &in.URLRedirect, &out.URLRedirect
		*out = make([]PathRuleURLRedirectParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PathMatcherPathRuleParameters.
func (in *PathMatcherPathRuleParameters) DeepCopy() *PathMatcherPathRuleParameters {
	if in == nil {
		return nil
	}
	out := new(PathMatcherPathRuleParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PathMatcherRouteRulesHeaderActionInitParameters) DeepCopyInto(out *PathMatcherRouteRulesHeaderActionInitParameters) {
	*out = *in
	if in.RequestHeadersToAdd != nil {
		in, out := &in.RequestHeadersToAdd, &out.RequestHeadersToAdd
		*out = make([]PathMatcherRouteRulesHeaderActionRequestHeadersToAddInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RequestHeadersToRemove != nil {
		in, out := &in.RequestHeadersToRemove, &out.RequestHeadersToRemove
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ResponseHeadersToAdd != nil {
		in, out := &in.ResponseHeadersToAdd, &out.ResponseHeadersToAdd
		*out = make([]PathMatcherRouteRulesHeaderActionResponseHeadersToAddInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ResponseHeadersToRemove != nil {
		in, out := &in.ResponseHeadersToRemove, &out.ResponseHeadersToRemove
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PathMatcherRouteRulesHeaderActionInitParameters.
func (in *PathMatcherRouteRulesHeaderActionInitParameters) DeepCopy() *PathMatcherRouteRulesHeaderActionInitParameters {
	if in == nil {
		return nil
	}
	out := new(PathMatcherRouteRulesHeaderActionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PathMatcherRouteRulesHeaderActionObservation) DeepCopyInto(out *PathMatcherRouteRulesHeaderActionObservation) {
	*out = *in
	if in.RequestHeadersToAdd != nil {
		in, out := &in.RequestHeadersToAdd, &out.RequestHeadersToAdd
		*out = make([]PathMatcherRouteRulesHeaderActionRequestHeadersToAddObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RequestHeadersToRemove != nil {
		in, out := &in.RequestHeadersToRemove, &out.RequestHeadersToRemove
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ResponseHeadersToAdd != nil {
		in, out := &in.ResponseHeadersToAdd, &out.ResponseHeadersToAdd
		*out = make([]PathMatcherRouteRulesHeaderActionResponseHeadersToAddObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ResponseHeadersToRemove != nil {
		in, out := &in.ResponseHeadersToRemove, &out.ResponseHeadersToRemove
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PathMatcherRouteRulesHeaderActionObservation.
func (in *PathMatcherRouteRulesHeaderActionObservation) DeepCopy() *PathMatcherRouteRulesHeaderActionObservation {
	if in == nil {
		return nil
	}
	out := new(PathMatcherRouteRulesHeaderActionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PathMatcherRouteRulesHeaderActionParameters) DeepCopyInto(out *PathMatcherRouteRulesHeaderActionParameters) {
	*out = *in
	if in.RequestHeadersToAdd != nil {
		in, out := &in.RequestHeadersToAdd, &out.RequestHeadersToAdd
		*out = make([]PathMatcherRouteRulesHeaderActionRequestHeadersToAddParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RequestHeadersToRemove != nil {
		in, out := &in.RequestHeadersToRemove, &out.RequestHeadersToRemove
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ResponseHeadersToAdd != nil {
		in, out := &in.ResponseHeadersToAdd, &out.ResponseHeadersToAdd
		*out = make([]PathMatcherRouteRulesHeaderActionResponseHeadersToAddParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ResponseHeadersToRemove != nil {
		in, out := &in.ResponseHeadersToRemove, &out.ResponseHeadersToRemove
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PathMatcherRouteRulesHeaderActionParameters.
func (in *PathMatcherRouteRulesHeaderActionParameters) DeepCopy() *PathMatcherRouteRulesHeaderActionParameters {
	if in == nil {
		return nil
	}
	out := new(PathMatcherRouteRulesHeaderActionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PathMatcherRouteRulesHeaderActionRequestHeadersToAddInitParameters) DeepCopyInto(out *PathMatcherRouteRulesHeaderActionRequestHeadersToAddInitParameters) {
	*out = *in
	if in.HeaderName != nil {
		in, out := &in.HeaderName, &out.HeaderName
		*out = new(string)
		**out = **in
	}
	if in.HeaderValue != nil {
		in, out := &in.HeaderValue, &out.HeaderValue
		*out = new(string)
		**out = **in
	}
	if in.Replace != nil {
		in, out := &in.Replace, &out.Replace
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PathMatcherRouteRulesHeaderActionRequestHeadersToAddInitParameters.
func (in *PathMatcherRouteRulesHeaderActionRequestHeadersToAddInitParameters) DeepCopy() *PathMatcherRouteRulesHeaderActionRequestHeadersToAddInitParameters {
	if in == nil {
		return nil
	}
	out := new(PathMatcherRouteRulesHeaderActionRequestHeadersToAddInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PathMatcherRouteRulesHeaderActionRequestHeadersToAddObservation) DeepCopyInto(out *PathMatcherRouteRulesHeaderActionRequestHeadersToAddObservation) {
	*out = *in
	if in.HeaderName != nil {
		in, out := &in.HeaderName, &out.HeaderName
		*out = new(string)
		**out = **in
	}
	if in.HeaderValue != nil {
		in, out := &in.HeaderValue, &out.HeaderValue
		*out = new(string)
		**out = **in
	}
	if in.Replace != nil {
		in, out := &in.Replace, &out.Replace
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PathMatcherRouteRulesHeaderActionRequestHeadersToAddObservation.
func (in *PathMatcherRouteRulesHeaderActionRequestHeadersToAddObservation) DeepCopy() *PathMatcherRouteRulesHeaderActionRequestHeadersToAddObservation {
	if in == nil {
		return nil
	}
	out := new(PathMatcherRouteRulesHeaderActionRequestHeadersToAddObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PathMatcherRouteRulesHeaderActionRequestHeadersToAddParameters) DeepCopyInto(out *PathMatcherRouteRulesHeaderActionRequestHeadersToAddParameters) {
	*out = *in
	if in.HeaderName != nil {
		in, out := &in.HeaderName, &out.HeaderName
		*out = new(string)
		**out = **in
	}
	if in.HeaderValue != nil {
		in, out := &in.HeaderValue, &out.HeaderValue
		*out = new(string)
		**out = **in
	}
	if in.Replace != nil {
		in, out := &in.Replace, &out.Replace
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PathMatcherRouteRulesHeaderActionRequestHeadersToAddParameters.
func (in *PathMatcherRouteRulesHeaderActionRequestHeadersToAddParameters) DeepCopy() *PathMatcherRouteRulesHeaderActionRequestHeadersToAddParameters {
	if in == nil {
		return nil
	}
	out := new(PathMatcherRouteRulesHeaderActionRequestHeadersToAddParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PathMatcherRouteRulesHeaderActionResponseHeadersToAddInitParameters) DeepCopyInto(out *PathMatcherRouteRulesHeaderActionResponseHeadersToAddInitParameters) {
	*out = *in
	if in.HeaderName != nil {
		in, out := &in.HeaderName, &out.HeaderName
		*out = new(string)
		**out = **in
	}
	if in.HeaderValue != nil {
		in, out := &in.HeaderValue, &out.HeaderValue
		*out = new(string)
		**out = **in
	}
	if in.Replace != nil {
		in, out := &in.Replace, &out.Replace
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PathMatcherRouteRulesHeaderActionResponseHeadersToAddInitParameters.
func (in *PathMatcherRouteRulesHeaderActionResponseHeadersToAddInitParameters) DeepCopy() *PathMatcherRouteRulesHeaderActionResponseHeadersToAddInitParameters {
	if in == nil {
		return nil
	}
	out := new(PathMatcherRouteRulesHeaderActionResponseHeadersToAddInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PathMatcherRouteRulesHeaderActionResponseHeadersToAddObservation) DeepCopyInto(out *PathMatcherRouteRulesHeaderActionResponseHeadersToAddObservation) {
	*out = *in
	if in.HeaderName != nil {
		in, out := &in.HeaderName, &out.HeaderName
		*out = new(string)
		**out = **in
	}
	if in.HeaderValue != nil {
		in, out := &in.HeaderValue, &out.HeaderValue
		*out = new(string)
		**out = **in
	}
	if in.Replace != nil {
		in, out := &in.Replace, &out.Replace
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PathMatcherRouteRulesHeaderActionResponseHeadersToAddObservation.
func (in *PathMatcherRouteRulesHeaderActionResponseHeadersToAddObservation) DeepCopy() *PathMatcherRouteRulesHeaderActionResponseHeadersToAddObservation {
	if in == nil {
		return nil
	}
	out := new(PathMatcherRouteRulesHeaderActionResponseHeadersToAddObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PathMatcherRouteRulesHeaderActionResponseHeadersToAddParameters) DeepCopyInto(out *PathMatcherRouteRulesHeaderActionResponseHeadersToAddParameters) {
	*out = *in
	if in.HeaderName != nil {
		in, out := &in.HeaderName, &out.HeaderName
		*out = new(string)
		**out = **in
	}
	if in.HeaderValue != nil {
		in, out := &in.HeaderValue, &out.HeaderValue
		*out = new(string)
		**out = **in
	}
	if in.Replace != nil {
		in, out := &in.Replace, &out.Replace
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PathMatcherRouteRulesHeaderActionResponseHeadersToAddParameters.
func (in *PathMatcherRouteRulesHeaderActionResponseHeadersToAddParameters) DeepCopy() *PathMatcherRouteRulesHeaderActionResponseHeadersToAddParameters {
	if in == nil {
		return nil
	}
	out := new(PathMatcherRouteRulesHeaderActionResponseHeadersToAddParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PathMatcherRouteRulesInitParameters) DeepCopyInto(out *PathMatcherRouteRulesInitParameters) {
	*out = *in
	if in.HeaderAction != nil {
		in, out := &in.HeaderAction, &out.HeaderAction
		*out = make([]PathMatcherRouteRulesHeaderActionInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MatchRules != nil {
		in, out := &in.MatchRules, &out.MatchRules
		*out = make([]RouteRulesMatchRulesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Priority != nil {
		in, out := &in.Priority, &out.Priority
		*out = new(float64)
		**out = **in
	}
	if in.RouteAction != nil {
		in, out := &in.RouteAction, &out.RouteAction
		*out = make([]PathMatcherRouteRulesRouteActionInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Service != nil {
		in, out := &in.Service, &out.Service
		*out = new(string)
		**out = **in
	}
	if in.ServiceRef != nil {
		in, out := &in.ServiceRef, &out.ServiceRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ServiceSelector != nil {
		in, out := &in.ServiceSelector, &out.ServiceSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.URLRedirect != nil {
		in, out := &in.URLRedirect, &out.URLRedirect
		*out = make([]PathMatcherRouteRulesURLRedirectInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PathMatcherRouteRulesInitParameters.
func (in *PathMatcherRouteRulesInitParameters) DeepCopy() *PathMatcherRouteRulesInitParameters {
	if in == nil {
		return nil
	}
	out := new(PathMatcherRouteRulesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PathMatcherRouteRulesObservation) DeepCopyInto(out *PathMatcherRouteRulesObservation) {
	*out = *in
	if in.HeaderAction != nil {
		in, out := &in.HeaderAction, &out.HeaderAction
		*out = make([]PathMatcherRouteRulesHeaderActionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MatchRules != nil {
		in, out := &in.MatchRules, &out.MatchRules
		*out = make([]RouteRulesMatchRulesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Priority != nil {
		in, out := &in.Priority, &out.Priority
		*out = new(float64)
		**out = **in
	}
	if in.RouteAction != nil {
		in, out := &in.RouteAction, &out.RouteAction
		*out = make([]PathMatcherRouteRulesRouteActionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Service != nil {
		in, out := &in.Service, &out.Service
		*out = new(string)
		**out = **in
	}
	if in.URLRedirect != nil {
		in, out := &in.URLRedirect, &out.URLRedirect
		*out = make([]PathMatcherRouteRulesURLRedirectObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PathMatcherRouteRulesObservation.
func (in *PathMatcherRouteRulesObservation) DeepCopy() *PathMatcherRouteRulesObservation {
	if in == nil {
		return nil
	}
	out := new(PathMatcherRouteRulesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PathMatcherRouteRulesParameters) DeepCopyInto(out *PathMatcherRouteRulesParameters) {
	*out = *in
	if in.HeaderAction != nil {
		in, out := &in.HeaderAction, &out.HeaderAction
		*out = make([]PathMatcherRouteRulesHeaderActionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MatchRules != nil {
		in, out := &in.MatchRules, &out.MatchRules
		*out = make([]RouteRulesMatchRulesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Priority != nil {
		in, out := &in.Priority, &out.Priority
		*out = new(float64)
		**out = **in
	}
	if in.RouteAction != nil {
		in, out := &in.RouteAction, &out.RouteAction
		*out = make([]PathMatcherRouteRulesRouteActionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Service != nil {
		in, out := &in.Service, &out.Service
		*out = new(string)
		**out = **in
	}
	if in.ServiceRef != nil {
		in, out := &in.ServiceRef, &out.ServiceRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ServiceSelector != nil {
		in, out := &in.ServiceSelector, &out.ServiceSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.URLRedirect != nil {
		in, out := &in.URLRedirect, &out.URLRedirect
		*out = make([]PathMatcherRouteRulesURLRedirectParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PathMatcherRouteRulesParameters.
func (in *PathMatcherRouteRulesParameters) DeepCopy() *PathMatcherRouteRulesParameters {
	if in == nil {
		return nil
	}
	out := new(PathMatcherRouteRulesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PathMatcherRouteRulesRouteActionCorsPolicyInitParameters) DeepCopyInto(out *PathMatcherRouteRulesRouteActionCorsPolicyInitParameters) {
	*out = *in
	if in.AllowCredentials != nil {
		in, out := &in.AllowCredentials, &out.AllowCredentials
		*out = new(bool)
		**out = **in
	}
	if in.AllowHeaders != nil {
		in, out := &in.AllowHeaders, &out.AllowHeaders
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AllowMethods != nil {
		in, out := &in.AllowMethods, &out.AllowMethods
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AllowOriginRegexes != nil {
		in, out := &in.AllowOriginRegexes, &out.AllowOriginRegexes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AllowOrigins != nil {
		in, out := &in.AllowOrigins, &out.AllowOrigins
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Disabled != nil {
		in, out := &in.Disabled, &out.Disabled
		*out = new(bool)
		**out = **in
	}
	if in.ExposeHeaders != nil {
		in, out := &in.ExposeHeaders, &out.ExposeHeaders
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.MaxAge != nil {
		in, out := &in.MaxAge, &out.MaxAge
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PathMatcherRouteRulesRouteActionCorsPolicyInitParameters.
func (in *PathMatcherRouteRulesRouteActionCorsPolicyInitParameters) DeepCopy() *PathMatcherRouteRulesRouteActionCorsPolicyInitParameters {
	if in == nil {
		return nil
	}
	out := new(PathMatcherRouteRulesRouteActionCorsPolicyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PathMatcherRouteRulesRouteActionCorsPolicyObservation) DeepCopyInto(out *PathMatcherRouteRulesRouteActionCorsPolicyObservation) {
	*out = *in
	if in.AllowCredentials != nil {
		in, out := &in.AllowCredentials, &out.AllowCredentials
		*out = new(bool)
		**out = **in
	}
	if in.AllowHeaders != nil {
		in, out := &in.AllowHeaders, &out.AllowHeaders
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AllowMethods != nil {
		in, out := &in.AllowMethods, &out.AllowMethods
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AllowOriginRegexes != nil {
		in, out := &in.AllowOriginRegexes, &out.AllowOriginRegexes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AllowOrigins != nil {
		in, out := &in.AllowOrigins, &out.AllowOrigins
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Disabled != nil {
		in, out := &in.Disabled, &out.Disabled
		*out = new(bool)
		**out = **in
	}
	if in.ExposeHeaders != nil {
		in, out := &in.ExposeHeaders, &out.ExposeHeaders
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.MaxAge != nil {
		in, out := &in.MaxAge, &out.MaxAge
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PathMatcherRouteRulesRouteActionCorsPolicyObservation.
func (in *PathMatcherRouteRulesRouteActionCorsPolicyObservation) DeepCopy() *PathMatcherRouteRulesRouteActionCorsPolicyObservation {
	if in == nil {
		return nil
	}
	out := new(PathMatcherRouteRulesRouteActionCorsPolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PathMatcherRouteRulesRouteActionCorsPolicyParameters) DeepCopyInto(out *PathMatcherRouteRulesRouteActionCorsPolicyParameters) {
	*out = *in
	if in.AllowCredentials != nil {
		in, out := &in.AllowCredentials, &out.AllowCredentials
		*out = new(bool)
		**out = **in
	}
	if in.AllowHeaders != nil {
		in, out := &in.AllowHeaders, &out.AllowHeaders
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AllowMethods != nil {
		in, out := &in.AllowMethods, &out.AllowMethods
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AllowOriginRegexes != nil {
		in, out := &in.AllowOriginRegexes, &out.AllowOriginRegexes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AllowOrigins != nil {
		in, out := &in.AllowOrigins, &out.AllowOrigins
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Disabled != nil {
		in, out := &in.Disabled, &out.Disabled
		*out = new(bool)
		**out = **in
	}
	if in.ExposeHeaders != nil {
		in, out := &in.ExposeHeaders, &out.ExposeHeaders
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.MaxAge != nil {
		in, out := &in.MaxAge, &out.MaxAge
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PathMatcherRouteRulesRouteActionCorsPolicyParameters.
func (in *PathMatcherRouteRulesRouteActionCorsPolicyParameters) DeepCopy() *PathMatcherRouteRulesRouteActionCorsPolicyParameters {
	if in == nil {
		return nil
	}
	out := new(PathMatcherRouteRulesRouteActionCorsPolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PathMatcherRouteRulesRouteActionFaultInjectionPolicyInitParameters) DeepCopyInto(out *PathMatcherRouteRulesRouteActionFaultInjectionPolicyInitParameters) {
	*out = *in
	if in.Abort != nil {
		in, out := &in.Abort, &out.Abort
		*out = make([]RouteRulesRouteActionFaultInjectionPolicyAbortInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Delay != nil {
		in, out := &in.Delay, &out.Delay
		*out = make([]RouteRulesRouteActionFaultInjectionPolicyDelayInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PathMatcherRouteRulesRouteActionFaultInjectionPolicyInitParameters.
func (in *PathMatcherRouteRulesRouteActionFaultInjectionPolicyInitParameters) DeepCopy() *PathMatcherRouteRulesRouteActionFaultInjectionPolicyInitParameters {
	if in == nil {
		return nil
	}
	out := new(PathMatcherRouteRulesRouteActionFaultInjectionPolicyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PathMatcherRouteRulesRouteActionFaultInjectionPolicyObservation) DeepCopyInto(out *PathMatcherRouteRulesRouteActionFaultInjectionPolicyObservation) {
	*out = *in
	if in.Abort != nil {
		in, out := &in.Abort, &out.Abort
		*out = make([]RouteRulesRouteActionFaultInjectionPolicyAbortObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Delay != nil {
		in, out := &in.Delay, &out.Delay
		*out = make([]RouteRulesRouteActionFaultInjectionPolicyDelayObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PathMatcherRouteRulesRouteActionFaultInjectionPolicyObservation.
func (in *PathMatcherRouteRulesRouteActionFaultInjectionPolicyObservation) DeepCopy() *PathMatcherRouteRulesRouteActionFaultInjectionPolicyObservation {
	if in == nil {
		return nil
	}
	out := new(PathMatcherRouteRulesRouteActionFaultInjectionPolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PathMatcherRouteRulesRouteActionFaultInjectionPolicyParameters) DeepCopyInto(out *PathMatcherRouteRulesRouteActionFaultInjectionPolicyParameters) {
	*out = *in
	if in.Abort != nil {
		in, out := &in.Abort, &out.Abort
		*out = make([]RouteRulesRouteActionFaultInjectionPolicyAbortParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Delay != nil {
		in, out := &in.Delay, &out.Delay
		*out = make([]RouteRulesRouteActionFaultInjectionPolicyDelayParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PathMatcherRouteRulesRouteActionFaultInjectionPolicyParameters.
func (in *PathMatcherRouteRulesRouteActionFaultInjectionPolicyParameters) DeepCopy() *PathMatcherRouteRulesRouteActionFaultInjectionPolicyParameters {
	if in == nil {
		return nil
	}
	out := new(PathMatcherRouteRulesRouteActionFaultInjectionPolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PathMatcherRouteRulesRouteActionInitParameters) DeepCopyInto(out *PathMatcherRouteRulesRouteActionInitParameters) {
	*out = *in
	if in.CorsPolicy != nil {
		in, out := &in.CorsPolicy, &out.CorsPolicy
		*out = make([]PathMatcherRouteRulesRouteActionCorsPolicyInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.FaultInjectionPolicy != nil {
		in, out := &in.FaultInjectionPolicy, &out.FaultInjectionPolicy
		*out = make([]PathMatcherRouteRulesRouteActionFaultInjectionPolicyInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RequestMirrorPolicy != nil {
		in, out := &in.RequestMirrorPolicy, &out.RequestMirrorPolicy
		*out = make([]PathMatcherRouteRulesRouteActionRequestMirrorPolicyInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RetryPolicy != nil {
		in, out := &in.RetryPolicy, &out.RetryPolicy
		*out = make([]PathMatcherRouteRulesRouteActionRetryPolicyInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Timeout != nil {
		in, out := &in.Timeout, &out.Timeout
		*out = make([]PathMatcherRouteRulesRouteActionTimeoutInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.URLRewrite != nil {
		in, out := &in.URLRewrite, &out.URLRewrite
		*out = make([]PathMatcherRouteRulesRouteActionURLRewriteInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.WeightedBackendServices != nil {
		in, out := &in.WeightedBackendServices, &out.WeightedBackendServices
		*out = make([]PathMatcherRouteRulesRouteActionWeightedBackendServicesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PathMatcherRouteRulesRouteActionInitParameters.
func (in *PathMatcherRouteRulesRouteActionInitParameters) DeepCopy() *PathMatcherRouteRulesRouteActionInitParameters {
	if in == nil {
		return nil
	}
	out := new(PathMatcherRouteRulesRouteActionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PathMatcherRouteRulesRouteActionObservation) DeepCopyInto(out *PathMatcherRouteRulesRouteActionObservation) {
	*out = *in
	if in.CorsPolicy != nil {
		in, out := &in.CorsPolicy, &out.CorsPolicy
		*out = make([]PathMatcherRouteRulesRouteActionCorsPolicyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.FaultInjectionPolicy != nil {
		in, out := &in.FaultInjectionPolicy, &out.FaultInjectionPolicy
		*out = make([]PathMatcherRouteRulesRouteActionFaultInjectionPolicyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RequestMirrorPolicy != nil {
		in, out := &in.RequestMirrorPolicy, &out.RequestMirrorPolicy
		*out = make([]PathMatcherRouteRulesRouteActionRequestMirrorPolicyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RetryPolicy != nil {
		in, out := &in.RetryPolicy, &out.RetryPolicy
		*out = make([]PathMatcherRouteRulesRouteActionRetryPolicyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Timeout != nil {
		in, out := &in.Timeout, &out.Timeout
		*out = make([]PathMatcherRouteRulesRouteActionTimeoutObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.URLRewrite != nil {
		in, out := &in.URLRewrite, &out.URLRewrite
		*out = make([]PathMatcherRouteRulesRouteActionURLRewriteObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.WeightedBackendServices != nil {
		in, out := &in.WeightedBackendServices, &out.WeightedBackendServices
		*out = make([]PathMatcherRouteRulesRouteActionWeightedBackendServicesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PathMatcherRouteRulesRouteActionObservation.
func (in *PathMatcherRouteRulesRouteActionObservation) DeepCopy() *PathMatcherRouteRulesRouteActionObservation {
	if in == nil {
		return nil
	}
	out := new(PathMatcherRouteRulesRouteActionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PathMatcherRouteRulesRouteActionParameters) DeepCopyInto(out *PathMatcherRouteRulesRouteActionParameters) {
	*out = *in
	if in.CorsPolicy != nil {
		in, out := &in.CorsPolicy, &out.CorsPolicy
		*out = make([]PathMatcherRouteRulesRouteActionCorsPolicyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.FaultInjectionPolicy != nil {
		in, out := &in.FaultInjectionPolicy, &out.FaultInjectionPolicy
		*out = make([]PathMatcherRouteRulesRouteActionFaultInjectionPolicyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RequestMirrorPolicy != nil {
		in, out := &in.RequestMirrorPolicy, &out.RequestMirrorPolicy
		*out = make([]PathMatcherRouteRulesRouteActionRequestMirrorPolicyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RetryPolicy != nil {
		in, out := &in.RetryPolicy, &out.RetryPolicy
		*out = make([]PathMatcherRouteRulesRouteActionRetryPolicyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Timeout != nil {
		in, out := &in.Timeout, &out.Timeout
		*out = make([]PathMatcherRouteRulesRouteActionTimeoutParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.URLRewrite != nil {
		in, out := &in.URLRewrite, &out.URLRewrite
		*out = make([]PathMatcherRouteRulesRouteActionURLRewriteParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.WeightedBackendServices != nil {
		in, out := &in.WeightedBackendServices, &out.WeightedBackendServices
		*out = make([]PathMatcherRouteRulesRouteActionWeightedBackendServicesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PathMatcherRouteRulesRouteActionParameters.
func (in *PathMatcherRouteRulesRouteActionParameters) DeepCopy() *PathMatcherRouteRulesRouteActionParameters {
	if in == nil {
		return nil
	}
	out := new(PathMatcherRouteRulesRouteActionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PathMatcherRouteRulesRouteActionRequestMirrorPolicyInitParameters) DeepCopyInto(out *PathMatcherRouteRulesRouteActionRequestMirrorPolicyInitParameters) {
	*out = *in
	if in.BackendService != nil {
		in, out := &in.BackendService, &out.BackendService
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PathMatcherRouteRulesRouteActionRequestMirrorPolicyInitParameters.
func (in *PathMatcherRouteRulesRouteActionRequestMirrorPolicyInitParameters) DeepCopy() *PathMatcherRouteRulesRouteActionRequestMirrorPolicyInitParameters {
	if in == nil {
		return nil
	}
	out := new(PathMatcherRouteRulesRouteActionRequestMirrorPolicyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PathMatcherRouteRulesRouteActionRequestMirrorPolicyObservation) DeepCopyInto(out *PathMatcherRouteRulesRouteActionRequestMirrorPolicyObservation) {
	*out = *in
	if in.BackendService != nil {
		in, out := &in.BackendService, &out.BackendService
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PathMatcherRouteRulesRouteActionRequestMirrorPolicyObservation.
func (in *PathMatcherRouteRulesRouteActionRequestMirrorPolicyObservation) DeepCopy() *PathMatcherRouteRulesRouteActionRequestMirrorPolicyObservation {
	if in == nil {
		return nil
	}
	out := new(PathMatcherRouteRulesRouteActionRequestMirrorPolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PathMatcherRouteRulesRouteActionRequestMirrorPolicyParameters) DeepCopyInto(out *PathMatcherRouteRulesRouteActionRequestMirrorPolicyParameters) {
	*out = *in
	if in.BackendService != nil {
		in, out := &in.BackendService, &out.BackendService
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PathMatcherRouteRulesRouteActionRequestMirrorPolicyParameters.
func (in *PathMatcherRouteRulesRouteActionRequestMirrorPolicyParameters) DeepCopy() *PathMatcherRouteRulesRouteActionRequestMirrorPolicyParameters {
	if in == nil {
		return nil
	}
	out := new(PathMatcherRouteRulesRouteActionRequestMirrorPolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PathMatcherRouteRulesRouteActionRetryPolicyInitParameters) DeepCopyInto(out *PathMatcherRouteRulesRouteActionRetryPolicyInitParameters) {
	*out = *in
	if in.NumRetries != nil {
		in, out := &in.NumRetries, &out.NumRetries
		*out = new(float64)
		**out = **in
	}
	if in.PerTryTimeout != nil {
		in, out := &in.PerTryTimeout, &out.PerTryTimeout
		*out = make([]RouteRulesRouteActionRetryPolicyPerTryTimeoutInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RetryConditions != nil {
		in, out := &in.RetryConditions, &out.RetryConditions
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PathMatcherRouteRulesRouteActionRetryPolicyInitParameters.
func (in *PathMatcherRouteRulesRouteActionRetryPolicyInitParameters) DeepCopy() *PathMatcherRouteRulesRouteActionRetryPolicyInitParameters {
	if in == nil {
		return nil
	}
	out := new(PathMatcherRouteRulesRouteActionRetryPolicyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PathMatcherRouteRulesRouteActionRetryPolicyObservation) DeepCopyInto(out *PathMatcherRouteRulesRouteActionRetryPolicyObservation) {
	*out = *in
	if in.NumRetries != nil {
		in, out := &in.NumRetries, &out.NumRetries
		*out = new(float64)
		**out = **in
	}
	if in.PerTryTimeout != nil {
		in, out := &in.PerTryTimeout, &out.PerTryTimeout
		*out = make([]RouteRulesRouteActionRetryPolicyPerTryTimeoutObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RetryConditions != nil {
		in, out := &in.RetryConditions, &out.RetryConditions
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PathMatcherRouteRulesRouteActionRetryPolicyObservation.
func (in *PathMatcherRouteRulesRouteActionRetryPolicyObservation) DeepCopy() *PathMatcherRouteRulesRouteActionRetryPolicyObservation {
	if in == nil {
		return nil
	}
	out := new(PathMatcherRouteRulesRouteActionRetryPolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PathMatcherRouteRulesRouteActionRetryPolicyParameters) DeepCopyInto(out *PathMatcherRouteRulesRouteActionRetryPolicyParameters) {
	*out = *in
	if in.NumRetries != nil {
		in, out := &in.NumRetries, &out.NumRetries
		*out = new(float64)
		**out = **in
	}
	if in.PerTryTimeout != nil {
		in, out := &in.PerTryTimeout, &out.PerTryTimeout
		*out = make([]RouteRulesRouteActionRetryPolicyPerTryTimeoutParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RetryConditions != nil {
		in, out := &in.RetryConditions, &out.RetryConditions
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PathMatcherRouteRulesRouteActionRetryPolicyParameters.
func (in *PathMatcherRouteRulesRouteActionRetryPolicyParameters) DeepCopy() *PathMatcherRouteRulesRouteActionRetryPolicyParameters {
	if in == nil {
		return nil
	}
	out := new(PathMatcherRouteRulesRouteActionRetryPolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PathMatcherRouteRulesRouteActionTimeoutInitParameters) DeepCopyInto(out *PathMatcherRouteRulesRouteActionTimeoutInitParameters) {
	*out = *in
	if in.Nanos != nil {
		in, out := &in.Nanos, &out.Nanos
		*out = new(float64)
		**out = **in
	}
	if in.Seconds != nil {
		in, out := &in.Seconds, &out.Seconds
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PathMatcherRouteRulesRouteActionTimeoutInitParameters.
func (in *PathMatcherRouteRulesRouteActionTimeoutInitParameters) DeepCopy() *PathMatcherRouteRulesRouteActionTimeoutInitParameters {
	if in == nil {
		return nil
	}
	out := new(PathMatcherRouteRulesRouteActionTimeoutInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PathMatcherRouteRulesRouteActionTimeoutObservation) DeepCopyInto(out *PathMatcherRouteRulesRouteActionTimeoutObservation) {
	*out = *in
	if in.Nanos != nil {
		in, out := &in.Nanos, &out.Nanos
		*out = new(float64)
		**out = **in
	}
	if in.Seconds != nil {
		in, out := &in.Seconds, &out.Seconds
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PathMatcherRouteRulesRouteActionTimeoutObservation.
func (in *PathMatcherRouteRulesRouteActionTimeoutObservation) DeepCopy() *PathMatcherRouteRulesRouteActionTimeoutObservation {
	if in == nil {
		return nil
	}
	out := new(PathMatcherRouteRulesRouteActionTimeoutObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PathMatcherRouteRulesRouteActionTimeoutParameters) DeepCopyInto(out *PathMatcherRouteRulesRouteActionTimeoutParameters) {
	*out = *in
	if in.Nanos != nil {
		in, out := &in.Nanos, &out.Nanos
		*out = new(float64)
		**out = **in
	}
	if in.Seconds != nil {
		in, out := &in.Seconds, &out.Seconds
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PathMatcherRouteRulesRouteActionTimeoutParameters.
func (in *PathMatcherRouteRulesRouteActionTimeoutParameters) DeepCopy() *PathMatcherRouteRulesRouteActionTimeoutParameters {
	if in == nil {
		return nil
	}
	out := new(PathMatcherRouteRulesRouteActionTimeoutParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PathMatcherRouteRulesRouteActionURLRewriteInitParameters) DeepCopyInto(out *PathMatcherRouteRulesRouteActionURLRewriteInitParameters) {
	*out = *in
	if in.HostRewrite != nil {
		in, out := &in.HostRewrite, &out.HostRewrite
		*out = new(string)
		**out = **in
	}
	if in.PathPrefixRewrite != nil {
		in, out := &in.PathPrefixRewrite, &out.PathPrefixRewrite
		*out = new(string)
		**out = **in
	}
	if in.PathTemplateRewrite != nil {
		in, out := &in.PathTemplateRewrite, &out.PathTemplateRewrite
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PathMatcherRouteRulesRouteActionURLRewriteInitParameters.
func (in *PathMatcherRouteRulesRouteActionURLRewriteInitParameters) DeepCopy() *PathMatcherRouteRulesRouteActionURLRewriteInitParameters {
	if in == nil {
		return nil
	}
	out := new(PathMatcherRouteRulesRouteActionURLRewriteInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PathMatcherRouteRulesRouteActionURLRewriteObservation) DeepCopyInto(out *PathMatcherRouteRulesRouteActionURLRewriteObservation) {
	*out = *in
	if in.HostRewrite != nil {
		in, out := &in.HostRewrite, &out.HostRewrite
		*out = new(string)
		**out = **in
	}
	if in.PathPrefixRewrite != nil {
		in, out := &in.PathPrefixRewrite, &out.PathPrefixRewrite
		*out = new(string)
		**out = **in
	}
	if in.PathTemplateRewrite != nil {
		in, out := &in.PathTemplateRewrite, &out.PathTemplateRewrite
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PathMatcherRouteRulesRouteActionURLRewriteObservation.
func (in *PathMatcherRouteRulesRouteActionURLRewriteObservation) DeepCopy() *PathMatcherRouteRulesRouteActionURLRewriteObservation {
	if in == nil {
		return nil
	}
	out := new(PathMatcherRouteRulesRouteActionURLRewriteObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PathMatcherRouteRulesRouteActionURLRewriteParameters) DeepCopyInto(out *PathMatcherRouteRulesRouteActionURLRewriteParameters) {
	*out = *in
	if in.HostRewrite != nil {
		in, out := &in.HostRewrite, &out.HostRewrite
		*out = new(string)
		**out = **in
	}
	if in.PathPrefixRewrite != nil {
		in, out := &in.PathPrefixRewrite, &out.PathPrefixRewrite
		*out = new(string)
		**out = **in
	}
	if in.PathTemplateRewrite != nil {
		in, out := &in.PathTemplateRewrite, &out.PathTemplateRewrite
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PathMatcherRouteRulesRouteActionURLRewriteParameters.
func (in *PathMatcherRouteRulesRouteActionURLRewriteParameters) DeepCopy() *PathMatcherRouteRulesRouteActionURLRewriteParameters {
	if in == nil {
		return nil
	}
	out := new(PathMatcherRouteRulesRouteActionURLRewriteParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PathMatcherRouteRulesRouteActionWeightedBackendServicesInitParameters) DeepCopyInto(out *PathMatcherRouteRulesRouteActionWeightedBackendServicesInitParameters) {
	*out = *in
	if in.BackendService != nil {
		in, out := &in.BackendService, &out.BackendService
		*out = new(string)
		**out = **in
	}
	if in.HeaderAction != nil {
		in, out := &in.HeaderAction, &out.HeaderAction
		*out = make([]RouteRulesRouteActionWeightedBackendServicesHeaderActionInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Weight != nil {
		in, out := &in.Weight, &out.Weight
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PathMatcherRouteRulesRouteActionWeightedBackendServicesInitParameters.
func (in *PathMatcherRouteRulesRouteActionWeightedBackendServicesInitParameters) DeepCopy() *PathMatcherRouteRulesRouteActionWeightedBackendServicesInitParameters {
	if in == nil {
		return nil
	}
	out := new(PathMatcherRouteRulesRouteActionWeightedBackendServicesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PathMatcherRouteRulesRouteActionWeightedBackendServicesObservation) DeepCopyInto(out *PathMatcherRouteRulesRouteActionWeightedBackendServicesObservation) {
	*out = *in
	if in.BackendService != nil {
		in, out := &in.BackendService, &out.BackendService
		*out = new(string)
		**out = **in
	}
	if in.HeaderAction != nil {
		in, out := &in.HeaderAction, &out.HeaderAction
		*out = make([]RouteRulesRouteActionWeightedBackendServicesHeaderActionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Weight != nil {
		in, out := &in.Weight, &out.Weight
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PathMatcherRouteRulesRouteActionWeightedBackendServicesObservation.
func (in *PathMatcherRouteRulesRouteActionWeightedBackendServicesObservation) DeepCopy() *PathMatcherRouteRulesRouteActionWeightedBackendServicesObservation {
	if in == nil {
		return nil
	}
	out := new(PathMatcherRouteRulesRouteActionWeightedBackendServicesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PathMatcherRouteRulesRouteActionWeightedBackendServicesParameters) DeepCopyInto(out *PathMatcherRouteRulesRouteActionWeightedBackendServicesParameters) {
	*out = *in
	if in.BackendService != nil {
		in, out := &in.BackendService, &out.BackendService
		*out = new(string)
		**out = **in
	}
	if in.HeaderAction != nil {
		in, out := &in.HeaderAction, &out.HeaderAction
		*out = make([]RouteRulesRouteActionWeightedBackendServicesHeaderActionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Weight != nil {
		in, out := &in.Weight, &out.Weight
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PathMatcherRouteRulesRouteActionWeightedBackendServicesParameters.
func (in *PathMatcherRouteRulesRouteActionWeightedBackendServicesParameters) DeepCopy() *PathMatcherRouteRulesRouteActionWeightedBackendServicesParameters {
	if in == nil {
		return nil
	}
	out := new(PathMatcherRouteRulesRouteActionWeightedBackendServicesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PathMatcherRouteRulesURLRedirectInitParameters) DeepCopyInto(out *PathMatcherRouteRulesURLRedirectInitParameters) {
	*out = *in
	if in.HTTPSRedirect != nil {
		in, out := &in.HTTPSRedirect, &out.HTTPSRedirect
		*out = new(bool)
		**out = **in
	}
	if in.HostRedirect != nil {
		in, out := &in.HostRedirect, &out.HostRedirect
		*out = new(string)
		**out = **in
	}
	if in.PathRedirect != nil {
		in, out := &in.PathRedirect, &out.PathRedirect
		*out = new(string)
		**out = **in
	}
	if in.PrefixRedirect != nil {
		in, out := &in.PrefixRedirect, &out.PrefixRedirect
		*out = new(string)
		**out = **in
	}
	if in.RedirectResponseCode != nil {
		in, out := &in.RedirectResponseCode, &out.RedirectResponseCode
		*out = new(string)
		**out = **in
	}
	if in.StripQuery != nil {
		in, out := &in.StripQuery, &out.StripQuery
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PathMatcherRouteRulesURLRedirectInitParameters.
func (in *PathMatcherRouteRulesURLRedirectInitParameters) DeepCopy() *PathMatcherRouteRulesURLRedirectInitParameters {
	if in == nil {
		return nil
	}
	out := new(PathMatcherRouteRulesURLRedirectInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PathMatcherRouteRulesURLRedirectObservation) DeepCopyInto(out *PathMatcherRouteRulesURLRedirectObservation) {
	*out = *in
	if in.HTTPSRedirect != nil {
		in, out := &in.HTTPSRedirect, &out.HTTPSRedirect
		*out = new(bool)
		**out = **in
	}
	if in.HostRedirect != nil {
		in, out := &in.HostRedirect, &out.HostRedirect
		*out = new(string)
		**out = **in
	}
	if in.PathRedirect != nil {
		in, out := &in.PathRedirect, &out.PathRedirect
		*out = new(string)
		**out = **in
	}
	if in.PrefixRedirect != nil {
		in, out := &in.PrefixRedirect, &out.PrefixRedirect
		*out = new(string)
		**out = **in
	}
	if in.RedirectResponseCode != nil {
		in, out := &in.RedirectResponseCode, &out.RedirectResponseCode
		*out = new(string)
		**out = **in
	}
	if in.StripQuery != nil {
		in, out := &in.StripQuery, &out.StripQuery
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PathMatcherRouteRulesURLRedirectObservation.
func (in *PathMatcherRouteRulesURLRedirectObservation) DeepCopy() *PathMatcherRouteRulesURLRedirectObservation {
	if in == nil {
		return nil
	}
	out := new(PathMatcherRouteRulesURLRedirectObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PathMatcherRouteRulesURLRedirectParameters) DeepCopyInto(out *PathMatcherRouteRulesURLRedirectParameters) {
	*out = *in
	if in.HTTPSRedirect != nil {
		in, out := &in.HTTPSRedirect, &out.HTTPSRedirect
		*out = new(bool)
		**out = **in
	}
	if in.HostRedirect != nil {
		in, out := &in.HostRedirect, &out.HostRedirect
		*out = new(string)
		**out = **in
	}
	if in.PathRedirect != nil {
		in, out := &in.PathRedirect, &out.PathRedirect
		*out = new(string)
		**out = **in
	}
	if in.PrefixRedirect != nil {
		in, out := &in.PrefixRedirect, &out.PrefixRedirect
		*out = new(string)
		**out = **in
	}
	if in.RedirectResponseCode != nil {
		in, out := &in.RedirectResponseCode, &out.RedirectResponseCode
		*out = new(string)
		**out = **in
	}
	if in.StripQuery != nil {
		in, out := &in.StripQuery, &out.StripQuery
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PathMatcherRouteRulesURLRedirectParameters.
func (in *PathMatcherRouteRulesURLRedirectParameters) DeepCopy() *PathMatcherRouteRulesURLRedirectParameters {
	if in == nil {
		return nil
	}
	out := new(PathMatcherRouteRulesURLRedirectParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PathRuleInitParameters) DeepCopyInto(out *PathRuleInitParameters) {
	*out = *in
	if in.Paths != nil {
		in, out := &in.Paths, &out.Paths
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.RouteAction != nil {
		in, out := &in.RouteAction, &out.RouteAction
		*out = make([]RouteActionInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Service != nil {
		in, out := &in.Service, &out.Service
		*out = new(string)
		**out = **in
	}
	if in.ServiceRef != nil {
		in, out := &in.ServiceRef, &out.ServiceRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ServiceSelector != nil {
		in, out := &in.ServiceSelector, &out.ServiceSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.URLRedirect != nil {
		in, out := &in.URLRedirect, &out.URLRedirect
		*out = make([]URLRedirectInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PathRuleInitParameters.
func (in *PathRuleInitParameters) DeepCopy() *PathRuleInitParameters {
	if in == nil {
		return nil
	}
	out := new(PathRuleInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PathRuleObservation) DeepCopyInto(out *PathRuleObservation) {
	*out = *in
	if in.Paths != nil {
		in, out := &in.Paths, &out.Paths
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.RouteAction != nil {
		in, out := &in.RouteAction, &out.RouteAction
		*out = make([]RouteActionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Service != nil {
		in, out := &in.Service, &out.Service
		*out = new(string)
		**out = **in
	}
	if in.URLRedirect != nil {
		in, out := &in.URLRedirect, &out.URLRedirect
		*out = make([]URLRedirectObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PathRuleObservation.
func (in *PathRuleObservation) DeepCopy() *PathRuleObservation {
	if in == nil {
		return nil
	}
	out := new(PathRuleObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PathRuleParameters) DeepCopyInto(out *PathRuleParameters) {
	*out = *in
	if in.Paths != nil {
		in, out := &in.Paths, &out.Paths
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.RouteAction != nil {
		in, out := &in.RouteAction, &out.RouteAction
		*out = make([]RouteActionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Service != nil {
		in, out := &in.Service, &out.Service
		*out = new(string)
		**out = **in
	}
	if in.ServiceRef != nil {
		in, out := &in.ServiceRef, &out.ServiceRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ServiceSelector != nil {
		in, out := &in.ServiceSelector, &out.ServiceSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.URLRedirect != nil {
		in, out := &in.URLRedirect, &out.URLRedirect
		*out = make([]URLRedirectParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PathRuleParameters.
func (in *PathRuleParameters) DeepCopy() *PathRuleParameters {
	if in == nil {
		return nil
	}
	out := new(PathRuleParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PathRuleRouteActionCorsPolicyInitParameters) DeepCopyInto(out *PathRuleRouteActionCorsPolicyInitParameters) {
	*out = *in
	if in.AllowCredentials != nil {
		in, out := &in.AllowCredentials, &out.AllowCredentials
		*out = new(bool)
		**out = **in
	}
	if in.AllowHeaders != nil {
		in, out := &in.AllowHeaders, &out.AllowHeaders
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AllowMethods != nil {
		in, out := &in.AllowMethods, &out.AllowMethods
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AllowOriginRegexes != nil {
		in, out := &in.AllowOriginRegexes, &out.AllowOriginRegexes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AllowOrigins != nil {
		in, out := &in.AllowOrigins, &out.AllowOrigins
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Disabled != nil {
		in, out := &in.Disabled, &out.Disabled
		*out = new(bool)
		**out = **in
	}
	if in.ExposeHeaders != nil {
		in, out := &in.ExposeHeaders, &out.ExposeHeaders
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.MaxAge != nil {
		in, out := &in.MaxAge, &out.MaxAge
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PathRuleRouteActionCorsPolicyInitParameters.
func (in *PathRuleRouteActionCorsPolicyInitParameters) DeepCopy() *PathRuleRouteActionCorsPolicyInitParameters {
	if in == nil {
		return nil
	}
	out := new(PathRuleRouteActionCorsPolicyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PathRuleRouteActionCorsPolicyObservation) DeepCopyInto(out *PathRuleRouteActionCorsPolicyObservation) {
	*out = *in
	if in.AllowCredentials != nil {
		in, out := &in.AllowCredentials, &out.AllowCredentials
		*out = new(bool)
		**out = **in
	}
	if in.AllowHeaders != nil {
		in, out := &in.AllowHeaders, &out.AllowHeaders
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AllowMethods != nil {
		in, out := &in.AllowMethods, &out.AllowMethods
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AllowOriginRegexes != nil {
		in, out := &in.AllowOriginRegexes, &out.AllowOriginRegexes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AllowOrigins != nil {
		in, out := &in.AllowOrigins, &out.AllowOrigins
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Disabled != nil {
		in, out := &in.Disabled, &out.Disabled
		*out = new(bool)
		**out = **in
	}
	if in.ExposeHeaders != nil {
		in, out := &in.ExposeHeaders, &out.ExposeHeaders
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.MaxAge != nil {
		in, out := &in.MaxAge, &out.MaxAge
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PathRuleRouteActionCorsPolicyObservation.
func (in *PathRuleRouteActionCorsPolicyObservation) DeepCopy() *PathRuleRouteActionCorsPolicyObservation {
	if in == nil {
		return nil
	}
	out := new(PathRuleRouteActionCorsPolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PathRuleRouteActionCorsPolicyParameters) DeepCopyInto(out *PathRuleRouteActionCorsPolicyParameters) {
	*out = *in
	if in.AllowCredentials != nil {
		in, out := &in.AllowCredentials, &out.AllowCredentials
		*out = new(bool)
		**out = **in
	}
	if in.AllowHeaders != nil {
		in, out := &in.AllowHeaders, &out.AllowHeaders
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AllowMethods != nil {
		in, out := &in.AllowMethods, &out.AllowMethods
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AllowOriginRegexes != nil {
		in, out := &in.AllowOriginRegexes, &out.AllowOriginRegexes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AllowOrigins != nil {
		in, out := &in.AllowOrigins, &out.AllowOrigins
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Disabled != nil {
		in, out := &in.Disabled, &out.Disabled
		*out = new(bool)
		**out = **in
	}
	if in.ExposeHeaders != nil {
		in, out := &in.ExposeHeaders, &out.ExposeHeaders
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.MaxAge != nil {
		in, out := &in.MaxAge, &out.MaxAge
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PathRuleRouteActionCorsPolicyParameters.
func (in *PathRuleRouteActionCorsPolicyParameters) DeepCopy() *PathRuleRouteActionCorsPolicyParameters {
	if in == nil {
		return nil
	}
	out := new(PathRuleRouteActionCorsPolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PathRuleRouteActionFaultInjectionPolicyAbortInitParameters) DeepCopyInto(out *PathRuleRouteActionFaultInjectionPolicyAbortInitParameters) {
	*out = *in
	if in.HTTPStatus != nil {
		in, out := &in.HTTPStatus, &out.HTTPStatus
		*out = new(float64)
		**out = **in
	}
	if in.Percentage != nil {
		in, out := &in.Percentage, &out.Percentage
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PathRuleRouteActionFaultInjectionPolicyAbortInitParameters.
func (in *PathRuleRouteActionFaultInjectionPolicyAbortInitParameters) DeepCopy() *PathRuleRouteActionFaultInjectionPolicyAbortInitParameters {
	if in == nil {
		return nil
	}
	out := new(PathRuleRouteActionFaultInjectionPolicyAbortInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PathRuleRouteActionFaultInjectionPolicyAbortObservation) DeepCopyInto(out *PathRuleRouteActionFaultInjectionPolicyAbortObservation) {
	*out = *in
	if in.HTTPStatus != nil {
		in, out := &in.HTTPStatus, &out.HTTPStatus
		*out = new(float64)
		**out = **in
	}
	if in.Percentage != nil {
		in, out := &in.Percentage, &out.Percentage
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PathRuleRouteActionFaultInjectionPolicyAbortObservation.
func (in *PathRuleRouteActionFaultInjectionPolicyAbortObservation) DeepCopy() *PathRuleRouteActionFaultInjectionPolicyAbortObservation {
	if in == nil {
		return nil
	}
	out := new(PathRuleRouteActionFaultInjectionPolicyAbortObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PathRuleRouteActionFaultInjectionPolicyAbortParameters) DeepCopyInto(out *PathRuleRouteActionFaultInjectionPolicyAbortParameters) {
	*out = *in
	if in.HTTPStatus != nil {
		in, out := &in.HTTPStatus, &out.HTTPStatus
		*out = new(float64)
		**out = **in
	}
	if in.Percentage != nil {
		in, out := &in.Percentage, &out.Percentage
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PathRuleRouteActionFaultInjectionPolicyAbortParameters.
func (in *PathRuleRouteActionFaultInjectionPolicyAbortParameters) DeepCopy() *PathRuleRouteActionFaultInjectionPolicyAbortParameters {
	if in == nil {
		return nil
	}
	out := new(PathRuleRouteActionFaultInjectionPolicyAbortParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PathRuleRouteActionFaultInjectionPolicyDelayInitParameters) DeepCopyInto(out *PathRuleRouteActionFaultInjectionPolicyDelayInitParameters) {
	*out = *in
	if in.FixedDelay != nil {
		in, out := &in.FixedDelay, &out.FixedDelay
		*out = make([]RouteActionFaultInjectionPolicyDelayFixedDelayInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Percentage != nil {
		in, out := &in.Percentage, &out.Percentage
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PathRuleRouteActionFaultInjectionPolicyDelayInitParameters.
func (in *PathRuleRouteActionFaultInjectionPolicyDelayInitParameters) DeepCopy() *PathRuleRouteActionFaultInjectionPolicyDelayInitParameters {
	if in == nil {
		return nil
	}
	out := new(PathRuleRouteActionFaultInjectionPolicyDelayInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PathRuleRouteActionFaultInjectionPolicyDelayObservation) DeepCopyInto(out *PathRuleRouteActionFaultInjectionPolicyDelayObservation) {
	*out = *in
	if in.FixedDelay != nil {
		in, out := &in.FixedDelay, &out.FixedDelay
		*out = make([]RouteActionFaultInjectionPolicyDelayFixedDelayObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Percentage != nil {
		in, out := &in.Percentage, &out.Percentage
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PathRuleRouteActionFaultInjectionPolicyDelayObservation.
func (in *PathRuleRouteActionFaultInjectionPolicyDelayObservation) DeepCopy() *PathRuleRouteActionFaultInjectionPolicyDelayObservation {
	if in == nil {
		return nil
	}
	out := new(PathRuleRouteActionFaultInjectionPolicyDelayObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PathRuleRouteActionFaultInjectionPolicyDelayParameters) DeepCopyInto(out *PathRuleRouteActionFaultInjectionPolicyDelayParameters) {
	*out = *in
	if in.FixedDelay != nil {
		in, out := &in.FixedDelay, &out.FixedDelay
		*out = make([]RouteActionFaultInjectionPolicyDelayFixedDelayParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Percentage != nil {
		in, out := &in.Percentage, &out.Percentage
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PathRuleRouteActionFaultInjectionPolicyDelayParameters.
func (in *PathRuleRouteActionFaultInjectionPolicyDelayParameters) DeepCopy() *PathRuleRouteActionFaultInjectionPolicyDelayParameters {
	if in == nil {
		return nil
	}
	out := new(PathRuleRouteActionFaultInjectionPolicyDelayParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PathRuleRouteActionFaultInjectionPolicyInitParameters) DeepCopyInto(out *PathRuleRouteActionFaultInjectionPolicyInitParameters) {
	*out = *in
	if in.Abort != nil {
		in, out := &in.Abort, &out.Abort
		*out = make([]PathRuleRouteActionFaultInjectionPolicyAbortInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Delay != nil {
		in, out := &in.Delay, &out.Delay
		*out = make([]PathRuleRouteActionFaultInjectionPolicyDelayInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PathRuleRouteActionFaultInjectionPolicyInitParameters.
func (in *PathRuleRouteActionFaultInjectionPolicyInitParameters) DeepCopy() *PathRuleRouteActionFaultInjectionPolicyInitParameters {
	if in == nil {
		return nil
	}
	out := new(PathRuleRouteActionFaultInjectionPolicyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PathRuleRouteActionFaultInjectionPolicyObservation) DeepCopyInto(out *PathRuleRouteActionFaultInjectionPolicyObservation) {
	*out = *in
	if in.Abort != nil {
		in, out := &in.Abort, &out.Abort
		*out = make([]PathRuleRouteActionFaultInjectionPolicyAbortObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Delay != nil {
		in, out := &in.Delay, &out.Delay
		*out = make([]PathRuleRouteActionFaultInjectionPolicyDelayObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PathRuleRouteActionFaultInjectionPolicyObservation.
func (in *PathRuleRouteActionFaultInjectionPolicyObservation) DeepCopy() *PathRuleRouteActionFaultInjectionPolicyObservation {
	if in == nil {
		return nil
	}
	out := new(PathRuleRouteActionFaultInjectionPolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PathRuleRouteActionFaultInjectionPolicyParameters) DeepCopyInto(out *PathRuleRouteActionFaultInjectionPolicyParameters) {
	*out = *in
	if in.Abort != nil {
		in, out := &in.Abort, &out.Abort
		*out = make([]PathRuleRouteActionFaultInjectionPolicyAbortParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Delay != nil {
		in, out := &in.Delay, &out.Delay
		*out = make([]PathRuleRouteActionFaultInjectionPolicyDelayParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PathRuleRouteActionFaultInjectionPolicyParameters.
func (in *PathRuleRouteActionFaultInjectionPolicyParameters) DeepCopy() *PathRuleRouteActionFaultInjectionPolicyParameters {
	if in == nil {
		return nil
	}
	out := new(PathRuleRouteActionFaultInjectionPolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PathRuleRouteActionInitParameters) DeepCopyInto(out *PathRuleRouteActionInitParameters) {
	*out = *in
	if in.CorsPolicy != nil {
		in, out := &in.CorsPolicy, &out.CorsPolicy
		*out = make([]PathRuleRouteActionCorsPolicyInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.FaultInjectionPolicy != nil {
		in, out := &in.FaultInjectionPolicy, &out.FaultInjectionPolicy
		*out = make([]PathRuleRouteActionFaultInjectionPolicyInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RequestMirrorPolicy != nil {
		in, out := &in.RequestMirrorPolicy, &out.RequestMirrorPolicy
		*out = make([]PathRuleRouteActionRequestMirrorPolicyInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RetryPolicy != nil {
		in, out := &in.RetryPolicy, &out.RetryPolicy
		*out = make([]PathRuleRouteActionRetryPolicyInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Timeout != nil {
		in, out := &in.Timeout, &out.Timeout
		*out = make([]PathRuleRouteActionTimeoutInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.URLRewrite != nil {
		in, out := &in.URLRewrite, &out.URLRewrite
		*out = make([]PathRuleRouteActionURLRewriteInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.WeightedBackendServices != nil {
		in, out := &in.WeightedBackendServices, &out.WeightedBackendServices
		*out = make([]PathRuleRouteActionWeightedBackendServicesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PathRuleRouteActionInitParameters.
func (in *PathRuleRouteActionInitParameters) DeepCopy() *PathRuleRouteActionInitParameters {
	if in == nil {
		return nil
	}
	out := new(PathRuleRouteActionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PathRuleRouteActionObservation) DeepCopyInto(out *PathRuleRouteActionObservation) {
	*out = *in
	if in.CorsPolicy != nil {
		in, out := &in.CorsPolicy, &out.CorsPolicy
		*out = make([]PathRuleRouteActionCorsPolicyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.FaultInjectionPolicy != nil {
		in, out := &in.FaultInjectionPolicy, &out.FaultInjectionPolicy
		*out = make([]PathRuleRouteActionFaultInjectionPolicyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RequestMirrorPolicy != nil {
		in, out := &in.RequestMirrorPolicy, &out.RequestMirrorPolicy
		*out = make([]PathRuleRouteActionRequestMirrorPolicyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RetryPolicy != nil {
		in, out := &in.RetryPolicy, &out.RetryPolicy
		*out = make([]PathRuleRouteActionRetryPolicyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Timeout != nil {
		in, out := &in.Timeout, &out.Timeout
		*out = make([]PathRuleRouteActionTimeoutObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.URLRewrite != nil {
		in, out := &in.URLRewrite, &out.URLRewrite
		*out = make([]PathRuleRouteActionURLRewriteObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.WeightedBackendServices != nil {
		in, out := &in.WeightedBackendServices, &out.WeightedBackendServices
		*out = make([]PathRuleRouteActionWeightedBackendServicesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PathRuleRouteActionObservation.
func (in *PathRuleRouteActionObservation) DeepCopy() *PathRuleRouteActionObservation {
	if in == nil {
		return nil
	}
	out := new(PathRuleRouteActionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PathRuleRouteActionParameters) DeepCopyInto(out *PathRuleRouteActionParameters) {
	*out = *in
	if in.CorsPolicy != nil {
		in, out := &in.CorsPolicy, &out.CorsPolicy
		*out = make([]PathRuleRouteActionCorsPolicyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.FaultInjectionPolicy != nil {
		in, out := &in.FaultInjectionPolicy, &out.FaultInjectionPolicy
		*out = make([]PathRuleRouteActionFaultInjectionPolicyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RequestMirrorPolicy != nil {
		in, out := &in.RequestMirrorPolicy, &out.RequestMirrorPolicy
		*out = make([]PathRuleRouteActionRequestMirrorPolicyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RetryPolicy != nil {
		in, out := &in.RetryPolicy, &out.RetryPolicy
		*out = make([]PathRuleRouteActionRetryPolicyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Timeout != nil {
		in, out := &in.Timeout, &out.Timeout
		*out = make([]PathRuleRouteActionTimeoutParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.URLRewrite != nil {
		in, out := &in.URLRewrite, &out.URLRewrite
		*out = make([]PathRuleRouteActionURLRewriteParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.WeightedBackendServices != nil {
		in, out := &in.WeightedBackendServices, &out.WeightedBackendServices
		*out = make([]PathRuleRouteActionWeightedBackendServicesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PathRuleRouteActionParameters.
func (in *PathRuleRouteActionParameters) DeepCopy() *PathRuleRouteActionParameters {
	if in == nil {
		return nil
	}
	out := new(PathRuleRouteActionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PathRuleRouteActionRequestMirrorPolicyInitParameters) DeepCopyInto(out *PathRuleRouteActionRequestMirrorPolicyInitParameters) {
	*out = *in
	if in.BackendService != nil {
		in, out := &in.BackendService, &out.BackendService
		*out = new(string)
		**out = **in
	}
	if in.BackendServiceRef != nil {
		in, out := &in.BackendServiceRef, &out.BackendServiceRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.BackendServiceSelector != nil {
		in, out := &in.BackendServiceSelector, &out.BackendServiceSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PathRuleRouteActionRequestMirrorPolicyInitParameters.
func (in *PathRuleRouteActionRequestMirrorPolicyInitParameters) DeepCopy() *PathRuleRouteActionRequestMirrorPolicyInitParameters {
	if in == nil {
		return nil
	}
	out := new(PathRuleRouteActionRequestMirrorPolicyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PathRuleRouteActionRequestMirrorPolicyObservation) DeepCopyInto(out *PathRuleRouteActionRequestMirrorPolicyObservation) {
	*out = *in
	if in.BackendService != nil {
		in, out := &in.BackendService, &out.BackendService
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PathRuleRouteActionRequestMirrorPolicyObservation.
func (in *PathRuleRouteActionRequestMirrorPolicyObservation) DeepCopy() *PathRuleRouteActionRequestMirrorPolicyObservation {
	if in == nil {
		return nil
	}
	out := new(PathRuleRouteActionRequestMirrorPolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PathRuleRouteActionRequestMirrorPolicyParameters) DeepCopyInto(out *PathRuleRouteActionRequestMirrorPolicyParameters) {
	*out = *in
	if in.BackendService != nil {
		in, out := &in.BackendService, &out.BackendService
		*out = new(string)
		**out = **in
	}
	if in.BackendServiceRef != nil {
		in, out := &in.BackendServiceRef, &out.BackendServiceRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.BackendServiceSelector != nil {
		in, out := &in.BackendServiceSelector, &out.BackendServiceSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PathRuleRouteActionRequestMirrorPolicyParameters.
func (in *PathRuleRouteActionRequestMirrorPolicyParameters) DeepCopy() *PathRuleRouteActionRequestMirrorPolicyParameters {
	if in == nil {
		return nil
	}
	out := new(PathRuleRouteActionRequestMirrorPolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PathRuleRouteActionRetryPolicyInitParameters) DeepCopyInto(out *PathRuleRouteActionRetryPolicyInitParameters) {
	*out = *in
	if in.NumRetries != nil {
		in, out := &in.NumRetries, &out.NumRetries
		*out = new(float64)
		**out = **in
	}
	if in.PerTryTimeout != nil {
		in, out := &in.PerTryTimeout, &out.PerTryTimeout
		*out = make([]PathRuleRouteActionRetryPolicyPerTryTimeoutInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RetryConditions != nil {
		in, out := &in.RetryConditions, &out.RetryConditions
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PathRuleRouteActionRetryPolicyInitParameters.
func (in *PathRuleRouteActionRetryPolicyInitParameters) DeepCopy() *PathRuleRouteActionRetryPolicyInitParameters {
	if in == nil {
		return nil
	}
	out := new(PathRuleRouteActionRetryPolicyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PathRuleRouteActionRetryPolicyObservation) DeepCopyInto(out *PathRuleRouteActionRetryPolicyObservation) {
	*out = *in
	if in.NumRetries != nil {
		in, out := &in.NumRetries, &out.NumRetries
		*out = new(float64)
		**out = **in
	}
	if in.PerTryTimeout != nil {
		in, out := &in.PerTryTimeout, &out.PerTryTimeout
		*out = make([]PathRuleRouteActionRetryPolicyPerTryTimeoutObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RetryConditions != nil {
		in, out := &in.RetryConditions, &out.RetryConditions
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PathRuleRouteActionRetryPolicyObservation.
func (in *PathRuleRouteActionRetryPolicyObservation) DeepCopy() *PathRuleRouteActionRetryPolicyObservation {
	if in == nil {
		return nil
	}
	out := new(PathRuleRouteActionRetryPolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PathRuleRouteActionRetryPolicyParameters) DeepCopyInto(out *PathRuleRouteActionRetryPolicyParameters) {
	*out = *in
	if in.NumRetries != nil {
		in, out := &in.NumRetries, &out.NumRetries
		*out = new(float64)
		**out = **in
	}
	if in.PerTryTimeout != nil {
		in, out := &in.PerTryTimeout, &out.PerTryTimeout
		*out = make([]PathRuleRouteActionRetryPolicyPerTryTimeoutParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RetryConditions != nil {
		in, out := &in.RetryConditions, &out.RetryConditions
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PathRuleRouteActionRetryPolicyParameters.
func (in *PathRuleRouteActionRetryPolicyParameters) DeepCopy() *PathRuleRouteActionRetryPolicyParameters {
	if in == nil {
		return nil
	}
	out := new(PathRuleRouteActionRetryPolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PathRuleRouteActionRetryPolicyPerTryTimeoutInitParameters) DeepCopyInto(out *PathRuleRouteActionRetryPolicyPerTryTimeoutInitParameters) {
	*out = *in
	if in.Nanos != nil {
		in, out := &in.Nanos, &out.Nanos
		*out = new(float64)
		**out = **in
	}
	if in.Seconds != nil {
		in, out := &in.Seconds, &out.Seconds
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PathRuleRouteActionRetryPolicyPerTryTimeoutInitParameters.
func (in *PathRuleRouteActionRetryPolicyPerTryTimeoutInitParameters) DeepCopy() *PathRuleRouteActionRetryPolicyPerTryTimeoutInitParameters {
	if in == nil {
		return nil
	}
	out := new(PathRuleRouteActionRetryPolicyPerTryTimeoutInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PathRuleRouteActionRetryPolicyPerTryTimeoutObservation) DeepCopyInto(out *PathRuleRouteActionRetryPolicyPerTryTimeoutObservation) {
	*out = *in
	if in.Nanos != nil {
		in, out := &in.Nanos, &out.Nanos
		*out = new(float64)
		**out = **in
	}
	if in.Seconds != nil {
		in, out := &in.Seconds, &out.Seconds
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PathRuleRouteActionRetryPolicyPerTryTimeoutObservation.
func (in *PathRuleRouteActionRetryPolicyPerTryTimeoutObservation) DeepCopy() *PathRuleRouteActionRetryPolicyPerTryTimeoutObservation {
	if in == nil {
		return nil
	}
	out := new(PathRuleRouteActionRetryPolicyPerTryTimeoutObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PathRuleRouteActionRetryPolicyPerTryTimeoutParameters) DeepCopyInto(out *PathRuleRouteActionRetryPolicyPerTryTimeoutParameters) {
	*out = *in
	if in.Nanos != nil {
		in, out := &in.Nanos, &out.Nanos
		*out = new(float64)
		**out = **in
	}
	if in.Seconds != nil {
		in, out := &in.Seconds, &out.Seconds
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PathRuleRouteActionRetryPolicyPerTryTimeoutParameters.
func (in *PathRuleRouteActionRetryPolicyPerTryTimeoutParameters) DeepCopy() *PathRuleRouteActionRetryPolicyPerTryTimeoutParameters {
	if in == nil {
		return nil
	}
	out := new(PathRuleRouteActionRetryPolicyPerTryTimeoutParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PathRuleRouteActionTimeoutInitParameters) DeepCopyInto(out *PathRuleRouteActionTimeoutInitParameters) {
	*out = *in
	if in.Nanos != nil {
		in, out := &in.Nanos, &out.Nanos
		*out = new(float64)
		**out = **in
	}
	if in.Seconds != nil {
		in, out := &in.Seconds, &out.Seconds
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PathRuleRouteActionTimeoutInitParameters.
func (in *PathRuleRouteActionTimeoutInitParameters) DeepCopy() *PathRuleRouteActionTimeoutInitParameters {
	if in == nil {
		return nil
	}
	out := new(PathRuleRouteActionTimeoutInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PathRuleRouteActionTimeoutObservation) DeepCopyInto(out *PathRuleRouteActionTimeoutObservation) {
	*out = *in
	if in.Nanos != nil {
		in, out := &in.Nanos, &out.Nanos
		*out = new(float64)
		**out = **in
	}
	if in.Seconds != nil {
		in, out := &in.Seconds, &out.Seconds
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PathRuleRouteActionTimeoutObservation.
func (in *PathRuleRouteActionTimeoutObservation) DeepCopy() *PathRuleRouteActionTimeoutObservation {
	if in == nil {
		return nil
	}
	out := new(PathRuleRouteActionTimeoutObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PathRuleRouteActionTimeoutParameters) DeepCopyInto(out *PathRuleRouteActionTimeoutParameters) {
	*out = *in
	if in.Nanos != nil {
		in, out := &in.Nanos, &out.Nanos
		*out = new(float64)
		**out = **in
	}
	if in.Seconds != nil {
		in, out := &in.Seconds, &out.Seconds
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PathRuleRouteActionTimeoutParameters.
func (in *PathRuleRouteActionTimeoutParameters) DeepCopy() *PathRuleRouteActionTimeoutParameters {
	if in == nil {
		return nil
	}
	out := new(PathRuleRouteActionTimeoutParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PathRuleRouteActionURLRewriteInitParameters) DeepCopyInto(out *PathRuleRouteActionURLRewriteInitParameters) {
	*out = *in
	if in.HostRewrite != nil {
		in, out := &in.HostRewrite, &out.HostRewrite
		*out = new(string)
		**out = **in
	}
	if in.PathPrefixRewrite != nil {
		in, out := &in.PathPrefixRewrite, &out.PathPrefixRewrite
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PathRuleRouteActionURLRewriteInitParameters.
func (in *PathRuleRouteActionURLRewriteInitParameters) DeepCopy() *PathRuleRouteActionURLRewriteInitParameters {
	if in == nil {
		return nil
	}
	out := new(PathRuleRouteActionURLRewriteInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PathRuleRouteActionURLRewriteObservation) DeepCopyInto(out *PathRuleRouteActionURLRewriteObservation) {
	*out = *in
	if in.HostRewrite != nil {
		in, out := &in.HostRewrite, &out.HostRewrite
		*out = new(string)
		**out = **in
	}
	if in.PathPrefixRewrite != nil {
		in, out := &in.PathPrefixRewrite, &out.PathPrefixRewrite
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PathRuleRouteActionURLRewriteObservation.
func (in *PathRuleRouteActionURLRewriteObservation) DeepCopy() *PathRuleRouteActionURLRewriteObservation {
	if in == nil {
		return nil
	}
	out := new(PathRuleRouteActionURLRewriteObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PathRuleRouteActionURLRewriteParameters) DeepCopyInto(out *PathRuleRouteActionURLRewriteParameters) {
	*out = *in
	if in.HostRewrite != nil {
		in, out := &in.HostRewrite, &out.HostRewrite
		*out = new(string)
		**out = **in
	}
	if in.PathPrefixRewrite != nil {
		in, out := &in.PathPrefixRewrite, &out.PathPrefixRewrite
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PathRuleRouteActionURLRewriteParameters.
func (in *PathRuleRouteActionURLRewriteParameters) DeepCopy() *PathRuleRouteActionURLRewriteParameters {
	if in == nil {
		return nil
	}
	out := new(PathRuleRouteActionURLRewriteParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PathRuleRouteActionWeightedBackendServicesHeaderActionInitParameters) DeepCopyInto(out *PathRuleRouteActionWeightedBackendServicesHeaderActionInitParameters) {
	*out = *in
	if in.RequestHeadersToAdd != nil {
		in, out := &in.RequestHeadersToAdd, &out.RequestHeadersToAdd
		*out = make([]RouteActionWeightedBackendServicesHeaderActionRequestHeadersToAddInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RequestHeadersToRemove != nil {
		in, out := &in.RequestHeadersToRemove, &out.RequestHeadersToRemove
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ResponseHeadersToAdd != nil {
		in, out := &in.ResponseHeadersToAdd, &out.ResponseHeadersToAdd
		*out = make([]RouteActionWeightedBackendServicesHeaderActionResponseHeadersToAddInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ResponseHeadersToRemove != nil {
		in, out := &in.ResponseHeadersToRemove, &out.ResponseHeadersToRemove
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PathRuleRouteActionWeightedBackendServicesHeaderActionInitParameters.
func (in *PathRuleRouteActionWeightedBackendServicesHeaderActionInitParameters) DeepCopy() *PathRuleRouteActionWeightedBackendServicesHeaderActionInitParameters {
	if in == nil {
		return nil
	}
	out := new(PathRuleRouteActionWeightedBackendServicesHeaderActionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PathRuleRouteActionWeightedBackendServicesHeaderActionObservation) DeepCopyInto(out *PathRuleRouteActionWeightedBackendServicesHeaderActionObservation) {
	*out = *in
	if in.RequestHeadersToAdd != nil {
		in, out := &in.RequestHeadersToAdd, &out.RequestHeadersToAdd
		*out = make([]RouteActionWeightedBackendServicesHeaderActionRequestHeadersToAddObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RequestHeadersToRemove != nil {
		in, out := &in.RequestHeadersToRemove, &out.RequestHeadersToRemove
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ResponseHeadersToAdd != nil {
		in, out := &in.ResponseHeadersToAdd, &out.ResponseHeadersToAdd
		*out = make([]RouteActionWeightedBackendServicesHeaderActionResponseHeadersToAddObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ResponseHeadersToRemove != nil {
		in, out := &in.ResponseHeadersToRemove, &out.ResponseHeadersToRemove
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PathRuleRouteActionWeightedBackendServicesHeaderActionObservation.
func (in *PathRuleRouteActionWeightedBackendServicesHeaderActionObservation) DeepCopy() *PathRuleRouteActionWeightedBackendServicesHeaderActionObservation {
	if in == nil {
		return nil
	}
	out := new(PathRuleRouteActionWeightedBackendServicesHeaderActionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PathRuleRouteActionWeightedBackendServicesHeaderActionParameters) DeepCopyInto(out *PathRuleRouteActionWeightedBackendServicesHeaderActionParameters) {
	*out = *in
	if in.RequestHeadersToAdd != nil {
		in, out := &in.RequestHeadersToAdd, &out.RequestHeadersToAdd
		*out = make([]RouteActionWeightedBackendServicesHeaderActionRequestHeadersToAddParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RequestHeadersToRemove != nil {
		in, out := &in.RequestHeadersToRemove, &out.RequestHeadersToRemove
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ResponseHeadersToAdd != nil {
		in, out := &in.ResponseHeadersToAdd, &out.ResponseHeadersToAdd
		*out = make([]RouteActionWeightedBackendServicesHeaderActionResponseHeadersToAddParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ResponseHeadersToRemove != nil {
		in, out := &in.ResponseHeadersToRemove, &out.ResponseHeadersToRemove
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PathRuleRouteActionWeightedBackendServicesHeaderActionParameters.
func (in *PathRuleRouteActionWeightedBackendServicesHeaderActionParameters) DeepCopy() *PathRuleRouteActionWeightedBackendServicesHeaderActionParameters {
	if in == nil {
		return nil
	}
	out := new(PathRuleRouteActionWeightedBackendServicesHeaderActionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PathRuleRouteActionWeightedBackendServicesInitParameters) DeepCopyInto(out *PathRuleRouteActionWeightedBackendServicesInitParameters) {
	*out = *in
	if in.BackendService != nil {
		in, out := &in.BackendService, &out.BackendService
		*out = new(string)
		**out = **in
	}
	if in.BackendServiceRef != nil {
		in, out := &in.BackendServiceRef, &out.BackendServiceRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.BackendServiceSelector != nil {
		in, out := &in.BackendServiceSelector, &out.BackendServiceSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.HeaderAction != nil {
		in, out := &in.HeaderAction, &out.HeaderAction
		*out = make([]PathRuleRouteActionWeightedBackendServicesHeaderActionInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Weight != nil {
		in, out := &in.Weight, &out.Weight
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PathRuleRouteActionWeightedBackendServicesInitParameters.
func (in *PathRuleRouteActionWeightedBackendServicesInitParameters) DeepCopy() *PathRuleRouteActionWeightedBackendServicesInitParameters {
	if in == nil {
		return nil
	}
	out := new(PathRuleRouteActionWeightedBackendServicesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PathRuleRouteActionWeightedBackendServicesObservation) DeepCopyInto(out *PathRuleRouteActionWeightedBackendServicesObservation) {
	*out = *in
	if in.BackendService != nil {
		in, out := &in.BackendService, &out.BackendService
		*out = new(string)
		**out = **in
	}
	if in.HeaderAction != nil {
		in, out := &in.HeaderAction, &out.HeaderAction
		*out = make([]PathRuleRouteActionWeightedBackendServicesHeaderActionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Weight != nil {
		in, out := &in.Weight, &out.Weight
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PathRuleRouteActionWeightedBackendServicesObservation.
func (in *PathRuleRouteActionWeightedBackendServicesObservation) DeepCopy() *PathRuleRouteActionWeightedBackendServicesObservation {
	if in == nil {
		return nil
	}
	out := new(PathRuleRouteActionWeightedBackendServicesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PathRuleRouteActionWeightedBackendServicesParameters) DeepCopyInto(out *PathRuleRouteActionWeightedBackendServicesParameters) {
	*out = *in
	if in.BackendService != nil {
		in, out := &in.BackendService, &out.BackendService
		*out = new(string)
		**out = **in
	}
	if in.BackendServiceRef != nil {
		in, out := &in.BackendServiceRef, &out.BackendServiceRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.BackendServiceSelector != nil {
		in, out := &in.BackendServiceSelector, &out.BackendServiceSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.HeaderAction != nil {
		in, out := &in.HeaderAction, &out.HeaderAction
		*out = make([]PathRuleRouteActionWeightedBackendServicesHeaderActionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Weight != nil {
		in, out := &in.Weight, &out.Weight
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PathRuleRouteActionWeightedBackendServicesParameters.
func (in *PathRuleRouteActionWeightedBackendServicesParameters) DeepCopy() *PathRuleRouteActionWeightedBackendServicesParameters {
	if in == nil {
		return nil
	}
	out := new(PathRuleRouteActionWeightedBackendServicesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PathRuleURLRedirectInitParameters) DeepCopyInto(out *PathRuleURLRedirectInitParameters) {
	*out = *in
	if in.HTTPSRedirect != nil {
		in, out := &in.HTTPSRedirect, &out.HTTPSRedirect
		*out = new(bool)
		**out = **in
	}
	if in.HostRedirect != nil {
		in, out := &in.HostRedirect, &out.HostRedirect
		*out = new(string)
		**out = **in
	}
	if in.PathRedirect != nil {
		in, out := &in.PathRedirect, &out.PathRedirect
		*out = new(string)
		**out = **in
	}
	if in.PrefixRedirect != nil {
		in, out := &in.PrefixRedirect, &out.PrefixRedirect
		*out = new(string)
		**out = **in
	}
	if in.RedirectResponseCode != nil {
		in, out := &in.RedirectResponseCode, &out.RedirectResponseCode
		*out = new(string)
		**out = **in
	}
	if in.StripQuery != nil {
		in, out := &in.StripQuery, &out.StripQuery
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PathRuleURLRedirectInitParameters.
func (in *PathRuleURLRedirectInitParameters) DeepCopy() *PathRuleURLRedirectInitParameters {
	if in == nil {
		return nil
	}
	out := new(PathRuleURLRedirectInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PathRuleURLRedirectObservation) DeepCopyInto(out *PathRuleURLRedirectObservation) {
	*out = *in
	if in.HTTPSRedirect != nil {
		in, out := &in.HTTPSRedirect, &out.HTTPSRedirect
		*out = new(bool)
		**out = **in
	}
	if in.HostRedirect != nil {
		in, out := &in.HostRedirect, &out.HostRedirect
		*out = new(string)
		**out = **in
	}
	if in.PathRedirect != nil {
		in, out := &in.PathRedirect, &out.PathRedirect
		*out = new(string)
		**out = **in
	}
	if in.PrefixRedirect != nil {
		in, out := &in.PrefixRedirect, &out.PrefixRedirect
		*out = new(string)
		**out = **in
	}
	if in.RedirectResponseCode != nil {
		in, out := &in.RedirectResponseCode, &out.RedirectResponseCode
		*out = new(string)
		**out = **in
	}
	if in.StripQuery != nil {
		in, out := &in.StripQuery, &out.StripQuery
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PathRuleURLRedirectObservation.
func (in *PathRuleURLRedirectObservation) DeepCopy() *PathRuleURLRedirectObservation {
	if in == nil {
		return nil
	}
	out := new(PathRuleURLRedirectObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PathRuleURLRedirectParameters) DeepCopyInto(out *PathRuleURLRedirectParameters) {
	*out = *in
	if in.HTTPSRedirect != nil {
		in, out := &in.HTTPSRedirect, &out.HTTPSRedirect
		*out = new(bool)
		**out = **in
	}
	if in.HostRedirect != nil {
		in, out := &in.HostRedirect, &out.HostRedirect
		*out = new(string)
		**out = **in
	}
	if in.PathRedirect != nil {
		in, out := &in.PathRedirect, &out.PathRedirect
		*out = new(string)
		**out = **in
	}
	if in.PrefixRedirect != nil {
		in, out := &in.PrefixRedirect, &out.PrefixRedirect
		*out = new(string)
		**out = **in
	}
	if in.RedirectResponseCode != nil {
		in, out := &in.RedirectResponseCode, &out.RedirectResponseCode
		*out = new(string)
		**out = **in
	}
	if in.StripQuery != nil {
		in, out := &in.StripQuery, &out.StripQuery
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PathRuleURLRedirectParameters.
func (in *PathRuleURLRedirectParameters) DeepCopy() *PathRuleURLRedirectParameters {
	if in == nil {
		return nil
	}
	out := new(PathRuleURLRedirectParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PerInstanceConfig) DeepCopyInto(out *PerInstanceConfig) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PerInstanceConfig.
func (in *PerInstanceConfig) DeepCopy() *PerInstanceConfig {
	if in == nil {
		return nil
	}
	out := new(PerInstanceConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *PerInstanceConfig) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PerInstanceConfigInitParameters) DeepCopyInto(out *PerInstanceConfigInitParameters) {
	*out = *in
	if in.InstanceGroupManager != nil {
		in, out := &in.InstanceGroupManager, &out.InstanceGroupManager
		*out = new(string)
		**out = **in
	}
	if in.InstanceGroupManagerRef != nil {
		in, out := &in.InstanceGroupManagerRef, &out.InstanceGroupManagerRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.InstanceGroupManagerSelector != nil {
		in, out := &in.InstanceGroupManagerSelector, &out.InstanceGroupManagerSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.MinimalAction != nil {
		in, out := &in.MinimalAction, &out.MinimalAction
		*out = new(string)
		**out = **in
	}
	if in.MostDisruptiveAllowedAction != nil {
		in, out := &in.MostDisruptiveAllowedAction, &out.MostDisruptiveAllowedAction
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PreservedState != nil {
		in, out := &in.PreservedState, &out.PreservedState
		*out = make([]PreservedStateInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.RemoveInstanceOnDestroy != nil {
		in, out := &in.RemoveInstanceOnDestroy, &out.RemoveInstanceOnDestroy
		*out = new(bool)
		**out = **in
	}
	if in.RemoveInstanceStateOnDestroy != nil {
		in, out := &in.RemoveInstanceStateOnDestroy, &out.RemoveInstanceStateOnDestroy
		*out = new(bool)
		**out = **in
	}
	if in.Zone != nil {
		in, out := &in.Zone, &out.Zone
		*out = new(string)
		**out = **in
	}
	if in.ZoneRef != nil {
		in, out := &in.ZoneRef, &out.ZoneRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ZoneSelector != nil {
		in, out := &in.ZoneSelector, &out.ZoneSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PerInstanceConfigInitParameters.
func (in *PerInstanceConfigInitParameters) DeepCopy() *PerInstanceConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(PerInstanceConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PerInstanceConfigList) DeepCopyInto(out *PerInstanceConfigList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]PerInstanceConfig, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PerInstanceConfigList.
func (in *PerInstanceConfigList) DeepCopy() *PerInstanceConfigList {
	if in == nil {
		return nil
	}
	out := new(PerInstanceConfigList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *PerInstanceConfigList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PerInstanceConfigObservation) DeepCopyInto(out *PerInstanceConfigObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.InstanceGroupManager != nil {
		in, out := &in.InstanceGroupManager, &out.InstanceGroupManager
		*out = new(string)
		**out = **in
	}
	if in.MinimalAction != nil {
		in, out := &in.MinimalAction, &out.MinimalAction
		*out = new(string)
		**out = **in
	}
	if in.MostDisruptiveAllowedAction != nil {
		in, out := &in.MostDisruptiveAllowedAction, &out.MostDisruptiveAllowedAction
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PreservedState != nil {
		in, out := &in.PreservedState, &out.PreservedState
		*out = make([]PreservedStateObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.RemoveInstanceOnDestroy != nil {
		in, out := &in.RemoveInstanceOnDestroy, &out.RemoveInstanceOnDestroy
		*out = new(bool)
		**out = **in
	}
	if in.RemoveInstanceStateOnDestroy != nil {
		in, out := &in.RemoveInstanceStateOnDestroy, &out.RemoveInstanceStateOnDestroy
		*out = new(bool)
		**out = **in
	}
	if in.Zone != nil {
		in, out := &in.Zone, &out.Zone
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PerInstanceConfigObservation.
func (in *PerInstanceConfigObservation) DeepCopy() *PerInstanceConfigObservation {
	if in == nil {
		return nil
	}
	out := new(PerInstanceConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PerInstanceConfigParameters) DeepCopyInto(out *PerInstanceConfigParameters) {
	*out = *in
	if in.InstanceGroupManager != nil {
		in, out := &in.InstanceGroupManager, &out.InstanceGroupManager
		*out = new(string)
		**out = **in
	}
	if in.InstanceGroupManagerRef != nil {
		in, out := &in.InstanceGroupManagerRef, &out.InstanceGroupManagerRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.InstanceGroupManagerSelector != nil {
		in, out := &in.InstanceGroupManagerSelector, &out.InstanceGroupManagerSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.MinimalAction != nil {
		in, out := &in.MinimalAction, &out.MinimalAction
		*out = new(string)
		**out = **in
	}
	if in.MostDisruptiveAllowedAction != nil {
		in, out := &in.MostDisruptiveAllowedAction, &out.MostDisruptiveAllowedAction
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PreservedState != nil {
		in, out := &in.PreservedState, &out.PreservedState
		*out = make([]PreservedStateParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.RemoveInstanceOnDestroy != nil {
		in, out := &in.RemoveInstanceOnDestroy, &out.RemoveInstanceOnDestroy
		*out = new(bool)
		**out = **in
	}
	if in.RemoveInstanceStateOnDestroy != nil {
		in, out := &in.RemoveInstanceStateOnDestroy, &out.RemoveInstanceStateOnDestroy
		*out = new(bool)
		**out = **in
	}
	if in.Zone != nil {
		in, out := &in.Zone, &out.Zone
		*out = new(string)
		**out = **in
	}
	if in.ZoneRef != nil {
		in, out := &in.ZoneRef, &out.ZoneRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ZoneSelector != nil {
		in, out := &in.ZoneSelector, &out.ZoneSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PerInstanceConfigParameters.
func (in *PerInstanceConfigParameters) DeepCopy() *PerInstanceConfigParameters {
	if in == nil {
		return nil
	}
	out := new(PerInstanceConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PerInstanceConfigSpec) DeepCopyInto(out *PerInstanceConfigSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PerInstanceConfigSpec.
func (in *PerInstanceConfigSpec) DeepCopy() *PerInstanceConfigSpec {
	if in == nil {
		return nil
	}
	out := new(PerInstanceConfigSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PerInstanceConfigStatus) DeepCopyInto(out *PerInstanceConfigStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PerInstanceConfigStatus.
func (in *PerInstanceConfigStatus) DeepCopy() *PerInstanceConfigStatus {
	if in == nil {
		return nil
	}
	out := new(PerInstanceConfigStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PerInstanceConfigsInitParameters) DeepCopyInto(out *PerInstanceConfigsInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PerInstanceConfigsInitParameters.
func (in *PerInstanceConfigsInitParameters) DeepCopy() *PerInstanceConfigsInitParameters {
	if in == nil {
		return nil
	}
	out := new(PerInstanceConfigsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PerInstanceConfigsObservation) DeepCopyInto(out *PerInstanceConfigsObservation) {
	*out = *in
	if in.AllEffective != nil {
		in, out := &in.AllEffective, &out.AllEffective
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PerInstanceConfigsObservation.
func (in *PerInstanceConfigsObservation) DeepCopy() *PerInstanceConfigsObservation {
	if in == nil {
		return nil
	}
	out := new(PerInstanceConfigsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PerInstanceConfigsParameters) DeepCopyInto(out *PerInstanceConfigsParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PerInstanceConfigsParameters.
func (in *PerInstanceConfigsParameters) DeepCopy() *PerInstanceConfigsParameters {
	if in == nil {
		return nil
	}
	out := new(PerInstanceConfigsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PerTryTimeoutInitParameters) DeepCopyInto(out *PerTryTimeoutInitParameters) {
	*out = *in
	if in.Nanos != nil {
		in, out := &in.Nanos, &out.Nanos
		*out = new(float64)
		**out = **in
	}
	if in.Seconds != nil {
		in, out := &in.Seconds, &out.Seconds
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PerTryTimeoutInitParameters.
func (in *PerTryTimeoutInitParameters) DeepCopy() *PerTryTimeoutInitParameters {
	if in == nil {
		return nil
	}
	out := new(PerTryTimeoutInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PerTryTimeoutObservation) DeepCopyInto(out *PerTryTimeoutObservation) {
	*out = *in
	if in.Nanos != nil {
		in, out := &in.Nanos, &out.Nanos
		*out = new(float64)
		**out = **in
	}
	if in.Seconds != nil {
		in, out := &in.Seconds, &out.Seconds
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PerTryTimeoutObservation.
func (in *PerTryTimeoutObservation) DeepCopy() *PerTryTimeoutObservation {
	if in == nil {
		return nil
	}
	out := new(PerTryTimeoutObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PerTryTimeoutParameters) DeepCopyInto(out *PerTryTimeoutParameters) {
	*out = *in
	if in.Nanos != nil {
		in, out := &in.Nanos, &out.Nanos
		*out = new(float64)
		**out = **in
	}
	if in.Seconds != nil {
		in, out := &in.Seconds, &out.Seconds
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PerTryTimeoutParameters.
func (in *PerTryTimeoutParameters) DeepCopy() *PerTryTimeoutParameters {
	if in == nil {
		return nil
	}
	out := new(PerTryTimeoutParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PolicyInitParameters) DeepCopyInto(out *PolicyInitParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PolicyInitParameters.
func (in *PolicyInitParameters) DeepCopy() *PolicyInitParameters {
	if in == nil {
		return nil
	}
	out := new(PolicyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PolicyObservation) DeepCopyInto(out *PolicyObservation) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PolicyObservation.
func (in *PolicyObservation) DeepCopy() *PolicyObservation {
	if in == nil {
		return nil
	}
	out := new(PolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PolicyParameters) DeepCopyInto(out *PolicyParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PolicyParameters.
func (in *PolicyParameters) DeepCopy() *PolicyParameters {
	if in == nil {
		return nil
	}
	out := new(PolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PreservedStateDiskInitParameters) DeepCopyInto(out *PreservedStateDiskInitParameters) {
	*out = *in
	if in.DeleteRule != nil {
		in, out := &in.DeleteRule, &out.DeleteRule
		*out = new(string)
		**out = **in
	}
	if in.DeviceName != nil {
		in, out := &in.DeviceName, &out.DeviceName
		*out = new(string)
		**out = **in
	}
	if in.Mode != nil {
		in, out := &in.Mode, &out.Mode
		*out = new(string)
		**out = **in
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(string)
		**out = **in
	}
	if in.SourceRef != nil {
		in, out := &in.SourceRef, &out.SourceRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SourceSelector != nil {
		in, out := &in.SourceSelector, &out.SourceSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PreservedStateDiskInitParameters.
func (in *PreservedStateDiskInitParameters) DeepCopy() *PreservedStateDiskInitParameters {
	if in == nil {
		return nil
	}
	out := new(PreservedStateDiskInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PreservedStateDiskObservation) DeepCopyInto(out *PreservedStateDiskObservation) {
	*out = *in
	if in.DeleteRule != nil {
		in, out := &in.DeleteRule, &out.DeleteRule
		*out = new(string)
		**out = **in
	}
	if in.DeviceName != nil {
		in, out := &in.DeviceName, &out.DeviceName
		*out = new(string)
		**out = **in
	}
	if in.Mode != nil {
		in, out := &in.Mode, &out.Mode
		*out = new(string)
		**out = **in
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PreservedStateDiskObservation.
func (in *PreservedStateDiskObservation) DeepCopy() *PreservedStateDiskObservation {
	if in == nil {
		return nil
	}
	out := new(PreservedStateDiskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PreservedStateDiskParameters) DeepCopyInto(out *PreservedStateDiskParameters) {
	*out = *in
	if in.DeleteRule != nil {
		in, out := &in.DeleteRule, &out.DeleteRule
		*out = new(string)
		**out = **in
	}
	if in.DeviceName != nil {
		in, out := &in.DeviceName, &out.DeviceName
		*out = new(string)
		**out = **in
	}
	if in.Mode != nil {
		in, out := &in.Mode, &out.Mode
		*out = new(string)
		**out = **in
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(string)
		**out = **in
	}
	if in.SourceRef != nil {
		in, out := &in.SourceRef, &out.SourceRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SourceSelector != nil {
		in, out := &in.SourceSelector, &out.SourceSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PreservedStateDiskParameters.
func (in *PreservedStateDiskParameters) DeepCopy() *PreservedStateDiskParameters {
	if in == nil {
		return nil
	}
	out := new(PreservedStateDiskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PreservedStateExternalIPInitParameters) DeepCopyInto(out *PreservedStateExternalIPInitParameters) {
	*out = *in
	if in.AutoDelete != nil {
		in, out := &in.AutoDelete, &out.AutoDelete
		*out = new(string)
		**out = **in
	}
	if in.IPAddress != nil {
		in, out := &in.IPAddress, &out.IPAddress
		*out = make([]ExternalIPIPAddressInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.InterfaceName != nil {
		in, out := &in.InterfaceName, &out.InterfaceName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PreservedStateExternalIPInitParameters.
func (in *PreservedStateExternalIPInitParameters) DeepCopy() *PreservedStateExternalIPInitParameters {
	if in == nil {
		return nil
	}
	out := new(PreservedStateExternalIPInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PreservedStateExternalIPObservation) DeepCopyInto(out *PreservedStateExternalIPObservation) {
	*out = *in
	if in.AutoDelete != nil {
		in, out := &in.AutoDelete, &out.AutoDelete
		*out = new(string)
		**out = **in
	}
	if in.IPAddress != nil {
		in, out := &in.IPAddress, &out.IPAddress
		*out = make([]ExternalIPIPAddressObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.InterfaceName != nil {
		in, out := &in.InterfaceName, &out.InterfaceName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PreservedStateExternalIPObservation.
func (in *PreservedStateExternalIPObservation) DeepCopy() *PreservedStateExternalIPObservation {
	if in == nil {
		return nil
	}
	out := new(PreservedStateExternalIPObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PreservedStateExternalIPParameters) DeepCopyInto(out *PreservedStateExternalIPParameters) {
	*out = *in
	if in.AutoDelete != nil {
		in, out := &in.AutoDelete, &out.AutoDelete
		*out = new(string)
		**out = **in
	}
	if in.IPAddress != nil {
		in, out := &in.IPAddress, &out.IPAddress
		*out = make([]ExternalIPIPAddressParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.InterfaceName != nil {
		in, out := &in.InterfaceName, &out.InterfaceName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PreservedStateExternalIPParameters.
func (in *PreservedStateExternalIPParameters) DeepCopy() *PreservedStateExternalIPParameters {
	if in == nil {
		return nil
	}
	out := new(PreservedStateExternalIPParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PreservedStateInitParameters) DeepCopyInto(out *PreservedStateInitParameters) {
	*out = *in
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]PreservedStateDiskInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ExternalIP != nil {
		in, out := &in.ExternalIP, &out.ExternalIP
		*out = make([]ExternalIPInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.InternalIP != nil {
		in, out := &in.InternalIP, &out.InternalIP
		*out = make([]InternalIPInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Metadata != nil {
		in, out := &in.Metadata, &out.Metadata
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PreservedStateInitParameters.
func (in *PreservedStateInitParameters) DeepCopy() *PreservedStateInitParameters {
	if in == nil {
		return nil
	}
	out := new(PreservedStateInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PreservedStateInternalIPIPAddressInitParameters) DeepCopyInto(out *PreservedStateInternalIPIPAddressInitParameters) {
	*out = *in
	if in.Address != nil {
		in, out := &in.Address, &out.Address
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PreservedStateInternalIPIPAddressInitParameters.
func (in *PreservedStateInternalIPIPAddressInitParameters) DeepCopy() *PreservedStateInternalIPIPAddressInitParameters {
	if in == nil {
		return nil
	}
	out := new(PreservedStateInternalIPIPAddressInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PreservedStateInternalIPIPAddressObservation) DeepCopyInto(out *PreservedStateInternalIPIPAddressObservation) {
	*out = *in
	if in.Address != nil {
		in, out := &in.Address, &out.Address
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PreservedStateInternalIPIPAddressObservation.
func (in *PreservedStateInternalIPIPAddressObservation) DeepCopy() *PreservedStateInternalIPIPAddressObservation {
	if in == nil {
		return nil
	}
	out := new(PreservedStateInternalIPIPAddressObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PreservedStateInternalIPIPAddressParameters) DeepCopyInto(out *PreservedStateInternalIPIPAddressParameters) {
	*out = *in
	if in.Address != nil {
		in, out := &in.Address, &out.Address
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PreservedStateInternalIPIPAddressParameters.
func (in *PreservedStateInternalIPIPAddressParameters) DeepCopy() *PreservedStateInternalIPIPAddressParameters {
	if in == nil {
		return nil
	}
	out := new(PreservedStateInternalIPIPAddressParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PreservedStateInternalIPInitParameters) DeepCopyInto(out *PreservedStateInternalIPInitParameters) {
	*out = *in
	if in.AutoDelete != nil {
		in, out := &in.AutoDelete, &out.AutoDelete
		*out = new(string)
		**out = **in
	}
	if in.IPAddress != nil {
		in, out := &in.IPAddress, &out.IPAddress
		*out = make([]PreservedStateInternalIPIPAddressInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.InterfaceName != nil {
		in, out := &in.InterfaceName, &out.InterfaceName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PreservedStateInternalIPInitParameters.
func (in *PreservedStateInternalIPInitParameters) DeepCopy() *PreservedStateInternalIPInitParameters {
	if in == nil {
		return nil
	}
	out := new(PreservedStateInternalIPInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PreservedStateInternalIPObservation) DeepCopyInto(out *PreservedStateInternalIPObservation) {
	*out = *in
	if in.AutoDelete != nil {
		in, out := &in.AutoDelete, &out.AutoDelete
		*out = new(string)
		**out = **in
	}
	if in.IPAddress != nil {
		in, out := &in.IPAddress, &out.IPAddress
		*out = make([]PreservedStateInternalIPIPAddressObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.InterfaceName != nil {
		in, out := &in.InterfaceName, &out.InterfaceName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PreservedStateInternalIPObservation.
func (in *PreservedStateInternalIPObservation) DeepCopy() *PreservedStateInternalIPObservation {
	if in == nil {
		return nil
	}
	out := new(PreservedStateInternalIPObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PreservedStateInternalIPParameters) DeepCopyInto(out *PreservedStateInternalIPParameters) {
	*out = *in
	if in.AutoDelete != nil {
		in, out := &in.AutoDelete, &out.AutoDelete
		*out = new(string)
		**out = **in
	}
	if in.IPAddress != nil {
		in, out := &in.IPAddress, &out.IPAddress
		*out = make([]PreservedStateInternalIPIPAddressParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.InterfaceName != nil {
		in, out := &in.InterfaceName, &out.InterfaceName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PreservedStateInternalIPParameters.
func (in *PreservedStateInternalIPParameters) DeepCopy() *PreservedStateInternalIPParameters {
	if in == nil {
		return nil
	}
	out := new(PreservedStateInternalIPParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PreservedStateObservation) DeepCopyInto(out *PreservedStateObservation) {
	*out = *in
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]PreservedStateDiskObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ExternalIP != nil {
		in, out := &in.ExternalIP, &out.ExternalIP
		*out = make([]ExternalIPObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.InternalIP != nil {
		in, out := &in.InternalIP, &out.InternalIP
		*out = make([]InternalIPObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Metadata != nil {
		in, out := &in.Metadata, &out.Metadata
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PreservedStateObservation.
func (in *PreservedStateObservation) DeepCopy() *PreservedStateObservation {
	if in == nil {
		return nil
	}
	out := new(PreservedStateObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PreservedStateParameters) DeepCopyInto(out *PreservedStateParameters) {
	*out = *in
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]PreservedStateDiskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ExternalIP != nil {
		in, out := &in.ExternalIP, &out.ExternalIP
		*out = make([]ExternalIPParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.InternalIP != nil {
		in, out := &in.InternalIP, &out.InternalIP
		*out = make([]InternalIPParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Metadata != nil {
		in, out := &in.Metadata, &out.Metadata
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PreservedStateParameters.
func (in *PreservedStateParameters) DeepCopy() *PreservedStateParameters {
	if in == nil {
		return nil
	}
	out := new(PreservedStateParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateInterconnectInfoInitParameters) DeepCopyInto(out *PrivateInterconnectInfoInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateInterconnectInfoInitParameters.
func (in *PrivateInterconnectInfoInitParameters) DeepCopy() *PrivateInterconnectInfoInitParameters {
	if in == nil {
		return nil
	}
	out := new(PrivateInterconnectInfoInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateInterconnectInfoObservation) DeepCopyInto(out *PrivateInterconnectInfoObservation) {
	*out = *in
	if in.Tag8021Q != nil {
		in, out := &in.Tag8021Q, &out.Tag8021Q
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateInterconnectInfoObservation.
func (in *PrivateInterconnectInfoObservation) DeepCopy() *PrivateInterconnectInfoObservation {
	if in == nil {
		return nil
	}
	out := new(PrivateInterconnectInfoObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateInterconnectInfoParameters) DeepCopyInto(out *PrivateInterconnectInfoParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateInterconnectInfoParameters.
func (in *PrivateInterconnectInfoParameters) DeepCopy() *PrivateInterconnectInfoParameters {
	if in == nil {
		return nil
	}
	out := new(PrivateInterconnectInfoParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectDefaultNetworkTier) DeepCopyInto(out *ProjectDefaultNetworkTier) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectDefaultNetworkTier.
func (in *ProjectDefaultNetworkTier) DeepCopy() *ProjectDefaultNetworkTier {
	if in == nil {
		return nil
	}
	out := new(ProjectDefaultNetworkTier)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ProjectDefaultNetworkTier) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectDefaultNetworkTierInitParameters) DeepCopyInto(out *ProjectDefaultNetworkTierInitParameters) {
	*out = *in
	if in.NetworkTier != nil {
		in, out := &in.NetworkTier, &out.NetworkTier
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectDefaultNetworkTierInitParameters.
func (in *ProjectDefaultNetworkTierInitParameters) DeepCopy() *ProjectDefaultNetworkTierInitParameters {
	if in == nil {
		return nil
	}
	out := new(ProjectDefaultNetworkTierInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectDefaultNetworkTierList) DeepCopyInto(out *ProjectDefaultNetworkTierList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ProjectDefaultNetworkTier, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectDefaultNetworkTierList.
func (in *ProjectDefaultNetworkTierList) DeepCopy() *ProjectDefaultNetworkTierList {
	if in == nil {
		return nil
	}
	out := new(ProjectDefaultNetworkTierList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ProjectDefaultNetworkTierList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectDefaultNetworkTierObservation) DeepCopyInto(out *ProjectDefaultNetworkTierObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.NetworkTier != nil {
		in, out := &in.NetworkTier, &out.NetworkTier
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectDefaultNetworkTierObservation.
func (in *ProjectDefaultNetworkTierObservation) DeepCopy() *ProjectDefaultNetworkTierObservation {
	if in == nil {
		return nil
	}
	out := new(ProjectDefaultNetworkTierObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectDefaultNetworkTierParameters) DeepCopyInto(out *ProjectDefaultNetworkTierParameters) {
	*out = *in
	if in.NetworkTier != nil {
		in, out := &in.NetworkTier, &out.NetworkTier
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectDefaultNetworkTierParameters.
func (in *ProjectDefaultNetworkTierParameters) DeepCopy() *ProjectDefaultNetworkTierParameters {
	if in == nil {
		return nil
	}
	out := new(ProjectDefaultNetworkTierParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectDefaultNetworkTierSpec) DeepCopyInto(out *ProjectDefaultNetworkTierSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectDefaultNetworkTierSpec.
func (in *ProjectDefaultNetworkTierSpec) DeepCopy() *ProjectDefaultNetworkTierSpec {
	if in == nil {
		return nil
	}
	out := new(ProjectDefaultNetworkTierSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectDefaultNetworkTierStatus) DeepCopyInto(out *ProjectDefaultNetworkTierStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectDefaultNetworkTierStatus.
func (in *ProjectDefaultNetworkTierStatus) DeepCopy() *ProjectDefaultNetworkTierStatus {
	if in == nil {
		return nil
	}
	out := new(ProjectDefaultNetworkTierStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectMapInitParameters) DeepCopyInto(out *ProjectMapInitParameters) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IDRef != nil {
		in, out := &in.IDRef, &out.IDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.IDSelector != nil {
		in, out := &in.IDSelector, &out.IDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.ProjectID != nil {
		in, out := &in.ProjectID, &out.ProjectID
		*out = new(string)
		**out = **in
	}
	if in.ProjectIDRef != nil {
		in, out := &in.ProjectIDRef, &out.ProjectIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ProjectIDSelector != nil {
		in, out := &in.ProjectIDSelector, &out.ProjectIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectMapInitParameters.
func (in *ProjectMapInitParameters) DeepCopy() *ProjectMapInitParameters {
	if in == nil {
		return nil
	}
	out := new(ProjectMapInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectMapObservation) DeepCopyInto(out *ProjectMapObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.ProjectID != nil {
		in, out := &in.ProjectID, &out.ProjectID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectMapObservation.
func (in *ProjectMapObservation) DeepCopy() *ProjectMapObservation {
	if in == nil {
		return nil
	}
	out := new(ProjectMapObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectMapParameters) DeepCopyInto(out *ProjectMapParameters) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IDRef != nil {
		in, out := &in.IDRef, &out.IDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.IDSelector != nil {
		in, out := &in.IDSelector, &out.IDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.ProjectID != nil {
		in, out := &in.ProjectID, &out.ProjectID
		*out = new(string)
		**out = **in
	}
	if in.ProjectIDRef != nil {
		in, out := &in.ProjectIDRef, &out.ProjectIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ProjectIDSelector != nil {
		in, out := &in.ProjectIDSelector, &out.ProjectIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectMapParameters.
func (in *ProjectMapParameters) DeepCopy() *ProjectMapParameters {
	if in == nil {
		return nil
	}
	out := new(ProjectMapParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectMetadata) DeepCopyInto(out *ProjectMetadata) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectMetadata.
func (in *ProjectMetadata) DeepCopy() *ProjectMetadata {
	if in == nil {
		return nil
	}
	out := new(ProjectMetadata)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ProjectMetadata) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectMetadataInitParameters) DeepCopyInto(out *ProjectMetadataInitParameters) {
	*out = *in
	if in.Metadata != nil {
		in, out := &in.Metadata, &out.Metadata
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectMetadataInitParameters.
func (in *ProjectMetadataInitParameters) DeepCopy() *ProjectMetadataInitParameters {
	if in == nil {
		return nil
	}
	out := new(ProjectMetadataInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectMetadataItem) DeepCopyInto(out *ProjectMetadataItem) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectMetadataItem.
func (in *ProjectMetadataItem) DeepCopy() *ProjectMetadataItem {
	if in == nil {
		return nil
	}
	out := new(ProjectMetadataItem)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ProjectMetadataItem) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectMetadataItemInitParameters) DeepCopyInto(out *ProjectMetadataItemInitParameters) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectMetadataItemInitParameters.
func (in *ProjectMetadataItemInitParameters) DeepCopy() *ProjectMetadataItemInitParameters {
	if in == nil {
		return nil
	}
	out := new(ProjectMetadataItemInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectMetadataItemList) DeepCopyInto(out *ProjectMetadataItemList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ProjectMetadataItem, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectMetadataItemList.
func (in *ProjectMetadataItemList) DeepCopy() *ProjectMetadataItemList {
	if in == nil {
		return nil
	}
	out := new(ProjectMetadataItemList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ProjectMetadataItemList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectMetadataItemObservation) DeepCopyInto(out *ProjectMetadataItemObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectMetadataItemObservation.
func (in *ProjectMetadataItemObservation) DeepCopy() *ProjectMetadataItemObservation {
	if in == nil {
		return nil
	}
	out := new(ProjectMetadataItemObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectMetadataItemParameters) DeepCopyInto(out *ProjectMetadataItemParameters) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectMetadataItemParameters.
func (in *ProjectMetadataItemParameters) DeepCopy() *ProjectMetadataItemParameters {
	if in == nil {
		return nil
	}
	out := new(ProjectMetadataItemParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectMetadataItemSpec) DeepCopyInto(out *ProjectMetadataItemSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectMetadataItemSpec.
func (in *ProjectMetadataItemSpec) DeepCopy() *ProjectMetadataItemSpec {
	if in == nil {
		return nil
	}
	out := new(ProjectMetadataItemSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectMetadataItemStatus) DeepCopyInto(out *ProjectMetadataItemStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectMetadataItemStatus.
func (in *ProjectMetadataItemStatus) DeepCopy() *ProjectMetadataItemStatus {
	if in == nil {
		return nil
	}
	out := new(ProjectMetadataItemStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectMetadataList) DeepCopyInto(out *ProjectMetadataList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ProjectMetadata, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectMetadataList.
func (in *ProjectMetadataList) DeepCopy() *ProjectMetadataList {
	if in == nil {
		return nil
	}
	out := new(ProjectMetadataList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ProjectMetadataList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectMetadataObservation) DeepCopyInto(out *ProjectMetadataObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Metadata != nil {
		in, out := &in.Metadata, &out.Metadata
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectMetadataObservation.
func (in *ProjectMetadataObservation) DeepCopy() *ProjectMetadataObservation {
	if in == nil {
		return nil
	}
	out := new(ProjectMetadataObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectMetadataParameters) DeepCopyInto(out *ProjectMetadataParameters) {
	*out = *in
	if in.Metadata != nil {
		in, out := &in.Metadata, &out.Metadata
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectMetadataParameters.
func (in *ProjectMetadataParameters) DeepCopy() *ProjectMetadataParameters {
	if in == nil {
		return nil
	}
	out := new(ProjectMetadataParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectMetadataSpec) DeepCopyInto(out *ProjectMetadataSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectMetadataSpec.
func (in *ProjectMetadataSpec) DeepCopy() *ProjectMetadataSpec {
	if in == nil {
		return nil
	}
	out := new(ProjectMetadataSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectMetadataStatus) DeepCopyInto(out *ProjectMetadataStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectMetadataStatus.
func (in *ProjectMetadataStatus) DeepCopy() *ProjectMetadataStatus {
	if in == nil {
		return nil
	}
	out := new(ProjectMetadataStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *QueryParameterMatchesInitParameters) DeepCopyInto(out *QueryParameterMatchesInitParameters) {
	*out = *in
	if in.ExactMatch != nil {
		in, out := &in.ExactMatch, &out.ExactMatch
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PresentMatch != nil {
		in, out := &in.PresentMatch, &out.PresentMatch
		*out = new(bool)
		**out = **in
	}
	if in.RegexMatch != nil {
		in, out := &in.RegexMatch, &out.RegexMatch
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new QueryParameterMatchesInitParameters.
func (in *QueryParameterMatchesInitParameters) DeepCopy() *QueryParameterMatchesInitParameters {
	if in == nil {
		return nil
	}
	out := new(QueryParameterMatchesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *QueryParameterMatchesObservation) DeepCopyInto(out *QueryParameterMatchesObservation) {
	*out = *in
	if in.ExactMatch != nil {
		in, out := &in.ExactMatch, &out.ExactMatch
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PresentMatch != nil {
		in, out := &in.PresentMatch, &out.PresentMatch
		*out = new(bool)
		**out = **in
	}
	if in.RegexMatch != nil {
		in, out := &in.RegexMatch, &out.RegexMatch
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new QueryParameterMatchesObservation.
func (in *QueryParameterMatchesObservation) DeepCopy() *QueryParameterMatchesObservation {
	if in == nil {
		return nil
	}
	out := new(QueryParameterMatchesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *QueryParameterMatchesParameters) DeepCopyInto(out *QueryParameterMatchesParameters) {
	*out = *in
	if in.ExactMatch != nil {
		in, out := &in.ExactMatch, &out.ExactMatch
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PresentMatch != nil {
		in, out := &in.PresentMatch, &out.PresentMatch
		*out = new(bool)
		**out = **in
	}
	if in.RegexMatch != nil {
		in, out := &in.RegexMatch, &out.RegexMatch
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new QueryParameterMatchesParameters.
func (in *QueryParameterMatchesParameters) DeepCopy() *QueryParameterMatchesParameters {
	if in == nil {
		return nil
	}
	out := new(QueryParameterMatchesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RangeMatchInitParameters) DeepCopyInto(out *RangeMatchInitParameters) {
	*out = *in
	if in.RangeEnd != nil {
		in, out := &in.RangeEnd, &out.RangeEnd
		*out = new(float64)
		**out = **in
	}
	if in.RangeStart != nil {
		in, out := &in.RangeStart, &out.RangeStart
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RangeMatchInitParameters.
func (in *RangeMatchInitParameters) DeepCopy() *RangeMatchInitParameters {
	if in == nil {
		return nil
	}
	out := new(RangeMatchInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RangeMatchObservation) DeepCopyInto(out *RangeMatchObservation) {
	*out = *in
	if in.RangeEnd != nil {
		in, out := &in.RangeEnd, &out.RangeEnd
		*out = new(float64)
		**out = **in
	}
	if in.RangeStart != nil {
		in, out := &in.RangeStart, &out.RangeStart
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RangeMatchObservation.
func (in *RangeMatchObservation) DeepCopy() *RangeMatchObservation {
	if in == nil {
		return nil
	}
	out := new(RangeMatchObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RangeMatchParameters) DeepCopyInto(out *RangeMatchParameters) {
	*out = *in
	if in.RangeEnd != nil {
		in, out := &in.RangeEnd, &out.RangeEnd
		*out = new(float64)
		**out = **in
	}
	if in.RangeStart != nil {
		in, out := &in.RangeStart, &out.RangeStart
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RangeMatchParameters.
func (in *RangeMatchParameters) DeepCopy() *RangeMatchParameters {
	if in == nil {
		return nil
	}
	out := new(RangeMatchParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RateLimitOptionsInitParameters) DeepCopyInto(out *RateLimitOptionsInitParameters) {
	*out = *in
	if in.BanDurationSec != nil {
		in, out := &in.BanDurationSec, &out.BanDurationSec
		*out = new(float64)
		**out = **in
	}
	if in.BanThreshold != nil {
		in, out := &in.BanThreshold, &out.BanThreshold
		*out = make([]BanThresholdInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ConformAction != nil {
		in, out := &in.ConformAction, &out.ConformAction
		*out = new(string)
		**out = **in
	}
	if in.EnforceOnKey != nil {
		in, out := &in.EnforceOnKey, &out.EnforceOnKey
		*out = new(string)
		**out = **in
	}
	if in.EnforceOnKeyName != nil {
		in, out := &in.EnforceOnKeyName, &out.EnforceOnKeyName
		*out = new(string)
		**out = **in
	}
	if in.ExceedAction != nil {
		in, out := &in.ExceedAction, &out.ExceedAction
		*out = new(string)
		**out = **in
	}
	if in.ExceedRedirectOptions != nil {
		in, out := &in.ExceedRedirectOptions, &out.ExceedRedirectOptions
		*out = make([]ExceedRedirectOptionsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RateLimitThreshold != nil {
		in, out := &in.RateLimitThreshold, &out.RateLimitThreshold
		*out = make([]RateLimitThresholdInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RateLimitOptionsInitParameters.
func (in *RateLimitOptionsInitParameters) DeepCopy() *RateLimitOptionsInitParameters {
	if in == nil {
		return nil
	}
	out := new(RateLimitOptionsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RateLimitOptionsObservation) DeepCopyInto(out *RateLimitOptionsObservation) {
	*out = *in
	if in.BanDurationSec != nil {
		in, out := &in.BanDurationSec, &out.BanDurationSec
		*out = new(float64)
		**out = **in
	}
	if in.BanThreshold != nil {
		in, out := &in.BanThreshold, &out.BanThreshold
		*out = make([]BanThresholdObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ConformAction != nil {
		in, out := &in.ConformAction, &out.ConformAction
		*out = new(string)
		**out = **in
	}
	if in.EnforceOnKey != nil {
		in, out := &in.EnforceOnKey, &out.EnforceOnKey
		*out = new(string)
		**out = **in
	}
	if in.EnforceOnKeyName != nil {
		in, out := &in.EnforceOnKeyName, &out.EnforceOnKeyName
		*out = new(string)
		**out = **in
	}
	if in.ExceedAction != nil {
		in, out := &in.ExceedAction, &out.ExceedAction
		*out = new(string)
		**out = **in
	}
	if in.ExceedRedirectOptions != nil {
		in, out := &in.ExceedRedirectOptions, &out.ExceedRedirectOptions
		*out = make([]ExceedRedirectOptionsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RateLimitThreshold != nil {
		in, out := &in.RateLimitThreshold, &out.RateLimitThreshold
		*out = make([]RateLimitThresholdObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RateLimitOptionsObservation.
func (in *RateLimitOptionsObservation) DeepCopy() *RateLimitOptionsObservation {
	if in == nil {
		return nil
	}
	out := new(RateLimitOptionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RateLimitOptionsParameters) DeepCopyInto(out *RateLimitOptionsParameters) {
	*out = *in
	if in.BanDurationSec != nil {
		in, out := &in.BanDurationSec, &out.BanDurationSec
		*out = new(float64)
		**out = **in
	}
	if in.BanThreshold != nil {
		in, out := &in.BanThreshold, &out.BanThreshold
		*out = make([]BanThresholdParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ConformAction != nil {
		in, out := &in.ConformAction, &out.ConformAction
		*out = new(string)
		**out = **in
	}
	if in.EnforceOnKey != nil {
		in, out := &in.EnforceOnKey, &out.EnforceOnKey
		*out = new(string)
		**out = **in
	}
	if in.EnforceOnKeyName != nil {
		in, out := &in.EnforceOnKeyName, &out.EnforceOnKeyName
		*out = new(string)
		**out = **in
	}
	if in.ExceedAction != nil {
		in, out := &in.ExceedAction, &out.ExceedAction
		*out = new(string)
		**out = **in
	}
	if in.ExceedRedirectOptions != nil {
		in, out := &in.ExceedRedirectOptions, &out.ExceedRedirectOptions
		*out = make([]ExceedRedirectOptionsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RateLimitThreshold != nil {
		in, out := &in.RateLimitThreshold, &out.RateLimitThreshold
		*out = make([]RateLimitThresholdParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RateLimitOptionsParameters.
func (in *RateLimitOptionsParameters) DeepCopy() *RateLimitOptionsParameters {
	if in == nil {
		return nil
	}
	out := new(RateLimitOptionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RateLimitThresholdInitParameters) DeepCopyInto(out *RateLimitThresholdInitParameters) {
	*out = *in
	if in.Count != nil {
		in, out := &in.Count, &out.Count
		*out = new(float64)
		**out = **in
	}
	if in.IntervalSec != nil {
		in, out := &in.IntervalSec, &out.IntervalSec
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RateLimitThresholdInitParameters.
func (in *RateLimitThresholdInitParameters) DeepCopy() *RateLimitThresholdInitParameters {
	if in == nil {
		return nil
	}
	out := new(RateLimitThresholdInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RateLimitThresholdObservation) DeepCopyInto(out *RateLimitThresholdObservation) {
	*out = *in
	if in.Count != nil {
		in, out := &in.Count, &out.Count
		*out = new(float64)
		**out = **in
	}
	if in.IntervalSec != nil {
		in, out := &in.IntervalSec, &out.IntervalSec
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RateLimitThresholdObservation.
func (in *RateLimitThresholdObservation) DeepCopy() *RateLimitThresholdObservation {
	if in == nil {
		return nil
	}
	out := new(RateLimitThresholdObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RateLimitThresholdParameters) DeepCopyInto(out *RateLimitThresholdParameters) {
	*out = *in
	if in.Count != nil {
		in, out := &in.Count, &out.Count
		*out = new(float64)
		**out = **in
	}
	if in.IntervalSec != nil {
		in, out := &in.IntervalSec, &out.IntervalSec
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RateLimitThresholdParameters.
func (in *RateLimitThresholdParameters) DeepCopy() *RateLimitThresholdParameters {
	if in == nil {
		return nil
	}
	out := new(RateLimitThresholdParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RawDiskInitParameters) DeepCopyInto(out *RawDiskInitParameters) {
	*out = *in
	if in.ContainerType != nil {
		in, out := &in.ContainerType, &out.ContainerType
		*out = new(string)
		**out = **in
	}
	if in.Sha1 != nil {
		in, out := &in.Sha1, &out.Sha1
		*out = new(string)
		**out = **in
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RawDiskInitParameters.
func (in *RawDiskInitParameters) DeepCopy() *RawDiskInitParameters {
	if in == nil {
		return nil
	}
	out := new(RawDiskInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RawDiskObservation) DeepCopyInto(out *RawDiskObservation) {
	*out = *in
	if in.ContainerType != nil {
		in, out := &in.ContainerType, &out.ContainerType
		*out = new(string)
		**out = **in
	}
	if in.Sha1 != nil {
		in, out := &in.Sha1, &out.Sha1
		*out = new(string)
		**out = **in
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RawDiskObservation.
func (in *RawDiskObservation) DeepCopy() *RawDiskObservation {
	if in == nil {
		return nil
	}
	out := new(RawDiskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RawDiskParameters) DeepCopyInto(out *RawDiskParameters) {
	*out = *in
	if in.ContainerType != nil {
		in, out := &in.ContainerType, &out.ContainerType
		*out = new(string)
		**out = **in
	}
	if in.Sha1 != nil {
		in, out := &in.Sha1, &out.Sha1
		*out = new(string)
		**out = **in
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RawDiskParameters.
func (in *RawDiskParameters) DeepCopy() *RawDiskParameters {
	if in == nil {
		return nil
	}
	out := new(RawDiskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RecaptchaOptionsConfigInitParameters) DeepCopyInto(out *RecaptchaOptionsConfigInitParameters) {
	*out = *in
	if in.RedirectSiteKey != nil {
		in, out := &in.RedirectSiteKey, &out.RedirectSiteKey
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RecaptchaOptionsConfigInitParameters.
func (in *RecaptchaOptionsConfigInitParameters) DeepCopy() *RecaptchaOptionsConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(RecaptchaOptionsConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RecaptchaOptionsConfigObservation) DeepCopyInto(out *RecaptchaOptionsConfigObservation) {
	*out = *in
	if in.RedirectSiteKey != nil {
		in, out := &in.RedirectSiteKey, &out.RedirectSiteKey
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RecaptchaOptionsConfigObservation.
func (in *RecaptchaOptionsConfigObservation) DeepCopy() *RecaptchaOptionsConfigObservation {
	if in == nil {
		return nil
	}
	out := new(RecaptchaOptionsConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RecaptchaOptionsConfigParameters) DeepCopyInto(out *RecaptchaOptionsConfigParameters) {
	*out = *in
	if in.RedirectSiteKey != nil {
		in, out := &in.RedirectSiteKey, &out.RedirectSiteKey
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RecaptchaOptionsConfigParameters.
func (in *RecaptchaOptionsConfigParameters) DeepCopy() *RecaptchaOptionsConfigParameters {
	if in == nil {
		return nil
	}
	out := new(RecaptchaOptionsConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RecaptchaOptionsInitParameters) DeepCopyInto(out *RecaptchaOptionsInitParameters) {
	*out = *in
	if in.ActionTokenSiteKeys != nil {
		in, out := &in.ActionTokenSiteKeys, &out.ActionTokenSiteKeys
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SessionTokenSiteKeys != nil {
		in, out := &in.SessionTokenSiteKeys, &out.SessionTokenSiteKeys
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RecaptchaOptionsInitParameters.
func (in *RecaptchaOptionsInitParameters) DeepCopy() *RecaptchaOptionsInitParameters {
	if in == nil {
		return nil
	}
	out := new(RecaptchaOptionsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RecaptchaOptionsObservation) DeepCopyInto(out *RecaptchaOptionsObservation) {
	*out = *in
	if in.ActionTokenSiteKeys != nil {
		in, out := &in.ActionTokenSiteKeys, &out.ActionTokenSiteKeys
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SessionTokenSiteKeys != nil {
		in, out := &in.SessionTokenSiteKeys, &out.SessionTokenSiteKeys
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RecaptchaOptionsObservation.
func (in *RecaptchaOptionsObservation) DeepCopy() *RecaptchaOptionsObservation {
	if in == nil {
		return nil
	}
	out := new(RecaptchaOptionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RecaptchaOptionsParameters) DeepCopyInto(out *RecaptchaOptionsParameters) {
	*out = *in
	if in.ActionTokenSiteKeys != nil {
		in, out := &in.ActionTokenSiteKeys, &out.ActionTokenSiteKeys
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SessionTokenSiteKeys != nil {
		in, out := &in.SessionTokenSiteKeys, &out.SessionTokenSiteKeys
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RecaptchaOptionsParameters.
func (in *RecaptchaOptionsParameters) DeepCopy() *RecaptchaOptionsParameters {
	if in == nil {
		return nil
	}
	out := new(RecaptchaOptionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RedirectOptionsInitParameters) DeepCopyInto(out *RedirectOptionsInitParameters) {
	*out = *in
	if in.Target != nil {
		in, out := &in.Target, &out.Target
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RedirectOptionsInitParameters.
func (in *RedirectOptionsInitParameters) DeepCopy() *RedirectOptionsInitParameters {
	if in == nil {
		return nil
	}
	out := new(RedirectOptionsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RedirectOptionsObservation) DeepCopyInto(out *RedirectOptionsObservation) {
	*out = *in
	if in.Target != nil {
		in, out := &in.Target, &out.Target
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RedirectOptionsObservation.
func (in *RedirectOptionsObservation) DeepCopy() *RedirectOptionsObservation {
	if in == nil {
		return nil
	}
	out := new(RedirectOptionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RedirectOptionsParameters) DeepCopyInto(out *RedirectOptionsParameters) {
	*out = *in
	if in.Target != nil {
		in, out := &in.Target, &out.Target
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RedirectOptionsParameters.
func (in *RedirectOptionsParameters) DeepCopy() *RedirectOptionsParameters {
	if in == nil {
		return nil
	}
	out := new(RedirectOptionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionAutoscaler) DeepCopyInto(out *RegionAutoscaler) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionAutoscaler.
func (in *RegionAutoscaler) DeepCopy() *RegionAutoscaler {
	if in == nil {
		return nil
	}
	out := new(RegionAutoscaler)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RegionAutoscaler) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionAutoscalerAutoscalingPolicyInitParameters) DeepCopyInto(out *RegionAutoscalerAutoscalingPolicyInitParameters) {
	*out = *in
	if in.CPUUtilization != nil {
		in, out := &in.CPUUtilization, &out.CPUUtilization
		*out = make([]AutoscalingPolicyCPUUtilizationInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CooldownPeriod != nil {
		in, out := &in.CooldownPeriod, &out.CooldownPeriod
		*out = new(float64)
		**out = **in
	}
	if in.LoadBalancingUtilization != nil {
		in, out := &in.LoadBalancingUtilization, &out.LoadBalancingUtilization
		*out = make([]AutoscalingPolicyLoadBalancingUtilizationInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MaxReplicas != nil {
		in, out := &in.MaxReplicas, &out.MaxReplicas
		*out = new(float64)
		**out = **in
	}
	if in.Metric != nil {
		in, out := &in.Metric, &out.Metric
		*out = make([]AutoscalingPolicyMetricInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MinReplicas != nil {
		in, out := &in.MinReplicas, &out.MinReplicas
		*out = new(float64)
		**out = **in
	}
	if in.Mode != nil {
		in, out := &in.Mode, &out.Mode
		*out = new(string)
		**out = **in
	}
	if in.ScaleInControl != nil {
		in, out := &in.ScaleInControl, &out.ScaleInControl
		*out = make([]AutoscalingPolicyScaleInControlInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ScalingSchedules != nil {
		in, out := &in.ScalingSchedules, &out.ScalingSchedules
		*out = make([]AutoscalingPolicyScalingSchedulesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionAutoscalerAutoscalingPolicyInitParameters.
func (in *RegionAutoscalerAutoscalingPolicyInitParameters) DeepCopy() *RegionAutoscalerAutoscalingPolicyInitParameters {
	if in == nil {
		return nil
	}
	out := new(RegionAutoscalerAutoscalingPolicyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionAutoscalerAutoscalingPolicyObservation) DeepCopyInto(out *RegionAutoscalerAutoscalingPolicyObservation) {
	*out = *in
	if in.CPUUtilization != nil {
		in, out := &in.CPUUtilization, &out.CPUUtilization
		*out = make([]AutoscalingPolicyCPUUtilizationObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CooldownPeriod != nil {
		in, out := &in.CooldownPeriod, &out.CooldownPeriod
		*out = new(float64)
		**out = **in
	}
	if in.LoadBalancingUtilization != nil {
		in, out := &in.LoadBalancingUtilization, &out.LoadBalancingUtilization
		*out = make([]AutoscalingPolicyLoadBalancingUtilizationObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MaxReplicas != nil {
		in, out := &in.MaxReplicas, &out.MaxReplicas
		*out = new(float64)
		**out = **in
	}
	if in.Metric != nil {
		in, out := &in.Metric, &out.Metric
		*out = make([]AutoscalingPolicyMetricObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MinReplicas != nil {
		in, out := &in.MinReplicas, &out.MinReplicas
		*out = new(float64)
		**out = **in
	}
	if in.Mode != nil {
		in, out := &in.Mode, &out.Mode
		*out = new(string)
		**out = **in
	}
	if in.ScaleInControl != nil {
		in, out := &in.ScaleInControl, &out.ScaleInControl
		*out = make([]AutoscalingPolicyScaleInControlObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ScalingSchedules != nil {
		in, out := &in.ScalingSchedules, &out.ScalingSchedules
		*out = make([]AutoscalingPolicyScalingSchedulesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionAutoscalerAutoscalingPolicyObservation.
func (in *RegionAutoscalerAutoscalingPolicyObservation) DeepCopy() *RegionAutoscalerAutoscalingPolicyObservation {
	if in == nil {
		return nil
	}
	out := new(RegionAutoscalerAutoscalingPolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionAutoscalerAutoscalingPolicyParameters) DeepCopyInto(out *RegionAutoscalerAutoscalingPolicyParameters) {
	*out = *in
	if in.CPUUtilization != nil {
		in, out := &in.CPUUtilization, &out.CPUUtilization
		*out = make([]AutoscalingPolicyCPUUtilizationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CooldownPeriod != nil {
		in, out := &in.CooldownPeriod, &out.CooldownPeriod
		*out = new(float64)
		**out = **in
	}
	if in.LoadBalancingUtilization != nil {
		in, out := &in.LoadBalancingUtilization, &out.LoadBalancingUtilization
		*out = make([]AutoscalingPolicyLoadBalancingUtilizationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MaxReplicas != nil {
		in, out := &in.MaxReplicas, &out.MaxReplicas
		*out = new(float64)
		**out = **in
	}
	if in.Metric != nil {
		in, out := &in.Metric, &out.Metric
		*out = make([]AutoscalingPolicyMetricParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MinReplicas != nil {
		in, out := &in.MinReplicas, &out.MinReplicas
		*out = new(float64)
		**out = **in
	}
	if in.Mode != nil {
		in, out := &in.Mode, &out.Mode
		*out = new(string)
		**out = **in
	}
	if in.ScaleInControl != nil {
		in, out := &in.ScaleInControl, &out.ScaleInControl
		*out = make([]AutoscalingPolicyScaleInControlParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ScalingSchedules != nil {
		in, out := &in.ScalingSchedules, &out.ScalingSchedules
		*out = make([]AutoscalingPolicyScalingSchedulesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionAutoscalerAutoscalingPolicyParameters.
func (in *RegionAutoscalerAutoscalingPolicyParameters) DeepCopy() *RegionAutoscalerAutoscalingPolicyParameters {
	if in == nil {
		return nil
	}
	out := new(RegionAutoscalerAutoscalingPolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionAutoscalerInitParameters) DeepCopyInto(out *RegionAutoscalerInitParameters) {
	*out = *in
	if in.AutoscalingPolicy != nil {
		in, out := &in.AutoscalingPolicy, &out.AutoscalingPolicy
		*out = make([]RegionAutoscalerAutoscalingPolicyInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Target != nil {
		in, out := &in.Target, &out.Target
		*out = new(string)
		**out = **in
	}
	if in.TargetRef != nil {
		in, out := &in.TargetRef, &out.TargetRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.TargetSelector != nil {
		in, out := &in.TargetSelector, &out.TargetSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionAutoscalerInitParameters.
func (in *RegionAutoscalerInitParameters) DeepCopy() *RegionAutoscalerInitParameters {
	if in == nil {
		return nil
	}
	out := new(RegionAutoscalerInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionAutoscalerList) DeepCopyInto(out *RegionAutoscalerList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]RegionAutoscaler, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionAutoscalerList.
func (in *RegionAutoscalerList) DeepCopy() *RegionAutoscalerList {
	if in == nil {
		return nil
	}
	out := new(RegionAutoscalerList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RegionAutoscalerList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionAutoscalerObservation) DeepCopyInto(out *RegionAutoscalerObservation) {
	*out = *in
	if in.AutoscalingPolicy != nil {
		in, out := &in.AutoscalingPolicy, &out.AutoscalingPolicy
		*out = make([]RegionAutoscalerAutoscalingPolicyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CreationTimestamp != nil {
		in, out := &in.CreationTimestamp, &out.CreationTimestamp
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.SelfLink != nil {
		in, out := &in.SelfLink, &out.SelfLink
		*out = new(string)
		**out = **in
	}
	if in.Target != nil {
		in, out := &in.Target, &out.Target
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionAutoscalerObservation.
func (in *RegionAutoscalerObservation) DeepCopy() *RegionAutoscalerObservation {
	if in == nil {
		return nil
	}
	out := new(RegionAutoscalerObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionAutoscalerParameters) DeepCopyInto(out *RegionAutoscalerParameters) {
	*out = *in
	if in.AutoscalingPolicy != nil {
		in, out := &in.AutoscalingPolicy, &out.AutoscalingPolicy
		*out = make([]RegionAutoscalerAutoscalingPolicyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.Target != nil {
		in, out := &in.Target, &out.Target
		*out = new(string)
		**out = **in
	}
	if in.TargetRef != nil {
		in, out := &in.TargetRef, &out.TargetRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.TargetSelector != nil {
		in, out := &in.TargetSelector, &out.TargetSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionAutoscalerParameters.
func (in *RegionAutoscalerParameters) DeepCopy() *RegionAutoscalerParameters {
	if in == nil {
		return nil
	}
	out := new(RegionAutoscalerParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionAutoscalerSpec) DeepCopyInto(out *RegionAutoscalerSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionAutoscalerSpec.
func (in *RegionAutoscalerSpec) DeepCopy() *RegionAutoscalerSpec {
	if in == nil {
		return nil
	}
	out := new(RegionAutoscalerSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionAutoscalerStatus) DeepCopyInto(out *RegionAutoscalerStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionAutoscalerStatus.
func (in *RegionAutoscalerStatus) DeepCopy() *RegionAutoscalerStatus {
	if in == nil {
		return nil
	}
	out := new(RegionAutoscalerStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionBackendService) DeepCopyInto(out *RegionBackendService) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionBackendService.
func (in *RegionBackendService) DeepCopy() *RegionBackendService {
	if in == nil {
		return nil
	}
	out := new(RegionBackendService)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RegionBackendService) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionBackendServiceBackendInitParameters) DeepCopyInto(out *RegionBackendServiceBackendInitParameters) {
	*out = *in
	if in.BalancingMode != nil {
		in, out := &in.BalancingMode, &out.BalancingMode
		*out = new(string)
		**out = **in
	}
	if in.CapacityScaler != nil {
		in, out := &in.CapacityScaler, &out.CapacityScaler
		*out = new(float64)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Failover != nil {
		in, out := &in.Failover, &out.Failover
		*out = new(bool)
		**out = **in
	}
	if in.Group != nil {
		in, out := &in.Group, &out.Group
		*out = new(string)
		**out = **in
	}
	if in.GroupRef != nil {
		in, out := &in.GroupRef, &out.GroupRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.GroupSelector != nil {
		in, out := &in.GroupSelector, &out.GroupSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.MaxConnections != nil {
		in, out := &in.MaxConnections, &out.MaxConnections
		*out = new(float64)
		**out = **in
	}
	if in.MaxConnectionsPerEndpoint != nil {
		in, out := &in.MaxConnectionsPerEndpoint, &out.MaxConnectionsPerEndpoint
		*out = new(float64)
		**out = **in
	}
	if in.MaxConnectionsPerInstance != nil {
		in, out := &in.MaxConnectionsPerInstance, &out.MaxConnectionsPerInstance
		*out = new(float64)
		**out = **in
	}
	if in.MaxRate != nil {
		in, out := &in.MaxRate, &out.MaxRate
		*out = new(float64)
		**out = **in
	}
	if in.MaxRatePerEndpoint != nil {
		in, out := &in.MaxRatePerEndpoint, &out.MaxRatePerEndpoint
		*out = new(float64)
		**out = **in
	}
	if in.MaxRatePerInstance != nil {
		in, out := &in.MaxRatePerInstance, &out.MaxRatePerInstance
		*out = new(float64)
		**out = **in
	}
	if in.MaxUtilization != nil {
		in, out := &in.MaxUtilization, &out.MaxUtilization
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionBackendServiceBackendInitParameters.
func (in *RegionBackendServiceBackendInitParameters) DeepCopy() *RegionBackendServiceBackendInitParameters {
	if in == nil {
		return nil
	}
	out := new(RegionBackendServiceBackendInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionBackendServiceBackendObservation) DeepCopyInto(out *RegionBackendServiceBackendObservation) {
	*out = *in
	if in.BalancingMode != nil {
		in, out := &in.BalancingMode, &out.BalancingMode
		*out = new(string)
		**out = **in
	}
	if in.CapacityScaler != nil {
		in, out := &in.CapacityScaler, &out.CapacityScaler
		*out = new(float64)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Failover != nil {
		in, out := &in.Failover, &out.Failover
		*out = new(bool)
		**out = **in
	}
	if in.Group != nil {
		in, out := &in.Group, &out.Group
		*out = new(string)
		**out = **in
	}
	if in.MaxConnections != nil {
		in, out := &in.MaxConnections, &out.MaxConnections
		*out = new(float64)
		**out = **in
	}
	if in.MaxConnectionsPerEndpoint != nil {
		in, out := &in.MaxConnectionsPerEndpoint, &out.MaxConnectionsPerEndpoint
		*out = new(float64)
		**out = **in
	}
	if in.MaxConnectionsPerInstance != nil {
		in, out := &in.MaxConnectionsPerInstance, &out.MaxConnectionsPerInstance
		*out = new(float64)
		**out = **in
	}
	if in.MaxRate != nil {
		in, out := &in.MaxRate, &out.MaxRate
		*out = new(float64)
		**out = **in
	}
	if in.MaxRatePerEndpoint != nil {
		in, out := &in.MaxRatePerEndpoint, &out.MaxRatePerEndpoint
		*out = new(float64)
		**out = **in
	}
	if in.MaxRatePerInstance != nil {
		in, out := &in.MaxRatePerInstance, &out.MaxRatePerInstance
		*out = new(float64)
		**out = **in
	}
	if in.MaxUtilization != nil {
		in, out := &in.MaxUtilization, &out.MaxUtilization
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionBackendServiceBackendObservation.
func (in *RegionBackendServiceBackendObservation) DeepCopy() *RegionBackendServiceBackendObservation {
	if in == nil {
		return nil
	}
	out := new(RegionBackendServiceBackendObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionBackendServiceBackendParameters) DeepCopyInto(out *RegionBackendServiceBackendParameters) {
	*out = *in
	if in.BalancingMode != nil {
		in, out := &in.BalancingMode, &out.BalancingMode
		*out = new(string)
		**out = **in
	}
	if in.CapacityScaler != nil {
		in, out := &in.CapacityScaler, &out.CapacityScaler
		*out = new(float64)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Failover != nil {
		in, out := &in.Failover, &out.Failover
		*out = new(bool)
		**out = **in
	}
	if in.Group != nil {
		in, out := &in.Group, &out.Group
		*out = new(string)
		**out = **in
	}
	if in.GroupRef != nil {
		in, out := &in.GroupRef, &out.GroupRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.GroupSelector != nil {
		in, out := &in.GroupSelector, &out.GroupSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.MaxConnections != nil {
		in, out := &in.MaxConnections, &out.MaxConnections
		*out = new(float64)
		**out = **in
	}
	if in.MaxConnectionsPerEndpoint != nil {
		in, out := &in.MaxConnectionsPerEndpoint, &out.MaxConnectionsPerEndpoint
		*out = new(float64)
		**out = **in
	}
	if in.MaxConnectionsPerInstance != nil {
		in, out := &in.MaxConnectionsPerInstance, &out.MaxConnectionsPerInstance
		*out = new(float64)
		**out = **in
	}
	if in.MaxRate != nil {
		in, out := &in.MaxRate, &out.MaxRate
		*out = new(float64)
		**out = **in
	}
	if in.MaxRatePerEndpoint != nil {
		in, out := &in.MaxRatePerEndpoint, &out.MaxRatePerEndpoint
		*out = new(float64)
		**out = **in
	}
	if in.MaxRatePerInstance != nil {
		in, out := &in.MaxRatePerInstance, &out.MaxRatePerInstance
		*out = new(float64)
		**out = **in
	}
	if in.MaxUtilization != nil {
		in, out := &in.MaxUtilization, &out.MaxUtilization
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionBackendServiceBackendParameters.
func (in *RegionBackendServiceBackendParameters) DeepCopy() *RegionBackendServiceBackendParameters {
	if in == nil {
		return nil
	}
	out := new(RegionBackendServiceBackendParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionBackendServiceCdnPolicyCacheKeyPolicyInitParameters) DeepCopyInto(out *RegionBackendServiceCdnPolicyCacheKeyPolicyInitParameters) {
	*out = *in
	if in.IncludeHost != nil {
		in, out := &in.IncludeHost, &out.IncludeHost
		*out = new(bool)
		**out = **in
	}
	if in.IncludeNamedCookies != nil {
		in, out := &in.IncludeNamedCookies, &out.IncludeNamedCookies
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.IncludeProtocol != nil {
		in, out := &in.IncludeProtocol, &out.IncludeProtocol
		*out = new(bool)
		**out = **in
	}
	if in.IncludeQueryString != nil {
		in, out := &in.IncludeQueryString, &out.IncludeQueryString
		*out = new(bool)
		**out = **in
	}
	if in.QueryStringBlacklist != nil {
		in, out := &in.QueryStringBlacklist, &out.QueryStringBlacklist
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.QueryStringWhitelist != nil {
		in, out := &in.QueryStringWhitelist, &out.QueryStringWhitelist
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionBackendServiceCdnPolicyCacheKeyPolicyInitParameters.
func (in *RegionBackendServiceCdnPolicyCacheKeyPolicyInitParameters) DeepCopy() *RegionBackendServiceCdnPolicyCacheKeyPolicyInitParameters {
	if in == nil {
		return nil
	}
	out := new(RegionBackendServiceCdnPolicyCacheKeyPolicyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionBackendServiceCdnPolicyCacheKeyPolicyObservation) DeepCopyInto(out *RegionBackendServiceCdnPolicyCacheKeyPolicyObservation) {
	*out = *in
	if in.IncludeHost != nil {
		in, out := &in.IncludeHost, &out.IncludeHost
		*out = new(bool)
		**out = **in
	}
	if in.IncludeNamedCookies != nil {
		in, out := &in.IncludeNamedCookies, &out.IncludeNamedCookies
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.IncludeProtocol != nil {
		in, out := &in.IncludeProtocol, &out.IncludeProtocol
		*out = new(bool)
		**out = **in
	}
	if in.IncludeQueryString != nil {
		in, out := &in.IncludeQueryString, &out.IncludeQueryString
		*out = new(bool)
		**out = **in
	}
	if in.QueryStringBlacklist != nil {
		in, out := &in.QueryStringBlacklist, &out.QueryStringBlacklist
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.QueryStringWhitelist != nil {
		in, out := &in.QueryStringWhitelist, &out.QueryStringWhitelist
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionBackendServiceCdnPolicyCacheKeyPolicyObservation.
func (in *RegionBackendServiceCdnPolicyCacheKeyPolicyObservation) DeepCopy() *RegionBackendServiceCdnPolicyCacheKeyPolicyObservation {
	if in == nil {
		return nil
	}
	out := new(RegionBackendServiceCdnPolicyCacheKeyPolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionBackendServiceCdnPolicyCacheKeyPolicyParameters) DeepCopyInto(out *RegionBackendServiceCdnPolicyCacheKeyPolicyParameters) {
	*out = *in
	if in.IncludeHost != nil {
		in, out := &in.IncludeHost, &out.IncludeHost
		*out = new(bool)
		**out = **in
	}
	if in.IncludeNamedCookies != nil {
		in, out := &in.IncludeNamedCookies, &out.IncludeNamedCookies
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.IncludeProtocol != nil {
		in, out := &in.IncludeProtocol, &out.IncludeProtocol
		*out = new(bool)
		**out = **in
	}
	if in.IncludeQueryString != nil {
		in, out := &in.IncludeQueryString, &out.IncludeQueryString
		*out = new(bool)
		**out = **in
	}
	if in.QueryStringBlacklist != nil {
		in, out := &in.QueryStringBlacklist, &out.QueryStringBlacklist
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.QueryStringWhitelist != nil {
		in, out := &in.QueryStringWhitelist, &out.QueryStringWhitelist
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionBackendServiceCdnPolicyCacheKeyPolicyParameters.
func (in *RegionBackendServiceCdnPolicyCacheKeyPolicyParameters) DeepCopy() *RegionBackendServiceCdnPolicyCacheKeyPolicyParameters {
	if in == nil {
		return nil
	}
	out := new(RegionBackendServiceCdnPolicyCacheKeyPolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionBackendServiceCdnPolicyInitParameters) DeepCopyInto(out *RegionBackendServiceCdnPolicyInitParameters) {
	*out = *in
	if in.CacheKeyPolicy != nil {
		in, out := &in.CacheKeyPolicy, &out.CacheKeyPolicy
		*out = make([]RegionBackendServiceCdnPolicyCacheKeyPolicyInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CacheMode != nil {
		in, out := &in.CacheMode, &out.CacheMode
		*out = new(string)
		**out = **in
	}
	if in.ClientTTL != nil {
		in, out := &in.ClientTTL, &out.ClientTTL
		*out = new(float64)
		**out = **in
	}
	if in.DefaultTTL != nil {
		in, out := &in.DefaultTTL, &out.DefaultTTL
		*out = new(float64)
		**out = **in
	}
	if in.MaxTTL != nil {
		in, out := &in.MaxTTL, &out.MaxTTL
		*out = new(float64)
		**out = **in
	}
	if in.NegativeCaching != nil {
		in, out := &in.NegativeCaching, &out.NegativeCaching
		*out = new(bool)
		**out = **in
	}
	if in.NegativeCachingPolicy != nil {
		in, out := &in.NegativeCachingPolicy, &out.NegativeCachingPolicy
		*out = make([]RegionBackendServiceCdnPolicyNegativeCachingPolicyInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ServeWhileStale != nil {
		in, out := &in.ServeWhileStale, &out.ServeWhileStale
		*out = new(float64)
		**out = **in
	}
	if in.SignedURLCacheMaxAgeSec != nil {
		in, out := &in.SignedURLCacheMaxAgeSec, &out.SignedURLCacheMaxAgeSec
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionBackendServiceCdnPolicyInitParameters.
func (in *RegionBackendServiceCdnPolicyInitParameters) DeepCopy() *RegionBackendServiceCdnPolicyInitParameters {
	if in == nil {
		return nil
	}
	out := new(RegionBackendServiceCdnPolicyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionBackendServiceCdnPolicyNegativeCachingPolicyInitParameters) DeepCopyInto(out *RegionBackendServiceCdnPolicyNegativeCachingPolicyInitParameters) {
	*out = *in
	if in.Code != nil {
		in, out := &in.Code, &out.Code
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionBackendServiceCdnPolicyNegativeCachingPolicyInitParameters.
func (in *RegionBackendServiceCdnPolicyNegativeCachingPolicyInitParameters) DeepCopy() *RegionBackendServiceCdnPolicyNegativeCachingPolicyInitParameters {
	if in == nil {
		return nil
	}
	out := new(RegionBackendServiceCdnPolicyNegativeCachingPolicyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionBackendServiceCdnPolicyNegativeCachingPolicyObservation) DeepCopyInto(out *RegionBackendServiceCdnPolicyNegativeCachingPolicyObservation) {
	*out = *in
	if in.Code != nil {
		in, out := &in.Code, &out.Code
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionBackendServiceCdnPolicyNegativeCachingPolicyObservation.
func (in *RegionBackendServiceCdnPolicyNegativeCachingPolicyObservation) DeepCopy() *RegionBackendServiceCdnPolicyNegativeCachingPolicyObservation {
	if in == nil {
		return nil
	}
	out := new(RegionBackendServiceCdnPolicyNegativeCachingPolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionBackendServiceCdnPolicyNegativeCachingPolicyParameters) DeepCopyInto(out *RegionBackendServiceCdnPolicyNegativeCachingPolicyParameters) {
	*out = *in
	if in.Code != nil {
		in, out := &in.Code, &out.Code
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionBackendServiceCdnPolicyNegativeCachingPolicyParameters.
func (in *RegionBackendServiceCdnPolicyNegativeCachingPolicyParameters) DeepCopy() *RegionBackendServiceCdnPolicyNegativeCachingPolicyParameters {
	if in == nil {
		return nil
	}
	out := new(RegionBackendServiceCdnPolicyNegativeCachingPolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionBackendServiceCdnPolicyObservation) DeepCopyInto(out *RegionBackendServiceCdnPolicyObservation) {
	*out = *in
	if in.CacheKeyPolicy != nil {
		in, out := &in.CacheKeyPolicy, &out.CacheKeyPolicy
		*out = make([]RegionBackendServiceCdnPolicyCacheKeyPolicyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CacheMode != nil {
		in, out := &in.CacheMode, &out.CacheMode
		*out = new(string)
		**out = **in
	}
	if in.ClientTTL != nil {
		in, out := &in.ClientTTL, &out.ClientTTL
		*out = new(float64)
		**out = **in
	}
	if in.DefaultTTL != nil {
		in, out := &in.DefaultTTL, &out.DefaultTTL
		*out = new(float64)
		**out = **in
	}
	if in.MaxTTL != nil {
		in, out := &in.MaxTTL, &out.MaxTTL
		*out = new(float64)
		**out = **in
	}
	if in.NegativeCaching != nil {
		in, out := &in.NegativeCaching, &out.NegativeCaching
		*out = new(bool)
		**out = **in
	}
	if in.NegativeCachingPolicy != nil {
		in, out := &in.NegativeCachingPolicy, &out.NegativeCachingPolicy
		*out = make([]RegionBackendServiceCdnPolicyNegativeCachingPolicyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ServeWhileStale != nil {
		in, out := &in.ServeWhileStale, &out.ServeWhileStale
		*out = new(float64)
		**out = **in
	}
	if in.SignedURLCacheMaxAgeSec != nil {
		in, out := &in.SignedURLCacheMaxAgeSec, &out.SignedURLCacheMaxAgeSec
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionBackendServiceCdnPolicyObservation.
func (in *RegionBackendServiceCdnPolicyObservation) DeepCopy() *RegionBackendServiceCdnPolicyObservation {
	if in == nil {
		return nil
	}
	out := new(RegionBackendServiceCdnPolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionBackendServiceCdnPolicyParameters) DeepCopyInto(out *RegionBackendServiceCdnPolicyParameters) {
	*out = *in
	if in.CacheKeyPolicy != nil {
		in, out := &in.CacheKeyPolicy, &out.CacheKeyPolicy
		*out = make([]RegionBackendServiceCdnPolicyCacheKeyPolicyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CacheMode != nil {
		in, out := &in.CacheMode, &out.CacheMode
		*out = new(string)
		**out = **in
	}
	if in.ClientTTL != nil {
		in, out := &in.ClientTTL, &out.ClientTTL
		*out = new(float64)
		**out = **in
	}
	if in.DefaultTTL != nil {
		in, out := &in.DefaultTTL, &out.DefaultTTL
		*out = new(float64)
		**out = **in
	}
	if in.MaxTTL != nil {
		in, out := &in.MaxTTL, &out.MaxTTL
		*out = new(float64)
		**out = **in
	}
	if in.NegativeCaching != nil {
		in, out := &in.NegativeCaching, &out.NegativeCaching
		*out = new(bool)
		**out = **in
	}
	if in.NegativeCachingPolicy != nil {
		in, out := &in.NegativeCachingPolicy, &out.NegativeCachingPolicy
		*out = make([]RegionBackendServiceCdnPolicyNegativeCachingPolicyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ServeWhileStale != nil {
		in, out := &in.ServeWhileStale, &out.ServeWhileStale
		*out = new(float64)
		**out = **in
	}
	if in.SignedURLCacheMaxAgeSec != nil {
		in, out := &in.SignedURLCacheMaxAgeSec, &out.SignedURLCacheMaxAgeSec
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionBackendServiceCdnPolicyParameters.
func (in *RegionBackendServiceCdnPolicyParameters) DeepCopy() *RegionBackendServiceCdnPolicyParameters {
	if in == nil {
		return nil
	}
	out := new(RegionBackendServiceCdnPolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionBackendServiceCircuitBreakersInitParameters) DeepCopyInto(out *RegionBackendServiceCircuitBreakersInitParameters) {
	*out = *in
	if in.MaxConnections != nil {
		in, out := &in.MaxConnections, &out.MaxConnections
		*out = new(float64)
		**out = **in
	}
	if in.MaxPendingRequests != nil {
		in, out := &in.MaxPendingRequests, &out.MaxPendingRequests
		*out = new(float64)
		**out = **in
	}
	if in.MaxRequests != nil {
		in, out := &in.MaxRequests, &out.MaxRequests
		*out = new(float64)
		**out = **in
	}
	if in.MaxRequestsPerConnection != nil {
		in, out := &in.MaxRequestsPerConnection, &out.MaxRequestsPerConnection
		*out = new(float64)
		**out = **in
	}
	if in.MaxRetries != nil {
		in, out := &in.MaxRetries, &out.MaxRetries
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionBackendServiceCircuitBreakersInitParameters.
func (in *RegionBackendServiceCircuitBreakersInitParameters) DeepCopy() *RegionBackendServiceCircuitBreakersInitParameters {
	if in == nil {
		return nil
	}
	out := new(RegionBackendServiceCircuitBreakersInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionBackendServiceCircuitBreakersObservation) DeepCopyInto(out *RegionBackendServiceCircuitBreakersObservation) {
	*out = *in
	if in.MaxConnections != nil {
		in, out := &in.MaxConnections, &out.MaxConnections
		*out = new(float64)
		**out = **in
	}
	if in.MaxPendingRequests != nil {
		in, out := &in.MaxPendingRequests, &out.MaxPendingRequests
		*out = new(float64)
		**out = **in
	}
	if in.MaxRequests != nil {
		in, out := &in.MaxRequests, &out.MaxRequests
		*out = new(float64)
		**out = **in
	}
	if in.MaxRequestsPerConnection != nil {
		in, out := &in.MaxRequestsPerConnection, &out.MaxRequestsPerConnection
		*out = new(float64)
		**out = **in
	}
	if in.MaxRetries != nil {
		in, out := &in.MaxRetries, &out.MaxRetries
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionBackendServiceCircuitBreakersObservation.
func (in *RegionBackendServiceCircuitBreakersObservation) DeepCopy() *RegionBackendServiceCircuitBreakersObservation {
	if in == nil {
		return nil
	}
	out := new(RegionBackendServiceCircuitBreakersObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionBackendServiceCircuitBreakersParameters) DeepCopyInto(out *RegionBackendServiceCircuitBreakersParameters) {
	*out = *in
	if in.MaxConnections != nil {
		in, out := &in.MaxConnections, &out.MaxConnections
		*out = new(float64)
		**out = **in
	}
	if in.MaxPendingRequests != nil {
		in, out := &in.MaxPendingRequests, &out.MaxPendingRequests
		*out = new(float64)
		**out = **in
	}
	if in.MaxRequests != nil {
		in, out := &in.MaxRequests, &out.MaxRequests
		*out = new(float64)
		**out = **in
	}
	if in.MaxRequestsPerConnection != nil {
		in, out := &in.MaxRequestsPerConnection, &out.MaxRequestsPerConnection
		*out = new(float64)
		**out = **in
	}
	if in.MaxRetries != nil {
		in, out := &in.MaxRetries, &out.MaxRetries
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionBackendServiceCircuitBreakersParameters.
func (in *RegionBackendServiceCircuitBreakersParameters) DeepCopy() *RegionBackendServiceCircuitBreakersParameters {
	if in == nil {
		return nil
	}
	out := new(RegionBackendServiceCircuitBreakersParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionBackendServiceConsistentHashInitParameters) DeepCopyInto(out *RegionBackendServiceConsistentHashInitParameters) {
	*out = *in
	if in.HTTPCookie != nil {
		in, out := &in.HTTPCookie, &out.HTTPCookie
		*out = make([]ConsistentHashHTTPCookieInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HTTPHeaderName != nil {
		in, out := &in.HTTPHeaderName, &out.HTTPHeaderName
		*out = new(string)
		**out = **in
	}
	if in.MinimumRingSize != nil {
		in, out := &in.MinimumRingSize, &out.MinimumRingSize
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionBackendServiceConsistentHashInitParameters.
func (in *RegionBackendServiceConsistentHashInitParameters) DeepCopy() *RegionBackendServiceConsistentHashInitParameters {
	if in == nil {
		return nil
	}
	out := new(RegionBackendServiceConsistentHashInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionBackendServiceConsistentHashObservation) DeepCopyInto(out *RegionBackendServiceConsistentHashObservation) {
	*out = *in
	if in.HTTPCookie != nil {
		in, out := &in.HTTPCookie, &out.HTTPCookie
		*out = make([]ConsistentHashHTTPCookieObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HTTPHeaderName != nil {
		in, out := &in.HTTPHeaderName, &out.HTTPHeaderName
		*out = new(string)
		**out = **in
	}
	if in.MinimumRingSize != nil {
		in, out := &in.MinimumRingSize, &out.MinimumRingSize
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionBackendServiceConsistentHashObservation.
func (in *RegionBackendServiceConsistentHashObservation) DeepCopy() *RegionBackendServiceConsistentHashObservation {
	if in == nil {
		return nil
	}
	out := new(RegionBackendServiceConsistentHashObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionBackendServiceConsistentHashParameters) DeepCopyInto(out *RegionBackendServiceConsistentHashParameters) {
	*out = *in
	if in.HTTPCookie != nil {
		in, out := &in.HTTPCookie, &out.HTTPCookie
		*out = make([]ConsistentHashHTTPCookieParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HTTPHeaderName != nil {
		in, out := &in.HTTPHeaderName, &out.HTTPHeaderName
		*out = new(string)
		**out = **in
	}
	if in.MinimumRingSize != nil {
		in, out := &in.MinimumRingSize, &out.MinimumRingSize
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionBackendServiceConsistentHashParameters.
func (in *RegionBackendServiceConsistentHashParameters) DeepCopy() *RegionBackendServiceConsistentHashParameters {
	if in == nil {
		return nil
	}
	out := new(RegionBackendServiceConsistentHashParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionBackendServiceIapInitParameters) DeepCopyInto(out *RegionBackendServiceIapInitParameters) {
	*out = *in
	if in.Oauth2ClientID != nil {
		in, out := &in.Oauth2ClientID, &out.Oauth2ClientID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionBackendServiceIapInitParameters.
func (in *RegionBackendServiceIapInitParameters) DeepCopy() *RegionBackendServiceIapInitParameters {
	if in == nil {
		return nil
	}
	out := new(RegionBackendServiceIapInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionBackendServiceIapObservation) DeepCopyInto(out *RegionBackendServiceIapObservation) {
	*out = *in
	if in.Oauth2ClientID != nil {
		in, out := &in.Oauth2ClientID, &out.Oauth2ClientID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionBackendServiceIapObservation.
func (in *RegionBackendServiceIapObservation) DeepCopy() *RegionBackendServiceIapObservation {
	if in == nil {
		return nil
	}
	out := new(RegionBackendServiceIapObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionBackendServiceIapParameters) DeepCopyInto(out *RegionBackendServiceIapParameters) {
	*out = *in
	if in.Oauth2ClientID != nil {
		in, out := &in.Oauth2ClientID, &out.Oauth2ClientID
		*out = new(string)
		**out = **in
	}
	out.Oauth2ClientSecretSecretRef = in.Oauth2ClientSecretSecretRef
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionBackendServiceIapParameters.
func (in *RegionBackendServiceIapParameters) DeepCopy() *RegionBackendServiceIapParameters {
	if in == nil {
		return nil
	}
	out := new(RegionBackendServiceIapParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionBackendServiceInitParameters) DeepCopyInto(out *RegionBackendServiceInitParameters) {
	*out = *in
	if in.AffinityCookieTTLSec != nil {
		in, out := &in.AffinityCookieTTLSec, &out.AffinityCookieTTLSec
		*out = new(float64)
		**out = **in
	}
	if in.Backend != nil {
		in, out := &in.Backend, &out.Backend
		*out = make([]RegionBackendServiceBackendInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CdnPolicy != nil {
		in, out := &in.CdnPolicy, &out.CdnPolicy
		*out = make([]RegionBackendServiceCdnPolicyInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CircuitBreakers != nil {
		in, out := &in.CircuitBreakers, &out.CircuitBreakers
		*out = make([]RegionBackendServiceCircuitBreakersInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ConnectionDrainingTimeoutSec != nil {
		in, out := &in.ConnectionDrainingTimeoutSec, &out.ConnectionDrainingTimeoutSec
		*out = new(float64)
		**out = **in
	}
	if in.ConsistentHash != nil {
		in, out := &in.ConsistentHash, &out.ConsistentHash
		*out = make([]RegionBackendServiceConsistentHashInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.EnableCdn != nil {
		in, out := &in.EnableCdn, &out.EnableCdn
		*out = new(bool)
		**out = **in
	}
	if in.FailoverPolicy != nil {
		in, out := &in.FailoverPolicy, &out.FailoverPolicy
		*out = make([]FailoverPolicyInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HealthChecks != nil {
		in, out := &in.HealthChecks, &out.HealthChecks
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.HealthChecksRefs != nil {
		in, out := &in.HealthChecksRefs, &out.HealthChecksRefs
		*out = make([]v1.Reference, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HealthChecksSelector != nil {
		in, out := &in.HealthChecksSelector, &out.HealthChecksSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Iap != nil {
		in, out := &in.Iap, &out.Iap
		*out = make([]RegionBackendServiceIapInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LoadBalancingScheme != nil {
		in, out := &in.LoadBalancingScheme, &out.LoadBalancingScheme
		*out = new(string)
		**out = **in
	}
	if in.LocalityLBPolicy != nil {
		in, out := &in.LocalityLBPolicy, &out.LocalityLBPolicy
		*out = new(string)
		**out = **in
	}
	if in.LogConfig != nil {
		in, out := &in.LogConfig, &out.LogConfig
		*out = make([]RegionBackendServiceLogConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Network != nil {
		in, out := &in.Network, &out.Network
		*out = new(string)
		**out = **in
	}
	if in.OutlierDetection != nil {
		in, out := &in.OutlierDetection, &out.OutlierDetection
		*out = make([]RegionBackendServiceOutlierDetectionInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PortName != nil {
		in, out := &in.PortName, &out.PortName
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Protocol != nil {
		in, out := &in.Protocol, &out.Protocol
		*out = new(string)
		**out = **in
	}
	if in.SessionAffinity != nil {
		in, out := &in.SessionAffinity, &out.SessionAffinity
		*out = new(string)
		**out = **in
	}
	if in.TimeoutSec != nil {
		in, out := &in.TimeoutSec, &out.TimeoutSec
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionBackendServiceInitParameters.
func (in *RegionBackendServiceInitParameters) DeepCopy() *RegionBackendServiceInitParameters {
	if in == nil {
		return nil
	}
	out := new(RegionBackendServiceInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionBackendServiceList) DeepCopyInto(out *RegionBackendServiceList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]RegionBackendService, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionBackendServiceList.
func (in *RegionBackendServiceList) DeepCopy() *RegionBackendServiceList {
	if in == nil {
		return nil
	}
	out := new(RegionBackendServiceList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RegionBackendServiceList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionBackendServiceLogConfigInitParameters) DeepCopyInto(out *RegionBackendServiceLogConfigInitParameters) {
	*out = *in
	if in.Enable != nil {
		in, out := &in.Enable, &out.Enable
		*out = new(bool)
		**out = **in
	}
	if in.SampleRate != nil {
		in, out := &in.SampleRate, &out.SampleRate
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionBackendServiceLogConfigInitParameters.
func (in *RegionBackendServiceLogConfigInitParameters) DeepCopy() *RegionBackendServiceLogConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(RegionBackendServiceLogConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionBackendServiceLogConfigObservation) DeepCopyInto(out *RegionBackendServiceLogConfigObservation) {
	*out = *in
	if in.Enable != nil {
		in, out := &in.Enable, &out.Enable
		*out = new(bool)
		**out = **in
	}
	if in.SampleRate != nil {
		in, out := &in.SampleRate, &out.SampleRate
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionBackendServiceLogConfigObservation.
func (in *RegionBackendServiceLogConfigObservation) DeepCopy() *RegionBackendServiceLogConfigObservation {
	if in == nil {
		return nil
	}
	out := new(RegionBackendServiceLogConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionBackendServiceLogConfigParameters) DeepCopyInto(out *RegionBackendServiceLogConfigParameters) {
	*out = *in
	if in.Enable != nil {
		in, out := &in.Enable, &out.Enable
		*out = new(bool)
		**out = **in
	}
	if in.SampleRate != nil {
		in, out := &in.SampleRate, &out.SampleRate
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionBackendServiceLogConfigParameters.
func (in *RegionBackendServiceLogConfigParameters) DeepCopy() *RegionBackendServiceLogConfigParameters {
	if in == nil {
		return nil
	}
	out := new(RegionBackendServiceLogConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionBackendServiceObservation) DeepCopyInto(out *RegionBackendServiceObservation) {
	*out = *in
	if in.AffinityCookieTTLSec != nil {
		in, out := &in.AffinityCookieTTLSec, &out.AffinityCookieTTLSec
		*out = new(float64)
		**out = **in
	}
	if in.Backend != nil {
		in, out := &in.Backend, &out.Backend
		*out = make([]RegionBackendServiceBackendObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CdnPolicy != nil {
		in, out := &in.CdnPolicy, &out.CdnPolicy
		*out = make([]RegionBackendServiceCdnPolicyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CircuitBreakers != nil {
		in, out := &in.CircuitBreakers, &out.CircuitBreakers
		*out = make([]RegionBackendServiceCircuitBreakersObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ConnectionDrainingTimeoutSec != nil {
		in, out := &in.ConnectionDrainingTimeoutSec, &out.ConnectionDrainingTimeoutSec
		*out = new(float64)
		**out = **in
	}
	if in.ConsistentHash != nil {
		in, out := &in.ConsistentHash, &out.ConsistentHash
		*out = make([]RegionBackendServiceConsistentHashObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CreationTimestamp != nil {
		in, out := &in.CreationTimestamp, &out.CreationTimestamp
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.EnableCdn != nil {
		in, out := &in.EnableCdn, &out.EnableCdn
		*out = new(bool)
		**out = **in
	}
	if in.FailoverPolicy != nil {
		in, out := &in.FailoverPolicy, &out.FailoverPolicy
		*out = make([]FailoverPolicyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Fingerprint != nil {
		in, out := &in.Fingerprint, &out.Fingerprint
		*out = new(string)
		**out = **in
	}
	if in.GeneratedID != nil {
		in, out := &in.GeneratedID, &out.GeneratedID
		*out = new(float64)
		**out = **in
	}
	if in.HealthChecks != nil {
		in, out := &in.HealthChecks, &out.HealthChecks
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Iap != nil {
		in, out := &in.Iap, &out.Iap
		*out = make([]RegionBackendServiceIapObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LoadBalancingScheme != nil {
		in, out := &in.LoadBalancingScheme, &out.LoadBalancingScheme
		*out = new(string)
		**out = **in
	}
	if in.LocalityLBPolicy != nil {
		in, out := &in.LocalityLBPolicy, &out.LocalityLBPolicy
		*out = new(string)
		**out = **in
	}
	if in.LogConfig != nil {
		in, out := &in.LogConfig, &out.LogConfig
		*out = make([]RegionBackendServiceLogConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Network != nil {
		in, out := &in.Network, &out.Network
		*out = new(string)
		**out = **in
	}
	if in.OutlierDetection != nil {
		in, out := &in.OutlierDetection, &out.OutlierDetection
		*out = make([]RegionBackendServiceOutlierDetectionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PortName != nil {
		in, out := &in.PortName, &out.PortName
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Protocol != nil {
		in, out := &in.Protocol, &out.Protocol
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.SelfLink != nil {
		in, out := &in.SelfLink, &out.SelfLink
		*out = new(string)
		**out = **in
	}
	if in.SessionAffinity != nil {
		in, out := &in.SessionAffinity, &out.SessionAffinity
		*out = new(string)
		**out = **in
	}
	if in.TimeoutSec != nil {
		in, out := &in.TimeoutSec, &out.TimeoutSec
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionBackendServiceObservation.
func (in *RegionBackendServiceObservation) DeepCopy() *RegionBackendServiceObservation {
	if in == nil {
		return nil
	}
	out := new(RegionBackendServiceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionBackendServiceOutlierDetectionInitParameters) DeepCopyInto(out *RegionBackendServiceOutlierDetectionInitParameters) {
	*out = *in
	if in.BaseEjectionTime != nil {
		in, out := &in.BaseEjectionTime, &out.BaseEjectionTime
		*out = make([]OutlierDetectionBaseEjectionTimeInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ConsecutiveErrors != nil {
		in, out := &in.ConsecutiveErrors, &out.ConsecutiveErrors
		*out = new(float64)
		**out = **in
	}
	if in.ConsecutiveGatewayFailure != nil {
		in, out := &in.ConsecutiveGatewayFailure, &out.ConsecutiveGatewayFailure
		*out = new(float64)
		**out = **in
	}
	if in.EnforcingConsecutiveErrors != nil {
		in, out := &in.EnforcingConsecutiveErrors, &out.EnforcingConsecutiveErrors
		*out = new(float64)
		**out = **in
	}
	if in.EnforcingConsecutiveGatewayFailure != nil {
		in, out := &in.EnforcingConsecutiveGatewayFailure, &out.EnforcingConsecutiveGatewayFailure
		*out = new(float64)
		**out = **in
	}
	if in.EnforcingSuccessRate != nil {
		in, out := &in.EnforcingSuccessRate, &out.EnforcingSuccessRate
		*out = new(float64)
		**out = **in
	}
	if in.Interval != nil {
		in, out := &in.Interval, &out.Interval
		*out = make([]OutlierDetectionIntervalInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MaxEjectionPercent != nil {
		in, out := &in.MaxEjectionPercent, &out.MaxEjectionPercent
		*out = new(float64)
		**out = **in
	}
	if in.SuccessRateMinimumHosts != nil {
		in, out := &in.SuccessRateMinimumHosts, &out.SuccessRateMinimumHosts
		*out = new(float64)
		**out = **in
	}
	if in.SuccessRateRequestVolume != nil {
		in, out := &in.SuccessRateRequestVolume, &out.SuccessRateRequestVolume
		*out = new(float64)
		**out = **in
	}
	if in.SuccessRateStdevFactor != nil {
		in, out := &in.SuccessRateStdevFactor, &out.SuccessRateStdevFactor
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionBackendServiceOutlierDetectionInitParameters.
func (in *RegionBackendServiceOutlierDetectionInitParameters) DeepCopy() *RegionBackendServiceOutlierDetectionInitParameters {
	if in == nil {
		return nil
	}
	out := new(RegionBackendServiceOutlierDetectionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionBackendServiceOutlierDetectionObservation) DeepCopyInto(out *RegionBackendServiceOutlierDetectionObservation) {
	*out = *in
	if in.BaseEjectionTime != nil {
		in, out := &in.BaseEjectionTime, &out.BaseEjectionTime
		*out = make([]OutlierDetectionBaseEjectionTimeObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ConsecutiveErrors != nil {
		in, out := &in.ConsecutiveErrors, &out.ConsecutiveErrors
		*out = new(float64)
		**out = **in
	}
	if in.ConsecutiveGatewayFailure != nil {
		in, out := &in.ConsecutiveGatewayFailure, &out.ConsecutiveGatewayFailure
		*out = new(float64)
		**out = **in
	}
	if in.EnforcingConsecutiveErrors != nil {
		in, out := &in.EnforcingConsecutiveErrors, &out.EnforcingConsecutiveErrors
		*out = new(float64)
		**out = **in
	}
	if in.EnforcingConsecutiveGatewayFailure != nil {
		in, out := &in.EnforcingConsecutiveGatewayFailure, &out.EnforcingConsecutiveGatewayFailure
		*out = new(float64)
		**out = **in
	}
	if in.EnforcingSuccessRate != nil {
		in, out := &in.EnforcingSuccessRate, &out.EnforcingSuccessRate
		*out = new(float64)
		**out = **in
	}
	if in.Interval != nil {
		in, out := &in.Interval, &out.Interval
		*out = make([]OutlierDetectionIntervalObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MaxEjectionPercent != nil {
		in, out := &in.MaxEjectionPercent, &out.MaxEjectionPercent
		*out = new(float64)
		**out = **in
	}
	if in.SuccessRateMinimumHosts != nil {
		in, out := &in.SuccessRateMinimumHosts, &out.SuccessRateMinimumHosts
		*out = new(float64)
		**out = **in
	}
	if in.SuccessRateRequestVolume != nil {
		in, out := &in.SuccessRateRequestVolume, &out.SuccessRateRequestVolume
		*out = new(float64)
		**out = **in
	}
	if in.SuccessRateStdevFactor != nil {
		in, out := &in.SuccessRateStdevFactor, &out.SuccessRateStdevFactor
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionBackendServiceOutlierDetectionObservation.
func (in *RegionBackendServiceOutlierDetectionObservation) DeepCopy() *RegionBackendServiceOutlierDetectionObservation {
	if in == nil {
		return nil
	}
	out := new(RegionBackendServiceOutlierDetectionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionBackendServiceOutlierDetectionParameters) DeepCopyInto(out *RegionBackendServiceOutlierDetectionParameters) {
	*out = *in
	if in.BaseEjectionTime != nil {
		in, out := &in.BaseEjectionTime, &out.BaseEjectionTime
		*out = make([]OutlierDetectionBaseEjectionTimeParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ConsecutiveErrors != nil {
		in, out := &in.ConsecutiveErrors, &out.ConsecutiveErrors
		*out = new(float64)
		**out = **in
	}
	if in.ConsecutiveGatewayFailure != nil {
		in, out := &in.ConsecutiveGatewayFailure, &out.ConsecutiveGatewayFailure
		*out = new(float64)
		**out = **in
	}
	if in.EnforcingConsecutiveErrors != nil {
		in, out := &in.EnforcingConsecutiveErrors, &out.EnforcingConsecutiveErrors
		*out = new(float64)
		**out = **in
	}
	if in.EnforcingConsecutiveGatewayFailure != nil {
		in, out := &in.EnforcingConsecutiveGatewayFailure, &out.EnforcingConsecutiveGatewayFailure
		*out = new(float64)
		**out = **in
	}
	if in.EnforcingSuccessRate != nil {
		in, out := &in.EnforcingSuccessRate, &out.EnforcingSuccessRate
		*out = new(float64)
		**out = **in
	}
	if in.Interval != nil {
		in, out := &in.Interval, &out.Interval
		*out = make([]OutlierDetectionIntervalParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MaxEjectionPercent != nil {
		in, out := &in.MaxEjectionPercent, &out.MaxEjectionPercent
		*out = new(float64)
		**out = **in
	}
	if in.SuccessRateMinimumHosts != nil {
		in, out := &in.SuccessRateMinimumHosts, &out.SuccessRateMinimumHosts
		*out = new(float64)
		**out = **in
	}
	if in.SuccessRateRequestVolume != nil {
		in, out := &in.SuccessRateRequestVolume, &out.SuccessRateRequestVolume
		*out = new(float64)
		**out = **in
	}
	if in.SuccessRateStdevFactor != nil {
		in, out := &in.SuccessRateStdevFactor, &out.SuccessRateStdevFactor
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionBackendServiceOutlierDetectionParameters.
func (in *RegionBackendServiceOutlierDetectionParameters) DeepCopy() *RegionBackendServiceOutlierDetectionParameters {
	if in == nil {
		return nil
	}
	out := new(RegionBackendServiceOutlierDetectionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionBackendServiceParameters) DeepCopyInto(out *RegionBackendServiceParameters) {
	*out = *in
	if in.AffinityCookieTTLSec != nil {
		in, out := &in.AffinityCookieTTLSec, &out.AffinityCookieTTLSec
		*out = new(float64)
		**out = **in
	}
	if in.Backend != nil {
		in, out := &in.Backend, &out.Backend
		*out = make([]RegionBackendServiceBackendParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CdnPolicy != nil {
		in, out := &in.CdnPolicy, &out.CdnPolicy
		*out = make([]RegionBackendServiceCdnPolicyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CircuitBreakers != nil {
		in, out := &in.CircuitBreakers, &out.CircuitBreakers
		*out = make([]RegionBackendServiceCircuitBreakersParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ConnectionDrainingTimeoutSec != nil {
		in, out := &in.ConnectionDrainingTimeoutSec, &out.ConnectionDrainingTimeoutSec
		*out = new(float64)
		**out = **in
	}
	if in.ConsistentHash != nil {
		in, out := &in.ConsistentHash, &out.ConsistentHash
		*out = make([]RegionBackendServiceConsistentHashParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.EnableCdn != nil {
		in, out := &in.EnableCdn, &out.EnableCdn
		*out = new(bool)
		**out = **in
	}
	if in.FailoverPolicy != nil {
		in, out := &in.FailoverPolicy, &out.FailoverPolicy
		*out = make([]FailoverPolicyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HealthChecks != nil {
		in, out := &in.HealthChecks, &out.HealthChecks
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.HealthChecksRefs != nil {
		in, out := &in.HealthChecksRefs, &out.HealthChecksRefs
		*out = make([]v1.Reference, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HealthChecksSelector != nil {
		in, out := &in.HealthChecksSelector, &out.HealthChecksSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Iap != nil {
		in, out := &in.Iap, &out.Iap
		*out = make([]RegionBackendServiceIapParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LoadBalancingScheme != nil {
		in, out := &in.LoadBalancingScheme, &out.LoadBalancingScheme
		*out = new(string)
		**out = **in
	}
	if in.LocalityLBPolicy != nil {
		in, out := &in.LocalityLBPolicy, &out.LocalityLBPolicy
		*out = new(string)
		**out = **in
	}
	if in.LogConfig != nil {
		in, out := &in.LogConfig, &out.LogConfig
		*out = make([]RegionBackendServiceLogConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Network != nil {
		in, out := &in.Network, &out.Network
		*out = new(string)
		**out = **in
	}
	if in.OutlierDetection != nil {
		in, out := &in.OutlierDetection, &out.OutlierDetection
		*out = make([]RegionBackendServiceOutlierDetectionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PortName != nil {
		in, out := &in.PortName, &out.PortName
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Protocol != nil {
		in, out := &in.Protocol, &out.Protocol
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.SessionAffinity != nil {
		in, out := &in.SessionAffinity, &out.SessionAffinity
		*out = new(string)
		**out = **in
	}
	if in.TimeoutSec != nil {
		in, out := &in.TimeoutSec, &out.TimeoutSec
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionBackendServiceParameters.
func (in *RegionBackendServiceParameters) DeepCopy() *RegionBackendServiceParameters {
	if in == nil {
		return nil
	}
	out := new(RegionBackendServiceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionBackendServiceSpec) DeepCopyInto(out *RegionBackendServiceSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionBackendServiceSpec.
func (in *RegionBackendServiceSpec) DeepCopy() *RegionBackendServiceSpec {
	if in == nil {
		return nil
	}
	out := new(RegionBackendServiceSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionBackendServiceStatus) DeepCopyInto(out *RegionBackendServiceStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionBackendServiceStatus.
func (in *RegionBackendServiceStatus) DeepCopy() *RegionBackendServiceStatus {
	if in == nil {
		return nil
	}
	out := new(RegionBackendServiceStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionDisk) DeepCopyInto(out *RegionDisk) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionDisk.
func (in *RegionDisk) DeepCopy() *RegionDisk {
	if in == nil {
		return nil
	}
	out := new(RegionDisk)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RegionDisk) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionDiskAsyncPrimaryDiskInitParameters) DeepCopyInto(out *RegionDiskAsyncPrimaryDiskInitParameters) {
	*out = *in
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = new(string)
		**out = **in
	}
	if in.DiskRef != nil {
		in, out := &in.DiskRef, &out.DiskRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.DiskSelector != nil {
		in, out := &in.DiskSelector, &out.DiskSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionDiskAsyncPrimaryDiskInitParameters.
func (in *RegionDiskAsyncPrimaryDiskInitParameters) DeepCopy() *RegionDiskAsyncPrimaryDiskInitParameters {
	if in == nil {
		return nil
	}
	out := new(RegionDiskAsyncPrimaryDiskInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionDiskAsyncPrimaryDiskObservation) DeepCopyInto(out *RegionDiskAsyncPrimaryDiskObservation) {
	*out = *in
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionDiskAsyncPrimaryDiskObservation.
func (in *RegionDiskAsyncPrimaryDiskObservation) DeepCopy() *RegionDiskAsyncPrimaryDiskObservation {
	if in == nil {
		return nil
	}
	out := new(RegionDiskAsyncPrimaryDiskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionDiskAsyncPrimaryDiskParameters) DeepCopyInto(out *RegionDiskAsyncPrimaryDiskParameters) {
	*out = *in
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = new(string)
		**out = **in
	}
	if in.DiskRef != nil {
		in, out := &in.DiskRef, &out.DiskRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.DiskSelector != nil {
		in, out := &in.DiskSelector, &out.DiskSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionDiskAsyncPrimaryDiskParameters.
func (in *RegionDiskAsyncPrimaryDiskParameters) DeepCopy() *RegionDiskAsyncPrimaryDiskParameters {
	if in == nil {
		return nil
	}
	out := new(RegionDiskAsyncPrimaryDiskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionDiskDiskEncryptionKeyInitParameters) DeepCopyInto(out *RegionDiskDiskEncryptionKeyInitParameters) {
	*out = *in
	if in.KMSKeyName != nil {
		in, out := &in.KMSKeyName, &out.KMSKeyName
		*out = new(string)
		**out = **in
	}
	if in.RawKeySecretRef != nil {
		in, out := &in.RawKeySecretRef, &out.RawKeySecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionDiskDiskEncryptionKeyInitParameters.
func (in *RegionDiskDiskEncryptionKeyInitParameters) DeepCopy() *RegionDiskDiskEncryptionKeyInitParameters {
	if in == nil {
		return nil
	}
	out := new(RegionDiskDiskEncryptionKeyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionDiskDiskEncryptionKeyObservation) DeepCopyInto(out *RegionDiskDiskEncryptionKeyObservation) {
	*out = *in
	if in.KMSKeyName != nil {
		in, out := &in.KMSKeyName, &out.KMSKeyName
		*out = new(string)
		**out = **in
	}
	if in.Sha256 != nil {
		in, out := &in.Sha256, &out.Sha256
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionDiskDiskEncryptionKeyObservation.
func (in *RegionDiskDiskEncryptionKeyObservation) DeepCopy() *RegionDiskDiskEncryptionKeyObservation {
	if in == nil {
		return nil
	}
	out := new(RegionDiskDiskEncryptionKeyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionDiskDiskEncryptionKeyParameters) DeepCopyInto(out *RegionDiskDiskEncryptionKeyParameters) {
	*out = *in
	if in.KMSKeyName != nil {
		in, out := &in.KMSKeyName, &out.KMSKeyName
		*out = new(string)
		**out = **in
	}
	if in.RawKeySecretRef != nil {
		in, out := &in.RawKeySecretRef, &out.RawKeySecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionDiskDiskEncryptionKeyParameters.
func (in *RegionDiskDiskEncryptionKeyParameters) DeepCopy() *RegionDiskDiskEncryptionKeyParameters {
	if in == nil {
		return nil
	}
	out := new(RegionDiskDiskEncryptionKeyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionDiskGuestOsFeaturesInitParameters) DeepCopyInto(out *RegionDiskGuestOsFeaturesInitParameters) {
	*out = *in
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionDiskGuestOsFeaturesInitParameters.
func (in *RegionDiskGuestOsFeaturesInitParameters) DeepCopy() *RegionDiskGuestOsFeaturesInitParameters {
	if in == nil {
		return nil
	}
	out := new(RegionDiskGuestOsFeaturesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionDiskGuestOsFeaturesObservation) DeepCopyInto(out *RegionDiskGuestOsFeaturesObservation) {
	*out = *in
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionDiskGuestOsFeaturesObservation.
func (in *RegionDiskGuestOsFeaturesObservation) DeepCopy() *RegionDiskGuestOsFeaturesObservation {
	if in == nil {
		return nil
	}
	out := new(RegionDiskGuestOsFeaturesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionDiskGuestOsFeaturesParameters) DeepCopyInto(out *RegionDiskGuestOsFeaturesParameters) {
	*out = *in
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionDiskGuestOsFeaturesParameters.
func (in *RegionDiskGuestOsFeaturesParameters) DeepCopy() *RegionDiskGuestOsFeaturesParameters {
	if in == nil {
		return nil
	}
	out := new(RegionDiskGuestOsFeaturesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionDiskIAMMember) DeepCopyInto(out *RegionDiskIAMMember) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionDiskIAMMember.
func (in *RegionDiskIAMMember) DeepCopy() *RegionDiskIAMMember {
	if in == nil {
		return nil
	}
	out := new(RegionDiskIAMMember)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RegionDiskIAMMember) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionDiskIAMMemberConditionInitParameters) DeepCopyInto(out *RegionDiskIAMMemberConditionInitParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Expression != nil {
		in, out := &in.Expression, &out.Expression
		*out = new(string)
		**out = **in
	}
	if in.Title != nil {
		in, out := &in.Title, &out.Title
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionDiskIAMMemberConditionInitParameters.
func (in *RegionDiskIAMMemberConditionInitParameters) DeepCopy() *RegionDiskIAMMemberConditionInitParameters {
	if in == nil {
		return nil
	}
	out := new(RegionDiskIAMMemberConditionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionDiskIAMMemberConditionObservation) DeepCopyInto(out *RegionDiskIAMMemberConditionObservation) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Expression != nil {
		in, out := &in.Expression, &out.Expression
		*out = new(string)
		**out = **in
	}
	if in.Title != nil {
		in, out := &in.Title, &out.Title
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionDiskIAMMemberConditionObservation.
func (in *RegionDiskIAMMemberConditionObservation) DeepCopy() *RegionDiskIAMMemberConditionObservation {
	if in == nil {
		return nil
	}
	out := new(RegionDiskIAMMemberConditionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionDiskIAMMemberConditionParameters) DeepCopyInto(out *RegionDiskIAMMemberConditionParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Expression != nil {
		in, out := &in.Expression, &out.Expression
		*out = new(string)
		**out = **in
	}
	if in.Title != nil {
		in, out := &in.Title, &out.Title
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionDiskIAMMemberConditionParameters.
func (in *RegionDiskIAMMemberConditionParameters) DeepCopy() *RegionDiskIAMMemberConditionParameters {
	if in == nil {
		return nil
	}
	out := new(RegionDiskIAMMemberConditionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionDiskIAMMemberInitParameters) DeepCopyInto(out *RegionDiskIAMMemberInitParameters) {
	*out = *in
	if in.Condition != nil {
		in, out := &in.Condition, &out.Condition
		*out = make([]RegionDiskIAMMemberConditionInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Member != nil {
		in, out := &in.Member, &out.Member
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NameRef != nil {
		in, out := &in.NameRef, &out.NameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.NameSelector != nil {
		in, out := &in.NameSelector, &out.NameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.Role != nil {
		in, out := &in.Role, &out.Role
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionDiskIAMMemberInitParameters.
func (in *RegionDiskIAMMemberInitParameters) DeepCopy() *RegionDiskIAMMemberInitParameters {
	if in == nil {
		return nil
	}
	out := new(RegionDiskIAMMemberInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionDiskIAMMemberList) DeepCopyInto(out *RegionDiskIAMMemberList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]RegionDiskIAMMember, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionDiskIAMMemberList.
func (in *RegionDiskIAMMemberList) DeepCopy() *RegionDiskIAMMemberList {
	if in == nil {
		return nil
	}
	out := new(RegionDiskIAMMemberList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RegionDiskIAMMemberList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionDiskIAMMemberObservation) DeepCopyInto(out *RegionDiskIAMMemberObservation) {
	*out = *in
	if in.Condition != nil {
		in, out := &in.Condition, &out.Condition
		*out = make([]RegionDiskIAMMemberConditionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Etag != nil {
		in, out := &in.Etag, &out.Etag
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Member != nil {
		in, out := &in.Member, &out.Member
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.Role != nil {
		in, out := &in.Role, &out.Role
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionDiskIAMMemberObservation.
func (in *RegionDiskIAMMemberObservation) DeepCopy() *RegionDiskIAMMemberObservation {
	if in == nil {
		return nil
	}
	out := new(RegionDiskIAMMemberObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionDiskIAMMemberParameters) DeepCopyInto(out *RegionDiskIAMMemberParameters) {
	*out = *in
	if in.Condition != nil {
		in, out := &in.Condition, &out.Condition
		*out = make([]RegionDiskIAMMemberConditionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Member != nil {
		in, out := &in.Member, &out.Member
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NameRef != nil {
		in, out := &in.NameRef, &out.NameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.NameSelector != nil {
		in, out := &in.NameSelector, &out.NameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.Role != nil {
		in, out := &in.Role, &out.Role
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionDiskIAMMemberParameters.
func (in *RegionDiskIAMMemberParameters) DeepCopy() *RegionDiskIAMMemberParameters {
	if in == nil {
		return nil
	}
	out := new(RegionDiskIAMMemberParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionDiskIAMMemberSpec) DeepCopyInto(out *RegionDiskIAMMemberSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionDiskIAMMemberSpec.
func (in *RegionDiskIAMMemberSpec) DeepCopy() *RegionDiskIAMMemberSpec {
	if in == nil {
		return nil
	}
	out := new(RegionDiskIAMMemberSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionDiskIAMMemberStatus) DeepCopyInto(out *RegionDiskIAMMemberStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionDiskIAMMemberStatus.
func (in *RegionDiskIAMMemberStatus) DeepCopy() *RegionDiskIAMMemberStatus {
	if in == nil {
		return nil
	}
	out := new(RegionDiskIAMMemberStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionDiskInitParameters) DeepCopyInto(out *RegionDiskInitParameters) {
	*out = *in
	if in.AsyncPrimaryDisk != nil {
		in, out := &in.AsyncPrimaryDisk, &out.AsyncPrimaryDisk
		*out = make([]RegionDiskAsyncPrimaryDiskInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DiskEncryptionKey != nil {
		in, out := &in.DiskEncryptionKey, &out.DiskEncryptionKey
		*out = make([]RegionDiskDiskEncryptionKeyInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.GuestOsFeatures != nil {
		in, out := &in.GuestOsFeatures, &out.GuestOsFeatures
		*out = make([]RegionDiskGuestOsFeaturesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Licenses != nil {
		in, out := &in.Licenses, &out.Licenses
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.PhysicalBlockSizeBytes != nil {
		in, out := &in.PhysicalBlockSizeBytes, &out.PhysicalBlockSizeBytes
		*out = new(float64)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.ReplicaZones != nil {
		in, out := &in.ReplicaZones, &out.ReplicaZones
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(float64)
		**out = **in
	}
	if in.Snapshot != nil {
		in, out := &in.Snapshot, &out.Snapshot
		*out = new(string)
		**out = **in
	}
	if in.SnapshotRef != nil {
		in, out := &in.SnapshotRef, &out.SnapshotRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SnapshotSelector != nil {
		in, out := &in.SnapshotSelector, &out.SnapshotSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.SourceDisk != nil {
		in, out := &in.SourceDisk, &out.SourceDisk
		*out = new(string)
		**out = **in
	}
	if in.SourceSnapshotEncryptionKey != nil {
		in, out := &in.SourceSnapshotEncryptionKey, &out.SourceSnapshotEncryptionKey
		*out = make([]RegionDiskSourceSnapshotEncryptionKeyInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionDiskInitParameters.
func (in *RegionDiskInitParameters) DeepCopy() *RegionDiskInitParameters {
	if in == nil {
		return nil
	}
	out := new(RegionDiskInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionDiskList) DeepCopyInto(out *RegionDiskList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]RegionDisk, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionDiskList.
func (in *RegionDiskList) DeepCopy() *RegionDiskList {
	if in == nil {
		return nil
	}
	out := new(RegionDiskList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RegionDiskList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionDiskObservation) DeepCopyInto(out *RegionDiskObservation) {
	*out = *in
	if in.AsyncPrimaryDisk != nil {
		in, out := &in.AsyncPrimaryDisk, &out.AsyncPrimaryDisk
		*out = make([]RegionDiskAsyncPrimaryDiskObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CreationTimestamp != nil {
		in, out := &in.CreationTimestamp, &out.CreationTimestamp
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DiskEncryptionKey != nil {
		in, out := &in.DiskEncryptionKey, &out.DiskEncryptionKey
		*out = make([]RegionDiskDiskEncryptionKeyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EffectiveLabels != nil {
		in, out := &in.EffectiveLabels, &out.EffectiveLabels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.GuestOsFeatures != nil {
		in, out := &in.GuestOsFeatures, &out.GuestOsFeatures
		*out = make([]RegionDiskGuestOsFeaturesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.LabelFingerprint != nil {
		in, out := &in.LabelFingerprint, &out.LabelFingerprint
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.LastAttachTimestamp != nil {
		in, out := &in.LastAttachTimestamp, &out.LastAttachTimestamp
		*out = new(string)
		**out = **in
	}
	if in.LastDetachTimestamp != nil {
		in, out := &in.LastDetachTimestamp, &out.LastDetachTimestamp
		*out = new(string)
		**out = **in
	}
	if in.Licenses != nil {
		in, out := &in.Licenses, &out.Licenses
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.PhysicalBlockSizeBytes != nil {
		in, out := &in.PhysicalBlockSizeBytes, &out.PhysicalBlockSizeBytes
		*out = new(float64)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.ReplicaZones != nil {
		in, out := &in.ReplicaZones, &out.ReplicaZones
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SelfLink != nil {
		in, out := &in.SelfLink, &out.SelfLink
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(float64)
		**out = **in
	}
	if in.Snapshot != nil {
		in, out := &in.Snapshot, &out.Snapshot
		*out = new(string)
		**out = **in
	}
	if in.SourceDisk != nil {
		in, out := &in.SourceDisk, &out.SourceDisk
		*out = new(string)
		**out = **in
	}
	if in.SourceDiskID != nil {
		in, out := &in.SourceDiskID, &out.SourceDiskID
		*out = new(string)
		**out = **in
	}
	if in.SourceSnapshotEncryptionKey != nil {
		in, out := &in.SourceSnapshotEncryptionKey, &out.SourceSnapshotEncryptionKey
		*out = make([]RegionDiskSourceSnapshotEncryptionKeyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SourceSnapshotID != nil {
		in, out := &in.SourceSnapshotID, &out.SourceSnapshotID
		*out = new(string)
		**out = **in
	}
	if in.TerraformLabels != nil {
		in, out := &in.TerraformLabels, &out.TerraformLabels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.Users != nil {
		in, out := &in.Users, &out.Users
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionDiskObservation.
func (in *RegionDiskObservation) DeepCopy() *RegionDiskObservation {
	if in == nil {
		return nil
	}
	out := new(RegionDiskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionDiskParameters) DeepCopyInto(out *RegionDiskParameters) {
	*out = *in
	if in.AsyncPrimaryDisk != nil {
		in, out := &in.AsyncPrimaryDisk, &out.AsyncPrimaryDisk
		*out = make([]RegionDiskAsyncPrimaryDiskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DiskEncryptionKey != nil {
		in, out := &in.DiskEncryptionKey, &out.DiskEncryptionKey
		*out = make([]RegionDiskDiskEncryptionKeyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.GuestOsFeatures != nil {
		in, out := &in.GuestOsFeatures, &out.GuestOsFeatures
		*out = make([]RegionDiskGuestOsFeaturesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Licenses != nil {
		in, out := &in.Licenses, &out.Licenses
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.PhysicalBlockSizeBytes != nil {
		in, out := &in.PhysicalBlockSizeBytes, &out.PhysicalBlockSizeBytes
		*out = new(float64)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.ReplicaZones != nil {
		in, out := &in.ReplicaZones, &out.ReplicaZones
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(float64)
		**out = **in
	}
	if in.Snapshot != nil {
		in, out := &in.Snapshot, &out.Snapshot
		*out = new(string)
		**out = **in
	}
	if in.SnapshotRef != nil {
		in, out := &in.SnapshotRef, &out.SnapshotRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SnapshotSelector != nil {
		in, out := &in.SnapshotSelector, &out.SnapshotSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.SourceDisk != nil {
		in, out := &in.SourceDisk, &out.SourceDisk
		*out = new(string)
		**out = **in
	}
	if in.SourceSnapshotEncryptionKey != nil {
		in, out := &in.SourceSnapshotEncryptionKey, &out.SourceSnapshotEncryptionKey
		*out = make([]RegionDiskSourceSnapshotEncryptionKeyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionDiskParameters.
func (in *RegionDiskParameters) DeepCopy() *RegionDiskParameters {
	if in == nil {
		return nil
	}
	out := new(RegionDiskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionDiskResourcePolicyAttachment) DeepCopyInto(out *RegionDiskResourcePolicyAttachment) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionDiskResourcePolicyAttachment.
func (in *RegionDiskResourcePolicyAttachment) DeepCopy() *RegionDiskResourcePolicyAttachment {
	if in == nil {
		return nil
	}
	out := new(RegionDiskResourcePolicyAttachment)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RegionDiskResourcePolicyAttachment) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionDiskResourcePolicyAttachmentInitParameters) DeepCopyInto(out *RegionDiskResourcePolicyAttachmentInitParameters) {
	*out = *in
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = new(string)
		**out = **in
	}
	if in.DiskRef != nil {
		in, out := &in.DiskRef, &out.DiskRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.DiskSelector != nil {
		in, out := &in.DiskSelector, &out.DiskSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NameRef != nil {
		in, out := &in.NameRef, &out.NameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.NameSelector != nil {
		in, out := &in.NameSelector, &out.NameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionDiskResourcePolicyAttachmentInitParameters.
func (in *RegionDiskResourcePolicyAttachmentInitParameters) DeepCopy() *RegionDiskResourcePolicyAttachmentInitParameters {
	if in == nil {
		return nil
	}
	out := new(RegionDiskResourcePolicyAttachmentInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionDiskResourcePolicyAttachmentList) DeepCopyInto(out *RegionDiskResourcePolicyAttachmentList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]RegionDiskResourcePolicyAttachment, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionDiskResourcePolicyAttachmentList.
func (in *RegionDiskResourcePolicyAttachmentList) DeepCopy() *RegionDiskResourcePolicyAttachmentList {
	if in == nil {
		return nil
	}
	out := new(RegionDiskResourcePolicyAttachmentList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RegionDiskResourcePolicyAttachmentList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionDiskResourcePolicyAttachmentObservation) DeepCopyInto(out *RegionDiskResourcePolicyAttachmentObservation) {
	*out = *in
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionDiskResourcePolicyAttachmentObservation.
func (in *RegionDiskResourcePolicyAttachmentObservation) DeepCopy() *RegionDiskResourcePolicyAttachmentObservation {
	if in == nil {
		return nil
	}
	out := new(RegionDiskResourcePolicyAttachmentObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionDiskResourcePolicyAttachmentParameters) DeepCopyInto(out *RegionDiskResourcePolicyAttachmentParameters) {
	*out = *in
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = new(string)
		**out = **in
	}
	if in.DiskRef != nil {
		in, out := &in.DiskRef, &out.DiskRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.DiskSelector != nil {
		in, out := &in.DiskSelector, &out.DiskSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NameRef != nil {
		in, out := &in.NameRef, &out.NameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.NameSelector != nil {
		in, out := &in.NameSelector, &out.NameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionDiskResourcePolicyAttachmentParameters.
func (in *RegionDiskResourcePolicyAttachmentParameters) DeepCopy() *RegionDiskResourcePolicyAttachmentParameters {
	if in == nil {
		return nil
	}
	out := new(RegionDiskResourcePolicyAttachmentParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionDiskResourcePolicyAttachmentSpec) DeepCopyInto(out *RegionDiskResourcePolicyAttachmentSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionDiskResourcePolicyAttachmentSpec.
func (in *RegionDiskResourcePolicyAttachmentSpec) DeepCopy() *RegionDiskResourcePolicyAttachmentSpec {
	if in == nil {
		return nil
	}
	out := new(RegionDiskResourcePolicyAttachmentSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionDiskResourcePolicyAttachmentStatus) DeepCopyInto(out *RegionDiskResourcePolicyAttachmentStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionDiskResourcePolicyAttachmentStatus.
func (in *RegionDiskResourcePolicyAttachmentStatus) DeepCopy() *RegionDiskResourcePolicyAttachmentStatus {
	if in == nil {
		return nil
	}
	out := new(RegionDiskResourcePolicyAttachmentStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionDiskSourceSnapshotEncryptionKeyInitParameters) DeepCopyInto(out *RegionDiskSourceSnapshotEncryptionKeyInitParameters) {
	*out = *in
	if in.RawKey != nil {
		in, out := &in.RawKey, &out.RawKey
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionDiskSourceSnapshotEncryptionKeyInitParameters.
func (in *RegionDiskSourceSnapshotEncryptionKeyInitParameters) DeepCopy() *RegionDiskSourceSnapshotEncryptionKeyInitParameters {
	if in == nil {
		return nil
	}
	out := new(RegionDiskSourceSnapshotEncryptionKeyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionDiskSourceSnapshotEncryptionKeyObservation) DeepCopyInto(out *RegionDiskSourceSnapshotEncryptionKeyObservation) {
	*out = *in
	if in.RawKey != nil {
		in, out := &in.RawKey, &out.RawKey
		*out = new(string)
		**out = **in
	}
	if in.Sha256 != nil {
		in, out := &in.Sha256, &out.Sha256
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionDiskSourceSnapshotEncryptionKeyObservation.
func (in *RegionDiskSourceSnapshotEncryptionKeyObservation) DeepCopy() *RegionDiskSourceSnapshotEncryptionKeyObservation {
	if in == nil {
		return nil
	}
	out := new(RegionDiskSourceSnapshotEncryptionKeyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionDiskSourceSnapshotEncryptionKeyParameters) DeepCopyInto(out *RegionDiskSourceSnapshotEncryptionKeyParameters) {
	*out = *in
	if in.RawKey != nil {
		in, out := &in.RawKey, &out.RawKey
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionDiskSourceSnapshotEncryptionKeyParameters.
func (in *RegionDiskSourceSnapshotEncryptionKeyParameters) DeepCopy() *RegionDiskSourceSnapshotEncryptionKeyParameters {
	if in == nil {
		return nil
	}
	out := new(RegionDiskSourceSnapshotEncryptionKeyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionDiskSpec) DeepCopyInto(out *RegionDiskSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionDiskSpec.
func (in *RegionDiskSpec) DeepCopy() *RegionDiskSpec {
	if in == nil {
		return nil
	}
	out := new(RegionDiskSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionDiskStatus) DeepCopyInto(out *RegionDiskStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionDiskStatus.
func (in *RegionDiskStatus) DeepCopy() *RegionDiskStatus {
	if in == nil {
		return nil
	}
	out := new(RegionDiskStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionHealthCheck) DeepCopyInto(out *RegionHealthCheck) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionHealthCheck.
func (in *RegionHealthCheck) DeepCopy() *RegionHealthCheck {
	if in == nil {
		return nil
	}
	out := new(RegionHealthCheck)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RegionHealthCheck) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionHealthCheckGRPCHealthCheckInitParameters) DeepCopyInto(out *RegionHealthCheckGRPCHealthCheckInitParameters) {
	*out = *in
	if in.GRPCServiceName != nil {
		in, out := &in.GRPCServiceName, &out.GRPCServiceName
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
	if in.PortName != nil {
		in, out := &in.PortName, &out.PortName
		*out = new(string)
		**out = **in
	}
	if in.PortSpecification != nil {
		in, out := &in.PortSpecification, &out.PortSpecification
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionHealthCheckGRPCHealthCheckInitParameters.
func (in *RegionHealthCheckGRPCHealthCheckInitParameters) DeepCopy() *RegionHealthCheckGRPCHealthCheckInitParameters {
	if in == nil {
		return nil
	}
	out := new(RegionHealthCheckGRPCHealthCheckInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionHealthCheckGRPCHealthCheckObservation) DeepCopyInto(out *RegionHealthCheckGRPCHealthCheckObservation) {
	*out = *in
	if in.GRPCServiceName != nil {
		in, out := &in.GRPCServiceName, &out.GRPCServiceName
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
	if in.PortName != nil {
		in, out := &in.PortName, &out.PortName
		*out = new(string)
		**out = **in
	}
	if in.PortSpecification != nil {
		in, out := &in.PortSpecification, &out.PortSpecification
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionHealthCheckGRPCHealthCheckObservation.
func (in *RegionHealthCheckGRPCHealthCheckObservation) DeepCopy() *RegionHealthCheckGRPCHealthCheckObservation {
	if in == nil {
		return nil
	}
	out := new(RegionHealthCheckGRPCHealthCheckObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionHealthCheckGRPCHealthCheckParameters) DeepCopyInto(out *RegionHealthCheckGRPCHealthCheckParameters) {
	*out = *in
	if in.GRPCServiceName != nil {
		in, out := &in.GRPCServiceName, &out.GRPCServiceName
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
	if in.PortName != nil {
		in, out := &in.PortName, &out.PortName
		*out = new(string)
		**out = **in
	}
	if in.PortSpecification != nil {
		in, out := &in.PortSpecification, &out.PortSpecification
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionHealthCheckGRPCHealthCheckParameters.
func (in *RegionHealthCheckGRPCHealthCheckParameters) DeepCopy() *RegionHealthCheckGRPCHealthCheckParameters {
	if in == nil {
		return nil
	}
	out := new(RegionHealthCheckGRPCHealthCheckParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionHealthCheckHTTPHealthCheckInitParameters) DeepCopyInto(out *RegionHealthCheckHTTPHealthCheckInitParameters) {
	*out = *in
	if in.Host != nil {
		in, out := &in.Host, &out.Host
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
	if in.PortName != nil {
		in, out := &in.PortName, &out.PortName
		*out = new(string)
		**out = **in
	}
	if in.PortSpecification != nil {
		in, out := &in.PortSpecification, &out.PortSpecification
		*out = new(string)
		**out = **in
	}
	if in.ProxyHeader != nil {
		in, out := &in.ProxyHeader, &out.ProxyHeader
		*out = new(string)
		**out = **in
	}
	if in.RequestPath != nil {
		in, out := &in.RequestPath, &out.RequestPath
		*out = new(string)
		**out = **in
	}
	if in.Response != nil {
		in, out := &in.Response, &out.Response
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionHealthCheckHTTPHealthCheckInitParameters.
func (in *RegionHealthCheckHTTPHealthCheckInitParameters) DeepCopy() *RegionHealthCheckHTTPHealthCheckInitParameters {
	if in == nil {
		return nil
	}
	out := new(RegionHealthCheckHTTPHealthCheckInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionHealthCheckHTTPHealthCheckObservation) DeepCopyInto(out *RegionHealthCheckHTTPHealthCheckObservation) {
	*out = *in
	if in.Host != nil {
		in, out := &in.Host, &out.Host
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
	if in.PortName != nil {
		in, out := &in.PortName, &out.PortName
		*out = new(string)
		**out = **in
	}
	if in.PortSpecification != nil {
		in, out := &in.PortSpecification, &out.PortSpecification
		*out = new(string)
		**out = **in
	}
	if in.ProxyHeader != nil {
		in, out := &in.ProxyHeader, &out.ProxyHeader
		*out = new(string)
		**out = **in
	}
	if in.RequestPath != nil {
		in, out := &in.RequestPath, &out.RequestPath
		*out = new(string)
		**out = **in
	}
	if in.Response != nil {
		in, out := &in.Response, &out.Response
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionHealthCheckHTTPHealthCheckObservation.
func (in *RegionHealthCheckHTTPHealthCheckObservation) DeepCopy() *RegionHealthCheckHTTPHealthCheckObservation {
	if in == nil {
		return nil
	}
	out := new(RegionHealthCheckHTTPHealthCheckObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionHealthCheckHTTPHealthCheckParameters) DeepCopyInto(out *RegionHealthCheckHTTPHealthCheckParameters) {
	*out = *in
	if in.Host != nil {
		in, out := &in.Host, &out.Host
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
	if in.PortName != nil {
		in, out := &in.PortName, &out.PortName
		*out = new(string)
		**out = **in
	}
	if in.PortSpecification != nil {
		in, out := &in.PortSpecification, &out.PortSpecification
		*out = new(string)
		**out = **in
	}
	if in.ProxyHeader != nil {
		in, out := &in.ProxyHeader, &out.ProxyHeader
		*out = new(string)
		**out = **in
	}
	if in.RequestPath != nil {
		in, out := &in.RequestPath, &out.RequestPath
		*out = new(string)
		**out = **in
	}
	if in.Response != nil {
		in, out := &in.Response, &out.Response
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionHealthCheckHTTPHealthCheckParameters.
func (in *RegionHealthCheckHTTPHealthCheckParameters) DeepCopy() *RegionHealthCheckHTTPHealthCheckParameters {
	if in == nil {
		return nil
	}
	out := new(RegionHealthCheckHTTPHealthCheckParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionHealthCheckHTTPSHealthCheckInitParameters) DeepCopyInto(out *RegionHealthCheckHTTPSHealthCheckInitParameters) {
	*out = *in
	if in.Host != nil {
		in, out := &in.Host, &out.Host
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
	if in.PortName != nil {
		in, out := &in.PortName, &out.PortName
		*out = new(string)
		**out = **in
	}
	if in.PortSpecification != nil {
		in, out := &in.PortSpecification, &out.PortSpecification
		*out = new(string)
		**out = **in
	}
	if in.ProxyHeader != nil {
		in, out := &in.ProxyHeader, &out.ProxyHeader
		*out = new(string)
		**out = **in
	}
	if in.RequestPath != nil {
		in, out := &in.RequestPath, &out.RequestPath
		*out = new(string)
		**out = **in
	}
	if in.Response != nil {
		in, out := &in.Response, &out.Response
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionHealthCheckHTTPSHealthCheckInitParameters.
func (in *RegionHealthCheckHTTPSHealthCheckInitParameters) DeepCopy() *RegionHealthCheckHTTPSHealthCheckInitParameters {
	if in == nil {
		return nil
	}
	out := new(RegionHealthCheckHTTPSHealthCheckInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionHealthCheckHTTPSHealthCheckObservation) DeepCopyInto(out *RegionHealthCheckHTTPSHealthCheckObservation) {
	*out = *in
	if in.Host != nil {
		in, out := &in.Host, &out.Host
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
	if in.PortName != nil {
		in, out := &in.PortName, &out.PortName
		*out = new(string)
		**out = **in
	}
	if in.PortSpecification != nil {
		in, out := &in.PortSpecification, &out.PortSpecification
		*out = new(string)
		**out = **in
	}
	if in.ProxyHeader != nil {
		in, out := &in.ProxyHeader, &out.ProxyHeader
		*out = new(string)
		**out = **in
	}
	if in.RequestPath != nil {
		in, out := &in.RequestPath, &out.RequestPath
		*out = new(string)
		**out = **in
	}
	if in.Response != nil {
		in, out := &in.Response, &out.Response
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionHealthCheckHTTPSHealthCheckObservation.
func (in *RegionHealthCheckHTTPSHealthCheckObservation) DeepCopy() *RegionHealthCheckHTTPSHealthCheckObservation {
	if in == nil {
		return nil
	}
	out := new(RegionHealthCheckHTTPSHealthCheckObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionHealthCheckHTTPSHealthCheckParameters) DeepCopyInto(out *RegionHealthCheckHTTPSHealthCheckParameters) {
	*out = *in
	if in.Host != nil {
		in, out := &in.Host, &out.Host
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
	if in.PortName != nil {
		in, out := &in.PortName, &out.PortName
		*out = new(string)
		**out = **in
	}
	if in.PortSpecification != nil {
		in, out := &in.PortSpecification, &out.PortSpecification
		*out = new(string)
		**out = **in
	}
	if in.ProxyHeader != nil {
		in, out := &in.ProxyHeader, &out.ProxyHeader
		*out = new(string)
		**out = **in
	}
	if in.RequestPath != nil {
		in, out := &in.RequestPath, &out.RequestPath
		*out = new(string)
		**out = **in
	}
	if in.Response != nil {
		in, out := &in.Response, &out.Response
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionHealthCheckHTTPSHealthCheckParameters.
func (in *RegionHealthCheckHTTPSHealthCheckParameters) DeepCopy() *RegionHealthCheckHTTPSHealthCheckParameters {
	if in == nil {
		return nil
	}
	out := new(RegionHealthCheckHTTPSHealthCheckParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionHealthCheckHttp2HealthCheckInitParameters) DeepCopyInto(out *RegionHealthCheckHttp2HealthCheckInitParameters) {
	*out = *in
	if in.Host != nil {
		in, out := &in.Host, &out.Host
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
	if in.PortName != nil {
		in, out := &in.PortName, &out.PortName
		*out = new(string)
		**out = **in
	}
	if in.PortSpecification != nil {
		in, out := &in.PortSpecification, &out.PortSpecification
		*out = new(string)
		**out = **in
	}
	if in.ProxyHeader != nil {
		in, out := &in.ProxyHeader, &out.ProxyHeader
		*out = new(string)
		**out = **in
	}
	if in.RequestPath != nil {
		in, out := &in.RequestPath, &out.RequestPath
		*out = new(string)
		**out = **in
	}
	if in.Response != nil {
		in, out := &in.Response, &out.Response
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionHealthCheckHttp2HealthCheckInitParameters.
func (in *RegionHealthCheckHttp2HealthCheckInitParameters) DeepCopy() *RegionHealthCheckHttp2HealthCheckInitParameters {
	if in == nil {
		return nil
	}
	out := new(RegionHealthCheckHttp2HealthCheckInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionHealthCheckHttp2HealthCheckObservation) DeepCopyInto(out *RegionHealthCheckHttp2HealthCheckObservation) {
	*out = *in
	if in.Host != nil {
		in, out := &in.Host, &out.Host
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
	if in.PortName != nil {
		in, out := &in.PortName, &out.PortName
		*out = new(string)
		**out = **in
	}
	if in.PortSpecification != nil {
		in, out := &in.PortSpecification, &out.PortSpecification
		*out = new(string)
		**out = **in
	}
	if in.ProxyHeader != nil {
		in, out := &in.ProxyHeader, &out.ProxyHeader
		*out = new(string)
		**out = **in
	}
	if in.RequestPath != nil {
		in, out := &in.RequestPath, &out.RequestPath
		*out = new(string)
		**out = **in
	}
	if in.Response != nil {
		in, out := &in.Response, &out.Response
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionHealthCheckHttp2HealthCheckObservation.
func (in *RegionHealthCheckHttp2HealthCheckObservation) DeepCopy() *RegionHealthCheckHttp2HealthCheckObservation {
	if in == nil {
		return nil
	}
	out := new(RegionHealthCheckHttp2HealthCheckObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionHealthCheckHttp2HealthCheckParameters) DeepCopyInto(out *RegionHealthCheckHttp2HealthCheckParameters) {
	*out = *in
	if in.Host != nil {
		in, out := &in.Host, &out.Host
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
	if in.PortName != nil {
		in, out := &in.PortName, &out.PortName
		*out = new(string)
		**out = **in
	}
	if in.PortSpecification != nil {
		in, out := &in.PortSpecification, &out.PortSpecification
		*out = new(string)
		**out = **in
	}
	if in.ProxyHeader != nil {
		in, out := &in.ProxyHeader, &out.ProxyHeader
		*out = new(string)
		**out = **in
	}
	if in.RequestPath != nil {
		in, out := &in.RequestPath, &out.RequestPath
		*out = new(string)
		**out = **in
	}
	if in.Response != nil {
		in, out := &in.Response, &out.Response
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionHealthCheckHttp2HealthCheckParameters.
func (in *RegionHealthCheckHttp2HealthCheckParameters) DeepCopy() *RegionHealthCheckHttp2HealthCheckParameters {
	if in == nil {
		return nil
	}
	out := new(RegionHealthCheckHttp2HealthCheckParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionHealthCheckInitParameters) DeepCopyInto(out *RegionHealthCheckInitParameters) {
	*out = *in
	if in.CheckIntervalSec != nil {
		in, out := &in.CheckIntervalSec, &out.CheckIntervalSec
		*out = new(float64)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.GRPCHealthCheck != nil {
		in, out := &in.GRPCHealthCheck, &out.GRPCHealthCheck
		*out = make([]RegionHealthCheckGRPCHealthCheckInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HTTPHealthCheck != nil {
		in, out := &in.HTTPHealthCheck, &out.HTTPHealthCheck
		*out = make([]RegionHealthCheckHTTPHealthCheckInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HTTPSHealthCheck != nil {
		in, out := &in.HTTPSHealthCheck, &out.HTTPSHealthCheck
		*out = make([]RegionHealthCheckHTTPSHealthCheckInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HealthyThreshold != nil {
		in, out := &in.HealthyThreshold, &out.HealthyThreshold
		*out = new(float64)
		**out = **in
	}
	if in.Http2HealthCheck != nil {
		in, out := &in.Http2HealthCheck, &out.Http2HealthCheck
		*out = make([]RegionHealthCheckHttp2HealthCheckInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LogConfig != nil {
		in, out := &in.LogConfig, &out.LogConfig
		*out = make([]RegionHealthCheckLogConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.SSLHealthCheck != nil {
		in, out := &in.SSLHealthCheck, &out.SSLHealthCheck
		*out = make([]RegionHealthCheckSSLHealthCheckInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TCPHealthCheck != nil {
		in, out := &in.TCPHealthCheck, &out.TCPHealthCheck
		*out = make([]RegionHealthCheckTCPHealthCheckInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TimeoutSec != nil {
		in, out := &in.TimeoutSec, &out.TimeoutSec
		*out = new(float64)
		**out = **in
	}
	if in.UnhealthyThreshold != nil {
		in, out := &in.UnhealthyThreshold, &out.UnhealthyThreshold
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionHealthCheckInitParameters.
func (in *RegionHealthCheckInitParameters) DeepCopy() *RegionHealthCheckInitParameters {
	if in == nil {
		return nil
	}
	out := new(RegionHealthCheckInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionHealthCheckList) DeepCopyInto(out *RegionHealthCheckList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]RegionHealthCheck, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionHealthCheckList.
func (in *RegionHealthCheckList) DeepCopy() *RegionHealthCheckList {
	if in == nil {
		return nil
	}
	out := new(RegionHealthCheckList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RegionHealthCheckList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionHealthCheckLogConfigInitParameters) DeepCopyInto(out *RegionHealthCheckLogConfigInitParameters) {
	*out = *in
	if in.Enable != nil {
		in, out := &in.Enable, &out.Enable
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionHealthCheckLogConfigInitParameters.
func (in *RegionHealthCheckLogConfigInitParameters) DeepCopy() *RegionHealthCheckLogConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(RegionHealthCheckLogConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionHealthCheckLogConfigObservation) DeepCopyInto(out *RegionHealthCheckLogConfigObservation) {
	*out = *in
	if in.Enable != nil {
		in, out := &in.Enable, &out.Enable
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionHealthCheckLogConfigObservation.
func (in *RegionHealthCheckLogConfigObservation) DeepCopy() *RegionHealthCheckLogConfigObservation {
	if in == nil {
		return nil
	}
	out := new(RegionHealthCheckLogConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionHealthCheckLogConfigParameters) DeepCopyInto(out *RegionHealthCheckLogConfigParameters) {
	*out = *in
	if in.Enable != nil {
		in, out := &in.Enable, &out.Enable
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionHealthCheckLogConfigParameters.
func (in *RegionHealthCheckLogConfigParameters) DeepCopy() *RegionHealthCheckLogConfigParameters {
	if in == nil {
		return nil
	}
	out := new(RegionHealthCheckLogConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionHealthCheckObservation) DeepCopyInto(out *RegionHealthCheckObservation) {
	*out = *in
	if in.CheckIntervalSec != nil {
		in, out := &in.CheckIntervalSec, &out.CheckIntervalSec
		*out = new(float64)
		**out = **in
	}
	if in.CreationTimestamp != nil {
		in, out := &in.CreationTimestamp, &out.CreationTimestamp
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.GRPCHealthCheck != nil {
		in, out := &in.GRPCHealthCheck, &out.GRPCHealthCheck
		*out = make([]RegionHealthCheckGRPCHealthCheckObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HTTPHealthCheck != nil {
		in, out := &in.HTTPHealthCheck, &out.HTTPHealthCheck
		*out = make([]RegionHealthCheckHTTPHealthCheckObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HTTPSHealthCheck != nil {
		in, out := &in.HTTPSHealthCheck, &out.HTTPSHealthCheck
		*out = make([]RegionHealthCheckHTTPSHealthCheckObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HealthyThreshold != nil {
		in, out := &in.HealthyThreshold, &out.HealthyThreshold
		*out = new(float64)
		**out = **in
	}
	if in.Http2HealthCheck != nil {
		in, out := &in.Http2HealthCheck, &out.Http2HealthCheck
		*out = make([]RegionHealthCheckHttp2HealthCheckObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.LogConfig != nil {
		in, out := &in.LogConfig, &out.LogConfig
		*out = make([]RegionHealthCheckLogConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.SSLHealthCheck != nil {
		in, out := &in.SSLHealthCheck, &out.SSLHealthCheck
		*out = make([]RegionHealthCheckSSLHealthCheckObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SelfLink != nil {
		in, out := &in.SelfLink, &out.SelfLink
		*out = new(string)
		**out = **in
	}
	if in.TCPHealthCheck != nil {
		in, out := &in.TCPHealthCheck, &out.TCPHealthCheck
		*out = make([]RegionHealthCheckTCPHealthCheckObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TimeoutSec != nil {
		in, out := &in.TimeoutSec, &out.TimeoutSec
		*out = new(float64)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.UnhealthyThreshold != nil {
		in, out := &in.UnhealthyThreshold, &out.UnhealthyThreshold
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionHealthCheckObservation.
func (in *RegionHealthCheckObservation) DeepCopy() *RegionHealthCheckObservation {
	if in == nil {
		return nil
	}
	out := new(RegionHealthCheckObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionHealthCheckParameters) DeepCopyInto(out *RegionHealthCheckParameters) {
	*out = *in
	if in.CheckIntervalSec != nil {
		in, out := &in.CheckIntervalSec, &out.CheckIntervalSec
		*out = new(float64)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.GRPCHealthCheck != nil {
		in, out := &in.GRPCHealthCheck, &out.GRPCHealthCheck
		*out = make([]RegionHealthCheckGRPCHealthCheckParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HTTPHealthCheck != nil {
		in, out := &in.HTTPHealthCheck, &out.HTTPHealthCheck
		*out = make([]RegionHealthCheckHTTPHealthCheckParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HTTPSHealthCheck != nil {
		in, out := &in.HTTPSHealthCheck, &out.HTTPSHealthCheck
		*out = make([]RegionHealthCheckHTTPSHealthCheckParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HealthyThreshold != nil {
		in, out := &in.HealthyThreshold, &out.HealthyThreshold
		*out = new(float64)
		**out = **in
	}
	if in.Http2HealthCheck != nil {
		in, out := &in.Http2HealthCheck, &out.Http2HealthCheck
		*out = make([]RegionHealthCheckHttp2HealthCheckParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LogConfig != nil {
		in, out := &in.LogConfig, &out.LogConfig
		*out = make([]RegionHealthCheckLogConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.SSLHealthCheck != nil {
		in, out := &in.SSLHealthCheck, &out.SSLHealthCheck
		*out = make([]RegionHealthCheckSSLHealthCheckParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TCPHealthCheck != nil {
		in, out := &in.TCPHealthCheck, &out.TCPHealthCheck
		*out = make([]RegionHealthCheckTCPHealthCheckParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TimeoutSec != nil {
		in, out := &in.TimeoutSec, &out.TimeoutSec
		*out = new(float64)
		**out = **in
	}
	if in.UnhealthyThreshold != nil {
		in, out := &in.UnhealthyThreshold, &out.UnhealthyThreshold
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionHealthCheckParameters.
func (in *RegionHealthCheckParameters) DeepCopy() *RegionHealthCheckParameters {
	if in == nil {
		return nil
	}
	out := new(RegionHealthCheckParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionHealthCheckSSLHealthCheckInitParameters) DeepCopyInto(out *RegionHealthCheckSSLHealthCheckInitParameters) {
	*out = *in
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
	if in.PortName != nil {
		in, out := &in.PortName, &out.PortName
		*out = new(string)
		**out = **in
	}
	if in.PortSpecification != nil {
		in, out := &in.PortSpecification, &out.PortSpecification
		*out = new(string)
		**out = **in
	}
	if in.ProxyHeader != nil {
		in, out := &in.ProxyHeader, &out.ProxyHeader
		*out = new(string)
		**out = **in
	}
	if in.Request != nil {
		in, out := &in.Request, &out.Request
		*out = new(string)
		**out = **in
	}
	if in.Response != nil {
		in, out := &in.Response, &out.Response
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionHealthCheckSSLHealthCheckInitParameters.
func (in *RegionHealthCheckSSLHealthCheckInitParameters) DeepCopy() *RegionHealthCheckSSLHealthCheckInitParameters {
	if in == nil {
		return nil
	}
	out := new(RegionHealthCheckSSLHealthCheckInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionHealthCheckSSLHealthCheckObservation) DeepCopyInto(out *RegionHealthCheckSSLHealthCheckObservation) {
	*out = *in
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
	if in.PortName != nil {
		in, out := &in.PortName, &out.PortName
		*out = new(string)
		**out = **in
	}
	if in.PortSpecification != nil {
		in, out := &in.PortSpecification, &out.PortSpecification
		*out = new(string)
		**out = **in
	}
	if in.ProxyHeader != nil {
		in, out := &in.ProxyHeader, &out.ProxyHeader
		*out = new(string)
		**out = **in
	}
	if in.Request != nil {
		in, out := &in.Request, &out.Request
		*out = new(string)
		**out = **in
	}
	if in.Response != nil {
		in, out := &in.Response, &out.Response
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionHealthCheckSSLHealthCheckObservation.
func (in *RegionHealthCheckSSLHealthCheckObservation) DeepCopy() *RegionHealthCheckSSLHealthCheckObservation {
	if in == nil {
		return nil
	}
	out := new(RegionHealthCheckSSLHealthCheckObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionHealthCheckSSLHealthCheckParameters) DeepCopyInto(out *RegionHealthCheckSSLHealthCheckParameters) {
	*out = *in
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
	if in.PortName != nil {
		in, out := &in.PortName, &out.PortName
		*out = new(string)
		**out = **in
	}
	if in.PortSpecification != nil {
		in, out := &in.PortSpecification, &out.PortSpecification
		*out = new(string)
		**out = **in
	}
	if in.ProxyHeader != nil {
		in, out := &in.ProxyHeader, &out.ProxyHeader
		*out = new(string)
		**out = **in
	}
	if in.Request != nil {
		in, out := &in.Request, &out.Request
		*out = new(string)
		**out = **in
	}
	if in.Response != nil {
		in, out := &in.Response, &out.Response
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionHealthCheckSSLHealthCheckParameters.
func (in *RegionHealthCheckSSLHealthCheckParameters) DeepCopy() *RegionHealthCheckSSLHealthCheckParameters {
	if in == nil {
		return nil
	}
	out := new(RegionHealthCheckSSLHealthCheckParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionHealthCheckSpec) DeepCopyInto(out *RegionHealthCheckSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionHealthCheckSpec.
func (in *RegionHealthCheckSpec) DeepCopy() *RegionHealthCheckSpec {
	if in == nil {
		return nil
	}
	out := new(RegionHealthCheckSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionHealthCheckStatus) DeepCopyInto(out *RegionHealthCheckStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionHealthCheckStatus.
func (in *RegionHealthCheckStatus) DeepCopy() *RegionHealthCheckStatus {
	if in == nil {
		return nil
	}
	out := new(RegionHealthCheckStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionHealthCheckTCPHealthCheckInitParameters) DeepCopyInto(out *RegionHealthCheckTCPHealthCheckInitParameters) {
	*out = *in
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
	if in.PortName != nil {
		in, out := &in.PortName, &out.PortName
		*out = new(string)
		**out = **in
	}
	if in.PortSpecification != nil {
		in, out := &in.PortSpecification, &out.PortSpecification
		*out = new(string)
		**out = **in
	}
	if in.ProxyHeader != nil {
		in, out := &in.ProxyHeader, &out.ProxyHeader
		*out = new(string)
		**out = **in
	}
	if in.Request != nil {
		in, out := &in.Request, &out.Request
		*out = new(string)
		**out = **in
	}
	if in.Response != nil {
		in, out := &in.Response, &out.Response
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionHealthCheckTCPHealthCheckInitParameters.
func (in *RegionHealthCheckTCPHealthCheckInitParameters) DeepCopy() *RegionHealthCheckTCPHealthCheckInitParameters {
	if in == nil {
		return nil
	}
	out := new(RegionHealthCheckTCPHealthCheckInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionHealthCheckTCPHealthCheckObservation) DeepCopyInto(out *RegionHealthCheckTCPHealthCheckObservation) {
	*out = *in
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
	if in.PortName != nil {
		in, out := &in.PortName, &out.PortName
		*out = new(string)
		**out = **in
	}
	if in.PortSpecification != nil {
		in, out := &in.PortSpecification, &out.PortSpecification
		*out = new(string)
		**out = **in
	}
	if in.ProxyHeader != nil {
		in, out := &in.ProxyHeader, &out.ProxyHeader
		*out = new(string)
		**out = **in
	}
	if in.Request != nil {
		in, out := &in.Request, &out.Request
		*out = new(string)
		**out = **in
	}
	if in.Response != nil {
		in, out := &in.Response, &out.Response
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionHealthCheckTCPHealthCheckObservation.
func (in *RegionHealthCheckTCPHealthCheckObservation) DeepCopy() *RegionHealthCheckTCPHealthCheckObservation {
	if in == nil {
		return nil
	}
	out := new(RegionHealthCheckTCPHealthCheckObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionHealthCheckTCPHealthCheckParameters) DeepCopyInto(out *RegionHealthCheckTCPHealthCheckParameters) {
	*out = *in
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
	if in.PortName != nil {
		in, out := &in.PortName, &out.PortName
		*out = new(string)
		**out = **in
	}
	if in.PortSpecification != nil {
		in, out := &in.PortSpecification, &out.PortSpecification
		*out = new(string)
		**out = **in
	}
	if in.ProxyHeader != nil {
		in, out := &in.ProxyHeader, &out.ProxyHeader
		*out = new(string)
		**out = **in
	}
	if in.Request != nil {
		in, out := &in.Request, &out.Request
		*out = new(string)
		**out = **in
	}
	if in.Response != nil {
		in, out := &in.Response, &out.Response
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionHealthCheckTCPHealthCheckParameters.
func (in *RegionHealthCheckTCPHealthCheckParameters) DeepCopy() *RegionHealthCheckTCPHealthCheckParameters {
	if in == nil {
		return nil
	}
	out := new(RegionHealthCheckTCPHealthCheckParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionInstanceGroupManager) DeepCopyInto(out *RegionInstanceGroupManager) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionInstanceGroupManager.
func (in *RegionInstanceGroupManager) DeepCopy() *RegionInstanceGroupManager {
	if in == nil {
		return nil
	}
	out := new(RegionInstanceGroupManager)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RegionInstanceGroupManager) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionInstanceGroupManagerAllInstancesConfigInitParameters) DeepCopyInto(out *RegionInstanceGroupManagerAllInstancesConfigInitParameters) {
	*out = *in
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Metadata != nil {
		in, out := &in.Metadata, &out.Metadata
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionInstanceGroupManagerAllInstancesConfigInitParameters.
func (in *RegionInstanceGroupManagerAllInstancesConfigInitParameters) DeepCopy() *RegionInstanceGroupManagerAllInstancesConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(RegionInstanceGroupManagerAllInstancesConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionInstanceGroupManagerAllInstancesConfigObservation) DeepCopyInto(out *RegionInstanceGroupManagerAllInstancesConfigObservation) {
	*out = *in
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Metadata != nil {
		in, out := &in.Metadata, &out.Metadata
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionInstanceGroupManagerAllInstancesConfigObservation.
func (in *RegionInstanceGroupManagerAllInstancesConfigObservation) DeepCopy() *RegionInstanceGroupManagerAllInstancesConfigObservation {
	if in == nil {
		return nil
	}
	out := new(RegionInstanceGroupManagerAllInstancesConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionInstanceGroupManagerAllInstancesConfigParameters) DeepCopyInto(out *RegionInstanceGroupManagerAllInstancesConfigParameters) {
	*out = *in
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Metadata != nil {
		in, out := &in.Metadata, &out.Metadata
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionInstanceGroupManagerAllInstancesConfigParameters.
func (in *RegionInstanceGroupManagerAllInstancesConfigParameters) DeepCopy() *RegionInstanceGroupManagerAllInstancesConfigParameters {
	if in == nil {
		return nil
	}
	out := new(RegionInstanceGroupManagerAllInstancesConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionInstanceGroupManagerAutoHealingPoliciesInitParameters) DeepCopyInto(out *RegionInstanceGroupManagerAutoHealingPoliciesInitParameters) {
	*out = *in
	if in.HealthCheck != nil {
		in, out := &in.HealthCheck, &out.HealthCheck
		*out = new(string)
		**out = **in
	}
	if in.HealthCheckRef != nil {
		in, out := &in.HealthCheckRef, &out.HealthCheckRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.HealthCheckSelector != nil {
		in, out := &in.HealthCheckSelector, &out.HealthCheckSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.InitialDelaySec != nil {
		in, out := &in.InitialDelaySec, &out.InitialDelaySec
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionInstanceGroupManagerAutoHealingPoliciesInitParameters.
func (in *RegionInstanceGroupManagerAutoHealingPoliciesInitParameters) DeepCopy() *RegionInstanceGroupManagerAutoHealingPoliciesInitParameters {
	if in == nil {
		return nil
	}
	out := new(RegionInstanceGroupManagerAutoHealingPoliciesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionInstanceGroupManagerAutoHealingPoliciesObservation) DeepCopyInto(out *RegionInstanceGroupManagerAutoHealingPoliciesObservation) {
	*out = *in
	if in.HealthCheck != nil {
		in, out := &in.HealthCheck, &out.HealthCheck
		*out = new(string)
		**out = **in
	}
	if in.InitialDelaySec != nil {
		in, out := &in.InitialDelaySec, &out.InitialDelaySec
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionInstanceGroupManagerAutoHealingPoliciesObservation.
func (in *RegionInstanceGroupManagerAutoHealingPoliciesObservation) DeepCopy() *RegionInstanceGroupManagerAutoHealingPoliciesObservation {
	if in == nil {
		return nil
	}
	out := new(RegionInstanceGroupManagerAutoHealingPoliciesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionInstanceGroupManagerAutoHealingPoliciesParameters) DeepCopyInto(out *RegionInstanceGroupManagerAutoHealingPoliciesParameters) {
	*out = *in
	if in.HealthCheck != nil {
		in, out := &in.HealthCheck, &out.HealthCheck
		*out = new(string)
		**out = **in
	}
	if in.HealthCheckRef != nil {
		in, out := &in.HealthCheckRef, &out.HealthCheckRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.HealthCheckSelector != nil {
		in, out := &in.HealthCheckSelector, &out.HealthCheckSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.InitialDelaySec != nil {
		in, out := &in.InitialDelaySec, &out.InitialDelaySec
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionInstanceGroupManagerAutoHealingPoliciesParameters.
func (in *RegionInstanceGroupManagerAutoHealingPoliciesParameters) DeepCopy() *RegionInstanceGroupManagerAutoHealingPoliciesParameters {
	if in == nil {
		return nil
	}
	out := new(RegionInstanceGroupManagerAutoHealingPoliciesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionInstanceGroupManagerInitParameters) DeepCopyInto(out *RegionInstanceGroupManagerInitParameters) {
	*out = *in
	if in.AllInstancesConfig != nil {
		in, out := &in.AllInstancesConfig, &out.AllInstancesConfig
		*out = make([]RegionInstanceGroupManagerAllInstancesConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AutoHealingPolicies != nil {
		in, out := &in.AutoHealingPolicies, &out.AutoHealingPolicies
		*out = make([]RegionInstanceGroupManagerAutoHealingPoliciesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.BaseInstanceName != nil {
		in, out := &in.BaseInstanceName, &out.BaseInstanceName
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DistributionPolicyTargetShape != nil {
		in, out := &in.DistributionPolicyTargetShape, &out.DistributionPolicyTargetShape
		*out = new(string)
		**out = **in
	}
	if in.DistributionPolicyZones != nil {
		in, out := &in.DistributionPolicyZones, &out.DistributionPolicyZones
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.InstanceLifecyclePolicy != nil {
		in, out := &in.InstanceLifecyclePolicy, &out.InstanceLifecyclePolicy
		*out = make([]RegionInstanceGroupManagerInstanceLifecyclePolicyInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ListManagedInstancesResults != nil {
		in, out := &in.ListManagedInstancesResults, &out.ListManagedInstancesResults
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NamedPort != nil {
		in, out := &in.NamedPort, &out.NamedPort
		*out = make([]RegionInstanceGroupManagerNamedPortInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.StatefulDisk != nil {
		in, out := &in.StatefulDisk, &out.StatefulDisk
		*out = make([]RegionInstanceGroupManagerStatefulDiskInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StatefulExternalIP != nil {
		in, out := &in.StatefulExternalIP, &out.StatefulExternalIP
		*out = make([]RegionInstanceGroupManagerStatefulExternalIPInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StatefulInternalIP != nil {
		in, out := &in.StatefulInternalIP, &out.StatefulInternalIP
		*out = make([]RegionInstanceGroupManagerStatefulInternalIPInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TargetPools != nil {
		in, out := &in.TargetPools, &out.TargetPools
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.TargetPoolsRefs != nil {
		in, out := &in.TargetPoolsRefs, &out.TargetPoolsRefs
		*out = make([]v1.Reference, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TargetPoolsSelector != nil {
		in, out := &in.TargetPoolsSelector, &out.TargetPoolsSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.TargetSize != nil {
		in, out := &in.TargetSize, &out.TargetSize
		*out = new(float64)
		**out = **in
	}
	if in.UpdatePolicy != nil {
		in, out := &in.UpdatePolicy, &out.UpdatePolicy
		*out = make([]RegionInstanceGroupManagerUpdatePolicyInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = make([]RegionInstanceGroupManagerVersionInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.WaitForInstances != nil {
		in, out := &in.WaitForInstances, &out.WaitForInstances
		*out = new(bool)
		**out = **in
	}
	if in.WaitForInstancesStatus != nil {
		in, out := &in.WaitForInstancesStatus, &out.WaitForInstancesStatus
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionInstanceGroupManagerInitParameters.
func (in *RegionInstanceGroupManagerInitParameters) DeepCopy() *RegionInstanceGroupManagerInitParameters {
	if in == nil {
		return nil
	}
	out := new(RegionInstanceGroupManagerInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionInstanceGroupManagerInstanceLifecyclePolicyInitParameters) DeepCopyInto(out *RegionInstanceGroupManagerInstanceLifecyclePolicyInitParameters) {
	*out = *in
	if in.DefaultActionOnFailure != nil {
		in, out := &in.DefaultActionOnFailure, &out.DefaultActionOnFailure
		*out = new(string)
		**out = **in
	}
	if in.ForceUpdateOnRepair != nil {
		in, out := &in.ForceUpdateOnRepair, &out.ForceUpdateOnRepair
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionInstanceGroupManagerInstanceLifecyclePolicyInitParameters.
func (in *RegionInstanceGroupManagerInstanceLifecyclePolicyInitParameters) DeepCopy() *RegionInstanceGroupManagerInstanceLifecyclePolicyInitParameters {
	if in == nil {
		return nil
	}
	out := new(RegionInstanceGroupManagerInstanceLifecyclePolicyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionInstanceGroupManagerInstanceLifecyclePolicyObservation) DeepCopyInto(out *RegionInstanceGroupManagerInstanceLifecyclePolicyObservation) {
	*out = *in
	if in.DefaultActionOnFailure != nil {
		in, out := &in.DefaultActionOnFailure, &out.DefaultActionOnFailure
		*out = new(string)
		**out = **in
	}
	if in.ForceUpdateOnRepair != nil {
		in, out := &in.ForceUpdateOnRepair, &out.ForceUpdateOnRepair
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionInstanceGroupManagerInstanceLifecyclePolicyObservation.
func (in *RegionInstanceGroupManagerInstanceLifecyclePolicyObservation) DeepCopy() *RegionInstanceGroupManagerInstanceLifecyclePolicyObservation {
	if in == nil {
		return nil
	}
	out := new(RegionInstanceGroupManagerInstanceLifecyclePolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionInstanceGroupManagerInstanceLifecyclePolicyParameters) DeepCopyInto(out *RegionInstanceGroupManagerInstanceLifecyclePolicyParameters) {
	*out = *in
	if in.DefaultActionOnFailure != nil {
		in, out := &in.DefaultActionOnFailure, &out.DefaultActionOnFailure
		*out = new(string)
		**out = **in
	}
	if in.ForceUpdateOnRepair != nil {
		in, out := &in.ForceUpdateOnRepair, &out.ForceUpdateOnRepair
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionInstanceGroupManagerInstanceLifecyclePolicyParameters.
func (in *RegionInstanceGroupManagerInstanceLifecyclePolicyParameters) DeepCopy() *RegionInstanceGroupManagerInstanceLifecyclePolicyParameters {
	if in == nil {
		return nil
	}
	out := new(RegionInstanceGroupManagerInstanceLifecyclePolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionInstanceGroupManagerList) DeepCopyInto(out *RegionInstanceGroupManagerList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]RegionInstanceGroupManager, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionInstanceGroupManagerList.
func (in *RegionInstanceGroupManagerList) DeepCopy() *RegionInstanceGroupManagerList {
	if in == nil {
		return nil
	}
	out := new(RegionInstanceGroupManagerList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RegionInstanceGroupManagerList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionInstanceGroupManagerNamedPortInitParameters) DeepCopyInto(out *RegionInstanceGroupManagerNamedPortInitParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionInstanceGroupManagerNamedPortInitParameters.
func (in *RegionInstanceGroupManagerNamedPortInitParameters) DeepCopy() *RegionInstanceGroupManagerNamedPortInitParameters {
	if in == nil {
		return nil
	}
	out := new(RegionInstanceGroupManagerNamedPortInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionInstanceGroupManagerNamedPortObservation) DeepCopyInto(out *RegionInstanceGroupManagerNamedPortObservation) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionInstanceGroupManagerNamedPortObservation.
func (in *RegionInstanceGroupManagerNamedPortObservation) DeepCopy() *RegionInstanceGroupManagerNamedPortObservation {
	if in == nil {
		return nil
	}
	out := new(RegionInstanceGroupManagerNamedPortObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionInstanceGroupManagerNamedPortParameters) DeepCopyInto(out *RegionInstanceGroupManagerNamedPortParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionInstanceGroupManagerNamedPortParameters.
func (in *RegionInstanceGroupManagerNamedPortParameters) DeepCopy() *RegionInstanceGroupManagerNamedPortParameters {
	if in == nil {
		return nil
	}
	out := new(RegionInstanceGroupManagerNamedPortParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionInstanceGroupManagerObservation) DeepCopyInto(out *RegionInstanceGroupManagerObservation) {
	*out = *in
	if in.AllInstancesConfig != nil {
		in, out := &in.AllInstancesConfig, &out.AllInstancesConfig
		*out = make([]RegionInstanceGroupManagerAllInstancesConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AutoHealingPolicies != nil {
		in, out := &in.AutoHealingPolicies, &out.AutoHealingPolicies
		*out = make([]RegionInstanceGroupManagerAutoHealingPoliciesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.BaseInstanceName != nil {
		in, out := &in.BaseInstanceName, &out.BaseInstanceName
		*out = new(string)
		**out = **in
	}
	if in.CreationTimestamp != nil {
		in, out := &in.CreationTimestamp, &out.CreationTimestamp
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DistributionPolicyTargetShape != nil {
		in, out := &in.DistributionPolicyTargetShape, &out.DistributionPolicyTargetShape
		*out = new(string)
		**out = **in
	}
	if in.DistributionPolicyZones != nil {
		in, out := &in.DistributionPolicyZones, &out.DistributionPolicyZones
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Fingerprint != nil {
		in, out := &in.Fingerprint, &out.Fingerprint
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.InstanceGroup != nil {
		in, out := &in.InstanceGroup, &out.InstanceGroup
		*out = new(string)
		**out = **in
	}
	if in.InstanceLifecyclePolicy != nil {
		in, out := &in.InstanceLifecyclePolicy, &out.InstanceLifecyclePolicy
		*out = make([]RegionInstanceGroupManagerInstanceLifecyclePolicyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ListManagedInstancesResults != nil {
		in, out := &in.ListManagedInstancesResults, &out.ListManagedInstancesResults
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NamedPort != nil {
		in, out := &in.NamedPort, &out.NamedPort
		*out = make([]RegionInstanceGroupManagerNamedPortObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.SelfLink != nil {
		in, out := &in.SelfLink, &out.SelfLink
		*out = new(string)
		**out = **in
	}
	if in.StatefulDisk != nil {
		in, out := &in.StatefulDisk, &out.StatefulDisk
		*out = make([]RegionInstanceGroupManagerStatefulDiskObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StatefulExternalIP != nil {
		in, out := &in.StatefulExternalIP, &out.StatefulExternalIP
		*out = make([]RegionInstanceGroupManagerStatefulExternalIPObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StatefulInternalIP != nil {
		in, out := &in.StatefulInternalIP, &out.StatefulInternalIP
		*out = make([]RegionInstanceGroupManagerStatefulInternalIPObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = make([]RegionInstanceGroupManagerStatusObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TargetPools != nil {
		in, out := &in.TargetPools, &out.TargetPools
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.TargetSize != nil {
		in, out := &in.TargetSize, &out.TargetSize
		*out = new(float64)
		**out = **in
	}
	if in.UpdatePolicy != nil {
		in, out := &in.UpdatePolicy, &out.UpdatePolicy
		*out = make([]RegionInstanceGroupManagerUpdatePolicyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = make([]RegionInstanceGroupManagerVersionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.WaitForInstances != nil {
		in, out := &in.WaitForInstances, &out.WaitForInstances
		*out = new(bool)
		**out = **in
	}
	if in.WaitForInstancesStatus != nil {
		in, out := &in.WaitForInstancesStatus, &out.WaitForInstancesStatus
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionInstanceGroupManagerObservation.
func (in *RegionInstanceGroupManagerObservation) DeepCopy() *RegionInstanceGroupManagerObservation {
	if in == nil {
		return nil
	}
	out := new(RegionInstanceGroupManagerObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionInstanceGroupManagerParameters) DeepCopyInto(out *RegionInstanceGroupManagerParameters) {
	*out = *in
	if in.AllInstancesConfig != nil {
		in, out := &in.AllInstancesConfig, &out.AllInstancesConfig
		*out = make([]RegionInstanceGroupManagerAllInstancesConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AutoHealingPolicies != nil {
		in, out := &in.AutoHealingPolicies, &out.AutoHealingPolicies
		*out = make([]RegionInstanceGroupManagerAutoHealingPoliciesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.BaseInstanceName != nil {
		in, out := &in.BaseInstanceName, &out.BaseInstanceName
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DistributionPolicyTargetShape != nil {
		in, out := &in.DistributionPolicyTargetShape, &out.DistributionPolicyTargetShape
		*out = new(string)
		**out = **in
	}
	if in.DistributionPolicyZones != nil {
		in, out := &in.DistributionPolicyZones, &out.DistributionPolicyZones
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.InstanceLifecyclePolicy != nil {
		in, out := &in.InstanceLifecyclePolicy, &out.InstanceLifecyclePolicy
		*out = make([]RegionInstanceGroupManagerInstanceLifecyclePolicyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ListManagedInstancesResults != nil {
		in, out := &in.ListManagedInstancesResults, &out.ListManagedInstancesResults
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NamedPort != nil {
		in, out := &in.NamedPort, &out.NamedPort
		*out = make([]RegionInstanceGroupManagerNamedPortParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.StatefulDisk != nil {
		in, out := &in.StatefulDisk, &out.StatefulDisk
		*out = make([]RegionInstanceGroupManagerStatefulDiskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StatefulExternalIP != nil {
		in, out := &in.StatefulExternalIP, &out.StatefulExternalIP
		*out = make([]RegionInstanceGroupManagerStatefulExternalIPParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StatefulInternalIP != nil {
		in, out := &in.StatefulInternalIP, &out.StatefulInternalIP
		*out = make([]RegionInstanceGroupManagerStatefulInternalIPParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TargetPools != nil {
		in, out := &in.TargetPools, &out.TargetPools
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.TargetPoolsRefs != nil {
		in, out := &in.TargetPoolsRefs, &out.TargetPoolsRefs
		*out = make([]v1.Reference, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TargetPoolsSelector != nil {
		in, out := &in.TargetPoolsSelector, &out.TargetPoolsSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.TargetSize != nil {
		in, out := &in.TargetSize, &out.TargetSize
		*out = new(float64)
		**out = **in
	}
	if in.UpdatePolicy != nil {
		in, out := &in.UpdatePolicy, &out.UpdatePolicy
		*out = make([]RegionInstanceGroupManagerUpdatePolicyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = make([]RegionInstanceGroupManagerVersionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.WaitForInstances != nil {
		in, out := &in.WaitForInstances, &out.WaitForInstances
		*out = new(bool)
		**out = **in
	}
	if in.WaitForInstancesStatus != nil {
		in, out := &in.WaitForInstancesStatus, &out.WaitForInstancesStatus
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionInstanceGroupManagerParameters.
func (in *RegionInstanceGroupManagerParameters) DeepCopy() *RegionInstanceGroupManagerParameters {
	if in == nil {
		return nil
	}
	out := new(RegionInstanceGroupManagerParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionInstanceGroupManagerSpec) DeepCopyInto(out *RegionInstanceGroupManagerSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionInstanceGroupManagerSpec.
func (in *RegionInstanceGroupManagerSpec) DeepCopy() *RegionInstanceGroupManagerSpec {
	if in == nil {
		return nil
	}
	out := new(RegionInstanceGroupManagerSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionInstanceGroupManagerStatefulDiskInitParameters) DeepCopyInto(out *RegionInstanceGroupManagerStatefulDiskInitParameters) {
	*out = *in
	if in.DeleteRule != nil {
		in, out := &in.DeleteRule, &out.DeleteRule
		*out = new(string)
		**out = **in
	}
	if in.DeviceName != nil {
		in, out := &in.DeviceName, &out.DeviceName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionInstanceGroupManagerStatefulDiskInitParameters.
func (in *RegionInstanceGroupManagerStatefulDiskInitParameters) DeepCopy() *RegionInstanceGroupManagerStatefulDiskInitParameters {
	if in == nil {
		return nil
	}
	out := new(RegionInstanceGroupManagerStatefulDiskInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionInstanceGroupManagerStatefulDiskObservation) DeepCopyInto(out *RegionInstanceGroupManagerStatefulDiskObservation) {
	*out = *in
	if in.DeleteRule != nil {
		in, out := &in.DeleteRule, &out.DeleteRule
		*out = new(string)
		**out = **in
	}
	if in.DeviceName != nil {
		in, out := &in.DeviceName, &out.DeviceName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionInstanceGroupManagerStatefulDiskObservation.
func (in *RegionInstanceGroupManagerStatefulDiskObservation) DeepCopy() *RegionInstanceGroupManagerStatefulDiskObservation {
	if in == nil {
		return nil
	}
	out := new(RegionInstanceGroupManagerStatefulDiskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionInstanceGroupManagerStatefulDiskParameters) DeepCopyInto(out *RegionInstanceGroupManagerStatefulDiskParameters) {
	*out = *in
	if in.DeleteRule != nil {
		in, out := &in.DeleteRule, &out.DeleteRule
		*out = new(string)
		**out = **in
	}
	if in.DeviceName != nil {
		in, out := &in.DeviceName, &out.DeviceName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionInstanceGroupManagerStatefulDiskParameters.
func (in *RegionInstanceGroupManagerStatefulDiskParameters) DeepCopy() *RegionInstanceGroupManagerStatefulDiskParameters {
	if in == nil {
		return nil
	}
	out := new(RegionInstanceGroupManagerStatefulDiskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionInstanceGroupManagerStatefulExternalIPInitParameters) DeepCopyInto(out *RegionInstanceGroupManagerStatefulExternalIPInitParameters) {
	*out = *in
	if in.DeleteRule != nil {
		in, out := &in.DeleteRule, &out.DeleteRule
		*out = new(string)
		**out = **in
	}
	if in.InterfaceName != nil {
		in, out := &in.InterfaceName, &out.InterfaceName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionInstanceGroupManagerStatefulExternalIPInitParameters.
func (in *RegionInstanceGroupManagerStatefulExternalIPInitParameters) DeepCopy() *RegionInstanceGroupManagerStatefulExternalIPInitParameters {
	if in == nil {
		return nil
	}
	out := new(RegionInstanceGroupManagerStatefulExternalIPInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionInstanceGroupManagerStatefulExternalIPObservation) DeepCopyInto(out *RegionInstanceGroupManagerStatefulExternalIPObservation) {
	*out = *in
	if in.DeleteRule != nil {
		in, out := &in.DeleteRule, &out.DeleteRule
		*out = new(string)
		**out = **in
	}
	if in.InterfaceName != nil {
		in, out := &in.InterfaceName, &out.InterfaceName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionInstanceGroupManagerStatefulExternalIPObservation.
func (in *RegionInstanceGroupManagerStatefulExternalIPObservation) DeepCopy() *RegionInstanceGroupManagerStatefulExternalIPObservation {
	if in == nil {
		return nil
	}
	out := new(RegionInstanceGroupManagerStatefulExternalIPObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionInstanceGroupManagerStatefulExternalIPParameters) DeepCopyInto(out *RegionInstanceGroupManagerStatefulExternalIPParameters) {
	*out = *in
	if in.DeleteRule != nil {
		in, out := &in.DeleteRule, &out.DeleteRule
		*out = new(string)
		**out = **in
	}
	if in.InterfaceName != nil {
		in, out := &in.InterfaceName, &out.InterfaceName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionInstanceGroupManagerStatefulExternalIPParameters.
func (in *RegionInstanceGroupManagerStatefulExternalIPParameters) DeepCopy() *RegionInstanceGroupManagerStatefulExternalIPParameters {
	if in == nil {
		return nil
	}
	out := new(RegionInstanceGroupManagerStatefulExternalIPParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionInstanceGroupManagerStatefulInternalIPInitParameters) DeepCopyInto(out *RegionInstanceGroupManagerStatefulInternalIPInitParameters) {
	*out = *in
	if in.DeleteRule != nil {
		in, out := &in.DeleteRule, &out.DeleteRule
		*out = new(string)
		**out = **in
	}
	if in.InterfaceName != nil {
		in, out := &in.InterfaceName, &out.InterfaceName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionInstanceGroupManagerStatefulInternalIPInitParameters.
func (in *RegionInstanceGroupManagerStatefulInternalIPInitParameters) DeepCopy() *RegionInstanceGroupManagerStatefulInternalIPInitParameters {
	if in == nil {
		return nil
	}
	out := new(RegionInstanceGroupManagerStatefulInternalIPInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionInstanceGroupManagerStatefulInternalIPObservation) DeepCopyInto(out *RegionInstanceGroupManagerStatefulInternalIPObservation) {
	*out = *in
	if in.DeleteRule != nil {
		in, out := &in.DeleteRule, &out.DeleteRule
		*out = new(string)
		**out = **in
	}
	if in.InterfaceName != nil {
		in, out := &in.InterfaceName, &out.InterfaceName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionInstanceGroupManagerStatefulInternalIPObservation.
func (in *RegionInstanceGroupManagerStatefulInternalIPObservation) DeepCopy() *RegionInstanceGroupManagerStatefulInternalIPObservation {
	if in == nil {
		return nil
	}
	out := new(RegionInstanceGroupManagerStatefulInternalIPObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionInstanceGroupManagerStatefulInternalIPParameters) DeepCopyInto(out *RegionInstanceGroupManagerStatefulInternalIPParameters) {
	*out = *in
	if in.DeleteRule != nil {
		in, out := &in.DeleteRule, &out.DeleteRule
		*out = new(string)
		**out = **in
	}
	if in.InterfaceName != nil {
		in, out := &in.InterfaceName, &out.InterfaceName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionInstanceGroupManagerStatefulInternalIPParameters.
func (in *RegionInstanceGroupManagerStatefulInternalIPParameters) DeepCopy() *RegionInstanceGroupManagerStatefulInternalIPParameters {
	if in == nil {
		return nil
	}
	out := new(RegionInstanceGroupManagerStatefulInternalIPParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionInstanceGroupManagerStatus) DeepCopyInto(out *RegionInstanceGroupManagerStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionInstanceGroupManagerStatus.
func (in *RegionInstanceGroupManagerStatus) DeepCopy() *RegionInstanceGroupManagerStatus {
	if in == nil {
		return nil
	}
	out := new(RegionInstanceGroupManagerStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionInstanceGroupManagerStatusAllInstancesConfigInitParameters) DeepCopyInto(out *RegionInstanceGroupManagerStatusAllInstancesConfigInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionInstanceGroupManagerStatusAllInstancesConfigInitParameters.
func (in *RegionInstanceGroupManagerStatusAllInstancesConfigInitParameters) DeepCopy() *RegionInstanceGroupManagerStatusAllInstancesConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(RegionInstanceGroupManagerStatusAllInstancesConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionInstanceGroupManagerStatusAllInstancesConfigObservation) DeepCopyInto(out *RegionInstanceGroupManagerStatusAllInstancesConfigObservation) {
	*out = *in
	if in.CurrentRevision != nil {
		in, out := &in.CurrentRevision, &out.CurrentRevision
		*out = new(string)
		**out = **in
	}
	if in.Effective != nil {
		in, out := &in.Effective, &out.Effective
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionInstanceGroupManagerStatusAllInstancesConfigObservation.
func (in *RegionInstanceGroupManagerStatusAllInstancesConfigObservation) DeepCopy() *RegionInstanceGroupManagerStatusAllInstancesConfigObservation {
	if in == nil {
		return nil
	}
	out := new(RegionInstanceGroupManagerStatusAllInstancesConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionInstanceGroupManagerStatusAllInstancesConfigParameters) DeepCopyInto(out *RegionInstanceGroupManagerStatusAllInstancesConfigParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionInstanceGroupManagerStatusAllInstancesConfigParameters.
func (in *RegionInstanceGroupManagerStatusAllInstancesConfigParameters) DeepCopy() *RegionInstanceGroupManagerStatusAllInstancesConfigParameters {
	if in == nil {
		return nil
	}
	out := new(RegionInstanceGroupManagerStatusAllInstancesConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionInstanceGroupManagerStatusInitParameters) DeepCopyInto(out *RegionInstanceGroupManagerStatusInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionInstanceGroupManagerStatusInitParameters.
func (in *RegionInstanceGroupManagerStatusInitParameters) DeepCopy() *RegionInstanceGroupManagerStatusInitParameters {
	if in == nil {
		return nil
	}
	out := new(RegionInstanceGroupManagerStatusInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionInstanceGroupManagerStatusObservation) DeepCopyInto(out *RegionInstanceGroupManagerStatusObservation) {
	*out = *in
	if in.AllInstancesConfig != nil {
		in, out := &in.AllInstancesConfig, &out.AllInstancesConfig
		*out = make([]RegionInstanceGroupManagerStatusAllInstancesConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IsStable != nil {
		in, out := &in.IsStable, &out.IsStable
		*out = new(bool)
		**out = **in
	}
	if in.Stateful != nil {
		in, out := &in.Stateful, &out.Stateful
		*out = make([]StatusStatefulObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VersionTarget != nil {
		in, out := &in.VersionTarget, &out.VersionTarget
		*out = make([]StatusVersionTargetObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionInstanceGroupManagerStatusObservation.
func (in *RegionInstanceGroupManagerStatusObservation) DeepCopy() *RegionInstanceGroupManagerStatusObservation {
	if in == nil {
		return nil
	}
	out := new(RegionInstanceGroupManagerStatusObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionInstanceGroupManagerStatusParameters) DeepCopyInto(out *RegionInstanceGroupManagerStatusParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionInstanceGroupManagerStatusParameters.
func (in *RegionInstanceGroupManagerStatusParameters) DeepCopy() *RegionInstanceGroupManagerStatusParameters {
	if in == nil {
		return nil
	}
	out := new(RegionInstanceGroupManagerStatusParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionInstanceGroupManagerUpdatePolicyInitParameters) DeepCopyInto(out *RegionInstanceGroupManagerUpdatePolicyInitParameters) {
	*out = *in
	if in.InstanceRedistributionType != nil {
		in, out := &in.InstanceRedistributionType, &out.InstanceRedistributionType
		*out = new(string)
		**out = **in
	}
	if in.MaxSurgeFixed != nil {
		in, out := &in.MaxSurgeFixed, &out.MaxSurgeFixed
		*out = new(float64)
		**out = **in
	}
	if in.MaxSurgePercent != nil {
		in, out := &in.MaxSurgePercent, &out.MaxSurgePercent
		*out = new(float64)
		**out = **in
	}
	if in.MaxUnavailableFixed != nil {
		in, out := &in.MaxUnavailableFixed, &out.MaxUnavailableFixed
		*out = new(float64)
		**out = **in
	}
	if in.MaxUnavailablePercent != nil {
		in, out := &in.MaxUnavailablePercent, &out.MaxUnavailablePercent
		*out = new(float64)
		**out = **in
	}
	if in.MinimalAction != nil {
		in, out := &in.MinimalAction, &out.MinimalAction
		*out = new(string)
		**out = **in
	}
	if in.MostDisruptiveAllowedAction != nil {
		in, out := &in.MostDisruptiveAllowedAction, &out.MostDisruptiveAllowedAction
		*out = new(string)
		**out = **in
	}
	if in.ReplacementMethod != nil {
		in, out := &in.ReplacementMethod, &out.ReplacementMethod
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionInstanceGroupManagerUpdatePolicyInitParameters.
func (in *RegionInstanceGroupManagerUpdatePolicyInitParameters) DeepCopy() *RegionInstanceGroupManagerUpdatePolicyInitParameters {
	if in == nil {
		return nil
	}
	out := new(RegionInstanceGroupManagerUpdatePolicyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionInstanceGroupManagerUpdatePolicyObservation) DeepCopyInto(out *RegionInstanceGroupManagerUpdatePolicyObservation) {
	*out = *in
	if in.InstanceRedistributionType != nil {
		in, out := &in.InstanceRedistributionType, &out.InstanceRedistributionType
		*out = new(string)
		**out = **in
	}
	if in.MaxSurgeFixed != nil {
		in, out := &in.MaxSurgeFixed, &out.MaxSurgeFixed
		*out = new(float64)
		**out = **in
	}
	if in.MaxSurgePercent != nil {
		in, out := &in.MaxSurgePercent, &out.MaxSurgePercent
		*out = new(float64)
		**out = **in
	}
	if in.MaxUnavailableFixed != nil {
		in, out := &in.MaxUnavailableFixed, &out.MaxUnavailableFixed
		*out = new(float64)
		**out = **in
	}
	if in.MaxUnavailablePercent != nil {
		in, out := &in.MaxUnavailablePercent, &out.MaxUnavailablePercent
		*out = new(float64)
		**out = **in
	}
	if in.MinimalAction != nil {
		in, out := &in.MinimalAction, &out.MinimalAction
		*out = new(string)
		**out = **in
	}
	if in.MostDisruptiveAllowedAction != nil {
		in, out := &in.MostDisruptiveAllowedAction, &out.MostDisruptiveAllowedAction
		*out = new(string)
		**out = **in
	}
	if in.ReplacementMethod != nil {
		in, out := &in.ReplacementMethod, &out.ReplacementMethod
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionInstanceGroupManagerUpdatePolicyObservation.
func (in *RegionInstanceGroupManagerUpdatePolicyObservation) DeepCopy() *RegionInstanceGroupManagerUpdatePolicyObservation {
	if in == nil {
		return nil
	}
	out := new(RegionInstanceGroupManagerUpdatePolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionInstanceGroupManagerUpdatePolicyParameters) DeepCopyInto(out *RegionInstanceGroupManagerUpdatePolicyParameters) {
	*out = *in
	if in.InstanceRedistributionType != nil {
		in, out := &in.InstanceRedistributionType, &out.InstanceRedistributionType
		*out = new(string)
		**out = **in
	}
	if in.MaxSurgeFixed != nil {
		in, out := &in.MaxSurgeFixed, &out.MaxSurgeFixed
		*out = new(float64)
		**out = **in
	}
	if in.MaxSurgePercent != nil {
		in, out := &in.MaxSurgePercent, &out.MaxSurgePercent
		*out = new(float64)
		**out = **in
	}
	if in.MaxUnavailableFixed != nil {
		in, out := &in.MaxUnavailableFixed, &out.MaxUnavailableFixed
		*out = new(float64)
		**out = **in
	}
	if in.MaxUnavailablePercent != nil {
		in, out := &in.MaxUnavailablePercent, &out.MaxUnavailablePercent
		*out = new(float64)
		**out = **in
	}
	if in.MinimalAction != nil {
		in, out := &in.MinimalAction, &out.MinimalAction
		*out = new(string)
		**out = **in
	}
	if in.MostDisruptiveAllowedAction != nil {
		in, out := &in.MostDisruptiveAllowedAction, &out.MostDisruptiveAllowedAction
		*out = new(string)
		**out = **in
	}
	if in.ReplacementMethod != nil {
		in, out := &in.ReplacementMethod, &out.ReplacementMethod
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionInstanceGroupManagerUpdatePolicyParameters.
func (in *RegionInstanceGroupManagerUpdatePolicyParameters) DeepCopy() *RegionInstanceGroupManagerUpdatePolicyParameters {
	if in == nil {
		return nil
	}
	out := new(RegionInstanceGroupManagerUpdatePolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionInstanceGroupManagerVersionInitParameters) DeepCopyInto(out *RegionInstanceGroupManagerVersionInitParameters) {
	*out = *in
	if in.InstanceTemplate != nil {
		in, out := &in.InstanceTemplate, &out.InstanceTemplate
		*out = new(string)
		**out = **in
	}
	if in.InstanceTemplateRef != nil {
		in, out := &in.InstanceTemplateRef, &out.InstanceTemplateRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.InstanceTemplateSelector != nil {
		in, out := &in.InstanceTemplateSelector, &out.InstanceTemplateSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.TargetSize != nil {
		in, out := &in.TargetSize, &out.TargetSize
		*out = make([]VersionTargetSizeInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionInstanceGroupManagerVersionInitParameters.
func (in *RegionInstanceGroupManagerVersionInitParameters) DeepCopy() *RegionInstanceGroupManagerVersionInitParameters {
	if in == nil {
		return nil
	}
	out := new(RegionInstanceGroupManagerVersionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionInstanceGroupManagerVersionObservation) DeepCopyInto(out *RegionInstanceGroupManagerVersionObservation) {
	*out = *in
	if in.InstanceTemplate != nil {
		in, out := &in.InstanceTemplate, &out.InstanceTemplate
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.TargetSize != nil {
		in, out := &in.TargetSize, &out.TargetSize
		*out = make([]VersionTargetSizeObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionInstanceGroupManagerVersionObservation.
func (in *RegionInstanceGroupManagerVersionObservation) DeepCopy() *RegionInstanceGroupManagerVersionObservation {
	if in == nil {
		return nil
	}
	out := new(RegionInstanceGroupManagerVersionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionInstanceGroupManagerVersionParameters) DeepCopyInto(out *RegionInstanceGroupManagerVersionParameters) {
	*out = *in
	if in.InstanceTemplate != nil {
		in, out := &in.InstanceTemplate, &out.InstanceTemplate
		*out = new(string)
		**out = **in
	}
	if in.InstanceTemplateRef != nil {
		in, out := &in.InstanceTemplateRef, &out.InstanceTemplateRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.InstanceTemplateSelector != nil {
		in, out := &in.InstanceTemplateSelector, &out.InstanceTemplateSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.TargetSize != nil {
		in, out := &in.TargetSize, &out.TargetSize
		*out = make([]VersionTargetSizeParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionInstanceGroupManagerVersionParameters.
func (in *RegionInstanceGroupManagerVersionParameters) DeepCopy() *RegionInstanceGroupManagerVersionParameters {
	if in == nil {
		return nil
	}
	out := new(RegionInstanceGroupManagerVersionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionNetworkEndpoint) DeepCopyInto(out *RegionNetworkEndpoint) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionNetworkEndpoint.
func (in *RegionNetworkEndpoint) DeepCopy() *RegionNetworkEndpoint {
	if in == nil {
		return nil
	}
	out := new(RegionNetworkEndpoint)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RegionNetworkEndpoint) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionNetworkEndpointGroup) DeepCopyInto(out *RegionNetworkEndpointGroup) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionNetworkEndpointGroup.
func (in *RegionNetworkEndpointGroup) DeepCopy() *RegionNetworkEndpointGroup {
	if in == nil {
		return nil
	}
	out := new(RegionNetworkEndpointGroup)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RegionNetworkEndpointGroup) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionNetworkEndpointGroupInitParameters) DeepCopyInto(out *RegionNetworkEndpointGroupInitParameters) {
	*out = *in
	if in.AppEngine != nil {
		in, out := &in.AppEngine, &out.AppEngine
		*out = make([]AppEngineInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CloudFunction != nil {
		in, out := &in.CloudFunction, &out.CloudFunction
		*out = make([]CloudFunctionInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CloudRun != nil {
		in, out := &in.CloudRun, &out.CloudRun
		*out = make([]CloudRunInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Network != nil {
		in, out := &in.Network, &out.Network
		*out = new(string)
		**out = **in
	}
	if in.NetworkEndpointType != nil {
		in, out := &in.NetworkEndpointType, &out.NetworkEndpointType
		*out = new(string)
		**out = **in
	}
	if in.NetworkRef != nil {
		in, out := &in.NetworkRef, &out.NetworkRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.NetworkSelector != nil {
		in, out := &in.NetworkSelector, &out.NetworkSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.PscTargetService != nil {
		in, out := &in.PscTargetService, &out.PscTargetService
		*out = new(string)
		**out = **in
	}
	if in.PscTargetServiceRef != nil {
		in, out := &in.PscTargetServiceRef, &out.PscTargetServiceRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.PscTargetServiceSelector != nil {
		in, out := &in.PscTargetServiceSelector, &out.PscTargetServiceSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Subnetwork != nil {
		in, out := &in.Subnetwork, &out.Subnetwork
		*out = new(string)
		**out = **in
	}
	if in.SubnetworkRef != nil {
		in, out := &in.SubnetworkRef, &out.SubnetworkRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SubnetworkSelector != nil {
		in, out := &in.SubnetworkSelector, &out.SubnetworkSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionNetworkEndpointGroupInitParameters.
func (in *RegionNetworkEndpointGroupInitParameters) DeepCopy() *RegionNetworkEndpointGroupInitParameters {
	if in == nil {
		return nil
	}
	out := new(RegionNetworkEndpointGroupInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionNetworkEndpointGroupList) DeepCopyInto(out *RegionNetworkEndpointGroupList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]RegionNetworkEndpointGroup, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionNetworkEndpointGroupList.
func (in *RegionNetworkEndpointGroupList) DeepCopy() *RegionNetworkEndpointGroupList {
	if in == nil {
		return nil
	}
	out := new(RegionNetworkEndpointGroupList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RegionNetworkEndpointGroupList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionNetworkEndpointGroupObservation) DeepCopyInto(out *RegionNetworkEndpointGroupObservation) {
	*out = *in
	if in.AppEngine != nil {
		in, out := &in.AppEngine, &out.AppEngine
		*out = make([]AppEngineObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CloudFunction != nil {
		in, out := &in.CloudFunction, &out.CloudFunction
		*out = make([]CloudFunctionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CloudRun != nil {
		in, out := &in.CloudRun, &out.CloudRun
		*out = make([]CloudRunObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Network != nil {
		in, out := &in.Network, &out.Network
		*out = new(string)
		**out = **in
	}
	if in.NetworkEndpointType != nil {
		in, out := &in.NetworkEndpointType, &out.NetworkEndpointType
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.PscTargetService != nil {
		in, out := &in.PscTargetService, &out.PscTargetService
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.SelfLink != nil {
		in, out := &in.SelfLink, &out.SelfLink
		*out = new(string)
		**out = **in
	}
	if in.Subnetwork != nil {
		in, out := &in.Subnetwork, &out.Subnetwork
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionNetworkEndpointGroupObservation.
func (in *RegionNetworkEndpointGroupObservation) DeepCopy() *RegionNetworkEndpointGroupObservation {
	if in == nil {
		return nil
	}
	out := new(RegionNetworkEndpointGroupObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionNetworkEndpointGroupParameters) DeepCopyInto(out *RegionNetworkEndpointGroupParameters) {
	*out = *in
	if in.AppEngine != nil {
		in, out := &in.AppEngine, &out.AppEngine
		*out = make([]AppEngineParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CloudFunction != nil {
		in, out := &in.CloudFunction, &out.CloudFunction
		*out = make([]CloudFunctionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CloudRun != nil {
		in, out := &in.CloudRun, &out.CloudRun
		*out = make([]CloudRunParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Network != nil {
		in, out := &in.Network, &out.Network
		*out = new(string)
		**out = **in
	}
	if in.NetworkEndpointType != nil {
		in, out := &in.NetworkEndpointType, &out.NetworkEndpointType
		*out = new(string)
		**out = **in
	}
	if in.NetworkRef != nil {
		in, out := &in.NetworkRef, &out.NetworkRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.NetworkSelector != nil {
		in, out := &in.NetworkSelector, &out.NetworkSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.PscTargetService != nil {
		in, out := &in.PscTargetService, &out.PscTargetService
		*out = new(string)
		**out = **in
	}
	if in.PscTargetServiceRef != nil {
		in, out := &in.PscTargetServiceRef, &out.PscTargetServiceRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.PscTargetServiceSelector != nil {
		in, out := &in.PscTargetServiceSelector, &out.PscTargetServiceSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.Subnetwork != nil {
		in, out := &in.Subnetwork, &out.Subnetwork
		*out = new(string)
		**out = **in
	}
	if in.SubnetworkRef != nil {
		in, out := &in.SubnetworkRef, &out.SubnetworkRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SubnetworkSelector != nil {
		in, out := &in.SubnetworkSelector, &out.SubnetworkSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionNetworkEndpointGroupParameters.
func (in *RegionNetworkEndpointGroupParameters) DeepCopy() *RegionNetworkEndpointGroupParameters {
	if in == nil {
		return nil
	}
	out := new(RegionNetworkEndpointGroupParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionNetworkEndpointGroupSpec) DeepCopyInto(out *RegionNetworkEndpointGroupSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionNetworkEndpointGroupSpec.
func (in *RegionNetworkEndpointGroupSpec) DeepCopy() *RegionNetworkEndpointGroupSpec {
	if in == nil {
		return nil
	}
	out := new(RegionNetworkEndpointGroupSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionNetworkEndpointGroupStatus) DeepCopyInto(out *RegionNetworkEndpointGroupStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionNetworkEndpointGroupStatus.
func (in *RegionNetworkEndpointGroupStatus) DeepCopy() *RegionNetworkEndpointGroupStatus {
	if in == nil {
		return nil
	}
	out := new(RegionNetworkEndpointGroupStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionNetworkEndpointInitParameters) DeepCopyInto(out *RegionNetworkEndpointInitParameters) {
	*out = *in
	if in.Fqdn != nil {
		in, out := &in.Fqdn, &out.Fqdn
		*out = new(string)
		**out = **in
	}
	if in.IPAddress != nil {
		in, out := &in.IPAddress, &out.IPAddress
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.RegionNetworkEndpointGroup != nil {
		in, out := &in.RegionNetworkEndpointGroup, &out.RegionNetworkEndpointGroup
		*out = new(string)
		**out = **in
	}
	if in.RegionNetworkEndpointGroupRef != nil {
		in, out := &in.RegionNetworkEndpointGroupRef, &out.RegionNetworkEndpointGroupRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.RegionNetworkEndpointGroupSelector != nil {
		in, out := &in.RegionNetworkEndpointGroupSelector, &out.RegionNetworkEndpointGroupSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionNetworkEndpointInitParameters.
func (in *RegionNetworkEndpointInitParameters) DeepCopy() *RegionNetworkEndpointInitParameters {
	if in == nil {
		return nil
	}
	out := new(RegionNetworkEndpointInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionNetworkEndpointList) DeepCopyInto(out *RegionNetworkEndpointList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]RegionNetworkEndpoint, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionNetworkEndpointList.
func (in *RegionNetworkEndpointList) DeepCopy() *RegionNetworkEndpointList {
	if in == nil {
		return nil
	}
	out := new(RegionNetworkEndpointList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RegionNetworkEndpointList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionNetworkEndpointObservation) DeepCopyInto(out *RegionNetworkEndpointObservation) {
	*out = *in
	if in.Fqdn != nil {
		in, out := &in.Fqdn, &out.Fqdn
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IPAddress != nil {
		in, out := &in.IPAddress, &out.IPAddress
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.RegionNetworkEndpointGroup != nil {
		in, out := &in.RegionNetworkEndpointGroup, &out.RegionNetworkEndpointGroup
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionNetworkEndpointObservation.
func (in *RegionNetworkEndpointObservation) DeepCopy() *RegionNetworkEndpointObservation {
	if in == nil {
		return nil
	}
	out := new(RegionNetworkEndpointObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionNetworkEndpointParameters) DeepCopyInto(out *RegionNetworkEndpointParameters) {
	*out = *in
	if in.Fqdn != nil {
		in, out := &in.Fqdn, &out.Fqdn
		*out = new(string)
		**out = **in
	}
	if in.IPAddress != nil {
		in, out := &in.IPAddress, &out.IPAddress
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.RegionNetworkEndpointGroup != nil {
		in, out := &in.RegionNetworkEndpointGroup, &out.RegionNetworkEndpointGroup
		*out = new(string)
		**out = **in
	}
	if in.RegionNetworkEndpointGroupRef != nil {
		in, out := &in.RegionNetworkEndpointGroupRef, &out.RegionNetworkEndpointGroupRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.RegionNetworkEndpointGroupSelector != nil {
		in, out := &in.RegionNetworkEndpointGroupSelector, &out.RegionNetworkEndpointGroupSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionNetworkEndpointParameters.
func (in *RegionNetworkEndpointParameters) DeepCopy() *RegionNetworkEndpointParameters {
	if in == nil {
		return nil
	}
	out := new(RegionNetworkEndpointParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionNetworkEndpointSpec) DeepCopyInto(out *RegionNetworkEndpointSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionNetworkEndpointSpec.
func (in *RegionNetworkEndpointSpec) DeepCopy() *RegionNetworkEndpointSpec {
	if in == nil {
		return nil
	}
	out := new(RegionNetworkEndpointSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionNetworkEndpointStatus) DeepCopyInto(out *RegionNetworkEndpointStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionNetworkEndpointStatus.
func (in *RegionNetworkEndpointStatus) DeepCopy() *RegionNetworkEndpointStatus {
	if in == nil {
		return nil
	}
	out := new(RegionNetworkEndpointStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionNetworkFirewallPolicy) DeepCopyInto(out *RegionNetworkFirewallPolicy) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionNetworkFirewallPolicy.
func (in *RegionNetworkFirewallPolicy) DeepCopy() *RegionNetworkFirewallPolicy {
	if in == nil {
		return nil
	}
	out := new(RegionNetworkFirewallPolicy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RegionNetworkFirewallPolicy) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionNetworkFirewallPolicyAssociation) DeepCopyInto(out *RegionNetworkFirewallPolicyAssociation) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionNetworkFirewallPolicyAssociation.
func (in *RegionNetworkFirewallPolicyAssociation) DeepCopy() *RegionNetworkFirewallPolicyAssociation {
	if in == nil {
		return nil
	}
	out := new(RegionNetworkFirewallPolicyAssociation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RegionNetworkFirewallPolicyAssociation) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionNetworkFirewallPolicyAssociationInitParameters) DeepCopyInto(out *RegionNetworkFirewallPolicyAssociationInitParameters) {
	*out = *in
	if in.AttachmentTarget != nil {
		in, out := &in.AttachmentTarget, &out.AttachmentTarget
		*out = new(string)
		**out = **in
	}
	if in.AttachmentTargetRef != nil {
		in, out := &in.AttachmentTargetRef, &out.AttachmentTargetRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.AttachmentTargetSelector != nil {
		in, out := &in.AttachmentTargetSelector, &out.AttachmentTargetSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionNetworkFirewallPolicyAssociationInitParameters.
func (in *RegionNetworkFirewallPolicyAssociationInitParameters) DeepCopy() *RegionNetworkFirewallPolicyAssociationInitParameters {
	if in == nil {
		return nil
	}
	out := new(RegionNetworkFirewallPolicyAssociationInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionNetworkFirewallPolicyAssociationList) DeepCopyInto(out *RegionNetworkFirewallPolicyAssociationList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]RegionNetworkFirewallPolicyAssociation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionNetworkFirewallPolicyAssociationList.
func (in *RegionNetworkFirewallPolicyAssociationList) DeepCopy() *RegionNetworkFirewallPolicyAssociationList {
	if in == nil {
		return nil
	}
	out := new(RegionNetworkFirewallPolicyAssociationList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RegionNetworkFirewallPolicyAssociationList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionNetworkFirewallPolicyAssociationObservation) DeepCopyInto(out *RegionNetworkFirewallPolicyAssociationObservation) {
	*out = *in
	if in.AttachmentTarget != nil {
		in, out := &in.AttachmentTarget, &out.AttachmentTarget
		*out = new(string)
		**out = **in
	}
	if in.FirewallPolicy != nil {
		in, out := &in.FirewallPolicy, &out.FirewallPolicy
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.ShortName != nil {
		in, out := &in.ShortName, &out.ShortName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionNetworkFirewallPolicyAssociationObservation.
func (in *RegionNetworkFirewallPolicyAssociationObservation) DeepCopy() *RegionNetworkFirewallPolicyAssociationObservation {
	if in == nil {
		return nil
	}
	out := new(RegionNetworkFirewallPolicyAssociationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionNetworkFirewallPolicyAssociationParameters) DeepCopyInto(out *RegionNetworkFirewallPolicyAssociationParameters) {
	*out = *in
	if in.AttachmentTarget != nil {
		in, out := &in.AttachmentTarget, &out.AttachmentTarget
		*out = new(string)
		**out = **in
	}
	if in.AttachmentTargetRef != nil {
		in, out := &in.AttachmentTargetRef, &out.AttachmentTargetRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.AttachmentTargetSelector != nil {
		in, out := &in.AttachmentTargetSelector, &out.AttachmentTargetSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.FirewallPolicy != nil {
		in, out := &in.FirewallPolicy, &out.FirewallPolicy
		*out = new(string)
		**out = **in
	}
	if in.FirewallPolicyRef != nil {
		in, out := &in.FirewallPolicyRef, &out.FirewallPolicyRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.FirewallPolicySelector != nil {
		in, out := &in.FirewallPolicySelector, &out.FirewallPolicySelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionNetworkFirewallPolicyAssociationParameters.
func (in *RegionNetworkFirewallPolicyAssociationParameters) DeepCopy() *RegionNetworkFirewallPolicyAssociationParameters {
	if in == nil {
		return nil
	}
	out := new(RegionNetworkFirewallPolicyAssociationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionNetworkFirewallPolicyAssociationSpec) DeepCopyInto(out *RegionNetworkFirewallPolicyAssociationSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionNetworkFirewallPolicyAssociationSpec.
func (in *RegionNetworkFirewallPolicyAssociationSpec) DeepCopy() *RegionNetworkFirewallPolicyAssociationSpec {
	if in == nil {
		return nil
	}
	out := new(RegionNetworkFirewallPolicyAssociationSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionNetworkFirewallPolicyAssociationStatus) DeepCopyInto(out *RegionNetworkFirewallPolicyAssociationStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionNetworkFirewallPolicyAssociationStatus.
func (in *RegionNetworkFirewallPolicyAssociationStatus) DeepCopy() *RegionNetworkFirewallPolicyAssociationStatus {
	if in == nil {
		return nil
	}
	out := new(RegionNetworkFirewallPolicyAssociationStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionNetworkFirewallPolicyInitParameters) DeepCopyInto(out *RegionNetworkFirewallPolicyInitParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionNetworkFirewallPolicyInitParameters.
func (in *RegionNetworkFirewallPolicyInitParameters) DeepCopy() *RegionNetworkFirewallPolicyInitParameters {
	if in == nil {
		return nil
	}
	out := new(RegionNetworkFirewallPolicyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionNetworkFirewallPolicyList) DeepCopyInto(out *RegionNetworkFirewallPolicyList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]RegionNetworkFirewallPolicy, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionNetworkFirewallPolicyList.
func (in *RegionNetworkFirewallPolicyList) DeepCopy() *RegionNetworkFirewallPolicyList {
	if in == nil {
		return nil
	}
	out := new(RegionNetworkFirewallPolicyList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RegionNetworkFirewallPolicyList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionNetworkFirewallPolicyObservation) DeepCopyInto(out *RegionNetworkFirewallPolicyObservation) {
	*out = *in
	if in.CreationTimestamp != nil {
		in, out := &in.CreationTimestamp, &out.CreationTimestamp
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Fingerprint != nil {
		in, out := &in.Fingerprint, &out.Fingerprint
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.RegionNetworkFirewallPolicyID != nil {
		in, out := &in.RegionNetworkFirewallPolicyID, &out.RegionNetworkFirewallPolicyID
		*out = new(string)
		**out = **in
	}
	if in.RuleTupleCount != nil {
		in, out := &in.RuleTupleCount, &out.RuleTupleCount
		*out = new(float64)
		**out = **in
	}
	if in.SelfLink != nil {
		in, out := &in.SelfLink, &out.SelfLink
		*out = new(string)
		**out = **in
	}
	if in.SelfLinkWithID != nil {
		in, out := &in.SelfLinkWithID, &out.SelfLinkWithID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionNetworkFirewallPolicyObservation.
func (in *RegionNetworkFirewallPolicyObservation) DeepCopy() *RegionNetworkFirewallPolicyObservation {
	if in == nil {
		return nil
	}
	out := new(RegionNetworkFirewallPolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionNetworkFirewallPolicyParameters) DeepCopyInto(out *RegionNetworkFirewallPolicyParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionNetworkFirewallPolicyParameters.
func (in *RegionNetworkFirewallPolicyParameters) DeepCopy() *RegionNetworkFirewallPolicyParameters {
	if in == nil {
		return nil
	}
	out := new(RegionNetworkFirewallPolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionNetworkFirewallPolicySpec) DeepCopyInto(out *RegionNetworkFirewallPolicySpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionNetworkFirewallPolicySpec.
func (in *RegionNetworkFirewallPolicySpec) DeepCopy() *RegionNetworkFirewallPolicySpec {
	if in == nil {
		return nil
	}
	out := new(RegionNetworkFirewallPolicySpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionNetworkFirewallPolicyStatus) DeepCopyInto(out *RegionNetworkFirewallPolicyStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionNetworkFirewallPolicyStatus.
func (in *RegionNetworkFirewallPolicyStatus) DeepCopy() *RegionNetworkFirewallPolicyStatus {
	if in == nil {
		return nil
	}
	out := new(RegionNetworkFirewallPolicyStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionPerInstanceConfig) DeepCopyInto(out *RegionPerInstanceConfig) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionPerInstanceConfig.
func (in *RegionPerInstanceConfig) DeepCopy() *RegionPerInstanceConfig {
	if in == nil {
		return nil
	}
	out := new(RegionPerInstanceConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RegionPerInstanceConfig) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionPerInstanceConfigInitParameters) DeepCopyInto(out *RegionPerInstanceConfigInitParameters) {
	*out = *in
	if in.MinimalAction != nil {
		in, out := &in.MinimalAction, &out.MinimalAction
		*out = new(string)
		**out = **in
	}
	if in.MostDisruptiveAllowedAction != nil {
		in, out := &in.MostDisruptiveAllowedAction, &out.MostDisruptiveAllowedAction
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PreservedState != nil {
		in, out := &in.PreservedState, &out.PreservedState
		*out = make([]RegionPerInstanceConfigPreservedStateInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.RegionInstanceGroupManager != nil {
		in, out := &in.RegionInstanceGroupManager, &out.RegionInstanceGroupManager
		*out = new(string)
		**out = **in
	}
	if in.RegionInstanceGroupManagerRef != nil {
		in, out := &in.RegionInstanceGroupManagerRef, &out.RegionInstanceGroupManagerRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.RegionInstanceGroupManagerSelector != nil {
		in, out := &in.RegionInstanceGroupManagerSelector, &out.RegionInstanceGroupManagerSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.RegionRef != nil {
		in, out := &in.RegionRef, &out.RegionRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.RegionSelector != nil {
		in, out := &in.RegionSelector, &out.RegionSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.RemoveInstanceOnDestroy != nil {
		in, out := &in.RemoveInstanceOnDestroy, &out.RemoveInstanceOnDestroy
		*out = new(bool)
		**out = **in
	}
	if in.RemoveInstanceStateOnDestroy != nil {
		in, out := &in.RemoveInstanceStateOnDestroy, &out.RemoveInstanceStateOnDestroy
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionPerInstanceConfigInitParameters.
func (in *RegionPerInstanceConfigInitParameters) DeepCopy() *RegionPerInstanceConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(RegionPerInstanceConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionPerInstanceConfigList) DeepCopyInto(out *RegionPerInstanceConfigList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]RegionPerInstanceConfig, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionPerInstanceConfigList.
func (in *RegionPerInstanceConfigList) DeepCopy() *RegionPerInstanceConfigList {
	if in == nil {
		return nil
	}
	out := new(RegionPerInstanceConfigList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RegionPerInstanceConfigList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionPerInstanceConfigObservation) DeepCopyInto(out *RegionPerInstanceConfigObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.MinimalAction != nil {
		in, out := &in.MinimalAction, &out.MinimalAction
		*out = new(string)
		**out = **in
	}
	if in.MostDisruptiveAllowedAction != nil {
		in, out := &in.MostDisruptiveAllowedAction, &out.MostDisruptiveAllowedAction
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PreservedState != nil {
		in, out := &in.PreservedState, &out.PreservedState
		*out = make([]RegionPerInstanceConfigPreservedStateObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.RegionInstanceGroupManager != nil {
		in, out := &in.RegionInstanceGroupManager, &out.RegionInstanceGroupManager
		*out = new(string)
		**out = **in
	}
	if in.RemoveInstanceOnDestroy != nil {
		in, out := &in.RemoveInstanceOnDestroy, &out.RemoveInstanceOnDestroy
		*out = new(bool)
		**out = **in
	}
	if in.RemoveInstanceStateOnDestroy != nil {
		in, out := &in.RemoveInstanceStateOnDestroy, &out.RemoveInstanceStateOnDestroy
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionPerInstanceConfigObservation.
func (in *RegionPerInstanceConfigObservation) DeepCopy() *RegionPerInstanceConfigObservation {
	if in == nil {
		return nil
	}
	out := new(RegionPerInstanceConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionPerInstanceConfigParameters) DeepCopyInto(out *RegionPerInstanceConfigParameters) {
	*out = *in
	if in.MinimalAction != nil {
		in, out := &in.MinimalAction, &out.MinimalAction
		*out = new(string)
		**out = **in
	}
	if in.MostDisruptiveAllowedAction != nil {
		in, out := &in.MostDisruptiveAllowedAction, &out.MostDisruptiveAllowedAction
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PreservedState != nil {
		in, out := &in.PreservedState, &out.PreservedState
		*out = make([]RegionPerInstanceConfigPreservedStateParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.RegionInstanceGroupManager != nil {
		in, out := &in.RegionInstanceGroupManager, &out.RegionInstanceGroupManager
		*out = new(string)
		**out = **in
	}
	if in.RegionInstanceGroupManagerRef != nil {
		in, out := &in.RegionInstanceGroupManagerRef, &out.RegionInstanceGroupManagerRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.RegionInstanceGroupManagerSelector != nil {
		in, out := &in.RegionInstanceGroupManagerSelector, &out.RegionInstanceGroupManagerSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.RegionRef != nil {
		in, out := &in.RegionRef, &out.RegionRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.RegionSelector != nil {
		in, out := &in.RegionSelector, &out.RegionSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.RemoveInstanceOnDestroy != nil {
		in, out := &in.RemoveInstanceOnDestroy, &out.RemoveInstanceOnDestroy
		*out = new(bool)
		**out = **in
	}
	if in.RemoveInstanceStateOnDestroy != nil {
		in, out := &in.RemoveInstanceStateOnDestroy, &out.RemoveInstanceStateOnDestroy
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionPerInstanceConfigParameters.
func (in *RegionPerInstanceConfigParameters) DeepCopy() *RegionPerInstanceConfigParameters {
	if in == nil {
		return nil
	}
	out := new(RegionPerInstanceConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionPerInstanceConfigPreservedStateDiskInitParameters) DeepCopyInto(out *RegionPerInstanceConfigPreservedStateDiskInitParameters) {
	*out = *in
	if in.DeleteRule != nil {
		in, out := &in.DeleteRule, &out.DeleteRule
		*out = new(string)
		**out = **in
	}
	if in.DeviceName != nil {
		in, out := &in.DeviceName, &out.DeviceName
		*out = new(string)
		**out = **in
	}
	if in.Mode != nil {
		in, out := &in.Mode, &out.Mode
		*out = new(string)
		**out = **in
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(string)
		**out = **in
	}
	if in.SourceRef != nil {
		in, out := &in.SourceRef, &out.SourceRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SourceSelector != nil {
		in, out := &in.SourceSelector, &out.SourceSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionPerInstanceConfigPreservedStateDiskInitParameters.
func (in *RegionPerInstanceConfigPreservedStateDiskInitParameters) DeepCopy() *RegionPerInstanceConfigPreservedStateDiskInitParameters {
	if in == nil {
		return nil
	}
	out := new(RegionPerInstanceConfigPreservedStateDiskInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionPerInstanceConfigPreservedStateDiskObservation) DeepCopyInto(out *RegionPerInstanceConfigPreservedStateDiskObservation) {
	*out = *in
	if in.DeleteRule != nil {
		in, out := &in.DeleteRule, &out.DeleteRule
		*out = new(string)
		**out = **in
	}
	if in.DeviceName != nil {
		in, out := &in.DeviceName, &out.DeviceName
		*out = new(string)
		**out = **in
	}
	if in.Mode != nil {
		in, out := &in.Mode, &out.Mode
		*out = new(string)
		**out = **in
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionPerInstanceConfigPreservedStateDiskObservation.
func (in *RegionPerInstanceConfigPreservedStateDiskObservation) DeepCopy() *RegionPerInstanceConfigPreservedStateDiskObservation {
	if in == nil {
		return nil
	}
	out := new(RegionPerInstanceConfigPreservedStateDiskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionPerInstanceConfigPreservedStateDiskParameters) DeepCopyInto(out *RegionPerInstanceConfigPreservedStateDiskParameters) {
	*out = *in
	if in.DeleteRule != nil {
		in, out := &in.DeleteRule, &out.DeleteRule
		*out = new(string)
		**out = **in
	}
	if in.DeviceName != nil {
		in, out := &in.DeviceName, &out.DeviceName
		*out = new(string)
		**out = **in
	}
	if in.Mode != nil {
		in, out := &in.Mode, &out.Mode
		*out = new(string)
		**out = **in
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(string)
		**out = **in
	}
	if in.SourceRef != nil {
		in, out := &in.SourceRef, &out.SourceRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SourceSelector != nil {
		in, out := &in.SourceSelector, &out.SourceSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionPerInstanceConfigPreservedStateDiskParameters.
func (in *RegionPerInstanceConfigPreservedStateDiskParameters) DeepCopy() *RegionPerInstanceConfigPreservedStateDiskParameters {
	if in == nil {
		return nil
	}
	out := new(RegionPerInstanceConfigPreservedStateDiskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionPerInstanceConfigPreservedStateInitParameters) DeepCopyInto(out *RegionPerInstanceConfigPreservedStateInitParameters) {
	*out = *in
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]RegionPerInstanceConfigPreservedStateDiskInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ExternalIP != nil {
		in, out := &in.ExternalIP, &out.ExternalIP
		*out = make([]PreservedStateExternalIPInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.InternalIP != nil {
		in, out := &in.InternalIP, &out.InternalIP
		*out = make([]PreservedStateInternalIPInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Metadata != nil {
		in, out := &in.Metadata, &out.Metadata
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionPerInstanceConfigPreservedStateInitParameters.
func (in *RegionPerInstanceConfigPreservedStateInitParameters) DeepCopy() *RegionPerInstanceConfigPreservedStateInitParameters {
	if in == nil {
		return nil
	}
	out := new(RegionPerInstanceConfigPreservedStateInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionPerInstanceConfigPreservedStateObservation) DeepCopyInto(out *RegionPerInstanceConfigPreservedStateObservation) {
	*out = *in
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]RegionPerInstanceConfigPreservedStateDiskObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ExternalIP != nil {
		in, out := &in.ExternalIP, &out.ExternalIP
		*out = make([]PreservedStateExternalIPObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.InternalIP != nil {
		in, out := &in.InternalIP, &out.InternalIP
		*out = make([]PreservedStateInternalIPObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Metadata != nil {
		in, out := &in.Metadata, &out.Metadata
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionPerInstanceConfigPreservedStateObservation.
func (in *RegionPerInstanceConfigPreservedStateObservation) DeepCopy() *RegionPerInstanceConfigPreservedStateObservation {
	if in == nil {
		return nil
	}
	out := new(RegionPerInstanceConfigPreservedStateObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionPerInstanceConfigPreservedStateParameters) DeepCopyInto(out *RegionPerInstanceConfigPreservedStateParameters) {
	*out = *in
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]RegionPerInstanceConfigPreservedStateDiskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ExternalIP != nil {
		in, out := &in.ExternalIP, &out.ExternalIP
		*out = make([]PreservedStateExternalIPParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.InternalIP != nil {
		in, out := &in.InternalIP, &out.InternalIP
		*out = make([]PreservedStateInternalIPParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Metadata != nil {
		in, out := &in.Metadata, &out.Metadata
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionPerInstanceConfigPreservedStateParameters.
func (in *RegionPerInstanceConfigPreservedStateParameters) DeepCopy() *RegionPerInstanceConfigPreservedStateParameters {
	if in == nil {
		return nil
	}
	out := new(RegionPerInstanceConfigPreservedStateParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionPerInstanceConfigSpec) DeepCopyInto(out *RegionPerInstanceConfigSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionPerInstanceConfigSpec.
func (in *RegionPerInstanceConfigSpec) DeepCopy() *RegionPerInstanceConfigSpec {
	if in == nil {
		return nil
	}
	out := new(RegionPerInstanceConfigSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionPerInstanceConfigStatus) DeepCopyInto(out *RegionPerInstanceConfigStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionPerInstanceConfigStatus.
func (in *RegionPerInstanceConfigStatus) DeepCopy() *RegionPerInstanceConfigStatus {
	if in == nil {
		return nil
	}
	out := new(RegionPerInstanceConfigStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionSSLCertificate) DeepCopyInto(out *RegionSSLCertificate) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionSSLCertificate.
func (in *RegionSSLCertificate) DeepCopy() *RegionSSLCertificate {
	if in == nil {
		return nil
	}
	out := new(RegionSSLCertificate)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RegionSSLCertificate) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionSSLCertificateInitParameters) DeepCopyInto(out *RegionSSLCertificateInitParameters) {
	*out = *in
	out.CertificateSecretRef = in.CertificateSecretRef
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	out.PrivateKeySecretRef = in.PrivateKeySecretRef
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionSSLCertificateInitParameters.
func (in *RegionSSLCertificateInitParameters) DeepCopy() *RegionSSLCertificateInitParameters {
	if in == nil {
		return nil
	}
	out := new(RegionSSLCertificateInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionSSLCertificateList) DeepCopyInto(out *RegionSSLCertificateList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]RegionSSLCertificate, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionSSLCertificateList.
func (in *RegionSSLCertificateList) DeepCopy() *RegionSSLCertificateList {
	if in == nil {
		return nil
	}
	out := new(RegionSSLCertificateList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RegionSSLCertificateList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionSSLCertificateObservation) DeepCopyInto(out *RegionSSLCertificateObservation) {
	*out = *in
	if in.CertificateID != nil {
		in, out := &in.CertificateID, &out.CertificateID
		*out = new(float64)
		**out = **in
	}
	if in.CreationTimestamp != nil {
		in, out := &in.CreationTimestamp, &out.CreationTimestamp
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.ExpireTime != nil {
		in, out := &in.ExpireTime, &out.ExpireTime
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.SelfLink != nil {
		in, out := &in.SelfLink, &out.SelfLink
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionSSLCertificateObservation.
func (in *RegionSSLCertificateObservation) DeepCopy() *RegionSSLCertificateObservation {
	if in == nil {
		return nil
	}
	out := new(RegionSSLCertificateObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionSSLCertificateParameters) DeepCopyInto(out *RegionSSLCertificateParameters) {
	*out = *in
	out.CertificateSecretRef = in.CertificateSecretRef
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	out.PrivateKeySecretRef = in.PrivateKeySecretRef
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionSSLCertificateParameters.
func (in *RegionSSLCertificateParameters) DeepCopy() *RegionSSLCertificateParameters {
	if in == nil {
		return nil
	}
	out := new(RegionSSLCertificateParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionSSLCertificateSpec) DeepCopyInto(out *RegionSSLCertificateSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionSSLCertificateSpec.
func (in *RegionSSLCertificateSpec) DeepCopy() *RegionSSLCertificateSpec {
	if in == nil {
		return nil
	}
	out := new(RegionSSLCertificateSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionSSLCertificateStatus) DeepCopyInto(out *RegionSSLCertificateStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionSSLCertificateStatus.
func (in *RegionSSLCertificateStatus) DeepCopy() *RegionSSLCertificateStatus {
	if in == nil {
		return nil
	}
	out := new(RegionSSLCertificateStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionTargetHTTPProxy) DeepCopyInto(out *RegionTargetHTTPProxy) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionTargetHTTPProxy.
func (in *RegionTargetHTTPProxy) DeepCopy() *RegionTargetHTTPProxy {
	if in == nil {
		return nil
	}
	out := new(RegionTargetHTTPProxy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RegionTargetHTTPProxy) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionTargetHTTPProxyInitParameters) DeepCopyInto(out *RegionTargetHTTPProxyInitParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.URLMap != nil {
		in, out := &in.URLMap, &out.URLMap
		*out = new(string)
		**out = **in
	}
	if in.URLMapRef != nil {
		in, out := &in.URLMapRef, &out.URLMapRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.URLMapSelector != nil {
		in, out := &in.URLMapSelector, &out.URLMapSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionTargetHTTPProxyInitParameters.
func (in *RegionTargetHTTPProxyInitParameters) DeepCopy() *RegionTargetHTTPProxyInitParameters {
	if in == nil {
		return nil
	}
	out := new(RegionTargetHTTPProxyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionTargetHTTPProxyList) DeepCopyInto(out *RegionTargetHTTPProxyList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]RegionTargetHTTPProxy, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionTargetHTTPProxyList.
func (in *RegionTargetHTTPProxyList) DeepCopy() *RegionTargetHTTPProxyList {
	if in == nil {
		return nil
	}
	out := new(RegionTargetHTTPProxyList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RegionTargetHTTPProxyList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionTargetHTTPProxyObservation) DeepCopyInto(out *RegionTargetHTTPProxyObservation) {
	*out = *in
	if in.CreationTimestamp != nil {
		in, out := &in.CreationTimestamp, &out.CreationTimestamp
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.ProxyID != nil {
		in, out := &in.ProxyID, &out.ProxyID
		*out = new(float64)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.SelfLink != nil {
		in, out := &in.SelfLink, &out.SelfLink
		*out = new(string)
		**out = **in
	}
	if in.URLMap != nil {
		in, out := &in.URLMap, &out.URLMap
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionTargetHTTPProxyObservation.
func (in *RegionTargetHTTPProxyObservation) DeepCopy() *RegionTargetHTTPProxyObservation {
	if in == nil {
		return nil
	}
	out := new(RegionTargetHTTPProxyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionTargetHTTPProxyParameters) DeepCopyInto(out *RegionTargetHTTPProxyParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.URLMap != nil {
		in, out := &in.URLMap, &out.URLMap
		*out = new(string)
		**out = **in
	}
	if in.URLMapRef != nil {
		in, out := &in.URLMapRef, &out.URLMapRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.URLMapSelector != nil {
		in, out := &in.URLMapSelector, &out.URLMapSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionTargetHTTPProxyParameters.
func (in *RegionTargetHTTPProxyParameters) DeepCopy() *RegionTargetHTTPProxyParameters {
	if in == nil {
		return nil
	}
	out := new(RegionTargetHTTPProxyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionTargetHTTPProxySpec) DeepCopyInto(out *RegionTargetHTTPProxySpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionTargetHTTPProxySpec.
func (in *RegionTargetHTTPProxySpec) DeepCopy() *RegionTargetHTTPProxySpec {
	if in == nil {
		return nil
	}
	out := new(RegionTargetHTTPProxySpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionTargetHTTPProxyStatus) DeepCopyInto(out *RegionTargetHTTPProxyStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionTargetHTTPProxyStatus.
func (in *RegionTargetHTTPProxyStatus) DeepCopy() *RegionTargetHTTPProxyStatus {
	if in == nil {
		return nil
	}
	out := new(RegionTargetHTTPProxyStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionTargetHTTPSProxy) DeepCopyInto(out *RegionTargetHTTPSProxy) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionTargetHTTPSProxy.
func (in *RegionTargetHTTPSProxy) DeepCopy() *RegionTargetHTTPSProxy {
	if in == nil {
		return nil
	}
	out := new(RegionTargetHTTPSProxy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RegionTargetHTTPSProxy) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionTargetHTTPSProxyInitParameters) DeepCopyInto(out *RegionTargetHTTPSProxyInitParameters) {
	*out = *in
	if in.CertificateManagerCertificates != nil {
		in, out := &in.CertificateManagerCertificates, &out.CertificateManagerCertificates
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.SSLCertificates != nil {
		in, out := &in.SSLCertificates, &out.SSLCertificates
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SSLCertificatesRefs != nil {
		in, out := &in.SSLCertificatesRefs, &out.SSLCertificatesRefs
		*out = make([]v1.Reference, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SSLCertificatesSelector != nil {
		in, out := &in.SSLCertificatesSelector, &out.SSLCertificatesSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.SSLPolicy != nil {
		in, out := &in.SSLPolicy, &out.SSLPolicy
		*out = new(string)
		**out = **in
	}
	if in.ServerTLSPolicy != nil {
		in, out := &in.ServerTLSPolicy, &out.ServerTLSPolicy
		*out = new(string)
		**out = **in
	}
	if in.URLMap != nil {
		in, out := &in.URLMap, &out.URLMap
		*out = new(string)
		**out = **in
	}
	if in.URLMapRef != nil {
		in, out := &in.URLMapRef, &out.URLMapRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.URLMapSelector != nil {
		in, out := &in.URLMapSelector, &out.URLMapSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionTargetHTTPSProxyInitParameters.
func (in *RegionTargetHTTPSProxyInitParameters) DeepCopy() *RegionTargetHTTPSProxyInitParameters {
	if in == nil {
		return nil
	}
	out := new(RegionTargetHTTPSProxyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionTargetHTTPSProxyList) DeepCopyInto(out *RegionTargetHTTPSProxyList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]RegionTargetHTTPSProxy, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionTargetHTTPSProxyList.
func (in *RegionTargetHTTPSProxyList) DeepCopy() *RegionTargetHTTPSProxyList {
	if in == nil {
		return nil
	}
	out := new(RegionTargetHTTPSProxyList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RegionTargetHTTPSProxyList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionTargetHTTPSProxyObservation) DeepCopyInto(out *RegionTargetHTTPSProxyObservation) {
	*out = *in
	if in.CertificateManagerCertificates != nil {
		in, out := &in.CertificateManagerCertificates, &out.CertificateManagerCertificates
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CreationTimestamp != nil {
		in, out := &in.CreationTimestamp, &out.CreationTimestamp
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.ProxyID != nil {
		in, out := &in.ProxyID, &out.ProxyID
		*out = new(float64)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.SSLCertificates != nil {
		in, out := &in.SSLCertificates, &out.SSLCertificates
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SSLPolicy != nil {
		in, out := &in.SSLPolicy, &out.SSLPolicy
		*out = new(string)
		**out = **in
	}
	if in.SelfLink != nil {
		in, out := &in.SelfLink, &out.SelfLink
		*out = new(string)
		**out = **in
	}
	if in.ServerTLSPolicy != nil {
		in, out := &in.ServerTLSPolicy, &out.ServerTLSPolicy
		*out = new(string)
		**out = **in
	}
	if in.URLMap != nil {
		in, out := &in.URLMap, &out.URLMap
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionTargetHTTPSProxyObservation.
func (in *RegionTargetHTTPSProxyObservation) DeepCopy() *RegionTargetHTTPSProxyObservation {
	if in == nil {
		return nil
	}
	out := new(RegionTargetHTTPSProxyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionTargetHTTPSProxyParameters) DeepCopyInto(out *RegionTargetHTTPSProxyParameters) {
	*out = *in
	if in.CertificateManagerCertificates != nil {
		in, out := &in.CertificateManagerCertificates, &out.CertificateManagerCertificates
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.SSLCertificates != nil {
		in, out := &in.SSLCertificates, &out.SSLCertificates
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SSLCertificatesRefs != nil {
		in, out := &in.SSLCertificatesRefs, &out.SSLCertificatesRefs
		*out = make([]v1.Reference, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SSLCertificatesSelector != nil {
		in, out := &in.SSLCertificatesSelector, &out.SSLCertificatesSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.SSLPolicy != nil {
		in, out := &in.SSLPolicy, &out.SSLPolicy
		*out = new(string)
		**out = **in
	}
	if in.ServerTLSPolicy != nil {
		in, out := &in.ServerTLSPolicy, &out.ServerTLSPolicy
		*out = new(string)
		**out = **in
	}
	if in.URLMap != nil {
		in, out := &in.URLMap, &out.URLMap
		*out = new(string)
		**out = **in
	}
	if in.URLMapRef != nil {
		in, out := &in.URLMapRef, &out.URLMapRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.URLMapSelector != nil {
		in, out := &in.URLMapSelector, &out.URLMapSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionTargetHTTPSProxyParameters.
func (in *RegionTargetHTTPSProxyParameters) DeepCopy() *RegionTargetHTTPSProxyParameters {
	if in == nil {
		return nil
	}
	out := new(RegionTargetHTTPSProxyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionTargetHTTPSProxySpec) DeepCopyInto(out *RegionTargetHTTPSProxySpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionTargetHTTPSProxySpec.
func (in *RegionTargetHTTPSProxySpec) DeepCopy() *RegionTargetHTTPSProxySpec {
	if in == nil {
		return nil
	}
	out := new(RegionTargetHTTPSProxySpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionTargetHTTPSProxyStatus) DeepCopyInto(out *RegionTargetHTTPSProxyStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionTargetHTTPSProxyStatus.
func (in *RegionTargetHTTPSProxyStatus) DeepCopy() *RegionTargetHTTPSProxyStatus {
	if in == nil {
		return nil
	}
	out := new(RegionTargetHTTPSProxyStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionTargetTCPProxy) DeepCopyInto(out *RegionTargetTCPProxy) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionTargetTCPProxy.
func (in *RegionTargetTCPProxy) DeepCopy() *RegionTargetTCPProxy {
	if in == nil {
		return nil
	}
	out := new(RegionTargetTCPProxy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RegionTargetTCPProxy) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionTargetTCPProxyInitParameters) DeepCopyInto(out *RegionTargetTCPProxyInitParameters) {
	*out = *in
	if in.BackendService != nil {
		in, out := &in.BackendService, &out.BackendService
		*out = new(string)
		**out = **in
	}
	if in.BackendServiceRef != nil {
		in, out := &in.BackendServiceRef, &out.BackendServiceRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.BackendServiceSelector != nil {
		in, out := &in.BackendServiceSelector, &out.BackendServiceSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.ProxyBind != nil {
		in, out := &in.ProxyBind, &out.ProxyBind
		*out = new(bool)
		**out = **in
	}
	if in.ProxyHeader != nil {
		in, out := &in.ProxyHeader, &out.ProxyHeader
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionTargetTCPProxyInitParameters.
func (in *RegionTargetTCPProxyInitParameters) DeepCopy() *RegionTargetTCPProxyInitParameters {
	if in == nil {
		return nil
	}
	out := new(RegionTargetTCPProxyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionTargetTCPProxyList) DeepCopyInto(out *RegionTargetTCPProxyList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]RegionTargetTCPProxy, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionTargetTCPProxyList.
func (in *RegionTargetTCPProxyList) DeepCopy() *RegionTargetTCPProxyList {
	if in == nil {
		return nil
	}
	out := new(RegionTargetTCPProxyList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RegionTargetTCPProxyList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionTargetTCPProxyObservation) DeepCopyInto(out *RegionTargetTCPProxyObservation) {
	*out = *in
	if in.BackendService != nil {
		in, out := &in.BackendService, &out.BackendService
		*out = new(string)
		**out = **in
	}
	if in.CreationTimestamp != nil {
		in, out := &in.CreationTimestamp, &out.CreationTimestamp
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.ProxyBind != nil {
		in, out := &in.ProxyBind, &out.ProxyBind
		*out = new(bool)
		**out = **in
	}
	if in.ProxyHeader != nil {
		in, out := &in.ProxyHeader, &out.ProxyHeader
		*out = new(string)
		**out = **in
	}
	if in.ProxyID != nil {
		in, out := &in.ProxyID, &out.ProxyID
		*out = new(float64)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.SelfLink != nil {
		in, out := &in.SelfLink, &out.SelfLink
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionTargetTCPProxyObservation.
func (in *RegionTargetTCPProxyObservation) DeepCopy() *RegionTargetTCPProxyObservation {
	if in == nil {
		return nil
	}
	out := new(RegionTargetTCPProxyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionTargetTCPProxyParameters) DeepCopyInto(out *RegionTargetTCPProxyParameters) {
	*out = *in
	if in.BackendService != nil {
		in, out := &in.BackendService, &out.BackendService
		*out = new(string)
		**out = **in
	}
	if in.BackendServiceRef != nil {
		in, out := &in.BackendServiceRef, &out.BackendServiceRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.BackendServiceSelector != nil {
		in, out := &in.BackendServiceSelector, &out.BackendServiceSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.ProxyBind != nil {
		in, out := &in.ProxyBind, &out.ProxyBind
		*out = new(bool)
		**out = **in
	}
	if in.ProxyHeader != nil {
		in, out := &in.ProxyHeader, &out.ProxyHeader
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionTargetTCPProxyParameters.
func (in *RegionTargetTCPProxyParameters) DeepCopy() *RegionTargetTCPProxyParameters {
	if in == nil {
		return nil
	}
	out := new(RegionTargetTCPProxyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionTargetTCPProxySpec) DeepCopyInto(out *RegionTargetTCPProxySpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionTargetTCPProxySpec.
func (in *RegionTargetTCPProxySpec) DeepCopy() *RegionTargetTCPProxySpec {
	if in == nil {
		return nil
	}
	out := new(RegionTargetTCPProxySpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionTargetTCPProxyStatus) DeepCopyInto(out *RegionTargetTCPProxyStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionTargetTCPProxyStatus.
func (in *RegionTargetTCPProxyStatus) DeepCopy() *RegionTargetTCPProxyStatus {
	if in == nil {
		return nil
	}
	out := new(RegionTargetTCPProxyStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionURLMap) DeepCopyInto(out *RegionURLMap) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionURLMap.
func (in *RegionURLMap) DeepCopy() *RegionURLMap {
	if in == nil {
		return nil
	}
	out := new(RegionURLMap)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RegionURLMap) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionURLMapInitParameters) DeepCopyInto(out *RegionURLMapInitParameters) {
	*out = *in
	if in.DefaultRouteAction != nil {
		in, out := &in.DefaultRouteAction, &out.DefaultRouteAction
		*out = make([]DefaultRouteActionInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DefaultService != nil {
		in, out := &in.DefaultService, &out.DefaultService
		*out = new(string)
		**out = **in
	}
	if in.DefaultServiceRef != nil {
		in, out := &in.DefaultServiceRef, &out.DefaultServiceRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.DefaultServiceSelector != nil {
		in, out := &in.DefaultServiceSelector, &out.DefaultServiceSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.DefaultURLRedirect != nil {
		in, out := &in.DefaultURLRedirect, &out.DefaultURLRedirect
		*out = make([]DefaultURLRedirectInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.HostRule != nil {
		in, out := &in.HostRule, &out.HostRule
		*out = make([]HostRuleInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PathMatcher != nil {
		in, out := &in.PathMatcher, &out.PathMatcher
		*out = make([]PathMatcherInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Test != nil {
		in, out := &in.Test, &out.Test
		*out = make([]TestInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionURLMapInitParameters.
func (in *RegionURLMapInitParameters) DeepCopy() *RegionURLMapInitParameters {
	if in == nil {
		return nil
	}
	out := new(RegionURLMapInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionURLMapList) DeepCopyInto(out *RegionURLMapList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]RegionURLMap, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionURLMapList.
func (in *RegionURLMapList) DeepCopy() *RegionURLMapList {
	if in == nil {
		return nil
	}
	out := new(RegionURLMapList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RegionURLMapList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionURLMapObservation) DeepCopyInto(out *RegionURLMapObservation) {
	*out = *in
	if in.CreationTimestamp != nil {
		in, out := &in.CreationTimestamp, &out.CreationTimestamp
		*out = new(string)
		**out = **in
	}
	if in.DefaultRouteAction != nil {
		in, out := &in.DefaultRouteAction, &out.DefaultRouteAction
		*out = make([]DefaultRouteActionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DefaultService != nil {
		in, out := &in.DefaultService, &out.DefaultService
		*out = new(string)
		**out = **in
	}
	if in.DefaultURLRedirect != nil {
		in, out := &in.DefaultURLRedirect, &out.DefaultURLRedirect
		*out = make([]DefaultURLRedirectObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Fingerprint != nil {
		in, out := &in.Fingerprint, &out.Fingerprint
		*out = new(string)
		**out = **in
	}
	if in.HostRule != nil {
		in, out := &in.HostRule, &out.HostRule
		*out = make([]HostRuleObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.MapID != nil {
		in, out := &in.MapID, &out.MapID
		*out = new(float64)
		**out = **in
	}
	if in.PathMatcher != nil {
		in, out := &in.PathMatcher, &out.PathMatcher
		*out = make([]PathMatcherObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.SelfLink != nil {
		in, out := &in.SelfLink, &out.SelfLink
		*out = new(string)
		**out = **in
	}
	if in.Test != nil {
		in, out := &in.Test, &out.Test
		*out = make([]TestObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionURLMapObservation.
func (in *RegionURLMapObservation) DeepCopy() *RegionURLMapObservation {
	if in == nil {
		return nil
	}
	out := new(RegionURLMapObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionURLMapParameters) DeepCopyInto(out *RegionURLMapParameters) {
	*out = *in
	if in.DefaultRouteAction != nil {
		in, out := &in.DefaultRouteAction, &out.DefaultRouteAction
		*out = make([]DefaultRouteActionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DefaultService != nil {
		in, out := &in.DefaultService, &out.DefaultService
		*out = new(string)
		**out = **in
	}
	if in.DefaultServiceRef != nil {
		in, out := &in.DefaultServiceRef, &out.DefaultServiceRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.DefaultServiceSelector != nil {
		in, out := &in.DefaultServiceSelector, &out.DefaultServiceSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.DefaultURLRedirect != nil {
		in, out := &in.DefaultURLRedirect, &out.DefaultURLRedirect
		*out = make([]DefaultURLRedirectParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.HostRule != nil {
		in, out := &in.HostRule, &out.HostRule
		*out = make([]HostRuleParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PathMatcher != nil {
		in, out := &in.PathMatcher, &out.PathMatcher
		*out = make([]PathMatcherParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.Test != nil {
		in, out := &in.Test, &out.Test
		*out = make([]TestParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionURLMapParameters.
func (in *RegionURLMapParameters) DeepCopy() *RegionURLMapParameters {
	if in == nil {
		return nil
	}
	out := new(RegionURLMapParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionURLMapSpec) DeepCopyInto(out *RegionURLMapSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionURLMapSpec.
func (in *RegionURLMapSpec) DeepCopy() *RegionURLMapSpec {
	if in == nil {
		return nil
	}
	out := new(RegionURLMapSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionURLMapStatus) DeepCopyInto(out *RegionURLMapStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionURLMapStatus.
func (in *RegionURLMapStatus) DeepCopy() *RegionURLMapStatus {
	if in == nil {
		return nil
	}
	out := new(RegionURLMapStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RequestHeadersToAddInitParameters) DeepCopyInto(out *RequestHeadersToAddInitParameters) {
	*out = *in
	if in.HeaderName != nil {
		in, out := &in.HeaderName, &out.HeaderName
		*out = new(string)
		**out = **in
	}
	if in.HeaderValue != nil {
		in, out := &in.HeaderValue, &out.HeaderValue
		*out = new(string)
		**out = **in
	}
	if in.Replace != nil {
		in, out := &in.Replace, &out.Replace
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RequestHeadersToAddInitParameters.
func (in *RequestHeadersToAddInitParameters) DeepCopy() *RequestHeadersToAddInitParameters {
	if in == nil {
		return nil
	}
	out := new(RequestHeadersToAddInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RequestHeadersToAddObservation) DeepCopyInto(out *RequestHeadersToAddObservation) {
	*out = *in
	if in.HeaderName != nil {
		in, out := &in.HeaderName, &out.HeaderName
		*out = new(string)
		**out = **in
	}
	if in.HeaderValue != nil {
		in, out := &in.HeaderValue, &out.HeaderValue
		*out = new(string)
		**out = **in
	}
	if in.Replace != nil {
		in, out := &in.Replace, &out.Replace
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RequestHeadersToAddObservation.
func (in *RequestHeadersToAddObservation) DeepCopy() *RequestHeadersToAddObservation {
	if in == nil {
		return nil
	}
	out := new(RequestHeadersToAddObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RequestHeadersToAddParameters) DeepCopyInto(out *RequestHeadersToAddParameters) {
	*out = *in
	if in.HeaderName != nil {
		in, out := &in.HeaderName, &out.HeaderName
		*out = new(string)
		**out = **in
	}
	if in.HeaderValue != nil {
		in, out := &in.HeaderValue, &out.HeaderValue
		*out = new(string)
		**out = **in
	}
	if in.Replace != nil {
		in, out := &in.Replace, &out.Replace
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RequestHeadersToAddParameters.
func (in *RequestHeadersToAddParameters) DeepCopy() *RequestHeadersToAddParameters {
	if in == nil {
		return nil
	}
	out := new(RequestHeadersToAddParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RequestHeadersToAddsInitParameters) DeepCopyInto(out *RequestHeadersToAddsInitParameters) {
	*out = *in
	if in.HeaderName != nil {
		in, out := &in.HeaderName, &out.HeaderName
		*out = new(string)
		**out = **in
	}
	if in.HeaderValue != nil {
		in, out := &in.HeaderValue, &out.HeaderValue
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RequestHeadersToAddsInitParameters.
func (in *RequestHeadersToAddsInitParameters) DeepCopy() *RequestHeadersToAddsInitParameters {
	if in == nil {
		return nil
	}
	out := new(RequestHeadersToAddsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RequestHeadersToAddsObservation) DeepCopyInto(out *RequestHeadersToAddsObservation) {
	*out = *in
	if in.HeaderName != nil {
		in, out := &in.HeaderName, &out.HeaderName
		*out = new(string)
		**out = **in
	}
	if in.HeaderValue != nil {
		in, out := &in.HeaderValue, &out.HeaderValue
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RequestHeadersToAddsObservation.
func (in *RequestHeadersToAddsObservation) DeepCopy() *RequestHeadersToAddsObservation {
	if in == nil {
		return nil
	}
	out := new(RequestHeadersToAddsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RequestHeadersToAddsParameters) DeepCopyInto(out *RequestHeadersToAddsParameters) {
	*out = *in
	if in.HeaderName != nil {
		in, out := &in.HeaderName, &out.HeaderName
		*out = new(string)
		**out = **in
	}
	if in.HeaderValue != nil {
		in, out := &in.HeaderValue, &out.HeaderValue
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RequestHeadersToAddsParameters.
func (in *RequestHeadersToAddsParameters) DeepCopy() *RequestHeadersToAddsParameters {
	if in == nil {
		return nil
	}
	out := new(RequestHeadersToAddsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RequestMirrorPolicyInitParameters) DeepCopyInto(out *RequestMirrorPolicyInitParameters) {
	*out = *in
	if in.BackendService != nil {
		in, out := &in.BackendService, &out.BackendService
		*out = new(string)
		**out = **in
	}
	if in.BackendServiceRef != nil {
		in, out := &in.BackendServiceRef, &out.BackendServiceRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.BackendServiceSelector != nil {
		in, out := &in.BackendServiceSelector, &out.BackendServiceSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RequestMirrorPolicyInitParameters.
func (in *RequestMirrorPolicyInitParameters) DeepCopy() *RequestMirrorPolicyInitParameters {
	if in == nil {
		return nil
	}
	out := new(RequestMirrorPolicyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RequestMirrorPolicyObservation) DeepCopyInto(out *RequestMirrorPolicyObservation) {
	*out = *in
	if in.BackendService != nil {
		in, out := &in.BackendService, &out.BackendService
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RequestMirrorPolicyObservation.
func (in *RequestMirrorPolicyObservation) DeepCopy() *RequestMirrorPolicyObservation {
	if in == nil {
		return nil
	}
	out := new(RequestMirrorPolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RequestMirrorPolicyParameters) DeepCopyInto(out *RequestMirrorPolicyParameters) {
	*out = *in
	if in.BackendService != nil {
		in, out := &in.BackendService, &out.BackendService
		*out = new(string)
		**out = **in
	}
	if in.BackendServiceRef != nil {
		in, out := &in.BackendServiceRef, &out.BackendServiceRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.BackendServiceSelector != nil {
		in, out := &in.BackendServiceSelector, &out.BackendServiceSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RequestMirrorPolicyParameters.
func (in *RequestMirrorPolicyParameters) DeepCopy() *RequestMirrorPolicyParameters {
	if in == nil {
		return nil
	}
	out := new(RequestMirrorPolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Reservation) DeepCopyInto(out *Reservation) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Reservation.
func (in *Reservation) DeepCopy() *Reservation {
	if in == nil {
		return nil
	}
	out := new(Reservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Reservation) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReservationAffinityInitParameters) DeepCopyInto(out *ReservationAffinityInitParameters) {
	*out = *in
	if in.SpecificReservation != nil {
		in, out := &in.SpecificReservation, &out.SpecificReservation
		*out = make([]SpecificReservationInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReservationAffinityInitParameters.
func (in *ReservationAffinityInitParameters) DeepCopy() *ReservationAffinityInitParameters {
	if in == nil {
		return nil
	}
	out := new(ReservationAffinityInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReservationAffinityObservation) DeepCopyInto(out *ReservationAffinityObservation) {
	*out = *in
	if in.SpecificReservation != nil {
		in, out := &in.SpecificReservation, &out.SpecificReservation
		*out = make([]SpecificReservationObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReservationAffinityObservation.
func (in *ReservationAffinityObservation) DeepCopy() *ReservationAffinityObservation {
	if in == nil {
		return nil
	}
	out := new(ReservationAffinityObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReservationAffinityParameters) DeepCopyInto(out *ReservationAffinityParameters) {
	*out = *in
	if in.SpecificReservation != nil {
		in, out := &in.SpecificReservation, &out.SpecificReservation
		*out = make([]SpecificReservationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReservationAffinityParameters.
func (in *ReservationAffinityParameters) DeepCopy() *ReservationAffinityParameters {
	if in == nil {
		return nil
	}
	out := new(ReservationAffinityParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReservationAffinitySpecificReservationInitParameters) DeepCopyInto(out *ReservationAffinitySpecificReservationInitParameters) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReservationAffinitySpecificReservationInitParameters.
func (in *ReservationAffinitySpecificReservationInitParameters) DeepCopy() *ReservationAffinitySpecificReservationInitParameters {
	if in == nil {
		return nil
	}
	out := new(ReservationAffinitySpecificReservationInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReservationAffinitySpecificReservationObservation) DeepCopyInto(out *ReservationAffinitySpecificReservationObservation) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReservationAffinitySpecificReservationObservation.
func (in *ReservationAffinitySpecificReservationObservation) DeepCopy() *ReservationAffinitySpecificReservationObservation {
	if in == nil {
		return nil
	}
	out := new(ReservationAffinitySpecificReservationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReservationAffinitySpecificReservationParameters) DeepCopyInto(out *ReservationAffinitySpecificReservationParameters) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReservationAffinitySpecificReservationParameters.
func (in *ReservationAffinitySpecificReservationParameters) DeepCopy() *ReservationAffinitySpecificReservationParameters {
	if in == nil {
		return nil
	}
	out := new(ReservationAffinitySpecificReservationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReservationInitParameters) DeepCopyInto(out *ReservationInitParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.ShareSettings != nil {
		in, out := &in.ShareSettings, &out.ShareSettings
		*out = make([]ReservationShareSettingsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SpecificReservation != nil {
		in, out := &in.SpecificReservation, &out.SpecificReservation
		*out = make([]ReservationSpecificReservationInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SpecificReservationRequired != nil {
		in, out := &in.SpecificReservationRequired, &out.SpecificReservationRequired
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReservationInitParameters.
func (in *ReservationInitParameters) DeepCopy() *ReservationInitParameters {
	if in == nil {
		return nil
	}
	out := new(ReservationInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReservationList) DeepCopyInto(out *ReservationList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Reservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReservationList.
func (in *ReservationList) DeepCopy() *ReservationList {
	if in == nil {
		return nil
	}
	out := new(ReservationList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ReservationList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReservationObservation) DeepCopyInto(out *ReservationObservation) {
	*out = *in
	if in.Commitment != nil {
		in, out := &in.Commitment, &out.Commitment
		*out = new(string)
		**out = **in
	}
	if in.CreationTimestamp != nil {
		in, out := &in.CreationTimestamp, &out.CreationTimestamp
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.SelfLink != nil {
		in, out := &in.SelfLink, &out.SelfLink
		*out = new(string)
		**out = **in
	}
	if in.ShareSettings != nil {
		in, out := &in.ShareSettings, &out.ShareSettings
		*out = make([]ReservationShareSettingsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SpecificReservation != nil {
		in, out := &in.SpecificReservation, &out.SpecificReservation
		*out = make([]ReservationSpecificReservationObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SpecificReservationRequired != nil {
		in, out := &in.SpecificReservationRequired, &out.SpecificReservationRequired
		*out = new(bool)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
	if in.Zone != nil {
		in, out := &in.Zone, &out.Zone
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReservationObservation.
func (in *ReservationObservation) DeepCopy() *ReservationObservation {
	if in == nil {
		return nil
	}
	out := new(ReservationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReservationParameters) DeepCopyInto(out *ReservationParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.ShareSettings != nil {
		in, out := &in.ShareSettings, &out.ShareSettings
		*out = make([]ReservationShareSettingsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SpecificReservation != nil {
		in, out := &in.SpecificReservation, &out.SpecificReservation
		*out = make([]ReservationSpecificReservationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SpecificReservationRequired != nil {
		in, out := &in.SpecificReservationRequired, &out.SpecificReservationRequired
		*out = new(bool)
		**out = **in
	}
	if in.Zone != nil {
		in, out := &in.Zone, &out.Zone
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReservationParameters.
func (in *ReservationParameters) DeepCopy() *ReservationParameters {
	if in == nil {
		return nil
	}
	out := new(ReservationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReservationShareSettingsInitParameters) DeepCopyInto(out *ReservationShareSettingsInitParameters) {
	*out = *in
	if in.ProjectMap != nil {
		in, out := &in.ProjectMap, &out.ProjectMap
		*out = make([]ShareSettingsProjectMapInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ShareType != nil {
		in, out := &in.ShareType, &out.ShareType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReservationShareSettingsInitParameters.
func (in *ReservationShareSettingsInitParameters) DeepCopy() *ReservationShareSettingsInitParameters {
	if in == nil {
		return nil
	}
	out := new(ReservationShareSettingsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReservationShareSettingsObservation) DeepCopyInto(out *ReservationShareSettingsObservation) {
	*out = *in
	if in.ProjectMap != nil {
		in, out := &in.ProjectMap, &out.ProjectMap
		*out = make([]ShareSettingsProjectMapObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ShareType != nil {
		in, out := &in.ShareType, &out.ShareType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReservationShareSettingsObservation.
func (in *ReservationShareSettingsObservation) DeepCopy() *ReservationShareSettingsObservation {
	if in == nil {
		return nil
	}
	out := new(ReservationShareSettingsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReservationShareSettingsParameters) DeepCopyInto(out *ReservationShareSettingsParameters) {
	*out = *in
	if in.ProjectMap != nil {
		in, out := &in.ProjectMap, &out.ProjectMap
		*out = make([]ShareSettingsProjectMapParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ShareType != nil {
		in, out := &in.ShareType, &out.ShareType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReservationShareSettingsParameters.
func (in *ReservationShareSettingsParameters) DeepCopy() *ReservationShareSettingsParameters {
	if in == nil {
		return nil
	}
	out := new(ReservationShareSettingsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReservationSpec) DeepCopyInto(out *ReservationSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReservationSpec.
func (in *ReservationSpec) DeepCopy() *ReservationSpec {
	if in == nil {
		return nil
	}
	out := new(ReservationSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReservationSpecificReservationInitParameters) DeepCopyInto(out *ReservationSpecificReservationInitParameters) {
	*out = *in
	if in.Count != nil {
		in, out := &in.Count, &out.Count
		*out = new(float64)
		**out = **in
	}
	if in.InstanceProperties != nil {
		in, out := &in.InstanceProperties, &out.InstanceProperties
		*out = make([]InstancePropertiesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReservationSpecificReservationInitParameters.
func (in *ReservationSpecificReservationInitParameters) DeepCopy() *ReservationSpecificReservationInitParameters {
	if in == nil {
		return nil
	}
	out := new(ReservationSpecificReservationInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReservationSpecificReservationObservation) DeepCopyInto(out *ReservationSpecificReservationObservation) {
	*out = *in
	if in.Count != nil {
		in, out := &in.Count, &out.Count
		*out = new(float64)
		**out = **in
	}
	if in.InUseCount != nil {
		in, out := &in.InUseCount, &out.InUseCount
		*out = new(float64)
		**out = **in
	}
	if in.InstanceProperties != nil {
		in, out := &in.InstanceProperties, &out.InstanceProperties
		*out = make([]InstancePropertiesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReservationSpecificReservationObservation.
func (in *ReservationSpecificReservationObservation) DeepCopy() *ReservationSpecificReservationObservation {
	if in == nil {
		return nil
	}
	out := new(ReservationSpecificReservationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReservationSpecificReservationParameters) DeepCopyInto(out *ReservationSpecificReservationParameters) {
	*out = *in
	if in.Count != nil {
		in, out := &in.Count, &out.Count
		*out = new(float64)
		**out = **in
	}
	if in.InstanceProperties != nil {
		in, out := &in.InstanceProperties, &out.InstanceProperties
		*out = make([]InstancePropertiesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReservationSpecificReservationParameters.
func (in *ReservationSpecificReservationParameters) DeepCopy() *ReservationSpecificReservationParameters {
	if in == nil {
		return nil
	}
	out := new(ReservationSpecificReservationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReservationStatus) DeepCopyInto(out *ReservationStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReservationStatus.
func (in *ReservationStatus) DeepCopy() *ReservationStatus {
	if in == nil {
		return nil
	}
	out := new(ReservationStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ResourcePolicy) DeepCopyInto(out *ResourcePolicy) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ResourcePolicy.
func (in *ResourcePolicy) DeepCopy() *ResourcePolicy {
	if in == nil {
		return nil
	}
	out := new(ResourcePolicy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ResourcePolicy) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ResourcePolicyInitParameters) DeepCopyInto(out *ResourcePolicyInitParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DiskConsistencyGroupPolicy != nil {
		in, out := &in.DiskConsistencyGroupPolicy, &out.DiskConsistencyGroupPolicy
		*out = make([]DiskConsistencyGroupPolicyInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.GroupPlacementPolicy != nil {
		in, out := &in.GroupPlacementPolicy, &out.GroupPlacementPolicy
		*out = make([]GroupPlacementPolicyInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.InstanceSchedulePolicy != nil {
		in, out := &in.InstanceSchedulePolicy, &out.InstanceSchedulePolicy
		*out = make([]InstanceSchedulePolicyInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.SnapshotSchedulePolicy != nil {
		in, out := &in.SnapshotSchedulePolicy, &out.SnapshotSchedulePolicy
		*out = make([]SnapshotSchedulePolicyInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ResourcePolicyInitParameters.
func (in *ResourcePolicyInitParameters) DeepCopy() *ResourcePolicyInitParameters {
	if in == nil {
		return nil
	}
	out := new(ResourcePolicyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ResourcePolicyList) DeepCopyInto(out *ResourcePolicyList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ResourcePolicy, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ResourcePolicyList.
func (in *ResourcePolicyList) DeepCopy() *ResourcePolicyList {
	if in == nil {
		return nil
	}
	out := new(ResourcePolicyList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ResourcePolicyList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ResourcePolicyObservation) DeepCopyInto(out *ResourcePolicyObservation) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DiskConsistencyGroupPolicy != nil {
		in, out := &in.DiskConsistencyGroupPolicy, &out.DiskConsistencyGroupPolicy
		*out = make([]DiskConsistencyGroupPolicyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.GroupPlacementPolicy != nil {
		in, out := &in.GroupPlacementPolicy, &out.GroupPlacementPolicy
		*out = make([]GroupPlacementPolicyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.InstanceSchedulePolicy != nil {
		in, out := &in.InstanceSchedulePolicy, &out.InstanceSchedulePolicy
		*out = make([]InstanceSchedulePolicyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.SelfLink != nil {
		in, out := &in.SelfLink, &out.SelfLink
		*out = new(string)
		**out = **in
	}
	if in.SnapshotSchedulePolicy != nil {
		in, out := &in.SnapshotSchedulePolicy, &out.SnapshotSchedulePolicy
		*out = make([]SnapshotSchedulePolicyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ResourcePolicyObservation.
func (in *ResourcePolicyObservation) DeepCopy() *ResourcePolicyObservation {
	if in == nil {
		return nil
	}
	out := new(ResourcePolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ResourcePolicyParameters) DeepCopyInto(out *ResourcePolicyParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DiskConsistencyGroupPolicy != nil {
		in, out := &in.DiskConsistencyGroupPolicy, &out.DiskConsistencyGroupPolicy
		*out = make([]DiskConsistencyGroupPolicyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.GroupPlacementPolicy != nil {
		in, out := &in.GroupPlacementPolicy, &out.GroupPlacementPolicy
		*out = make([]GroupPlacementPolicyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.InstanceSchedulePolicy != nil {
		in, out := &in.InstanceSchedulePolicy, &out.InstanceSchedulePolicy
		*out = make([]InstanceSchedulePolicyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.SnapshotSchedulePolicy != nil {
		in, out := &in.SnapshotSchedulePolicy, &out.SnapshotSchedulePolicy
		*out = make([]SnapshotSchedulePolicyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ResourcePolicyParameters.
func (in *ResourcePolicyParameters) DeepCopy() *ResourcePolicyParameters {
	if in == nil {
		return nil
	}
	out := new(ResourcePolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ResourcePolicySpec) DeepCopyInto(out *ResourcePolicySpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ResourcePolicySpec.
func (in *ResourcePolicySpec) DeepCopy() *ResourcePolicySpec {
	if in == nil {
		return nil
	}
	out := new(ResourcePolicySpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ResourcePolicyStatus) DeepCopyInto(out *ResourcePolicyStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ResourcePolicyStatus.
func (in *ResourcePolicyStatus) DeepCopy() *ResourcePolicyStatus {
	if in == nil {
		return nil
	}
	out := new(ResourcePolicyStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ResponseHeadersToAddInitParameters) DeepCopyInto(out *ResponseHeadersToAddInitParameters) {
	*out = *in
	if in.HeaderName != nil {
		in, out := &in.HeaderName, &out.HeaderName
		*out = new(string)
		**out = **in
	}
	if in.HeaderValue != nil {
		in, out := &in.HeaderValue, &out.HeaderValue
		*out = new(string)
		**out = **in
	}
	if in.Replace != nil {
		in, out := &in.Replace, &out.Replace
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ResponseHeadersToAddInitParameters.
func (in *ResponseHeadersToAddInitParameters) DeepCopy() *ResponseHeadersToAddInitParameters {
	if in == nil {
		return nil
	}
	out := new(ResponseHeadersToAddInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ResponseHeadersToAddObservation) DeepCopyInto(out *ResponseHeadersToAddObservation) {
	*out = *in
	if in.HeaderName != nil {
		in, out := &in.HeaderName, &out.HeaderName
		*out = new(string)
		**out = **in
	}
	if in.HeaderValue != nil {
		in, out := &in.HeaderValue, &out.HeaderValue
		*out = new(string)
		**out = **in
	}
	if in.Replace != nil {
		in, out := &in.Replace, &out.Replace
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ResponseHeadersToAddObservation.
func (in *ResponseHeadersToAddObservation) DeepCopy() *ResponseHeadersToAddObservation {
	if in == nil {
		return nil
	}
	out := new(ResponseHeadersToAddObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ResponseHeadersToAddParameters) DeepCopyInto(out *ResponseHeadersToAddParameters) {
	*out = *in
	if in.HeaderName != nil {
		in, out := &in.HeaderName, &out.HeaderName
		*out = new(string)
		**out = **in
	}
	if in.HeaderValue != nil {
		in, out := &in.HeaderValue, &out.HeaderValue
		*out = new(string)
		**out = **in
	}
	if in.Replace != nil {
		in, out := &in.Replace, &out.Replace
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ResponseHeadersToAddParameters.
func (in *ResponseHeadersToAddParameters) DeepCopy() *ResponseHeadersToAddParameters {
	if in == nil {
		return nil
	}
	out := new(ResponseHeadersToAddParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RetentionPolicyInitParameters) DeepCopyInto(out *RetentionPolicyInitParameters) {
	*out = *in
	if in.MaxRetentionDays != nil {
		in, out := &in.MaxRetentionDays, &out.MaxRetentionDays
		*out = new(float64)
		**out = **in
	}
	if in.OnSourceDiskDelete != nil {
		in, out := &in.OnSourceDiskDelete, &out.OnSourceDiskDelete
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RetentionPolicyInitParameters.
func (in *RetentionPolicyInitParameters) DeepCopy() *RetentionPolicyInitParameters {
	if in == nil {
		return nil
	}
	out := new(RetentionPolicyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RetentionPolicyObservation) DeepCopyInto(out *RetentionPolicyObservation) {
	*out = *in
	if in.MaxRetentionDays != nil {
		in, out := &in.MaxRetentionDays, &out.MaxRetentionDays
		*out = new(float64)
		**out = **in
	}
	if in.OnSourceDiskDelete != nil {
		in, out := &in.OnSourceDiskDelete, &out.OnSourceDiskDelete
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RetentionPolicyObservation.
func (in *RetentionPolicyObservation) DeepCopy() *RetentionPolicyObservation {
	if in == nil {
		return nil
	}
	out := new(RetentionPolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RetentionPolicyParameters) DeepCopyInto(out *RetentionPolicyParameters) {
	*out = *in
	if in.MaxRetentionDays != nil {
		in, out := &in.MaxRetentionDays, &out.MaxRetentionDays
		*out = new(float64)
		**out = **in
	}
	if in.OnSourceDiskDelete != nil {
		in, out := &in.OnSourceDiskDelete, &out.OnSourceDiskDelete
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RetentionPolicyParameters.
func (in *RetentionPolicyParameters) DeepCopy() *RetentionPolicyParameters {
	if in == nil {
		return nil
	}
	out := new(RetentionPolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RetryPolicyInitParameters) DeepCopyInto(out *RetryPolicyInitParameters) {
	*out = *in
	if in.NumRetries != nil {
		in, out := &in.NumRetries, &out.NumRetries
		*out = new(float64)
		**out = **in
	}
	if in.PerTryTimeout != nil {
		in, out := &in.PerTryTimeout, &out.PerTryTimeout
		*out = make([]PerTryTimeoutInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RetryConditions != nil {
		in, out := &in.RetryConditions, &out.RetryConditions
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RetryPolicyInitParameters.
func (in *RetryPolicyInitParameters) DeepCopy() *RetryPolicyInitParameters {
	if in == nil {
		return nil
	}
	out := new(RetryPolicyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RetryPolicyObservation) DeepCopyInto(out *RetryPolicyObservation) {
	*out = *in
	if in.NumRetries != nil {
		in, out := &in.NumRetries, &out.NumRetries
		*out = new(float64)
		**out = **in
	}
	if in.PerTryTimeout != nil {
		in, out := &in.PerTryTimeout, &out.PerTryTimeout
		*out = make([]PerTryTimeoutObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RetryConditions != nil {
		in, out := &in.RetryConditions, &out.RetryConditions
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RetryPolicyObservation.
func (in *RetryPolicyObservation) DeepCopy() *RetryPolicyObservation {
	if in == nil {
		return nil
	}
	out := new(RetryPolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RetryPolicyParameters) DeepCopyInto(out *RetryPolicyParameters) {
	*out = *in
	if in.NumRetries != nil {
		in, out := &in.NumRetries, &out.NumRetries
		*out = new(float64)
		**out = **in
	}
	if in.PerTryTimeout != nil {
		in, out := &in.PerTryTimeout, &out.PerTryTimeout
		*out = make([]PerTryTimeoutParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RetryConditions != nil {
		in, out := &in.RetryConditions, &out.RetryConditions
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RetryPolicyParameters.
func (in *RetryPolicyParameters) DeepCopy() *RetryPolicyParameters {
	if in == nil {
		return nil
	}
	out := new(RetryPolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RetryPolicyPerTryTimeoutInitParameters) DeepCopyInto(out *RetryPolicyPerTryTimeoutInitParameters) {
	*out = *in
	if in.Nanos != nil {
		in, out := &in.Nanos, &out.Nanos
		*out = new(float64)
		**out = **in
	}
	if in.Seconds != nil {
		in, out := &in.Seconds, &out.Seconds
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RetryPolicyPerTryTimeoutInitParameters.
func (in *RetryPolicyPerTryTimeoutInitParameters) DeepCopy() *RetryPolicyPerTryTimeoutInitParameters {
	if in == nil {
		return nil
	}
	out := new(RetryPolicyPerTryTimeoutInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RetryPolicyPerTryTimeoutObservation) DeepCopyInto(out *RetryPolicyPerTryTimeoutObservation) {
	*out = *in
	if in.Nanos != nil {
		in, out := &in.Nanos, &out.Nanos
		*out = new(float64)
		**out = **in
	}
	if in.Seconds != nil {
		in, out := &in.Seconds, &out.Seconds
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RetryPolicyPerTryTimeoutObservation.
func (in *RetryPolicyPerTryTimeoutObservation) DeepCopy() *RetryPolicyPerTryTimeoutObservation {
	if in == nil {
		return nil
	}
	out := new(RetryPolicyPerTryTimeoutObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RetryPolicyPerTryTimeoutParameters) DeepCopyInto(out *RetryPolicyPerTryTimeoutParameters) {
	*out = *in
	if in.Nanos != nil {
		in, out := &in.Nanos, &out.Nanos
		*out = new(float64)
		**out = **in
	}
	if in.Seconds != nil {
		in, out := &in.Seconds, &out.Seconds
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RetryPolicyPerTryTimeoutParameters.
func (in *RetryPolicyPerTryTimeoutParameters) DeepCopy() *RetryPolicyPerTryTimeoutParameters {
	if in == nil {
		return nil
	}
	out := new(RetryPolicyPerTryTimeoutParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Route) DeepCopyInto(out *Route) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Route.
func (in *Route) DeepCopy() *Route {
	if in == nil {
		return nil
	}
	out := new(Route)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Route) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteActionCorsPolicyInitParameters) DeepCopyInto(out *RouteActionCorsPolicyInitParameters) {
	*out = *in
	if in.AllowCredentials != nil {
		in, out := &in.AllowCredentials, &out.AllowCredentials
		*out = new(bool)
		**out = **in
	}
	if in.AllowHeaders != nil {
		in, out := &in.AllowHeaders, &out.AllowHeaders
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AllowMethods != nil {
		in, out := &in.AllowMethods, &out.AllowMethods
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AllowOriginRegexes != nil {
		in, out := &in.AllowOriginRegexes, &out.AllowOriginRegexes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AllowOrigins != nil {
		in, out := &in.AllowOrigins, &out.AllowOrigins
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Disabled != nil {
		in, out := &in.Disabled, &out.Disabled
		*out = new(bool)
		**out = **in
	}
	if in.ExposeHeaders != nil {
		in, out := &in.ExposeHeaders, &out.ExposeHeaders
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.MaxAge != nil {
		in, out := &in.MaxAge, &out.MaxAge
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteActionCorsPolicyInitParameters.
func (in *RouteActionCorsPolicyInitParameters) DeepCopy() *RouteActionCorsPolicyInitParameters {
	if in == nil {
		return nil
	}
	out := new(RouteActionCorsPolicyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteActionCorsPolicyObservation) DeepCopyInto(out *RouteActionCorsPolicyObservation) {
	*out = *in
	if in.AllowCredentials != nil {
		in, out := &in.AllowCredentials, &out.AllowCredentials
		*out = new(bool)
		**out = **in
	}
	if in.AllowHeaders != nil {
		in, out := &in.AllowHeaders, &out.AllowHeaders
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AllowMethods != nil {
		in, out := &in.AllowMethods, &out.AllowMethods
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AllowOriginRegexes != nil {
		in, out := &in.AllowOriginRegexes, &out.AllowOriginRegexes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AllowOrigins != nil {
		in, out := &in.AllowOrigins, &out.AllowOrigins
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Disabled != nil {
		in, out := &in.Disabled, &out.Disabled
		*out = new(bool)
		**out = **in
	}
	if in.ExposeHeaders != nil {
		in, out := &in.ExposeHeaders, &out.ExposeHeaders
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.MaxAge != nil {
		in, out := &in.MaxAge, &out.MaxAge
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteActionCorsPolicyObservation.
func (in *RouteActionCorsPolicyObservation) DeepCopy() *RouteActionCorsPolicyObservation {
	if in == nil {
		return nil
	}
	out := new(RouteActionCorsPolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteActionCorsPolicyParameters) DeepCopyInto(out *RouteActionCorsPolicyParameters) {
	*out = *in
	if in.AllowCredentials != nil {
		in, out := &in.AllowCredentials, &out.AllowCredentials
		*out = new(bool)
		**out = **in
	}
	if in.AllowHeaders != nil {
		in, out := &in.AllowHeaders, &out.AllowHeaders
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AllowMethods != nil {
		in, out := &in.AllowMethods, &out.AllowMethods
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AllowOriginRegexes != nil {
		in, out := &in.AllowOriginRegexes, &out.AllowOriginRegexes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AllowOrigins != nil {
		in, out := &in.AllowOrigins, &out.AllowOrigins
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Disabled != nil {
		in, out := &in.Disabled, &out.Disabled
		*out = new(bool)
		**out = **in
	}
	if in.ExposeHeaders != nil {
		in, out := &in.ExposeHeaders, &out.ExposeHeaders
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.MaxAge != nil {
		in, out := &in.MaxAge, &out.MaxAge
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteActionCorsPolicyParameters.
func (in *RouteActionCorsPolicyParameters) DeepCopy() *RouteActionCorsPolicyParameters {
	if in == nil {
		return nil
	}
	out := new(RouteActionCorsPolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteActionFaultInjectionPolicyAbortInitParameters) DeepCopyInto(out *RouteActionFaultInjectionPolicyAbortInitParameters) {
	*out = *in
	if in.HTTPStatus != nil {
		in, out := &in.HTTPStatus, &out.HTTPStatus
		*out = new(float64)
		**out = **in
	}
	if in.Percentage != nil {
		in, out := &in.Percentage, &out.Percentage
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteActionFaultInjectionPolicyAbortInitParameters.
func (in *RouteActionFaultInjectionPolicyAbortInitParameters) DeepCopy() *RouteActionFaultInjectionPolicyAbortInitParameters {
	if in == nil {
		return nil
	}
	out := new(RouteActionFaultInjectionPolicyAbortInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteActionFaultInjectionPolicyAbortObservation) DeepCopyInto(out *RouteActionFaultInjectionPolicyAbortObservation) {
	*out = *in
	if in.HTTPStatus != nil {
		in, out := &in.HTTPStatus, &out.HTTPStatus
		*out = new(float64)
		**out = **in
	}
	if in.Percentage != nil {
		in, out := &in.Percentage, &out.Percentage
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteActionFaultInjectionPolicyAbortObservation.
func (in *RouteActionFaultInjectionPolicyAbortObservation) DeepCopy() *RouteActionFaultInjectionPolicyAbortObservation {
	if in == nil {
		return nil
	}
	out := new(RouteActionFaultInjectionPolicyAbortObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteActionFaultInjectionPolicyAbortParameters) DeepCopyInto(out *RouteActionFaultInjectionPolicyAbortParameters) {
	*out = *in
	if in.HTTPStatus != nil {
		in, out := &in.HTTPStatus, &out.HTTPStatus
		*out = new(float64)
		**out = **in
	}
	if in.Percentage != nil {
		in, out := &in.Percentage, &out.Percentage
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteActionFaultInjectionPolicyAbortParameters.
func (in *RouteActionFaultInjectionPolicyAbortParameters) DeepCopy() *RouteActionFaultInjectionPolicyAbortParameters {
	if in == nil {
		return nil
	}
	out := new(RouteActionFaultInjectionPolicyAbortParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteActionFaultInjectionPolicyDelayFixedDelayInitParameters) DeepCopyInto(out *RouteActionFaultInjectionPolicyDelayFixedDelayInitParameters) {
	*out = *in
	if in.Nanos != nil {
		in, out := &in.Nanos, &out.Nanos
		*out = new(float64)
		**out = **in
	}
	if in.Seconds != nil {
		in, out := &in.Seconds, &out.Seconds
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteActionFaultInjectionPolicyDelayFixedDelayInitParameters.
func (in *RouteActionFaultInjectionPolicyDelayFixedDelayInitParameters) DeepCopy() *RouteActionFaultInjectionPolicyDelayFixedDelayInitParameters {
	if in == nil {
		return nil
	}
	out := new(RouteActionFaultInjectionPolicyDelayFixedDelayInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteActionFaultInjectionPolicyDelayFixedDelayObservation) DeepCopyInto(out *RouteActionFaultInjectionPolicyDelayFixedDelayObservation) {
	*out = *in
	if in.Nanos != nil {
		in, out := &in.Nanos, &out.Nanos
		*out = new(float64)
		**out = **in
	}
	if in.Seconds != nil {
		in, out := &in.Seconds, &out.Seconds
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteActionFaultInjectionPolicyDelayFixedDelayObservation.
func (in *RouteActionFaultInjectionPolicyDelayFixedDelayObservation) DeepCopy() *RouteActionFaultInjectionPolicyDelayFixedDelayObservation {
	if in == nil {
		return nil
	}
	out := new(RouteActionFaultInjectionPolicyDelayFixedDelayObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteActionFaultInjectionPolicyDelayFixedDelayParameters) DeepCopyInto(out *RouteActionFaultInjectionPolicyDelayFixedDelayParameters) {
	*out = *in
	if in.Nanos != nil {
		in, out := &in.Nanos, &out.Nanos
		*out = new(float64)
		**out = **in
	}
	if in.Seconds != nil {
		in, out := &in.Seconds, &out.Seconds
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteActionFaultInjectionPolicyDelayFixedDelayParameters.
func (in *RouteActionFaultInjectionPolicyDelayFixedDelayParameters) DeepCopy() *RouteActionFaultInjectionPolicyDelayFixedDelayParameters {
	if in == nil {
		return nil
	}
	out := new(RouteActionFaultInjectionPolicyDelayFixedDelayParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteActionFaultInjectionPolicyDelayInitParameters) DeepCopyInto(out *RouteActionFaultInjectionPolicyDelayInitParameters) {
	*out = *in
	if in.FixedDelay != nil {
		in, out := &in.FixedDelay, &out.FixedDelay
		*out = make([]FaultInjectionPolicyDelayFixedDelayInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Percentage != nil {
		in, out := &in.Percentage, &out.Percentage
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteActionFaultInjectionPolicyDelayInitParameters.
func (in *RouteActionFaultInjectionPolicyDelayInitParameters) DeepCopy() *RouteActionFaultInjectionPolicyDelayInitParameters {
	if in == nil {
		return nil
	}
	out := new(RouteActionFaultInjectionPolicyDelayInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteActionFaultInjectionPolicyDelayObservation) DeepCopyInto(out *RouteActionFaultInjectionPolicyDelayObservation) {
	*out = *in
	if in.FixedDelay != nil {
		in, out := &in.FixedDelay, &out.FixedDelay
		*out = make([]FaultInjectionPolicyDelayFixedDelayObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Percentage != nil {
		in, out := &in.Percentage, &out.Percentage
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteActionFaultInjectionPolicyDelayObservation.
func (in *RouteActionFaultInjectionPolicyDelayObservation) DeepCopy() *RouteActionFaultInjectionPolicyDelayObservation {
	if in == nil {
		return nil
	}
	out := new(RouteActionFaultInjectionPolicyDelayObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteActionFaultInjectionPolicyDelayParameters) DeepCopyInto(out *RouteActionFaultInjectionPolicyDelayParameters) {
	*out = *in
	if in.FixedDelay != nil {
		in, out := &in.FixedDelay, &out.FixedDelay
		*out = make([]FaultInjectionPolicyDelayFixedDelayParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Percentage != nil {
		in, out := &in.Percentage, &out.Percentage
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteActionFaultInjectionPolicyDelayParameters.
func (in *RouteActionFaultInjectionPolicyDelayParameters) DeepCopy() *RouteActionFaultInjectionPolicyDelayParameters {
	if in == nil {
		return nil
	}
	out := new(RouteActionFaultInjectionPolicyDelayParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteActionFaultInjectionPolicyInitParameters) DeepCopyInto(out *RouteActionFaultInjectionPolicyInitParameters) {
	*out = *in
	if in.Abort != nil {
		in, out := &in.Abort, &out.Abort
		*out = make([]FaultInjectionPolicyAbortInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Delay != nil {
		in, out := &in.Delay, &out.Delay
		*out = make([]FaultInjectionPolicyDelayInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteActionFaultInjectionPolicyInitParameters.
func (in *RouteActionFaultInjectionPolicyInitParameters) DeepCopy() *RouteActionFaultInjectionPolicyInitParameters {
	if in == nil {
		return nil
	}
	out := new(RouteActionFaultInjectionPolicyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteActionFaultInjectionPolicyObservation) DeepCopyInto(out *RouteActionFaultInjectionPolicyObservation) {
	*out = *in
	if in.Abort != nil {
		in, out := &in.Abort, &out.Abort
		*out = make([]FaultInjectionPolicyAbortObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Delay != nil {
		in, out := &in.Delay, &out.Delay
		*out = make([]FaultInjectionPolicyDelayObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteActionFaultInjectionPolicyObservation.
func (in *RouteActionFaultInjectionPolicyObservation) DeepCopy() *RouteActionFaultInjectionPolicyObservation {
	if in == nil {
		return nil
	}
	out := new(RouteActionFaultInjectionPolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteActionFaultInjectionPolicyParameters) DeepCopyInto(out *RouteActionFaultInjectionPolicyParameters) {
	*out = *in
	if in.Abort != nil {
		in, out := &in.Abort, &out.Abort
		*out = make([]FaultInjectionPolicyAbortParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Delay != nil {
		in, out := &in.Delay, &out.Delay
		*out = make([]FaultInjectionPolicyDelayParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteActionFaultInjectionPolicyParameters.
func (in *RouteActionFaultInjectionPolicyParameters) DeepCopy() *RouteActionFaultInjectionPolicyParameters {
	if in == nil {
		return nil
	}
	out := new(RouteActionFaultInjectionPolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteActionInitParameters) DeepCopyInto(out *RouteActionInitParameters) {
	*out = *in
	if in.CorsPolicy != nil {
		in, out := &in.CorsPolicy, &out.CorsPolicy
		*out = make([]RouteActionCorsPolicyInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.FaultInjectionPolicy != nil {
		in, out := &in.FaultInjectionPolicy, &out.FaultInjectionPolicy
		*out = make([]RouteActionFaultInjectionPolicyInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RequestMirrorPolicy != nil {
		in, out := &in.RequestMirrorPolicy, &out.RequestMirrorPolicy
		*out = make([]RouteActionRequestMirrorPolicyInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RetryPolicy != nil {
		in, out := &in.RetryPolicy, &out.RetryPolicy
		*out = make([]RouteActionRetryPolicyInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Timeout != nil {
		in, out := &in.Timeout, &out.Timeout
		*out = make([]RouteActionTimeoutInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.URLRewrite != nil {
		in, out := &in.URLRewrite, &out.URLRewrite
		*out = make([]RouteActionURLRewriteInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.WeightedBackendServices != nil {
		in, out := &in.WeightedBackendServices, &out.WeightedBackendServices
		*out = make([]RouteActionWeightedBackendServicesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteActionInitParameters.
func (in *RouteActionInitParameters) DeepCopy() *RouteActionInitParameters {
	if in == nil {
		return nil
	}
	out := new(RouteActionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteActionObservation) DeepCopyInto(out *RouteActionObservation) {
	*out = *in
	if in.CorsPolicy != nil {
		in, out := &in.CorsPolicy, &out.CorsPolicy
		*out = make([]RouteActionCorsPolicyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.FaultInjectionPolicy != nil {
		in, out := &in.FaultInjectionPolicy, &out.FaultInjectionPolicy
		*out = make([]RouteActionFaultInjectionPolicyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RequestMirrorPolicy != nil {
		in, out := &in.RequestMirrorPolicy, &out.RequestMirrorPolicy
		*out = make([]RouteActionRequestMirrorPolicyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RetryPolicy != nil {
		in, out := &in.RetryPolicy, &out.RetryPolicy
		*out = make([]RouteActionRetryPolicyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Timeout != nil {
		in, out := &in.Timeout, &out.Timeout
		*out = make([]RouteActionTimeoutObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.URLRewrite != nil {
		in, out := &in.URLRewrite, &out.URLRewrite
		*out = make([]RouteActionURLRewriteObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.WeightedBackendServices != nil {
		in, out := &in.WeightedBackendServices, &out.WeightedBackendServices
		*out = make([]RouteActionWeightedBackendServicesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteActionObservation.
func (in *RouteActionObservation) DeepCopy() *RouteActionObservation {
	if in == nil {
		return nil
	}
	out := new(RouteActionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteActionParameters) DeepCopyInto(out *RouteActionParameters) {
	*out = *in
	if in.CorsPolicy != nil {
		in, out := &in.CorsPolicy, &out.CorsPolicy
		*out = make([]RouteActionCorsPolicyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.FaultInjectionPolicy != nil {
		in, out := &in.FaultInjectionPolicy, &out.FaultInjectionPolicy
		*out = make([]RouteActionFaultInjectionPolicyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RequestMirrorPolicy != nil {
		in, out := &in.RequestMirrorPolicy, &out.RequestMirrorPolicy
		*out = make([]RouteActionRequestMirrorPolicyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RetryPolicy != nil {
		in, out := &in.RetryPolicy, &out.RetryPolicy
		*out = make([]RouteActionRetryPolicyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Timeout != nil {
		in, out := &in.Timeout, &out.Timeout
		*out = make([]RouteActionTimeoutParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.URLRewrite != nil {
		in, out := &in.URLRewrite, &out.URLRewrite
		*out = make([]RouteActionURLRewriteParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.WeightedBackendServices != nil {
		in, out := &in.WeightedBackendServices, &out.WeightedBackendServices
		*out = make([]RouteActionWeightedBackendServicesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteActionParameters.
func (in *RouteActionParameters) DeepCopy() *RouteActionParameters {
	if in == nil {
		return nil
	}
	out := new(RouteActionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteActionRequestMirrorPolicyInitParameters) DeepCopyInto(out *RouteActionRequestMirrorPolicyInitParameters) {
	*out = *in
	if in.BackendService != nil {
		in, out := &in.BackendService, &out.BackendService
		*out = new(string)
		**out = **in
	}
	if in.BackendServiceRef != nil {
		in, out := &in.BackendServiceRef, &out.BackendServiceRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.BackendServiceSelector != nil {
		in, out := &in.BackendServiceSelector, &out.BackendServiceSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteActionRequestMirrorPolicyInitParameters.
func (in *RouteActionRequestMirrorPolicyInitParameters) DeepCopy() *RouteActionRequestMirrorPolicyInitParameters {
	if in == nil {
		return nil
	}
	out := new(RouteActionRequestMirrorPolicyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteActionRequestMirrorPolicyObservation) DeepCopyInto(out *RouteActionRequestMirrorPolicyObservation) {
	*out = *in
	if in.BackendService != nil {
		in, out := &in.BackendService, &out.BackendService
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteActionRequestMirrorPolicyObservation.
func (in *RouteActionRequestMirrorPolicyObservation) DeepCopy() *RouteActionRequestMirrorPolicyObservation {
	if in == nil {
		return nil
	}
	out := new(RouteActionRequestMirrorPolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteActionRequestMirrorPolicyParameters) DeepCopyInto(out *RouteActionRequestMirrorPolicyParameters) {
	*out = *in
	if in.BackendService != nil {
		in, out := &in.BackendService, &out.BackendService
		*out = new(string)
		**out = **in
	}
	if in.BackendServiceRef != nil {
		in, out := &in.BackendServiceRef, &out.BackendServiceRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.BackendServiceSelector != nil {
		in, out := &in.BackendServiceSelector, &out.BackendServiceSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteActionRequestMirrorPolicyParameters.
func (in *RouteActionRequestMirrorPolicyParameters) DeepCopy() *RouteActionRequestMirrorPolicyParameters {
	if in == nil {
		return nil
	}
	out := new(RouteActionRequestMirrorPolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteActionRetryPolicyInitParameters) DeepCopyInto(out *RouteActionRetryPolicyInitParameters) {
	*out = *in
	if in.NumRetries != nil {
		in, out := &in.NumRetries, &out.NumRetries
		*out = new(float64)
		**out = **in
	}
	if in.PerTryTimeout != nil {
		in, out := &in.PerTryTimeout, &out.PerTryTimeout
		*out = make([]RetryPolicyPerTryTimeoutInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RetryConditions != nil {
		in, out := &in.RetryConditions, &out.RetryConditions
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteActionRetryPolicyInitParameters.
func (in *RouteActionRetryPolicyInitParameters) DeepCopy() *RouteActionRetryPolicyInitParameters {
	if in == nil {
		return nil
	}
	out := new(RouteActionRetryPolicyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteActionRetryPolicyObservation) DeepCopyInto(out *RouteActionRetryPolicyObservation) {
	*out = *in
	if in.NumRetries != nil {
		in, out := &in.NumRetries, &out.NumRetries
		*out = new(float64)
		**out = **in
	}
	if in.PerTryTimeout != nil {
		in, out := &in.PerTryTimeout, &out.PerTryTimeout
		*out = make([]RetryPolicyPerTryTimeoutObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RetryConditions != nil {
		in, out := &in.RetryConditions, &out.RetryConditions
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteActionRetryPolicyObservation.
func (in *RouteActionRetryPolicyObservation) DeepCopy() *RouteActionRetryPolicyObservation {
	if in == nil {
		return nil
	}
	out := new(RouteActionRetryPolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteActionRetryPolicyParameters) DeepCopyInto(out *RouteActionRetryPolicyParameters) {
	*out = *in
	if in.NumRetries != nil {
		in, out := &in.NumRetries, &out.NumRetries
		*out = new(float64)
		**out = **in
	}
	if in.PerTryTimeout != nil {
		in, out := &in.PerTryTimeout, &out.PerTryTimeout
		*out = make([]RetryPolicyPerTryTimeoutParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RetryConditions != nil {
		in, out := &in.RetryConditions, &out.RetryConditions
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteActionRetryPolicyParameters.
func (in *RouteActionRetryPolicyParameters) DeepCopy() *RouteActionRetryPolicyParameters {
	if in == nil {
		return nil
	}
	out := new(RouteActionRetryPolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteActionRetryPolicyPerTryTimeoutInitParameters) DeepCopyInto(out *RouteActionRetryPolicyPerTryTimeoutInitParameters) {
	*out = *in
	if in.Nanos != nil {
		in, out := &in.Nanos, &out.Nanos
		*out = new(float64)
		**out = **in
	}
	if in.Seconds != nil {
		in, out := &in.Seconds, &out.Seconds
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteActionRetryPolicyPerTryTimeoutInitParameters.
func (in *RouteActionRetryPolicyPerTryTimeoutInitParameters) DeepCopy() *RouteActionRetryPolicyPerTryTimeoutInitParameters {
	if in == nil {
		return nil
	}
	out := new(RouteActionRetryPolicyPerTryTimeoutInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteActionRetryPolicyPerTryTimeoutObservation) DeepCopyInto(out *RouteActionRetryPolicyPerTryTimeoutObservation) {
	*out = *in
	if in.Nanos != nil {
		in, out := &in.Nanos, &out.Nanos
		*out = new(float64)
		**out = **in
	}
	if in.Seconds != nil {
		in, out := &in.Seconds, &out.Seconds
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteActionRetryPolicyPerTryTimeoutObservation.
func (in *RouteActionRetryPolicyPerTryTimeoutObservation) DeepCopy() *RouteActionRetryPolicyPerTryTimeoutObservation {
	if in == nil {
		return nil
	}
	out := new(RouteActionRetryPolicyPerTryTimeoutObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteActionRetryPolicyPerTryTimeoutParameters) DeepCopyInto(out *RouteActionRetryPolicyPerTryTimeoutParameters) {
	*out = *in
	if in.Nanos != nil {
		in, out := &in.Nanos, &out.Nanos
		*out = new(float64)
		**out = **in
	}
	if in.Seconds != nil {
		in, out := &in.Seconds, &out.Seconds
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteActionRetryPolicyPerTryTimeoutParameters.
func (in *RouteActionRetryPolicyPerTryTimeoutParameters) DeepCopy() *RouteActionRetryPolicyPerTryTimeoutParameters {
	if in == nil {
		return nil
	}
	out := new(RouteActionRetryPolicyPerTryTimeoutParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteActionTimeoutInitParameters) DeepCopyInto(out *RouteActionTimeoutInitParameters) {
	*out = *in
	if in.Nanos != nil {
		in, out := &in.Nanos, &out.Nanos
		*out = new(float64)
		**out = **in
	}
	if in.Seconds != nil {
		in, out := &in.Seconds, &out.Seconds
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteActionTimeoutInitParameters.
func (in *RouteActionTimeoutInitParameters) DeepCopy() *RouteActionTimeoutInitParameters {
	if in == nil {
		return nil
	}
	out := new(RouteActionTimeoutInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteActionTimeoutObservation) DeepCopyInto(out *RouteActionTimeoutObservation) {
	*out = *in
	if in.Nanos != nil {
		in, out := &in.Nanos, &out.Nanos
		*out = new(float64)
		**out = **in
	}
	if in.Seconds != nil {
		in, out := &in.Seconds, &out.Seconds
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteActionTimeoutObservation.
func (in *RouteActionTimeoutObservation) DeepCopy() *RouteActionTimeoutObservation {
	if in == nil {
		return nil
	}
	out := new(RouteActionTimeoutObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteActionTimeoutParameters) DeepCopyInto(out *RouteActionTimeoutParameters) {
	*out = *in
	if in.Nanos != nil {
		in, out := &in.Nanos, &out.Nanos
		*out = new(float64)
		**out = **in
	}
	if in.Seconds != nil {
		in, out := &in.Seconds, &out.Seconds
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteActionTimeoutParameters.
func (in *RouteActionTimeoutParameters) DeepCopy() *RouteActionTimeoutParameters {
	if in == nil {
		return nil
	}
	out := new(RouteActionTimeoutParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteActionURLRewriteInitParameters) DeepCopyInto(out *RouteActionURLRewriteInitParameters) {
	*out = *in
	if in.HostRewrite != nil {
		in, out := &in.HostRewrite, &out.HostRewrite
		*out = new(string)
		**out = **in
	}
	if in.PathPrefixRewrite != nil {
		in, out := &in.PathPrefixRewrite, &out.PathPrefixRewrite
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteActionURLRewriteInitParameters.
func (in *RouteActionURLRewriteInitParameters) DeepCopy() *RouteActionURLRewriteInitParameters {
	if in == nil {
		return nil
	}
	out := new(RouteActionURLRewriteInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteActionURLRewriteObservation) DeepCopyInto(out *RouteActionURLRewriteObservation) {
	*out = *in
	if in.HostRewrite != nil {
		in, out := &in.HostRewrite, &out.HostRewrite
		*out = new(string)
		**out = **in
	}
	if in.PathPrefixRewrite != nil {
		in, out := &in.PathPrefixRewrite, &out.PathPrefixRewrite
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteActionURLRewriteObservation.
func (in *RouteActionURLRewriteObservation) DeepCopy() *RouteActionURLRewriteObservation {
	if in == nil {
		return nil
	}
	out := new(RouteActionURLRewriteObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteActionURLRewriteParameters) DeepCopyInto(out *RouteActionURLRewriteParameters) {
	*out = *in
	if in.HostRewrite != nil {
		in, out := &in.HostRewrite, &out.HostRewrite
		*out = new(string)
		**out = **in
	}
	if in.PathPrefixRewrite != nil {
		in, out := &in.PathPrefixRewrite, &out.PathPrefixRewrite
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteActionURLRewriteParameters.
func (in *RouteActionURLRewriteParameters) DeepCopy() *RouteActionURLRewriteParameters {
	if in == nil {
		return nil
	}
	out := new(RouteActionURLRewriteParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteActionWeightedBackendServicesHeaderActionInitParameters) DeepCopyInto(out *RouteActionWeightedBackendServicesHeaderActionInitParameters) {
	*out = *in
	if in.RequestHeadersToAdd != nil {
		in, out := &in.RequestHeadersToAdd, &out.RequestHeadersToAdd
		*out = make([]WeightedBackendServicesHeaderActionRequestHeadersToAddInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RequestHeadersToRemove != nil {
		in, out := &in.RequestHeadersToRemove, &out.RequestHeadersToRemove
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ResponseHeadersToAdd != nil {
		in, out := &in.ResponseHeadersToAdd, &out.ResponseHeadersToAdd
		*out = make([]WeightedBackendServicesHeaderActionResponseHeadersToAddInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ResponseHeadersToRemove != nil {
		in, out := &in.ResponseHeadersToRemove, &out.ResponseHeadersToRemove
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteActionWeightedBackendServicesHeaderActionInitParameters.
func (in *RouteActionWeightedBackendServicesHeaderActionInitParameters) DeepCopy() *RouteActionWeightedBackendServicesHeaderActionInitParameters {
	if in == nil {
		return nil
	}
	out := new(RouteActionWeightedBackendServicesHeaderActionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteActionWeightedBackendServicesHeaderActionObservation) DeepCopyInto(out *RouteActionWeightedBackendServicesHeaderActionObservation) {
	*out = *in
	if in.RequestHeadersToAdd != nil {
		in, out := &in.RequestHeadersToAdd, &out.RequestHeadersToAdd
		*out = make([]WeightedBackendServicesHeaderActionRequestHeadersToAddObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RequestHeadersToRemove != nil {
		in, out := &in.RequestHeadersToRemove, &out.RequestHeadersToRemove
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ResponseHeadersToAdd != nil {
		in, out := &in.ResponseHeadersToAdd, &out.ResponseHeadersToAdd
		*out = make([]WeightedBackendServicesHeaderActionResponseHeadersToAddObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ResponseHeadersToRemove != nil {
		in, out := &in.ResponseHeadersToRemove, &out.ResponseHeadersToRemove
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteActionWeightedBackendServicesHeaderActionObservation.
func (in *RouteActionWeightedBackendServicesHeaderActionObservation) DeepCopy() *RouteActionWeightedBackendServicesHeaderActionObservation {
	if in == nil {
		return nil
	}
	out := new(RouteActionWeightedBackendServicesHeaderActionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteActionWeightedBackendServicesHeaderActionParameters) DeepCopyInto(out *RouteActionWeightedBackendServicesHeaderActionParameters) {
	*out = *in
	if in.RequestHeadersToAdd != nil {
		in, out := &in.RequestHeadersToAdd, &out.RequestHeadersToAdd
		*out = make([]WeightedBackendServicesHeaderActionRequestHeadersToAddParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RequestHeadersToRemove != nil {
		in, out := &in.RequestHeadersToRemove, &out.RequestHeadersToRemove
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ResponseHeadersToAdd != nil {
		in, out := &in.ResponseHeadersToAdd, &out.ResponseHeadersToAdd
		*out = make([]WeightedBackendServicesHeaderActionResponseHeadersToAddParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ResponseHeadersToRemove != nil {
		in, out := &in.ResponseHeadersToRemove, &out.ResponseHeadersToRemove
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteActionWeightedBackendServicesHeaderActionParameters.
func (in *RouteActionWeightedBackendServicesHeaderActionParameters) DeepCopy() *RouteActionWeightedBackendServicesHeaderActionParameters {
	if in == nil {
		return nil
	}
	out := new(RouteActionWeightedBackendServicesHeaderActionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteActionWeightedBackendServicesHeaderActionRequestHeadersToAddInitParameters) DeepCopyInto(out *RouteActionWeightedBackendServicesHeaderActionRequestHeadersToAddInitParameters) {
	*out = *in
	if in.HeaderName != nil {
		in, out := &in.HeaderName, &out.HeaderName
		*out = new(string)
		**out = **in
	}
	if in.HeaderValue != nil {
		in, out := &in.HeaderValue, &out.HeaderValue
		*out = new(string)
		**out = **in
	}
	if in.Replace != nil {
		in, out := &in.Replace, &out.Replace
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteActionWeightedBackendServicesHeaderActionRequestHeadersToAddInitParameters.
func (in *RouteActionWeightedBackendServicesHeaderActionRequestHeadersToAddInitParameters) DeepCopy() *RouteActionWeightedBackendServicesHeaderActionRequestHeadersToAddInitParameters {
	if in == nil {
		return nil
	}
	out := new(RouteActionWeightedBackendServicesHeaderActionRequestHeadersToAddInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteActionWeightedBackendServicesHeaderActionRequestHeadersToAddObservation) DeepCopyInto(out *RouteActionWeightedBackendServicesHeaderActionRequestHeadersToAddObservation) {
	*out = *in
	if in.HeaderName != nil {
		in, out := &in.HeaderName, &out.HeaderName
		*out = new(string)
		**out = **in
	}
	if in.HeaderValue != nil {
		in, out := &in.HeaderValue, &out.HeaderValue
		*out = new(string)
		**out = **in
	}
	if in.Replace != nil {
		in, out := &in.Replace, &out.Replace
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteActionWeightedBackendServicesHeaderActionRequestHeadersToAddObservation.
func (in *RouteActionWeightedBackendServicesHeaderActionRequestHeadersToAddObservation) DeepCopy() *RouteActionWeightedBackendServicesHeaderActionRequestHeadersToAddObservation {
	if in == nil {
		return nil
	}
	out := new(RouteActionWeightedBackendServicesHeaderActionRequestHeadersToAddObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteActionWeightedBackendServicesHeaderActionRequestHeadersToAddParameters) DeepCopyInto(out *RouteActionWeightedBackendServicesHeaderActionRequestHeadersToAddParameters) {
	*out = *in
	if in.HeaderName != nil {
		in, out := &in.HeaderName, &out.HeaderName
		*out = new(string)
		**out = **in
	}
	if in.HeaderValue != nil {
		in, out := &in.HeaderValue, &out.HeaderValue
		*out = new(string)
		**out = **in
	}
	if in.Replace != nil {
		in, out := &in.Replace, &out.Replace
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteActionWeightedBackendServicesHeaderActionRequestHeadersToAddParameters.
func (in *RouteActionWeightedBackendServicesHeaderActionRequestHeadersToAddParameters) DeepCopy() *RouteActionWeightedBackendServicesHeaderActionRequestHeadersToAddParameters {
	if in == nil {
		return nil
	}
	out := new(RouteActionWeightedBackendServicesHeaderActionRequestHeadersToAddParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteActionWeightedBackendServicesHeaderActionResponseHeadersToAddInitParameters) DeepCopyInto(out *RouteActionWeightedBackendServicesHeaderActionResponseHeadersToAddInitParameters) {
	*out = *in
	if in.HeaderName != nil {
		in, out := &in.HeaderName, &out.HeaderName
		*out = new(string)
		**out = **in
	}
	if in.HeaderValue != nil {
		in, out := &in.HeaderValue, &out.HeaderValue
		*out = new(string)
		**out = **in
	}
	if in.Replace != nil {
		in, out := &in.Replace, &out.Replace
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteActionWeightedBackendServicesHeaderActionResponseHeadersToAddInitParameters.
func (in *RouteActionWeightedBackendServicesHeaderActionResponseHeadersToAddInitParameters) DeepCopy() *RouteActionWeightedBackendServicesHeaderActionResponseHeadersToAddInitParameters {
	if in == nil {
		return nil
	}
	out := new(RouteActionWeightedBackendServicesHeaderActionResponseHeadersToAddInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteActionWeightedBackendServicesHeaderActionResponseHeadersToAddObservation) DeepCopyInto(out *RouteActionWeightedBackendServicesHeaderActionResponseHeadersToAddObservation) {
	*out = *in
	if in.HeaderName != nil {
		in, out := &in.HeaderName, &out.HeaderName
		*out = new(string)
		**out = **in
	}
	if in.HeaderValue != nil {
		in, out := &in.HeaderValue, &out.HeaderValue
		*out = new(string)
		**out = **in
	}
	if in.Replace != nil {
		in, out := &in.Replace, &out.Replace
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteActionWeightedBackendServicesHeaderActionResponseHeadersToAddObservation.
func (in *RouteActionWeightedBackendServicesHeaderActionResponseHeadersToAddObservation) DeepCopy() *RouteActionWeightedBackendServicesHeaderActionResponseHeadersToAddObservation {
	if in == nil {
		return nil
	}
	out := new(RouteActionWeightedBackendServicesHeaderActionResponseHeadersToAddObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteActionWeightedBackendServicesHeaderActionResponseHeadersToAddParameters) DeepCopyInto(out *RouteActionWeightedBackendServicesHeaderActionResponseHeadersToAddParameters) {
	*out = *in
	if in.HeaderName != nil {
		in, out := &in.HeaderName, &out.HeaderName
		*out = new(string)
		**out = **in
	}
	if in.HeaderValue != nil {
		in, out := &in.HeaderValue, &out.HeaderValue
		*out = new(string)
		**out = **in
	}
	if in.Replace != nil {
		in, out := &in.Replace, &out.Replace
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteActionWeightedBackendServicesHeaderActionResponseHeadersToAddParameters.
func (in *RouteActionWeightedBackendServicesHeaderActionResponseHeadersToAddParameters) DeepCopy() *RouteActionWeightedBackendServicesHeaderActionResponseHeadersToAddParameters {
	if in == nil {
		return nil
	}
	out := new(RouteActionWeightedBackendServicesHeaderActionResponseHeadersToAddParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteActionWeightedBackendServicesInitParameters) DeepCopyInto(out *RouteActionWeightedBackendServicesInitParameters) {
	*out = *in
	if in.BackendService != nil {
		in, out := &in.BackendService, &out.BackendService
		*out = new(string)
		**out = **in
	}
	if in.BackendServiceRef != nil {
		in, out := &in.BackendServiceRef, &out.BackendServiceRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.BackendServiceSelector != nil {
		in, out := &in.BackendServiceSelector, &out.BackendServiceSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.HeaderAction != nil {
		in, out := &in.HeaderAction, &out.HeaderAction
		*out = make([]WeightedBackendServicesHeaderActionInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Weight != nil {
		in, out := &in.Weight, &out.Weight
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteActionWeightedBackendServicesInitParameters.
func (in *RouteActionWeightedBackendServicesInitParameters) DeepCopy() *RouteActionWeightedBackendServicesInitParameters {
	if in == nil {
		return nil
	}
	out := new(RouteActionWeightedBackendServicesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteActionWeightedBackendServicesObservation) DeepCopyInto(out *RouteActionWeightedBackendServicesObservation) {
	*out = *in
	if in.BackendService != nil {
		in, out := &in.BackendService, &out.BackendService
		*out = new(string)
		**out = **in
	}
	if in.HeaderAction != nil {
		in, out := &in.HeaderAction, &out.HeaderAction
		*out = make([]WeightedBackendServicesHeaderActionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Weight != nil {
		in, out := &in.Weight, &out.Weight
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteActionWeightedBackendServicesObservation.
func (in *RouteActionWeightedBackendServicesObservation) DeepCopy() *RouteActionWeightedBackendServicesObservation {
	if in == nil {
		return nil
	}
	out := new(RouteActionWeightedBackendServicesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteActionWeightedBackendServicesParameters) DeepCopyInto(out *RouteActionWeightedBackendServicesParameters) {
	*out = *in
	if in.BackendService != nil {
		in, out := &in.BackendService, &out.BackendService
		*out = new(string)
		**out = **in
	}
	if in.BackendServiceRef != nil {
		in, out := &in.BackendServiceRef, &out.BackendServiceRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.BackendServiceSelector != nil {
		in, out := &in.BackendServiceSelector, &out.BackendServiceSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.HeaderAction != nil {
		in, out := &in.HeaderAction, &out.HeaderAction
		*out = make([]WeightedBackendServicesHeaderActionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Weight != nil {
		in, out := &in.Weight, &out.Weight
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteActionWeightedBackendServicesParameters.
func (in *RouteActionWeightedBackendServicesParameters) DeepCopy() *RouteActionWeightedBackendServicesParameters {
	if in == nil {
		return nil
	}
	out := new(RouteActionWeightedBackendServicesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteInitParameters) DeepCopyInto(out *RouteInitParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DestRange != nil {
		in, out := &in.DestRange, &out.DestRange
		*out = new(string)
		**out = **in
	}
	if in.Network != nil {
		in, out := &in.Network, &out.Network
		*out = new(string)
		**out = **in
	}
	if in.NetworkRef != nil {
		in, out := &in.NetworkRef, &out.NetworkRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.NetworkSelector != nil {
		in, out := &in.NetworkSelector, &out.NetworkSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.NextHopGateway != nil {
		in, out := &in.NextHopGateway, &out.NextHopGateway
		*out = new(string)
		**out = **in
	}
	if in.NextHopIP != nil {
		in, out := &in.NextHopIP, &out.NextHopIP
		*out = new(string)
		**out = **in
	}
	if in.NextHopIlb != nil {
		in, out := &in.NextHopIlb, &out.NextHopIlb
		*out = new(string)
		**out = **in
	}
	if in.NextHopIlbRef != nil {
		in, out := &in.NextHopIlbRef, &out.NextHopIlbRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.NextHopIlbSelector != nil {
		in, out := &in.NextHopIlbSelector, &out.NextHopIlbSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.NextHopInstance != nil {
		in, out := &in.NextHopInstance, &out.NextHopInstance
		*out = new(string)
		**out = **in
	}
	if in.NextHopInstanceZone != nil {
		in, out := &in.NextHopInstanceZone, &out.NextHopInstanceZone
		*out = new(string)
		**out = **in
	}
	if in.NextHopVPNTunnel != nil {
		in, out := &in.NextHopVPNTunnel, &out.NextHopVPNTunnel
		*out = new(string)
		**out = **in
	}
	if in.NextHopVPNTunnelRef != nil {
		in, out := &in.NextHopVPNTunnelRef, &out.NextHopVPNTunnelRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.NextHopVPNTunnelSelector != nil {
		in, out := &in.NextHopVPNTunnelSelector, &out.NextHopVPNTunnelSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Priority != nil {
		in, out := &in.Priority, &out.Priority
		*out = new(float64)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteInitParameters.
func (in *RouteInitParameters) DeepCopy() *RouteInitParameters {
	if in == nil {
		return nil
	}
	out := new(RouteInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteList) DeepCopyInto(out *RouteList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Route, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteList.
func (in *RouteList) DeepCopy() *RouteList {
	if in == nil {
		return nil
	}
	out := new(RouteList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RouteList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteObservation) DeepCopyInto(out *RouteObservation) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DestRange != nil {
		in, out := &in.DestRange, &out.DestRange
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Network != nil {
		in, out := &in.Network, &out.Network
		*out = new(string)
		**out = **in
	}
	if in.NextHopGateway != nil {
		in, out := &in.NextHopGateway, &out.NextHopGateway
		*out = new(string)
		**out = **in
	}
	if in.NextHopIP != nil {
		in, out := &in.NextHopIP, &out.NextHopIP
		*out = new(string)
		**out = **in
	}
	if in.NextHopIlb != nil {
		in, out := &in.NextHopIlb, &out.NextHopIlb
		*out = new(string)
		**out = **in
	}
	if in.NextHopInstance != nil {
		in, out := &in.NextHopInstance, &out.NextHopInstance
		*out = new(string)
		**out = **in
	}
	if in.NextHopInstanceZone != nil {
		in, out := &in.NextHopInstanceZone, &out.NextHopInstanceZone
		*out = new(string)
		**out = **in
	}
	if in.NextHopNetwork != nil {
		in, out := &in.NextHopNetwork, &out.NextHopNetwork
		*out = new(string)
		**out = **in
	}
	if in.NextHopVPNTunnel != nil {
		in, out := &in.NextHopVPNTunnel, &out.NextHopVPNTunnel
		*out = new(string)
		**out = **in
	}
	if in.Priority != nil {
		in, out := &in.Priority, &out.Priority
		*out = new(float64)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.SelfLink != nil {
		in, out := &in.SelfLink, &out.SelfLink
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteObservation.
func (in *RouteObservation) DeepCopy() *RouteObservation {
	if in == nil {
		return nil
	}
	out := new(RouteObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteParameters) DeepCopyInto(out *RouteParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DestRange != nil {
		in, out := &in.DestRange, &out.DestRange
		*out = new(string)
		**out = **in
	}
	if in.Network != nil {
		in, out := &in.Network, &out.Network
		*out = new(string)
		**out = **in
	}
	if in.NetworkRef != nil {
		in, out := &in.NetworkRef, &out.NetworkRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.NetworkSelector != nil {
		in, out := &in.NetworkSelector, &out.NetworkSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.NextHopGateway != nil {
		in, out := &in.NextHopGateway, &out.NextHopGateway
		*out = new(string)
		**out = **in
	}
	if in.NextHopIP != nil {
		in, out := &in.NextHopIP, &out.NextHopIP
		*out = new(string)
		**out = **in
	}
	if in.NextHopIlb != nil {
		in, out := &in.NextHopIlb, &out.NextHopIlb
		*out = new(string)
		**out = **in
	}
	if in.NextHopIlbRef != nil {
		in, out := &in.NextHopIlbRef, &out.NextHopIlbRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.NextHopIlbSelector != nil {
		in, out := &in.NextHopIlbSelector, &out.NextHopIlbSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.NextHopInstance != nil {
		in, out := &in.NextHopInstance, &out.NextHopInstance
		*out = new(string)
		**out = **in
	}
	if in.NextHopInstanceZone != nil {
		in, out := &in.NextHopInstanceZone, &out.NextHopInstanceZone
		*out = new(string)
		**out = **in
	}
	if in.NextHopVPNTunnel != nil {
		in, out := &in.NextHopVPNTunnel, &out.NextHopVPNTunnel
		*out = new(string)
		**out = **in
	}
	if in.NextHopVPNTunnelRef != nil {
		in, out := &in.NextHopVPNTunnelRef, &out.NextHopVPNTunnelRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.NextHopVPNTunnelSelector != nil {
		in, out := &in.NextHopVPNTunnelSelector, &out.NextHopVPNTunnelSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Priority != nil {
		in, out := &in.Priority, &out.Priority
		*out = new(float64)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteParameters.
func (in *RouteParameters) DeepCopy() *RouteParameters {
	if in == nil {
		return nil
	}
	out := new(RouteParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteRulesHeaderActionInitParameters) DeepCopyInto(out *RouteRulesHeaderActionInitParameters) {
	*out = *in
	if in.RequestHeadersToAdd != nil {
		in, out := &in.RequestHeadersToAdd, &out.RequestHeadersToAdd
		*out = make([]RouteRulesHeaderActionRequestHeadersToAddInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RequestHeadersToRemove != nil {
		in, out := &in.RequestHeadersToRemove, &out.RequestHeadersToRemove
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ResponseHeadersToAdd != nil {
		in, out := &in.ResponseHeadersToAdd, &out.ResponseHeadersToAdd
		*out = make([]RouteRulesHeaderActionResponseHeadersToAddInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ResponseHeadersToRemove != nil {
		in, out := &in.ResponseHeadersToRemove, &out.ResponseHeadersToRemove
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteRulesHeaderActionInitParameters.
func (in *RouteRulesHeaderActionInitParameters) DeepCopy() *RouteRulesHeaderActionInitParameters {
	if in == nil {
		return nil
	}
	out := new(RouteRulesHeaderActionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteRulesHeaderActionObservation) DeepCopyInto(out *RouteRulesHeaderActionObservation) {
	*out = *in
	if in.RequestHeadersToAdd != nil {
		in, out := &in.RequestHeadersToAdd, &out.RequestHeadersToAdd
		*out = make([]RouteRulesHeaderActionRequestHeadersToAddObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RequestHeadersToRemove != nil {
		in, out := &in.RequestHeadersToRemove, &out.RequestHeadersToRemove
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ResponseHeadersToAdd != nil {
		in, out := &in.ResponseHeadersToAdd, &out.ResponseHeadersToAdd
		*out = make([]RouteRulesHeaderActionResponseHeadersToAddObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ResponseHeadersToRemove != nil {
		in, out := &in.ResponseHeadersToRemove, &out.ResponseHeadersToRemove
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteRulesHeaderActionObservation.
func (in *RouteRulesHeaderActionObservation) DeepCopy() *RouteRulesHeaderActionObservation {
	if in == nil {
		return nil
	}
	out := new(RouteRulesHeaderActionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteRulesHeaderActionParameters) DeepCopyInto(out *RouteRulesHeaderActionParameters) {
	*out = *in
	if in.RequestHeadersToAdd != nil {
		in, out := &in.RequestHeadersToAdd, &out.RequestHeadersToAdd
		*out = make([]RouteRulesHeaderActionRequestHeadersToAddParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RequestHeadersToRemove != nil {
		in, out := &in.RequestHeadersToRemove, &out.RequestHeadersToRemove
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ResponseHeadersToAdd != nil {
		in, out := &in.ResponseHeadersToAdd, &out.ResponseHeadersToAdd
		*out = make([]RouteRulesHeaderActionResponseHeadersToAddParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ResponseHeadersToRemove != nil {
		in, out := &in.ResponseHeadersToRemove, &out.ResponseHeadersToRemove
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteRulesHeaderActionParameters.
func (in *RouteRulesHeaderActionParameters) DeepCopy() *RouteRulesHeaderActionParameters {
	if in == nil {
		return nil
	}
	out := new(RouteRulesHeaderActionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteRulesHeaderActionRequestHeadersToAddInitParameters) DeepCopyInto(out *RouteRulesHeaderActionRequestHeadersToAddInitParameters) {
	*out = *in
	if in.HeaderName != nil {
		in, out := &in.HeaderName, &out.HeaderName
		*out = new(string)
		**out = **in
	}
	if in.HeaderValue != nil {
		in, out := &in.HeaderValue, &out.HeaderValue
		*out = new(string)
		**out = **in
	}
	if in.Replace != nil {
		in, out := &in.Replace, &out.Replace
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteRulesHeaderActionRequestHeadersToAddInitParameters.
func (in *RouteRulesHeaderActionRequestHeadersToAddInitParameters) DeepCopy() *RouteRulesHeaderActionRequestHeadersToAddInitParameters {
	if in == nil {
		return nil
	}
	out := new(RouteRulesHeaderActionRequestHeadersToAddInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteRulesHeaderActionRequestHeadersToAddObservation) DeepCopyInto(out *RouteRulesHeaderActionRequestHeadersToAddObservation) {
	*out = *in
	if in.HeaderName != nil {
		in, out := &in.HeaderName, &out.HeaderName
		*out = new(string)
		**out = **in
	}
	if in.HeaderValue != nil {
		in, out := &in.HeaderValue, &out.HeaderValue
		*out = new(string)
		**out = **in
	}
	if in.Replace != nil {
		in, out := &in.Replace, &out.Replace
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteRulesHeaderActionRequestHeadersToAddObservation.
func (in *RouteRulesHeaderActionRequestHeadersToAddObservation) DeepCopy() *RouteRulesHeaderActionRequestHeadersToAddObservation {
	if in == nil {
		return nil
	}
	out := new(RouteRulesHeaderActionRequestHeadersToAddObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteRulesHeaderActionRequestHeadersToAddParameters) DeepCopyInto(out *RouteRulesHeaderActionRequestHeadersToAddParameters) {
	*out = *in
	if in.HeaderName != nil {
		in, out := &in.HeaderName, &out.HeaderName
		*out = new(string)
		**out = **in
	}
	if in.HeaderValue != nil {
		in, out := &in.HeaderValue, &out.HeaderValue
		*out = new(string)
		**out = **in
	}
	if in.Replace != nil {
		in, out := &in.Replace, &out.Replace
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteRulesHeaderActionRequestHeadersToAddParameters.
func (in *RouteRulesHeaderActionRequestHeadersToAddParameters) DeepCopy() *RouteRulesHeaderActionRequestHeadersToAddParameters {
	if in == nil {
		return nil
	}
	out := new(RouteRulesHeaderActionRequestHeadersToAddParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteRulesHeaderActionResponseHeadersToAddInitParameters) DeepCopyInto(out *RouteRulesHeaderActionResponseHeadersToAddInitParameters) {
	*out = *in
	if in.HeaderName != nil {
		in, out := &in.HeaderName, &out.HeaderName
		*out = new(string)
		**out = **in
	}
	if in.HeaderValue != nil {
		in, out := &in.HeaderValue, &out.HeaderValue
		*out = new(string)
		**out = **in
	}
	if in.Replace != nil {
		in, out := &in.Replace, &out.Replace
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteRulesHeaderActionResponseHeadersToAddInitParameters.
func (in *RouteRulesHeaderActionResponseHeadersToAddInitParameters) DeepCopy() *RouteRulesHeaderActionResponseHeadersToAddInitParameters {
	if in == nil {
		return nil
	}
	out := new(RouteRulesHeaderActionResponseHeadersToAddInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteRulesHeaderActionResponseHeadersToAddObservation) DeepCopyInto(out *RouteRulesHeaderActionResponseHeadersToAddObservation) {
	*out = *in
	if in.HeaderName != nil {
		in, out := &in.HeaderName, &out.HeaderName
		*out = new(string)
		**out = **in
	}
	if in.HeaderValue != nil {
		in, out := &in.HeaderValue, &out.HeaderValue
		*out = new(string)
		**out = **in
	}
	if in.Replace != nil {
		in, out := &in.Replace, &out.Replace
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteRulesHeaderActionResponseHeadersToAddObservation.
func (in *RouteRulesHeaderActionResponseHeadersToAddObservation) DeepCopy() *RouteRulesHeaderActionResponseHeadersToAddObservation {
	if in == nil {
		return nil
	}
	out := new(RouteRulesHeaderActionResponseHeadersToAddObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteRulesHeaderActionResponseHeadersToAddParameters) DeepCopyInto(out *RouteRulesHeaderActionResponseHeadersToAddParameters) {
	*out = *in
	if in.HeaderName != nil {
		in, out := &in.HeaderName, &out.HeaderName
		*out = new(string)
		**out = **in
	}
	if in.HeaderValue != nil {
		in, out := &in.HeaderValue, &out.HeaderValue
		*out = new(string)
		**out = **in
	}
	if in.Replace != nil {
		in, out := &in.Replace, &out.Replace
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteRulesHeaderActionResponseHeadersToAddParameters.
func (in *RouteRulesHeaderActionResponseHeadersToAddParameters) DeepCopy() *RouteRulesHeaderActionResponseHeadersToAddParameters {
	if in == nil {
		return nil
	}
	out := new(RouteRulesHeaderActionResponseHeadersToAddParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteRulesInitParameters) DeepCopyInto(out *RouteRulesInitParameters) {
	*out = *in
	if in.HeaderAction != nil {
		in, out := &in.HeaderAction, &out.HeaderAction
		*out = make([]RouteRulesHeaderActionInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MatchRules != nil {
		in, out := &in.MatchRules, &out.MatchRules
		*out = make([]MatchRulesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Priority != nil {
		in, out := &in.Priority, &out.Priority
		*out = new(float64)
		**out = **in
	}
	if in.RouteAction != nil {
		in, out := &in.RouteAction, &out.RouteAction
		*out = make([]RouteRulesRouteActionInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Service != nil {
		in, out := &in.Service, &out.Service
		*out = new(string)
		**out = **in
	}
	if in.ServiceRef != nil {
		in, out := &in.ServiceRef, &out.ServiceRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ServiceSelector != nil {
		in, out := &in.ServiceSelector, &out.ServiceSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.URLRedirect != nil {
		in, out := &in.URLRedirect, &out.URLRedirect
		*out = make([]RouteRulesURLRedirectInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteRulesInitParameters.
func (in *RouteRulesInitParameters) DeepCopy() *RouteRulesInitParameters {
	if in == nil {
		return nil
	}
	out := new(RouteRulesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteRulesMatchRulesInitParameters) DeepCopyInto(out *RouteRulesMatchRulesInitParameters) {
	*out = *in
	if in.FullPathMatch != nil {
		in, out := &in.FullPathMatch, &out.FullPathMatch
		*out = new(string)
		**out = **in
	}
	if in.HeaderMatches != nil {
		in, out := &in.HeaderMatches, &out.HeaderMatches
		*out = make([]MatchRulesHeaderMatchesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IgnoreCase != nil {
		in, out := &in.IgnoreCase, &out.IgnoreCase
		*out = new(bool)
		**out = **in
	}
	if in.MetadataFilters != nil {
		in, out := &in.MetadataFilters, &out.MetadataFilters
		*out = make([]RouteRulesMatchRulesMetadataFiltersInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PathTemplateMatch != nil {
		in, out := &in.PathTemplateMatch, &out.PathTemplateMatch
		*out = new(string)
		**out = **in
	}
	if in.PrefixMatch != nil {
		in, out := &in.PrefixMatch, &out.PrefixMatch
		*out = new(string)
		**out = **in
	}
	if in.QueryParameterMatches != nil {
		in, out := &in.QueryParameterMatches, &out.QueryParameterMatches
		*out = make([]MatchRulesQueryParameterMatchesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RegexMatch != nil {
		in, out := &in.RegexMatch, &out.RegexMatch
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteRulesMatchRulesInitParameters.
func (in *RouteRulesMatchRulesInitParameters) DeepCopy() *RouteRulesMatchRulesInitParameters {
	if in == nil {
		return nil
	}
	out := new(RouteRulesMatchRulesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteRulesMatchRulesMetadataFiltersInitParameters) DeepCopyInto(out *RouteRulesMatchRulesMetadataFiltersInitParameters) {
	*out = *in
	if in.FilterLabels != nil {
		in, out := &in.FilterLabels, &out.FilterLabels
		*out = make([]MatchRulesMetadataFiltersFilterLabelsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.FilterMatchCriteria != nil {
		in, out := &in.FilterMatchCriteria, &out.FilterMatchCriteria
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteRulesMatchRulesMetadataFiltersInitParameters.
func (in *RouteRulesMatchRulesMetadataFiltersInitParameters) DeepCopy() *RouteRulesMatchRulesMetadataFiltersInitParameters {
	if in == nil {
		return nil
	}
	out := new(RouteRulesMatchRulesMetadataFiltersInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteRulesMatchRulesMetadataFiltersObservation) DeepCopyInto(out *RouteRulesMatchRulesMetadataFiltersObservation) {
	*out = *in
	if in.FilterLabels != nil {
		in, out := &in.FilterLabels, &out.FilterLabels
		*out = make([]MatchRulesMetadataFiltersFilterLabelsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.FilterMatchCriteria != nil {
		in, out := &in.FilterMatchCriteria, &out.FilterMatchCriteria
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteRulesMatchRulesMetadataFiltersObservation.
func (in *RouteRulesMatchRulesMetadataFiltersObservation) DeepCopy() *RouteRulesMatchRulesMetadataFiltersObservation {
	if in == nil {
		return nil
	}
	out := new(RouteRulesMatchRulesMetadataFiltersObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteRulesMatchRulesMetadataFiltersParameters) DeepCopyInto(out *RouteRulesMatchRulesMetadataFiltersParameters) {
	*out = *in
	if in.FilterLabels != nil {
		in, out := &in.FilterLabels, &out.FilterLabels
		*out = make([]MatchRulesMetadataFiltersFilterLabelsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.FilterMatchCriteria != nil {
		in, out := &in.FilterMatchCriteria, &out.FilterMatchCriteria
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteRulesMatchRulesMetadataFiltersParameters.
func (in *RouteRulesMatchRulesMetadataFiltersParameters) DeepCopy() *RouteRulesMatchRulesMetadataFiltersParameters {
	if in == nil {
		return nil
	}
	out := new(RouteRulesMatchRulesMetadataFiltersParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteRulesMatchRulesObservation) DeepCopyInto(out *RouteRulesMatchRulesObservation) {
	*out = *in
	if in.FullPathMatch != nil {
		in, out := &in.FullPathMatch, &out.FullPathMatch
		*out = new(string)
		**out = **in
	}
	if in.HeaderMatches != nil {
		in, out := &in.HeaderMatches, &out.HeaderMatches
		*out = make([]MatchRulesHeaderMatchesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IgnoreCase != nil {
		in, out := &in.IgnoreCase, &out.IgnoreCase
		*out = new(bool)
		**out = **in
	}
	if in.MetadataFilters != nil {
		in, out := &in.MetadataFilters, &out.MetadataFilters
		*out = make([]RouteRulesMatchRulesMetadataFiltersObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PathTemplateMatch != nil {
		in, out := &in.PathTemplateMatch, &out.PathTemplateMatch
		*out = new(string)
		**out = **in
	}
	if in.PrefixMatch != nil {
		in, out := &in.PrefixMatch, &out.PrefixMatch
		*out = new(string)
		**out = **in
	}
	if in.QueryParameterMatches != nil {
		in, out := &in.QueryParameterMatches, &out.QueryParameterMatches
		*out = make([]MatchRulesQueryParameterMatchesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RegexMatch != nil {
		in, out := &in.RegexMatch, &out.RegexMatch
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteRulesMatchRulesObservation.
func (in *RouteRulesMatchRulesObservation) DeepCopy() *RouteRulesMatchRulesObservation {
	if in == nil {
		return nil
	}
	out := new(RouteRulesMatchRulesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteRulesMatchRulesParameters) DeepCopyInto(out *RouteRulesMatchRulesParameters) {
	*out = *in
	if in.FullPathMatch != nil {
		in, out := &in.FullPathMatch, &out.FullPathMatch
		*out = new(string)
		**out = **in
	}
	if in.HeaderMatches != nil {
		in, out := &in.HeaderMatches, &out.HeaderMatches
		*out = make([]MatchRulesHeaderMatchesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IgnoreCase != nil {
		in, out := &in.IgnoreCase, &out.IgnoreCase
		*out = new(bool)
		**out = **in
	}
	if in.MetadataFilters != nil {
		in, out := &in.MetadataFilters, &out.MetadataFilters
		*out = make([]RouteRulesMatchRulesMetadataFiltersParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PathTemplateMatch != nil {
		in, out := &in.PathTemplateMatch, &out.PathTemplateMatch
		*out = new(string)
		**out = **in
	}
	if in.PrefixMatch != nil {
		in, out := &in.PrefixMatch, &out.PrefixMatch
		*out = new(string)
		**out = **in
	}
	if in.QueryParameterMatches != nil {
		in, out := &in.QueryParameterMatches, &out.QueryParameterMatches
		*out = make([]MatchRulesQueryParameterMatchesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RegexMatch != nil {
		in, out := &in.RegexMatch, &out.RegexMatch
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteRulesMatchRulesParameters.
func (in *RouteRulesMatchRulesParameters) DeepCopy() *RouteRulesMatchRulesParameters {
	if in == nil {
		return nil
	}
	out := new(RouteRulesMatchRulesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteRulesObservation) DeepCopyInto(out *RouteRulesObservation) {
	*out = *in
	if in.HeaderAction != nil {
		in, out := &in.HeaderAction, &out.HeaderAction
		*out = make([]RouteRulesHeaderActionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MatchRules != nil {
		in, out := &in.MatchRules, &out.MatchRules
		*out = make([]MatchRulesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Priority != nil {
		in, out := &in.Priority, &out.Priority
		*out = new(float64)
		**out = **in
	}
	if in.RouteAction != nil {
		in, out := &in.RouteAction, &out.RouteAction
		*out = make([]RouteRulesRouteActionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Service != nil {
		in, out := &in.Service, &out.Service
		*out = new(string)
		**out = **in
	}
	if in.URLRedirect != nil {
		in, out := &in.URLRedirect, &out.URLRedirect
		*out = make([]RouteRulesURLRedirectObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteRulesObservation.
func (in *RouteRulesObservation) DeepCopy() *RouteRulesObservation {
	if in == nil {
		return nil
	}
	out := new(RouteRulesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteRulesParameters) DeepCopyInto(out *RouteRulesParameters) {
	*out = *in
	if in.HeaderAction != nil {
		in, out := &in.HeaderAction, &out.HeaderAction
		*out = make([]RouteRulesHeaderActionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MatchRules != nil {
		in, out := &in.MatchRules, &out.MatchRules
		*out = make([]MatchRulesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Priority != nil {
		in, out := &in.Priority, &out.Priority
		*out = new(float64)
		**out = **in
	}
	if in.RouteAction != nil {
		in, out := &in.RouteAction, &out.RouteAction
		*out = make([]RouteRulesRouteActionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Service != nil {
		in, out := &in.Service, &out.Service
		*out = new(string)
		**out = **in
	}
	if in.ServiceRef != nil {
		in, out := &in.ServiceRef, &out.ServiceRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ServiceSelector != nil {
		in, out := &in.ServiceSelector, &out.ServiceSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.URLRedirect != nil {
		in, out := &in.URLRedirect, &out.URLRedirect
		*out = make([]RouteRulesURLRedirectParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteRulesParameters.
func (in *RouteRulesParameters) DeepCopy() *RouteRulesParameters {
	if in == nil {
		return nil
	}
	out := new(RouteRulesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteRulesRouteActionCorsPolicyInitParameters) DeepCopyInto(out *RouteRulesRouteActionCorsPolicyInitParameters) {
	*out = *in
	if in.AllowCredentials != nil {
		in, out := &in.AllowCredentials, &out.AllowCredentials
		*out = new(bool)
		**out = **in
	}
	if in.AllowHeaders != nil {
		in, out := &in.AllowHeaders, &out.AllowHeaders
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AllowMethods != nil {
		in, out := &in.AllowMethods, &out.AllowMethods
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AllowOriginRegexes != nil {
		in, out := &in.AllowOriginRegexes, &out.AllowOriginRegexes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AllowOrigins != nil {
		in, out := &in.AllowOrigins, &out.AllowOrigins
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Disabled != nil {
		in, out := &in.Disabled, &out.Disabled
		*out = new(bool)
		**out = **in
	}
	if in.ExposeHeaders != nil {
		in, out := &in.ExposeHeaders, &out.ExposeHeaders
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.MaxAge != nil {
		in, out := &in.MaxAge, &out.MaxAge
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteRulesRouteActionCorsPolicyInitParameters.
func (in *RouteRulesRouteActionCorsPolicyInitParameters) DeepCopy() *RouteRulesRouteActionCorsPolicyInitParameters {
	if in == nil {
		return nil
	}
	out := new(RouteRulesRouteActionCorsPolicyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteRulesRouteActionCorsPolicyObservation) DeepCopyInto(out *RouteRulesRouteActionCorsPolicyObservation) {
	*out = *in
	if in.AllowCredentials != nil {
		in, out := &in.AllowCredentials, &out.AllowCredentials
		*out = new(bool)
		**out = **in
	}
	if in.AllowHeaders != nil {
		in, out := &in.AllowHeaders, &out.AllowHeaders
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AllowMethods != nil {
		in, out := &in.AllowMethods, &out.AllowMethods
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AllowOriginRegexes != nil {
		in, out := &in.AllowOriginRegexes, &out.AllowOriginRegexes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AllowOrigins != nil {
		in, out := &in.AllowOrigins, &out.AllowOrigins
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Disabled != nil {
		in, out := &in.Disabled, &out.Disabled
		*out = new(bool)
		**out = **in
	}
	if in.ExposeHeaders != nil {
		in, out := &in.ExposeHeaders, &out.ExposeHeaders
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.MaxAge != nil {
		in, out := &in.MaxAge, &out.MaxAge
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteRulesRouteActionCorsPolicyObservation.
func (in *RouteRulesRouteActionCorsPolicyObservation) DeepCopy() *RouteRulesRouteActionCorsPolicyObservation {
	if in == nil {
		return nil
	}
	out := new(RouteRulesRouteActionCorsPolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteRulesRouteActionCorsPolicyParameters) DeepCopyInto(out *RouteRulesRouteActionCorsPolicyParameters) {
	*out = *in
	if in.AllowCredentials != nil {
		in, out := &in.AllowCredentials, &out.AllowCredentials
		*out = new(bool)
		**out = **in
	}
	if in.AllowHeaders != nil {
		in, out := &in.AllowHeaders, &out.AllowHeaders
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AllowMethods != nil {
		in, out := &in.AllowMethods, &out.AllowMethods
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AllowOriginRegexes != nil {
		in, out := &in.AllowOriginRegexes, &out.AllowOriginRegexes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AllowOrigins != nil {
		in, out := &in.AllowOrigins, &out.AllowOrigins
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Disabled != nil {
		in, out := &in.Disabled, &out.Disabled
		*out = new(bool)
		**out = **in
	}
	if in.ExposeHeaders != nil {
		in, out := &in.ExposeHeaders, &out.ExposeHeaders
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.MaxAge != nil {
		in, out := &in.MaxAge, &out.MaxAge
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteRulesRouteActionCorsPolicyParameters.
func (in *RouteRulesRouteActionCorsPolicyParameters) DeepCopy() *RouteRulesRouteActionCorsPolicyParameters {
	if in == nil {
		return nil
	}
	out := new(RouteRulesRouteActionCorsPolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteRulesRouteActionFaultInjectionPolicyAbortInitParameters) DeepCopyInto(out *RouteRulesRouteActionFaultInjectionPolicyAbortInitParameters) {
	*out = *in
	if in.HTTPStatus != nil {
		in, out := &in.HTTPStatus, &out.HTTPStatus
		*out = new(float64)
		**out = **in
	}
	if in.Percentage != nil {
		in, out := &in.Percentage, &out.Percentage
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteRulesRouteActionFaultInjectionPolicyAbortInitParameters.
func (in *RouteRulesRouteActionFaultInjectionPolicyAbortInitParameters) DeepCopy() *RouteRulesRouteActionFaultInjectionPolicyAbortInitParameters {
	if in == nil {
		return nil
	}
	out := new(RouteRulesRouteActionFaultInjectionPolicyAbortInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteRulesRouteActionFaultInjectionPolicyAbortObservation) DeepCopyInto(out *RouteRulesRouteActionFaultInjectionPolicyAbortObservation) {
	*out = *in
	if in.HTTPStatus != nil {
		in, out := &in.HTTPStatus, &out.HTTPStatus
		*out = new(float64)
		**out = **in
	}
	if in.Percentage != nil {
		in, out := &in.Percentage, &out.Percentage
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteRulesRouteActionFaultInjectionPolicyAbortObservation.
func (in *RouteRulesRouteActionFaultInjectionPolicyAbortObservation) DeepCopy() *RouteRulesRouteActionFaultInjectionPolicyAbortObservation {
	if in == nil {
		return nil
	}
	out := new(RouteRulesRouteActionFaultInjectionPolicyAbortObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteRulesRouteActionFaultInjectionPolicyAbortParameters) DeepCopyInto(out *RouteRulesRouteActionFaultInjectionPolicyAbortParameters) {
	*out = *in
	if in.HTTPStatus != nil {
		in, out := &in.HTTPStatus, &out.HTTPStatus
		*out = new(float64)
		**out = **in
	}
	if in.Percentage != nil {
		in, out := &in.Percentage, &out.Percentage
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteRulesRouteActionFaultInjectionPolicyAbortParameters.
func (in *RouteRulesRouteActionFaultInjectionPolicyAbortParameters) DeepCopy() *RouteRulesRouteActionFaultInjectionPolicyAbortParameters {
	if in == nil {
		return nil
	}
	out := new(RouteRulesRouteActionFaultInjectionPolicyAbortParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteRulesRouteActionFaultInjectionPolicyDelayFixedDelayInitParameters) DeepCopyInto(out *RouteRulesRouteActionFaultInjectionPolicyDelayFixedDelayInitParameters) {
	*out = *in
	if in.Nanos != nil {
		in, out := &in.Nanos, &out.Nanos
		*out = new(float64)
		**out = **in
	}
	if in.Seconds != nil {
		in, out := &in.Seconds, &out.Seconds
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteRulesRouteActionFaultInjectionPolicyDelayFixedDelayInitParameters.
func (in *RouteRulesRouteActionFaultInjectionPolicyDelayFixedDelayInitParameters) DeepCopy() *RouteRulesRouteActionFaultInjectionPolicyDelayFixedDelayInitParameters {
	if in == nil {
		return nil
	}
	out := new(RouteRulesRouteActionFaultInjectionPolicyDelayFixedDelayInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteRulesRouteActionFaultInjectionPolicyDelayFixedDelayObservation) DeepCopyInto(out *RouteRulesRouteActionFaultInjectionPolicyDelayFixedDelayObservation) {
	*out = *in
	if in.Nanos != nil {
		in, out := &in.Nanos, &out.Nanos
		*out = new(float64)
		**out = **in
	}
	if in.Seconds != nil {
		in, out := &in.Seconds, &out.Seconds
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteRulesRouteActionFaultInjectionPolicyDelayFixedDelayObservation.
func (in *RouteRulesRouteActionFaultInjectionPolicyDelayFixedDelayObservation) DeepCopy() *RouteRulesRouteActionFaultInjectionPolicyDelayFixedDelayObservation {
	if in == nil {
		return nil
	}
	out := new(RouteRulesRouteActionFaultInjectionPolicyDelayFixedDelayObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteRulesRouteActionFaultInjectionPolicyDelayFixedDelayParameters) DeepCopyInto(out *RouteRulesRouteActionFaultInjectionPolicyDelayFixedDelayParameters) {
	*out = *in
	if in.Nanos != nil {
		in, out := &in.Nanos, &out.Nanos
		*out = new(float64)
		**out = **in
	}
	if in.Seconds != nil {
		in, out := &in.Seconds, &out.Seconds
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteRulesRouteActionFaultInjectionPolicyDelayFixedDelayParameters.
func (in *RouteRulesRouteActionFaultInjectionPolicyDelayFixedDelayParameters) DeepCopy() *RouteRulesRouteActionFaultInjectionPolicyDelayFixedDelayParameters {
	if in == nil {
		return nil
	}
	out := new(RouteRulesRouteActionFaultInjectionPolicyDelayFixedDelayParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteRulesRouteActionFaultInjectionPolicyDelayInitParameters) DeepCopyInto(out *RouteRulesRouteActionFaultInjectionPolicyDelayInitParameters) {
	*out = *in
	if in.FixedDelay != nil {
		in, out := &in.FixedDelay, &out.FixedDelay
		*out = make([]RouteRulesRouteActionFaultInjectionPolicyDelayFixedDelayInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Percentage != nil {
		in, out := &in.Percentage, &out.Percentage
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteRulesRouteActionFaultInjectionPolicyDelayInitParameters.
func (in *RouteRulesRouteActionFaultInjectionPolicyDelayInitParameters) DeepCopy() *RouteRulesRouteActionFaultInjectionPolicyDelayInitParameters {
	if in == nil {
		return nil
	}
	out := new(RouteRulesRouteActionFaultInjectionPolicyDelayInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteRulesRouteActionFaultInjectionPolicyDelayObservation) DeepCopyInto(out *RouteRulesRouteActionFaultInjectionPolicyDelayObservation) {
	*out = *in
	if in.FixedDelay != nil {
		in, out := &in.FixedDelay, &out.FixedDelay
		*out = make([]RouteRulesRouteActionFaultInjectionPolicyDelayFixedDelayObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Percentage != nil {
		in, out := &in.Percentage, &out.Percentage
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteRulesRouteActionFaultInjectionPolicyDelayObservation.
func (in *RouteRulesRouteActionFaultInjectionPolicyDelayObservation) DeepCopy() *RouteRulesRouteActionFaultInjectionPolicyDelayObservation {
	if in == nil {
		return nil
	}
	out := new(RouteRulesRouteActionFaultInjectionPolicyDelayObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteRulesRouteActionFaultInjectionPolicyDelayParameters) DeepCopyInto(out *RouteRulesRouteActionFaultInjectionPolicyDelayParameters) {
	*out = *in
	if in.FixedDelay != nil {
		in, out := &in.FixedDelay, &out.FixedDelay
		*out = make([]RouteRulesRouteActionFaultInjectionPolicyDelayFixedDelayParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Percentage != nil {
		in, out := &in.Percentage, &out.Percentage
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteRulesRouteActionFaultInjectionPolicyDelayParameters.
func (in *RouteRulesRouteActionFaultInjectionPolicyDelayParameters) DeepCopy() *RouteRulesRouteActionFaultInjectionPolicyDelayParameters {
	if in == nil {
		return nil
	}
	out := new(RouteRulesRouteActionFaultInjectionPolicyDelayParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteRulesRouteActionFaultInjectionPolicyInitParameters) DeepCopyInto(out *RouteRulesRouteActionFaultInjectionPolicyInitParameters) {
	*out = *in
	if in.Abort != nil {
		in, out := &in.Abort, &out.Abort
		*out = make([]RouteActionFaultInjectionPolicyAbortInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Delay != nil {
		in, out := &in.Delay, &out.Delay
		*out = make([]RouteActionFaultInjectionPolicyDelayInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteRulesRouteActionFaultInjectionPolicyInitParameters.
func (in *RouteRulesRouteActionFaultInjectionPolicyInitParameters) DeepCopy() *RouteRulesRouteActionFaultInjectionPolicyInitParameters {
	if in == nil {
		return nil
	}
	out := new(RouteRulesRouteActionFaultInjectionPolicyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteRulesRouteActionFaultInjectionPolicyObservation) DeepCopyInto(out *RouteRulesRouteActionFaultInjectionPolicyObservation) {
	*out = *in
	if in.Abort != nil {
		in, out := &in.Abort, &out.Abort
		*out = make([]RouteActionFaultInjectionPolicyAbortObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Delay != nil {
		in, out := &in.Delay, &out.Delay
		*out = make([]RouteActionFaultInjectionPolicyDelayObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteRulesRouteActionFaultInjectionPolicyObservation.
func (in *RouteRulesRouteActionFaultInjectionPolicyObservation) DeepCopy() *RouteRulesRouteActionFaultInjectionPolicyObservation {
	if in == nil {
		return nil
	}
	out := new(RouteRulesRouteActionFaultInjectionPolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteRulesRouteActionFaultInjectionPolicyParameters) DeepCopyInto(out *RouteRulesRouteActionFaultInjectionPolicyParameters) {
	*out = *in
	if in.Abort != nil {
		in, out := &in.Abort, &out.Abort
		*out = make([]RouteActionFaultInjectionPolicyAbortParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Delay != nil {
		in, out := &in.Delay, &out.Delay
		*out = make([]RouteActionFaultInjectionPolicyDelayParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteRulesRouteActionFaultInjectionPolicyParameters.
func (in *RouteRulesRouteActionFaultInjectionPolicyParameters) DeepCopy() *RouteRulesRouteActionFaultInjectionPolicyParameters {
	if in == nil {
		return nil
	}
	out := new(RouteRulesRouteActionFaultInjectionPolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteRulesRouteActionInitParameters) DeepCopyInto(out *RouteRulesRouteActionInitParameters) {
	*out = *in
	if in.CorsPolicy != nil {
		in, out := &in.CorsPolicy, &out.CorsPolicy
		*out = make([]RouteRulesRouteActionCorsPolicyInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.FaultInjectionPolicy != nil {
		in, out := &in.FaultInjectionPolicy, &out.FaultInjectionPolicy
		*out = make([]RouteRulesRouteActionFaultInjectionPolicyInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RequestMirrorPolicy != nil {
		in, out := &in.RequestMirrorPolicy, &out.RequestMirrorPolicy
		*out = make([]RouteRulesRouteActionRequestMirrorPolicyInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RetryPolicy != nil {
		in, out := &in.RetryPolicy, &out.RetryPolicy
		*out = make([]RouteRulesRouteActionRetryPolicyInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Timeout != nil {
		in, out := &in.Timeout, &out.Timeout
		*out = make([]RouteRulesRouteActionTimeoutInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.URLRewrite != nil {
		in, out := &in.URLRewrite, &out.URLRewrite
		*out = make([]RouteRulesRouteActionURLRewriteInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.WeightedBackendServices != nil {
		in, out := &in.WeightedBackendServices, &out.WeightedBackendServices
		*out = make([]RouteRulesRouteActionWeightedBackendServicesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteRulesRouteActionInitParameters.
func (in *RouteRulesRouteActionInitParameters) DeepCopy() *RouteRulesRouteActionInitParameters {
	if in == nil {
		return nil
	}
	out := new(RouteRulesRouteActionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteRulesRouteActionObservation) DeepCopyInto(out *RouteRulesRouteActionObservation) {
	*out = *in
	if in.CorsPolicy != nil {
		in, out := &in.CorsPolicy, &out.CorsPolicy
		*out = make([]RouteRulesRouteActionCorsPolicyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.FaultInjectionPolicy != nil {
		in, out := &in.FaultInjectionPolicy, &out.FaultInjectionPolicy
		*out = make([]RouteRulesRouteActionFaultInjectionPolicyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RequestMirrorPolicy != nil {
		in, out := &in.RequestMirrorPolicy, &out.RequestMirrorPolicy
		*out = make([]RouteRulesRouteActionRequestMirrorPolicyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RetryPolicy != nil {
		in, out := &in.RetryPolicy, &out.RetryPolicy
		*out = make([]RouteRulesRouteActionRetryPolicyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Timeout != nil {
		in, out := &in.Timeout, &out.Timeout
		*out = make([]RouteRulesRouteActionTimeoutObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.URLRewrite != nil {
		in, out := &in.URLRewrite, &out.URLRewrite
		*out = make([]RouteRulesRouteActionURLRewriteObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.WeightedBackendServices != nil {
		in, out := &in.WeightedBackendServices, &out.WeightedBackendServices
		*out = make([]RouteRulesRouteActionWeightedBackendServicesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteRulesRouteActionObservation.
func (in *RouteRulesRouteActionObservation) DeepCopy() *RouteRulesRouteActionObservation {
	if in == nil {
		return nil
	}
	out := new(RouteRulesRouteActionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteRulesRouteActionParameters) DeepCopyInto(out *RouteRulesRouteActionParameters) {
	*out = *in
	if in.CorsPolicy != nil {
		in, out := &in.CorsPolicy, &out.CorsPolicy
		*out = make([]RouteRulesRouteActionCorsPolicyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.FaultInjectionPolicy != nil {
		in, out := &in.FaultInjectionPolicy, &out.FaultInjectionPolicy
		*out = make([]RouteRulesRouteActionFaultInjectionPolicyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RequestMirrorPolicy != nil {
		in, out := &in.RequestMirrorPolicy, &out.RequestMirrorPolicy
		*out = make([]RouteRulesRouteActionRequestMirrorPolicyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RetryPolicy != nil {
		in, out := &in.RetryPolicy, &out.RetryPolicy
		*out = make([]RouteRulesRouteActionRetryPolicyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Timeout != nil {
		in, out := &in.Timeout, &out.Timeout
		*out = make([]RouteRulesRouteActionTimeoutParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.URLRewrite != nil {
		in, out := &in.URLRewrite, &out.URLRewrite
		*out = make([]RouteRulesRouteActionURLRewriteParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.WeightedBackendServices != nil {
		in, out := &in.WeightedBackendServices, &out.WeightedBackendServices
		*out = make([]RouteRulesRouteActionWeightedBackendServicesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteRulesRouteActionParameters.
func (in *RouteRulesRouteActionParameters) DeepCopy() *RouteRulesRouteActionParameters {
	if in == nil {
		return nil
	}
	out := new(RouteRulesRouteActionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteRulesRouteActionRequestMirrorPolicyInitParameters) DeepCopyInto(out *RouteRulesRouteActionRequestMirrorPolicyInitParameters) {
	*out = *in
	if in.BackendService != nil {
		in, out := &in.BackendService, &out.BackendService
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteRulesRouteActionRequestMirrorPolicyInitParameters.
func (in *RouteRulesRouteActionRequestMirrorPolicyInitParameters) DeepCopy() *RouteRulesRouteActionRequestMirrorPolicyInitParameters {
	if in == nil {
		return nil
	}
	out := new(RouteRulesRouteActionRequestMirrorPolicyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteRulesRouteActionRequestMirrorPolicyObservation) DeepCopyInto(out *RouteRulesRouteActionRequestMirrorPolicyObservation) {
	*out = *in
	if in.BackendService != nil {
		in, out := &in.BackendService, &out.BackendService
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteRulesRouteActionRequestMirrorPolicyObservation.
func (in *RouteRulesRouteActionRequestMirrorPolicyObservation) DeepCopy() *RouteRulesRouteActionRequestMirrorPolicyObservation {
	if in == nil {
		return nil
	}
	out := new(RouteRulesRouteActionRequestMirrorPolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteRulesRouteActionRequestMirrorPolicyParameters) DeepCopyInto(out *RouteRulesRouteActionRequestMirrorPolicyParameters) {
	*out = *in
	if in.BackendService != nil {
		in, out := &in.BackendService, &out.BackendService
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteRulesRouteActionRequestMirrorPolicyParameters.
func (in *RouteRulesRouteActionRequestMirrorPolicyParameters) DeepCopy() *RouteRulesRouteActionRequestMirrorPolicyParameters {
	if in == nil {
		return nil
	}
	out := new(RouteRulesRouteActionRequestMirrorPolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteRulesRouteActionRetryPolicyInitParameters) DeepCopyInto(out *RouteRulesRouteActionRetryPolicyInitParameters) {
	*out = *in
	if in.NumRetries != nil {
		in, out := &in.NumRetries, &out.NumRetries
		*out = new(float64)
		**out = **in
	}
	if in.PerTryTimeout != nil {
		in, out := &in.PerTryTimeout, &out.PerTryTimeout
		*out = make([]RouteActionRetryPolicyPerTryTimeoutInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RetryConditions != nil {
		in, out := &in.RetryConditions, &out.RetryConditions
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteRulesRouteActionRetryPolicyInitParameters.
func (in *RouteRulesRouteActionRetryPolicyInitParameters) DeepCopy() *RouteRulesRouteActionRetryPolicyInitParameters {
	if in == nil {
		return nil
	}
	out := new(RouteRulesRouteActionRetryPolicyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteRulesRouteActionRetryPolicyObservation) DeepCopyInto(out *RouteRulesRouteActionRetryPolicyObservation) {
	*out = *in
	if in.NumRetries != nil {
		in, out := &in.NumRetries, &out.NumRetries
		*out = new(float64)
		**out = **in
	}
	if in.PerTryTimeout != nil {
		in, out := &in.PerTryTimeout, &out.PerTryTimeout
		*out = make([]RouteActionRetryPolicyPerTryTimeoutObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RetryConditions != nil {
		in, out := &in.RetryConditions, &out.RetryConditions
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteRulesRouteActionRetryPolicyObservation.
func (in *RouteRulesRouteActionRetryPolicyObservation) DeepCopy() *RouteRulesRouteActionRetryPolicyObservation {
	if in == nil {
		return nil
	}
	out := new(RouteRulesRouteActionRetryPolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteRulesRouteActionRetryPolicyParameters) DeepCopyInto(out *RouteRulesRouteActionRetryPolicyParameters) {
	*out = *in
	if in.NumRetries != nil {
		in, out := &in.NumRetries, &out.NumRetries
		*out = new(float64)
		**out = **in
	}
	if in.PerTryTimeout != nil {
		in, out := &in.PerTryTimeout, &out.PerTryTimeout
		*out = make([]RouteActionRetryPolicyPerTryTimeoutParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RetryConditions != nil {
		in, out := &in.RetryConditions, &out.RetryConditions
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteRulesRouteActionRetryPolicyParameters.
func (in *RouteRulesRouteActionRetryPolicyParameters) DeepCopy() *RouteRulesRouteActionRetryPolicyParameters {
	if in == nil {
		return nil
	}
	out := new(RouteRulesRouteActionRetryPolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteRulesRouteActionRetryPolicyPerTryTimeoutInitParameters) DeepCopyInto(out *RouteRulesRouteActionRetryPolicyPerTryTimeoutInitParameters) {
	*out = *in
	if in.Nanos != nil {
		in, out := &in.Nanos, &out.Nanos
		*out = new(float64)
		**out = **in
	}
	if in.Seconds != nil {
		in, out := &in.Seconds, &out.Seconds
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteRulesRouteActionRetryPolicyPerTryTimeoutInitParameters.
func (in *RouteRulesRouteActionRetryPolicyPerTryTimeoutInitParameters) DeepCopy() *RouteRulesRouteActionRetryPolicyPerTryTimeoutInitParameters {
	if in == nil {
		return nil
	}
	out := new(RouteRulesRouteActionRetryPolicyPerTryTimeoutInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteRulesRouteActionRetryPolicyPerTryTimeoutObservation) DeepCopyInto(out *RouteRulesRouteActionRetryPolicyPerTryTimeoutObservation) {
	*out = *in
	if in.Nanos != nil {
		in, out := &in.Nanos, &out.Nanos
		*out = new(float64)
		**out = **in
	}
	if in.Seconds != nil {
		in, out := &in.Seconds, &out.Seconds
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteRulesRouteActionRetryPolicyPerTryTimeoutObservation.
func (in *RouteRulesRouteActionRetryPolicyPerTryTimeoutObservation) DeepCopy() *RouteRulesRouteActionRetryPolicyPerTryTimeoutObservation {
	if in == nil {
		return nil
	}
	out := new(RouteRulesRouteActionRetryPolicyPerTryTimeoutObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteRulesRouteActionRetryPolicyPerTryTimeoutParameters) DeepCopyInto(out *RouteRulesRouteActionRetryPolicyPerTryTimeoutParameters) {
	*out = *in
	if in.Nanos != nil {
		in, out := &in.Nanos, &out.Nanos
		*out = new(float64)
		**out = **in
	}
	if in.Seconds != nil {
		in, out := &in.Seconds, &out.Seconds
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteRulesRouteActionRetryPolicyPerTryTimeoutParameters.
func (in *RouteRulesRouteActionRetryPolicyPerTryTimeoutParameters) DeepCopy() *RouteRulesRouteActionRetryPolicyPerTryTimeoutParameters {
	if in == nil {
		return nil
	}
	out := new(RouteRulesRouteActionRetryPolicyPerTryTimeoutParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteRulesRouteActionTimeoutInitParameters) DeepCopyInto(out *RouteRulesRouteActionTimeoutInitParameters) {
	*out = *in
	if in.Nanos != nil {
		in, out := &in.Nanos, &out.Nanos
		*out = new(float64)
		**out = **in
	}
	if in.Seconds != nil {
		in, out := &in.Seconds, &out.Seconds
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteRulesRouteActionTimeoutInitParameters.
func (in *RouteRulesRouteActionTimeoutInitParameters) DeepCopy() *RouteRulesRouteActionTimeoutInitParameters {
	if in == nil {
		return nil
	}
	out := new(RouteRulesRouteActionTimeoutInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteRulesRouteActionTimeoutObservation) DeepCopyInto(out *RouteRulesRouteActionTimeoutObservation) {
	*out = *in
	if in.Nanos != nil {
		in, out := &in.Nanos, &out.Nanos
		*out = new(float64)
		**out = **in
	}
	if in.Seconds != nil {
		in, out := &in.Seconds, &out.Seconds
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteRulesRouteActionTimeoutObservation.
func (in *RouteRulesRouteActionTimeoutObservation) DeepCopy() *RouteRulesRouteActionTimeoutObservation {
	if in == nil {
		return nil
	}
	out := new(RouteRulesRouteActionTimeoutObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteRulesRouteActionTimeoutParameters) DeepCopyInto(out *RouteRulesRouteActionTimeoutParameters) {
	*out = *in
	if in.Nanos != nil {
		in, out := &in.Nanos, &out.Nanos
		*out = new(float64)
		**out = **in
	}
	if in.Seconds != nil {
		in, out := &in.Seconds, &out.Seconds
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteRulesRouteActionTimeoutParameters.
func (in *RouteRulesRouteActionTimeoutParameters) DeepCopy() *RouteRulesRouteActionTimeoutParameters {
	if in == nil {
		return nil
	}
	out := new(RouteRulesRouteActionTimeoutParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteRulesRouteActionURLRewriteInitParameters) DeepCopyInto(out *RouteRulesRouteActionURLRewriteInitParameters) {
	*out = *in
	if in.HostRewrite != nil {
		in, out := &in.HostRewrite, &out.HostRewrite
		*out = new(string)
		**out = **in
	}
	if in.PathPrefixRewrite != nil {
		in, out := &in.PathPrefixRewrite, &out.PathPrefixRewrite
		*out = new(string)
		**out = **in
	}
	if in.PathTemplateRewrite != nil {
		in, out := &in.PathTemplateRewrite, &out.PathTemplateRewrite
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteRulesRouteActionURLRewriteInitParameters.
func (in *RouteRulesRouteActionURLRewriteInitParameters) DeepCopy() *RouteRulesRouteActionURLRewriteInitParameters {
	if in == nil {
		return nil
	}
	out := new(RouteRulesRouteActionURLRewriteInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteRulesRouteActionURLRewriteObservation) DeepCopyInto(out *RouteRulesRouteActionURLRewriteObservation) {
	*out = *in
	if in.HostRewrite != nil {
		in, out := &in.HostRewrite, &out.HostRewrite
		*out = new(string)
		**out = **in
	}
	if in.PathPrefixRewrite != nil {
		in, out := &in.PathPrefixRewrite, &out.PathPrefixRewrite
		*out = new(string)
		**out = **in
	}
	if in.PathTemplateRewrite != nil {
		in, out := &in.PathTemplateRewrite, &out.PathTemplateRewrite
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteRulesRouteActionURLRewriteObservation.
func (in *RouteRulesRouteActionURLRewriteObservation) DeepCopy() *RouteRulesRouteActionURLRewriteObservation {
	if in == nil {
		return nil
	}
	out := new(RouteRulesRouteActionURLRewriteObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteRulesRouteActionURLRewriteParameters) DeepCopyInto(out *RouteRulesRouteActionURLRewriteParameters) {
	*out = *in
	if in.HostRewrite != nil {
		in, out := &in.HostRewrite, &out.HostRewrite
		*out = new(string)
		**out = **in
	}
	if in.PathPrefixRewrite != nil {
		in, out := &in.PathPrefixRewrite, &out.PathPrefixRewrite
		*out = new(string)
		**out = **in
	}
	if in.PathTemplateRewrite != nil {
		in, out := &in.PathTemplateRewrite, &out.PathTemplateRewrite
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteRulesRouteActionURLRewriteParameters.
func (in *RouteRulesRouteActionURLRewriteParameters) DeepCopy() *RouteRulesRouteActionURLRewriteParameters {
	if in == nil {
		return nil
	}
	out := new(RouteRulesRouteActionURLRewriteParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteRulesRouteActionWeightedBackendServicesHeaderActionInitParameters) DeepCopyInto(out *RouteRulesRouteActionWeightedBackendServicesHeaderActionInitParameters) {
	*out = *in
	if in.RequestHeadersToAdd != nil {
		in, out := &in.RequestHeadersToAdd, &out.RequestHeadersToAdd
		*out = make([]RouteRulesRouteActionWeightedBackendServicesHeaderActionRequestHeadersToAddInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RequestHeadersToRemove != nil {
		in, out := &in.RequestHeadersToRemove, &out.RequestHeadersToRemove
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ResponseHeadersToAdd != nil {
		in, out := &in.ResponseHeadersToAdd, &out.ResponseHeadersToAdd
		*out = make([]RouteRulesRouteActionWeightedBackendServicesHeaderActionResponseHeadersToAddInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ResponseHeadersToRemove != nil {
		in, out := &in.ResponseHeadersToRemove, &out.ResponseHeadersToRemove
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteRulesRouteActionWeightedBackendServicesHeaderActionInitParameters.
func (in *RouteRulesRouteActionWeightedBackendServicesHeaderActionInitParameters) DeepCopy() *RouteRulesRouteActionWeightedBackendServicesHeaderActionInitParameters {
	if in == nil {
		return nil
	}
	out := new(RouteRulesRouteActionWeightedBackendServicesHeaderActionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteRulesRouteActionWeightedBackendServicesHeaderActionObservation) DeepCopyInto(out *RouteRulesRouteActionWeightedBackendServicesHeaderActionObservation) {
	*out = *in
	if in.RequestHeadersToAdd != nil {
		in, out := &in.RequestHeadersToAdd, &out.RequestHeadersToAdd
		*out = make([]RouteRulesRouteActionWeightedBackendServicesHeaderActionRequestHeadersToAddObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RequestHeadersToRemove != nil {
		in, out := &in.RequestHeadersToRemove, &out.RequestHeadersToRemove
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ResponseHeadersToAdd != nil {
		in, out := &in.ResponseHeadersToAdd, &out.ResponseHeadersToAdd
		*out = make([]RouteRulesRouteActionWeightedBackendServicesHeaderActionResponseHeadersToAddObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ResponseHeadersToRemove != nil {
		in, out := &in.ResponseHeadersToRemove, &out.ResponseHeadersToRemove
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteRulesRouteActionWeightedBackendServicesHeaderActionObservation.
func (in *RouteRulesRouteActionWeightedBackendServicesHeaderActionObservation) DeepCopy() *RouteRulesRouteActionWeightedBackendServicesHeaderActionObservation {
	if in == nil {
		return nil
	}
	out := new(RouteRulesRouteActionWeightedBackendServicesHeaderActionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteRulesRouteActionWeightedBackendServicesHeaderActionParameters) DeepCopyInto(out *RouteRulesRouteActionWeightedBackendServicesHeaderActionParameters) {
	*out = *in
	if in.RequestHeadersToAdd != nil {
		in, out := &in.RequestHeadersToAdd, &out.RequestHeadersToAdd
		*out = make([]RouteRulesRouteActionWeightedBackendServicesHeaderActionRequestHeadersToAddParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RequestHeadersToRemove != nil {
		in, out := &in.RequestHeadersToRemove, &out.RequestHeadersToRemove
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ResponseHeadersToAdd != nil {
		in, out := &in.ResponseHeadersToAdd, &out.ResponseHeadersToAdd
		*out = make([]RouteRulesRouteActionWeightedBackendServicesHeaderActionResponseHeadersToAddParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ResponseHeadersToRemove != nil {
		in, out := &in.ResponseHeadersToRemove, &out.ResponseHeadersToRemove
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteRulesRouteActionWeightedBackendServicesHeaderActionParameters.
func (in *RouteRulesRouteActionWeightedBackendServicesHeaderActionParameters) DeepCopy() *RouteRulesRouteActionWeightedBackendServicesHeaderActionParameters {
	if in == nil {
		return nil
	}
	out := new(RouteRulesRouteActionWeightedBackendServicesHeaderActionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteRulesRouteActionWeightedBackendServicesHeaderActionRequestHeadersToAddInitParameters) DeepCopyInto(out *RouteRulesRouteActionWeightedBackendServicesHeaderActionRequestHeadersToAddInitParameters) {
	*out = *in
	if in.HeaderName != nil {
		in, out := &in.HeaderName, &out.HeaderName
		*out = new(string)
		**out = **in
	}
	if in.HeaderValue != nil {
		in, out := &in.HeaderValue, &out.HeaderValue
		*out = new(string)
		**out = **in
	}
	if in.Replace != nil {
		in, out := &in.Replace, &out.Replace
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteRulesRouteActionWeightedBackendServicesHeaderActionRequestHeadersToAddInitParameters.
func (in *RouteRulesRouteActionWeightedBackendServicesHeaderActionRequestHeadersToAddInitParameters) DeepCopy() *RouteRulesRouteActionWeightedBackendServicesHeaderActionRequestHeadersToAddInitParameters {
	if in == nil {
		return nil
	}
	out := new(RouteRulesRouteActionWeightedBackendServicesHeaderActionRequestHeadersToAddInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteRulesRouteActionWeightedBackendServicesHeaderActionRequestHeadersToAddObservation) DeepCopyInto(out *RouteRulesRouteActionWeightedBackendServicesHeaderActionRequestHeadersToAddObservation) {
	*out = *in
	if in.HeaderName != nil {
		in, out := &in.HeaderName, &out.HeaderName
		*out = new(string)
		**out = **in
	}
	if in.HeaderValue != nil {
		in, out := &in.HeaderValue, &out.HeaderValue
		*out = new(string)
		**out = **in
	}
	if in.Replace != nil {
		in, out := &in.Replace, &out.Replace
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteRulesRouteActionWeightedBackendServicesHeaderActionRequestHeadersToAddObservation.
func (in *RouteRulesRouteActionWeightedBackendServicesHeaderActionRequestHeadersToAddObservation) DeepCopy() *RouteRulesRouteActionWeightedBackendServicesHeaderActionRequestHeadersToAddObservation {
	if in == nil {
		return nil
	}
	out := new(RouteRulesRouteActionWeightedBackendServicesHeaderActionRequestHeadersToAddObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteRulesRouteActionWeightedBackendServicesHeaderActionRequestHeadersToAddParameters) DeepCopyInto(out *RouteRulesRouteActionWeightedBackendServicesHeaderActionRequestHeadersToAddParameters) {
	*out = *in
	if in.HeaderName != nil {
		in, out := &in.HeaderName, &out.HeaderName
		*out = new(string)
		**out = **in
	}
	if in.HeaderValue != nil {
		in, out := &in.HeaderValue, &out.HeaderValue
		*out = new(string)
		**out = **in
	}
	if in.Replace != nil {
		in, out := &in.Replace, &out.Replace
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteRulesRouteActionWeightedBackendServicesHeaderActionRequestHeadersToAddParameters.
func (in *RouteRulesRouteActionWeightedBackendServicesHeaderActionRequestHeadersToAddParameters) DeepCopy() *RouteRulesRouteActionWeightedBackendServicesHeaderActionRequestHeadersToAddParameters {
	if in == nil {
		return nil
	}
	out := new(RouteRulesRouteActionWeightedBackendServicesHeaderActionRequestHeadersToAddParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteRulesRouteActionWeightedBackendServicesHeaderActionResponseHeadersToAddInitParameters) DeepCopyInto(out *RouteRulesRouteActionWeightedBackendServicesHeaderActionResponseHeadersToAddInitParameters) {
	*out = *in
	if in.HeaderName != nil {
		in, out := &in.HeaderName, &out.HeaderName
		*out = new(string)
		**out = **in
	}
	if in.HeaderValue != nil {
		in, out := &in.HeaderValue, &out.HeaderValue
		*out = new(string)
		**out = **in
	}
	if in.Replace != nil {
		in, out := &in.Replace, &out.Replace
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteRulesRouteActionWeightedBackendServicesHeaderActionResponseHeadersToAddInitParameters.
func (in *RouteRulesRouteActionWeightedBackendServicesHeaderActionResponseHeadersToAddInitParameters) DeepCopy() *RouteRulesRouteActionWeightedBackendServicesHeaderActionResponseHeadersToAddInitParameters {
	if in == nil {
		return nil
	}
	out := new(RouteRulesRouteActionWeightedBackendServicesHeaderActionResponseHeadersToAddInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteRulesRouteActionWeightedBackendServicesHeaderActionResponseHeadersToAddObservation) DeepCopyInto(out *RouteRulesRouteActionWeightedBackendServicesHeaderActionResponseHeadersToAddObservation) {
	*out = *in
	if in.HeaderName != nil {
		in, out := &in.HeaderName, &out.HeaderName
		*out = new(string)
		**out = **in
	}
	if in.HeaderValue != nil {
		in, out := &in.HeaderValue, &out.HeaderValue
		*out = new(string)
		**out = **in
	}
	if in.Replace != nil {
		in, out := &in.Replace, &out.Replace
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteRulesRouteActionWeightedBackendServicesHeaderActionResponseHeadersToAddObservation.
func (in *RouteRulesRouteActionWeightedBackendServicesHeaderActionResponseHeadersToAddObservation) DeepCopy() *RouteRulesRouteActionWeightedBackendServicesHeaderActionResponseHeadersToAddObservation {
	if in == nil {
		return nil
	}
	out := new(RouteRulesRouteActionWeightedBackendServicesHeaderActionResponseHeadersToAddObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteRulesRouteActionWeightedBackendServicesHeaderActionResponseHeadersToAddParameters) DeepCopyInto(out *RouteRulesRouteActionWeightedBackendServicesHeaderActionResponseHeadersToAddParameters) {
	*out = *in
	if in.HeaderName != nil {
		in, out := &in.HeaderName, &out.HeaderName
		*out = new(string)
		**out = **in
	}
	if in.HeaderValue != nil {
		in, out := &in.HeaderValue, &out.HeaderValue
		*out = new(string)
		**out = **in
	}
	if in.Replace != nil {
		in, out := &in.Replace, &out.Replace
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteRulesRouteActionWeightedBackendServicesHeaderActionResponseHeadersToAddParameters.
func (in *RouteRulesRouteActionWeightedBackendServicesHeaderActionResponseHeadersToAddParameters) DeepCopy() *RouteRulesRouteActionWeightedBackendServicesHeaderActionResponseHeadersToAddParameters {
	if in == nil {
		return nil
	}
	out := new(RouteRulesRouteActionWeightedBackendServicesHeaderActionResponseHeadersToAddParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteRulesRouteActionWeightedBackendServicesInitParameters) DeepCopyInto(out *RouteRulesRouteActionWeightedBackendServicesInitParameters) {
	*out = *in
	if in.BackendService != nil {
		in, out := &in.BackendService, &out.BackendService
		*out = new(string)
		**out = **in
	}
	if in.HeaderAction != nil {
		in, out := &in.HeaderAction, &out.HeaderAction
		*out = make([]RouteActionWeightedBackendServicesHeaderActionInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Weight != nil {
		in, out := &in.Weight, &out.Weight
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteRulesRouteActionWeightedBackendServicesInitParameters.
func (in *RouteRulesRouteActionWeightedBackendServicesInitParameters) DeepCopy() *RouteRulesRouteActionWeightedBackendServicesInitParameters {
	if in == nil {
		return nil
	}
	out := new(RouteRulesRouteActionWeightedBackendServicesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteRulesRouteActionWeightedBackendServicesObservation) DeepCopyInto(out *RouteRulesRouteActionWeightedBackendServicesObservation) {
	*out = *in
	if in.BackendService != nil {
		in, out := &in.BackendService, &out.BackendService
		*out = new(string)
		**out = **in
	}
	if in.HeaderAction != nil {
		in, out := &in.HeaderAction, &out.HeaderAction
		*out = make([]RouteActionWeightedBackendServicesHeaderActionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Weight != nil {
		in, out := &in.Weight, &out.Weight
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteRulesRouteActionWeightedBackendServicesObservation.
func (in *RouteRulesRouteActionWeightedBackendServicesObservation) DeepCopy() *RouteRulesRouteActionWeightedBackendServicesObservation {
	if in == nil {
		return nil
	}
	out := new(RouteRulesRouteActionWeightedBackendServicesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteRulesRouteActionWeightedBackendServicesParameters) DeepCopyInto(out *RouteRulesRouteActionWeightedBackendServicesParameters) {
	*out = *in
	if in.BackendService != nil {
		in, out := &in.BackendService, &out.BackendService
		*out = new(string)
		**out = **in
	}
	if in.HeaderAction != nil {
		in, out := &in.HeaderAction, &out.HeaderAction
		*out = make([]RouteActionWeightedBackendServicesHeaderActionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Weight != nil {
		in, out := &in.Weight, &out.Weight
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteRulesRouteActionWeightedBackendServicesParameters.
func (in *RouteRulesRouteActionWeightedBackendServicesParameters) DeepCopy() *RouteRulesRouteActionWeightedBackendServicesParameters {
	if in == nil {
		return nil
	}
	out := new(RouteRulesRouteActionWeightedBackendServicesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteRulesURLRedirectInitParameters) DeepCopyInto(out *RouteRulesURLRedirectInitParameters) {
	*out = *in
	if in.HTTPSRedirect != nil {
		in, out := &in.HTTPSRedirect, &out.HTTPSRedirect
		*out = new(bool)
		**out = **in
	}
	if in.HostRedirect != nil {
		in, out := &in.HostRedirect, &out.HostRedirect
		*out = new(string)
		**out = **in
	}
	if in.PathRedirect != nil {
		in, out := &in.PathRedirect, &out.PathRedirect
		*out = new(string)
		**out = **in
	}
	if in.PrefixRedirect != nil {
		in, out := &in.PrefixRedirect, &out.PrefixRedirect
		*out = new(string)
		**out = **in
	}
	if in.RedirectResponseCode != nil {
		in, out := &in.RedirectResponseCode, &out.RedirectResponseCode
		*out = new(string)
		**out = **in
	}
	if in.StripQuery != nil {
		in, out := &in.StripQuery, &out.StripQuery
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteRulesURLRedirectInitParameters.
func (in *RouteRulesURLRedirectInitParameters) DeepCopy() *RouteRulesURLRedirectInitParameters {
	if in == nil {
		return nil
	}
	out := new(RouteRulesURLRedirectInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteRulesURLRedirectObservation) DeepCopyInto(out *RouteRulesURLRedirectObservation) {
	*out = *in
	if in.HTTPSRedirect != nil {
		in, out := &in.HTTPSRedirect, &out.HTTPSRedirect
		*out = new(bool)
		**out = **in
	}
	if in.HostRedirect != nil {
		in, out := &in.HostRedirect, &out.HostRedirect
		*out = new(string)
		**out = **in
	}
	if in.PathRedirect != nil {
		in, out := &in.PathRedirect, &out.PathRedirect
		*out = new(string)
		**out = **in
	}
	if in.PrefixRedirect != nil {
		in, out := &in.PrefixRedirect, &out.PrefixRedirect
		*out = new(string)
		**out = **in
	}
	if in.RedirectResponseCode != nil {
		in, out := &in.RedirectResponseCode, &out.RedirectResponseCode
		*out = new(string)
		**out = **in
	}
	if in.StripQuery != nil {
		in, out := &in.StripQuery, &out.StripQuery
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteRulesURLRedirectObservation.
func (in *RouteRulesURLRedirectObservation) DeepCopy() *RouteRulesURLRedirectObservation {
	if in == nil {
		return nil
	}
	out := new(RouteRulesURLRedirectObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteRulesURLRedirectParameters) DeepCopyInto(out *RouteRulesURLRedirectParameters) {
	*out = *in
	if in.HTTPSRedirect != nil {
		in, out := &in.HTTPSRedirect, &out.HTTPSRedirect
		*out = new(bool)
		**out = **in
	}
	if in.HostRedirect != nil {
		in, out := &in.HostRedirect, &out.HostRedirect
		*out = new(string)
		**out = **in
	}
	if in.PathRedirect != nil {
		in, out := &in.PathRedirect, &out.PathRedirect
		*out = new(string)
		**out = **in
	}
	if in.PrefixRedirect != nil {
		in, out := &in.PrefixRedirect, &out.PrefixRedirect
		*out = new(string)
		**out = **in
	}
	if in.RedirectResponseCode != nil {
		in, out := &in.RedirectResponseCode, &out.RedirectResponseCode
		*out = new(string)
		**out = **in
	}
	if in.StripQuery != nil {
		in, out := &in.StripQuery, &out.StripQuery
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteRulesURLRedirectParameters.
func (in *RouteRulesURLRedirectParameters) DeepCopy() *RouteRulesURLRedirectParameters {
	if in == nil {
		return nil
	}
	out := new(RouteRulesURLRedirectParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteSpec) DeepCopyInto(out *RouteSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteSpec.
func (in *RouteSpec) DeepCopy() *RouteSpec {
	if in == nil {
		return nil
	}
	out := new(RouteSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteStatus) DeepCopyInto(out *RouteStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteStatus.
func (in *RouteStatus) DeepCopy() *RouteStatus {
	if in == nil {
		return nil
	}
	out := new(RouteStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Router) DeepCopyInto(out *Router) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Router.
func (in *Router) DeepCopy() *Router {
	if in == nil {
		return nil
	}
	out := new(Router)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Router) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouterInitParameters) DeepCopyInto(out *RouterInitParameters) {
	*out = *in
	if in.BGP != nil {
		in, out := &in.BGP, &out.BGP
		*out = make([]BGPInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.EncryptedInterconnectRouter != nil {
		in, out := &in.EncryptedInterconnectRouter, &out.EncryptedInterconnectRouter
		*out = new(bool)
		**out = **in
	}
	if in.Network != nil {
		in, out := &in.Network, &out.Network
		*out = new(string)
		**out = **in
	}
	if in.NetworkRef != nil {
		in, out := &in.NetworkRef, &out.NetworkRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.NetworkSelector != nil {
		in, out := &in.NetworkSelector, &out.NetworkSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouterInitParameters.
func (in *RouterInitParameters) DeepCopy() *RouterInitParameters {
	if in == nil {
		return nil
	}
	out := new(RouterInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouterInterface) DeepCopyInto(out *RouterInterface) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouterInterface.
func (in *RouterInterface) DeepCopy() *RouterInterface {
	if in == nil {
		return nil
	}
	out := new(RouterInterface)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RouterInterface) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouterInterfaceInitParameters) DeepCopyInto(out *RouterInterfaceInitParameters) {
	*out = *in
	if in.IPRange != nil {
		in, out := &in.IPRange, &out.IPRange
		*out = new(string)
		**out = **in
	}
	if in.IPVersion != nil {
		in, out := &in.IPVersion, &out.IPVersion
		*out = new(string)
		**out = **in
	}
	if in.InterconnectAttachment != nil {
		in, out := &in.InterconnectAttachment, &out.InterconnectAttachment
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PrivateIPAddress != nil {
		in, out := &in.PrivateIPAddress, &out.PrivateIPAddress
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.RedundantInterface != nil {
		in, out := &in.RedundantInterface, &out.RedundantInterface
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.Router != nil {
		in, out := &in.Router, &out.Router
		*out = new(string)
		**out = **in
	}
	if in.RouterRef != nil {
		in, out := &in.RouterRef, &out.RouterRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.RouterSelector != nil {
		in, out := &in.RouterSelector, &out.RouterSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Subnetwork != nil {
		in, out := &in.Subnetwork, &out.Subnetwork
		*out = new(string)
		**out = **in
	}
	if in.VPNTunnel != nil {
		in, out := &in.VPNTunnel, &out.VPNTunnel
		*out = new(string)
		**out = **in
	}
	if in.VPNTunnelRef != nil {
		in, out := &in.VPNTunnelRef, &out.VPNTunnelRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.VPNTunnelSelector != nil {
		in, out := &in.VPNTunnelSelector, &out.VPNTunnelSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouterInterfaceInitParameters.
func (in *RouterInterfaceInitParameters) DeepCopy() *RouterInterfaceInitParameters {
	if in == nil {
		return nil
	}
	out := new(RouterInterfaceInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouterInterfaceList) DeepCopyInto(out *RouterInterfaceList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]RouterInterface, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouterInterfaceList.
func (in *RouterInterfaceList) DeepCopy() *RouterInterfaceList {
	if in == nil {
		return nil
	}
	out := new(RouterInterfaceList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RouterInterfaceList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouterInterfaceObservation) DeepCopyInto(out *RouterInterfaceObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IPRange != nil {
		in, out := &in.IPRange, &out.IPRange
		*out = new(string)
		**out = **in
	}
	if in.IPVersion != nil {
		in, out := &in.IPVersion, &out.IPVersion
		*out = new(string)
		**out = **in
	}
	if in.InterconnectAttachment != nil {
		in, out := &in.InterconnectAttachment, &out.InterconnectAttachment
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PrivateIPAddress != nil {
		in, out := &in.PrivateIPAddress, &out.PrivateIPAddress
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.RedundantInterface != nil {
		in, out := &in.RedundantInterface, &out.RedundantInterface
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.Router != nil {
		in, out := &in.Router, &out.Router
		*out = new(string)
		**out = **in
	}
	if in.Subnetwork != nil {
		in, out := &in.Subnetwork, &out.Subnetwork
		*out = new(string)
		**out = **in
	}
	if in.VPNTunnel != nil {
		in, out := &in.VPNTunnel, &out.VPNTunnel
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouterInterfaceObservation.
func (in *RouterInterfaceObservation) DeepCopy() *RouterInterfaceObservation {
	if in == nil {
		return nil
	}
	out := new(RouterInterfaceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouterInterfaceParameters) DeepCopyInto(out *RouterInterfaceParameters) {
	*out = *in
	if in.IPRange != nil {
		in, out := &in.IPRange, &out.IPRange
		*out = new(string)
		**out = **in
	}
	if in.IPVersion != nil {
		in, out := &in.IPVersion, &out.IPVersion
		*out = new(string)
		**out = **in
	}
	if in.InterconnectAttachment != nil {
		in, out := &in.InterconnectAttachment, &out.InterconnectAttachment
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PrivateIPAddress != nil {
		in, out := &in.PrivateIPAddress, &out.PrivateIPAddress
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.RedundantInterface != nil {
		in, out := &in.RedundantInterface, &out.RedundantInterface
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.Router != nil {
		in, out := &in.Router, &out.Router
		*out = new(string)
		**out = **in
	}
	if in.RouterRef != nil {
		in, out := &in.RouterRef, &out.RouterRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.RouterSelector != nil {
		in, out := &in.RouterSelector, &out.RouterSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Subnetwork != nil {
		in, out := &in.Subnetwork, &out.Subnetwork
		*out = new(string)
		**out = **in
	}
	if in.VPNTunnel != nil {
		in, out := &in.VPNTunnel, &out.VPNTunnel
		*out = new(string)
		**out = **in
	}
	if in.VPNTunnelRef != nil {
		in, out := &in.VPNTunnelRef, &out.VPNTunnelRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.VPNTunnelSelector != nil {
		in, out := &in.VPNTunnelSelector, &out.VPNTunnelSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouterInterfaceParameters.
func (in *RouterInterfaceParameters) DeepCopy() *RouterInterfaceParameters {
	if in == nil {
		return nil
	}
	out := new(RouterInterfaceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouterInterfaceSpec) DeepCopyInto(out *RouterInterfaceSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouterInterfaceSpec.
func (in *RouterInterfaceSpec) DeepCopy() *RouterInterfaceSpec {
	if in == nil {
		return nil
	}
	out := new(RouterInterfaceSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouterInterfaceStatus) DeepCopyInto(out *RouterInterfaceStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouterInterfaceStatus.
func (in *RouterInterfaceStatus) DeepCopy() *RouterInterfaceStatus {
	if in == nil {
		return nil
	}
	out := new(RouterInterfaceStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouterList) DeepCopyInto(out *RouterList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Router, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouterList.
func (in *RouterList) DeepCopy() *RouterList {
	if in == nil {
		return nil
	}
	out := new(RouterList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RouterList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouterNAT) DeepCopyInto(out *RouterNAT) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouterNAT.
func (in *RouterNAT) DeepCopy() *RouterNAT {
	if in == nil {
		return nil
	}
	out := new(RouterNAT)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RouterNAT) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouterNATInitParameters) DeepCopyInto(out *RouterNATInitParameters) {
	*out = *in
	if in.AutoNetworkTier != nil {
		in, out := &in.AutoNetworkTier, &out.AutoNetworkTier
		*out = new(string)
		**out = **in
	}
	if in.DrainNATIps != nil {
		in, out := &in.DrainNATIps, &out.DrainNATIps
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.EnableDynamicPortAllocation != nil {
		in, out := &in.EnableDynamicPortAllocation, &out.EnableDynamicPortAllocation
		*out = new(bool)
		**out = **in
	}
	if in.EnableEndpointIndependentMapping != nil {
		in, out := &in.EnableEndpointIndependentMapping, &out.EnableEndpointIndependentMapping
		*out = new(bool)
		**out = **in
	}
	if in.EndpointTypes != nil {
		in, out := &in.EndpointTypes, &out.EndpointTypes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.IcmpIdleTimeoutSec != nil {
		in, out := &in.IcmpIdleTimeoutSec, &out.IcmpIdleTimeoutSec
		*out = new(float64)
		**out = **in
	}
	if in.LogConfig != nil {
		in, out := &in.LogConfig, &out.LogConfig
		*out = make([]RouterNATLogConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MaxPortsPerVM != nil {
		in, out := &in.MaxPortsPerVM, &out.MaxPortsPerVM
		*out = new(float64)
		**out = **in
	}
	if in.MinPortsPerVM != nil {
		in, out := &in.MinPortsPerVM, &out.MinPortsPerVM
		*out = new(float64)
		**out = **in
	}
	if in.NATIPAllocateOption != nil {
		in, out := &in.NATIPAllocateOption, &out.NATIPAllocateOption
		*out = new(string)
		**out = **in
	}
	if in.NATIps != nil {
		in, out := &in.NATIps, &out.NATIps
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Rules != nil {
		in, out := &in.Rules, &out.Rules
		*out = make([]RulesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SourceSubnetworkIPRangesToNAT != nil {
		in, out := &in.SourceSubnetworkIPRangesToNAT, &out.SourceSubnetworkIPRangesToNAT
		*out = new(string)
		**out = **in
	}
	if in.Subnetwork != nil {
		in, out := &in.Subnetwork, &out.Subnetwork
		*out = make([]SubnetworkInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TCPEstablishedIdleTimeoutSec != nil {
		in, out := &in.TCPEstablishedIdleTimeoutSec, &out.TCPEstablishedIdleTimeoutSec
		*out = new(float64)
		**out = **in
	}
	if in.TCPTimeWaitTimeoutSec != nil {
		in, out := &in.TCPTimeWaitTimeoutSec, &out.TCPTimeWaitTimeoutSec
		*out = new(float64)
		**out = **in
	}
	if in.TCPTransitoryIdleTimeoutSec != nil {
		in, out := &in.TCPTransitoryIdleTimeoutSec, &out.TCPTransitoryIdleTimeoutSec
		*out = new(float64)
		**out = **in
	}
	if in.UDPIdleTimeoutSec != nil {
		in, out := &in.UDPIdleTimeoutSec, &out.UDPIdleTimeoutSec
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouterNATInitParameters.
func (in *RouterNATInitParameters) DeepCopy() *RouterNATInitParameters {
	if in == nil {
		return nil
	}
	out := new(RouterNATInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouterNATList) DeepCopyInto(out *RouterNATList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]RouterNAT, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouterNATList.
func (in *RouterNATList) DeepCopy() *RouterNATList {
	if in == nil {
		return nil
	}
	out := new(RouterNATList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RouterNATList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouterNATLogConfigInitParameters) DeepCopyInto(out *RouterNATLogConfigInitParameters) {
	*out = *in
	if in.Enable != nil {
		in, out := &in.Enable, &out.Enable
		*out = new(bool)
		**out = **in
	}
	if in.Filter != nil {
		in, out := &in.Filter, &out.Filter
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouterNATLogConfigInitParameters.
func (in *RouterNATLogConfigInitParameters) DeepCopy() *RouterNATLogConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(RouterNATLogConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouterNATLogConfigObservation) DeepCopyInto(out *RouterNATLogConfigObservation) {
	*out = *in
	if in.Enable != nil {
		in, out := &in.Enable, &out.Enable
		*out = new(bool)
		**out = **in
	}
	if in.Filter != nil {
		in, out := &in.Filter, &out.Filter
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouterNATLogConfigObservation.
func (in *RouterNATLogConfigObservation) DeepCopy() *RouterNATLogConfigObservation {
	if in == nil {
		return nil
	}
	out := new(RouterNATLogConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouterNATLogConfigParameters) DeepCopyInto(out *RouterNATLogConfigParameters) {
	*out = *in
	if in.Enable != nil {
		in, out := &in.Enable, &out.Enable
		*out = new(bool)
		**out = **in
	}
	if in.Filter != nil {
		in, out := &in.Filter, &out.Filter
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouterNATLogConfigParameters.
func (in *RouterNATLogConfigParameters) DeepCopy() *RouterNATLogConfigParameters {
	if in == nil {
		return nil
	}
	out := new(RouterNATLogConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouterNATObservation) DeepCopyInto(out *RouterNATObservation) {
	*out = *in
	if in.AutoNetworkTier != nil {
		in, out := &in.AutoNetworkTier, &out.AutoNetworkTier
		*out = new(string)
		**out = **in
	}
	if in.DrainNATIps != nil {
		in, out := &in.DrainNATIps, &out.DrainNATIps
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.EnableDynamicPortAllocation != nil {
		in, out := &in.EnableDynamicPortAllocation, &out.EnableDynamicPortAllocation
		*out = new(bool)
		**out = **in
	}
	if in.EnableEndpointIndependentMapping != nil {
		in, out := &in.EnableEndpointIndependentMapping, &out.EnableEndpointIndependentMapping
		*out = new(bool)
		**out = **in
	}
	if in.EndpointTypes != nil {
		in, out := &in.EndpointTypes, &out.EndpointTypes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IcmpIdleTimeoutSec != nil {
		in, out := &in.IcmpIdleTimeoutSec, &out.IcmpIdleTimeoutSec
		*out = new(float64)
		**out = **in
	}
	if in.LogConfig != nil {
		in, out := &in.LogConfig, &out.LogConfig
		*out = make([]RouterNATLogConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MaxPortsPerVM != nil {
		in, out := &in.MaxPortsPerVM, &out.MaxPortsPerVM
		*out = new(float64)
		**out = **in
	}
	if in.MinPortsPerVM != nil {
		in, out := &in.MinPortsPerVM, &out.MinPortsPerVM
		*out = new(float64)
		**out = **in
	}
	if in.NATIPAllocateOption != nil {
		in, out := &in.NATIPAllocateOption, &out.NATIPAllocateOption
		*out = new(string)
		**out = **in
	}
	if in.NATIps != nil {
		in, out := &in.NATIps, &out.NATIps
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.Router != nil {
		in, out := &in.Router, &out.Router
		*out = new(string)
		**out = **in
	}
	if in.Rules != nil {
		in, out := &in.Rules, &out.Rules
		*out = make([]RulesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SourceSubnetworkIPRangesToNAT != nil {
		in, out := &in.SourceSubnetworkIPRangesToNAT, &out.SourceSubnetworkIPRangesToNAT
		*out = new(string)
		**out = **in
	}
	if in.Subnetwork != nil {
		in, out := &in.Subnetwork, &out.Subnetwork
		*out = make([]SubnetworkObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TCPEstablishedIdleTimeoutSec != nil {
		in, out := &in.TCPEstablishedIdleTimeoutSec, &out.TCPEstablishedIdleTimeoutSec
		*out = new(float64)
		**out = **in
	}
	if in.TCPTimeWaitTimeoutSec != nil {
		in, out := &in.TCPTimeWaitTimeoutSec, &out.TCPTimeWaitTimeoutSec
		*out = new(float64)
		**out = **in
	}
	if in.TCPTransitoryIdleTimeoutSec != nil {
		in, out := &in.TCPTransitoryIdleTimeoutSec, &out.TCPTransitoryIdleTimeoutSec
		*out = new(float64)
		**out = **in
	}
	if in.UDPIdleTimeoutSec != nil {
		in, out := &in.UDPIdleTimeoutSec, &out.UDPIdleTimeoutSec
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouterNATObservation.
func (in *RouterNATObservation) DeepCopy() *RouterNATObservation {
	if in == nil {
		return nil
	}
	out := new(RouterNATObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouterNATParameters) DeepCopyInto(out *RouterNATParameters) {
	*out = *in
	if in.AutoNetworkTier != nil {
		in, out := &in.AutoNetworkTier, &out.AutoNetworkTier
		*out = new(string)
		**out = **in
	}
	if in.DrainNATIps != nil {
		in, out := &in.DrainNATIps, &out.DrainNATIps
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.EnableDynamicPortAllocation != nil {
		in, out := &in.EnableDynamicPortAllocation, &out.EnableDynamicPortAllocation
		*out = new(bool)
		**out = **in
	}
	if in.EnableEndpointIndependentMapping != nil {
		in, out := &in.EnableEndpointIndependentMapping, &out.EnableEndpointIndependentMapping
		*out = new(bool)
		**out = **in
	}
	if in.EndpointTypes != nil {
		in, out := &in.EndpointTypes, &out.EndpointTypes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.IcmpIdleTimeoutSec != nil {
		in, out := &in.IcmpIdleTimeoutSec, &out.IcmpIdleTimeoutSec
		*out = new(float64)
		**out = **in
	}
	if in.LogConfig != nil {
		in, out := &in.LogConfig, &out.LogConfig
		*out = make([]RouterNATLogConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MaxPortsPerVM != nil {
		in, out := &in.MaxPortsPerVM, &out.MaxPortsPerVM
		*out = new(float64)
		**out = **in
	}
	if in.MinPortsPerVM != nil {
		in, out := &in.MinPortsPerVM, &out.MinPortsPerVM
		*out = new(float64)
		**out = **in
	}
	if in.NATIPAllocateOption != nil {
		in, out := &in.NATIPAllocateOption, &out.NATIPAllocateOption
		*out = new(string)
		**out = **in
	}
	if in.NATIps != nil {
		in, out := &in.NATIps, &out.NATIps
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.Router != nil {
		in, out := &in.Router, &out.Router
		*out = new(string)
		**out = **in
	}
	if in.RouterRef != nil {
		in, out := &in.RouterRef, &out.RouterRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.RouterSelector != nil {
		in, out := &in.RouterSelector, &out.RouterSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Rules != nil {
		in, out := &in.Rules, &out.Rules
		*out = make([]RulesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SourceSubnetworkIPRangesToNAT != nil {
		in, out := &in.SourceSubnetworkIPRangesToNAT, &out.SourceSubnetworkIPRangesToNAT
		*out = new(string)
		**out = **in
	}
	if in.Subnetwork != nil {
		in, out := &in.Subnetwork, &out.Subnetwork
		*out = make([]SubnetworkParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TCPEstablishedIdleTimeoutSec != nil {
		in, out := &in.TCPEstablishedIdleTimeoutSec, &out.TCPEstablishedIdleTimeoutSec
		*out = new(float64)
		**out = **in
	}
	if in.TCPTimeWaitTimeoutSec != nil {
		in, out := &in.TCPTimeWaitTimeoutSec, &out.TCPTimeWaitTimeoutSec
		*out = new(float64)
		**out = **in
	}
	if in.TCPTransitoryIdleTimeoutSec != nil {
		in, out := &in.TCPTransitoryIdleTimeoutSec, &out.TCPTransitoryIdleTimeoutSec
		*out = new(float64)
		**out = **in
	}
	if in.UDPIdleTimeoutSec != nil {
		in, out := &in.UDPIdleTimeoutSec, &out.UDPIdleTimeoutSec
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouterNATParameters.
func (in *RouterNATParameters) DeepCopy() *RouterNATParameters {
	if in == nil {
		return nil
	}
	out := new(RouterNATParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouterNATSpec) DeepCopyInto(out *RouterNATSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouterNATSpec.
func (in *RouterNATSpec) DeepCopy() *RouterNATSpec {
	if in == nil {
		return nil
	}
	out := new(RouterNATSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouterNATStatus) DeepCopyInto(out *RouterNATStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouterNATStatus.
func (in *RouterNATStatus) DeepCopy() *RouterNATStatus {
	if in == nil {
		return nil
	}
	out := new(RouterNATStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouterObservation) DeepCopyInto(out *RouterObservation) {
	*out = *in
	if in.BGP != nil {
		in, out := &in.BGP, &out.BGP
		*out = make([]BGPObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CreationTimestamp != nil {
		in, out := &in.CreationTimestamp, &out.CreationTimestamp
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.EncryptedInterconnectRouter != nil {
		in, out := &in.EncryptedInterconnectRouter, &out.EncryptedInterconnectRouter
		*out = new(bool)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Network != nil {
		in, out := &in.Network, &out.Network
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.SelfLink != nil {
		in, out := &in.SelfLink, &out.SelfLink
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouterObservation.
func (in *RouterObservation) DeepCopy() *RouterObservation {
	if in == nil {
		return nil
	}
	out := new(RouterObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouterParameters) DeepCopyInto(out *RouterParameters) {
	*out = *in
	if in.BGP != nil {
		in, out := &in.BGP, &out.BGP
		*out = make([]BGPParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.EncryptedInterconnectRouter != nil {
		in, out := &in.EncryptedInterconnectRouter, &out.EncryptedInterconnectRouter
		*out = new(bool)
		**out = **in
	}
	if in.Network != nil {
		in, out := &in.Network, &out.Network
		*out = new(string)
		**out = **in
	}
	if in.NetworkRef != nil {
		in, out := &in.NetworkRef, &out.NetworkRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.NetworkSelector != nil {
		in, out := &in.NetworkSelector, &out.NetworkSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouterParameters.
func (in *RouterParameters) DeepCopy() *RouterParameters {
	if in == nil {
		return nil
	}
	out := new(RouterParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouterPeer) DeepCopyInto(out *RouterPeer) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouterPeer.
func (in *RouterPeer) DeepCopy() *RouterPeer {
	if in == nil {
		return nil
	}
	out := new(RouterPeer)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RouterPeer) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouterPeerAdvertisedIPRangesInitParameters) DeepCopyInto(out *RouterPeerAdvertisedIPRangesInitParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Range != nil {
		in, out := &in.Range, &out.Range
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouterPeerAdvertisedIPRangesInitParameters.
func (in *RouterPeerAdvertisedIPRangesInitParameters) DeepCopy() *RouterPeerAdvertisedIPRangesInitParameters {
	if in == nil {
		return nil
	}
	out := new(RouterPeerAdvertisedIPRangesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouterPeerAdvertisedIPRangesObservation) DeepCopyInto(out *RouterPeerAdvertisedIPRangesObservation) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Range != nil {
		in, out := &in.Range, &out.Range
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouterPeerAdvertisedIPRangesObservation.
func (in *RouterPeerAdvertisedIPRangesObservation) DeepCopy() *RouterPeerAdvertisedIPRangesObservation {
	if in == nil {
		return nil
	}
	out := new(RouterPeerAdvertisedIPRangesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouterPeerAdvertisedIPRangesParameters) DeepCopyInto(out *RouterPeerAdvertisedIPRangesParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Range != nil {
		in, out := &in.Range, &out.Range
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouterPeerAdvertisedIPRangesParameters.
func (in *RouterPeerAdvertisedIPRangesParameters) DeepCopy() *RouterPeerAdvertisedIPRangesParameters {
	if in == nil {
		return nil
	}
	out := new(RouterPeerAdvertisedIPRangesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouterPeerInitParameters) DeepCopyInto(out *RouterPeerInitParameters) {
	*out = *in
	if in.AdvertiseMode != nil {
		in, out := &in.AdvertiseMode, &out.AdvertiseMode
		*out = new(string)
		**out = **in
	}
	if in.AdvertisedGroups != nil {
		in, out := &in.AdvertisedGroups, &out.AdvertisedGroups
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AdvertisedIPRanges != nil {
		in, out := &in.AdvertisedIPRanges, &out.AdvertisedIPRanges
		*out = make([]RouterPeerAdvertisedIPRangesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AdvertisedRoutePriority != nil {
		in, out := &in.AdvertisedRoutePriority, &out.AdvertisedRoutePriority
		*out = new(float64)
		**out = **in
	}
	if in.Bfd != nil {
		in, out := &in.Bfd, &out.Bfd
		*out = make([]BfdInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CustomLearnedIPRanges != nil {
		in, out := &in.CustomLearnedIPRanges, &out.CustomLearnedIPRanges
		*out = make([]CustomLearnedIPRangesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CustomLearnedRoutePriority != nil {
		in, out := &in.CustomLearnedRoutePriority, &out.CustomLearnedRoutePriority
		*out = new(float64)
		**out = **in
	}
	if in.Enable != nil {
		in, out := &in.Enable, &out.Enable
		*out = new(bool)
		**out = **in
	}
	if in.EnableIPv4 != nil {
		in, out := &in.EnableIPv4, &out.EnableIPv4
		*out = new(bool)
		**out = **in
	}
	if in.EnableIPv6 != nil {
		in, out := &in.EnableIPv6, &out.EnableIPv6
		*out = new(bool)
		**out = **in
	}
	if in.IPAddress != nil {
		in, out := &in.IPAddress, &out.IPAddress
		*out = new(string)
		**out = **in
	}
	if in.IPv4NexthopAddress != nil {
		in, out := &in.IPv4NexthopAddress, &out.IPv4NexthopAddress
		*out = new(string)
		**out = **in
	}
	if in.IPv6NexthopAddress != nil {
		in, out := &in.IPv6NexthopAddress, &out.IPv6NexthopAddress
		*out = new(string)
		**out = **in
	}
	if in.Interface != nil {
		in, out := &in.Interface, &out.Interface
		*out = new(string)
		**out = **in
	}
	if in.InterfaceRef != nil {
		in, out := &in.InterfaceRef, &out.InterfaceRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.InterfaceSelector != nil {
		in, out := &in.InterfaceSelector, &out.InterfaceSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Md5AuthenticationKey != nil {
		in, out := &in.Md5AuthenticationKey, &out.Md5AuthenticationKey
		*out = make([]Md5AuthenticationKeyInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PeerAsn != nil {
		in, out := &in.PeerAsn, &out.PeerAsn
		*out = new(float64)
		**out = **in
	}
	if in.PeerIPAddress != nil {
		in, out := &in.PeerIPAddress, &out.PeerIPAddress
		*out = new(string)
		**out = **in
	}
	if in.PeerIPAddressRef != nil {
		in, out := &in.PeerIPAddressRef, &out.PeerIPAddressRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.PeerIPAddressSelector != nil {
		in, out := &in.PeerIPAddressSelector, &out.PeerIPAddressSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.PeerIPv4NexthopAddress != nil {
		in, out := &in.PeerIPv4NexthopAddress, &out.PeerIPv4NexthopAddress
		*out = new(string)
		**out = **in
	}
	if in.PeerIPv6NexthopAddress != nil {
		in, out := &in.PeerIPv6NexthopAddress, &out.PeerIPv6NexthopAddress
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.RegionRef != nil {
		in, out := &in.RegionRef, &out.RegionRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.RegionSelector != nil {
		in, out := &in.RegionSelector, &out.RegionSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.RouterApplianceInstance != nil {
		in, out := &in.RouterApplianceInstance, &out.RouterApplianceInstance
		*out = new(string)
		**out = **in
	}
	if in.RouterApplianceInstanceRef != nil {
		in, out := &in.RouterApplianceInstanceRef, &out.RouterApplianceInstanceRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.RouterApplianceInstanceSelector != nil {
		in, out := &in.RouterApplianceInstanceSelector, &out.RouterApplianceInstanceSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouterPeerInitParameters.
func (in *RouterPeerInitParameters) DeepCopy() *RouterPeerInitParameters {
	if in == nil {
		return nil
	}
	out := new(RouterPeerInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouterPeerList) DeepCopyInto(out *RouterPeerList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]RouterPeer, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouterPeerList.
func (in *RouterPeerList) DeepCopy() *RouterPeerList {
	if in == nil {
		return nil
	}
	out := new(RouterPeerList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RouterPeerList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouterPeerObservation) DeepCopyInto(out *RouterPeerObservation) {
	*out = *in
	if in.AdvertiseMode != nil {
		in, out := &in.AdvertiseMode, &out.AdvertiseMode
		*out = new(string)
		**out = **in
	}
	if in.AdvertisedGroups != nil {
		in, out := &in.AdvertisedGroups, &out.AdvertisedGroups
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AdvertisedIPRanges != nil {
		in, out := &in.AdvertisedIPRanges, &out.AdvertisedIPRanges
		*out = make([]RouterPeerAdvertisedIPRangesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AdvertisedRoutePriority != nil {
		in, out := &in.AdvertisedRoutePriority, &out.AdvertisedRoutePriority
		*out = new(float64)
		**out = **in
	}
	if in.Bfd != nil {
		in, out := &in.Bfd, &out.Bfd
		*out = make([]BfdObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CustomLearnedIPRanges != nil {
		in, out := &in.CustomLearnedIPRanges, &out.CustomLearnedIPRanges
		*out = make([]CustomLearnedIPRangesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CustomLearnedRoutePriority != nil {
		in, out := &in.CustomLearnedRoutePriority, &out.CustomLearnedRoutePriority
		*out = new(float64)
		**out = **in
	}
	if in.Enable != nil {
		in, out := &in.Enable, &out.Enable
		*out = new(bool)
		**out = **in
	}
	if in.EnableIPv4 != nil {
		in, out := &in.EnableIPv4, &out.EnableIPv4
		*out = new(bool)
		**out = **in
	}
	if in.EnableIPv6 != nil {
		in, out := &in.EnableIPv6, &out.EnableIPv6
		*out = new(bool)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IPAddress != nil {
		in, out := &in.IPAddress, &out.IPAddress
		*out = new(string)
		**out = **in
	}
	if in.IPv4NexthopAddress != nil {
		in, out := &in.IPv4NexthopAddress, &out.IPv4NexthopAddress
		*out = new(string)
		**out = **in
	}
	if in.IPv6NexthopAddress != nil {
		in, out := &in.IPv6NexthopAddress, &out.IPv6NexthopAddress
		*out = new(string)
		**out = **in
	}
	if in.Interface != nil {
		in, out := &in.Interface, &out.Interface
		*out = new(string)
		**out = **in
	}
	if in.ManagementType != nil {
		in, out := &in.ManagementType, &out.ManagementType
		*out = new(string)
		**out = **in
	}
	if in.Md5AuthenticationKey != nil {
		in, out := &in.Md5AuthenticationKey, &out.Md5AuthenticationKey
		*out = make([]Md5AuthenticationKeyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PeerAsn != nil {
		in, out := &in.PeerAsn, &out.PeerAsn
		*out = new(float64)
		**out = **in
	}
	if in.PeerIPAddress != nil {
		in, out := &in.PeerIPAddress, &out.PeerIPAddress
		*out = new(string)
		**out = **in
	}
	if in.PeerIPv4NexthopAddress != nil {
		in, out := &in.PeerIPv4NexthopAddress, &out.PeerIPv4NexthopAddress
		*out = new(string)
		**out = **in
	}
	if in.PeerIPv6NexthopAddress != nil {
		in, out := &in.PeerIPv6NexthopAddress, &out.PeerIPv6NexthopAddress
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.Router != nil {
		in, out := &in.Router, &out.Router
		*out = new(string)
		**out = **in
	}
	if in.RouterApplianceInstance != nil {
		in, out := &in.RouterApplianceInstance, &out.RouterApplianceInstance
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouterPeerObservation.
func (in *RouterPeerObservation) DeepCopy() *RouterPeerObservation {
	if in == nil {
		return nil
	}
	out := new(RouterPeerObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouterPeerParameters) DeepCopyInto(out *RouterPeerParameters) {
	*out = *in
	if in.AdvertiseMode != nil {
		in, out := &in.AdvertiseMode, &out.AdvertiseMode
		*out = new(string)
		**out = **in
	}
	if in.AdvertisedGroups != nil {
		in, out := &in.AdvertisedGroups, &out.AdvertisedGroups
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AdvertisedIPRanges != nil {
		in, out := &in.AdvertisedIPRanges, &out.AdvertisedIPRanges
		*out = make([]RouterPeerAdvertisedIPRangesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AdvertisedRoutePriority != nil {
		in, out := &in.AdvertisedRoutePriority, &out.AdvertisedRoutePriority
		*out = new(float64)
		**out = **in
	}
	if in.Bfd != nil {
		in, out := &in.Bfd, &out.Bfd
		*out = make([]BfdParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CustomLearnedIPRanges != nil {
		in, out := &in.CustomLearnedIPRanges, &out.CustomLearnedIPRanges
		*out = make([]CustomLearnedIPRangesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CustomLearnedRoutePriority != nil {
		in, out := &in.CustomLearnedRoutePriority, &out.CustomLearnedRoutePriority
		*out = new(float64)
		**out = **in
	}
	if in.Enable != nil {
		in, out := &in.Enable, &out.Enable
		*out = new(bool)
		**out = **in
	}
	if in.EnableIPv4 != nil {
		in, out := &in.EnableIPv4, &out.EnableIPv4
		*out = new(bool)
		**out = **in
	}
	if in.EnableIPv6 != nil {
		in, out := &in.EnableIPv6, &out.EnableIPv6
		*out = new(bool)
		**out = **in
	}
	if in.IPAddress != nil {
		in, out := &in.IPAddress, &out.IPAddress
		*out = new(string)
		**out = **in
	}
	if in.IPv4NexthopAddress != nil {
		in, out := &in.IPv4NexthopAddress, &out.IPv4NexthopAddress
		*out = new(string)
		**out = **in
	}
	if in.IPv6NexthopAddress != nil {
		in, out := &in.IPv6NexthopAddress, &out.IPv6NexthopAddress
		*out = new(string)
		**out = **in
	}
	if in.Interface != nil {
		in, out := &in.Interface, &out.Interface
		*out = new(string)
		**out = **in
	}
	if in.InterfaceRef != nil {
		in, out := &in.InterfaceRef, &out.InterfaceRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.InterfaceSelector != nil {
		in, out := &in.InterfaceSelector, &out.InterfaceSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Md5AuthenticationKey != nil {
		in, out := &in.Md5AuthenticationKey, &out.Md5AuthenticationKey
		*out = make([]Md5AuthenticationKeyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PeerAsn != nil {
		in, out := &in.PeerAsn, &out.PeerAsn
		*out = new(float64)
		**out = **in
	}
	if in.PeerIPAddress != nil {
		in, out := &in.PeerIPAddress, &out.PeerIPAddress
		*out = new(string)
		**out = **in
	}
	if in.PeerIPAddressRef != nil {
		in, out := &in.PeerIPAddressRef, &out.PeerIPAddressRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.PeerIPAddressSelector != nil {
		in, out := &in.PeerIPAddressSelector, &out.PeerIPAddressSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.PeerIPv4NexthopAddress != nil {
		in, out := &in.PeerIPv4NexthopAddress, &out.PeerIPv4NexthopAddress
		*out = new(string)
		**out = **in
	}
	if in.PeerIPv6NexthopAddress != nil {
		in, out := &in.PeerIPv6NexthopAddress, &out.PeerIPv6NexthopAddress
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.RegionRef != nil {
		in, out := &in.RegionRef, &out.RegionRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.RegionSelector != nil {
		in, out := &in.RegionSelector, &out.RegionSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Router != nil {
		in, out := &in.Router, &out.Router
		*out = new(string)
		**out = **in
	}
	if in.RouterApplianceInstance != nil {
		in, out := &in.RouterApplianceInstance, &out.RouterApplianceInstance
		*out = new(string)
		**out = **in
	}
	if in.RouterApplianceInstanceRef != nil {
		in, out := &in.RouterApplianceInstanceRef, &out.RouterApplianceInstanceRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.RouterApplianceInstanceSelector != nil {
		in, out := &in.RouterApplianceInstanceSelector, &out.RouterApplianceInstanceSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.RouterRef != nil {
		in, out := &in.RouterRef, &out.RouterRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.RouterSelector != nil {
		in, out := &in.RouterSelector, &out.RouterSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouterPeerParameters.
func (in *RouterPeerParameters) DeepCopy() *RouterPeerParameters {
	if in == nil {
		return nil
	}
	out := new(RouterPeerParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouterPeerSpec) DeepCopyInto(out *RouterPeerSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouterPeerSpec.
func (in *RouterPeerSpec) DeepCopy() *RouterPeerSpec {
	if in == nil {
		return nil
	}
	out := new(RouterPeerSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouterPeerStatus) DeepCopyInto(out *RouterPeerStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouterPeerStatus.
func (in *RouterPeerStatus) DeepCopy() *RouterPeerStatus {
	if in == nil {
		return nil
	}
	out := new(RouterPeerStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouterSpec) DeepCopyInto(out *RouterSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouterSpec.
func (in *RouterSpec) DeepCopy() *RouterSpec {
	if in == nil {
		return nil
	}
	out := new(RouterSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouterStatus) DeepCopyInto(out *RouterStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouterStatus.
func (in *RouterStatus) DeepCopy() *RouterStatus {
	if in == nil {
		return nil
	}
	out := new(RouterStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RuleHeaderActionInitParameters) DeepCopyInto(out *RuleHeaderActionInitParameters) {
	*out = *in
	if in.RequestHeadersToAdds != nil {
		in, out := &in.RequestHeadersToAdds, &out.RequestHeadersToAdds
		*out = make([]RequestHeadersToAddsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RuleHeaderActionInitParameters.
func (in *RuleHeaderActionInitParameters) DeepCopy() *RuleHeaderActionInitParameters {
	if in == nil {
		return nil
	}
	out := new(RuleHeaderActionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RuleHeaderActionObservation) DeepCopyInto(out *RuleHeaderActionObservation) {
	*out = *in
	if in.RequestHeadersToAdds != nil {
		in, out := &in.RequestHeadersToAdds, &out.RequestHeadersToAdds
		*out = make([]RequestHeadersToAddsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RuleHeaderActionObservation.
func (in *RuleHeaderActionObservation) DeepCopy() *RuleHeaderActionObservation {
	if in == nil {
		return nil
	}
	out := new(RuleHeaderActionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RuleHeaderActionParameters) DeepCopyInto(out *RuleHeaderActionParameters) {
	*out = *in
	if in.RequestHeadersToAdds != nil {
		in, out := &in.RequestHeadersToAdds, &out.RequestHeadersToAdds
		*out = make([]RequestHeadersToAddsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RuleHeaderActionParameters.
func (in *RuleHeaderActionParameters) DeepCopy() *RuleHeaderActionParameters {
	if in == nil {
		return nil
	}
	out := new(RuleHeaderActionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RuleInitParameters) DeepCopyInto(out *RuleInitParameters) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.HeaderAction != nil {
		in, out := &in.HeaderAction, &out.HeaderAction
		*out = make([]RuleHeaderActionInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Match != nil {
		in, out := &in.Match, &out.Match
		*out = make([]RuleMatchInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Preview != nil {
		in, out := &in.Preview, &out.Preview
		*out = new(bool)
		**out = **in
	}
	if in.Priority != nil {
		in, out := &in.Priority, &out.Priority
		*out = new(float64)
		**out = **in
	}
	if in.RateLimitOptions != nil {
		in, out := &in.RateLimitOptions, &out.RateLimitOptions
		*out = make([]RateLimitOptionsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RedirectOptions != nil {
		in, out := &in.RedirectOptions, &out.RedirectOptions
		*out = make([]RedirectOptionsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RuleInitParameters.
func (in *RuleInitParameters) DeepCopy() *RuleInitParameters {
	if in == nil {
		return nil
	}
	out := new(RuleInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RuleMatchInitParameters) DeepCopyInto(out *RuleMatchInitParameters) {
	*out = *in
	if in.Config != nil {
		in, out := &in.Config, &out.Config
		*out = make([]ConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Expr != nil {
		in, out := &in.Expr, &out.Expr
		*out = make([]ExprInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ExprOptions != nil {
		in, out := &in.ExprOptions, &out.ExprOptions
		*out = make([]ExprOptionsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VersionedExpr != nil {
		in, out := &in.VersionedExpr, &out.VersionedExpr
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RuleMatchInitParameters.
func (in *RuleMatchInitParameters) DeepCopy() *RuleMatchInitParameters {
	if in == nil {
		return nil
	}
	out := new(RuleMatchInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RuleMatchObservation) DeepCopyInto(out *RuleMatchObservation) {
	*out = *in
	if in.Config != nil {
		in, out := &in.Config, &out.Config
		*out = make([]ConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Expr != nil {
		in, out := &in.Expr, &out.Expr
		*out = make([]ExprObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ExprOptions != nil {
		in, out := &in.ExprOptions, &out.ExprOptions
		*out = make([]ExprOptionsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VersionedExpr != nil {
		in, out := &in.VersionedExpr, &out.VersionedExpr
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RuleMatchObservation.
func (in *RuleMatchObservation) DeepCopy() *RuleMatchObservation {
	if in == nil {
		return nil
	}
	out := new(RuleMatchObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RuleMatchParameters) DeepCopyInto(out *RuleMatchParameters) {
	*out = *in
	if in.Config != nil {
		in, out := &in.Config, &out.Config
		*out = make([]ConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Expr != nil {
		in, out := &in.Expr, &out.Expr
		*out = make([]ExprParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ExprOptions != nil {
		in, out := &in.ExprOptions, &out.ExprOptions
		*out = make([]ExprOptionsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VersionedExpr != nil {
		in, out := &in.VersionedExpr, &out.VersionedExpr
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RuleMatchParameters.
func (in *RuleMatchParameters) DeepCopy() *RuleMatchParameters {
	if in == nil {
		return nil
	}
	out := new(RuleMatchParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RuleObservation) DeepCopyInto(out *RuleObservation) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.HeaderAction != nil {
		in, out := &in.HeaderAction, &out.HeaderAction
		*out = make([]RuleHeaderActionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Match != nil {
		in, out := &in.Match, &out.Match
		*out = make([]RuleMatchObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Preview != nil {
		in, out := &in.Preview, &out.Preview
		*out = new(bool)
		**out = **in
	}
	if in.Priority != nil {
		in, out := &in.Priority, &out.Priority
		*out = new(float64)
		**out = **in
	}
	if in.RateLimitOptions != nil {
		in, out := &in.RateLimitOptions, &out.RateLimitOptions
		*out = make([]RateLimitOptionsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RedirectOptions != nil {
		in, out := &in.RedirectOptions, &out.RedirectOptions
		*out = make([]RedirectOptionsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RuleObservation.
func (in *RuleObservation) DeepCopy() *RuleObservation {
	if in == nil {
		return nil
	}
	out := new(RuleObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RuleParameters) DeepCopyInto(out *RuleParameters) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.HeaderAction != nil {
		in, out := &in.HeaderAction, &out.HeaderAction
		*out = make([]RuleHeaderActionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Match != nil {
		in, out := &in.Match, &out.Match
		*out = make([]RuleMatchParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Preview != nil {
		in, out := &in.Preview, &out.Preview
		*out = new(bool)
		**out = **in
	}
	if in.Priority != nil {
		in, out := &in.Priority, &out.Priority
		*out = new(float64)
		**out = **in
	}
	if in.RateLimitOptions != nil {
		in, out := &in.RateLimitOptions, &out.RateLimitOptions
		*out = make([]RateLimitOptionsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RedirectOptions != nil {
		in, out := &in.RedirectOptions, &out.RedirectOptions
		*out = make([]RedirectOptionsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RuleParameters.
func (in *RuleParameters) DeepCopy() *RuleParameters {
	if in == nil {
		return nil
	}
	out := new(RuleParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RulesInitParameters) DeepCopyInto(out *RulesInitParameters) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = make([]ActionInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Match != nil {
		in, out := &in.Match, &out.Match
		*out = new(string)
		**out = **in
	}
	if in.RuleNumber != nil {
		in, out := &in.RuleNumber, &out.RuleNumber
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RulesInitParameters.
func (in *RulesInitParameters) DeepCopy() *RulesInitParameters {
	if in == nil {
		return nil
	}
	out := new(RulesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RulesObservation) DeepCopyInto(out *RulesObservation) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = make([]ActionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Match != nil {
		in, out := &in.Match, &out.Match
		*out = new(string)
		**out = **in
	}
	if in.RuleNumber != nil {
		in, out := &in.RuleNumber, &out.RuleNumber
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RulesObservation.
func (in *RulesObservation) DeepCopy() *RulesObservation {
	if in == nil {
		return nil
	}
	out := new(RulesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RulesParameters) DeepCopyInto(out *RulesParameters) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = make([]ActionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Match != nil {
		in, out := &in.Match, &out.Match
		*out = new(string)
		**out = **in
	}
	if in.RuleNumber != nil {
		in, out := &in.RuleNumber, &out.RuleNumber
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RulesParameters.
func (in *RulesParameters) DeepCopy() *RulesParameters {
	if in == nil {
		return nil
	}
	out := new(RulesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SSLCertificate) DeepCopyInto(out *SSLCertificate) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SSLCertificate.
func (in *SSLCertificate) DeepCopy() *SSLCertificate {
	if in == nil {
		return nil
	}
	out := new(SSLCertificate)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SSLCertificate) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SSLCertificateInitParameters) DeepCopyInto(out *SSLCertificateInitParameters) {
	*out = *in
	out.CertificateSecretRef = in.CertificateSecretRef
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	out.PrivateKeySecretRef = in.PrivateKeySecretRef
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SSLCertificateInitParameters.
func (in *SSLCertificateInitParameters) DeepCopy() *SSLCertificateInitParameters {
	if in == nil {
		return nil
	}
	out := new(SSLCertificateInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SSLCertificateList) DeepCopyInto(out *SSLCertificateList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]SSLCertificate, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SSLCertificateList.
func (in *SSLCertificateList) DeepCopy() *SSLCertificateList {
	if in == nil {
		return nil
	}
	out := new(SSLCertificateList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SSLCertificateList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SSLCertificateObservation) DeepCopyInto(out *SSLCertificateObservation) {
	*out = *in
	if in.CertificateID != nil {
		in, out := &in.CertificateID, &out.CertificateID
		*out = new(float64)
		**out = **in
	}
	if in.CreationTimestamp != nil {
		in, out := &in.CreationTimestamp, &out.CreationTimestamp
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.ExpireTime != nil {
		in, out := &in.ExpireTime, &out.ExpireTime
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.SelfLink != nil {
		in, out := &in.SelfLink, &out.SelfLink
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SSLCertificateObservation.
func (in *SSLCertificateObservation) DeepCopy() *SSLCertificateObservation {
	if in == nil {
		return nil
	}
	out := new(SSLCertificateObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SSLCertificateParameters) DeepCopyInto(out *SSLCertificateParameters) {
	*out = *in
	out.CertificateSecretRef = in.CertificateSecretRef
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	out.PrivateKeySecretRef = in.PrivateKeySecretRef
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SSLCertificateParameters.
func (in *SSLCertificateParameters) DeepCopy() *SSLCertificateParameters {
	if in == nil {
		return nil
	}
	out := new(SSLCertificateParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SSLCertificateSpec) DeepCopyInto(out *SSLCertificateSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SSLCertificateSpec.
func (in *SSLCertificateSpec) DeepCopy() *SSLCertificateSpec {
	if in == nil {
		return nil
	}
	out := new(SSLCertificateSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SSLCertificateStatus) DeepCopyInto(out *SSLCertificateStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SSLCertificateStatus.
func (in *SSLCertificateStatus) DeepCopy() *SSLCertificateStatus {
	if in == nil {
		return nil
	}
	out := new(SSLCertificateStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SSLHealthCheckInitParameters) DeepCopyInto(out *SSLHealthCheckInitParameters) {
	*out = *in
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
	if in.PortName != nil {
		in, out := &in.PortName, &out.PortName
		*out = new(string)
		**out = **in
	}
	if in.PortSpecification != nil {
		in, out := &in.PortSpecification, &out.PortSpecification
		*out = new(string)
		**out = **in
	}
	if in.ProxyHeader != nil {
		in, out := &in.ProxyHeader, &out.ProxyHeader
		*out = new(string)
		**out = **in
	}
	if in.Request != nil {
		in, out := &in.Request, &out.Request
		*out = new(string)
		**out = **in
	}
	if in.Response != nil {
		in, out := &in.Response, &out.Response
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SSLHealthCheckInitParameters.
func (in *SSLHealthCheckInitParameters) DeepCopy() *SSLHealthCheckInitParameters {
	if in == nil {
		return nil
	}
	out := new(SSLHealthCheckInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SSLHealthCheckObservation) DeepCopyInto(out *SSLHealthCheckObservation) {
	*out = *in
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
	if in.PortName != nil {
		in, out := &in.PortName, &out.PortName
		*out = new(string)
		**out = **in
	}
	if in.PortSpecification != nil {
		in, out := &in.PortSpecification, &out.PortSpecification
		*out = new(string)
		**out = **in
	}
	if in.ProxyHeader != nil {
		in, out := &in.ProxyHeader, &out.ProxyHeader
		*out = new(string)
		**out = **in
	}
	if in.Request != nil {
		in, out := &in.Request, &out.Request
		*out = new(string)
		**out = **in
	}
	if in.Response != nil {
		in, out := &in.Response, &out.Response
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SSLHealthCheckObservation.
func (in *SSLHealthCheckObservation) DeepCopy() *SSLHealthCheckObservation {
	if in == nil {
		return nil
	}
	out := new(SSLHealthCheckObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SSLHealthCheckParameters) DeepCopyInto(out *SSLHealthCheckParameters) {
	*out = *in
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
	if in.PortName != nil {
		in, out := &in.PortName, &out.PortName
		*out = new(string)
		**out = **in
	}
	if in.PortSpecification != nil {
		in, out := &in.PortSpecification, &out.PortSpecification
		*out = new(string)
		**out = **in
	}
	if in.ProxyHeader != nil {
		in, out := &in.ProxyHeader, &out.ProxyHeader
		*out = new(string)
		**out = **in
	}
	if in.Request != nil {
		in, out := &in.Request, &out.Request
		*out = new(string)
		**out = **in
	}
	if in.Response != nil {
		in, out := &in.Response, &out.Response
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SSLHealthCheckParameters.
func (in *SSLHealthCheckParameters) DeepCopy() *SSLHealthCheckParameters {
	if in == nil {
		return nil
	}
	out := new(SSLHealthCheckParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SSLPolicy) DeepCopyInto(out *SSLPolicy) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SSLPolicy.
func (in *SSLPolicy) DeepCopy() *SSLPolicy {
	if in == nil {
		return nil
	}
	out := new(SSLPolicy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SSLPolicy) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SSLPolicyInitParameters) DeepCopyInto(out *SSLPolicyInitParameters) {
	*out = *in
	if in.CustomFeatures != nil {
		in, out := &in.CustomFeatures, &out.CustomFeatures
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.MinTLSVersion != nil {
		in, out := &in.MinTLSVersion, &out.MinTLSVersion
		*out = new(string)
		**out = **in
	}
	if in.Profile != nil {
		in, out := &in.Profile, &out.Profile
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SSLPolicyInitParameters.
func (in *SSLPolicyInitParameters) DeepCopy() *SSLPolicyInitParameters {
	if in == nil {
		return nil
	}
	out := new(SSLPolicyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SSLPolicyList) DeepCopyInto(out *SSLPolicyList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]SSLPolicy, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SSLPolicyList.
func (in *SSLPolicyList) DeepCopy() *SSLPolicyList {
	if in == nil {
		return nil
	}
	out := new(SSLPolicyList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SSLPolicyList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SSLPolicyObservation) DeepCopyInto(out *SSLPolicyObservation) {
	*out = *in
	if in.CreationTimestamp != nil {
		in, out := &in.CreationTimestamp, &out.CreationTimestamp
		*out = new(string)
		**out = **in
	}
	if in.CustomFeatures != nil {
		in, out := &in.CustomFeatures, &out.CustomFeatures
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.EnabledFeatures != nil {
		in, out := &in.EnabledFeatures, &out.EnabledFeatures
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Fingerprint != nil {
		in, out := &in.Fingerprint, &out.Fingerprint
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.MinTLSVersion != nil {
		in, out := &in.MinTLSVersion, &out.MinTLSVersion
		*out = new(string)
		**out = **in
	}
	if in.Profile != nil {
		in, out := &in.Profile, &out.Profile
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.SelfLink != nil {
		in, out := &in.SelfLink, &out.SelfLink
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SSLPolicyObservation.
func (in *SSLPolicyObservation) DeepCopy() *SSLPolicyObservation {
	if in == nil {
		return nil
	}
	out := new(SSLPolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SSLPolicyParameters) DeepCopyInto(out *SSLPolicyParameters) {
	*out = *in
	if in.CustomFeatures != nil {
		in, out := &in.CustomFeatures, &out.CustomFeatures
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.MinTLSVersion != nil {
		in, out := &in.MinTLSVersion, &out.MinTLSVersion
		*out = new(string)
		**out = **in
	}
	if in.Profile != nil {
		in, out := &in.Profile, &out.Profile
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SSLPolicyParameters.
func (in *SSLPolicyParameters) DeepCopy() *SSLPolicyParameters {
	if in == nil {
		return nil
	}
	out := new(SSLPolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SSLPolicySpec) DeepCopyInto(out *SSLPolicySpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SSLPolicySpec.
func (in *SSLPolicySpec) DeepCopy() *SSLPolicySpec {
	if in == nil {
		return nil
	}
	out := new(SSLPolicySpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SSLPolicyStatus) DeepCopyInto(out *SSLPolicyStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SSLPolicyStatus.
func (in *SSLPolicyStatus) DeepCopy() *SSLPolicyStatus {
	if in == nil {
		return nil
	}
	out := new(SSLPolicyStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScaleInControlInitParameters) DeepCopyInto(out *ScaleInControlInitParameters) {
	*out = *in
	if in.MaxScaledInReplicas != nil {
		in, out := &in.MaxScaledInReplicas, &out.MaxScaledInReplicas
		*out = make([]MaxScaledInReplicasInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TimeWindowSec != nil {
		in, out := &in.TimeWindowSec, &out.TimeWindowSec
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScaleInControlInitParameters.
func (in *ScaleInControlInitParameters) DeepCopy() *ScaleInControlInitParameters {
	if in == nil {
		return nil
	}
	out := new(ScaleInControlInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScaleInControlMaxScaledInReplicasInitParameters) DeepCopyInto(out *ScaleInControlMaxScaledInReplicasInitParameters) {
	*out = *in
	if in.Fixed != nil {
		in, out := &in.Fixed, &out.Fixed
		*out = new(float64)
		**out = **in
	}
	if in.Percent != nil {
		in, out := &in.Percent, &out.Percent
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScaleInControlMaxScaledInReplicasInitParameters.
func (in *ScaleInControlMaxScaledInReplicasInitParameters) DeepCopy() *ScaleInControlMaxScaledInReplicasInitParameters {
	if in == nil {
		return nil
	}
	out := new(ScaleInControlMaxScaledInReplicasInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScaleInControlMaxScaledInReplicasObservation) DeepCopyInto(out *ScaleInControlMaxScaledInReplicasObservation) {
	*out = *in
	if in.Fixed != nil {
		in, out := &in.Fixed, &out.Fixed
		*out = new(float64)
		**out = **in
	}
	if in.Percent != nil {
		in, out := &in.Percent, &out.Percent
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScaleInControlMaxScaledInReplicasObservation.
func (in *ScaleInControlMaxScaledInReplicasObservation) DeepCopy() *ScaleInControlMaxScaledInReplicasObservation {
	if in == nil {
		return nil
	}
	out := new(ScaleInControlMaxScaledInReplicasObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScaleInControlMaxScaledInReplicasParameters) DeepCopyInto(out *ScaleInControlMaxScaledInReplicasParameters) {
	*out = *in
	if in.Fixed != nil {
		in, out := &in.Fixed, &out.Fixed
		*out = new(float64)
		**out = **in
	}
	if in.Percent != nil {
		in, out := &in.Percent, &out.Percent
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScaleInControlMaxScaledInReplicasParameters.
func (in *ScaleInControlMaxScaledInReplicasParameters) DeepCopy() *ScaleInControlMaxScaledInReplicasParameters {
	if in == nil {
		return nil
	}
	out := new(ScaleInControlMaxScaledInReplicasParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScaleInControlObservation) DeepCopyInto(out *ScaleInControlObservation) {
	*out = *in
	if in.MaxScaledInReplicas != nil {
		in, out := &in.MaxScaledInReplicas, &out.MaxScaledInReplicas
		*out = make([]MaxScaledInReplicasObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TimeWindowSec != nil {
		in, out := &in.TimeWindowSec, &out.TimeWindowSec
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScaleInControlObservation.
func (in *ScaleInControlObservation) DeepCopy() *ScaleInControlObservation {
	if in == nil {
		return nil
	}
	out := new(ScaleInControlObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScaleInControlParameters) DeepCopyInto(out *ScaleInControlParameters) {
	*out = *in
	if in.MaxScaledInReplicas != nil {
		in, out := &in.MaxScaledInReplicas, &out.MaxScaledInReplicas
		*out = make([]MaxScaledInReplicasParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TimeWindowSec != nil {
		in, out := &in.TimeWindowSec, &out.TimeWindowSec
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScaleInControlParameters.
func (in *ScaleInControlParameters) DeepCopy() *ScaleInControlParameters {
	if in == nil {
		return nil
	}
	out := new(ScaleInControlParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScalingSchedulesInitParameters) DeepCopyInto(out *ScalingSchedulesInitParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Disabled != nil {
		in, out := &in.Disabled, &out.Disabled
		*out = new(bool)
		**out = **in
	}
	if in.DurationSec != nil {
		in, out := &in.DurationSec, &out.DurationSec
		*out = new(float64)
		**out = **in
	}
	if in.MinRequiredReplicas != nil {
		in, out := &in.MinRequiredReplicas, &out.MinRequiredReplicas
		*out = new(float64)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Schedule != nil {
		in, out := &in.Schedule, &out.Schedule
		*out = new(string)
		**out = **in
	}
	if in.TimeZone != nil {
		in, out := &in.TimeZone, &out.TimeZone
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScalingSchedulesInitParameters.
func (in *ScalingSchedulesInitParameters) DeepCopy() *ScalingSchedulesInitParameters {
	if in == nil {
		return nil
	}
	out := new(ScalingSchedulesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScalingSchedulesObservation) DeepCopyInto(out *ScalingSchedulesObservation) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Disabled != nil {
		in, out := &in.Disabled, &out.Disabled
		*out = new(bool)
		**out = **in
	}
	if in.DurationSec != nil {
		in, out := &in.DurationSec, &out.DurationSec
		*out = new(float64)
		**out = **in
	}
	if in.MinRequiredReplicas != nil {
		in, out := &in.MinRequiredReplicas, &out.MinRequiredReplicas
		*out = new(float64)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Schedule != nil {
		in, out := &in.Schedule, &out.Schedule
		*out = new(string)
		**out = **in
	}
	if in.TimeZone != nil {
		in, out := &in.TimeZone, &out.TimeZone
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScalingSchedulesObservation.
func (in *ScalingSchedulesObservation) DeepCopy() *ScalingSchedulesObservation {
	if in == nil {
		return nil
	}
	out := new(ScalingSchedulesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScalingSchedulesParameters) DeepCopyInto(out *ScalingSchedulesParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Disabled != nil {
		in, out := &in.Disabled, &out.Disabled
		*out = new(bool)
		**out = **in
	}
	if in.DurationSec != nil {
		in, out := &in.DurationSec, &out.DurationSec
		*out = new(float64)
		**out = **in
	}
	if in.MinRequiredReplicas != nil {
		in, out := &in.MinRequiredReplicas, &out.MinRequiredReplicas
		*out = new(float64)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Schedule != nil {
		in, out := &in.Schedule, &out.Schedule
		*out = new(string)
		**out = **in
	}
	if in.TimeZone != nil {
		in, out := &in.TimeZone, &out.TimeZone
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScalingSchedulesParameters.
func (in *ScalingSchedulesParameters) DeepCopy() *ScalingSchedulesParameters {
	if in == nil {
		return nil
	}
	out := new(ScalingSchedulesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScheduleInitParameters) DeepCopyInto(out *ScheduleInitParameters) {
	*out = *in
	if in.DailySchedule != nil {
		in, out := &in.DailySchedule, &out.DailySchedule
		*out = make([]DailyScheduleInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HourlySchedule != nil {
		in, out := &in.HourlySchedule, &out.HourlySchedule
		*out = make([]HourlyScheduleInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.WeeklySchedule != nil {
		in, out := &in.WeeklySchedule, &out.WeeklySchedule
		*out = make([]WeeklyScheduleInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScheduleInitParameters.
func (in *ScheduleInitParameters) DeepCopy() *ScheduleInitParameters {
	if in == nil {
		return nil
	}
	out := new(ScheduleInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScheduleObservation) DeepCopyInto(out *ScheduleObservation) {
	*out = *in
	if in.DailySchedule != nil {
		in, out := &in.DailySchedule, &out.DailySchedule
		*out = make([]DailyScheduleObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HourlySchedule != nil {
		in, out := &in.HourlySchedule, &out.HourlySchedule
		*out = make([]HourlyScheduleObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.WeeklySchedule != nil {
		in, out := &in.WeeklySchedule, &out.WeeklySchedule
		*out = make([]WeeklyScheduleObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScheduleObservation.
func (in *ScheduleObservation) DeepCopy() *ScheduleObservation {
	if in == nil {
		return nil
	}
	out := new(ScheduleObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScheduleParameters) DeepCopyInto(out *ScheduleParameters) {
	*out = *in
	if in.DailySchedule != nil {
		in, out := &in.DailySchedule, &out.DailySchedule
		*out = make([]DailyScheduleParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HourlySchedule != nil {
		in, out := &in.HourlySchedule, &out.HourlySchedule
		*out = make([]HourlyScheduleParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.WeeklySchedule != nil {
		in, out := &in.WeeklySchedule, &out.WeeklySchedule
		*out = make([]WeeklyScheduleParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScheduleParameters.
func (in *ScheduleParameters) DeepCopy() *ScheduleParameters {
	if in == nil {
		return nil
	}
	out := new(ScheduleParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SchedulingInitParameters) DeepCopyInto(out *SchedulingInitParameters) {
	*out = *in
	if in.AutomaticRestart != nil {
		in, out := &in.AutomaticRestart, &out.AutomaticRestart
		*out = new(bool)
		**out = **in
	}
	if in.InstanceTerminationAction != nil {
		in, out := &in.InstanceTerminationAction, &out.InstanceTerminationAction
		*out = new(string)
		**out = **in
	}
	if in.LocalSsdRecoveryTimeout != nil {
		in, out := &in.LocalSsdRecoveryTimeout, &out.LocalSsdRecoveryTimeout
		*out = make([]LocalSsdRecoveryTimeoutInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MaxRunDuration != nil {
		in, out := &in.MaxRunDuration, &out.MaxRunDuration
		*out = make([]MaxRunDurationInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MinNodeCpus != nil {
		in, out := &in.MinNodeCpus, &out.MinNodeCpus
		*out = new(float64)
		**out = **in
	}
	if in.NodeAffinities != nil {
		in, out := &in.NodeAffinities, &out.NodeAffinities
		*out = make([]NodeAffinitiesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OnHostMaintenance != nil {
		in, out := &in.OnHostMaintenance, &out.OnHostMaintenance
		*out = new(string)
		**out = **in
	}
	if in.OnInstanceStopAction != nil {
		in, out := &in.OnInstanceStopAction, &out.OnInstanceStopAction
		*out = make([]OnInstanceStopActionInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Preemptible != nil {
		in, out := &in.Preemptible, &out.Preemptible
		*out = new(bool)
		**out = **in
	}
	if in.ProvisioningModel != nil {
		in, out := &in.ProvisioningModel, &out.ProvisioningModel
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SchedulingInitParameters.
func (in *SchedulingInitParameters) DeepCopy() *SchedulingInitParameters {
	if in == nil {
		return nil
	}
	out := new(SchedulingInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SchedulingLocalSsdRecoveryTimeoutInitParameters) DeepCopyInto(out *SchedulingLocalSsdRecoveryTimeoutInitParameters) {
	*out = *in
	if in.Nanos != nil {
		in, out := &in.Nanos, &out.Nanos
		*out = new(float64)
		**out = **in
	}
	if in.Seconds != nil {
		in, out := &in.Seconds, &out.Seconds
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SchedulingLocalSsdRecoveryTimeoutInitParameters.
func (in *SchedulingLocalSsdRecoveryTimeoutInitParameters) DeepCopy() *SchedulingLocalSsdRecoveryTimeoutInitParameters {
	if in == nil {
		return nil
	}
	out := new(SchedulingLocalSsdRecoveryTimeoutInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SchedulingLocalSsdRecoveryTimeoutObservation) DeepCopyInto(out *SchedulingLocalSsdRecoveryTimeoutObservation) {
	*out = *in
	if in.Nanos != nil {
		in, out := &in.Nanos, &out.Nanos
		*out = new(float64)
		**out = **in
	}
	if in.Seconds != nil {
		in, out := &in.Seconds, &out.Seconds
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SchedulingLocalSsdRecoveryTimeoutObservation.
func (in *SchedulingLocalSsdRecoveryTimeoutObservation) DeepCopy() *SchedulingLocalSsdRecoveryTimeoutObservation {
	if in == nil {
		return nil
	}
	out := new(SchedulingLocalSsdRecoveryTimeoutObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SchedulingLocalSsdRecoveryTimeoutParameters) DeepCopyInto(out *SchedulingLocalSsdRecoveryTimeoutParameters) {
	*out = *in
	if in.Nanos != nil {
		in, out := &in.Nanos, &out.Nanos
		*out = new(float64)
		**out = **in
	}
	if in.Seconds != nil {
		in, out := &in.Seconds, &out.Seconds
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SchedulingLocalSsdRecoveryTimeoutParameters.
func (in *SchedulingLocalSsdRecoveryTimeoutParameters) DeepCopy() *SchedulingLocalSsdRecoveryTimeoutParameters {
	if in == nil {
		return nil
	}
	out := new(SchedulingLocalSsdRecoveryTimeoutParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SchedulingMaxRunDurationInitParameters) DeepCopyInto(out *SchedulingMaxRunDurationInitParameters) {
	*out = *in
	if in.Nanos != nil {
		in, out := &in.Nanos, &out.Nanos
		*out = new(float64)
		**out = **in
	}
	if in.Seconds != nil {
		in, out := &in.Seconds, &out.Seconds
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SchedulingMaxRunDurationInitParameters.
func (in *SchedulingMaxRunDurationInitParameters) DeepCopy() *SchedulingMaxRunDurationInitParameters {
	if in == nil {
		return nil
	}
	out := new(SchedulingMaxRunDurationInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SchedulingMaxRunDurationObservation) DeepCopyInto(out *SchedulingMaxRunDurationObservation) {
	*out = *in
	if in.Nanos != nil {
		in, out := &in.Nanos, &out.Nanos
		*out = new(float64)
		**out = **in
	}
	if in.Seconds != nil {
		in, out := &in.Seconds, &out.Seconds
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SchedulingMaxRunDurationObservation.
func (in *SchedulingMaxRunDurationObservation) DeepCopy() *SchedulingMaxRunDurationObservation {
	if in == nil {
		return nil
	}
	out := new(SchedulingMaxRunDurationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SchedulingMaxRunDurationParameters) DeepCopyInto(out *SchedulingMaxRunDurationParameters) {
	*out = *in
	if in.Nanos != nil {
		in, out := &in.Nanos, &out.Nanos
		*out = new(float64)
		**out = **in
	}
	if in.Seconds != nil {
		in, out := &in.Seconds, &out.Seconds
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SchedulingMaxRunDurationParameters.
func (in *SchedulingMaxRunDurationParameters) DeepCopy() *SchedulingMaxRunDurationParameters {
	if in == nil {
		return nil
	}
	out := new(SchedulingMaxRunDurationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SchedulingNodeAffinitiesInitParameters) DeepCopyInto(out *SchedulingNodeAffinitiesInitParameters) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SchedulingNodeAffinitiesInitParameters.
func (in *SchedulingNodeAffinitiesInitParameters) DeepCopy() *SchedulingNodeAffinitiesInitParameters {
	if in == nil {
		return nil
	}
	out := new(SchedulingNodeAffinitiesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SchedulingNodeAffinitiesObservation) DeepCopyInto(out *SchedulingNodeAffinitiesObservation) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SchedulingNodeAffinitiesObservation.
func (in *SchedulingNodeAffinitiesObservation) DeepCopy() *SchedulingNodeAffinitiesObservation {
	if in == nil {
		return nil
	}
	out := new(SchedulingNodeAffinitiesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SchedulingNodeAffinitiesParameters) DeepCopyInto(out *SchedulingNodeAffinitiesParameters) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SchedulingNodeAffinitiesParameters.
func (in *SchedulingNodeAffinitiesParameters) DeepCopy() *SchedulingNodeAffinitiesParameters {
	if in == nil {
		return nil
	}
	out := new(SchedulingNodeAffinitiesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SchedulingObservation) DeepCopyInto(out *SchedulingObservation) {
	*out = *in
	if in.AutomaticRestart != nil {
		in, out := &in.AutomaticRestart, &out.AutomaticRestart
		*out = new(bool)
		**out = **in
	}
	if in.InstanceTerminationAction != nil {
		in, out := &in.InstanceTerminationAction, &out.InstanceTerminationAction
		*out = new(string)
		**out = **in
	}
	if in.LocalSsdRecoveryTimeout != nil {
		in, out := &in.LocalSsdRecoveryTimeout, &out.LocalSsdRecoveryTimeout
		*out = make([]LocalSsdRecoveryTimeoutObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MaxRunDuration != nil {
		in, out := &in.MaxRunDuration, &out.MaxRunDuration
		*out = make([]MaxRunDurationObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MinNodeCpus != nil {
		in, out := &in.MinNodeCpus, &out.MinNodeCpus
		*out = new(float64)
		**out = **in
	}
	if in.NodeAffinities != nil {
		in, out := &in.NodeAffinities, &out.NodeAffinities
		*out = make([]NodeAffinitiesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OnHostMaintenance != nil {
		in, out := &in.OnHostMaintenance, &out.OnHostMaintenance
		*out = new(string)
		**out = **in
	}
	if in.OnInstanceStopAction != nil {
		in, out := &in.OnInstanceStopAction, &out.OnInstanceStopAction
		*out = make([]OnInstanceStopActionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Preemptible != nil {
		in, out := &in.Preemptible, &out.Preemptible
		*out = new(bool)
		**out = **in
	}
	if in.ProvisioningModel != nil {
		in, out := &in.ProvisioningModel, &out.ProvisioningModel
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SchedulingObservation.
func (in *SchedulingObservation) DeepCopy() *SchedulingObservation {
	if in == nil {
		return nil
	}
	out := new(SchedulingObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SchedulingOnInstanceStopActionInitParameters) DeepCopyInto(out *SchedulingOnInstanceStopActionInitParameters) {
	*out = *in
	if in.DiscardLocalSsd != nil {
		in, out := &in.DiscardLocalSsd, &out.DiscardLocalSsd
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SchedulingOnInstanceStopActionInitParameters.
func (in *SchedulingOnInstanceStopActionInitParameters) DeepCopy() *SchedulingOnInstanceStopActionInitParameters {
	if in == nil {
		return nil
	}
	out := new(SchedulingOnInstanceStopActionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SchedulingOnInstanceStopActionObservation) DeepCopyInto(out *SchedulingOnInstanceStopActionObservation) {
	*out = *in
	if in.DiscardLocalSsd != nil {
		in, out := &in.DiscardLocalSsd, &out.DiscardLocalSsd
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SchedulingOnInstanceStopActionObservation.
func (in *SchedulingOnInstanceStopActionObservation) DeepCopy() *SchedulingOnInstanceStopActionObservation {
	if in == nil {
		return nil
	}
	out := new(SchedulingOnInstanceStopActionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SchedulingOnInstanceStopActionParameters) DeepCopyInto(out *SchedulingOnInstanceStopActionParameters) {
	*out = *in
	if in.DiscardLocalSsd != nil {
		in, out := &in.DiscardLocalSsd, &out.DiscardLocalSsd
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SchedulingOnInstanceStopActionParameters.
func (in *SchedulingOnInstanceStopActionParameters) DeepCopy() *SchedulingOnInstanceStopActionParameters {
	if in == nil {
		return nil
	}
	out := new(SchedulingOnInstanceStopActionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SchedulingParameters) DeepCopyInto(out *SchedulingParameters) {
	*out = *in
	if in.AutomaticRestart != nil {
		in, out := &in.AutomaticRestart, &out.AutomaticRestart
		*out = new(bool)
		**out = **in
	}
	if in.InstanceTerminationAction != nil {
		in, out := &in.InstanceTerminationAction, &out.InstanceTerminationAction
		*out = new(string)
		**out = **in
	}
	if in.LocalSsdRecoveryTimeout != nil {
		in, out := &in.LocalSsdRecoveryTimeout, &out.LocalSsdRecoveryTimeout
		*out = make([]LocalSsdRecoveryTimeoutParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MaxRunDuration != nil {
		in, out := &in.MaxRunDuration, &out.MaxRunDuration
		*out = make([]MaxRunDurationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MinNodeCpus != nil {
		in, out := &in.MinNodeCpus, &out.MinNodeCpus
		*out = new(float64)
		**out = **in
	}
	if in.NodeAffinities != nil {
		in, out := &in.NodeAffinities, &out.NodeAffinities
		*out = make([]NodeAffinitiesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OnHostMaintenance != nil {
		in, out := &in.OnHostMaintenance, &out.OnHostMaintenance
		*out = new(string)
		**out = **in
	}
	if in.OnInstanceStopAction != nil {
		in, out := &in.OnInstanceStopAction, &out.OnInstanceStopAction
		*out = make([]OnInstanceStopActionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Preemptible != nil {
		in, out := &in.Preemptible, &out.Preemptible
		*out = new(bool)
		**out = **in
	}
	if in.ProvisioningModel != nil {
		in, out := &in.ProvisioningModel, &out.ProvisioningModel
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SchedulingParameters.
func (in *SchedulingParameters) DeepCopy() *SchedulingParameters {
	if in == nil {
		return nil
	}
	out := new(SchedulingParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScratchDiskInitParameters) DeepCopyInto(out *ScratchDiskInitParameters) {
	*out = *in
	if in.DeviceName != nil {
		in, out := &in.DeviceName, &out.DeviceName
		*out = new(string)
		**out = **in
	}
	if in.Interface != nil {
		in, out := &in.Interface, &out.Interface
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScratchDiskInitParameters.
func (in *ScratchDiskInitParameters) DeepCopy() *ScratchDiskInitParameters {
	if in == nil {
		return nil
	}
	out := new(ScratchDiskInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScratchDiskObservation) DeepCopyInto(out *ScratchDiskObservation) {
	*out = *in
	if in.DeviceName != nil {
		in, out := &in.DeviceName, &out.DeviceName
		*out = new(string)
		**out = **in
	}
	if in.Interface != nil {
		in, out := &in.Interface, &out.Interface
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScratchDiskObservation.
func (in *ScratchDiskObservation) DeepCopy() *ScratchDiskObservation {
	if in == nil {
		return nil
	}
	out := new(ScratchDiskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScratchDiskParameters) DeepCopyInto(out *ScratchDiskParameters) {
	*out = *in
	if in.DeviceName != nil {
		in, out := &in.DeviceName, &out.DeviceName
		*out = new(string)
		**out = **in
	}
	if in.Interface != nil {
		in, out := &in.Interface, &out.Interface
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScratchDiskParameters.
func (in *ScratchDiskParameters) DeepCopy() *ScratchDiskParameters {
	if in == nil {
		return nil
	}
	out := new(ScratchDiskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecondaryIPRangeInitParameters) DeepCopyInto(out *SecondaryIPRangeInitParameters) {
	*out = *in
	if in.IPCidrRange != nil {
		in, out := &in.IPCidrRange, &out.IPCidrRange
		*out = new(string)
		**out = **in
	}
	if in.RangeName != nil {
		in, out := &in.RangeName, &out.RangeName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecondaryIPRangeInitParameters.
func (in *SecondaryIPRangeInitParameters) DeepCopy() *SecondaryIPRangeInitParameters {
	if in == nil {
		return nil
	}
	out := new(SecondaryIPRangeInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecondaryIPRangeObservation) DeepCopyInto(out *SecondaryIPRangeObservation) {
	*out = *in
	if in.IPCidrRange != nil {
		in, out := &in.IPCidrRange, &out.IPCidrRange
		*out = new(string)
		**out = **in
	}
	if in.RangeName != nil {
		in, out := &in.RangeName, &out.RangeName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecondaryIPRangeObservation.
func (in *SecondaryIPRangeObservation) DeepCopy() *SecondaryIPRangeObservation {
	if in == nil {
		return nil
	}
	out := new(SecondaryIPRangeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecondaryIPRangeParameters) DeepCopyInto(out *SecondaryIPRangeParameters) {
	*out = *in
	if in.IPCidrRange != nil {
		in, out := &in.IPCidrRange, &out.IPCidrRange
		*out = new(string)
		**out = **in
	}
	if in.RangeName != nil {
		in, out := &in.RangeName, &out.RangeName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecondaryIPRangeParameters.
func (in *SecondaryIPRangeParameters) DeepCopy() *SecondaryIPRangeParameters {
	if in == nil {
		return nil
	}
	out := new(SecondaryIPRangeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecurityPolicy) DeepCopyInto(out *SecurityPolicy) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecurityPolicy.
func (in *SecurityPolicy) DeepCopy() *SecurityPolicy {
	if in == nil {
		return nil
	}
	out := new(SecurityPolicy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SecurityPolicy) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecurityPolicyInitParameters) DeepCopyInto(out *SecurityPolicyInitParameters) {
	*out = *in
	if in.AdaptiveProtectionConfig != nil {
		in, out := &in.AdaptiveProtectionConfig, &out.AdaptiveProtectionConfig
		*out = make([]AdaptiveProtectionConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AdvancedOptionsConfig != nil {
		in, out := &in.AdvancedOptionsConfig, &out.AdvancedOptionsConfig
		*out = make([]AdvancedOptionsConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.RecaptchaOptionsConfig != nil {
		in, out := &in.RecaptchaOptionsConfig, &out.RecaptchaOptionsConfig
		*out = make([]RecaptchaOptionsConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Rule != nil {
		in, out := &in.Rule, &out.Rule
		*out = make([]RuleInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecurityPolicyInitParameters.
func (in *SecurityPolicyInitParameters) DeepCopy() *SecurityPolicyInitParameters {
	if in == nil {
		return nil
	}
	out := new(SecurityPolicyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecurityPolicyList) DeepCopyInto(out *SecurityPolicyList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]SecurityPolicy, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecurityPolicyList.
func (in *SecurityPolicyList) DeepCopy() *SecurityPolicyList {
	if in == nil {
		return nil
	}
	out := new(SecurityPolicyList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SecurityPolicyList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecurityPolicyObservation) DeepCopyInto(out *SecurityPolicyObservation) {
	*out = *in
	if in.AdaptiveProtectionConfig != nil {
		in, out := &in.AdaptiveProtectionConfig, &out.AdaptiveProtectionConfig
		*out = make([]AdaptiveProtectionConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AdvancedOptionsConfig != nil {
		in, out := &in.AdvancedOptionsConfig, &out.AdvancedOptionsConfig
		*out = make([]AdvancedOptionsConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Fingerprint != nil {
		in, out := &in.Fingerprint, &out.Fingerprint
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.RecaptchaOptionsConfig != nil {
		in, out := &in.RecaptchaOptionsConfig, &out.RecaptchaOptionsConfig
		*out = make([]RecaptchaOptionsConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Rule != nil {
		in, out := &in.Rule, &out.Rule
		*out = make([]RuleObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SelfLink != nil {
		in, out := &in.SelfLink, &out.SelfLink
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecurityPolicyObservation.
func (in *SecurityPolicyObservation) DeepCopy() *SecurityPolicyObservation {
	if in == nil {
		return nil
	}
	out := new(SecurityPolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecurityPolicyParameters) DeepCopyInto(out *SecurityPolicyParameters) {
	*out = *in
	if in.AdaptiveProtectionConfig != nil {
		in, out := &in.AdaptiveProtectionConfig, &out.AdaptiveProtectionConfig
		*out = make([]AdaptiveProtectionConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AdvancedOptionsConfig != nil {
		in, out := &in.AdvancedOptionsConfig, &out.AdvancedOptionsConfig
		*out = make([]AdvancedOptionsConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.RecaptchaOptionsConfig != nil {
		in, out := &in.RecaptchaOptionsConfig, &out.RecaptchaOptionsConfig
		*out = make([]RecaptchaOptionsConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Rule != nil {
		in, out := &in.Rule, &out.Rule
		*out = make([]RuleParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecurityPolicyParameters.
func (in *SecurityPolicyParameters) DeepCopy() *SecurityPolicyParameters {
	if in == nil {
		return nil
	}
	out := new(SecurityPolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecurityPolicySpec) DeepCopyInto(out *SecurityPolicySpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecurityPolicySpec.
func (in *SecurityPolicySpec) DeepCopy() *SecurityPolicySpec {
	if in == nil {
		return nil
	}
	out := new(SecurityPolicySpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecurityPolicyStatus) DeepCopyInto(out *SecurityPolicyStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecurityPolicyStatus.
func (in *SecurityPolicyStatus) DeepCopy() *SecurityPolicyStatus {
	if in == nil {
		return nil
	}
	out := new(SecurityPolicyStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecuritySettingsInitParameters) DeepCopyInto(out *SecuritySettingsInitParameters) {
	*out = *in
	if in.AwsV4Authentication != nil {
		in, out := &in.AwsV4Authentication, &out.AwsV4Authentication
		*out = make([]AwsV4AuthenticationInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClientTLSPolicy != nil {
		in, out := &in.ClientTLSPolicy, &out.ClientTLSPolicy
		*out = new(string)
		**out = **in
	}
	if in.SubjectAltNames != nil {
		in, out := &in.SubjectAltNames, &out.SubjectAltNames
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecuritySettingsInitParameters.
func (in *SecuritySettingsInitParameters) DeepCopy() *SecuritySettingsInitParameters {
	if in == nil {
		return nil
	}
	out := new(SecuritySettingsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecuritySettingsObservation) DeepCopyInto(out *SecuritySettingsObservation) {
	*out = *in
	if in.AwsV4Authentication != nil {
		in, out := &in.AwsV4Authentication, &out.AwsV4Authentication
		*out = make([]AwsV4AuthenticationObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClientTLSPolicy != nil {
		in, out := &in.ClientTLSPolicy, &out.ClientTLSPolicy
		*out = new(string)
		**out = **in
	}
	if in.SubjectAltNames != nil {
		in, out := &in.SubjectAltNames, &out.SubjectAltNames
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecuritySettingsObservation.
func (in *SecuritySettingsObservation) DeepCopy() *SecuritySettingsObservation {
	if in == nil {
		return nil
	}
	out := new(SecuritySettingsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecuritySettingsParameters) DeepCopyInto(out *SecuritySettingsParameters) {
	*out = *in
	if in.AwsV4Authentication != nil {
		in, out := &in.AwsV4Authentication, &out.AwsV4Authentication
		*out = make([]AwsV4AuthenticationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClientTLSPolicy != nil {
		in, out := &in.ClientTLSPolicy, &out.ClientTLSPolicy
		*out = new(string)
		**out = **in
	}
	if in.SubjectAltNames != nil {
		in, out := &in.SubjectAltNames, &out.SubjectAltNames
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecuritySettingsParameters.
func (in *SecuritySettingsParameters) DeepCopy() *SecuritySettingsParameters {
	if in == nil {
		return nil
	}
	out := new(SecuritySettingsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServerBindingInitParameters) DeepCopyInto(out *ServerBindingInitParameters) {
	*out = *in
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServerBindingInitParameters.
func (in *ServerBindingInitParameters) DeepCopy() *ServerBindingInitParameters {
	if in == nil {
		return nil
	}
	out := new(ServerBindingInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServerBindingObservation) DeepCopyInto(out *ServerBindingObservation) {
	*out = *in
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServerBindingObservation.
func (in *ServerBindingObservation) DeepCopy() *ServerBindingObservation {
	if in == nil {
		return nil
	}
	out := new(ServerBindingObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServerBindingParameters) DeepCopyInto(out *ServerBindingParameters) {
	*out = *in
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServerBindingParameters.
func (in *ServerBindingParameters) DeepCopy() *ServerBindingParameters {
	if in == nil {
		return nil
	}
	out := new(ServerBindingParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceAccountInitParameters) DeepCopyInto(out *ServiceAccountInitParameters) {
	*out = *in
	if in.Email != nil {
		in, out := &in.Email, &out.Email
		*out = new(string)
		**out = **in
	}
	if in.EmailRef != nil {
		in, out := &in.EmailRef, &out.EmailRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.EmailSelector != nil {
		in, out := &in.EmailSelector, &out.EmailSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Scopes != nil {
		in, out := &in.Scopes, &out.Scopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceAccountInitParameters.
func (in *ServiceAccountInitParameters) DeepCopy() *ServiceAccountInitParameters {
	if in == nil {
		return nil
	}
	out := new(ServiceAccountInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceAccountObservation) DeepCopyInto(out *ServiceAccountObservation) {
	*out = *in
	if in.Email != nil {
		in, out := &in.Email, &out.Email
		*out = new(string)
		**out = **in
	}
	if in.Scopes != nil {
		in, out := &in.Scopes, &out.Scopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceAccountObservation.
func (in *ServiceAccountObservation) DeepCopy() *ServiceAccountObservation {
	if in == nil {
		return nil
	}
	out := new(ServiceAccountObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceAccountParameters) DeepCopyInto(out *ServiceAccountParameters) {
	*out = *in
	if in.Email != nil {
		in, out := &in.Email, &out.Email
		*out = new(string)
		**out = **in
	}
	if in.EmailRef != nil {
		in, out := &in.EmailRef, &out.EmailRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.EmailSelector != nil {
		in, out := &in.EmailSelector, &out.EmailSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Scopes != nil {
		in, out := &in.Scopes, &out.Scopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceAccountParameters.
func (in *ServiceAccountParameters) DeepCopy() *ServiceAccountParameters {
	if in == nil {
		return nil
	}
	out := new(ServiceAccountParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceAttachment) DeepCopyInto(out *ServiceAttachment) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceAttachment.
func (in *ServiceAttachment) DeepCopy() *ServiceAttachment {
	if in == nil {
		return nil
	}
	out := new(ServiceAttachment)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ServiceAttachment) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceAttachmentInitParameters) DeepCopyInto(out *ServiceAttachmentInitParameters) {
	*out = *in
	if in.ConnectionPreference != nil {
		in, out := &in.ConnectionPreference, &out.ConnectionPreference
		*out = new(string)
		**out = **in
	}
	if in.ConsumerAcceptLists != nil {
		in, out := &in.ConsumerAcceptLists, &out.ConsumerAcceptLists
		*out = make([]ConsumerAcceptListsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ConsumerRejectLists != nil {
		in, out := &in.ConsumerRejectLists, &out.ConsumerRejectLists
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DomainNames != nil {
		in, out := &in.DomainNames, &out.DomainNames
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.EnableProxyProtocol != nil {
		in, out := &in.EnableProxyProtocol, &out.EnableProxyProtocol
		*out = new(bool)
		**out = **in
	}
	if in.NATSubnets != nil {
		in, out := &in.NATSubnets, &out.NATSubnets
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.NATSubnetsRefs != nil {
		in, out := &in.NATSubnetsRefs, &out.NATSubnetsRefs
		*out = make([]v1.Reference, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NATSubnetsSelector != nil {
		in, out := &in.NATSubnetsSelector, &out.NATSubnetsSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.ReconcileConnections != nil {
		in, out := &in.ReconcileConnections, &out.ReconcileConnections
		*out = new(bool)
		**out = **in
	}
	if in.TargetService != nil {
		in, out := &in.TargetService, &out.TargetService
		*out = new(string)
		**out = **in
	}
	if in.TargetServiceRef != nil {
		in, out := &in.TargetServiceRef, &out.TargetServiceRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.TargetServiceSelector != nil {
		in, out := &in.TargetServiceSelector, &out.TargetServiceSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceAttachmentInitParameters.
func (in *ServiceAttachmentInitParameters) DeepCopy() *ServiceAttachmentInitParameters {
	if in == nil {
		return nil
	}
	out := new(ServiceAttachmentInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceAttachmentList) DeepCopyInto(out *ServiceAttachmentList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ServiceAttachment, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceAttachmentList.
func (in *ServiceAttachmentList) DeepCopy() *ServiceAttachmentList {
	if in == nil {
		return nil
	}
	out := new(ServiceAttachmentList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ServiceAttachmentList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceAttachmentObservation) DeepCopyInto(out *ServiceAttachmentObservation) {
	*out = *in
	if in.ConnectedEndpoints != nil {
		in, out := &in.ConnectedEndpoints, &out.ConnectedEndpoints
		*out = make([]ConnectedEndpointsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ConnectionPreference != nil {
		in, out := &in.ConnectionPreference, &out.ConnectionPreference
		*out = new(string)
		**out = **in
	}
	if in.ConsumerAcceptLists != nil {
		in, out := &in.ConsumerAcceptLists, &out.ConsumerAcceptLists
		*out = make([]ConsumerAcceptListsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ConsumerRejectLists != nil {
		in, out := &in.ConsumerRejectLists, &out.ConsumerRejectLists
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DomainNames != nil {
		in, out := &in.DomainNames, &out.DomainNames
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.EnableProxyProtocol != nil {
		in, out := &in.EnableProxyProtocol, &out.EnableProxyProtocol
		*out = new(bool)
		**out = **in
	}
	if in.Fingerprint != nil {
		in, out := &in.Fingerprint, &out.Fingerprint
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.NATSubnets != nil {
		in, out := &in.NATSubnets, &out.NATSubnets
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.ReconcileConnections != nil {
		in, out := &in.ReconcileConnections, &out.ReconcileConnections
		*out = new(bool)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.SelfLink != nil {
		in, out := &in.SelfLink, &out.SelfLink
		*out = new(string)
		**out = **in
	}
	if in.TargetService != nil {
		in, out := &in.TargetService, &out.TargetService
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceAttachmentObservation.
func (in *ServiceAttachmentObservation) DeepCopy() *ServiceAttachmentObservation {
	if in == nil {
		return nil
	}
	out := new(ServiceAttachmentObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceAttachmentParameters) DeepCopyInto(out *ServiceAttachmentParameters) {
	*out = *in
	if in.ConnectionPreference != nil {
		in, out := &in.ConnectionPreference, &out.ConnectionPreference
		*out = new(string)
		**out = **in
	}
	if in.ConsumerAcceptLists != nil {
		in, out := &in.ConsumerAcceptLists, &out.ConsumerAcceptLists
		*out = make([]ConsumerAcceptListsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ConsumerRejectLists != nil {
		in, out := &in.ConsumerRejectLists, &out.ConsumerRejectLists
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DomainNames != nil {
		in, out := &in.DomainNames, &out.DomainNames
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.EnableProxyProtocol != nil {
		in, out := &in.EnableProxyProtocol, &out.EnableProxyProtocol
		*out = new(bool)
		**out = **in
	}
	if in.NATSubnets != nil {
		in, out := &in.NATSubnets, &out.NATSubnets
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.NATSubnetsRefs != nil {
		in, out := &in.NATSubnetsRefs, &out.NATSubnetsRefs
		*out = make([]v1.Reference, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NATSubnetsSelector != nil {
		in, out := &in.NATSubnetsSelector, &out.NATSubnetsSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.ReconcileConnections != nil {
		in, out := &in.ReconcileConnections, &out.ReconcileConnections
		*out = new(bool)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.TargetService != nil {
		in, out := &in.TargetService, &out.TargetService
		*out = new(string)
		**out = **in
	}
	if in.TargetServiceRef != nil {
		in, out := &in.TargetServiceRef, &out.TargetServiceRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.TargetServiceSelector != nil {
		in, out := &in.TargetServiceSelector, &out.TargetServiceSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceAttachmentParameters.
func (in *ServiceAttachmentParameters) DeepCopy() *ServiceAttachmentParameters {
	if in == nil {
		return nil
	}
	out := new(ServiceAttachmentParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceAttachmentSpec) DeepCopyInto(out *ServiceAttachmentSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceAttachmentSpec.
func (in *ServiceAttachmentSpec) DeepCopy() *ServiceAttachmentSpec {
	if in == nil {
		return nil
	}
	out := new(ServiceAttachmentSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceAttachmentStatus) DeepCopyInto(out *ServiceAttachmentStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceAttachmentStatus.
func (in *ServiceAttachmentStatus) DeepCopy() *ServiceAttachmentStatus {
	if in == nil {
		return nil
	}
	out := new(ServiceAttachmentStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceDirectoryRegistrationsInitParameters) DeepCopyInto(out *ServiceDirectoryRegistrationsInitParameters) {
	*out = *in
	if in.Namespace != nil {
		in, out := &in.Namespace, &out.Namespace
		*out = new(string)
		**out = **in
	}
	if in.Service != nil {
		in, out := &in.Service, &out.Service
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceDirectoryRegistrationsInitParameters.
func (in *ServiceDirectoryRegistrationsInitParameters) DeepCopy() *ServiceDirectoryRegistrationsInitParameters {
	if in == nil {
		return nil
	}
	out := new(ServiceDirectoryRegistrationsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceDirectoryRegistrationsObservation) DeepCopyInto(out *ServiceDirectoryRegistrationsObservation) {
	*out = *in
	if in.Namespace != nil {
		in, out := &in.Namespace, &out.Namespace
		*out = new(string)
		**out = **in
	}
	if in.Service != nil {
		in, out := &in.Service, &out.Service
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceDirectoryRegistrationsObservation.
func (in *ServiceDirectoryRegistrationsObservation) DeepCopy() *ServiceDirectoryRegistrationsObservation {
	if in == nil {
		return nil
	}
	out := new(ServiceDirectoryRegistrationsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceDirectoryRegistrationsParameters) DeepCopyInto(out *ServiceDirectoryRegistrationsParameters) {
	*out = *in
	if in.Namespace != nil {
		in, out := &in.Namespace, &out.Namespace
		*out = new(string)
		**out = **in
	}
	if in.Service != nil {
		in, out := &in.Service, &out.Service
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceDirectoryRegistrationsParameters.
func (in *ServiceDirectoryRegistrationsParameters) DeepCopy() *ServiceDirectoryRegistrationsParameters {
	if in == nil {
		return nil
	}
	out := new(ServiceDirectoryRegistrationsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ShareSettingsInitParameters) DeepCopyInto(out *ShareSettingsInitParameters) {
	*out = *in
	if in.ProjectMap != nil {
		in, out := &in.ProjectMap, &out.ProjectMap
		*out = make([]ProjectMapInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ShareType != nil {
		in, out := &in.ShareType, &out.ShareType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ShareSettingsInitParameters.
func (in *ShareSettingsInitParameters) DeepCopy() *ShareSettingsInitParameters {
	if in == nil {
		return nil
	}
	out := new(ShareSettingsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ShareSettingsObservation) DeepCopyInto(out *ShareSettingsObservation) {
	*out = *in
	if in.ProjectMap != nil {
		in, out := &in.ProjectMap, &out.ProjectMap
		*out = make([]ProjectMapObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ShareType != nil {
		in, out := &in.ShareType, &out.ShareType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ShareSettingsObservation.
func (in *ShareSettingsObservation) DeepCopy() *ShareSettingsObservation {
	if in == nil {
		return nil
	}
	out := new(ShareSettingsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ShareSettingsParameters) DeepCopyInto(out *ShareSettingsParameters) {
	*out = *in
	if in.ProjectMap != nil {
		in, out := &in.ProjectMap, &out.ProjectMap
		*out = make([]ProjectMapParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ShareType != nil {
		in, out := &in.ShareType, &out.ShareType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ShareSettingsParameters.
func (in *ShareSettingsParameters) DeepCopy() *ShareSettingsParameters {
	if in == nil {
		return nil
	}
	out := new(ShareSettingsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ShareSettingsProjectMapInitParameters) DeepCopyInto(out *ShareSettingsProjectMapInitParameters) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.ProjectID != nil {
		in, out := &in.ProjectID, &out.ProjectID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ShareSettingsProjectMapInitParameters.
func (in *ShareSettingsProjectMapInitParameters) DeepCopy() *ShareSettingsProjectMapInitParameters {
	if in == nil {
		return nil
	}
	out := new(ShareSettingsProjectMapInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ShareSettingsProjectMapObservation) DeepCopyInto(out *ShareSettingsProjectMapObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.ProjectID != nil {
		in, out := &in.ProjectID, &out.ProjectID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ShareSettingsProjectMapObservation.
func (in *ShareSettingsProjectMapObservation) DeepCopy() *ShareSettingsProjectMapObservation {
	if in == nil {
		return nil
	}
	out := new(ShareSettingsProjectMapObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ShareSettingsProjectMapParameters) DeepCopyInto(out *ShareSettingsProjectMapParameters) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.ProjectID != nil {
		in, out := &in.ProjectID, &out.ProjectID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ShareSettingsProjectMapParameters.
func (in *ShareSettingsProjectMapParameters) DeepCopy() *ShareSettingsProjectMapParameters {
	if in == nil {
		return nil
	}
	out := new(ShareSettingsProjectMapParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SharedVPCHostProject) DeepCopyInto(out *SharedVPCHostProject) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SharedVPCHostProject.
func (in *SharedVPCHostProject) DeepCopy() *SharedVPCHostProject {
	if in == nil {
		return nil
	}
	out := new(SharedVPCHostProject)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SharedVPCHostProject) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SharedVPCHostProjectInitParameters) DeepCopyInto(out *SharedVPCHostProjectInitParameters) {
	*out = *in
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.ProjectRef != nil {
		in, out := &in.ProjectRef, &out.ProjectRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ProjectSelector != nil {
		in, out := &in.ProjectSelector, &out.ProjectSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SharedVPCHostProjectInitParameters.
func (in *SharedVPCHostProjectInitParameters) DeepCopy() *SharedVPCHostProjectInitParameters {
	if in == nil {
		return nil
	}
	out := new(SharedVPCHostProjectInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SharedVPCHostProjectList) DeepCopyInto(out *SharedVPCHostProjectList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]SharedVPCHostProject, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SharedVPCHostProjectList.
func (in *SharedVPCHostProjectList) DeepCopy() *SharedVPCHostProjectList {
	if in == nil {
		return nil
	}
	out := new(SharedVPCHostProjectList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SharedVPCHostProjectList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SharedVPCHostProjectObservation) DeepCopyInto(out *SharedVPCHostProjectObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SharedVPCHostProjectObservation.
func (in *SharedVPCHostProjectObservation) DeepCopy() *SharedVPCHostProjectObservation {
	if in == nil {
		return nil
	}
	out := new(SharedVPCHostProjectObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SharedVPCHostProjectParameters) DeepCopyInto(out *SharedVPCHostProjectParameters) {
	*out = *in
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.ProjectRef != nil {
		in, out := &in.ProjectRef, &out.ProjectRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ProjectSelector != nil {
		in, out := &in.ProjectSelector, &out.ProjectSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SharedVPCHostProjectParameters.
func (in *SharedVPCHostProjectParameters) DeepCopy() *SharedVPCHostProjectParameters {
	if in == nil {
		return nil
	}
	out := new(SharedVPCHostProjectParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SharedVPCHostProjectSpec) DeepCopyInto(out *SharedVPCHostProjectSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SharedVPCHostProjectSpec.
func (in *SharedVPCHostProjectSpec) DeepCopy() *SharedVPCHostProjectSpec {
	if in == nil {
		return nil
	}
	out := new(SharedVPCHostProjectSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SharedVPCHostProjectStatus) DeepCopyInto(out *SharedVPCHostProjectStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SharedVPCHostProjectStatus.
func (in *SharedVPCHostProjectStatus) DeepCopy() *SharedVPCHostProjectStatus {
	if in == nil {
		return nil
	}
	out := new(SharedVPCHostProjectStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SharedVPCServiceProject) DeepCopyInto(out *SharedVPCServiceProject) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SharedVPCServiceProject.
func (in *SharedVPCServiceProject) DeepCopy() *SharedVPCServiceProject {
	if in == nil {
		return nil
	}
	out := new(SharedVPCServiceProject)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SharedVPCServiceProject) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SharedVPCServiceProjectInitParameters) DeepCopyInto(out *SharedVPCServiceProjectInitParameters) {
	*out = *in
	if in.DeletionPolicy != nil {
		in, out := &in.DeletionPolicy, &out.DeletionPolicy
		*out = new(string)
		**out = **in
	}
	if in.HostProject != nil {
		in, out := &in.HostProject, &out.HostProject
		*out = new(string)
		**out = **in
	}
	if in.HostProjectRef != nil {
		in, out := &in.HostProjectRef, &out.HostProjectRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.HostProjectSelector != nil {
		in, out := &in.HostProjectSelector, &out.HostProjectSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.ServiceProject != nil {
		in, out := &in.ServiceProject, &out.ServiceProject
		*out = new(string)
		**out = **in
	}
	if in.ServiceProjectRef != nil {
		in, out := &in.ServiceProjectRef, &out.ServiceProjectRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ServiceProjectSelector != nil {
		in, out := &in.ServiceProjectSelector, &out.ServiceProjectSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SharedVPCServiceProjectInitParameters.
func (in *SharedVPCServiceProjectInitParameters) DeepCopy() *SharedVPCServiceProjectInitParameters {
	if in == nil {
		return nil
	}
	out := new(SharedVPCServiceProjectInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SharedVPCServiceProjectList) DeepCopyInto(out *SharedVPCServiceProjectList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]SharedVPCServiceProject, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SharedVPCServiceProjectList.
func (in *SharedVPCServiceProjectList) DeepCopy() *SharedVPCServiceProjectList {
	if in == nil {
		return nil
	}
	out := new(SharedVPCServiceProjectList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SharedVPCServiceProjectList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SharedVPCServiceProjectObservation) DeepCopyInto(out *SharedVPCServiceProjectObservation) {
	*out = *in
	if in.DeletionPolicy != nil {
		in, out := &in.DeletionPolicy, &out.DeletionPolicy
		*out = new(string)
		**out = **in
	}
	if in.HostProject != nil {
		in, out := &in.HostProject, &out.HostProject
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.ServiceProject != nil {
		in, out := &in.ServiceProject, &out.ServiceProject
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SharedVPCServiceProjectObservation.
func (in *SharedVPCServiceProjectObservation) DeepCopy() *SharedVPCServiceProjectObservation {
	if in == nil {
		return nil
	}
	out := new(SharedVPCServiceProjectObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SharedVPCServiceProjectParameters) DeepCopyInto(out *SharedVPCServiceProjectParameters) {
	*out = *in
	if in.DeletionPolicy != nil {
		in, out := &in.DeletionPolicy, &out.DeletionPolicy
		*out = new(string)
		**out = **in
	}
	if in.HostProject != nil {
		in, out := &in.HostProject, &out.HostProject
		*out = new(string)
		**out = **in
	}
	if in.HostProjectRef != nil {
		in, out := &in.HostProjectRef, &out.HostProjectRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.HostProjectSelector != nil {
		in, out := &in.HostProjectSelector, &out.HostProjectSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.ServiceProject != nil {
		in, out := &in.ServiceProject, &out.ServiceProject
		*out = new(string)
		**out = **in
	}
	if in.ServiceProjectRef != nil {
		in, out := &in.ServiceProjectRef, &out.ServiceProjectRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ServiceProjectSelector != nil {
		in, out := &in.ServiceProjectSelector, &out.ServiceProjectSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SharedVPCServiceProjectParameters.
func (in *SharedVPCServiceProjectParameters) DeepCopy() *SharedVPCServiceProjectParameters {
	if in == nil {
		return nil
	}
	out := new(SharedVPCServiceProjectParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SharedVPCServiceProjectSpec) DeepCopyInto(out *SharedVPCServiceProjectSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SharedVPCServiceProjectSpec.
func (in *SharedVPCServiceProjectSpec) DeepCopy() *SharedVPCServiceProjectSpec {
	if in == nil {
		return nil
	}
	out := new(SharedVPCServiceProjectSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SharedVPCServiceProjectStatus) DeepCopyInto(out *SharedVPCServiceProjectStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SharedVPCServiceProjectStatus.
func (in *SharedVPCServiceProjectStatus) DeepCopy() *SharedVPCServiceProjectStatus {
	if in == nil {
		return nil
	}
	out := new(SharedVPCServiceProjectStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ShieldedInstanceConfigInitParameters) DeepCopyInto(out *ShieldedInstanceConfigInitParameters) {
	*out = *in
	if in.EnableIntegrityMonitoring != nil {
		in, out := &in.EnableIntegrityMonitoring, &out.EnableIntegrityMonitoring
		*out = new(bool)
		**out = **in
	}
	if in.EnableSecureBoot != nil {
		in, out := &in.EnableSecureBoot, &out.EnableSecureBoot
		*out = new(bool)
		**out = **in
	}
	if in.EnableVtpm != nil {
		in, out := &in.EnableVtpm, &out.EnableVtpm
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ShieldedInstanceConfigInitParameters.
func (in *ShieldedInstanceConfigInitParameters) DeepCopy() *ShieldedInstanceConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(ShieldedInstanceConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ShieldedInstanceConfigObservation) DeepCopyInto(out *ShieldedInstanceConfigObservation) {
	*out = *in
	if in.EnableIntegrityMonitoring != nil {
		in, out := &in.EnableIntegrityMonitoring, &out.EnableIntegrityMonitoring
		*out = new(bool)
		**out = **in
	}
	if in.EnableSecureBoot != nil {
		in, out := &in.EnableSecureBoot, &out.EnableSecureBoot
		*out = new(bool)
		**out = **in
	}
	if in.EnableVtpm != nil {
		in, out := &in.EnableVtpm, &out.EnableVtpm
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ShieldedInstanceConfigObservation.
func (in *ShieldedInstanceConfigObservation) DeepCopy() *ShieldedInstanceConfigObservation {
	if in == nil {
		return nil
	}
	out := new(ShieldedInstanceConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ShieldedInstanceConfigParameters) DeepCopyInto(out *ShieldedInstanceConfigParameters) {
	*out = *in
	if in.EnableIntegrityMonitoring != nil {
		in, out := &in.EnableIntegrityMonitoring, &out.EnableIntegrityMonitoring
		*out = new(bool)
		**out = **in
	}
	if in.EnableSecureBoot != nil {
		in, out := &in.EnableSecureBoot, &out.EnableSecureBoot
		*out = new(bool)
		**out = **in
	}
	if in.EnableVtpm != nil {
		in, out := &in.EnableVtpm, &out.EnableVtpm
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ShieldedInstanceConfigParameters.
func (in *ShieldedInstanceConfigParameters) DeepCopy() *ShieldedInstanceConfigParameters {
	if in == nil {
		return nil
	}
	out := new(ShieldedInstanceConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Snapshot) DeepCopyInto(out *Snapshot) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Snapshot.
func (in *Snapshot) DeepCopy() *Snapshot {
	if in == nil {
		return nil
	}
	out := new(Snapshot)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Snapshot) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SnapshotEncryptionKeyInitParameters) DeepCopyInto(out *SnapshotEncryptionKeyInitParameters) {
	*out = *in
	if in.KMSKeySelfLink != nil {
		in, out := &in.KMSKeySelfLink, &out.KMSKeySelfLink
		*out = new(string)
		**out = **in
	}
	if in.KMSKeyServiceAccount != nil {
		in, out := &in.KMSKeyServiceAccount, &out.KMSKeyServiceAccount
		*out = new(string)
		**out = **in
	}
	if in.RawKeySecretRef != nil {
		in, out := &in.RawKeySecretRef, &out.RawKeySecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SnapshotEncryptionKeyInitParameters.
func (in *SnapshotEncryptionKeyInitParameters) DeepCopy() *SnapshotEncryptionKeyInitParameters {
	if in == nil {
		return nil
	}
	out := new(SnapshotEncryptionKeyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SnapshotEncryptionKeyObservation) DeepCopyInto(out *SnapshotEncryptionKeyObservation) {
	*out = *in
	if in.KMSKeySelfLink != nil {
		in, out := &in.KMSKeySelfLink, &out.KMSKeySelfLink
		*out = new(string)
		**out = **in
	}
	if in.KMSKeyServiceAccount != nil {
		in, out := &in.KMSKeyServiceAccount, &out.KMSKeyServiceAccount
		*out = new(string)
		**out = **in
	}
	if in.Sha256 != nil {
		in, out := &in.Sha256, &out.Sha256
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SnapshotEncryptionKeyObservation.
func (in *SnapshotEncryptionKeyObservation) DeepCopy() *SnapshotEncryptionKeyObservation {
	if in == nil {
		return nil
	}
	out := new(SnapshotEncryptionKeyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SnapshotEncryptionKeyParameters) DeepCopyInto(out *SnapshotEncryptionKeyParameters) {
	*out = *in
	if in.KMSKeySelfLink != nil {
		in, out := &in.KMSKeySelfLink, &out.KMSKeySelfLink
		*out = new(string)
		**out = **in
	}
	if in.KMSKeyServiceAccount != nil {
		in, out := &in.KMSKeyServiceAccount, &out.KMSKeyServiceAccount
		*out = new(string)
		**out = **in
	}
	if in.RawKeySecretRef != nil {
		in, out := &in.RawKeySecretRef, &out.RawKeySecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SnapshotEncryptionKeyParameters.
func (in *SnapshotEncryptionKeyParameters) DeepCopy() *SnapshotEncryptionKeyParameters {
	if in == nil {
		return nil
	}
	out := new(SnapshotEncryptionKeyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SnapshotIAMMember) DeepCopyInto(out *SnapshotIAMMember) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SnapshotIAMMember.
func (in *SnapshotIAMMember) DeepCopy() *SnapshotIAMMember {
	if in == nil {
		return nil
	}
	out := new(SnapshotIAMMember)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SnapshotIAMMember) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SnapshotIAMMemberConditionInitParameters) DeepCopyInto(out *SnapshotIAMMemberConditionInitParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Expression != nil {
		in, out := &in.Expression, &out.Expression
		*out = new(string)
		**out = **in
	}
	if in.Title != nil {
		in, out := &in.Title, &out.Title
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SnapshotIAMMemberConditionInitParameters.
func (in *SnapshotIAMMemberConditionInitParameters) DeepCopy() *SnapshotIAMMemberConditionInitParameters {
	if in == nil {
		return nil
	}
	out := new(SnapshotIAMMemberConditionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SnapshotIAMMemberConditionObservation) DeepCopyInto(out *SnapshotIAMMemberConditionObservation) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Expression != nil {
		in, out := &in.Expression, &out.Expression
		*out = new(string)
		**out = **in
	}
	if in.Title != nil {
		in, out := &in.Title, &out.Title
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SnapshotIAMMemberConditionObservation.
func (in *SnapshotIAMMemberConditionObservation) DeepCopy() *SnapshotIAMMemberConditionObservation {
	if in == nil {
		return nil
	}
	out := new(SnapshotIAMMemberConditionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SnapshotIAMMemberConditionParameters) DeepCopyInto(out *SnapshotIAMMemberConditionParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Expression != nil {
		in, out := &in.Expression, &out.Expression
		*out = new(string)
		**out = **in
	}
	if in.Title != nil {
		in, out := &in.Title, &out.Title
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SnapshotIAMMemberConditionParameters.
func (in *SnapshotIAMMemberConditionParameters) DeepCopy() *SnapshotIAMMemberConditionParameters {
	if in == nil {
		return nil
	}
	out := new(SnapshotIAMMemberConditionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SnapshotIAMMemberInitParameters) DeepCopyInto(out *SnapshotIAMMemberInitParameters) {
	*out = *in
	if in.Condition != nil {
		in, out := &in.Condition, &out.Condition
		*out = make([]SnapshotIAMMemberConditionInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Member != nil {
		in, out := &in.Member, &out.Member
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Role != nil {
		in, out := &in.Role, &out.Role
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SnapshotIAMMemberInitParameters.
func (in *SnapshotIAMMemberInitParameters) DeepCopy() *SnapshotIAMMemberInitParameters {
	if in == nil {
		return nil
	}
	out := new(SnapshotIAMMemberInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SnapshotIAMMemberList) DeepCopyInto(out *SnapshotIAMMemberList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]SnapshotIAMMember, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SnapshotIAMMemberList.
func (in *SnapshotIAMMemberList) DeepCopy() *SnapshotIAMMemberList {
	if in == nil {
		return nil
	}
	out := new(SnapshotIAMMemberList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SnapshotIAMMemberList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SnapshotIAMMemberObservation) DeepCopyInto(out *SnapshotIAMMemberObservation) {
	*out = *in
	if in.Condition != nil {
		in, out := &in.Condition, &out.Condition
		*out = make([]SnapshotIAMMemberConditionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Etag != nil {
		in, out := &in.Etag, &out.Etag
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Member != nil {
		in, out := &in.Member, &out.Member
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Role != nil {
		in, out := &in.Role, &out.Role
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SnapshotIAMMemberObservation.
func (in *SnapshotIAMMemberObservation) DeepCopy() *SnapshotIAMMemberObservation {
	if in == nil {
		return nil
	}
	out := new(SnapshotIAMMemberObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SnapshotIAMMemberParameters) DeepCopyInto(out *SnapshotIAMMemberParameters) {
	*out = *in
	if in.Condition != nil {
		in, out := &in.Condition, &out.Condition
		*out = make([]SnapshotIAMMemberConditionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Member != nil {
		in, out := &in.Member, &out.Member
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Role != nil {
		in, out := &in.Role, &out.Role
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SnapshotIAMMemberParameters.
func (in *SnapshotIAMMemberParameters) DeepCopy() *SnapshotIAMMemberParameters {
	if in == nil {
		return nil
	}
	out := new(SnapshotIAMMemberParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SnapshotIAMMemberSpec) DeepCopyInto(out *SnapshotIAMMemberSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SnapshotIAMMemberSpec.
func (in *SnapshotIAMMemberSpec) DeepCopy() *SnapshotIAMMemberSpec {
	if in == nil {
		return nil
	}
	out := new(SnapshotIAMMemberSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SnapshotIAMMemberStatus) DeepCopyInto(out *SnapshotIAMMemberStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SnapshotIAMMemberStatus.
func (in *SnapshotIAMMemberStatus) DeepCopy() *SnapshotIAMMemberStatus {
	if in == nil {
		return nil
	}
	out := new(SnapshotIAMMemberStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SnapshotInitParameters) DeepCopyInto(out *SnapshotInitParameters) {
	*out = *in
	if in.ChainName != nil {
		in, out := &in.ChainName, &out.ChainName
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.SnapshotEncryptionKey != nil {
		in, out := &in.SnapshotEncryptionKey, &out.SnapshotEncryptionKey
		*out = make([]SnapshotEncryptionKeyInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SourceDisk != nil {
		in, out := &in.SourceDisk, &out.SourceDisk
		*out = new(string)
		**out = **in
	}
	if in.SourceDiskEncryptionKey != nil {
		in, out := &in.SourceDiskEncryptionKey, &out.SourceDiskEncryptionKey
		*out = make([]SourceDiskEncryptionKeyInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SourceDiskRef != nil {
		in, out := &in.SourceDiskRef, &out.SourceDiskRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SourceDiskSelector != nil {
		in, out := &in.SourceDiskSelector, &out.SourceDiskSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.StorageLocations != nil {
		in, out := &in.StorageLocations, &out.StorageLocations
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Zone != nil {
		in, out := &in.Zone, &out.Zone
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SnapshotInitParameters.
func (in *SnapshotInitParameters) DeepCopy() *SnapshotInitParameters {
	if in == nil {
		return nil
	}
	out := new(SnapshotInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SnapshotList) DeepCopyInto(out *SnapshotList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Snapshot, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SnapshotList.
func (in *SnapshotList) DeepCopy() *SnapshotList {
	if in == nil {
		return nil
	}
	out := new(SnapshotList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SnapshotList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SnapshotObservation) DeepCopyInto(out *SnapshotObservation) {
	*out = *in
	if in.ChainName != nil {
		in, out := &in.ChainName, &out.ChainName
		*out = new(string)
		**out = **in
	}
	if in.CreationTimestamp != nil {
		in, out := &in.CreationTimestamp, &out.CreationTimestamp
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DiskSizeGb != nil {
		in, out := &in.DiskSizeGb, &out.DiskSizeGb
		*out = new(float64)
		**out = **in
	}
	if in.EffectiveLabels != nil {
		in, out := &in.EffectiveLabels, &out.EffectiveLabels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.LabelFingerprint != nil {
		in, out := &in.LabelFingerprint, &out.LabelFingerprint
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Licenses != nil {
		in, out := &in.Licenses, &out.Licenses
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.SelfLink != nil {
		in, out := &in.SelfLink, &out.SelfLink
		*out = new(string)
		**out = **in
	}
	if in.SnapshotEncryptionKey != nil {
		in, out := &in.SnapshotEncryptionKey, &out.SnapshotEncryptionKey
		*out = make([]SnapshotEncryptionKeyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SnapshotID != nil {
		in, out := &in.SnapshotID, &out.SnapshotID
		*out = new(float64)
		**out = **in
	}
	if in.SourceDisk != nil {
		in, out := &in.SourceDisk, &out.SourceDisk
		*out = new(string)
		**out = **in
	}
	if in.SourceDiskEncryptionKey != nil {
		in, out := &in.SourceDiskEncryptionKey, &out.SourceDiskEncryptionKey
		*out = make([]SourceDiskEncryptionKeyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StorageBytes != nil {
		in, out := &in.StorageBytes, &out.StorageBytes
		*out = new(float64)
		**out = **in
	}
	if in.StorageLocations != nil {
		in, out := &in.StorageLocations, &out.StorageLocations
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.TerraformLabels != nil {
		in, out := &in.TerraformLabels, &out.TerraformLabels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Zone != nil {
		in, out := &in.Zone, &out.Zone
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SnapshotObservation.
func (in *SnapshotObservation) DeepCopy() *SnapshotObservation {
	if in == nil {
		return nil
	}
	out := new(SnapshotObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SnapshotParameters) DeepCopyInto(out *SnapshotParameters) {
	*out = *in
	if in.ChainName != nil {
		in, out := &in.ChainName, &out.ChainName
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.SnapshotEncryptionKey != nil {
		in, out := &in.SnapshotEncryptionKey, &out.SnapshotEncryptionKey
		*out = make([]SnapshotEncryptionKeyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SourceDisk != nil {
		in, out := &in.SourceDisk, &out.SourceDisk
		*out = new(string)
		**out = **in
	}
	if in.SourceDiskEncryptionKey != nil {
		in, out := &in.SourceDiskEncryptionKey, &out.SourceDiskEncryptionKey
		*out = make([]SourceDiskEncryptionKeyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SourceDiskRef != nil {
		in, out := &in.SourceDiskRef, &out.SourceDiskRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SourceDiskSelector != nil {
		in, out := &in.SourceDiskSelector, &out.SourceDiskSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.StorageLocations != nil {
		in, out := &in.StorageLocations, &out.StorageLocations
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Zone != nil {
		in, out := &in.Zone, &out.Zone
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SnapshotParameters.
func (in *SnapshotParameters) DeepCopy() *SnapshotParameters {
	if in == nil {
		return nil
	}
	out := new(SnapshotParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SnapshotPropertiesInitParameters) DeepCopyInto(out *SnapshotPropertiesInitParameters) {
	*out = *in
	if in.ChainName != nil {
		in, out := &in.ChainName, &out.ChainName
		*out = new(string)
		**out = **in
	}
	if in.GuestFlush != nil {
		in, out := &in.GuestFlush, &out.GuestFlush
		*out = new(bool)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.StorageLocations != nil {
		in, out := &in.StorageLocations, &out.StorageLocations
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SnapshotPropertiesInitParameters.
func (in *SnapshotPropertiesInitParameters) DeepCopy() *SnapshotPropertiesInitParameters {
	if in == nil {
		return nil
	}
	out := new(SnapshotPropertiesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SnapshotPropertiesObservation) DeepCopyInto(out *SnapshotPropertiesObservation) {
	*out = *in
	if in.ChainName != nil {
		in, out := &in.ChainName, &out.ChainName
		*out = new(string)
		**out = **in
	}
	if in.GuestFlush != nil {
		in, out := &in.GuestFlush, &out.GuestFlush
		*out = new(bool)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.StorageLocations != nil {
		in, out := &in.StorageLocations, &out.StorageLocations
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SnapshotPropertiesObservation.
func (in *SnapshotPropertiesObservation) DeepCopy() *SnapshotPropertiesObservation {
	if in == nil {
		return nil
	}
	out := new(SnapshotPropertiesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SnapshotPropertiesParameters) DeepCopyInto(out *SnapshotPropertiesParameters) {
	*out = *in
	if in.ChainName != nil {
		in, out := &in.ChainName, &out.ChainName
		*out = new(string)
		**out = **in
	}
	if in.GuestFlush != nil {
		in, out := &in.GuestFlush, &out.GuestFlush
		*out = new(bool)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.StorageLocations != nil {
		in, out := &in.StorageLocations, &out.StorageLocations
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SnapshotPropertiesParameters.
func (in *SnapshotPropertiesParameters) DeepCopy() *SnapshotPropertiesParameters {
	if in == nil {
		return nil
	}
	out := new(SnapshotPropertiesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SnapshotSchedulePolicyInitParameters) DeepCopyInto(out *SnapshotSchedulePolicyInitParameters) {
	*out = *in
	if in.RetentionPolicy != nil {
		in, out := &in.RetentionPolicy, &out.RetentionPolicy
		*out = make([]RetentionPolicyInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Schedule != nil {
		in, out := &in.Schedule, &out.Schedule
		*out = make([]ScheduleInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SnapshotProperties != nil {
		in, out := &in.SnapshotProperties, &out.SnapshotProperties
		*out = make([]SnapshotPropertiesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SnapshotSchedulePolicyInitParameters.
func (in *SnapshotSchedulePolicyInitParameters) DeepCopy() *SnapshotSchedulePolicyInitParameters {
	if in == nil {
		return nil
	}
	out := new(SnapshotSchedulePolicyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SnapshotSchedulePolicyObservation) DeepCopyInto(out *SnapshotSchedulePolicyObservation) {
	*out = *in
	if in.RetentionPolicy != nil {
		in, out := &in.RetentionPolicy, &out.RetentionPolicy
		*out = make([]RetentionPolicyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Schedule != nil {
		in, out := &in.Schedule, &out.Schedule
		*out = make([]ScheduleObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SnapshotProperties != nil {
		in, out := &in.SnapshotProperties, &out.SnapshotProperties
		*out = make([]SnapshotPropertiesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SnapshotSchedulePolicyObservation.
func (in *SnapshotSchedulePolicyObservation) DeepCopy() *SnapshotSchedulePolicyObservation {
	if in == nil {
		return nil
	}
	out := new(SnapshotSchedulePolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SnapshotSchedulePolicyParameters) DeepCopyInto(out *SnapshotSchedulePolicyParameters) {
	*out = *in
	if in.RetentionPolicy != nil {
		in, out := &in.RetentionPolicy, &out.RetentionPolicy
		*out = make([]RetentionPolicyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Schedule != nil {
		in, out := &in.Schedule, &out.Schedule
		*out = make([]ScheduleParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SnapshotProperties != nil {
		in, out := &in.SnapshotProperties, &out.SnapshotProperties
		*out = make([]SnapshotPropertiesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SnapshotSchedulePolicyParameters.
func (in *SnapshotSchedulePolicyParameters) DeepCopy() *SnapshotSchedulePolicyParameters {
	if in == nil {
		return nil
	}
	out := new(SnapshotSchedulePolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SnapshotSpec) DeepCopyInto(out *SnapshotSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SnapshotSpec.
func (in *SnapshotSpec) DeepCopy() *SnapshotSpec {
	if in == nil {
		return nil
	}
	out := new(SnapshotSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SnapshotStatus) DeepCopyInto(out *SnapshotStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SnapshotStatus.
func (in *SnapshotStatus) DeepCopy() *SnapshotStatus {
	if in == nil {
		return nil
	}
	out := new(SnapshotStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SourceDiskEncryptionKeyInitParameters) DeepCopyInto(out *SourceDiskEncryptionKeyInitParameters) {
	*out = *in
	if in.KMSKeyServiceAccount != nil {
		in, out := &in.KMSKeyServiceAccount, &out.KMSKeyServiceAccount
		*out = new(string)
		**out = **in
	}
	if in.RawKeySecretRef != nil {
		in, out := &in.RawKeySecretRef, &out.RawKeySecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SourceDiskEncryptionKeyInitParameters.
func (in *SourceDiskEncryptionKeyInitParameters) DeepCopy() *SourceDiskEncryptionKeyInitParameters {
	if in == nil {
		return nil
	}
	out := new(SourceDiskEncryptionKeyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SourceDiskEncryptionKeyObservation) DeepCopyInto(out *SourceDiskEncryptionKeyObservation) {
	*out = *in
	if in.KMSKeyServiceAccount != nil {
		in, out := &in.KMSKeyServiceAccount, &out.KMSKeyServiceAccount
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SourceDiskEncryptionKeyObservation.
func (in *SourceDiskEncryptionKeyObservation) DeepCopy() *SourceDiskEncryptionKeyObservation {
	if in == nil {
		return nil
	}
	out := new(SourceDiskEncryptionKeyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SourceDiskEncryptionKeyParameters) DeepCopyInto(out *SourceDiskEncryptionKeyParameters) {
	*out = *in
	if in.KMSKeyServiceAccount != nil {
		in, out := &in.KMSKeyServiceAccount, &out.KMSKeyServiceAccount
		*out = new(string)
		**out = **in
	}
	if in.RawKeySecretRef != nil {
		in, out := &in.RawKeySecretRef, &out.RawKeySecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SourceDiskEncryptionKeyParameters.
func (in *SourceDiskEncryptionKeyParameters) DeepCopy() *SourceDiskEncryptionKeyParameters {
	if in == nil {
		return nil
	}
	out := new(SourceDiskEncryptionKeyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SourceImageEncryptionKeyInitParameters) DeepCopyInto(out *SourceImageEncryptionKeyInitParameters) {
	*out = *in
	if in.KMSKeySelfLink != nil {
		in, out := &in.KMSKeySelfLink, &out.KMSKeySelfLink
		*out = new(string)
		**out = **in
	}
	if in.KMSKeyServiceAccount != nil {
		in, out := &in.KMSKeyServiceAccount, &out.KMSKeyServiceAccount
		*out = new(string)
		**out = **in
	}
	if in.RawKey != nil {
		in, out := &in.RawKey, &out.RawKey
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SourceImageEncryptionKeyInitParameters.
func (in *SourceImageEncryptionKeyInitParameters) DeepCopy() *SourceImageEncryptionKeyInitParameters {
	if in == nil {
		return nil
	}
	out := new(SourceImageEncryptionKeyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SourceImageEncryptionKeyObservation) DeepCopyInto(out *SourceImageEncryptionKeyObservation) {
	*out = *in
	if in.KMSKeySelfLink != nil {
		in, out := &in.KMSKeySelfLink, &out.KMSKeySelfLink
		*out = new(string)
		**out = **in
	}
	if in.KMSKeyServiceAccount != nil {
		in, out := &in.KMSKeyServiceAccount, &out.KMSKeyServiceAccount
		*out = new(string)
		**out = **in
	}
	if in.RawKey != nil {
		in, out := &in.RawKey, &out.RawKey
		*out = new(string)
		**out = **in
	}
	if in.Sha256 != nil {
		in, out := &in.Sha256, &out.Sha256
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SourceImageEncryptionKeyObservation.
func (in *SourceImageEncryptionKeyObservation) DeepCopy() *SourceImageEncryptionKeyObservation {
	if in == nil {
		return nil
	}
	out := new(SourceImageEncryptionKeyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SourceImageEncryptionKeyParameters) DeepCopyInto(out *SourceImageEncryptionKeyParameters) {
	*out = *in
	if in.KMSKeySelfLink != nil {
		in, out := &in.KMSKeySelfLink, &out.KMSKeySelfLink
		*out = new(string)
		**out = **in
	}
	if in.KMSKeyServiceAccount != nil {
		in, out := &in.KMSKeyServiceAccount, &out.KMSKeyServiceAccount
		*out = new(string)
		**out = **in
	}
	if in.RawKey != nil {
		in, out := &in.RawKey, &out.RawKey
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SourceImageEncryptionKeyParameters.
func (in *SourceImageEncryptionKeyParameters) DeepCopy() *SourceImageEncryptionKeyParameters {
	if in == nil {
		return nil
	}
	out := new(SourceImageEncryptionKeyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SourceSnapshotEncryptionKeyInitParameters) DeepCopyInto(out *SourceSnapshotEncryptionKeyInitParameters) {
	*out = *in
	if in.KMSKeySelfLink != nil {
		in, out := &in.KMSKeySelfLink, &out.KMSKeySelfLink
		*out = new(string)
		**out = **in
	}
	if in.KMSKeyServiceAccount != nil {
		in, out := &in.KMSKeyServiceAccount, &out.KMSKeyServiceAccount
		*out = new(string)
		**out = **in
	}
	if in.RawKey != nil {
		in, out := &in.RawKey, &out.RawKey
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SourceSnapshotEncryptionKeyInitParameters.
func (in *SourceSnapshotEncryptionKeyInitParameters) DeepCopy() *SourceSnapshotEncryptionKeyInitParameters {
	if in == nil {
		return nil
	}
	out := new(SourceSnapshotEncryptionKeyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SourceSnapshotEncryptionKeyObservation) DeepCopyInto(out *SourceSnapshotEncryptionKeyObservation) {
	*out = *in
	if in.KMSKeySelfLink != nil {
		in, out := &in.KMSKeySelfLink, &out.KMSKeySelfLink
		*out = new(string)
		**out = **in
	}
	if in.KMSKeyServiceAccount != nil {
		in, out := &in.KMSKeyServiceAccount, &out.KMSKeyServiceAccount
		*out = new(string)
		**out = **in
	}
	if in.RawKey != nil {
		in, out := &in.RawKey, &out.RawKey
		*out = new(string)
		**out = **in
	}
	if in.Sha256 != nil {
		in, out := &in.Sha256, &out.Sha256
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SourceSnapshotEncryptionKeyObservation.
func (in *SourceSnapshotEncryptionKeyObservation) DeepCopy() *SourceSnapshotEncryptionKeyObservation {
	if in == nil {
		return nil
	}
	out := new(SourceSnapshotEncryptionKeyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SourceSnapshotEncryptionKeyParameters) DeepCopyInto(out *SourceSnapshotEncryptionKeyParameters) {
	*out = *in
	if in.KMSKeySelfLink != nil {
		in, out := &in.KMSKeySelfLink, &out.KMSKeySelfLink
		*out = new(string)
		**out = **in
	}
	if in.KMSKeyServiceAccount != nil {
		in, out := &in.KMSKeyServiceAccount, &out.KMSKeyServiceAccount
		*out = new(string)
		**out = **in
	}
	if in.RawKey != nil {
		in, out := &in.RawKey, &out.RawKey
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SourceSnapshotEncryptionKeyParameters.
func (in *SourceSnapshotEncryptionKeyParameters) DeepCopy() *SourceSnapshotEncryptionKeyParameters {
	if in == nil {
		return nil
	}
	out := new(SourceSnapshotEncryptionKeyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpecificReservationInitParameters) DeepCopyInto(out *SpecificReservationInitParameters) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpecificReservationInitParameters.
func (in *SpecificReservationInitParameters) DeepCopy() *SpecificReservationInitParameters {
	if in == nil {
		return nil
	}
	out := new(SpecificReservationInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpecificReservationObservation) DeepCopyInto(out *SpecificReservationObservation) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpecificReservationObservation.
func (in *SpecificReservationObservation) DeepCopy() *SpecificReservationObservation {
	if in == nil {
		return nil
	}
	out := new(SpecificReservationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpecificReservationParameters) DeepCopyInto(out *SpecificReservationParameters) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpecificReservationParameters.
func (in *SpecificReservationParameters) DeepCopy() *SpecificReservationParameters {
	if in == nil {
		return nil
	}
	out := new(SpecificReservationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StatefulDiskInitParameters) DeepCopyInto(out *StatefulDiskInitParameters) {
	*out = *in
	if in.DeleteRule != nil {
		in, out := &in.DeleteRule, &out.DeleteRule
		*out = new(string)
		**out = **in
	}
	if in.DeviceName != nil {
		in, out := &in.DeviceName, &out.DeviceName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StatefulDiskInitParameters.
func (in *StatefulDiskInitParameters) DeepCopy() *StatefulDiskInitParameters {
	if in == nil {
		return nil
	}
	out := new(StatefulDiskInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StatefulDiskObservation) DeepCopyInto(out *StatefulDiskObservation) {
	*out = *in
	if in.DeleteRule != nil {
		in, out := &in.DeleteRule, &out.DeleteRule
		*out = new(string)
		**out = **in
	}
	if in.DeviceName != nil {
		in, out := &in.DeviceName, &out.DeviceName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StatefulDiskObservation.
func (in *StatefulDiskObservation) DeepCopy() *StatefulDiskObservation {
	if in == nil {
		return nil
	}
	out := new(StatefulDiskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StatefulDiskParameters) DeepCopyInto(out *StatefulDiskParameters) {
	*out = *in
	if in.DeleteRule != nil {
		in, out := &in.DeleteRule, &out.DeleteRule
		*out = new(string)
		**out = **in
	}
	if in.DeviceName != nil {
		in, out := &in.DeviceName, &out.DeviceName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StatefulDiskParameters.
func (in *StatefulDiskParameters) DeepCopy() *StatefulDiskParameters {
	if in == nil {
		return nil
	}
	out := new(StatefulDiskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StatefulExternalIPInitParameters) DeepCopyInto(out *StatefulExternalIPInitParameters) {
	*out = *in
	if in.DeleteRule != nil {
		in, out := &in.DeleteRule, &out.DeleteRule
		*out = new(string)
		**out = **in
	}
	if in.InterfaceName != nil {
		in, out := &in.InterfaceName, &out.InterfaceName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StatefulExternalIPInitParameters.
func (in *StatefulExternalIPInitParameters) DeepCopy() *StatefulExternalIPInitParameters {
	if in == nil {
		return nil
	}
	out := new(StatefulExternalIPInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StatefulExternalIPObservation) DeepCopyInto(out *StatefulExternalIPObservation) {
	*out = *in
	if in.DeleteRule != nil {
		in, out := &in.DeleteRule, &out.DeleteRule
		*out = new(string)
		**out = **in
	}
	if in.InterfaceName != nil {
		in, out := &in.InterfaceName, &out.InterfaceName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StatefulExternalIPObservation.
func (in *StatefulExternalIPObservation) DeepCopy() *StatefulExternalIPObservation {
	if in == nil {
		return nil
	}
	out := new(StatefulExternalIPObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StatefulExternalIPParameters) DeepCopyInto(out *StatefulExternalIPParameters) {
	*out = *in
	if in.DeleteRule != nil {
		in, out := &in.DeleteRule, &out.DeleteRule
		*out = new(string)
		**out = **in
	}
	if in.InterfaceName != nil {
		in, out := &in.InterfaceName, &out.InterfaceName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StatefulExternalIPParameters.
func (in *StatefulExternalIPParameters) DeepCopy() *StatefulExternalIPParameters {
	if in == nil {
		return nil
	}
	out := new(StatefulExternalIPParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StatefulInitParameters) DeepCopyInto(out *StatefulInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StatefulInitParameters.
func (in *StatefulInitParameters) DeepCopy() *StatefulInitParameters {
	if in == nil {
		return nil
	}
	out := new(StatefulInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StatefulInternalIPInitParameters) DeepCopyInto(out *StatefulInternalIPInitParameters) {
	*out = *in
	if in.DeleteRule != nil {
		in, out := &in.DeleteRule, &out.DeleteRule
		*out = new(string)
		**out = **in
	}
	if in.InterfaceName != nil {
		in, out := &in.InterfaceName, &out.InterfaceName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StatefulInternalIPInitParameters.
func (in *StatefulInternalIPInitParameters) DeepCopy() *StatefulInternalIPInitParameters {
	if in == nil {
		return nil
	}
	out := new(StatefulInternalIPInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StatefulInternalIPObservation) DeepCopyInto(out *StatefulInternalIPObservation) {
	*out = *in
	if in.DeleteRule != nil {
		in, out := &in.DeleteRule, &out.DeleteRule
		*out = new(string)
		**out = **in
	}
	if in.InterfaceName != nil {
		in, out := &in.InterfaceName, &out.InterfaceName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StatefulInternalIPObservation.
func (in *StatefulInternalIPObservation) DeepCopy() *StatefulInternalIPObservation {
	if in == nil {
		return nil
	}
	out := new(StatefulInternalIPObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StatefulInternalIPParameters) DeepCopyInto(out *StatefulInternalIPParameters) {
	*out = *in
	if in.DeleteRule != nil {
		in, out := &in.DeleteRule, &out.DeleteRule
		*out = new(string)
		**out = **in
	}
	if in.InterfaceName != nil {
		in, out := &in.InterfaceName, &out.InterfaceName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StatefulInternalIPParameters.
func (in *StatefulInternalIPParameters) DeepCopy() *StatefulInternalIPParameters {
	if in == nil {
		return nil
	}
	out := new(StatefulInternalIPParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StatefulObservation) DeepCopyInto(out *StatefulObservation) {
	*out = *in
	if in.HasStatefulConfig != nil {
		in, out := &in.HasStatefulConfig, &out.HasStatefulConfig
		*out = new(bool)
		**out = **in
	}
	if in.PerInstanceConfigs != nil {
		in, out := &in.PerInstanceConfigs, &out.PerInstanceConfigs
		*out = make([]PerInstanceConfigsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StatefulObservation.
func (in *StatefulObservation) DeepCopy() *StatefulObservation {
	if in == nil {
		return nil
	}
	out := new(StatefulObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StatefulParameters) DeepCopyInto(out *StatefulParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StatefulParameters.
func (in *StatefulParameters) DeepCopy() *StatefulParameters {
	if in == nil {
		return nil
	}
	out := new(StatefulParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StatefulPerInstanceConfigsInitParameters) DeepCopyInto(out *StatefulPerInstanceConfigsInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StatefulPerInstanceConfigsInitParameters.
func (in *StatefulPerInstanceConfigsInitParameters) DeepCopy() *StatefulPerInstanceConfigsInitParameters {
	if in == nil {
		return nil
	}
	out := new(StatefulPerInstanceConfigsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StatefulPerInstanceConfigsObservation) DeepCopyInto(out *StatefulPerInstanceConfigsObservation) {
	*out = *in
	if in.AllEffective != nil {
		in, out := &in.AllEffective, &out.AllEffective
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StatefulPerInstanceConfigsObservation.
func (in *StatefulPerInstanceConfigsObservation) DeepCopy() *StatefulPerInstanceConfigsObservation {
	if in == nil {
		return nil
	}
	out := new(StatefulPerInstanceConfigsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StatefulPerInstanceConfigsParameters) DeepCopyInto(out *StatefulPerInstanceConfigsParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StatefulPerInstanceConfigsParameters.
func (in *StatefulPerInstanceConfigsParameters) DeepCopy() *StatefulPerInstanceConfigsParameters {
	if in == nil {
		return nil
	}
	out := new(StatefulPerInstanceConfigsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StatusAllInstancesConfigInitParameters) DeepCopyInto(out *StatusAllInstancesConfigInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StatusAllInstancesConfigInitParameters.
func (in *StatusAllInstancesConfigInitParameters) DeepCopy() *StatusAllInstancesConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(StatusAllInstancesConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StatusAllInstancesConfigObservation) DeepCopyInto(out *StatusAllInstancesConfigObservation) {
	*out = *in
	if in.CurrentRevision != nil {
		in, out := &in.CurrentRevision, &out.CurrentRevision
		*out = new(string)
		**out = **in
	}
	if in.Effective != nil {
		in, out := &in.Effective, &out.Effective
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StatusAllInstancesConfigObservation.
func (in *StatusAllInstancesConfigObservation) DeepCopy() *StatusAllInstancesConfigObservation {
	if in == nil {
		return nil
	}
	out := new(StatusAllInstancesConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StatusAllInstancesConfigParameters) DeepCopyInto(out *StatusAllInstancesConfigParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StatusAllInstancesConfigParameters.
func (in *StatusAllInstancesConfigParameters) DeepCopy() *StatusAllInstancesConfigParameters {
	if in == nil {
		return nil
	}
	out := new(StatusAllInstancesConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StatusInitParameters) DeepCopyInto(out *StatusInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StatusInitParameters.
func (in *StatusInitParameters) DeepCopy() *StatusInitParameters {
	if in == nil {
		return nil
	}
	out := new(StatusInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StatusObservation) DeepCopyInto(out *StatusObservation) {
	*out = *in
	if in.AllInstancesConfig != nil {
		in, out := &in.AllInstancesConfig, &out.AllInstancesConfig
		*out = make([]StatusAllInstancesConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IsStable != nil {
		in, out := &in.IsStable, &out.IsStable
		*out = new(bool)
		**out = **in
	}
	if in.Stateful != nil {
		in, out := &in.Stateful, &out.Stateful
		*out = make([]StatefulObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VersionTarget != nil {
		in, out := &in.VersionTarget, &out.VersionTarget
		*out = make([]VersionTargetObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StatusObservation.
func (in *StatusObservation) DeepCopy() *StatusObservation {
	if in == nil {
		return nil
	}
	out := new(StatusObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StatusParameters) DeepCopyInto(out *StatusParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StatusParameters.
func (in *StatusParameters) DeepCopy() *StatusParameters {
	if in == nil {
		return nil
	}
	out := new(StatusParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StatusStatefulInitParameters) DeepCopyInto(out *StatusStatefulInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StatusStatefulInitParameters.
func (in *StatusStatefulInitParameters) DeepCopy() *StatusStatefulInitParameters {
	if in == nil {
		return nil
	}
	out := new(StatusStatefulInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StatusStatefulObservation) DeepCopyInto(out *StatusStatefulObservation) {
	*out = *in
	if in.HasStatefulConfig != nil {
		in, out := &in.HasStatefulConfig, &out.HasStatefulConfig
		*out = new(bool)
		**out = **in
	}
	if in.PerInstanceConfigs != nil {
		in, out := &in.PerInstanceConfigs, &out.PerInstanceConfigs
		*out = make([]StatefulPerInstanceConfigsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StatusStatefulObservation.
func (in *StatusStatefulObservation) DeepCopy() *StatusStatefulObservation {
	if in == nil {
		return nil
	}
	out := new(StatusStatefulObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StatusStatefulParameters) DeepCopyInto(out *StatusStatefulParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StatusStatefulParameters.
func (in *StatusStatefulParameters) DeepCopy() *StatusStatefulParameters {
	if in == nil {
		return nil
	}
	out := new(StatusStatefulParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StatusVersionTargetInitParameters) DeepCopyInto(out *StatusVersionTargetInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StatusVersionTargetInitParameters.
func (in *StatusVersionTargetInitParameters) DeepCopy() *StatusVersionTargetInitParameters {
	if in == nil {
		return nil
	}
	out := new(StatusVersionTargetInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StatusVersionTargetObservation) DeepCopyInto(out *StatusVersionTargetObservation) {
	*out = *in
	if in.IsReached != nil {
		in, out := &in.IsReached, &out.IsReached
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StatusVersionTargetObservation.
func (in *StatusVersionTargetObservation) DeepCopy() *StatusVersionTargetObservation {
	if in == nil {
		return nil
	}
	out := new(StatusVersionTargetObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StatusVersionTargetParameters) DeepCopyInto(out *StatusVersionTargetParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StatusVersionTargetParameters.
func (in *StatusVersionTargetParameters) DeepCopy() *StatusVersionTargetParameters {
	if in == nil {
		return nil
	}
	out := new(StatusVersionTargetParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Subnetwork) DeepCopyInto(out *Subnetwork) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Subnetwork.
func (in *Subnetwork) DeepCopy() *Subnetwork {
	if in == nil {
		return nil
	}
	out := new(Subnetwork)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Subnetwork) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubnetworkIAMMember) DeepCopyInto(out *SubnetworkIAMMember) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubnetworkIAMMember.
func (in *SubnetworkIAMMember) DeepCopy() *SubnetworkIAMMember {
	if in == nil {
		return nil
	}
	out := new(SubnetworkIAMMember)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SubnetworkIAMMember) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubnetworkIAMMemberConditionInitParameters) DeepCopyInto(out *SubnetworkIAMMemberConditionInitParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Expression != nil {
		in, out := &in.Expression, &out.Expression
		*out = new(string)
		**out = **in
	}
	if in.Title != nil {
		in, out := &in.Title, &out.Title
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubnetworkIAMMemberConditionInitParameters.
func (in *SubnetworkIAMMemberConditionInitParameters) DeepCopy() *SubnetworkIAMMemberConditionInitParameters {
	if in == nil {
		return nil
	}
	out := new(SubnetworkIAMMemberConditionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubnetworkIAMMemberConditionObservation) DeepCopyInto(out *SubnetworkIAMMemberConditionObservation) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Expression != nil {
		in, out := &in.Expression, &out.Expression
		*out = new(string)
		**out = **in
	}
	if in.Title != nil {
		in, out := &in.Title, &out.Title
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubnetworkIAMMemberConditionObservation.
func (in *SubnetworkIAMMemberConditionObservation) DeepCopy() *SubnetworkIAMMemberConditionObservation {
	if in == nil {
		return nil
	}
	out := new(SubnetworkIAMMemberConditionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubnetworkIAMMemberConditionParameters) DeepCopyInto(out *SubnetworkIAMMemberConditionParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Expression != nil {
		in, out := &in.Expression, &out.Expression
		*out = new(string)
		**out = **in
	}
	if in.Title != nil {
		in, out := &in.Title, &out.Title
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubnetworkIAMMemberConditionParameters.
func (in *SubnetworkIAMMemberConditionParameters) DeepCopy() *SubnetworkIAMMemberConditionParameters {
	if in == nil {
		return nil
	}
	out := new(SubnetworkIAMMemberConditionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubnetworkIAMMemberInitParameters) DeepCopyInto(out *SubnetworkIAMMemberInitParameters) {
	*out = *in
	if in.Condition != nil {
		in, out := &in.Condition, &out.Condition
		*out = make([]SubnetworkIAMMemberConditionInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Member != nil {
		in, out := &in.Member, &out.Member
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.Role != nil {
		in, out := &in.Role, &out.Role
		*out = new(string)
		**out = **in
	}
	if in.Subnetwork != nil {
		in, out := &in.Subnetwork, &out.Subnetwork
		*out = new(string)
		**out = **in
	}
	if in.SubnetworkRef != nil {
		in, out := &in.SubnetworkRef, &out.SubnetworkRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SubnetworkSelector != nil {
		in, out := &in.SubnetworkSelector, &out.SubnetworkSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubnetworkIAMMemberInitParameters.
func (in *SubnetworkIAMMemberInitParameters) DeepCopy() *SubnetworkIAMMemberInitParameters {
	if in == nil {
		return nil
	}
	out := new(SubnetworkIAMMemberInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubnetworkIAMMemberList) DeepCopyInto(out *SubnetworkIAMMemberList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]SubnetworkIAMMember, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubnetworkIAMMemberList.
func (in *SubnetworkIAMMemberList) DeepCopy() *SubnetworkIAMMemberList {
	if in == nil {
		return nil
	}
	out := new(SubnetworkIAMMemberList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SubnetworkIAMMemberList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubnetworkIAMMemberObservation) DeepCopyInto(out *SubnetworkIAMMemberObservation) {
	*out = *in
	if in.Condition != nil {
		in, out := &in.Condition, &out.Condition
		*out = make([]SubnetworkIAMMemberConditionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Etag != nil {
		in, out := &in.Etag, &out.Etag
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Member != nil {
		in, out := &in.Member, &out.Member
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.Role != nil {
		in, out := &in.Role, &out.Role
		*out = new(string)
		**out = **in
	}
	if in.Subnetwork != nil {
		in, out := &in.Subnetwork, &out.Subnetwork
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubnetworkIAMMemberObservation.
func (in *SubnetworkIAMMemberObservation) DeepCopy() *SubnetworkIAMMemberObservation {
	if in == nil {
		return nil
	}
	out := new(SubnetworkIAMMemberObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubnetworkIAMMemberParameters) DeepCopyInto(out *SubnetworkIAMMemberParameters) {
	*out = *in
	if in.Condition != nil {
		in, out := &in.Condition, &out.Condition
		*out = make([]SubnetworkIAMMemberConditionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Member != nil {
		in, out := &in.Member, &out.Member
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.Role != nil {
		in, out := &in.Role, &out.Role
		*out = new(string)
		**out = **in
	}
	if in.Subnetwork != nil {
		in, out := &in.Subnetwork, &out.Subnetwork
		*out = new(string)
		**out = **in
	}
	if in.SubnetworkRef != nil {
		in, out := &in.SubnetworkRef, &out.SubnetworkRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SubnetworkSelector != nil {
		in, out := &in.SubnetworkSelector, &out.SubnetworkSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubnetworkIAMMemberParameters.
func (in *SubnetworkIAMMemberParameters) DeepCopy() *SubnetworkIAMMemberParameters {
	if in == nil {
		return nil
	}
	out := new(SubnetworkIAMMemberParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubnetworkIAMMemberSpec) DeepCopyInto(out *SubnetworkIAMMemberSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubnetworkIAMMemberSpec.
func (in *SubnetworkIAMMemberSpec) DeepCopy() *SubnetworkIAMMemberSpec {
	if in == nil {
		return nil
	}
	out := new(SubnetworkIAMMemberSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubnetworkIAMMemberStatus) DeepCopyInto(out *SubnetworkIAMMemberStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubnetworkIAMMemberStatus.
func (in *SubnetworkIAMMemberStatus) DeepCopy() *SubnetworkIAMMemberStatus {
	if in == nil {
		return nil
	}
	out := new(SubnetworkIAMMemberStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubnetworkInitParameters) DeepCopyInto(out *SubnetworkInitParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NameRef != nil {
		in, out := &in.NameRef, &out.NameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.NameSelector != nil {
		in, out := &in.NameSelector, &out.NameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.SecondaryIPRangeNames != nil {
		in, out := &in.SecondaryIPRangeNames, &out.SecondaryIPRangeNames
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SourceIPRangesToNAT != nil {
		in, out := &in.SourceIPRangesToNAT, &out.SourceIPRangesToNAT
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubnetworkInitParameters.
func (in *SubnetworkInitParameters) DeepCopy() *SubnetworkInitParameters {
	if in == nil {
		return nil
	}
	out := new(SubnetworkInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubnetworkInitParameters_2) DeepCopyInto(out *SubnetworkInitParameters_2) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.ExternalIPv6Prefix != nil {
		in, out := &in.ExternalIPv6Prefix, &out.ExternalIPv6Prefix
		*out = new(string)
		**out = **in
	}
	if in.IPCidrRange != nil {
		in, out := &in.IPCidrRange, &out.IPCidrRange
		*out = new(string)
		**out = **in
	}
	if in.IPv6AccessType != nil {
		in, out := &in.IPv6AccessType, &out.IPv6AccessType
		*out = new(string)
		**out = **in
	}
	if in.LogConfig != nil {
		in, out := &in.LogConfig, &out.LogConfig
		*out = make([]SubnetworkLogConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Network != nil {
		in, out := &in.Network, &out.Network
		*out = new(string)
		**out = **in
	}
	if in.NetworkRef != nil {
		in, out := &in.NetworkRef, &out.NetworkRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.NetworkSelector != nil {
		in, out := &in.NetworkSelector, &out.NetworkSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.PrivateIPGoogleAccess != nil {
		in, out := &in.PrivateIPGoogleAccess, &out.PrivateIPGoogleAccess
		*out = new(bool)
		**out = **in
	}
	if in.PrivateIPv6GoogleAccess != nil {
		in, out := &in.PrivateIPv6GoogleAccess, &out.PrivateIPv6GoogleAccess
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Purpose != nil {
		in, out := &in.Purpose, &out.Purpose
		*out = new(string)
		**out = **in
	}
	if in.Role != nil {
		in, out := &in.Role, &out.Role
		*out = new(string)
		**out = **in
	}
	if in.SecondaryIPRange != nil {
		in, out := &in.SecondaryIPRange, &out.SecondaryIPRange
		*out = make([]SecondaryIPRangeInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StackType != nil {
		in, out := &in.StackType, &out.StackType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubnetworkInitParameters_2.
func (in *SubnetworkInitParameters_2) DeepCopy() *SubnetworkInitParameters_2 {
	if in == nil {
		return nil
	}
	out := new(SubnetworkInitParameters_2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubnetworkList) DeepCopyInto(out *SubnetworkList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Subnetwork, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubnetworkList.
func (in *SubnetworkList) DeepCopy() *SubnetworkList {
	if in == nil {
		return nil
	}
	out := new(SubnetworkList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SubnetworkList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubnetworkLogConfigInitParameters) DeepCopyInto(out *SubnetworkLogConfigInitParameters) {
	*out = *in
	if in.AggregationInterval != nil {
		in, out := &in.AggregationInterval, &out.AggregationInterval
		*out = new(string)
		**out = **in
	}
	if in.FilterExpr != nil {
		in, out := &in.FilterExpr, &out.FilterExpr
		*out = new(string)
		**out = **in
	}
	if in.FlowSampling != nil {
		in, out := &in.FlowSampling, &out.FlowSampling
		*out = new(float64)
		**out = **in
	}
	if in.Metadata != nil {
		in, out := &in.Metadata, &out.Metadata
		*out = new(string)
		**out = **in
	}
	if in.MetadataFields != nil {
		in, out := &in.MetadataFields, &out.MetadataFields
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubnetworkLogConfigInitParameters.
func (in *SubnetworkLogConfigInitParameters) DeepCopy() *SubnetworkLogConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(SubnetworkLogConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubnetworkLogConfigObservation) DeepCopyInto(out *SubnetworkLogConfigObservation) {
	*out = *in
	if in.AggregationInterval != nil {
		in, out := &in.AggregationInterval, &out.AggregationInterval
		*out = new(string)
		**out = **in
	}
	if in.FilterExpr != nil {
		in, out := &in.FilterExpr, &out.FilterExpr
		*out = new(string)
		**out = **in
	}
	if in.FlowSampling != nil {
		in, out := &in.FlowSampling, &out.FlowSampling
		*out = new(float64)
		**out = **in
	}
	if in.Metadata != nil {
		in, out := &in.Metadata, &out.Metadata
		*out = new(string)
		**out = **in
	}
	if in.MetadataFields != nil {
		in, out := &in.MetadataFields, &out.MetadataFields
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubnetworkLogConfigObservation.
func (in *SubnetworkLogConfigObservation) DeepCopy() *SubnetworkLogConfigObservation {
	if in == nil {
		return nil
	}
	out := new(SubnetworkLogConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubnetworkLogConfigParameters) DeepCopyInto(out *SubnetworkLogConfigParameters) {
	*out = *in
	if in.AggregationInterval != nil {
		in, out := &in.AggregationInterval, &out.AggregationInterval
		*out = new(string)
		**out = **in
	}
	if in.FilterExpr != nil {
		in, out := &in.FilterExpr, &out.FilterExpr
		*out = new(string)
		**out = **in
	}
	if in.FlowSampling != nil {
		in, out := &in.FlowSampling, &out.FlowSampling
		*out = new(float64)
		**out = **in
	}
	if in.Metadata != nil {
		in, out := &in.Metadata, &out.Metadata
		*out = new(string)
		**out = **in
	}
	if in.MetadataFields != nil {
		in, out := &in.MetadataFields, &out.MetadataFields
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubnetworkLogConfigParameters.
func (in *SubnetworkLogConfigParameters) DeepCopy() *SubnetworkLogConfigParameters {
	if in == nil {
		return nil
	}
	out := new(SubnetworkLogConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubnetworkObservation) DeepCopyInto(out *SubnetworkObservation) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.SecondaryIPRangeNames != nil {
		in, out := &in.SecondaryIPRangeNames, &out.SecondaryIPRangeNames
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SourceIPRangesToNAT != nil {
		in, out := &in.SourceIPRangesToNAT, &out.SourceIPRangesToNAT
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubnetworkObservation.
func (in *SubnetworkObservation) DeepCopy() *SubnetworkObservation {
	if in == nil {
		return nil
	}
	out := new(SubnetworkObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubnetworkObservation_2) DeepCopyInto(out *SubnetworkObservation_2) {
	*out = *in
	if in.CreationTimestamp != nil {
		in, out := &in.CreationTimestamp, &out.CreationTimestamp
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.ExternalIPv6Prefix != nil {
		in, out := &in.ExternalIPv6Prefix, &out.ExternalIPv6Prefix
		*out = new(string)
		**out = **in
	}
	if in.Fingerprint != nil {
		in, out := &in.Fingerprint, &out.Fingerprint
		*out = new(string)
		**out = **in
	}
	if in.GatewayAddress != nil {
		in, out := &in.GatewayAddress, &out.GatewayAddress
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IPCidrRange != nil {
		in, out := &in.IPCidrRange, &out.IPCidrRange
		*out = new(string)
		**out = **in
	}
	if in.IPv6AccessType != nil {
		in, out := &in.IPv6AccessType, &out.IPv6AccessType
		*out = new(string)
		**out = **in
	}
	if in.IPv6CidrRange != nil {
		in, out := &in.IPv6CidrRange, &out.IPv6CidrRange
		*out = new(string)
		**out = **in
	}
	if in.InternalIPv6Prefix != nil {
		in, out := &in.InternalIPv6Prefix, &out.InternalIPv6Prefix
		*out = new(string)
		**out = **in
	}
	if in.LogConfig != nil {
		in, out := &in.LogConfig, &out.LogConfig
		*out = make([]SubnetworkLogConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Network != nil {
		in, out := &in.Network, &out.Network
		*out = new(string)
		**out = **in
	}
	if in.PrivateIPGoogleAccess != nil {
		in, out := &in.PrivateIPGoogleAccess, &out.PrivateIPGoogleAccess
		*out = new(bool)
		**out = **in
	}
	if in.PrivateIPv6GoogleAccess != nil {
		in, out := &in.PrivateIPv6GoogleAccess, &out.PrivateIPv6GoogleAccess
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Purpose != nil {
		in, out := &in.Purpose, &out.Purpose
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.Role != nil {
		in, out := &in.Role, &out.Role
		*out = new(string)
		**out = **in
	}
	if in.SecondaryIPRange != nil {
		in, out := &in.SecondaryIPRange, &out.SecondaryIPRange
		*out = make([]SecondaryIPRangeObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SelfLink != nil {
		in, out := &in.SelfLink, &out.SelfLink
		*out = new(string)
		**out = **in
	}
	if in.StackType != nil {
		in, out := &in.StackType, &out.StackType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubnetworkObservation_2.
func (in *SubnetworkObservation_2) DeepCopy() *SubnetworkObservation_2 {
	if in == nil {
		return nil
	}
	out := new(SubnetworkObservation_2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubnetworkParameters) DeepCopyInto(out *SubnetworkParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NameRef != nil {
		in, out := &in.NameRef, &out.NameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.NameSelector != nil {
		in, out := &in.NameSelector, &out.NameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.SecondaryIPRangeNames != nil {
		in, out := &in.SecondaryIPRangeNames, &out.SecondaryIPRangeNames
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SourceIPRangesToNAT != nil {
		in, out := &in.SourceIPRangesToNAT, &out.SourceIPRangesToNAT
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubnetworkParameters.
func (in *SubnetworkParameters) DeepCopy() *SubnetworkParameters {
	if in == nil {
		return nil
	}
	out := new(SubnetworkParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubnetworkParameters_2) DeepCopyInto(out *SubnetworkParameters_2) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.ExternalIPv6Prefix != nil {
		in, out := &in.ExternalIPv6Prefix, &out.ExternalIPv6Prefix
		*out = new(string)
		**out = **in
	}
	if in.IPCidrRange != nil {
		in, out := &in.IPCidrRange, &out.IPCidrRange
		*out = new(string)
		**out = **in
	}
	if in.IPv6AccessType != nil {
		in, out := &in.IPv6AccessType, &out.IPv6AccessType
		*out = new(string)
		**out = **in
	}
	if in.LogConfig != nil {
		in, out := &in.LogConfig, &out.LogConfig
		*out = make([]SubnetworkLogConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Network != nil {
		in, out := &in.Network, &out.Network
		*out = new(string)
		**out = **in
	}
	if in.NetworkRef != nil {
		in, out := &in.NetworkRef, &out.NetworkRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.NetworkSelector != nil {
		in, out := &in.NetworkSelector, &out.NetworkSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.PrivateIPGoogleAccess != nil {
		in, out := &in.PrivateIPGoogleAccess, &out.PrivateIPGoogleAccess
		*out = new(bool)
		**out = **in
	}
	if in.PrivateIPv6GoogleAccess != nil {
		in, out := &in.PrivateIPv6GoogleAccess, &out.PrivateIPv6GoogleAccess
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Purpose != nil {
		in, out := &in.Purpose, &out.Purpose
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.Role != nil {
		in, out := &in.Role, &out.Role
		*out = new(string)
		**out = **in
	}
	if in.SecondaryIPRange != nil {
		in, out := &in.SecondaryIPRange, &out.SecondaryIPRange
		*out = make([]SecondaryIPRangeParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StackType != nil {
		in, out := &in.StackType, &out.StackType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubnetworkParameters_2.
func (in *SubnetworkParameters_2) DeepCopy() *SubnetworkParameters_2 {
	if in == nil {
		return nil
	}
	out := new(SubnetworkParameters_2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubnetworkSpec) DeepCopyInto(out *SubnetworkSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubnetworkSpec.
func (in *SubnetworkSpec) DeepCopy() *SubnetworkSpec {
	if in == nil {
		return nil
	}
	out := new(SubnetworkSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubnetworkStatus) DeepCopyInto(out *SubnetworkStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubnetworkStatus.
func (in *SubnetworkStatus) DeepCopy() *SubnetworkStatus {
	if in == nil {
		return nil
	}
	out := new(SubnetworkStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubnetworksInitParameters) DeepCopyInto(out *SubnetworksInitParameters) {
	*out = *in
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubnetworksInitParameters.
func (in *SubnetworksInitParameters) DeepCopy() *SubnetworksInitParameters {
	if in == nil {
		return nil
	}
	out := new(SubnetworksInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubnetworksObservation) DeepCopyInto(out *SubnetworksObservation) {
	*out = *in
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubnetworksObservation.
func (in *SubnetworksObservation) DeepCopy() *SubnetworksObservation {
	if in == nil {
		return nil
	}
	out := new(SubnetworksObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubnetworksParameters) DeepCopyInto(out *SubnetworksParameters) {
	*out = *in
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubnetworksParameters.
func (in *SubnetworksParameters) DeepCopy() *SubnetworksParameters {
	if in == nil {
		return nil
	}
	out := new(SubnetworksParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TCPHealthCheckInitParameters) DeepCopyInto(out *TCPHealthCheckInitParameters) {
	*out = *in
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
	if in.PortName != nil {
		in, out := &in.PortName, &out.PortName
		*out = new(string)
		**out = **in
	}
	if in.PortSpecification != nil {
		in, out := &in.PortSpecification, &out.PortSpecification
		*out = new(string)
		**out = **in
	}
	if in.ProxyHeader != nil {
		in, out := &in.ProxyHeader, &out.ProxyHeader
		*out = new(string)
		**out = **in
	}
	if in.Request != nil {
		in, out := &in.Request, &out.Request
		*out = new(string)
		**out = **in
	}
	if in.Response != nil {
		in, out := &in.Response, &out.Response
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TCPHealthCheckInitParameters.
func (in *TCPHealthCheckInitParameters) DeepCopy() *TCPHealthCheckInitParameters {
	if in == nil {
		return nil
	}
	out := new(TCPHealthCheckInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TCPHealthCheckObservation) DeepCopyInto(out *TCPHealthCheckObservation) {
	*out = *in
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
	if in.PortName != nil {
		in, out := &in.PortName, &out.PortName
		*out = new(string)
		**out = **in
	}
	if in.PortSpecification != nil {
		in, out := &in.PortSpecification, &out.PortSpecification
		*out = new(string)
		**out = **in
	}
	if in.ProxyHeader != nil {
		in, out := &in.ProxyHeader, &out.ProxyHeader
		*out = new(string)
		**out = **in
	}
	if in.Request != nil {
		in, out := &in.Request, &out.Request
		*out = new(string)
		**out = **in
	}
	if in.Response != nil {
		in, out := &in.Response, &out.Response
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TCPHealthCheckObservation.
func (in *TCPHealthCheckObservation) DeepCopy() *TCPHealthCheckObservation {
	if in == nil {
		return nil
	}
	out := new(TCPHealthCheckObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TCPHealthCheckParameters) DeepCopyInto(out *TCPHealthCheckParameters) {
	*out = *in
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
	if in.PortName != nil {
		in, out := &in.PortName, &out.PortName
		*out = new(string)
		**out = **in
	}
	if in.PortSpecification != nil {
		in, out := &in.PortSpecification, &out.PortSpecification
		*out = new(string)
		**out = **in
	}
	if in.ProxyHeader != nil {
		in, out := &in.ProxyHeader, &out.ProxyHeader
		*out = new(string)
		**out = **in
	}
	if in.Request != nil {
		in, out := &in.Request, &out.Request
		*out = new(string)
		**out = **in
	}
	if in.Response != nil {
		in, out := &in.Response, &out.Response
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TCPHealthCheckParameters.
func (in *TCPHealthCheckParameters) DeepCopy() *TCPHealthCheckParameters {
	if in == nil {
		return nil
	}
	out := new(TCPHealthCheckParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TTLInitParameters) DeepCopyInto(out *TTLInitParameters) {
	*out = *in
	if in.Nanos != nil {
		in, out := &in.Nanos, &out.Nanos
		*out = new(float64)
		**out = **in
	}
	if in.Seconds != nil {
		in, out := &in.Seconds, &out.Seconds
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TTLInitParameters.
func (in *TTLInitParameters) DeepCopy() *TTLInitParameters {
	if in == nil {
		return nil
	}
	out := new(TTLInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TTLObservation) DeepCopyInto(out *TTLObservation) {
	*out = *in
	if in.Nanos != nil {
		in, out := &in.Nanos, &out.Nanos
		*out = new(float64)
		**out = **in
	}
	if in.Seconds != nil {
		in, out := &in.Seconds, &out.Seconds
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TTLObservation.
func (in *TTLObservation) DeepCopy() *TTLObservation {
	if in == nil {
		return nil
	}
	out := new(TTLObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TTLParameters) DeepCopyInto(out *TTLParameters) {
	*out = *in
	if in.Nanos != nil {
		in, out := &in.Nanos, &out.Nanos
		*out = new(float64)
		**out = **in
	}
	if in.Seconds != nil {
		in, out := &in.Seconds, &out.Seconds
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TTLParameters.
func (in *TTLParameters) DeepCopy() *TTLParameters {
	if in == nil {
		return nil
	}
	out := new(TTLParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TargetGRPCProxy) DeepCopyInto(out *TargetGRPCProxy) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TargetGRPCProxy.
func (in *TargetGRPCProxy) DeepCopy() *TargetGRPCProxy {
	if in == nil {
		return nil
	}
	out := new(TargetGRPCProxy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *TargetGRPCProxy) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TargetGRPCProxyInitParameters) DeepCopyInto(out *TargetGRPCProxyInitParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.URLMap != nil {
		in, out := &in.URLMap, &out.URLMap
		*out = new(string)
		**out = **in
	}
	if in.URLMapRef != nil {
		in, out := &in.URLMapRef, &out.URLMapRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.URLMapSelector != nil {
		in, out := &in.URLMapSelector, &out.URLMapSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.ValidateForProxyless != nil {
		in, out := &in.ValidateForProxyless, &out.ValidateForProxyless
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TargetGRPCProxyInitParameters.
func (in *TargetGRPCProxyInitParameters) DeepCopy() *TargetGRPCProxyInitParameters {
	if in == nil {
		return nil
	}
	out := new(TargetGRPCProxyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TargetGRPCProxyList) DeepCopyInto(out *TargetGRPCProxyList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]TargetGRPCProxy, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TargetGRPCProxyList.
func (in *TargetGRPCProxyList) DeepCopy() *TargetGRPCProxyList {
	if in == nil {
		return nil
	}
	out := new(TargetGRPCProxyList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *TargetGRPCProxyList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TargetGRPCProxyObservation) DeepCopyInto(out *TargetGRPCProxyObservation) {
	*out = *in
	if in.CreationTimestamp != nil {
		in, out := &in.CreationTimestamp, &out.CreationTimestamp
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Fingerprint != nil {
		in, out := &in.Fingerprint, &out.Fingerprint
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.SelfLink != nil {
		in, out := &in.SelfLink, &out.SelfLink
		*out = new(string)
		**out = **in
	}
	if in.SelfLinkWithID != nil {
		in, out := &in.SelfLinkWithID, &out.SelfLinkWithID
		*out = new(string)
		**out = **in
	}
	if in.URLMap != nil {
		in, out := &in.URLMap, &out.URLMap
		*out = new(string)
		**out = **in
	}
	if in.ValidateForProxyless != nil {
		in, out := &in.ValidateForProxyless, &out.ValidateForProxyless
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TargetGRPCProxyObservation.
func (in *TargetGRPCProxyObservation) DeepCopy() *TargetGRPCProxyObservation {
	if in == nil {
		return nil
	}
	out := new(TargetGRPCProxyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TargetGRPCProxyParameters) DeepCopyInto(out *TargetGRPCProxyParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.URLMap != nil {
		in, out := &in.URLMap, &out.URLMap
		*out = new(string)
		**out = **in
	}
	if in.URLMapRef != nil {
		in, out := &in.URLMapRef, &out.URLMapRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.URLMapSelector != nil {
		in, out := &in.URLMapSelector, &out.URLMapSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.ValidateForProxyless != nil {
		in, out := &in.ValidateForProxyless, &out.ValidateForProxyless
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TargetGRPCProxyParameters.
func (in *TargetGRPCProxyParameters) DeepCopy() *TargetGRPCProxyParameters {
	if in == nil {
		return nil
	}
	out := new(TargetGRPCProxyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TargetGRPCProxySpec) DeepCopyInto(out *TargetGRPCProxySpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TargetGRPCProxySpec.
func (in *TargetGRPCProxySpec) DeepCopy() *TargetGRPCProxySpec {
	if in == nil {
		return nil
	}
	out := new(TargetGRPCProxySpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TargetGRPCProxyStatus) DeepCopyInto(out *TargetGRPCProxyStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TargetGRPCProxyStatus.
func (in *TargetGRPCProxyStatus) DeepCopy() *TargetGRPCProxyStatus {
	if in == nil {
		return nil
	}
	out := new(TargetGRPCProxyStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TargetHTTPProxy) DeepCopyInto(out *TargetHTTPProxy) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TargetHTTPProxy.
func (in *TargetHTTPProxy) DeepCopy() *TargetHTTPProxy {
	if in == nil {
		return nil
	}
	out := new(TargetHTTPProxy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *TargetHTTPProxy) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TargetHTTPProxyInitParameters) DeepCopyInto(out *TargetHTTPProxyInitParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.HTTPKeepAliveTimeoutSec != nil {
		in, out := &in.HTTPKeepAliveTimeoutSec, &out.HTTPKeepAliveTimeoutSec
		*out = new(float64)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.ProxyBind != nil {
		in, out := &in.ProxyBind, &out.ProxyBind
		*out = new(bool)
		**out = **in
	}
	if in.URLMap != nil {
		in, out := &in.URLMap, &out.URLMap
		*out = new(string)
		**out = **in
	}
	if in.URLMapRef != nil {
		in, out := &in.URLMapRef, &out.URLMapRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.URLMapSelector != nil {
		in, out := &in.URLMapSelector, &out.URLMapSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TargetHTTPProxyInitParameters.
func (in *TargetHTTPProxyInitParameters) DeepCopy() *TargetHTTPProxyInitParameters {
	if in == nil {
		return nil
	}
	out := new(TargetHTTPProxyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TargetHTTPProxyList) DeepCopyInto(out *TargetHTTPProxyList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]TargetHTTPProxy, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TargetHTTPProxyList.
func (in *TargetHTTPProxyList) DeepCopy() *TargetHTTPProxyList {
	if in == nil {
		return nil
	}
	out := new(TargetHTTPProxyList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *TargetHTTPProxyList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TargetHTTPProxyObservation) DeepCopyInto(out *TargetHTTPProxyObservation) {
	*out = *in
	if in.CreationTimestamp != nil {
		in, out := &in.CreationTimestamp, &out.CreationTimestamp
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.HTTPKeepAliveTimeoutSec != nil {
		in, out := &in.HTTPKeepAliveTimeoutSec, &out.HTTPKeepAliveTimeoutSec
		*out = new(float64)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.ProxyBind != nil {
		in, out := &in.ProxyBind, &out.ProxyBind
		*out = new(bool)
		**out = **in
	}
	if in.ProxyID != nil {
		in, out := &in.ProxyID, &out.ProxyID
		*out = new(float64)
		**out = **in
	}
	if in.SelfLink != nil {
		in, out := &in.SelfLink, &out.SelfLink
		*out = new(string)
		**out = **in
	}
	if in.URLMap != nil {
		in, out := &in.URLMap, &out.URLMap
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TargetHTTPProxyObservation.
func (in *TargetHTTPProxyObservation) DeepCopy() *TargetHTTPProxyObservation {
	if in == nil {
		return nil
	}
	out := new(TargetHTTPProxyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TargetHTTPProxyParameters) DeepCopyInto(out *TargetHTTPProxyParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.HTTPKeepAliveTimeoutSec != nil {
		in, out := &in.HTTPKeepAliveTimeoutSec, &out.HTTPKeepAliveTimeoutSec
		*out = new(float64)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.ProxyBind != nil {
		in, out := &in.ProxyBind, &out.ProxyBind
		*out = new(bool)
		**out = **in
	}
	if in.URLMap != nil {
		in, out := &in.URLMap, &out.URLMap
		*out = new(string)
		**out = **in
	}
	if in.URLMapRef != nil {
		in, out := &in.URLMapRef, &out.URLMapRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.URLMapSelector != nil {
		in, out := &in.URLMapSelector, &out.URLMapSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TargetHTTPProxyParameters.
func (in *TargetHTTPProxyParameters) DeepCopy() *TargetHTTPProxyParameters {
	if in == nil {
		return nil
	}
	out := new(TargetHTTPProxyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TargetHTTPProxySpec) DeepCopyInto(out *TargetHTTPProxySpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TargetHTTPProxySpec.
func (in *TargetHTTPProxySpec) DeepCopy() *TargetHTTPProxySpec {
	if in == nil {
		return nil
	}
	out := new(TargetHTTPProxySpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TargetHTTPProxyStatus) DeepCopyInto(out *TargetHTTPProxyStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TargetHTTPProxyStatus.
func (in *TargetHTTPProxyStatus) DeepCopy() *TargetHTTPProxyStatus {
	if in == nil {
		return nil
	}
	out := new(TargetHTTPProxyStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TargetHTTPSProxy) DeepCopyInto(out *TargetHTTPSProxy) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TargetHTTPSProxy.
func (in *TargetHTTPSProxy) DeepCopy() *TargetHTTPSProxy {
	if in == nil {
		return nil
	}
	out := new(TargetHTTPSProxy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *TargetHTTPSProxy) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TargetHTTPSProxyInitParameters) DeepCopyInto(out *TargetHTTPSProxyInitParameters) {
	*out = *in
	if in.CertificateManagerCertificates != nil {
		in, out := &in.CertificateManagerCertificates, &out.CertificateManagerCertificates
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CertificateMap != nil {
		in, out := &in.CertificateMap, &out.CertificateMap
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.HTTPKeepAliveTimeoutSec != nil {
		in, out := &in.HTTPKeepAliveTimeoutSec, &out.HTTPKeepAliveTimeoutSec
		*out = new(float64)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.ProxyBind != nil {
		in, out := &in.ProxyBind, &out.ProxyBind
		*out = new(bool)
		**out = **in
	}
	if in.QuicOverride != nil {
		in, out := &in.QuicOverride, &out.QuicOverride
		*out = new(string)
		**out = **in
	}
	if in.SSLCertificates != nil {
		in, out := &in.SSLCertificates, &out.SSLCertificates
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SSLCertificatesRefs != nil {
		in, out := &in.SSLCertificatesRefs, &out.SSLCertificatesRefs
		*out = make([]v1.Reference, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SSLCertificatesSelector != nil {
		in, out := &in.SSLCertificatesSelector, &out.SSLCertificatesSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.SSLPolicy != nil {
		in, out := &in.SSLPolicy, &out.SSLPolicy
		*out = new(string)
		**out = **in
	}
	if in.ServerTLSPolicy != nil {
		in, out := &in.ServerTLSPolicy, &out.ServerTLSPolicy
		*out = new(string)
		**out = **in
	}
	if in.TLSEarlyData != nil {
		in, out := &in.TLSEarlyData, &out.TLSEarlyData
		*out = new(string)
		**out = **in
	}
	if in.URLMap != nil {
		in, out := &in.URLMap, &out.URLMap
		*out = new(string)
		**out = **in
	}
	if in.URLMapRef != nil {
		in, out := &in.URLMapRef, &out.URLMapRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.URLMapSelector != nil {
		in, out := &in.URLMapSelector, &out.URLMapSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TargetHTTPSProxyInitParameters.
func (in *TargetHTTPSProxyInitParameters) DeepCopy() *TargetHTTPSProxyInitParameters {
	if in == nil {
		return nil
	}
	out := new(TargetHTTPSProxyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TargetHTTPSProxyList) DeepCopyInto(out *TargetHTTPSProxyList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]TargetHTTPSProxy, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TargetHTTPSProxyList.
func (in *TargetHTTPSProxyList) DeepCopy() *TargetHTTPSProxyList {
	if in == nil {
		return nil
	}
	out := new(TargetHTTPSProxyList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *TargetHTTPSProxyList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TargetHTTPSProxyObservation) DeepCopyInto(out *TargetHTTPSProxyObservation) {
	*out = *in
	if in.CertificateManagerCertificates != nil {
		in, out := &in.CertificateManagerCertificates, &out.CertificateManagerCertificates
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CertificateMap != nil {
		in, out := &in.CertificateMap, &out.CertificateMap
		*out = new(string)
		**out = **in
	}
	if in.CreationTimestamp != nil {
		in, out := &in.CreationTimestamp, &out.CreationTimestamp
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.HTTPKeepAliveTimeoutSec != nil {
		in, out := &in.HTTPKeepAliveTimeoutSec, &out.HTTPKeepAliveTimeoutSec
		*out = new(float64)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.ProxyBind != nil {
		in, out := &in.ProxyBind, &out.ProxyBind
		*out = new(bool)
		**out = **in
	}
	if in.ProxyID != nil {
		in, out := &in.ProxyID, &out.ProxyID
		*out = new(float64)
		**out = **in
	}
	if in.QuicOverride != nil {
		in, out := &in.QuicOverride, &out.QuicOverride
		*out = new(string)
		**out = **in
	}
	if in.SSLCertificates != nil {
		in, out := &in.SSLCertificates, &out.SSLCertificates
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SSLPolicy != nil {
		in, out := &in.SSLPolicy, &out.SSLPolicy
		*out = new(string)
		**out = **in
	}
	if in.SelfLink != nil {
		in, out := &in.SelfLink, &out.SelfLink
		*out = new(string)
		**out = **in
	}
	if in.ServerTLSPolicy != nil {
		in, out := &in.ServerTLSPolicy, &out.ServerTLSPolicy
		*out = new(string)
		**out = **in
	}
	if in.TLSEarlyData != nil {
		in, out := &in.TLSEarlyData, &out.TLSEarlyData
		*out = new(string)
		**out = **in
	}
	if in.URLMap != nil {
		in, out := &in.URLMap, &out.URLMap
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TargetHTTPSProxyObservation.
func (in *TargetHTTPSProxyObservation) DeepCopy() *TargetHTTPSProxyObservation {
	if in == nil {
		return nil
	}
	out := new(TargetHTTPSProxyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TargetHTTPSProxyParameters) DeepCopyInto(out *TargetHTTPSProxyParameters) {
	*out = *in
	if in.CertificateManagerCertificates != nil {
		in, out := &in.CertificateManagerCertificates, &out.CertificateManagerCertificates
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CertificateMap != nil {
		in, out := &in.CertificateMap, &out.CertificateMap
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.HTTPKeepAliveTimeoutSec != nil {
		in, out := &in.HTTPKeepAliveTimeoutSec, &out.HTTPKeepAliveTimeoutSec
		*out = new(float64)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.ProxyBind != nil {
		in, out := &in.ProxyBind, &out.ProxyBind
		*out = new(bool)
		**out = **in
	}
	if in.QuicOverride != nil {
		in, out := &in.QuicOverride, &out.QuicOverride
		*out = new(string)
		**out = **in
	}
	if in.SSLCertificates != nil {
		in, out := &in.SSLCertificates, &out.SSLCertificates
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SSLCertificatesRefs != nil {
		in, out := &in.SSLCertificatesRefs, &out.SSLCertificatesRefs
		*out = make([]v1.Reference, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SSLCertificatesSelector != nil {
		in, out := &in.SSLCertificatesSelector, &out.SSLCertificatesSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.SSLPolicy != nil {
		in, out := &in.SSLPolicy, &out.SSLPolicy
		*out = new(string)
		**out = **in
	}
	if in.ServerTLSPolicy != nil {
		in, out := &in.ServerTLSPolicy, &out.ServerTLSPolicy
		*out = new(string)
		**out = **in
	}
	if in.TLSEarlyData != nil {
		in, out := &in.TLSEarlyData, &out.TLSEarlyData
		*out = new(string)
		**out = **in
	}
	if in.URLMap != nil {
		in, out := &in.URLMap, &out.URLMap
		*out = new(string)
		**out = **in
	}
	if in.URLMapRef != nil {
		in, out := &in.URLMapRef, &out.URLMapRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.URLMapSelector != nil {
		in, out := &in.URLMapSelector, &out.URLMapSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TargetHTTPSProxyParameters.
func (in *TargetHTTPSProxyParameters) DeepCopy() *TargetHTTPSProxyParameters {
	if in == nil {
		return nil
	}
	out := new(TargetHTTPSProxyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TargetHTTPSProxySpec) DeepCopyInto(out *TargetHTTPSProxySpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TargetHTTPSProxySpec.
func (in *TargetHTTPSProxySpec) DeepCopy() *TargetHTTPSProxySpec {
	if in == nil {
		return nil
	}
	out := new(TargetHTTPSProxySpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TargetHTTPSProxyStatus) DeepCopyInto(out *TargetHTTPSProxyStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TargetHTTPSProxyStatus.
func (in *TargetHTTPSProxyStatus) DeepCopy() *TargetHTTPSProxyStatus {
	if in == nil {
		return nil
	}
	out := new(TargetHTTPSProxyStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TargetInstance) DeepCopyInto(out *TargetInstance) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TargetInstance.
func (in *TargetInstance) DeepCopy() *TargetInstance {
	if in == nil {
		return nil
	}
	out := new(TargetInstance)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *TargetInstance) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TargetInstanceInitParameters) DeepCopyInto(out *TargetInstanceInitParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Instance != nil {
		in, out := &in.Instance, &out.Instance
		*out = new(string)
		**out = **in
	}
	if in.InstanceRef != nil {
		in, out := &in.InstanceRef, &out.InstanceRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.InstanceSelector != nil {
		in, out := &in.InstanceSelector, &out.InstanceSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.NATPolicy != nil {
		in, out := &in.NATPolicy, &out.NATPolicy
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TargetInstanceInitParameters.
func (in *TargetInstanceInitParameters) DeepCopy() *TargetInstanceInitParameters {
	if in == nil {
		return nil
	}
	out := new(TargetInstanceInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TargetInstanceList) DeepCopyInto(out *TargetInstanceList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]TargetInstance, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TargetInstanceList.
func (in *TargetInstanceList) DeepCopy() *TargetInstanceList {
	if in == nil {
		return nil
	}
	out := new(TargetInstanceList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *TargetInstanceList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TargetInstanceObservation) DeepCopyInto(out *TargetInstanceObservation) {
	*out = *in
	if in.CreationTimestamp != nil {
		in, out := &in.CreationTimestamp, &out.CreationTimestamp
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Instance != nil {
		in, out := &in.Instance, &out.Instance
		*out = new(string)
		**out = **in
	}
	if in.NATPolicy != nil {
		in, out := &in.NATPolicy, &out.NATPolicy
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.SelfLink != nil {
		in, out := &in.SelfLink, &out.SelfLink
		*out = new(string)
		**out = **in
	}
	if in.Zone != nil {
		in, out := &in.Zone, &out.Zone
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TargetInstanceObservation.
func (in *TargetInstanceObservation) DeepCopy() *TargetInstanceObservation {
	if in == nil {
		return nil
	}
	out := new(TargetInstanceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TargetInstanceParameters) DeepCopyInto(out *TargetInstanceParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Instance != nil {
		in, out := &in.Instance, &out.Instance
		*out = new(string)
		**out = **in
	}
	if in.InstanceRef != nil {
		in, out := &in.InstanceRef, &out.InstanceRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.InstanceSelector != nil {
		in, out := &in.InstanceSelector, &out.InstanceSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.NATPolicy != nil {
		in, out := &in.NATPolicy, &out.NATPolicy
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Zone != nil {
		in, out := &in.Zone, &out.Zone
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TargetInstanceParameters.
func (in *TargetInstanceParameters) DeepCopy() *TargetInstanceParameters {
	if in == nil {
		return nil
	}
	out := new(TargetInstanceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TargetInstanceSpec) DeepCopyInto(out *TargetInstanceSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TargetInstanceSpec.
func (in *TargetInstanceSpec) DeepCopy() *TargetInstanceSpec {
	if in == nil {
		return nil
	}
	out := new(TargetInstanceSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TargetInstanceStatus) DeepCopyInto(out *TargetInstanceStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TargetInstanceStatus.
func (in *TargetInstanceStatus) DeepCopy() *TargetInstanceStatus {
	if in == nil {
		return nil
	}
	out := new(TargetInstanceStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TargetPool) DeepCopyInto(out *TargetPool) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TargetPool.
func (in *TargetPool) DeepCopy() *TargetPool {
	if in == nil {
		return nil
	}
	out := new(TargetPool)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *TargetPool) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TargetPoolInitParameters) DeepCopyInto(out *TargetPoolInitParameters) {
	*out = *in
	if in.BackupPool != nil {
		in, out := &in.BackupPool, &out.BackupPool
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.FailoverRatio != nil {
		in, out := &in.FailoverRatio, &out.FailoverRatio
		*out = new(float64)
		**out = **in
	}
	if in.HealthChecks != nil {
		in, out := &in.HealthChecks, &out.HealthChecks
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.HealthChecksRefs != nil {
		in, out := &in.HealthChecksRefs, &out.HealthChecksRefs
		*out = make([]v1.Reference, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HealthChecksSelector != nil {
		in, out := &in.HealthChecksSelector, &out.HealthChecksSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Instances != nil {
		in, out := &in.Instances, &out.Instances
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.SessionAffinity != nil {
		in, out := &in.SessionAffinity, &out.SessionAffinity
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TargetPoolInitParameters.
func (in *TargetPoolInitParameters) DeepCopy() *TargetPoolInitParameters {
	if in == nil {
		return nil
	}
	out := new(TargetPoolInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TargetPoolList) DeepCopyInto(out *TargetPoolList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]TargetPool, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TargetPoolList.
func (in *TargetPoolList) DeepCopy() *TargetPoolList {
	if in == nil {
		return nil
	}
	out := new(TargetPoolList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *TargetPoolList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TargetPoolObservation) DeepCopyInto(out *TargetPoolObservation) {
	*out = *in
	if in.BackupPool != nil {
		in, out := &in.BackupPool, &out.BackupPool
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.FailoverRatio != nil {
		in, out := &in.FailoverRatio, &out.FailoverRatio
		*out = new(float64)
		**out = **in
	}
	if in.HealthChecks != nil {
		in, out := &in.HealthChecks, &out.HealthChecks
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Instances != nil {
		in, out := &in.Instances, &out.Instances
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.SelfLink != nil {
		in, out := &in.SelfLink, &out.SelfLink
		*out = new(string)
		**out = **in
	}
	if in.SessionAffinity != nil {
		in, out := &in.SessionAffinity, &out.SessionAffinity
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TargetPoolObservation.
func (in *TargetPoolObservation) DeepCopy() *TargetPoolObservation {
	if in == nil {
		return nil
	}
	out := new(TargetPoolObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TargetPoolParameters) DeepCopyInto(out *TargetPoolParameters) {
	*out = *in
	if in.BackupPool != nil {
		in, out := &in.BackupPool, &out.BackupPool
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.FailoverRatio != nil {
		in, out := &in.FailoverRatio, &out.FailoverRatio
		*out = new(float64)
		**out = **in
	}
	if in.HealthChecks != nil {
		in, out := &in.HealthChecks, &out.HealthChecks
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.HealthChecksRefs != nil {
		in, out := &in.HealthChecksRefs, &out.HealthChecksRefs
		*out = make([]v1.Reference, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HealthChecksSelector != nil {
		in, out := &in.HealthChecksSelector, &out.HealthChecksSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Instances != nil {
		in, out := &in.Instances, &out.Instances
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.SessionAffinity != nil {
		in, out := &in.SessionAffinity, &out.SessionAffinity
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TargetPoolParameters.
func (in *TargetPoolParameters) DeepCopy() *TargetPoolParameters {
	if in == nil {
		return nil
	}
	out := new(TargetPoolParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TargetPoolSpec) DeepCopyInto(out *TargetPoolSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TargetPoolSpec.
func (in *TargetPoolSpec) DeepCopy() *TargetPoolSpec {
	if in == nil {
		return nil
	}
	out := new(TargetPoolSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TargetPoolStatus) DeepCopyInto(out *TargetPoolStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TargetPoolStatus.
func (in *TargetPoolStatus) DeepCopy() *TargetPoolStatus {
	if in == nil {
		return nil
	}
	out := new(TargetPoolStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TargetSSLProxy) DeepCopyInto(out *TargetSSLProxy) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TargetSSLProxy.
func (in *TargetSSLProxy) DeepCopy() *TargetSSLProxy {
	if in == nil {
		return nil
	}
	out := new(TargetSSLProxy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *TargetSSLProxy) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TargetSSLProxyInitParameters) DeepCopyInto(out *TargetSSLProxyInitParameters) {
	*out = *in
	if in.BackendService != nil {
		in, out := &in.BackendService, &out.BackendService
		*out = new(string)
		**out = **in
	}
	if in.BackendServiceRef != nil {
		in, out := &in.BackendServiceRef, &out.BackendServiceRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.BackendServiceSelector != nil {
		in, out := &in.BackendServiceSelector, &out.BackendServiceSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.CertificateMap != nil {
		in, out := &in.CertificateMap, &out.CertificateMap
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.ProxyHeader != nil {
		in, out := &in.ProxyHeader, &out.ProxyHeader
		*out = new(string)
		**out = **in
	}
	if in.SSLCertificates != nil {
		in, out := &in.SSLCertificates, &out.SSLCertificates
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SSLCertificatesRefs != nil {
		in, out := &in.SSLCertificatesRefs, &out.SSLCertificatesRefs
		*out = make([]v1.Reference, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SSLCertificatesSelector != nil {
		in, out := &in.SSLCertificatesSelector, &out.SSLCertificatesSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.SSLPolicy != nil {
		in, out := &in.SSLPolicy, &out.SSLPolicy
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TargetSSLProxyInitParameters.
func (in *TargetSSLProxyInitParameters) DeepCopy() *TargetSSLProxyInitParameters {
	if in == nil {
		return nil
	}
	out := new(TargetSSLProxyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TargetSSLProxyList) DeepCopyInto(out *TargetSSLProxyList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]TargetSSLProxy, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TargetSSLProxyList.
func (in *TargetSSLProxyList) DeepCopy() *TargetSSLProxyList {
	if in == nil {
		return nil
	}
	out := new(TargetSSLProxyList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *TargetSSLProxyList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TargetSSLProxyObservation) DeepCopyInto(out *TargetSSLProxyObservation) {
	*out = *in
	if in.BackendService != nil {
		in, out := &in.BackendService, &out.BackendService
		*out = new(string)
		**out = **in
	}
	if in.CertificateMap != nil {
		in, out := &in.CertificateMap, &out.CertificateMap
		*out = new(string)
		**out = **in
	}
	if in.CreationTimestamp != nil {
		in, out := &in.CreationTimestamp, &out.CreationTimestamp
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.ProxyHeader != nil {
		in, out := &in.ProxyHeader, &out.ProxyHeader
		*out = new(string)
		**out = **in
	}
	if in.ProxyID != nil {
		in, out := &in.ProxyID, &out.ProxyID
		*out = new(float64)
		**out = **in
	}
	if in.SSLCertificates != nil {
		in, out := &in.SSLCertificates, &out.SSLCertificates
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SSLPolicy != nil {
		in, out := &in.SSLPolicy, &out.SSLPolicy
		*out = new(string)
		**out = **in
	}
	if in.SelfLink != nil {
		in, out := &in.SelfLink, &out.SelfLink
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TargetSSLProxyObservation.
func (in *TargetSSLProxyObservation) DeepCopy() *TargetSSLProxyObservation {
	if in == nil {
		return nil
	}
	out := new(TargetSSLProxyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TargetSSLProxyParameters) DeepCopyInto(out *TargetSSLProxyParameters) {
	*out = *in
	if in.BackendService != nil {
		in, out := &in.BackendService, &out.BackendService
		*out = new(string)
		**out = **in
	}
	if in.BackendServiceRef != nil {
		in, out := &in.BackendServiceRef, &out.BackendServiceRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.BackendServiceSelector != nil {
		in, out := &in.BackendServiceSelector, &out.BackendServiceSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.CertificateMap != nil {
		in, out := &in.CertificateMap, &out.CertificateMap
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.ProxyHeader != nil {
		in, out := &in.ProxyHeader, &out.ProxyHeader
		*out = new(string)
		**out = **in
	}
	if in.SSLCertificates != nil {
		in, out := &in.SSLCertificates, &out.SSLCertificates
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SSLCertificatesRefs != nil {
		in, out := &in.SSLCertificatesRefs, &out.SSLCertificatesRefs
		*out = make([]v1.Reference, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SSLCertificatesSelector != nil {
		in, out := &in.SSLCertificatesSelector, &out.SSLCertificatesSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.SSLPolicy != nil {
		in, out := &in.SSLPolicy, &out.SSLPolicy
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TargetSSLProxyParameters.
func (in *TargetSSLProxyParameters) DeepCopy() *TargetSSLProxyParameters {
	if in == nil {
		return nil
	}
	out := new(TargetSSLProxyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TargetSSLProxySpec) DeepCopyInto(out *TargetSSLProxySpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TargetSSLProxySpec.
func (in *TargetSSLProxySpec) DeepCopy() *TargetSSLProxySpec {
	if in == nil {
		return nil
	}
	out := new(TargetSSLProxySpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TargetSSLProxyStatus) DeepCopyInto(out *TargetSSLProxyStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TargetSSLProxyStatus.
func (in *TargetSSLProxyStatus) DeepCopy() *TargetSSLProxyStatus {
	if in == nil {
		return nil
	}
	out := new(TargetSSLProxyStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TargetSizeInitParameters) DeepCopyInto(out *TargetSizeInitParameters) {
	*out = *in
	if in.Fixed != nil {
		in, out := &in.Fixed, &out.Fixed
		*out = new(float64)
		**out = **in
	}
	if in.Percent != nil {
		in, out := &in.Percent, &out.Percent
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TargetSizeInitParameters.
func (in *TargetSizeInitParameters) DeepCopy() *TargetSizeInitParameters {
	if in == nil {
		return nil
	}
	out := new(TargetSizeInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TargetSizeObservation) DeepCopyInto(out *TargetSizeObservation) {
	*out = *in
	if in.Fixed != nil {
		in, out := &in.Fixed, &out.Fixed
		*out = new(float64)
		**out = **in
	}
	if in.Percent != nil {
		in, out := &in.Percent, &out.Percent
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TargetSizeObservation.
func (in *TargetSizeObservation) DeepCopy() *TargetSizeObservation {
	if in == nil {
		return nil
	}
	out := new(TargetSizeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TargetSizeParameters) DeepCopyInto(out *TargetSizeParameters) {
	*out = *in
	if in.Fixed != nil {
		in, out := &in.Fixed, &out.Fixed
		*out = new(float64)
		**out = **in
	}
	if in.Percent != nil {
		in, out := &in.Percent, &out.Percent
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TargetSizeParameters.
func (in *TargetSizeParameters) DeepCopy() *TargetSizeParameters {
	if in == nil {
		return nil
	}
	out := new(TargetSizeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TargetTCPProxy) DeepCopyInto(out *TargetTCPProxy) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TargetTCPProxy.
func (in *TargetTCPProxy) DeepCopy() *TargetTCPProxy {
	if in == nil {
		return nil
	}
	out := new(TargetTCPProxy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *TargetTCPProxy) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TargetTCPProxyInitParameters) DeepCopyInto(out *TargetTCPProxyInitParameters) {
	*out = *in
	if in.BackendService != nil {
		in, out := &in.BackendService, &out.BackendService
		*out = new(string)
		**out = **in
	}
	if in.BackendServiceRef != nil {
		in, out := &in.BackendServiceRef, &out.BackendServiceRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.BackendServiceSelector != nil {
		in, out := &in.BackendServiceSelector, &out.BackendServiceSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.ProxyBind != nil {
		in, out := &in.ProxyBind, &out.ProxyBind
		*out = new(bool)
		**out = **in
	}
	if in.ProxyHeader != nil {
		in, out := &in.ProxyHeader, &out.ProxyHeader
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TargetTCPProxyInitParameters.
func (in *TargetTCPProxyInitParameters) DeepCopy() *TargetTCPProxyInitParameters {
	if in == nil {
		return nil
	}
	out := new(TargetTCPProxyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TargetTCPProxyList) DeepCopyInto(out *TargetTCPProxyList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]TargetTCPProxy, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TargetTCPProxyList.
func (in *TargetTCPProxyList) DeepCopy() *TargetTCPProxyList {
	if in == nil {
		return nil
	}
	out := new(TargetTCPProxyList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *TargetTCPProxyList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TargetTCPProxyObservation) DeepCopyInto(out *TargetTCPProxyObservation) {
	*out = *in
	if in.BackendService != nil {
		in, out := &in.BackendService, &out.BackendService
		*out = new(string)
		**out = **in
	}
	if in.CreationTimestamp != nil {
		in, out := &in.CreationTimestamp, &out.CreationTimestamp
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.ProxyBind != nil {
		in, out := &in.ProxyBind, &out.ProxyBind
		*out = new(bool)
		**out = **in
	}
	if in.ProxyHeader != nil {
		in, out := &in.ProxyHeader, &out.ProxyHeader
		*out = new(string)
		**out = **in
	}
	if in.ProxyID != nil {
		in, out := &in.ProxyID, &out.ProxyID
		*out = new(float64)
		**out = **in
	}
	if in.SelfLink != nil {
		in, out := &in.SelfLink, &out.SelfLink
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TargetTCPProxyObservation.
func (in *TargetTCPProxyObservation) DeepCopy() *TargetTCPProxyObservation {
	if in == nil {
		return nil
	}
	out := new(TargetTCPProxyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TargetTCPProxyParameters) DeepCopyInto(out *TargetTCPProxyParameters) {
	*out = *in
	if in.BackendService != nil {
		in, out := &in.BackendService, &out.BackendService
		*out = new(string)
		**out = **in
	}
	if in.BackendServiceRef != nil {
		in, out := &in.BackendServiceRef, &out.BackendServiceRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.BackendServiceSelector != nil {
		in, out := &in.BackendServiceSelector, &out.BackendServiceSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.ProxyBind != nil {
		in, out := &in.ProxyBind, &out.ProxyBind
		*out = new(bool)
		**out = **in
	}
	if in.ProxyHeader != nil {
		in, out := &in.ProxyHeader, &out.ProxyHeader
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TargetTCPProxyParameters.
func (in *TargetTCPProxyParameters) DeepCopy() *TargetTCPProxyParameters {
	if in == nil {
		return nil
	}
	out := new(TargetTCPProxyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TargetTCPProxySpec) DeepCopyInto(out *TargetTCPProxySpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TargetTCPProxySpec.
func (in *TargetTCPProxySpec) DeepCopy() *TargetTCPProxySpec {
	if in == nil {
		return nil
	}
	out := new(TargetTCPProxySpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TargetTCPProxyStatus) DeepCopyInto(out *TargetTCPProxyStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TargetTCPProxyStatus.
func (in *TargetTCPProxyStatus) DeepCopy() *TargetTCPProxyStatus {
	if in == nil {
		return nil
	}
	out := new(TargetTCPProxyStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TestInitParameters) DeepCopyInto(out *TestInitParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Host != nil {
		in, out := &in.Host, &out.Host
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.Service != nil {
		in, out := &in.Service, &out.Service
		*out = new(string)
		**out = **in
	}
	if in.ServiceRef != nil {
		in, out := &in.ServiceRef, &out.ServiceRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ServiceSelector != nil {
		in, out := &in.ServiceSelector, &out.ServiceSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TestInitParameters.
func (in *TestInitParameters) DeepCopy() *TestInitParameters {
	if in == nil {
		return nil
	}
	out := new(TestInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TestObservation) DeepCopyInto(out *TestObservation) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Host != nil {
		in, out := &in.Host, &out.Host
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.Service != nil {
		in, out := &in.Service, &out.Service
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TestObservation.
func (in *TestObservation) DeepCopy() *TestObservation {
	if in == nil {
		return nil
	}
	out := new(TestObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TestParameters) DeepCopyInto(out *TestParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Host != nil {
		in, out := &in.Host, &out.Host
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.Service != nil {
		in, out := &in.Service, &out.Service
		*out = new(string)
		**out = **in
	}
	if in.ServiceRef != nil {
		in, out := &in.ServiceRef, &out.ServiceRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ServiceSelector != nil {
		in, out := &in.ServiceSelector, &out.ServiceSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TestParameters.
func (in *TestParameters) DeepCopy() *TestParameters {
	if in == nil {
		return nil
	}
	out := new(TestParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TimeoutInitParameters) DeepCopyInto(out *TimeoutInitParameters) {
	*out = *in
	if in.Nanos != nil {
		in, out := &in.Nanos, &out.Nanos
		*out = new(float64)
		**out = **in
	}
	if in.Seconds != nil {
		in, out := &in.Seconds, &out.Seconds
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TimeoutInitParameters.
func (in *TimeoutInitParameters) DeepCopy() *TimeoutInitParameters {
	if in == nil {
		return nil
	}
	out := new(TimeoutInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TimeoutObservation) DeepCopyInto(out *TimeoutObservation) {
	*out = *in
	if in.Nanos != nil {
		in, out := &in.Nanos, &out.Nanos
		*out = new(float64)
		**out = **in
	}
	if in.Seconds != nil {
		in, out := &in.Seconds, &out.Seconds
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TimeoutObservation.
func (in *TimeoutObservation) DeepCopy() *TimeoutObservation {
	if in == nil {
		return nil
	}
	out := new(TimeoutObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TimeoutParameters) DeepCopyInto(out *TimeoutParameters) {
	*out = *in
	if in.Nanos != nil {
		in, out := &in.Nanos, &out.Nanos
		*out = new(float64)
		**out = **in
	}
	if in.Seconds != nil {
		in, out := &in.Seconds, &out.Seconds
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TimeoutParameters.
func (in *TimeoutParameters) DeepCopy() *TimeoutParameters {
	if in == nil {
		return nil
	}
	out := new(TimeoutParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *URLMap) DeepCopyInto(out *URLMap) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new URLMap.
func (in *URLMap) DeepCopy() *URLMap {
	if in == nil {
		return nil
	}
	out := new(URLMap)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *URLMap) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *URLMapDefaultRouteActionInitParameters) DeepCopyInto(out *URLMapDefaultRouteActionInitParameters) {
	*out = *in
	if in.CorsPolicy != nil {
		in, out := &in.CorsPolicy, &out.CorsPolicy
		*out = make([]DefaultRouteActionCorsPolicyInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.FaultInjectionPolicy != nil {
		in, out := &in.FaultInjectionPolicy, &out.FaultInjectionPolicy
		*out = make([]DefaultRouteActionFaultInjectionPolicyInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RequestMirrorPolicy != nil {
		in, out := &in.RequestMirrorPolicy, &out.RequestMirrorPolicy
		*out = make([]DefaultRouteActionRequestMirrorPolicyInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RetryPolicy != nil {
		in, out := &in.RetryPolicy, &out.RetryPolicy
		*out = make([]DefaultRouteActionRetryPolicyInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Timeout != nil {
		in, out := &in.Timeout, &out.Timeout
		*out = make([]DefaultRouteActionTimeoutInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.URLRewrite != nil {
		in, out := &in.URLRewrite, &out.URLRewrite
		*out = make([]DefaultRouteActionURLRewriteInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.WeightedBackendServices != nil {
		in, out := &in.WeightedBackendServices, &out.WeightedBackendServices
		*out = make([]DefaultRouteActionWeightedBackendServicesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new URLMapDefaultRouteActionInitParameters.
func (in *URLMapDefaultRouteActionInitParameters) DeepCopy() *URLMapDefaultRouteActionInitParameters {
	if in == nil {
		return nil
	}
	out := new(URLMapDefaultRouteActionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *URLMapDefaultRouteActionObservation) DeepCopyInto(out *URLMapDefaultRouteActionObservation) {
	*out = *in
	if in.CorsPolicy != nil {
		in, out := &in.CorsPolicy, &out.CorsPolicy
		*out = make([]DefaultRouteActionCorsPolicyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.FaultInjectionPolicy != nil {
		in, out := &in.FaultInjectionPolicy, &out.FaultInjectionPolicy
		*out = make([]DefaultRouteActionFaultInjectionPolicyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RequestMirrorPolicy != nil {
		in, out := &in.RequestMirrorPolicy, &out.RequestMirrorPolicy
		*out = make([]DefaultRouteActionRequestMirrorPolicyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RetryPolicy != nil {
		in, out := &in.RetryPolicy, &out.RetryPolicy
		*out = make([]DefaultRouteActionRetryPolicyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Timeout != nil {
		in, out := &in.Timeout, &out.Timeout
		*out = make([]DefaultRouteActionTimeoutObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.URLRewrite != nil {
		in, out := &in.URLRewrite, &out.URLRewrite
		*out = make([]DefaultRouteActionURLRewriteObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.WeightedBackendServices != nil {
		in, out := &in.WeightedBackendServices, &out.WeightedBackendServices
		*out = make([]DefaultRouteActionWeightedBackendServicesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new URLMapDefaultRouteActionObservation.
func (in *URLMapDefaultRouteActionObservation) DeepCopy() *URLMapDefaultRouteActionObservation {
	if in == nil {
		return nil
	}
	out := new(URLMapDefaultRouteActionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *URLMapDefaultRouteActionParameters) DeepCopyInto(out *URLMapDefaultRouteActionParameters) {
	*out = *in
	if in.CorsPolicy != nil {
		in, out := &in.CorsPolicy, &out.CorsPolicy
		*out = make([]DefaultRouteActionCorsPolicyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.FaultInjectionPolicy != nil {
		in, out := &in.FaultInjectionPolicy, &out.FaultInjectionPolicy
		*out = make([]DefaultRouteActionFaultInjectionPolicyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RequestMirrorPolicy != nil {
		in, out := &in.RequestMirrorPolicy, &out.RequestMirrorPolicy
		*out = make([]DefaultRouteActionRequestMirrorPolicyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RetryPolicy != nil {
		in, out := &in.RetryPolicy, &out.RetryPolicy
		*out = make([]DefaultRouteActionRetryPolicyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Timeout != nil {
		in, out := &in.Timeout, &out.Timeout
		*out = make([]DefaultRouteActionTimeoutParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.URLRewrite != nil {
		in, out := &in.URLRewrite, &out.URLRewrite
		*out = make([]DefaultRouteActionURLRewriteParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.WeightedBackendServices != nil {
		in, out := &in.WeightedBackendServices, &out.WeightedBackendServices
		*out = make([]DefaultRouteActionWeightedBackendServicesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new URLMapDefaultRouteActionParameters.
func (in *URLMapDefaultRouteActionParameters) DeepCopy() *URLMapDefaultRouteActionParameters {
	if in == nil {
		return nil
	}
	out := new(URLMapDefaultRouteActionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *URLMapDefaultURLRedirectInitParameters) DeepCopyInto(out *URLMapDefaultURLRedirectInitParameters) {
	*out = *in
	if in.HTTPSRedirect != nil {
		in, out := &in.HTTPSRedirect, &out.HTTPSRedirect
		*out = new(bool)
		**out = **in
	}
	if in.HostRedirect != nil {
		in, out := &in.HostRedirect, &out.HostRedirect
		*out = new(string)
		**out = **in
	}
	if in.PathRedirect != nil {
		in, out := &in.PathRedirect, &out.PathRedirect
		*out = new(string)
		**out = **in
	}
	if in.PrefixRedirect != nil {
		in, out := &in.PrefixRedirect, &out.PrefixRedirect
		*out = new(string)
		**out = **in
	}
	if in.RedirectResponseCode != nil {
		in, out := &in.RedirectResponseCode, &out.RedirectResponseCode
		*out = new(string)
		**out = **in
	}
	if in.StripQuery != nil {
		in, out := &in.StripQuery, &out.StripQuery
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new URLMapDefaultURLRedirectInitParameters.
func (in *URLMapDefaultURLRedirectInitParameters) DeepCopy() *URLMapDefaultURLRedirectInitParameters {
	if in == nil {
		return nil
	}
	out := new(URLMapDefaultURLRedirectInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *URLMapDefaultURLRedirectObservation) DeepCopyInto(out *URLMapDefaultURLRedirectObservation) {
	*out = *in
	if in.HTTPSRedirect != nil {
		in, out := &in.HTTPSRedirect, &out.HTTPSRedirect
		*out = new(bool)
		**out = **in
	}
	if in.HostRedirect != nil {
		in, out := &in.HostRedirect, &out.HostRedirect
		*out = new(string)
		**out = **in
	}
	if in.PathRedirect != nil {
		in, out := &in.PathRedirect, &out.PathRedirect
		*out = new(string)
		**out = **in
	}
	if in.PrefixRedirect != nil {
		in, out := &in.PrefixRedirect, &out.PrefixRedirect
		*out = new(string)
		**out = **in
	}
	if in.RedirectResponseCode != nil {
		in, out := &in.RedirectResponseCode, &out.RedirectResponseCode
		*out = new(string)
		**out = **in
	}
	if in.StripQuery != nil {
		in, out := &in.StripQuery, &out.StripQuery
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new URLMapDefaultURLRedirectObservation.
func (in *URLMapDefaultURLRedirectObservation) DeepCopy() *URLMapDefaultURLRedirectObservation {
	if in == nil {
		return nil
	}
	out := new(URLMapDefaultURLRedirectObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *URLMapDefaultURLRedirectParameters) DeepCopyInto(out *URLMapDefaultURLRedirectParameters) {
	*out = *in
	if in.HTTPSRedirect != nil {
		in, out := &in.HTTPSRedirect, &out.HTTPSRedirect
		*out = new(bool)
		**out = **in
	}
	if in.HostRedirect != nil {
		in, out := &in.HostRedirect, &out.HostRedirect
		*out = new(string)
		**out = **in
	}
	if in.PathRedirect != nil {
		in, out := &in.PathRedirect, &out.PathRedirect
		*out = new(string)
		**out = **in
	}
	if in.PrefixRedirect != nil {
		in, out := &in.PrefixRedirect, &out.PrefixRedirect
		*out = new(string)
		**out = **in
	}
	if in.RedirectResponseCode != nil {
		in, out := &in.RedirectResponseCode, &out.RedirectResponseCode
		*out = new(string)
		**out = **in
	}
	if in.StripQuery != nil {
		in, out := &in.StripQuery, &out.StripQuery
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new URLMapDefaultURLRedirectParameters.
func (in *URLMapDefaultURLRedirectParameters) DeepCopy() *URLMapDefaultURLRedirectParameters {
	if in == nil {
		return nil
	}
	out := new(URLMapDefaultURLRedirectParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *URLMapHeaderActionInitParameters) DeepCopyInto(out *URLMapHeaderActionInitParameters) {
	*out = *in
	if in.RequestHeadersToAdd != nil {
		in, out := &in.RequestHeadersToAdd, &out.RequestHeadersToAdd
		*out = make([]URLMapHeaderActionRequestHeadersToAddInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RequestHeadersToRemove != nil {
		in, out := &in.RequestHeadersToRemove, &out.RequestHeadersToRemove
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ResponseHeadersToAdd != nil {
		in, out := &in.ResponseHeadersToAdd, &out.ResponseHeadersToAdd
		*out = make([]URLMapHeaderActionResponseHeadersToAddInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ResponseHeadersToRemove != nil {
		in, out := &in.ResponseHeadersToRemove, &out.ResponseHeadersToRemove
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new URLMapHeaderActionInitParameters.
func (in *URLMapHeaderActionInitParameters) DeepCopy() *URLMapHeaderActionInitParameters {
	if in == nil {
		return nil
	}
	out := new(URLMapHeaderActionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *URLMapHeaderActionObservation) DeepCopyInto(out *URLMapHeaderActionObservation) {
	*out = *in
	if in.RequestHeadersToAdd != nil {
		in, out := &in.RequestHeadersToAdd, &out.RequestHeadersToAdd
		*out = make([]URLMapHeaderActionRequestHeadersToAddObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RequestHeadersToRemove != nil {
		in, out := &in.RequestHeadersToRemove, &out.RequestHeadersToRemove
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ResponseHeadersToAdd != nil {
		in, out := &in.ResponseHeadersToAdd, &out.ResponseHeadersToAdd
		*out = make([]URLMapHeaderActionResponseHeadersToAddObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ResponseHeadersToRemove != nil {
		in, out := &in.ResponseHeadersToRemove, &out.ResponseHeadersToRemove
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new URLMapHeaderActionObservation.
func (in *URLMapHeaderActionObservation) DeepCopy() *URLMapHeaderActionObservation {
	if in == nil {
		return nil
	}
	out := new(URLMapHeaderActionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *URLMapHeaderActionParameters) DeepCopyInto(out *URLMapHeaderActionParameters) {
	*out = *in
	if in.RequestHeadersToAdd != nil {
		in, out := &in.RequestHeadersToAdd, &out.RequestHeadersToAdd
		*out = make([]URLMapHeaderActionRequestHeadersToAddParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RequestHeadersToRemove != nil {
		in, out := &in.RequestHeadersToRemove, &out.RequestHeadersToRemove
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ResponseHeadersToAdd != nil {
		in, out := &in.ResponseHeadersToAdd, &out.ResponseHeadersToAdd
		*out = make([]URLMapHeaderActionResponseHeadersToAddParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ResponseHeadersToRemove != nil {
		in, out := &in.ResponseHeadersToRemove, &out.ResponseHeadersToRemove
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new URLMapHeaderActionParameters.
func (in *URLMapHeaderActionParameters) DeepCopy() *URLMapHeaderActionParameters {
	if in == nil {
		return nil
	}
	out := new(URLMapHeaderActionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *URLMapHeaderActionRequestHeadersToAddInitParameters) DeepCopyInto(out *URLMapHeaderActionRequestHeadersToAddInitParameters) {
	*out = *in
	if in.HeaderName != nil {
		in, out := &in.HeaderName, &out.HeaderName
		*out = new(string)
		**out = **in
	}
	if in.HeaderValue != nil {
		in, out := &in.HeaderValue, &out.HeaderValue
		*out = new(string)
		**out = **in
	}
	if in.Replace != nil {
		in, out := &in.Replace, &out.Replace
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new URLMapHeaderActionRequestHeadersToAddInitParameters.
func (in *URLMapHeaderActionRequestHeadersToAddInitParameters) DeepCopy() *URLMapHeaderActionRequestHeadersToAddInitParameters {
	if in == nil {
		return nil
	}
	out := new(URLMapHeaderActionRequestHeadersToAddInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *URLMapHeaderActionRequestHeadersToAddObservation) DeepCopyInto(out *URLMapHeaderActionRequestHeadersToAddObservation) {
	*out = *in
	if in.HeaderName != nil {
		in, out := &in.HeaderName, &out.HeaderName
		*out = new(string)
		**out = **in
	}
	if in.HeaderValue != nil {
		in, out := &in.HeaderValue, &out.HeaderValue
		*out = new(string)
		**out = **in
	}
	if in.Replace != nil {
		in, out := &in.Replace, &out.Replace
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new URLMapHeaderActionRequestHeadersToAddObservation.
func (in *URLMapHeaderActionRequestHeadersToAddObservation) DeepCopy() *URLMapHeaderActionRequestHeadersToAddObservation {
	if in == nil {
		return nil
	}
	out := new(URLMapHeaderActionRequestHeadersToAddObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *URLMapHeaderActionRequestHeadersToAddParameters) DeepCopyInto(out *URLMapHeaderActionRequestHeadersToAddParameters) {
	*out = *in
	if in.HeaderName != nil {
		in, out := &in.HeaderName, &out.HeaderName
		*out = new(string)
		**out = **in
	}
	if in.HeaderValue != nil {
		in, out := &in.HeaderValue, &out.HeaderValue
		*out = new(string)
		**out = **in
	}
	if in.Replace != nil {
		in, out := &in.Replace, &out.Replace
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new URLMapHeaderActionRequestHeadersToAddParameters.
func (in *URLMapHeaderActionRequestHeadersToAddParameters) DeepCopy() *URLMapHeaderActionRequestHeadersToAddParameters {
	if in == nil {
		return nil
	}
	out := new(URLMapHeaderActionRequestHeadersToAddParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *URLMapHeaderActionResponseHeadersToAddInitParameters) DeepCopyInto(out *URLMapHeaderActionResponseHeadersToAddInitParameters) {
	*out = *in
	if in.HeaderName != nil {
		in, out := &in.HeaderName, &out.HeaderName
		*out = new(string)
		**out = **in
	}
	if in.HeaderValue != nil {
		in, out := &in.HeaderValue, &out.HeaderValue
		*out = new(string)
		**out = **in
	}
	if in.Replace != nil {
		in, out := &in.Replace, &out.Replace
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new URLMapHeaderActionResponseHeadersToAddInitParameters.
func (in *URLMapHeaderActionResponseHeadersToAddInitParameters) DeepCopy() *URLMapHeaderActionResponseHeadersToAddInitParameters {
	if in == nil {
		return nil
	}
	out := new(URLMapHeaderActionResponseHeadersToAddInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *URLMapHeaderActionResponseHeadersToAddObservation) DeepCopyInto(out *URLMapHeaderActionResponseHeadersToAddObservation) {
	*out = *in
	if in.HeaderName != nil {
		in, out := &in.HeaderName, &out.HeaderName
		*out = new(string)
		**out = **in
	}
	if in.HeaderValue != nil {
		in, out := &in.HeaderValue, &out.HeaderValue
		*out = new(string)
		**out = **in
	}
	if in.Replace != nil {
		in, out := &in.Replace, &out.Replace
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new URLMapHeaderActionResponseHeadersToAddObservation.
func (in *URLMapHeaderActionResponseHeadersToAddObservation) DeepCopy() *URLMapHeaderActionResponseHeadersToAddObservation {
	if in == nil {
		return nil
	}
	out := new(URLMapHeaderActionResponseHeadersToAddObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *URLMapHeaderActionResponseHeadersToAddParameters) DeepCopyInto(out *URLMapHeaderActionResponseHeadersToAddParameters) {
	*out = *in
	if in.HeaderName != nil {
		in, out := &in.HeaderName, &out.HeaderName
		*out = new(string)
		**out = **in
	}
	if in.HeaderValue != nil {
		in, out := &in.HeaderValue, &out.HeaderValue
		*out = new(string)
		**out = **in
	}
	if in.Replace != nil {
		in, out := &in.Replace, &out.Replace
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new URLMapHeaderActionResponseHeadersToAddParameters.
func (in *URLMapHeaderActionResponseHeadersToAddParameters) DeepCopy() *URLMapHeaderActionResponseHeadersToAddParameters {
	if in == nil {
		return nil
	}
	out := new(URLMapHeaderActionResponseHeadersToAddParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *URLMapHostRuleInitParameters) DeepCopyInto(out *URLMapHostRuleInitParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Hosts != nil {
		in, out := &in.Hosts, &out.Hosts
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.PathMatcher != nil {
		in, out := &in.PathMatcher, &out.PathMatcher
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new URLMapHostRuleInitParameters.
func (in *URLMapHostRuleInitParameters) DeepCopy() *URLMapHostRuleInitParameters {
	if in == nil {
		return nil
	}
	out := new(URLMapHostRuleInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *URLMapHostRuleObservation) DeepCopyInto(out *URLMapHostRuleObservation) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Hosts != nil {
		in, out := &in.Hosts, &out.Hosts
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.PathMatcher != nil {
		in, out := &in.PathMatcher, &out.PathMatcher
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new URLMapHostRuleObservation.
func (in *URLMapHostRuleObservation) DeepCopy() *URLMapHostRuleObservation {
	if in == nil {
		return nil
	}
	out := new(URLMapHostRuleObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *URLMapHostRuleParameters) DeepCopyInto(out *URLMapHostRuleParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Hosts != nil {
		in, out := &in.Hosts, &out.Hosts
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.PathMatcher != nil {
		in, out := &in.PathMatcher, &out.PathMatcher
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new URLMapHostRuleParameters.
func (in *URLMapHostRuleParameters) DeepCopy() *URLMapHostRuleParameters {
	if in == nil {
		return nil
	}
	out := new(URLMapHostRuleParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *URLMapInitParameters) DeepCopyInto(out *URLMapInitParameters) {
	*out = *in
	if in.DefaultRouteAction != nil {
		in, out := &in.DefaultRouteAction, &out.DefaultRouteAction
		*out = make([]URLMapDefaultRouteActionInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DefaultService != nil {
		in, out := &in.DefaultService, &out.DefaultService
		*out = new(string)
		**out = **in
	}
	if in.DefaultServiceRef != nil {
		in, out := &in.DefaultServiceRef, &out.DefaultServiceRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.DefaultServiceSelector != nil {
		in, out := &in.DefaultServiceSelector, &out.DefaultServiceSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.DefaultURLRedirect != nil {
		in, out := &in.DefaultURLRedirect, &out.DefaultURLRedirect
		*out = make([]URLMapDefaultURLRedirectInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.HeaderAction != nil {
		in, out := &in.HeaderAction, &out.HeaderAction
		*out = make([]URLMapHeaderActionInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HostRule != nil {
		in, out := &in.HostRule, &out.HostRule
		*out = make([]URLMapHostRuleInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PathMatcher != nil {
		in, out := &in.PathMatcher, &out.PathMatcher
		*out = make([]URLMapPathMatcherInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Test != nil {
		in, out := &in.Test, &out.Test
		*out = make([]URLMapTestInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new URLMapInitParameters.
func (in *URLMapInitParameters) DeepCopy() *URLMapInitParameters {
	if in == nil {
		return nil
	}
	out := new(URLMapInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *URLMapList) DeepCopyInto(out *URLMapList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]URLMap, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new URLMapList.
func (in *URLMapList) DeepCopy() *URLMapList {
	if in == nil {
		return nil
	}
	out := new(URLMapList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *URLMapList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *URLMapObservation) DeepCopyInto(out *URLMapObservation) {
	*out = *in
	if in.CreationTimestamp != nil {
		in, out := &in.CreationTimestamp, &out.CreationTimestamp
		*out = new(string)
		**out = **in
	}
	if in.DefaultRouteAction != nil {
		in, out := &in.DefaultRouteAction, &out.DefaultRouteAction
		*out = make([]URLMapDefaultRouteActionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DefaultService != nil {
		in, out := &in.DefaultService, &out.DefaultService
		*out = new(string)
		**out = **in
	}
	if in.DefaultURLRedirect != nil {
		in, out := &in.DefaultURLRedirect, &out.DefaultURLRedirect
		*out = make([]URLMapDefaultURLRedirectObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Fingerprint != nil {
		in, out := &in.Fingerprint, &out.Fingerprint
		*out = new(string)
		**out = **in
	}
	if in.HeaderAction != nil {
		in, out := &in.HeaderAction, &out.HeaderAction
		*out = make([]URLMapHeaderActionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HostRule != nil {
		in, out := &in.HostRule, &out.HostRule
		*out = make([]URLMapHostRuleObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.MapID != nil {
		in, out := &in.MapID, &out.MapID
		*out = new(float64)
		**out = **in
	}
	if in.PathMatcher != nil {
		in, out := &in.PathMatcher, &out.PathMatcher
		*out = make([]URLMapPathMatcherObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.SelfLink != nil {
		in, out := &in.SelfLink, &out.SelfLink
		*out = new(string)
		**out = **in
	}
	if in.Test != nil {
		in, out := &in.Test, &out.Test
		*out = make([]URLMapTestObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new URLMapObservation.
func (in *URLMapObservation) DeepCopy() *URLMapObservation {
	if in == nil {
		return nil
	}
	out := new(URLMapObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *URLMapParameters) DeepCopyInto(out *URLMapParameters) {
	*out = *in
	if in.DefaultRouteAction != nil {
		in, out := &in.DefaultRouteAction, &out.DefaultRouteAction
		*out = make([]URLMapDefaultRouteActionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DefaultService != nil {
		in, out := &in.DefaultService, &out.DefaultService
		*out = new(string)
		**out = **in
	}
	if in.DefaultServiceRef != nil {
		in, out := &in.DefaultServiceRef, &out.DefaultServiceRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.DefaultServiceSelector != nil {
		in, out := &in.DefaultServiceSelector, &out.DefaultServiceSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.DefaultURLRedirect != nil {
		in, out := &in.DefaultURLRedirect, &out.DefaultURLRedirect
		*out = make([]URLMapDefaultURLRedirectParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.HeaderAction != nil {
		in, out := &in.HeaderAction, &out.HeaderAction
		*out = make([]URLMapHeaderActionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HostRule != nil {
		in, out := &in.HostRule, &out.HostRule
		*out = make([]URLMapHostRuleParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PathMatcher != nil {
		in, out := &in.PathMatcher, &out.PathMatcher
		*out = make([]URLMapPathMatcherParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Test != nil {
		in, out := &in.Test, &out.Test
		*out = make([]URLMapTestParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new URLMapParameters.
func (in *URLMapParameters) DeepCopy() *URLMapParameters {
	if in == nil {
		return nil
	}
	out := new(URLMapParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *URLMapPathMatcherDefaultURLRedirectInitParameters) DeepCopyInto(out *URLMapPathMatcherDefaultURLRedirectInitParameters) {
	*out = *in
	if in.HTTPSRedirect != nil {
		in, out := &in.HTTPSRedirect, &out.HTTPSRedirect
		*out = new(bool)
		**out = **in
	}
	if in.HostRedirect != nil {
		in, out := &in.HostRedirect, &out.HostRedirect
		*out = new(string)
		**out = **in
	}
	if in.PathRedirect != nil {
		in, out := &in.PathRedirect, &out.PathRedirect
		*out = new(string)
		**out = **in
	}
	if in.PrefixRedirect != nil {
		in, out := &in.PrefixRedirect, &out.PrefixRedirect
		*out = new(string)
		**out = **in
	}
	if in.RedirectResponseCode != nil {
		in, out := &in.RedirectResponseCode, &out.RedirectResponseCode
		*out = new(string)
		**out = **in
	}
	if in.StripQuery != nil {
		in, out := &in.StripQuery, &out.StripQuery
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new URLMapPathMatcherDefaultURLRedirectInitParameters.
func (in *URLMapPathMatcherDefaultURLRedirectInitParameters) DeepCopy() *URLMapPathMatcherDefaultURLRedirectInitParameters {
	if in == nil {
		return nil
	}
	out := new(URLMapPathMatcherDefaultURLRedirectInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *URLMapPathMatcherDefaultURLRedirectObservation) DeepCopyInto(out *URLMapPathMatcherDefaultURLRedirectObservation) {
	*out = *in
	if in.HTTPSRedirect != nil {
		in, out := &in.HTTPSRedirect, &out.HTTPSRedirect
		*out = new(bool)
		**out = **in
	}
	if in.HostRedirect != nil {
		in, out := &in.HostRedirect, &out.HostRedirect
		*out = new(string)
		**out = **in
	}
	if in.PathRedirect != nil {
		in, out := &in.PathRedirect, &out.PathRedirect
		*out = new(string)
		**out = **in
	}
	if in.PrefixRedirect != nil {
		in, out := &in.PrefixRedirect, &out.PrefixRedirect
		*out = new(string)
		**out = **in
	}
	if in.RedirectResponseCode != nil {
		in, out := &in.RedirectResponseCode, &out.RedirectResponseCode
		*out = new(string)
		**out = **in
	}
	if in.StripQuery != nil {
		in, out := &in.StripQuery, &out.StripQuery
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new URLMapPathMatcherDefaultURLRedirectObservation.
func (in *URLMapPathMatcherDefaultURLRedirectObservation) DeepCopy() *URLMapPathMatcherDefaultURLRedirectObservation {
	if in == nil {
		return nil
	}
	out := new(URLMapPathMatcherDefaultURLRedirectObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *URLMapPathMatcherDefaultURLRedirectParameters) DeepCopyInto(out *URLMapPathMatcherDefaultURLRedirectParameters) {
	*out = *in
	if in.HTTPSRedirect != nil {
		in, out := &in.HTTPSRedirect, &out.HTTPSRedirect
		*out = new(bool)
		**out = **in
	}
	if in.HostRedirect != nil {
		in, out := &in.HostRedirect, &out.HostRedirect
		*out = new(string)
		**out = **in
	}
	if in.PathRedirect != nil {
		in, out := &in.PathRedirect, &out.PathRedirect
		*out = new(string)
		**out = **in
	}
	if in.PrefixRedirect != nil {
		in, out := &in.PrefixRedirect, &out.PrefixRedirect
		*out = new(string)
		**out = **in
	}
	if in.RedirectResponseCode != nil {
		in, out := &in.RedirectResponseCode, &out.RedirectResponseCode
		*out = new(string)
		**out = **in
	}
	if in.StripQuery != nil {
		in, out := &in.StripQuery, &out.StripQuery
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new URLMapPathMatcherDefaultURLRedirectParameters.
func (in *URLMapPathMatcherDefaultURLRedirectParameters) DeepCopy() *URLMapPathMatcherDefaultURLRedirectParameters {
	if in == nil {
		return nil
	}
	out := new(URLMapPathMatcherDefaultURLRedirectParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *URLMapPathMatcherInitParameters) DeepCopyInto(out *URLMapPathMatcherInitParameters) {
	*out = *in
	if in.DefaultRouteAction != nil {
		in, out := &in.DefaultRouteAction, &out.DefaultRouteAction
		*out = make([]PathMatcherDefaultRouteActionInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DefaultService != nil {
		in, out := &in.DefaultService, &out.DefaultService
		*out = new(string)
		**out = **in
	}
	if in.DefaultServiceRef != nil {
		in, out := &in.DefaultServiceRef, &out.DefaultServiceRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.DefaultServiceSelector != nil {
		in, out := &in.DefaultServiceSelector, &out.DefaultServiceSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.DefaultURLRedirect != nil {
		in, out := &in.DefaultURLRedirect, &out.DefaultURLRedirect
		*out = make([]URLMapPathMatcherDefaultURLRedirectInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.HeaderAction != nil {
		in, out := &in.HeaderAction, &out.HeaderAction
		*out = make([]PathMatcherHeaderActionInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PathRule != nil {
		in, out := &in.PathRule, &out.PathRule
		*out = make([]PathMatcherPathRuleInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RouteRules != nil {
		in, out := &in.RouteRules, &out.RouteRules
		*out = make([]PathMatcherRouteRulesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new URLMapPathMatcherInitParameters.
func (in *URLMapPathMatcherInitParameters) DeepCopy() *URLMapPathMatcherInitParameters {
	if in == nil {
		return nil
	}
	out := new(URLMapPathMatcherInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *URLMapPathMatcherObservation) DeepCopyInto(out *URLMapPathMatcherObservation) {
	*out = *in
	if in.DefaultRouteAction != nil {
		in, out := &in.DefaultRouteAction, &out.DefaultRouteAction
		*out = make([]PathMatcherDefaultRouteActionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DefaultService != nil {
		in, out := &in.DefaultService, &out.DefaultService
		*out = new(string)
		**out = **in
	}
	if in.DefaultURLRedirect != nil {
		in, out := &in.DefaultURLRedirect, &out.DefaultURLRedirect
		*out = make([]URLMapPathMatcherDefaultURLRedirectObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.HeaderAction != nil {
		in, out := &in.HeaderAction, &out.HeaderAction
		*out = make([]PathMatcherHeaderActionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PathRule != nil {
		in, out := &in.PathRule, &out.PathRule
		*out = make([]PathMatcherPathRuleObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RouteRules != nil {
		in, out := &in.RouteRules, &out.RouteRules
		*out = make([]PathMatcherRouteRulesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new URLMapPathMatcherObservation.
func (in *URLMapPathMatcherObservation) DeepCopy() *URLMapPathMatcherObservation {
	if in == nil {
		return nil
	}
	out := new(URLMapPathMatcherObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *URLMapPathMatcherParameters) DeepCopyInto(out *URLMapPathMatcherParameters) {
	*out = *in
	if in.DefaultRouteAction != nil {
		in, out := &in.DefaultRouteAction, &out.DefaultRouteAction
		*out = make([]PathMatcherDefaultRouteActionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DefaultService != nil {
		in, out := &in.DefaultService, &out.DefaultService
		*out = new(string)
		**out = **in
	}
	if in.DefaultServiceRef != nil {
		in, out := &in.DefaultServiceRef, &out.DefaultServiceRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.DefaultServiceSelector != nil {
		in, out := &in.DefaultServiceSelector, &out.DefaultServiceSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.DefaultURLRedirect != nil {
		in, out := &in.DefaultURLRedirect, &out.DefaultURLRedirect
		*out = make([]URLMapPathMatcherDefaultURLRedirectParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.HeaderAction != nil {
		in, out := &in.HeaderAction, &out.HeaderAction
		*out = make([]PathMatcherHeaderActionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PathRule != nil {
		in, out := &in.PathRule, &out.PathRule
		*out = make([]PathMatcherPathRuleParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RouteRules != nil {
		in, out := &in.RouteRules, &out.RouteRules
		*out = make([]PathMatcherRouteRulesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new URLMapPathMatcherParameters.
func (in *URLMapPathMatcherParameters) DeepCopy() *URLMapPathMatcherParameters {
	if in == nil {
		return nil
	}
	out := new(URLMapPathMatcherParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *URLMapSpec) DeepCopyInto(out *URLMapSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new URLMapSpec.
func (in *URLMapSpec) DeepCopy() *URLMapSpec {
	if in == nil {
		return nil
	}
	out := new(URLMapSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *URLMapStatus) DeepCopyInto(out *URLMapStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new URLMapStatus.
func (in *URLMapStatus) DeepCopy() *URLMapStatus {
	if in == nil {
		return nil
	}
	out := new(URLMapStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *URLMapTestInitParameters) DeepCopyInto(out *URLMapTestInitParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Host != nil {
		in, out := &in.Host, &out.Host
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.Service != nil {
		in, out := &in.Service, &out.Service
		*out = new(string)
		**out = **in
	}
	if in.ServiceRef != nil {
		in, out := &in.ServiceRef, &out.ServiceRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ServiceSelector != nil {
		in, out := &in.ServiceSelector, &out.ServiceSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new URLMapTestInitParameters.
func (in *URLMapTestInitParameters) DeepCopy() *URLMapTestInitParameters {
	if in == nil {
		return nil
	}
	out := new(URLMapTestInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *URLMapTestObservation) DeepCopyInto(out *URLMapTestObservation) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Host != nil {
		in, out := &in.Host, &out.Host
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.Service != nil {
		in, out := &in.Service, &out.Service
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new URLMapTestObservation.
func (in *URLMapTestObservation) DeepCopy() *URLMapTestObservation {
	if in == nil {
		return nil
	}
	out := new(URLMapTestObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *URLMapTestParameters) DeepCopyInto(out *URLMapTestParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Host != nil {
		in, out := &in.Host, &out.Host
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.Service != nil {
		in, out := &in.Service, &out.Service
		*out = new(string)
		**out = **in
	}
	if in.ServiceRef != nil {
		in, out := &in.ServiceRef, &out.ServiceRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ServiceSelector != nil {
		in, out := &in.ServiceSelector, &out.ServiceSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new URLMapTestParameters.
func (in *URLMapTestParameters) DeepCopy() *URLMapTestParameters {
	if in == nil {
		return nil
	}
	out := new(URLMapTestParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *URLRedirectInitParameters) DeepCopyInto(out *URLRedirectInitParameters) {
	*out = *in
	if in.HTTPSRedirect != nil {
		in, out := &in.HTTPSRedirect, &out.HTTPSRedirect
		*out = new(bool)
		**out = **in
	}
	if in.HostRedirect != nil {
		in, out := &in.HostRedirect, &out.HostRedirect
		*out = new(string)
		**out = **in
	}
	if in.PathRedirect != nil {
		in, out := &in.PathRedirect, &out.PathRedirect
		*out = new(string)
		**out = **in
	}
	if in.PrefixRedirect != nil {
		in, out := &in.PrefixRedirect, &out.PrefixRedirect
		*out = new(string)
		**out = **in
	}
	if in.RedirectResponseCode != nil {
		in, out := &in.RedirectResponseCode, &out.RedirectResponseCode
		*out = new(string)
		**out = **in
	}
	if in.StripQuery != nil {
		in, out := &in.StripQuery, &out.StripQuery
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new URLRedirectInitParameters.
func (in *URLRedirectInitParameters) DeepCopy() *URLRedirectInitParameters {
	if in == nil {
		return nil
	}
	out := new(URLRedirectInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *URLRedirectObservation) DeepCopyInto(out *URLRedirectObservation) {
	*out = *in
	if in.HTTPSRedirect != nil {
		in, out := &in.HTTPSRedirect, &out.HTTPSRedirect
		*out = new(bool)
		**out = **in
	}
	if in.HostRedirect != nil {
		in, out := &in.HostRedirect, &out.HostRedirect
		*out = new(string)
		**out = **in
	}
	if in.PathRedirect != nil {
		in, out := &in.PathRedirect, &out.PathRedirect
		*out = new(string)
		**out = **in
	}
	if in.PrefixRedirect != nil {
		in, out := &in.PrefixRedirect, &out.PrefixRedirect
		*out = new(string)
		**out = **in
	}
	if in.RedirectResponseCode != nil {
		in, out := &in.RedirectResponseCode, &out.RedirectResponseCode
		*out = new(string)
		**out = **in
	}
	if in.StripQuery != nil {
		in, out := &in.StripQuery, &out.StripQuery
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new URLRedirectObservation.
func (in *URLRedirectObservation) DeepCopy() *URLRedirectObservation {
	if in == nil {
		return nil
	}
	out := new(URLRedirectObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *URLRedirectParameters) DeepCopyInto(out *URLRedirectParameters) {
	*out = *in
	if in.HTTPSRedirect != nil {
		in, out := &in.HTTPSRedirect, &out.HTTPSRedirect
		*out = new(bool)
		**out = **in
	}
	if in.HostRedirect != nil {
		in, out := &in.HostRedirect, &out.HostRedirect
		*out = new(string)
		**out = **in
	}
	if in.PathRedirect != nil {
		in, out := &in.PathRedirect, &out.PathRedirect
		*out = new(string)
		**out = **in
	}
	if in.PrefixRedirect != nil {
		in, out := &in.PrefixRedirect, &out.PrefixRedirect
		*out = new(string)
		**out = **in
	}
	if in.RedirectResponseCode != nil {
		in, out := &in.RedirectResponseCode, &out.RedirectResponseCode
		*out = new(string)
		**out = **in
	}
	if in.StripQuery != nil {
		in, out := &in.StripQuery, &out.StripQuery
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new URLRedirectParameters.
func (in *URLRedirectParameters) DeepCopy() *URLRedirectParameters {
	if in == nil {
		return nil
	}
	out := new(URLRedirectParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *URLRewriteInitParameters) DeepCopyInto(out *URLRewriteInitParameters) {
	*out = *in
	if in.HostRewrite != nil {
		in, out := &in.HostRewrite, &out.HostRewrite
		*out = new(string)
		**out = **in
	}
	if in.PathPrefixRewrite != nil {
		in, out := &in.PathPrefixRewrite, &out.PathPrefixRewrite
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new URLRewriteInitParameters.
func (in *URLRewriteInitParameters) DeepCopy() *URLRewriteInitParameters {
	if in == nil {
		return nil
	}
	out := new(URLRewriteInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *URLRewriteObservation) DeepCopyInto(out *URLRewriteObservation) {
	*out = *in
	if in.HostRewrite != nil {
		in, out := &in.HostRewrite, &out.HostRewrite
		*out = new(string)
		**out = **in
	}
	if in.PathPrefixRewrite != nil {
		in, out := &in.PathPrefixRewrite, &out.PathPrefixRewrite
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new URLRewriteObservation.
func (in *URLRewriteObservation) DeepCopy() *URLRewriteObservation {
	if in == nil {
		return nil
	}
	out := new(URLRewriteObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *URLRewriteParameters) DeepCopyInto(out *URLRewriteParameters) {
	*out = *in
	if in.HostRewrite != nil {
		in, out := &in.HostRewrite, &out.HostRewrite
		*out = new(string)
		**out = **in
	}
	if in.PathPrefixRewrite != nil {
		in, out := &in.PathPrefixRewrite, &out.PathPrefixRewrite
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new URLRewriteParameters.
func (in *URLRewriteParameters) DeepCopy() *URLRewriteParameters {
	if in == nil {
		return nil
	}
	out := new(URLRewriteParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UpdatePolicyInitParameters) DeepCopyInto(out *UpdatePolicyInitParameters) {
	*out = *in
	if in.MaxSurgeFixed != nil {
		in, out := &in.MaxSurgeFixed, &out.MaxSurgeFixed
		*out = new(float64)
		**out = **in
	}
	if in.MaxSurgePercent != nil {
		in, out := &in.MaxSurgePercent, &out.MaxSurgePercent
		*out = new(float64)
		**out = **in
	}
	if in.MaxUnavailableFixed != nil {
		in, out := &in.MaxUnavailableFixed, &out.MaxUnavailableFixed
		*out = new(float64)
		**out = **in
	}
	if in.MaxUnavailablePercent != nil {
		in, out := &in.MaxUnavailablePercent, &out.MaxUnavailablePercent
		*out = new(float64)
		**out = **in
	}
	if in.MinimalAction != nil {
		in, out := &in.MinimalAction, &out.MinimalAction
		*out = new(string)
		**out = **in
	}
	if in.MostDisruptiveAllowedAction != nil {
		in, out := &in.MostDisruptiveAllowedAction, &out.MostDisruptiveAllowedAction
		*out = new(string)
		**out = **in
	}
	if in.ReplacementMethod != nil {
		in, out := &in.ReplacementMethod, &out.ReplacementMethod
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UpdatePolicyInitParameters.
func (in *UpdatePolicyInitParameters) DeepCopy() *UpdatePolicyInitParameters {
	if in == nil {
		return nil
	}
	out := new(UpdatePolicyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UpdatePolicyObservation) DeepCopyInto(out *UpdatePolicyObservation) {
	*out = *in
	if in.MaxSurgeFixed != nil {
		in, out := &in.MaxSurgeFixed, &out.MaxSurgeFixed
		*out = new(float64)
		**out = **in
	}
	if in.MaxSurgePercent != nil {
		in, out := &in.MaxSurgePercent, &out.MaxSurgePercent
		*out = new(float64)
		**out = **in
	}
	if in.MaxUnavailableFixed != nil {
		in, out := &in.MaxUnavailableFixed, &out.MaxUnavailableFixed
		*out = new(float64)
		**out = **in
	}
	if in.MaxUnavailablePercent != nil {
		in, out := &in.MaxUnavailablePercent, &out.MaxUnavailablePercent
		*out = new(float64)
		**out = **in
	}
	if in.MinimalAction != nil {
		in, out := &in.MinimalAction, &out.MinimalAction
		*out = new(string)
		**out = **in
	}
	if in.MostDisruptiveAllowedAction != nil {
		in, out := &in.MostDisruptiveAllowedAction, &out.MostDisruptiveAllowedAction
		*out = new(string)
		**out = **in
	}
	if in.ReplacementMethod != nil {
		in, out := &in.ReplacementMethod, &out.ReplacementMethod
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UpdatePolicyObservation.
func (in *UpdatePolicyObservation) DeepCopy() *UpdatePolicyObservation {
	if in == nil {
		return nil
	}
	out := new(UpdatePolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UpdatePolicyParameters) DeepCopyInto(out *UpdatePolicyParameters) {
	*out = *in
	if in.MaxSurgeFixed != nil {
		in, out := &in.MaxSurgeFixed, &out.MaxSurgeFixed
		*out = new(float64)
		**out = **in
	}
	if in.MaxSurgePercent != nil {
		in, out := &in.MaxSurgePercent, &out.MaxSurgePercent
		*out = new(float64)
		**out = **in
	}
	if in.MaxUnavailableFixed != nil {
		in, out := &in.MaxUnavailableFixed, &out.MaxUnavailableFixed
		*out = new(float64)
		**out = **in
	}
	if in.MaxUnavailablePercent != nil {
		in, out := &in.MaxUnavailablePercent, &out.MaxUnavailablePercent
		*out = new(float64)
		**out = **in
	}
	if in.MinimalAction != nil {
		in, out := &in.MinimalAction, &out.MinimalAction
		*out = new(string)
		**out = **in
	}
	if in.MostDisruptiveAllowedAction != nil {
		in, out := &in.MostDisruptiveAllowedAction, &out.MostDisruptiveAllowedAction
		*out = new(string)
		**out = **in
	}
	if in.ReplacementMethod != nil {
		in, out := &in.ReplacementMethod, &out.ReplacementMethod
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UpdatePolicyParameters.
func (in *UpdatePolicyParameters) DeepCopy() *UpdatePolicyParameters {
	if in == nil {
		return nil
	}
	out := new(UpdatePolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VMStartScheduleInitParameters) DeepCopyInto(out *VMStartScheduleInitParameters) {
	*out = *in
	if in.Schedule != nil {
		in, out := &in.Schedule, &out.Schedule
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VMStartScheduleInitParameters.
func (in *VMStartScheduleInitParameters) DeepCopy() *VMStartScheduleInitParameters {
	if in == nil {
		return nil
	}
	out := new(VMStartScheduleInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VMStartScheduleObservation) DeepCopyInto(out *VMStartScheduleObservation) {
	*out = *in
	if in.Schedule != nil {
		in, out := &in.Schedule, &out.Schedule
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VMStartScheduleObservation.
func (in *VMStartScheduleObservation) DeepCopy() *VMStartScheduleObservation {
	if in == nil {
		return nil
	}
	out := new(VMStartScheduleObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VMStartScheduleParameters) DeepCopyInto(out *VMStartScheduleParameters) {
	*out = *in
	if in.Schedule != nil {
		in, out := &in.Schedule, &out.Schedule
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VMStartScheduleParameters.
func (in *VMStartScheduleParameters) DeepCopy() *VMStartScheduleParameters {
	if in == nil {
		return nil
	}
	out := new(VMStartScheduleParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VMStopScheduleInitParameters) DeepCopyInto(out *VMStopScheduleInitParameters) {
	*out = *in
	if in.Schedule != nil {
		in, out := &in.Schedule, &out.Schedule
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VMStopScheduleInitParameters.
func (in *VMStopScheduleInitParameters) DeepCopy() *VMStopScheduleInitParameters {
	if in == nil {
		return nil
	}
	out := new(VMStopScheduleInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VMStopScheduleObservation) DeepCopyInto(out *VMStopScheduleObservation) {
	*out = *in
	if in.Schedule != nil {
		in, out := &in.Schedule, &out.Schedule
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VMStopScheduleObservation.
func (in *VMStopScheduleObservation) DeepCopy() *VMStopScheduleObservation {
	if in == nil {
		return nil
	}
	out := new(VMStopScheduleObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VMStopScheduleParameters) DeepCopyInto(out *VMStopScheduleParameters) {
	*out = *in
	if in.Schedule != nil {
		in, out := &in.Schedule, &out.Schedule
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VMStopScheduleParameters.
func (in *VMStopScheduleParameters) DeepCopy() *VMStopScheduleParameters {
	if in == nil {
		return nil
	}
	out := new(VMStopScheduleParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPNGateway) DeepCopyInto(out *VPNGateway) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPNGateway.
func (in *VPNGateway) DeepCopy() *VPNGateway {
	if in == nil {
		return nil
	}
	out := new(VPNGateway)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *VPNGateway) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPNGatewayInitParameters) DeepCopyInto(out *VPNGatewayInitParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Network != nil {
		in, out := &in.Network, &out.Network
		*out = new(string)
		**out = **in
	}
	if in.NetworkRef != nil {
		in, out := &in.NetworkRef, &out.NetworkRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.NetworkSelector != nil {
		in, out := &in.NetworkSelector, &out.NetworkSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPNGatewayInitParameters.
func (in *VPNGatewayInitParameters) DeepCopy() *VPNGatewayInitParameters {
	if in == nil {
		return nil
	}
	out := new(VPNGatewayInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPNGatewayList) DeepCopyInto(out *VPNGatewayList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]VPNGateway, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPNGatewayList.
func (in *VPNGatewayList) DeepCopy() *VPNGatewayList {
	if in == nil {
		return nil
	}
	out := new(VPNGatewayList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *VPNGatewayList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPNGatewayObservation) DeepCopyInto(out *VPNGatewayObservation) {
	*out = *in
	if in.CreationTimestamp != nil {
		in, out := &in.CreationTimestamp, &out.CreationTimestamp
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.GatewayID != nil {
		in, out := &in.GatewayID, &out.GatewayID
		*out = new(float64)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Network != nil {
		in, out := &in.Network, &out.Network
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.SelfLink != nil {
		in, out := &in.SelfLink, &out.SelfLink
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPNGatewayObservation.
func (in *VPNGatewayObservation) DeepCopy() *VPNGatewayObservation {
	if in == nil {
		return nil
	}
	out := new(VPNGatewayObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPNGatewayParameters) DeepCopyInto(out *VPNGatewayParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Network != nil {
		in, out := &in.Network, &out.Network
		*out = new(string)
		**out = **in
	}
	if in.NetworkRef != nil {
		in, out := &in.NetworkRef, &out.NetworkRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.NetworkSelector != nil {
		in, out := &in.NetworkSelector, &out.NetworkSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPNGatewayParameters.
func (in *VPNGatewayParameters) DeepCopy() *VPNGatewayParameters {
	if in == nil {
		return nil
	}
	out := new(VPNGatewayParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPNGatewaySpec) DeepCopyInto(out *VPNGatewaySpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPNGatewaySpec.
func (in *VPNGatewaySpec) DeepCopy() *VPNGatewaySpec {
	if in == nil {
		return nil
	}
	out := new(VPNGatewaySpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPNGatewayStatus) DeepCopyInto(out *VPNGatewayStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPNGatewayStatus.
func (in *VPNGatewayStatus) DeepCopy() *VPNGatewayStatus {
	if in == nil {
		return nil
	}
	out := new(VPNGatewayStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPNInterfacesInitParameters) DeepCopyInto(out *VPNInterfacesInitParameters) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(float64)
		**out = **in
	}
	if in.InterconnectAttachment != nil {
		in, out := &in.InterconnectAttachment, &out.InterconnectAttachment
		*out = new(string)
		**out = **in
	}
	if in.InterconnectAttachmentRef != nil {
		in, out := &in.InterconnectAttachmentRef, &out.InterconnectAttachmentRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.InterconnectAttachmentSelector != nil {
		in, out := &in.InterconnectAttachmentSelector, &out.InterconnectAttachmentSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPNInterfacesInitParameters.
func (in *VPNInterfacesInitParameters) DeepCopy() *VPNInterfacesInitParameters {
	if in == nil {
		return nil
	}
	out := new(VPNInterfacesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPNInterfacesObservation) DeepCopyInto(out *VPNInterfacesObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(float64)
		**out = **in
	}
	if in.IPAddress != nil {
		in, out := &in.IPAddress, &out.IPAddress
		*out = new(string)
		**out = **in
	}
	if in.InterconnectAttachment != nil {
		in, out := &in.InterconnectAttachment, &out.InterconnectAttachment
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPNInterfacesObservation.
func (in *VPNInterfacesObservation) DeepCopy() *VPNInterfacesObservation {
	if in == nil {
		return nil
	}
	out := new(VPNInterfacesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPNInterfacesParameters) DeepCopyInto(out *VPNInterfacesParameters) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(float64)
		**out = **in
	}
	if in.InterconnectAttachment != nil {
		in, out := &in.InterconnectAttachment, &out.InterconnectAttachment
		*out = new(string)
		**out = **in
	}
	if in.InterconnectAttachmentRef != nil {
		in, out := &in.InterconnectAttachmentRef, &out.InterconnectAttachmentRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.InterconnectAttachmentSelector != nil {
		in, out := &in.InterconnectAttachmentSelector, &out.InterconnectAttachmentSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPNInterfacesParameters.
func (in *VPNInterfacesParameters) DeepCopy() *VPNInterfacesParameters {
	if in == nil {
		return nil
	}
	out := new(VPNInterfacesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPNTunnel) DeepCopyInto(out *VPNTunnel) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPNTunnel.
func (in *VPNTunnel) DeepCopy() *VPNTunnel {
	if in == nil {
		return nil
	}
	out := new(VPNTunnel)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *VPNTunnel) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPNTunnelInitParameters) DeepCopyInto(out *VPNTunnelInitParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.IkeVersion != nil {
		in, out := &in.IkeVersion, &out.IkeVersion
		*out = new(float64)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.LocalTrafficSelector != nil {
		in, out := &in.LocalTrafficSelector, &out.LocalTrafficSelector
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.PeerExternalGateway != nil {
		in, out := &in.PeerExternalGateway, &out.PeerExternalGateway
		*out = new(string)
		**out = **in
	}
	if in.PeerExternalGatewayInterface != nil {
		in, out := &in.PeerExternalGatewayInterface, &out.PeerExternalGatewayInterface
		*out = new(float64)
		**out = **in
	}
	if in.PeerExternalGatewayRef != nil {
		in, out := &in.PeerExternalGatewayRef, &out.PeerExternalGatewayRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.PeerExternalGatewaySelector != nil {
		in, out := &in.PeerExternalGatewaySelector, &out.PeerExternalGatewaySelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.PeerGCPGateway != nil {
		in, out := &in.PeerGCPGateway, &out.PeerGCPGateway
		*out = new(string)
		**out = **in
	}
	if in.PeerIP != nil {
		in, out := &in.PeerIP, &out.PeerIP
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.RemoteTrafficSelector != nil {
		in, out := &in.RemoteTrafficSelector, &out.RemoteTrafficSelector
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Router != nil {
		in, out := &in.Router, &out.Router
		*out = new(string)
		**out = **in
	}
	if in.RouterRef != nil {
		in, out := &in.RouterRef, &out.RouterRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.RouterSelector != nil {
		in, out := &in.RouterSelector, &out.RouterSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	out.SharedSecretSecretRef = in.SharedSecretSecretRef
	if in.TargetVPNGateway != nil {
		in, out := &in.TargetVPNGateway, &out.TargetVPNGateway
		*out = new(string)
		**out = **in
	}
	if in.TargetVPNGatewayRef != nil {
		in, out := &in.TargetVPNGatewayRef, &out.TargetVPNGatewayRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.TargetVPNGatewaySelector != nil {
		in, out := &in.TargetVPNGatewaySelector, &out.TargetVPNGatewaySelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.VPNGateway != nil {
		in, out := &in.VPNGateway, &out.VPNGateway
		*out = new(string)
		**out = **in
	}
	if in.VPNGatewayInterface != nil {
		in, out := &in.VPNGatewayInterface, &out.VPNGatewayInterface
		*out = new(float64)
		**out = **in
	}
	if in.VPNGatewayRef != nil {
		in, out := &in.VPNGatewayRef, &out.VPNGatewayRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.VPNGatewaySelector != nil {
		in, out := &in.VPNGatewaySelector, &out.VPNGatewaySelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPNTunnelInitParameters.
func (in *VPNTunnelInitParameters) DeepCopy() *VPNTunnelInitParameters {
	if in == nil {
		return nil
	}
	out := new(VPNTunnelInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPNTunnelList) DeepCopyInto(out *VPNTunnelList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]VPNTunnel, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPNTunnelList.
func (in *VPNTunnelList) DeepCopy() *VPNTunnelList {
	if in == nil {
		return nil
	}
	out := new(VPNTunnelList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *VPNTunnelList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPNTunnelObservation) DeepCopyInto(out *VPNTunnelObservation) {
	*out = *in
	if in.CreationTimestamp != nil {
		in, out := &in.CreationTimestamp, &out.CreationTimestamp
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DetailedStatus != nil {
		in, out := &in.DetailedStatus, &out.DetailedStatus
		*out = new(string)
		**out = **in
	}
	if in.EffectiveLabels != nil {
		in, out := &in.EffectiveLabels, &out.EffectiveLabels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IkeVersion != nil {
		in, out := &in.IkeVersion, &out.IkeVersion
		*out = new(float64)
		**out = **in
	}
	if in.LabelFingerprint != nil {
		in, out := &in.LabelFingerprint, &out.LabelFingerprint
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.LocalTrafficSelector != nil {
		in, out := &in.LocalTrafficSelector, &out.LocalTrafficSelector
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.PeerExternalGateway != nil {
		in, out := &in.PeerExternalGateway, &out.PeerExternalGateway
		*out = new(string)
		**out = **in
	}
	if in.PeerExternalGatewayInterface != nil {
		in, out := &in.PeerExternalGatewayInterface, &out.PeerExternalGatewayInterface
		*out = new(float64)
		**out = **in
	}
	if in.PeerGCPGateway != nil {
		in, out := &in.PeerGCPGateway, &out.PeerGCPGateway
		*out = new(string)
		**out = **in
	}
	if in.PeerIP != nil {
		in, out := &in.PeerIP, &out.PeerIP
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.RemoteTrafficSelector != nil {
		in, out := &in.RemoteTrafficSelector, &out.RemoteTrafficSelector
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Router != nil {
		in, out := &in.Router, &out.Router
		*out = new(string)
		**out = **in
	}
	if in.SelfLink != nil {
		in, out := &in.SelfLink, &out.SelfLink
		*out = new(string)
		**out = **in
	}
	if in.SharedSecretHash != nil {
		in, out := &in.SharedSecretHash, &out.SharedSecretHash
		*out = new(string)
		**out = **in
	}
	if in.TargetVPNGateway != nil {
		in, out := &in.TargetVPNGateway, &out.TargetVPNGateway
		*out = new(string)
		**out = **in
	}
	if in.TerraformLabels != nil {
		in, out := &in.TerraformLabels, &out.TerraformLabels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TunnelID != nil {
		in, out := &in.TunnelID, &out.TunnelID
		*out = new(string)
		**out = **in
	}
	if in.VPNGateway != nil {
		in, out := &in.VPNGateway, &out.VPNGateway
		*out = new(string)
		**out = **in
	}
	if in.VPNGatewayInterface != nil {
		in, out := &in.VPNGatewayInterface, &out.VPNGatewayInterface
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPNTunnelObservation.
func (in *VPNTunnelObservation) DeepCopy() *VPNTunnelObservation {
	if in == nil {
		return nil
	}
	out := new(VPNTunnelObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPNTunnelParameters) DeepCopyInto(out *VPNTunnelParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.IkeVersion != nil {
		in, out := &in.IkeVersion, &out.IkeVersion
		*out = new(float64)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.LocalTrafficSelector != nil {
		in, out := &in.LocalTrafficSelector, &out.LocalTrafficSelector
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.PeerExternalGateway != nil {
		in, out := &in.PeerExternalGateway, &out.PeerExternalGateway
		*out = new(string)
		**out = **in
	}
	if in.PeerExternalGatewayInterface != nil {
		in, out := &in.PeerExternalGatewayInterface, &out.PeerExternalGatewayInterface
		*out = new(float64)
		**out = **in
	}
	if in.PeerExternalGatewayRef != nil {
		in, out := &in.PeerExternalGatewayRef, &out.PeerExternalGatewayRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.PeerExternalGatewaySelector != nil {
		in, out := &in.PeerExternalGatewaySelector, &out.PeerExternalGatewaySelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.PeerGCPGateway != nil {
		in, out := &in.PeerGCPGateway, &out.PeerGCPGateway
		*out = new(string)
		**out = **in
	}
	if in.PeerIP != nil {
		in, out := &in.PeerIP, &out.PeerIP
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.RemoteTrafficSelector != nil {
		in, out := &in.RemoteTrafficSelector, &out.RemoteTrafficSelector
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Router != nil {
		in, out := &in.Router, &out.Router
		*out = new(string)
		**out = **in
	}
	if in.RouterRef != nil {
		in, out := &in.RouterRef, &out.RouterRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.RouterSelector != nil {
		in, out := &in.RouterSelector, &out.RouterSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	out.SharedSecretSecretRef = in.SharedSecretSecretRef
	if in.TargetVPNGateway != nil {
		in, out := &in.TargetVPNGateway, &out.TargetVPNGateway
		*out = new(string)
		**out = **in
	}
	if in.TargetVPNGatewayRef != nil {
		in, out := &in.TargetVPNGatewayRef, &out.TargetVPNGatewayRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.TargetVPNGatewaySelector != nil {
		in, out := &in.TargetVPNGatewaySelector, &out.TargetVPNGatewaySelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.VPNGateway != nil {
		in, out := &in.VPNGateway, &out.VPNGateway
		*out = new(string)
		**out = **in
	}
	if in.VPNGatewayInterface != nil {
		in, out := &in.VPNGatewayInterface, &out.VPNGatewayInterface
		*out = new(float64)
		**out = **in
	}
	if in.VPNGatewayRef != nil {
		in, out := &in.VPNGatewayRef, &out.VPNGatewayRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.VPNGatewaySelector != nil {
		in, out := &in.VPNGatewaySelector, &out.VPNGatewaySelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPNTunnelParameters.
func (in *VPNTunnelParameters) DeepCopy() *VPNTunnelParameters {
	if in == nil {
		return nil
	}
	out := new(VPNTunnelParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPNTunnelSpec) DeepCopyInto(out *VPNTunnelSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPNTunnelSpec.
func (in *VPNTunnelSpec) DeepCopy() *VPNTunnelSpec {
	if in == nil {
		return nil
	}
	out := new(VPNTunnelSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPNTunnelStatus) DeepCopyInto(out *VPNTunnelStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPNTunnelStatus.
func (in *VPNTunnelStatus) DeepCopy() *VPNTunnelStatus {
	if in == nil {
		return nil
	}
	out := new(VPNTunnelStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VersionInitParameters) DeepCopyInto(out *VersionInitParameters) {
	*out = *in
	if in.InstanceTemplate != nil {
		in, out := &in.InstanceTemplate, &out.InstanceTemplate
		*out = new(string)
		**out = **in
	}
	if in.InstanceTemplateRef != nil {
		in, out := &in.InstanceTemplateRef, &out.InstanceTemplateRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.InstanceTemplateSelector != nil {
		in, out := &in.InstanceTemplateSelector, &out.InstanceTemplateSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.TargetSize != nil {
		in, out := &in.TargetSize, &out.TargetSize
		*out = make([]TargetSizeInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VersionInitParameters.
func (in *VersionInitParameters) DeepCopy() *VersionInitParameters {
	if in == nil {
		return nil
	}
	out := new(VersionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VersionObservation) DeepCopyInto(out *VersionObservation) {
	*out = *in
	if in.InstanceTemplate != nil {
		in, out := &in.InstanceTemplate, &out.InstanceTemplate
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.TargetSize != nil {
		in, out := &in.TargetSize, &out.TargetSize
		*out = make([]TargetSizeObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VersionObservation.
func (in *VersionObservation) DeepCopy() *VersionObservation {
	if in == nil {
		return nil
	}
	out := new(VersionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VersionParameters) DeepCopyInto(out *VersionParameters) {
	*out = *in
	if in.InstanceTemplate != nil {
		in, out := &in.InstanceTemplate, &out.InstanceTemplate
		*out = new(string)
		**out = **in
	}
	if in.InstanceTemplateRef != nil {
		in, out := &in.InstanceTemplateRef, &out.InstanceTemplateRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.InstanceTemplateSelector != nil {
		in, out := &in.InstanceTemplateSelector, &out.InstanceTemplateSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.TargetSize != nil {
		in, out := &in.TargetSize, &out.TargetSize
		*out = make([]TargetSizeParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VersionParameters.
func (in *VersionParameters) DeepCopy() *VersionParameters {
	if in == nil {
		return nil
	}
	out := new(VersionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VersionTargetInitParameters) DeepCopyInto(out *VersionTargetInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VersionTargetInitParameters.
func (in *VersionTargetInitParameters) DeepCopy() *VersionTargetInitParameters {
	if in == nil {
		return nil
	}
	out := new(VersionTargetInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VersionTargetObservation) DeepCopyInto(out *VersionTargetObservation) {
	*out = *in
	if in.IsReached != nil {
		in, out := &in.IsReached, &out.IsReached
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VersionTargetObservation.
func (in *VersionTargetObservation) DeepCopy() *VersionTargetObservation {
	if in == nil {
		return nil
	}
	out := new(VersionTargetObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VersionTargetParameters) DeepCopyInto(out *VersionTargetParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VersionTargetParameters.
func (in *VersionTargetParameters) DeepCopy() *VersionTargetParameters {
	if in == nil {
		return nil
	}
	out := new(VersionTargetParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VersionTargetSizeInitParameters) DeepCopyInto(out *VersionTargetSizeInitParameters) {
	*out = *in
	if in.Fixed != nil {
		in, out := &in.Fixed, &out.Fixed
		*out = new(float64)
		**out = **in
	}
	if in.Percent != nil {
		in, out := &in.Percent, &out.Percent
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VersionTargetSizeInitParameters.
func (in *VersionTargetSizeInitParameters) DeepCopy() *VersionTargetSizeInitParameters {
	if in == nil {
		return nil
	}
	out := new(VersionTargetSizeInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VersionTargetSizeObservation) DeepCopyInto(out *VersionTargetSizeObservation) {
	*out = *in
	if in.Fixed != nil {
		in, out := &in.Fixed, &out.Fixed
		*out = new(float64)
		**out = **in
	}
	if in.Percent != nil {
		in, out := &in.Percent, &out.Percent
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VersionTargetSizeObservation.
func (in *VersionTargetSizeObservation) DeepCopy() *VersionTargetSizeObservation {
	if in == nil {
		return nil
	}
	out := new(VersionTargetSizeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VersionTargetSizeParameters) DeepCopyInto(out *VersionTargetSizeParameters) {
	*out = *in
	if in.Fixed != nil {
		in, out := &in.Fixed, &out.Fixed
		*out = new(float64)
		**out = **in
	}
	if in.Percent != nil {
		in, out := &in.Percent, &out.Percent
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VersionTargetSizeParameters.
func (in *VersionTargetSizeParameters) DeepCopy() *VersionTargetSizeParameters {
	if in == nil {
		return nil
	}
	out := new(VersionTargetSizeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WeeklyScheduleInitParameters) DeepCopyInto(out *WeeklyScheduleInitParameters) {
	*out = *in
	if in.DayOfWeeks != nil {
		in, out := &in.DayOfWeeks, &out.DayOfWeeks
		*out = make([]DayOfWeeksInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WeeklyScheduleInitParameters.
func (in *WeeklyScheduleInitParameters) DeepCopy() *WeeklyScheduleInitParameters {
	if in == nil {
		return nil
	}
	out := new(WeeklyScheduleInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WeeklyScheduleObservation) DeepCopyInto(out *WeeklyScheduleObservation) {
	*out = *in
	if in.DayOfWeeks != nil {
		in, out := &in.DayOfWeeks, &out.DayOfWeeks
		*out = make([]DayOfWeeksObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WeeklyScheduleObservation.
func (in *WeeklyScheduleObservation) DeepCopy() *WeeklyScheduleObservation {
	if in == nil {
		return nil
	}
	out := new(WeeklyScheduleObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WeeklyScheduleParameters) DeepCopyInto(out *WeeklyScheduleParameters) {
	*out = *in
	if in.DayOfWeeks != nil {
		in, out := &in.DayOfWeeks, &out.DayOfWeeks
		*out = make([]DayOfWeeksParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WeeklyScheduleParameters.
func (in *WeeklyScheduleParameters) DeepCopy() *WeeklyScheduleParameters {
	if in == nil {
		return nil
	}
	out := new(WeeklyScheduleParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WeightedBackendServicesHeaderActionInitParameters) DeepCopyInto(out *WeightedBackendServicesHeaderActionInitParameters) {
	*out = *in
	if in.RequestHeadersToAdd != nil {
		in, out := &in.RequestHeadersToAdd, &out.RequestHeadersToAdd
		*out = make([]HeaderActionRequestHeadersToAddInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RequestHeadersToRemove != nil {
		in, out := &in.RequestHeadersToRemove, &out.RequestHeadersToRemove
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ResponseHeadersToAdd != nil {
		in, out := &in.ResponseHeadersToAdd, &out.ResponseHeadersToAdd
		*out = make([]HeaderActionResponseHeadersToAddInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ResponseHeadersToRemove != nil {
		in, out := &in.ResponseHeadersToRemove, &out.ResponseHeadersToRemove
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WeightedBackendServicesHeaderActionInitParameters.
func (in *WeightedBackendServicesHeaderActionInitParameters) DeepCopy() *WeightedBackendServicesHeaderActionInitParameters {
	if in == nil {
		return nil
	}
	out := new(WeightedBackendServicesHeaderActionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WeightedBackendServicesHeaderActionObservation) DeepCopyInto(out *WeightedBackendServicesHeaderActionObservation) {
	*out = *in
	if in.RequestHeadersToAdd != nil {
		in, out := &in.RequestHeadersToAdd, &out.RequestHeadersToAdd
		*out = make([]HeaderActionRequestHeadersToAddObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RequestHeadersToRemove != nil {
		in, out := &in.RequestHeadersToRemove, &out.RequestHeadersToRemove
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ResponseHeadersToAdd != nil {
		in, out := &in.ResponseHeadersToAdd, &out.ResponseHeadersToAdd
		*out = make([]HeaderActionResponseHeadersToAddObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ResponseHeadersToRemove != nil {
		in, out := &in.ResponseHeadersToRemove, &out.ResponseHeadersToRemove
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WeightedBackendServicesHeaderActionObservation.
func (in *WeightedBackendServicesHeaderActionObservation) DeepCopy() *WeightedBackendServicesHeaderActionObservation {
	if in == nil {
		return nil
	}
	out := new(WeightedBackendServicesHeaderActionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WeightedBackendServicesHeaderActionParameters) DeepCopyInto(out *WeightedBackendServicesHeaderActionParameters) {
	*out = *in
	if in.RequestHeadersToAdd != nil {
		in, out := &in.RequestHeadersToAdd, &out.RequestHeadersToAdd
		*out = make([]HeaderActionRequestHeadersToAddParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RequestHeadersToRemove != nil {
		in, out := &in.RequestHeadersToRemove, &out.RequestHeadersToRemove
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ResponseHeadersToAdd != nil {
		in, out := &in.ResponseHeadersToAdd, &out.ResponseHeadersToAdd
		*out = make([]HeaderActionResponseHeadersToAddParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ResponseHeadersToRemove != nil {
		in, out := &in.ResponseHeadersToRemove, &out.ResponseHeadersToRemove
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WeightedBackendServicesHeaderActionParameters.
func (in *WeightedBackendServicesHeaderActionParameters) DeepCopy() *WeightedBackendServicesHeaderActionParameters {
	if in == nil {
		return nil
	}
	out := new(WeightedBackendServicesHeaderActionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WeightedBackendServicesHeaderActionRequestHeadersToAddInitParameters) DeepCopyInto(out *WeightedBackendServicesHeaderActionRequestHeadersToAddInitParameters) {
	*out = *in
	if in.HeaderName != nil {
		in, out := &in.HeaderName, &out.HeaderName
		*out = new(string)
		**out = **in
	}
	if in.HeaderValue != nil {
		in, out := &in.HeaderValue, &out.HeaderValue
		*out = new(string)
		**out = **in
	}
	if in.Replace != nil {
		in, out := &in.Replace, &out.Replace
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WeightedBackendServicesHeaderActionRequestHeadersToAddInitParameters.
func (in *WeightedBackendServicesHeaderActionRequestHeadersToAddInitParameters) DeepCopy() *WeightedBackendServicesHeaderActionRequestHeadersToAddInitParameters {
	if in == nil {
		return nil
	}
	out := new(WeightedBackendServicesHeaderActionRequestHeadersToAddInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WeightedBackendServicesHeaderActionRequestHeadersToAddObservation) DeepCopyInto(out *WeightedBackendServicesHeaderActionRequestHeadersToAddObservation) {
	*out = *in
	if in.HeaderName != nil {
		in, out := &in.HeaderName, &out.HeaderName
		*out = new(string)
		**out = **in
	}
	if in.HeaderValue != nil {
		in, out := &in.HeaderValue, &out.HeaderValue
		*out = new(string)
		**out = **in
	}
	if in.Replace != nil {
		in, out := &in.Replace, &out.Replace
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WeightedBackendServicesHeaderActionRequestHeadersToAddObservation.
func (in *WeightedBackendServicesHeaderActionRequestHeadersToAddObservation) DeepCopy() *WeightedBackendServicesHeaderActionRequestHeadersToAddObservation {
	if in == nil {
		return nil
	}
	out := new(WeightedBackendServicesHeaderActionRequestHeadersToAddObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WeightedBackendServicesHeaderActionRequestHeadersToAddParameters) DeepCopyInto(out *WeightedBackendServicesHeaderActionRequestHeadersToAddParameters) {
	*out = *in
	if in.HeaderName != nil {
		in, out := &in.HeaderName, &out.HeaderName
		*out = new(string)
		**out = **in
	}
	if in.HeaderValue != nil {
		in, out := &in.HeaderValue, &out.HeaderValue
		*out = new(string)
		**out = **in
	}
	if in.Replace != nil {
		in, out := &in.Replace, &out.Replace
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WeightedBackendServicesHeaderActionRequestHeadersToAddParameters.
func (in *WeightedBackendServicesHeaderActionRequestHeadersToAddParameters) DeepCopy() *WeightedBackendServicesHeaderActionRequestHeadersToAddParameters {
	if in == nil {
		return nil
	}
	out := new(WeightedBackendServicesHeaderActionRequestHeadersToAddParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WeightedBackendServicesHeaderActionResponseHeadersToAddInitParameters) DeepCopyInto(out *WeightedBackendServicesHeaderActionResponseHeadersToAddInitParameters) {
	*out = *in
	if in.HeaderName != nil {
		in, out := &in.HeaderName, &out.HeaderName
		*out = new(string)
		**out = **in
	}
	if in.HeaderValue != nil {
		in, out := &in.HeaderValue, &out.HeaderValue
		*out = new(string)
		**out = **in
	}
	if in.Replace != nil {
		in, out := &in.Replace, &out.Replace
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WeightedBackendServicesHeaderActionResponseHeadersToAddInitParameters.
func (in *WeightedBackendServicesHeaderActionResponseHeadersToAddInitParameters) DeepCopy() *WeightedBackendServicesHeaderActionResponseHeadersToAddInitParameters {
	if in == nil {
		return nil
	}
	out := new(WeightedBackendServicesHeaderActionResponseHeadersToAddInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WeightedBackendServicesHeaderActionResponseHeadersToAddObservation) DeepCopyInto(out *WeightedBackendServicesHeaderActionResponseHeadersToAddObservation) {
	*out = *in
	if in.HeaderName != nil {
		in, out := &in.HeaderName, &out.HeaderName
		*out = new(string)
		**out = **in
	}
	if in.HeaderValue != nil {
		in, out := &in.HeaderValue, &out.HeaderValue
		*out = new(string)
		**out = **in
	}
	if in.Replace != nil {
		in, out := &in.Replace, &out.Replace
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WeightedBackendServicesHeaderActionResponseHeadersToAddObservation.
func (in *WeightedBackendServicesHeaderActionResponseHeadersToAddObservation) DeepCopy() *WeightedBackendServicesHeaderActionResponseHeadersToAddObservation {
	if in == nil {
		return nil
	}
	out := new(WeightedBackendServicesHeaderActionResponseHeadersToAddObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WeightedBackendServicesHeaderActionResponseHeadersToAddParameters) DeepCopyInto(out *WeightedBackendServicesHeaderActionResponseHeadersToAddParameters) {
	*out = *in
	if in.HeaderName != nil {
		in, out := &in.HeaderName, &out.HeaderName
		*out = new(string)
		**out = **in
	}
	if in.HeaderValue != nil {
		in, out := &in.HeaderValue, &out.HeaderValue
		*out = new(string)
		**out = **in
	}
	if in.Replace != nil {
		in, out := &in.Replace, &out.Replace
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WeightedBackendServicesHeaderActionResponseHeadersToAddParameters.
func (in *WeightedBackendServicesHeaderActionResponseHeadersToAddParameters) DeepCopy() *WeightedBackendServicesHeaderActionResponseHeadersToAddParameters {
	if in == nil {
		return nil
	}
	out := new(WeightedBackendServicesHeaderActionResponseHeadersToAddParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WeightedBackendServicesInitParameters) DeepCopyInto(out *WeightedBackendServicesInitParameters) {
	*out = *in
	if in.BackendService != nil {
		in, out := &in.BackendService, &out.BackendService
		*out = new(string)
		**out = **in
	}
	if in.BackendServiceRef != nil {
		in, out := &in.BackendServiceRef, &out.BackendServiceRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.BackendServiceSelector != nil {
		in, out := &in.BackendServiceSelector, &out.BackendServiceSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.HeaderAction != nil {
		in, out := &in.HeaderAction, &out.HeaderAction
		*out = make([]HeaderActionInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Weight != nil {
		in, out := &in.Weight, &out.Weight
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WeightedBackendServicesInitParameters.
func (in *WeightedBackendServicesInitParameters) DeepCopy() *WeightedBackendServicesInitParameters {
	if in == nil {
		return nil
	}
	out := new(WeightedBackendServicesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WeightedBackendServicesObservation) DeepCopyInto(out *WeightedBackendServicesObservation) {
	*out = *in
	if in.BackendService != nil {
		in, out := &in.BackendService, &out.BackendService
		*out = new(string)
		**out = **in
	}
	if in.HeaderAction != nil {
		in, out := &in.HeaderAction, &out.HeaderAction
		*out = make([]HeaderActionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Weight != nil {
		in, out := &in.Weight, &out.Weight
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WeightedBackendServicesObservation.
func (in *WeightedBackendServicesObservation) DeepCopy() *WeightedBackendServicesObservation {
	if in == nil {
		return nil
	}
	out := new(WeightedBackendServicesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WeightedBackendServicesParameters) DeepCopyInto(out *WeightedBackendServicesParameters) {
	*out = *in
	if in.BackendService != nil {
		in, out := &in.BackendService, &out.BackendService
		*out = new(string)
		**out = **in
	}
	if in.BackendServiceRef != nil {
		in, out := &in.BackendServiceRef, &out.BackendServiceRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.BackendServiceSelector != nil {
		in, out := &in.BackendServiceSelector, &out.BackendServiceSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.HeaderAction != nil {
		in, out := &in.HeaderAction, &out.HeaderAction
		*out = make([]HeaderActionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Weight != nil {
		in, out := &in.Weight, &out.Weight
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WeightedBackendServicesParameters.
func (in *WeightedBackendServicesParameters) DeepCopy() *WeightedBackendServicesParameters {
	if in == nil {
		return nil
	}
	out := new(WeightedBackendServicesParameters)
	in.DeepCopyInto(out)
	return out
}
