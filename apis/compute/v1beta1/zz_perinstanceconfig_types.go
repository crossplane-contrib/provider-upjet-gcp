// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1beta1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type ExternalIPInitParameters struct {

	// These stateful IPs will never be released during autohealing, update or VM instance recreate operations. This flag is used to configure if the IP reservation should be deleted after it is no longer used by the group, e.g. when the given instance or the whole group is deleted.
	// Default value is NEVER.
	// Possible values are: NEVER, ON_PERMANENT_INSTANCE_DELETION.
	AutoDelete *string `json:"autoDelete,omitempty" tf:"auto_delete,omitempty"`

	// Ip address representation
	// Structure is documented below.
	IPAddress []IPAddressInitParameters `json:"ipAddress,omitempty" tf:"ip_address,omitempty"`

	// The identifier for this object. Format specified above.
	InterfaceName *string `json:"interfaceName,omitempty" tf:"interface_name,omitempty"`
}

type ExternalIPObservation struct {

	// These stateful IPs will never be released during autohealing, update or VM instance recreate operations. This flag is used to configure if the IP reservation should be deleted after it is no longer used by the group, e.g. when the given instance or the whole group is deleted.
	// Default value is NEVER.
	// Possible values are: NEVER, ON_PERMANENT_INSTANCE_DELETION.
	AutoDelete *string `json:"autoDelete,omitempty" tf:"auto_delete,omitempty"`

	// Ip address representation
	// Structure is documented below.
	IPAddress []IPAddressObservation `json:"ipAddress,omitempty" tf:"ip_address,omitempty"`

	// The identifier for this object. Format specified above.
	InterfaceName *string `json:"interfaceName,omitempty" tf:"interface_name,omitempty"`
}

type ExternalIPParameters struct {

	// These stateful IPs will never be released during autohealing, update or VM instance recreate operations. This flag is used to configure if the IP reservation should be deleted after it is no longer used by the group, e.g. when the given instance or the whole group is deleted.
	// Default value is NEVER.
	// Possible values are: NEVER, ON_PERMANENT_INSTANCE_DELETION.
	// +kubebuilder:validation:Optional
	AutoDelete *string `json:"autoDelete,omitempty" tf:"auto_delete,omitempty"`

	// Ip address representation
	// Structure is documented below.
	// +kubebuilder:validation:Optional
	IPAddress []IPAddressParameters `json:"ipAddress,omitempty" tf:"ip_address,omitempty"`

	// The identifier for this object. Format specified above.
	// +kubebuilder:validation:Optional
	InterfaceName *string `json:"interfaceName" tf:"interface_name,omitempty"`
}

type IPAddressInitParameters struct {

	// The URL of the reservation for this IP address.
	Address *string `json:"address,omitempty" tf:"address,omitempty"`
}

type IPAddressObservation struct {

	// The URL of the reservation for this IP address.
	Address *string `json:"address,omitempty" tf:"address,omitempty"`
}

type IPAddressParameters struct {

	// The URL of the reservation for this IP address.
	// +kubebuilder:validation:Optional
	Address *string `json:"address,omitempty" tf:"address,omitempty"`
}

type InternalIPIPAddressInitParameters struct {

	// The URL of the reservation for this IP address.
	Address *string `json:"address,omitempty" tf:"address,omitempty"`
}

type InternalIPIPAddressObservation struct {

	// The URL of the reservation for this IP address.
	Address *string `json:"address,omitempty" tf:"address,omitempty"`
}

type InternalIPIPAddressParameters struct {

	// The URL of the reservation for this IP address.
	// +kubebuilder:validation:Optional
	Address *string `json:"address,omitempty" tf:"address,omitempty"`
}

type InternalIPInitParameters struct {

	// These stateful IPs will never be released during autohealing, update or VM instance recreate operations. This flag is used to configure if the IP reservation should be deleted after it is no longer used by the group, e.g. when the given instance or the whole group is deleted.
	// Default value is NEVER.
	// Possible values are: NEVER, ON_PERMANENT_INSTANCE_DELETION.
	AutoDelete *string `json:"autoDelete,omitempty" tf:"auto_delete,omitempty"`

	// Ip address representation
	// Structure is documented below.
	IPAddress []InternalIPIPAddressInitParameters `json:"ipAddress,omitempty" tf:"ip_address,omitempty"`

	// The identifier for this object. Format specified above.
	InterfaceName *string `json:"interfaceName,omitempty" tf:"interface_name,omitempty"`
}

type InternalIPObservation struct {

	// These stateful IPs will never be released during autohealing, update or VM instance recreate operations. This flag is used to configure if the IP reservation should be deleted after it is no longer used by the group, e.g. when the given instance or the whole group is deleted.
	// Default value is NEVER.
	// Possible values are: NEVER, ON_PERMANENT_INSTANCE_DELETION.
	AutoDelete *string `json:"autoDelete,omitempty" tf:"auto_delete,omitempty"`

	// Ip address representation
	// Structure is documented below.
	IPAddress []InternalIPIPAddressObservation `json:"ipAddress,omitempty" tf:"ip_address,omitempty"`

	// The identifier for this object. Format specified above.
	InterfaceName *string `json:"interfaceName,omitempty" tf:"interface_name,omitempty"`
}

type InternalIPParameters struct {

	// These stateful IPs will never be released during autohealing, update or VM instance recreate operations. This flag is used to configure if the IP reservation should be deleted after it is no longer used by the group, e.g. when the given instance or the whole group is deleted.
	// Default value is NEVER.
	// Possible values are: NEVER, ON_PERMANENT_INSTANCE_DELETION.
	// +kubebuilder:validation:Optional
	AutoDelete *string `json:"autoDelete,omitempty" tf:"auto_delete,omitempty"`

	// Ip address representation
	// Structure is documented below.
	// +kubebuilder:validation:Optional
	IPAddress []InternalIPIPAddressParameters `json:"ipAddress,omitempty" tf:"ip_address,omitempty"`

	// The identifier for this object. Format specified above.
	// +kubebuilder:validation:Optional
	InterfaceName *string `json:"interfaceName" tf:"interface_name,omitempty"`
}

type PerInstanceConfigInitParameters struct {

	// The instance group manager this instance config is part of.
	// +crossplane:generate:reference:type=github.com/upbound/provider-gcp/apis/compute/v1beta1.InstanceGroupManager
	InstanceGroupManager *string `json:"instanceGroupManager,omitempty" tf:"instance_group_manager,omitempty"`

	// Reference to a InstanceGroupManager in compute to populate instanceGroupManager.
	// +kubebuilder:validation:Optional
	InstanceGroupManagerRef *v1.Reference `json:"instanceGroupManagerRef,omitempty" tf:"-"`

	// Selector for a InstanceGroupManager in compute to populate instanceGroupManager.
	// +kubebuilder:validation:Optional
	InstanceGroupManagerSelector *v1.Selector `json:"instanceGroupManagerSelector,omitempty" tf:"-"`

	// The minimal action to perform on the instance during an update.
	// Default is NONE. Possible values are:
	MinimalAction *string `json:"minimalAction,omitempty" tf:"minimal_action,omitempty"`

	// The most disruptive action to perform on the instance during an update.
	// Default is REPLACE. Possible values are:
	MostDisruptiveAllowedAction *string `json:"mostDisruptiveAllowedAction,omitempty" tf:"most_disruptive_allowed_action,omitempty"`

	// The name for this per-instance config and its corresponding instance.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// The preserved state for this instance.
	// Structure is documented below.
	PreservedState []PreservedStateInitParameters `json:"preservedState,omitempty" tf:"preserved_state,omitempty"`

	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project *string `json:"project,omitempty" tf:"project,omitempty"`

	// When true, deleting this config will immediately remove the underlying instance.
	// When false, deleting this config will use the behavior as determined by remove_instance_on_destroy.
	RemoveInstanceOnDestroy *bool `json:"removeInstanceOnDestroy,omitempty" tf:"remove_instance_on_destroy,omitempty"`

	// When true, deleting this config will immediately remove any specified state from the underlying instance.
	// When false, deleting this config will not immediately remove any state from the underlying instance.
	// State will be removed on the next instance recreation or update.
	RemoveInstanceStateOnDestroy *bool `json:"removeInstanceStateOnDestroy,omitempty" tf:"remove_instance_state_on_destroy,omitempty"`

	// Zone where the containing instance group manager is located
	// +crossplane:generate:reference:type=github.com/upbound/provider-gcp/apis/compute/v1beta1.InstanceGroupManager
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractParamPath("zone",false)
	Zone *string `json:"zone,omitempty" tf:"zone,omitempty"`

	// Reference to a InstanceGroupManager in compute to populate zone.
	// +kubebuilder:validation:Optional
	ZoneRef *v1.Reference `json:"zoneRef,omitempty" tf:"-"`

	// Selector for a InstanceGroupManager in compute to populate zone.
	// +kubebuilder:validation:Optional
	ZoneSelector *v1.Selector `json:"zoneSelector,omitempty" tf:"-"`
}

type PerInstanceConfigObservation struct {

	// an identifier for the resource with format {{project}}/{{zone}}/{{instance_group_manager}}/{{name}}
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// The instance group manager this instance config is part of.
	InstanceGroupManager *string `json:"instanceGroupManager,omitempty" tf:"instance_group_manager,omitempty"`

	// The minimal action to perform on the instance during an update.
	// Default is NONE. Possible values are:
	MinimalAction *string `json:"minimalAction,omitempty" tf:"minimal_action,omitempty"`

	// The most disruptive action to perform on the instance during an update.
	// Default is REPLACE. Possible values are:
	MostDisruptiveAllowedAction *string `json:"mostDisruptiveAllowedAction,omitempty" tf:"most_disruptive_allowed_action,omitempty"`

	// The name for this per-instance config and its corresponding instance.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// The preserved state for this instance.
	// Structure is documented below.
	PreservedState []PreservedStateObservation `json:"preservedState,omitempty" tf:"preserved_state,omitempty"`

	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project *string `json:"project,omitempty" tf:"project,omitempty"`

	// When true, deleting this config will immediately remove the underlying instance.
	// When false, deleting this config will use the behavior as determined by remove_instance_on_destroy.
	RemoveInstanceOnDestroy *bool `json:"removeInstanceOnDestroy,omitempty" tf:"remove_instance_on_destroy,omitempty"`

	// When true, deleting this config will immediately remove any specified state from the underlying instance.
	// When false, deleting this config will not immediately remove any state from the underlying instance.
	// State will be removed on the next instance recreation or update.
	RemoveInstanceStateOnDestroy *bool `json:"removeInstanceStateOnDestroy,omitempty" tf:"remove_instance_state_on_destroy,omitempty"`

	// Zone where the containing instance group manager is located
	Zone *string `json:"zone,omitempty" tf:"zone,omitempty"`
}

type PerInstanceConfigParameters struct {

	// The instance group manager this instance config is part of.
	// +crossplane:generate:reference:type=github.com/upbound/provider-gcp/apis/compute/v1beta1.InstanceGroupManager
	// +kubebuilder:validation:Optional
	InstanceGroupManager *string `json:"instanceGroupManager,omitempty" tf:"instance_group_manager,omitempty"`

	// Reference to a InstanceGroupManager in compute to populate instanceGroupManager.
	// +kubebuilder:validation:Optional
	InstanceGroupManagerRef *v1.Reference `json:"instanceGroupManagerRef,omitempty" tf:"-"`

	// Selector for a InstanceGroupManager in compute to populate instanceGroupManager.
	// +kubebuilder:validation:Optional
	InstanceGroupManagerSelector *v1.Selector `json:"instanceGroupManagerSelector,omitempty" tf:"-"`

	// The minimal action to perform on the instance during an update.
	// Default is NONE. Possible values are:
	// +kubebuilder:validation:Optional
	MinimalAction *string `json:"minimalAction,omitempty" tf:"minimal_action,omitempty"`

	// The most disruptive action to perform on the instance during an update.
	// Default is REPLACE. Possible values are:
	// +kubebuilder:validation:Optional
	MostDisruptiveAllowedAction *string `json:"mostDisruptiveAllowedAction,omitempty" tf:"most_disruptive_allowed_action,omitempty"`

	// The name for this per-instance config and its corresponding instance.
	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// The preserved state for this instance.
	// Structure is documented below.
	// +kubebuilder:validation:Optional
	PreservedState []PreservedStateParameters `json:"preservedState,omitempty" tf:"preserved_state,omitempty"`

	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	// +kubebuilder:validation:Optional
	Project *string `json:"project,omitempty" tf:"project,omitempty"`

	// When true, deleting this config will immediately remove the underlying instance.
	// When false, deleting this config will use the behavior as determined by remove_instance_on_destroy.
	// +kubebuilder:validation:Optional
	RemoveInstanceOnDestroy *bool `json:"removeInstanceOnDestroy,omitempty" tf:"remove_instance_on_destroy,omitempty"`

	// When true, deleting this config will immediately remove any specified state from the underlying instance.
	// When false, deleting this config will not immediately remove any state from the underlying instance.
	// State will be removed on the next instance recreation or update.
	// +kubebuilder:validation:Optional
	RemoveInstanceStateOnDestroy *bool `json:"removeInstanceStateOnDestroy,omitempty" tf:"remove_instance_state_on_destroy,omitempty"`

	// Zone where the containing instance group manager is located
	// +crossplane:generate:reference:type=github.com/upbound/provider-gcp/apis/compute/v1beta1.InstanceGroupManager
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractParamPath("zone",false)
	// +kubebuilder:validation:Optional
	Zone *string `json:"zone,omitempty" tf:"zone,omitempty"`

	// Reference to a InstanceGroupManager in compute to populate zone.
	// +kubebuilder:validation:Optional
	ZoneRef *v1.Reference `json:"zoneRef,omitempty" tf:"-"`

	// Selector for a InstanceGroupManager in compute to populate zone.
	// +kubebuilder:validation:Optional
	ZoneSelector *v1.Selector `json:"zoneSelector,omitempty" tf:"-"`
}

type PreservedStateDiskInitParameters struct {

	// A value that prescribes what should happen to the stateful disk when the VM instance is deleted.
	// The available options are NEVER and ON_PERMANENT_INSTANCE_DELETION.
	// NEVER - detach the disk when the VM is deleted, but do not delete the disk.
	// ON_PERMANENT_INSTANCE_DELETION will delete the stateful disk when the VM is permanently
	// deleted from the instance group.
	// Default value is NEVER.
	// Possible values are: NEVER, ON_PERMANENT_INSTANCE_DELETION.
	DeleteRule *string `json:"deleteRule,omitempty" tf:"delete_rule,omitempty"`

	// A unique device name that is reflected into the /dev/ tree of a Linux operating system running within the instance.
	DeviceName *string `json:"deviceName,omitempty" tf:"device_name,omitempty"`

	// The mode of the disk.
	// Default value is READ_WRITE.
	// Possible values are: READ_ONLY, READ_WRITE.
	Mode *string `json:"mode,omitempty" tf:"mode,omitempty"`

	// The URI of an existing persistent disk to attach under the specified device-name in the format
	// projects/project-id/zones/zone/disks/disk-name.
	// +crossplane:generate:reference:type=github.com/upbound/provider-gcp/apis/compute/v1beta1.Disk
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractResourceID()
	Source *string `json:"source,omitempty" tf:"source,omitempty"`

	// Reference to a Disk in compute to populate source.
	// +kubebuilder:validation:Optional
	SourceRef *v1.Reference `json:"sourceRef,omitempty" tf:"-"`

	// Selector for a Disk in compute to populate source.
	// +kubebuilder:validation:Optional
	SourceSelector *v1.Selector `json:"sourceSelector,omitempty" tf:"-"`
}

type PreservedStateDiskObservation struct {

	// A value that prescribes what should happen to the stateful disk when the VM instance is deleted.
	// The available options are NEVER and ON_PERMANENT_INSTANCE_DELETION.
	// NEVER - detach the disk when the VM is deleted, but do not delete the disk.
	// ON_PERMANENT_INSTANCE_DELETION will delete the stateful disk when the VM is permanently
	// deleted from the instance group.
	// Default value is NEVER.
	// Possible values are: NEVER, ON_PERMANENT_INSTANCE_DELETION.
	DeleteRule *string `json:"deleteRule,omitempty" tf:"delete_rule,omitempty"`

	// A unique device name that is reflected into the /dev/ tree of a Linux operating system running within the instance.
	DeviceName *string `json:"deviceName,omitempty" tf:"device_name,omitempty"`

	// The mode of the disk.
	// Default value is READ_WRITE.
	// Possible values are: READ_ONLY, READ_WRITE.
	Mode *string `json:"mode,omitempty" tf:"mode,omitempty"`

	// The URI of an existing persistent disk to attach under the specified device-name in the format
	// projects/project-id/zones/zone/disks/disk-name.
	Source *string `json:"source,omitempty" tf:"source,omitempty"`
}

type PreservedStateDiskParameters struct {

	// A value that prescribes what should happen to the stateful disk when the VM instance is deleted.
	// The available options are NEVER and ON_PERMANENT_INSTANCE_DELETION.
	// NEVER - detach the disk when the VM is deleted, but do not delete the disk.
	// ON_PERMANENT_INSTANCE_DELETION will delete the stateful disk when the VM is permanently
	// deleted from the instance group.
	// Default value is NEVER.
	// Possible values are: NEVER, ON_PERMANENT_INSTANCE_DELETION.
	// +kubebuilder:validation:Optional
	DeleteRule *string `json:"deleteRule,omitempty" tf:"delete_rule,omitempty"`

	// A unique device name that is reflected into the /dev/ tree of a Linux operating system running within the instance.
	// +kubebuilder:validation:Optional
	DeviceName *string `json:"deviceName" tf:"device_name,omitempty"`

	// The mode of the disk.
	// Default value is READ_WRITE.
	// Possible values are: READ_ONLY, READ_WRITE.
	// +kubebuilder:validation:Optional
	Mode *string `json:"mode,omitempty" tf:"mode,omitempty"`

	// The URI of an existing persistent disk to attach under the specified device-name in the format
	// projects/project-id/zones/zone/disks/disk-name.
	// +crossplane:generate:reference:type=github.com/upbound/provider-gcp/apis/compute/v1beta1.Disk
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	Source *string `json:"source,omitempty" tf:"source,omitempty"`

	// Reference to a Disk in compute to populate source.
	// +kubebuilder:validation:Optional
	SourceRef *v1.Reference `json:"sourceRef,omitempty" tf:"-"`

	// Selector for a Disk in compute to populate source.
	// +kubebuilder:validation:Optional
	SourceSelector *v1.Selector `json:"sourceSelector,omitempty" tf:"-"`
}

type PreservedStateInitParameters struct {

	// Stateful disks for the instance.
	// Structure is documented below.
	Disk []PreservedStateDiskInitParameters `json:"disk,omitempty" tf:"disk,omitempty"`

	// Preserved external IPs defined for this instance. This map is keyed with the name of the network interface.
	// Structure is documented below.
	ExternalIP []ExternalIPInitParameters `json:"externalIp,omitempty" tf:"external_ip,omitempty"`

	// Preserved internal IPs defined for this instance. This map is keyed with the name of the network interface.
	// Structure is documented below.
	InternalIP []InternalIPInitParameters `json:"internalIp,omitempty" tf:"internal_ip,omitempty"`

	// Preserved metadata defined for this instance. This is a list of key->value pairs.
	// +mapType=granular
	Metadata map[string]*string `json:"metadata,omitempty" tf:"metadata,omitempty"`
}

type PreservedStateObservation struct {

	// Stateful disks for the instance.
	// Structure is documented below.
	Disk []PreservedStateDiskObservation `json:"disk,omitempty" tf:"disk,omitempty"`

	// Preserved external IPs defined for this instance. This map is keyed with the name of the network interface.
	// Structure is documented below.
	ExternalIP []ExternalIPObservation `json:"externalIp,omitempty" tf:"external_ip,omitempty"`

	// Preserved internal IPs defined for this instance. This map is keyed with the name of the network interface.
	// Structure is documented below.
	InternalIP []InternalIPObservation `json:"internalIp,omitempty" tf:"internal_ip,omitempty"`

	// Preserved metadata defined for this instance. This is a list of key->value pairs.
	// +mapType=granular
	Metadata map[string]*string `json:"metadata,omitempty" tf:"metadata,omitempty"`
}

type PreservedStateParameters struct {

	// Stateful disks for the instance.
	// Structure is documented below.
	// +kubebuilder:validation:Optional
	Disk []PreservedStateDiskParameters `json:"disk,omitempty" tf:"disk,omitempty"`

	// Preserved external IPs defined for this instance. This map is keyed with the name of the network interface.
	// Structure is documented below.
	// +kubebuilder:validation:Optional
	ExternalIP []ExternalIPParameters `json:"externalIp,omitempty" tf:"external_ip,omitempty"`

	// Preserved internal IPs defined for this instance. This map is keyed with the name of the network interface.
	// Structure is documented below.
	// +kubebuilder:validation:Optional
	InternalIP []InternalIPParameters `json:"internalIp,omitempty" tf:"internal_ip,omitempty"`

	// Preserved metadata defined for this instance. This is a list of key->value pairs.
	// +kubebuilder:validation:Optional
	// +mapType=granular
	Metadata map[string]*string `json:"metadata,omitempty" tf:"metadata,omitempty"`
}

// PerInstanceConfigSpec defines the desired state of PerInstanceConfig
type PerInstanceConfigSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     PerInstanceConfigParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider PerInstanceConfigInitParameters `json:"initProvider,omitempty"`
}

// PerInstanceConfigStatus defines the observed state of PerInstanceConfig.
type PerInstanceConfigStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        PerInstanceConfigObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// PerInstanceConfig is the Schema for the PerInstanceConfigs API. A config defined for a single managed instance that belongs to an instance group manager.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,gcp}
type PerInstanceConfig struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.name) || (has(self.initProvider) && has(self.initProvider.name))",message="spec.forProvider.name is a required parameter"
	Spec   PerInstanceConfigSpec   `json:"spec"`
	Status PerInstanceConfigStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// PerInstanceConfigList contains a list of PerInstanceConfigs
type PerInstanceConfigList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []PerInstanceConfig `json:"items"`
}

// Repository type metadata.
var (
	PerInstanceConfig_Kind             = "PerInstanceConfig"
	PerInstanceConfig_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: PerInstanceConfig_Kind}.String()
	PerInstanceConfig_KindAPIVersion   = PerInstanceConfig_Kind + "." + CRDGroupVersion.String()
	PerInstanceConfig_GroupVersionKind = CRDGroupVersion.WithKind(PerInstanceConfig_Kind)
)

func init() {
	SchemeBuilder.Register(&PerInstanceConfig{}, &PerInstanceConfigList{})
}
