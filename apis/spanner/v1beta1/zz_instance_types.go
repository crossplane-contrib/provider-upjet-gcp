// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1beta1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type AutoscalingConfigInitParameters struct {

	// Defines scale in controls to reduce the risk of response latency
	// and outages due to abrupt scale-in events. Users can define the minimum and
	// maximum compute capacity allocated to the instance, and the autoscaler will
	// only scale within that range. Users can either use nodes or processing
	// units to specify the limits, but should use the same unit to set both the
	// min_limit and max_limit.
	// Structure is documented below.
	AutoscalingLimits []AutoscalingLimitsInitParameters `json:"autoscalingLimits,omitempty" tf:"autoscaling_limits,omitempty"`

	// Defines scale in controls to reduce the risk of response latency
	// and outages due to abrupt scale-in events
	// Structure is documented below.
	AutoscalingTargets []AutoscalingTargetsInitParameters `json:"autoscalingTargets,omitempty" tf:"autoscaling_targets,omitempty"`
}

type AutoscalingConfigObservation struct {

	// Defines scale in controls to reduce the risk of response latency
	// and outages due to abrupt scale-in events. Users can define the minimum and
	// maximum compute capacity allocated to the instance, and the autoscaler will
	// only scale within that range. Users can either use nodes or processing
	// units to specify the limits, but should use the same unit to set both the
	// min_limit and max_limit.
	// Structure is documented below.
	AutoscalingLimits []AutoscalingLimitsObservation `json:"autoscalingLimits,omitempty" tf:"autoscaling_limits,omitempty"`

	// Defines scale in controls to reduce the risk of response latency
	// and outages due to abrupt scale-in events
	// Structure is documented below.
	AutoscalingTargets []AutoscalingTargetsObservation `json:"autoscalingTargets,omitempty" tf:"autoscaling_targets,omitempty"`
}

type AutoscalingConfigParameters struct {

	// Defines scale in controls to reduce the risk of response latency
	// and outages due to abrupt scale-in events. Users can define the minimum and
	// maximum compute capacity allocated to the instance, and the autoscaler will
	// only scale within that range. Users can either use nodes or processing
	// units to specify the limits, but should use the same unit to set both the
	// min_limit and max_limit.
	// Structure is documented below.
	// +kubebuilder:validation:Optional
	AutoscalingLimits []AutoscalingLimitsParameters `json:"autoscalingLimits,omitempty" tf:"autoscaling_limits,omitempty"`

	// Defines scale in controls to reduce the risk of response latency
	// and outages due to abrupt scale-in events
	// Structure is documented below.
	// +kubebuilder:validation:Optional
	AutoscalingTargets []AutoscalingTargetsParameters `json:"autoscalingTargets,omitempty" tf:"autoscaling_targets,omitempty"`
}

type AutoscalingLimitsInitParameters struct {

	// Specifies maximum number of nodes allocated to the instance. If set, this number
	// should be greater than or equal to min_nodes.
	MaxNodes *float64 `json:"maxNodes,omitempty" tf:"max_nodes,omitempty"`

	// Specifies maximum number of processing units allocated to the instance.
	// If set, this number should be multiples of 1000 and be greater than or equal to
	// min_processing_units.
	MaxProcessingUnits *float64 `json:"maxProcessingUnits,omitempty" tf:"max_processing_units,omitempty"`

	// Specifies number of nodes allocated to the instance. If set, this number
	// should be greater than or equal to 1.
	MinNodes *float64 `json:"minNodes,omitempty" tf:"min_nodes,omitempty"`

	// Specifies minimum number of processing units allocated to the instance.
	// If set, this number should be multiples of 1000.
	MinProcessingUnits *float64 `json:"minProcessingUnits,omitempty" tf:"min_processing_units,omitempty"`
}

type AutoscalingLimitsObservation struct {

	// Specifies maximum number of nodes allocated to the instance. If set, this number
	// should be greater than or equal to min_nodes.
	MaxNodes *float64 `json:"maxNodes,omitempty" tf:"max_nodes,omitempty"`

	// Specifies maximum number of processing units allocated to the instance.
	// If set, this number should be multiples of 1000 and be greater than or equal to
	// min_processing_units.
	MaxProcessingUnits *float64 `json:"maxProcessingUnits,omitempty" tf:"max_processing_units,omitempty"`

	// Specifies number of nodes allocated to the instance. If set, this number
	// should be greater than or equal to 1.
	MinNodes *float64 `json:"minNodes,omitempty" tf:"min_nodes,omitempty"`

	// Specifies minimum number of processing units allocated to the instance.
	// If set, this number should be multiples of 1000.
	MinProcessingUnits *float64 `json:"minProcessingUnits,omitempty" tf:"min_processing_units,omitempty"`
}

type AutoscalingLimitsParameters struct {

	// Specifies maximum number of nodes allocated to the instance. If set, this number
	// should be greater than or equal to min_nodes.
	// +kubebuilder:validation:Optional
	MaxNodes *float64 `json:"maxNodes,omitempty" tf:"max_nodes,omitempty"`

	// Specifies maximum number of processing units allocated to the instance.
	// If set, this number should be multiples of 1000 and be greater than or equal to
	// min_processing_units.
	// +kubebuilder:validation:Optional
	MaxProcessingUnits *float64 `json:"maxProcessingUnits,omitempty" tf:"max_processing_units,omitempty"`

	// Specifies number of nodes allocated to the instance. If set, this number
	// should be greater than or equal to 1.
	// +kubebuilder:validation:Optional
	MinNodes *float64 `json:"minNodes,omitempty" tf:"min_nodes,omitempty"`

	// Specifies minimum number of processing units allocated to the instance.
	// If set, this number should be multiples of 1000.
	// +kubebuilder:validation:Optional
	MinProcessingUnits *float64 `json:"minProcessingUnits,omitempty" tf:"min_processing_units,omitempty"`
}

type AutoscalingTargetsInitParameters struct {

	// Specifies the target high priority cpu utilization percentage that the autoscaler
	// should be trying to achieve for the instance.
	// This number is on a scale from 0 (no utilization) to 100 (full utilization)..
	HighPriorityCPUUtilizationPercent *float64 `json:"highPriorityCpuUtilizationPercent,omitempty" tf:"high_priority_cpu_utilization_percent,omitempty"`

	// Specifies the target storage utilization percentage that the autoscaler
	// should be trying to achieve for the instance.
	// This number is on a scale from 0 (no utilization) to 100 (full utilization).
	StorageUtilizationPercent *float64 `json:"storageUtilizationPercent,omitempty" tf:"storage_utilization_percent,omitempty"`
}

type AutoscalingTargetsObservation struct {

	// Specifies the target high priority cpu utilization percentage that the autoscaler
	// should be trying to achieve for the instance.
	// This number is on a scale from 0 (no utilization) to 100 (full utilization)..
	HighPriorityCPUUtilizationPercent *float64 `json:"highPriorityCpuUtilizationPercent,omitempty" tf:"high_priority_cpu_utilization_percent,omitempty"`

	// Specifies the target storage utilization percentage that the autoscaler
	// should be trying to achieve for the instance.
	// This number is on a scale from 0 (no utilization) to 100 (full utilization).
	StorageUtilizationPercent *float64 `json:"storageUtilizationPercent,omitempty" tf:"storage_utilization_percent,omitempty"`
}

type AutoscalingTargetsParameters struct {

	// Specifies the target high priority cpu utilization percentage that the autoscaler
	// should be trying to achieve for the instance.
	// This number is on a scale from 0 (no utilization) to 100 (full utilization)..
	// +kubebuilder:validation:Optional
	HighPriorityCPUUtilizationPercent *float64 `json:"highPriorityCpuUtilizationPercent,omitempty" tf:"high_priority_cpu_utilization_percent,omitempty"`

	// Specifies the target storage utilization percentage that the autoscaler
	// should be trying to achieve for the instance.
	// This number is on a scale from 0 (no utilization) to 100 (full utilization).
	// +kubebuilder:validation:Optional
	StorageUtilizationPercent *float64 `json:"storageUtilizationPercent,omitempty" tf:"storage_utilization_percent,omitempty"`
}

type InstanceInitParameters struct {

	// The autoscaling configuration. Autoscaling is enabled if this field is set.
	// When autoscaling is enabled, num_nodes and processing_units are treated as,
	// OUTPUT_ONLY fields and reflect the current compute capacity allocated to
	// the instance.
	// Structure is documented below.
	AutoscalingConfig []AutoscalingConfigInitParameters `json:"autoscalingConfig,omitempty" tf:"autoscaling_config,omitempty"`

	// The name of the instance's configuration (similar but not
	// quite the same as a region) which defines the geographic placement and
	// replication of your databases in this instance. It determines where your data
	// is stored. Values are typically of the form regional-europe-west1 , us-central etc.
	// In order to obtain a valid list please consult the
	// Configuration section of the docs.
	Config *string `json:"config,omitempty" tf:"config,omitempty"`

	// The descriptive name for this instance as it appears in UIs. Must be
	// unique per project and between 4 and 30 characters in length.
	DisplayName *string `json:"displayName,omitempty" tf:"display_name,omitempty"`

	// When deleting a spanner instance, this boolean option will delete all backups of this instance.
	// This must be set to true if you created a backup manually in the console.
	ForceDestroy *bool `json:"forceDestroy,omitempty" tf:"force_destroy,omitempty"`

	// An object containing a list of "key": value pairs.
	// Example: { "name": "wrench", "mass": "1.3kg", "count": "3" }.
	// +mapType=granular
	Labels map[string]*string `json:"labels,omitempty" tf:"labels,omitempty"`

	// The number of nodes allocated to this instance.
	NumNodes *float64 `json:"numNodes,omitempty" tf:"num_nodes,omitempty"`

	// The number of processing units allocated to this instance.
	ProcessingUnits *float64 `json:"processingUnits,omitempty" tf:"processing_units,omitempty"`

	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project *string `json:"project,omitempty" tf:"project,omitempty"`
}

type InstanceObservation struct {

	// The autoscaling configuration. Autoscaling is enabled if this field is set.
	// When autoscaling is enabled, num_nodes and processing_units are treated as,
	// OUTPUT_ONLY fields and reflect the current compute capacity allocated to
	// the instance.
	// Structure is documented below.
	AutoscalingConfig []AutoscalingConfigObservation `json:"autoscalingConfig,omitempty" tf:"autoscaling_config,omitempty"`

	// The name of the instance's configuration (similar but not
	// quite the same as a region) which defines the geographic placement and
	// replication of your databases in this instance. It determines where your data
	// is stored. Values are typically of the form regional-europe-west1 , us-central etc.
	// In order to obtain a valid list please consult the
	// Configuration section of the docs.
	Config *string `json:"config,omitempty" tf:"config,omitempty"`

	// The descriptive name for this instance as it appears in UIs. Must be
	// unique per project and between 4 and 30 characters in length.
	DisplayName *string `json:"displayName,omitempty" tf:"display_name,omitempty"`

	// for all of the labels present on the resource.
	// +mapType=granular
	EffectiveLabels map[string]*string `json:"effectiveLabels,omitempty" tf:"effective_labels,omitempty"`

	// When deleting a spanner instance, this boolean option will delete all backups of this instance.
	// This must be set to true if you created a backup manually in the console.
	ForceDestroy *bool `json:"forceDestroy,omitempty" tf:"force_destroy,omitempty"`

	// an identifier for the resource with format {{project}}/{{name}}
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// An object containing a list of "key": value pairs.
	// Example: { "name": "wrench", "mass": "1.3kg", "count": "3" }.
	// +mapType=granular
	Labels map[string]*string `json:"labels,omitempty" tf:"labels,omitempty"`

	// The number of nodes allocated to this instance.
	NumNodes *float64 `json:"numNodes,omitempty" tf:"num_nodes,omitempty"`

	// The number of processing units allocated to this instance.
	ProcessingUnits *float64 `json:"processingUnits,omitempty" tf:"processing_units,omitempty"`

	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project *string `json:"project,omitempty" tf:"project,omitempty"`

	// Instance status: CREATING or READY.
	State *string `json:"state,omitempty" tf:"state,omitempty"`

	// The combination of labels configured directly on the resource
	// and default labels configured on the provider.
	// +mapType=granular
	TerraformLabels map[string]*string `json:"terraformLabels,omitempty" tf:"terraform_labels,omitempty"`
}

type InstanceParameters struct {

	// The autoscaling configuration. Autoscaling is enabled if this field is set.
	// When autoscaling is enabled, num_nodes and processing_units are treated as,
	// OUTPUT_ONLY fields and reflect the current compute capacity allocated to
	// the instance.
	// Structure is documented below.
	// +kubebuilder:validation:Optional
	AutoscalingConfig []AutoscalingConfigParameters `json:"autoscalingConfig,omitempty" tf:"autoscaling_config,omitempty"`

	// The name of the instance's configuration (similar but not
	// quite the same as a region) which defines the geographic placement and
	// replication of your databases in this instance. It determines where your data
	// is stored. Values are typically of the form regional-europe-west1 , us-central etc.
	// In order to obtain a valid list please consult the
	// Configuration section of the docs.
	// +kubebuilder:validation:Optional
	Config *string `json:"config,omitempty" tf:"config,omitempty"`

	// The descriptive name for this instance as it appears in UIs. Must be
	// unique per project and between 4 and 30 characters in length.
	// +kubebuilder:validation:Optional
	DisplayName *string `json:"displayName,omitempty" tf:"display_name,omitempty"`

	// When deleting a spanner instance, this boolean option will delete all backups of this instance.
	// This must be set to true if you created a backup manually in the console.
	// +kubebuilder:validation:Optional
	ForceDestroy *bool `json:"forceDestroy,omitempty" tf:"force_destroy,omitempty"`

	// An object containing a list of "key": value pairs.
	// Example: { "name": "wrench", "mass": "1.3kg", "count": "3" }.
	// +kubebuilder:validation:Optional
	// +mapType=granular
	Labels map[string]*string `json:"labels,omitempty" tf:"labels,omitempty"`

	// The number of nodes allocated to this instance.
	// +kubebuilder:validation:Optional
	NumNodes *float64 `json:"numNodes,omitempty" tf:"num_nodes,omitempty"`

	// The number of processing units allocated to this instance.
	// +kubebuilder:validation:Optional
	ProcessingUnits *float64 `json:"processingUnits,omitempty" tf:"processing_units,omitempty"`

	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	// +kubebuilder:validation:Optional
	Project *string `json:"project,omitempty" tf:"project,omitempty"`
}

// InstanceSpec defines the desired state of Instance
type InstanceSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     InstanceParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider InstanceInitParameters `json:"initProvider,omitempty"`
}

// InstanceStatus defines the observed state of Instance.
type InstanceStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        InstanceObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// Instance is the Schema for the Instances API. An isolated set of Cloud Spanner resources on which databases can be hosted.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,gcp}
type Instance struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.config) || (has(self.initProvider) && has(self.initProvider.config))",message="spec.forProvider.config is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.displayName) || (has(self.initProvider) && has(self.initProvider.displayName))",message="spec.forProvider.displayName is a required parameter"
	Spec   InstanceSpec   `json:"spec"`
	Status InstanceStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// InstanceList contains a list of Instances
type InstanceList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []Instance `json:"items"`
}

// Repository type metadata.
var (
	Instance_Kind             = "Instance"
	Instance_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: Instance_Kind}.String()
	Instance_KindAPIVersion   = Instance_Kind + "." + CRDGroupVersion.String()
	Instance_GroupVersionKind = CRDGroupVersion.WithKind(Instance_Kind)
)

func init() {
	SchemeBuilder.Register(&Instance{}, &InstanceList{})
}
