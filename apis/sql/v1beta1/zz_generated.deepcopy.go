//go:build !ignore_autogenerated

// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by controller-gen. DO NOT EDIT.

package v1beta1

import (
	"github.com/crossplane/crossplane-runtime/apis/common/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ActiveDirectoryConfigInitParameters) DeepCopyInto(out *ActiveDirectoryConfigInitParameters) {
	*out = *in
	if in.Domain != nil {
		in, out := &in.Domain, &out.Domain
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ActiveDirectoryConfigInitParameters.
func (in *ActiveDirectoryConfigInitParameters) DeepCopy() *ActiveDirectoryConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(ActiveDirectoryConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ActiveDirectoryConfigObservation) DeepCopyInto(out *ActiveDirectoryConfigObservation) {
	*out = *in
	if in.Domain != nil {
		in, out := &in.Domain, &out.Domain
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ActiveDirectoryConfigObservation.
func (in *ActiveDirectoryConfigObservation) DeepCopy() *ActiveDirectoryConfigObservation {
	if in == nil {
		return nil
	}
	out := new(ActiveDirectoryConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ActiveDirectoryConfigParameters) DeepCopyInto(out *ActiveDirectoryConfigParameters) {
	*out = *in
	if in.Domain != nil {
		in, out := &in.Domain, &out.Domain
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ActiveDirectoryConfigParameters.
func (in *ActiveDirectoryConfigParameters) DeepCopy() *ActiveDirectoryConfigParameters {
	if in == nil {
		return nil
	}
	out := new(ActiveDirectoryConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AdvancedMachineFeaturesInitParameters) DeepCopyInto(out *AdvancedMachineFeaturesInitParameters) {
	*out = *in
	if in.ThreadsPerCore != nil {
		in, out := &in.ThreadsPerCore, &out.ThreadsPerCore
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AdvancedMachineFeaturesInitParameters.
func (in *AdvancedMachineFeaturesInitParameters) DeepCopy() *AdvancedMachineFeaturesInitParameters {
	if in == nil {
		return nil
	}
	out := new(AdvancedMachineFeaturesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AdvancedMachineFeaturesObservation) DeepCopyInto(out *AdvancedMachineFeaturesObservation) {
	*out = *in
	if in.ThreadsPerCore != nil {
		in, out := &in.ThreadsPerCore, &out.ThreadsPerCore
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AdvancedMachineFeaturesObservation.
func (in *AdvancedMachineFeaturesObservation) DeepCopy() *AdvancedMachineFeaturesObservation {
	if in == nil {
		return nil
	}
	out := new(AdvancedMachineFeaturesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AdvancedMachineFeaturesParameters) DeepCopyInto(out *AdvancedMachineFeaturesParameters) {
	*out = *in
	if in.ThreadsPerCore != nil {
		in, out := &in.ThreadsPerCore, &out.ThreadsPerCore
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AdvancedMachineFeaturesParameters.
func (in *AdvancedMachineFeaturesParameters) DeepCopy() *AdvancedMachineFeaturesParameters {
	if in == nil {
		return nil
	}
	out := new(AdvancedMachineFeaturesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AuthorizedNetworksInitParameters) DeepCopyInto(out *AuthorizedNetworksInitParameters) {
	*out = *in
	if in.ExpirationTime != nil {
		in, out := &in.ExpirationTime, &out.ExpirationTime
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AuthorizedNetworksInitParameters.
func (in *AuthorizedNetworksInitParameters) DeepCopy() *AuthorizedNetworksInitParameters {
	if in == nil {
		return nil
	}
	out := new(AuthorizedNetworksInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AuthorizedNetworksObservation) DeepCopyInto(out *AuthorizedNetworksObservation) {
	*out = *in
	if in.ExpirationTime != nil {
		in, out := &in.ExpirationTime, &out.ExpirationTime
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AuthorizedNetworksObservation.
func (in *AuthorizedNetworksObservation) DeepCopy() *AuthorizedNetworksObservation {
	if in == nil {
		return nil
	}
	out := new(AuthorizedNetworksObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AuthorizedNetworksParameters) DeepCopyInto(out *AuthorizedNetworksParameters) {
	*out = *in
	if in.ExpirationTime != nil {
		in, out := &in.ExpirationTime, &out.ExpirationTime
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AuthorizedNetworksParameters.
func (in *AuthorizedNetworksParameters) DeepCopy() *AuthorizedNetworksParameters {
	if in == nil {
		return nil
	}
	out := new(AuthorizedNetworksParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BackupConfigurationInitParameters) DeepCopyInto(out *BackupConfigurationInitParameters) {
	*out = *in
	if in.BackupRetentionSettings != nil {
		in, out := &in.BackupRetentionSettings, &out.BackupRetentionSettings
		*out = make([]BackupRetentionSettingsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.BinaryLogEnabled != nil {
		in, out := &in.BinaryLogEnabled, &out.BinaryLogEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.PointInTimeRecoveryEnabled != nil {
		in, out := &in.PointInTimeRecoveryEnabled, &out.PointInTimeRecoveryEnabled
		*out = new(bool)
		**out = **in
	}
	if in.StartTime != nil {
		in, out := &in.StartTime, &out.StartTime
		*out = new(string)
		**out = **in
	}
	if in.TransactionLogRetentionDays != nil {
		in, out := &in.TransactionLogRetentionDays, &out.TransactionLogRetentionDays
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BackupConfigurationInitParameters.
func (in *BackupConfigurationInitParameters) DeepCopy() *BackupConfigurationInitParameters {
	if in == nil {
		return nil
	}
	out := new(BackupConfigurationInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BackupConfigurationObservation) DeepCopyInto(out *BackupConfigurationObservation) {
	*out = *in
	if in.BackupRetentionSettings != nil {
		in, out := &in.BackupRetentionSettings, &out.BackupRetentionSettings
		*out = make([]BackupRetentionSettingsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.BinaryLogEnabled != nil {
		in, out := &in.BinaryLogEnabled, &out.BinaryLogEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.PointInTimeRecoveryEnabled != nil {
		in, out := &in.PointInTimeRecoveryEnabled, &out.PointInTimeRecoveryEnabled
		*out = new(bool)
		**out = **in
	}
	if in.StartTime != nil {
		in, out := &in.StartTime, &out.StartTime
		*out = new(string)
		**out = **in
	}
	if in.TransactionLogRetentionDays != nil {
		in, out := &in.TransactionLogRetentionDays, &out.TransactionLogRetentionDays
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BackupConfigurationObservation.
func (in *BackupConfigurationObservation) DeepCopy() *BackupConfigurationObservation {
	if in == nil {
		return nil
	}
	out := new(BackupConfigurationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BackupConfigurationParameters) DeepCopyInto(out *BackupConfigurationParameters) {
	*out = *in
	if in.BackupRetentionSettings != nil {
		in, out := &in.BackupRetentionSettings, &out.BackupRetentionSettings
		*out = make([]BackupRetentionSettingsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.BinaryLogEnabled != nil {
		in, out := &in.BinaryLogEnabled, &out.BinaryLogEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.PointInTimeRecoveryEnabled != nil {
		in, out := &in.PointInTimeRecoveryEnabled, &out.PointInTimeRecoveryEnabled
		*out = new(bool)
		**out = **in
	}
	if in.StartTime != nil {
		in, out := &in.StartTime, &out.StartTime
		*out = new(string)
		**out = **in
	}
	if in.TransactionLogRetentionDays != nil {
		in, out := &in.TransactionLogRetentionDays, &out.TransactionLogRetentionDays
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BackupConfigurationParameters.
func (in *BackupConfigurationParameters) DeepCopy() *BackupConfigurationParameters {
	if in == nil {
		return nil
	}
	out := new(BackupConfigurationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BackupRetentionSettingsInitParameters) DeepCopyInto(out *BackupRetentionSettingsInitParameters) {
	*out = *in
	if in.RetainedBackups != nil {
		in, out := &in.RetainedBackups, &out.RetainedBackups
		*out = new(float64)
		**out = **in
	}
	if in.RetentionUnit != nil {
		in, out := &in.RetentionUnit, &out.RetentionUnit
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BackupRetentionSettingsInitParameters.
func (in *BackupRetentionSettingsInitParameters) DeepCopy() *BackupRetentionSettingsInitParameters {
	if in == nil {
		return nil
	}
	out := new(BackupRetentionSettingsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BackupRetentionSettingsObservation) DeepCopyInto(out *BackupRetentionSettingsObservation) {
	*out = *in
	if in.RetainedBackups != nil {
		in, out := &in.RetainedBackups, &out.RetainedBackups
		*out = new(float64)
		**out = **in
	}
	if in.RetentionUnit != nil {
		in, out := &in.RetentionUnit, &out.RetentionUnit
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BackupRetentionSettingsObservation.
func (in *BackupRetentionSettingsObservation) DeepCopy() *BackupRetentionSettingsObservation {
	if in == nil {
		return nil
	}
	out := new(BackupRetentionSettingsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BackupRetentionSettingsParameters) DeepCopyInto(out *BackupRetentionSettingsParameters) {
	*out = *in
	if in.RetainedBackups != nil {
		in, out := &in.RetainedBackups, &out.RetainedBackups
		*out = new(float64)
		**out = **in
	}
	if in.RetentionUnit != nil {
		in, out := &in.RetentionUnit, &out.RetentionUnit
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BackupRetentionSettingsParameters.
func (in *BackupRetentionSettingsParameters) DeepCopy() *BackupRetentionSettingsParameters {
	if in == nil {
		return nil
	}
	out := new(BackupRetentionSettingsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CloneInitParameters) DeepCopyInto(out *CloneInitParameters) {
	*out = *in
	if in.AllocatedIPRange != nil {
		in, out := &in.AllocatedIPRange, &out.AllocatedIPRange
		*out = new(string)
		**out = **in
	}
	if in.DatabaseNames != nil {
		in, out := &in.DatabaseNames, &out.DatabaseNames
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.PointInTime != nil {
		in, out := &in.PointInTime, &out.PointInTime
		*out = new(string)
		**out = **in
	}
	if in.PreferredZone != nil {
		in, out := &in.PreferredZone, &out.PreferredZone
		*out = new(string)
		**out = **in
	}
	if in.SourceInstanceName != nil {
		in, out := &in.SourceInstanceName, &out.SourceInstanceName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CloneInitParameters.
func (in *CloneInitParameters) DeepCopy() *CloneInitParameters {
	if in == nil {
		return nil
	}
	out := new(CloneInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CloneObservation) DeepCopyInto(out *CloneObservation) {
	*out = *in
	if in.AllocatedIPRange != nil {
		in, out := &in.AllocatedIPRange, &out.AllocatedIPRange
		*out = new(string)
		**out = **in
	}
	if in.DatabaseNames != nil {
		in, out := &in.DatabaseNames, &out.DatabaseNames
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.PointInTime != nil {
		in, out := &in.PointInTime, &out.PointInTime
		*out = new(string)
		**out = **in
	}
	if in.PreferredZone != nil {
		in, out := &in.PreferredZone, &out.PreferredZone
		*out = new(string)
		**out = **in
	}
	if in.SourceInstanceName != nil {
		in, out := &in.SourceInstanceName, &out.SourceInstanceName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CloneObservation.
func (in *CloneObservation) DeepCopy() *CloneObservation {
	if in == nil {
		return nil
	}
	out := new(CloneObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CloneParameters) DeepCopyInto(out *CloneParameters) {
	*out = *in
	if in.AllocatedIPRange != nil {
		in, out := &in.AllocatedIPRange, &out.AllocatedIPRange
		*out = new(string)
		**out = **in
	}
	if in.DatabaseNames != nil {
		in, out := &in.DatabaseNames, &out.DatabaseNames
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.PointInTime != nil {
		in, out := &in.PointInTime, &out.PointInTime
		*out = new(string)
		**out = **in
	}
	if in.PreferredZone != nil {
		in, out := &in.PreferredZone, &out.PreferredZone
		*out = new(string)
		**out = **in
	}
	if in.SourceInstanceName != nil {
		in, out := &in.SourceInstanceName, &out.SourceInstanceName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CloneParameters.
func (in *CloneParameters) DeepCopy() *CloneParameters {
	if in == nil {
		return nil
	}
	out := new(CloneParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataCacheConfigInitParameters) DeepCopyInto(out *DataCacheConfigInitParameters) {
	*out = *in
	if in.DataCacheEnabled != nil {
		in, out := &in.DataCacheEnabled, &out.DataCacheEnabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataCacheConfigInitParameters.
func (in *DataCacheConfigInitParameters) DeepCopy() *DataCacheConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(DataCacheConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataCacheConfigObservation) DeepCopyInto(out *DataCacheConfigObservation) {
	*out = *in
	if in.DataCacheEnabled != nil {
		in, out := &in.DataCacheEnabled, &out.DataCacheEnabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataCacheConfigObservation.
func (in *DataCacheConfigObservation) DeepCopy() *DataCacheConfigObservation {
	if in == nil {
		return nil
	}
	out := new(DataCacheConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataCacheConfigParameters) DeepCopyInto(out *DataCacheConfigParameters) {
	*out = *in
	if in.DataCacheEnabled != nil {
		in, out := &in.DataCacheEnabled, &out.DataCacheEnabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataCacheConfigParameters.
func (in *DataCacheConfigParameters) DeepCopy() *DataCacheConfigParameters {
	if in == nil {
		return nil
	}
	out := new(DataCacheConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Database) DeepCopyInto(out *Database) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Database.
func (in *Database) DeepCopy() *Database {
	if in == nil {
		return nil
	}
	out := new(Database)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Database) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatabaseFlagsInitParameters) DeepCopyInto(out *DatabaseFlagsInitParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatabaseFlagsInitParameters.
func (in *DatabaseFlagsInitParameters) DeepCopy() *DatabaseFlagsInitParameters {
	if in == nil {
		return nil
	}
	out := new(DatabaseFlagsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatabaseFlagsObservation) DeepCopyInto(out *DatabaseFlagsObservation) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatabaseFlagsObservation.
func (in *DatabaseFlagsObservation) DeepCopy() *DatabaseFlagsObservation {
	if in == nil {
		return nil
	}
	out := new(DatabaseFlagsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatabaseFlagsParameters) DeepCopyInto(out *DatabaseFlagsParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatabaseFlagsParameters.
func (in *DatabaseFlagsParameters) DeepCopy() *DatabaseFlagsParameters {
	if in == nil {
		return nil
	}
	out := new(DatabaseFlagsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatabaseInitParameters) DeepCopyInto(out *DatabaseInitParameters) {
	*out = *in
	if in.Charset != nil {
		in, out := &in.Charset, &out.Charset
		*out = new(string)
		**out = **in
	}
	if in.Collation != nil {
		in, out := &in.Collation, &out.Collation
		*out = new(string)
		**out = **in
	}
	if in.DeletionPolicy != nil {
		in, out := &in.DeletionPolicy, &out.DeletionPolicy
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatabaseInitParameters.
func (in *DatabaseInitParameters) DeepCopy() *DatabaseInitParameters {
	if in == nil {
		return nil
	}
	out := new(DatabaseInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatabaseInstance) DeepCopyInto(out *DatabaseInstance) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatabaseInstance.
func (in *DatabaseInstance) DeepCopy() *DatabaseInstance {
	if in == nil {
		return nil
	}
	out := new(DatabaseInstance)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DatabaseInstance) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatabaseInstanceInitParameters) DeepCopyInto(out *DatabaseInstanceInitParameters) {
	*out = *in
	if in.Clone != nil {
		in, out := &in.Clone, &out.Clone
		*out = make([]CloneInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DatabaseVersion != nil {
		in, out := &in.DatabaseVersion, &out.DatabaseVersion
		*out = new(string)
		**out = **in
	}
	if in.DeletionProtection != nil {
		in, out := &in.DeletionProtection, &out.DeletionProtection
		*out = new(bool)
		**out = **in
	}
	if in.EncryptionKeyName != nil {
		in, out := &in.EncryptionKeyName, &out.EncryptionKeyName
		*out = new(string)
		**out = **in
	}
	if in.MaintenanceVersion != nil {
		in, out := &in.MaintenanceVersion, &out.MaintenanceVersion
		*out = new(string)
		**out = **in
	}
	if in.MasterInstanceName != nil {
		in, out := &in.MasterInstanceName, &out.MasterInstanceName
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.ReplicaConfiguration != nil {
		in, out := &in.ReplicaConfiguration, &out.ReplicaConfiguration
		*out = make([]ReplicaConfigurationInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RestoreBackupContext != nil {
		in, out := &in.RestoreBackupContext, &out.RestoreBackupContext
		*out = make([]RestoreBackupContextInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Settings != nil {
		in, out := &in.Settings, &out.Settings
		*out = make([]SettingsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatabaseInstanceInitParameters.
func (in *DatabaseInstanceInitParameters) DeepCopy() *DatabaseInstanceInitParameters {
	if in == nil {
		return nil
	}
	out := new(DatabaseInstanceInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatabaseInstanceList) DeepCopyInto(out *DatabaseInstanceList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]DatabaseInstance, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatabaseInstanceList.
func (in *DatabaseInstanceList) DeepCopy() *DatabaseInstanceList {
	if in == nil {
		return nil
	}
	out := new(DatabaseInstanceList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DatabaseInstanceList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatabaseInstanceObservation) DeepCopyInto(out *DatabaseInstanceObservation) {
	*out = *in
	if in.AvailableMaintenanceVersions != nil {
		in, out := &in.AvailableMaintenanceVersions, &out.AvailableMaintenanceVersions
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Clone != nil {
		in, out := &in.Clone, &out.Clone
		*out = make([]CloneObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ConnectionName != nil {
		in, out := &in.ConnectionName, &out.ConnectionName
		*out = new(string)
		**out = **in
	}
	if in.DNSName != nil {
		in, out := &in.DNSName, &out.DNSName
		*out = new(string)
		**out = **in
	}
	if in.DatabaseVersion != nil {
		in, out := &in.DatabaseVersion, &out.DatabaseVersion
		*out = new(string)
		**out = **in
	}
	if in.DeletionProtection != nil {
		in, out := &in.DeletionProtection, &out.DeletionProtection
		*out = new(bool)
		**out = **in
	}
	if in.EncryptionKeyName != nil {
		in, out := &in.EncryptionKeyName, &out.EncryptionKeyName
		*out = new(string)
		**out = **in
	}
	if in.FirstIPAddress != nil {
		in, out := &in.FirstIPAddress, &out.FirstIPAddress
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IPAddress != nil {
		in, out := &in.IPAddress, &out.IPAddress
		*out = make([]IPAddressObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.InstanceType != nil {
		in, out := &in.InstanceType, &out.InstanceType
		*out = new(string)
		**out = **in
	}
	if in.MaintenanceVersion != nil {
		in, out := &in.MaintenanceVersion, &out.MaintenanceVersion
		*out = new(string)
		**out = **in
	}
	if in.MasterInstanceName != nil {
		in, out := &in.MasterInstanceName, &out.MasterInstanceName
		*out = new(string)
		**out = **in
	}
	if in.PrivateIPAddress != nil {
		in, out := &in.PrivateIPAddress, &out.PrivateIPAddress
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.PscServiceAttachmentLink != nil {
		in, out := &in.PscServiceAttachmentLink, &out.PscServiceAttachmentLink
		*out = new(string)
		**out = **in
	}
	if in.PublicIPAddress != nil {
		in, out := &in.PublicIPAddress, &out.PublicIPAddress
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.ReplicaConfiguration != nil {
		in, out := &in.ReplicaConfiguration, &out.ReplicaConfiguration
		*out = make([]ReplicaConfigurationObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RestoreBackupContext != nil {
		in, out := &in.RestoreBackupContext, &out.RestoreBackupContext
		*out = make([]RestoreBackupContextObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SelfLink != nil {
		in, out := &in.SelfLink, &out.SelfLink
		*out = new(string)
		**out = **in
	}
	if in.ServiceAccountEmailAddress != nil {
		in, out := &in.ServiceAccountEmailAddress, &out.ServiceAccountEmailAddress
		*out = new(string)
		**out = **in
	}
	if in.Settings != nil {
		in, out := &in.Settings, &out.Settings
		*out = make([]SettingsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatabaseInstanceObservation.
func (in *DatabaseInstanceObservation) DeepCopy() *DatabaseInstanceObservation {
	if in == nil {
		return nil
	}
	out := new(DatabaseInstanceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatabaseInstanceParameters) DeepCopyInto(out *DatabaseInstanceParameters) {
	*out = *in
	if in.Clone != nil {
		in, out := &in.Clone, &out.Clone
		*out = make([]CloneParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DatabaseVersion != nil {
		in, out := &in.DatabaseVersion, &out.DatabaseVersion
		*out = new(string)
		**out = **in
	}
	if in.DeletionProtection != nil {
		in, out := &in.DeletionProtection, &out.DeletionProtection
		*out = new(bool)
		**out = **in
	}
	if in.EncryptionKeyName != nil {
		in, out := &in.EncryptionKeyName, &out.EncryptionKeyName
		*out = new(string)
		**out = **in
	}
	if in.MaintenanceVersion != nil {
		in, out := &in.MaintenanceVersion, &out.MaintenanceVersion
		*out = new(string)
		**out = **in
	}
	if in.MasterInstanceName != nil {
		in, out := &in.MasterInstanceName, &out.MasterInstanceName
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.ReplicaConfiguration != nil {
		in, out := &in.ReplicaConfiguration, &out.ReplicaConfiguration
		*out = make([]ReplicaConfigurationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RestoreBackupContext != nil {
		in, out := &in.RestoreBackupContext, &out.RestoreBackupContext
		*out = make([]RestoreBackupContextParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RootPasswordSecretRef != nil {
		in, out := &in.RootPasswordSecretRef, &out.RootPasswordSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.Settings != nil {
		in, out := &in.Settings, &out.Settings
		*out = make([]SettingsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatabaseInstanceParameters.
func (in *DatabaseInstanceParameters) DeepCopy() *DatabaseInstanceParameters {
	if in == nil {
		return nil
	}
	out := new(DatabaseInstanceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatabaseInstanceSpec) DeepCopyInto(out *DatabaseInstanceSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatabaseInstanceSpec.
func (in *DatabaseInstanceSpec) DeepCopy() *DatabaseInstanceSpec {
	if in == nil {
		return nil
	}
	out := new(DatabaseInstanceSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatabaseInstanceStatus) DeepCopyInto(out *DatabaseInstanceStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatabaseInstanceStatus.
func (in *DatabaseInstanceStatus) DeepCopy() *DatabaseInstanceStatus {
	if in == nil {
		return nil
	}
	out := new(DatabaseInstanceStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatabaseList) DeepCopyInto(out *DatabaseList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Database, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatabaseList.
func (in *DatabaseList) DeepCopy() *DatabaseList {
	if in == nil {
		return nil
	}
	out := new(DatabaseList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DatabaseList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatabaseObservation) DeepCopyInto(out *DatabaseObservation) {
	*out = *in
	if in.Charset != nil {
		in, out := &in.Charset, &out.Charset
		*out = new(string)
		**out = **in
	}
	if in.Collation != nil {
		in, out := &in.Collation, &out.Collation
		*out = new(string)
		**out = **in
	}
	if in.DeletionPolicy != nil {
		in, out := &in.DeletionPolicy, &out.DeletionPolicy
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Instance != nil {
		in, out := &in.Instance, &out.Instance
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.SelfLink != nil {
		in, out := &in.SelfLink, &out.SelfLink
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatabaseObservation.
func (in *DatabaseObservation) DeepCopy() *DatabaseObservation {
	if in == nil {
		return nil
	}
	out := new(DatabaseObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatabaseParameters) DeepCopyInto(out *DatabaseParameters) {
	*out = *in
	if in.Charset != nil {
		in, out := &in.Charset, &out.Charset
		*out = new(string)
		**out = **in
	}
	if in.Collation != nil {
		in, out := &in.Collation, &out.Collation
		*out = new(string)
		**out = **in
	}
	if in.DeletionPolicy != nil {
		in, out := &in.DeletionPolicy, &out.DeletionPolicy
		*out = new(string)
		**out = **in
	}
	if in.Instance != nil {
		in, out := &in.Instance, &out.Instance
		*out = new(string)
		**out = **in
	}
	if in.InstanceRef != nil {
		in, out := &in.InstanceRef, &out.InstanceRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.InstanceSelector != nil {
		in, out := &in.InstanceSelector, &out.InstanceSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatabaseParameters.
func (in *DatabaseParameters) DeepCopy() *DatabaseParameters {
	if in == nil {
		return nil
	}
	out := new(DatabaseParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatabaseSpec) DeepCopyInto(out *DatabaseSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatabaseSpec.
func (in *DatabaseSpec) DeepCopy() *DatabaseSpec {
	if in == nil {
		return nil
	}
	out := new(DatabaseSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatabaseStatus) DeepCopyInto(out *DatabaseStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatabaseStatus.
func (in *DatabaseStatus) DeepCopy() *DatabaseStatus {
	if in == nil {
		return nil
	}
	out := new(DatabaseStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DenyMaintenancePeriodInitParameters) DeepCopyInto(out *DenyMaintenancePeriodInitParameters) {
	*out = *in
	if in.EndDate != nil {
		in, out := &in.EndDate, &out.EndDate
		*out = new(string)
		**out = **in
	}
	if in.StartDate != nil {
		in, out := &in.StartDate, &out.StartDate
		*out = new(string)
		**out = **in
	}
	if in.Time != nil {
		in, out := &in.Time, &out.Time
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DenyMaintenancePeriodInitParameters.
func (in *DenyMaintenancePeriodInitParameters) DeepCopy() *DenyMaintenancePeriodInitParameters {
	if in == nil {
		return nil
	}
	out := new(DenyMaintenancePeriodInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DenyMaintenancePeriodObservation) DeepCopyInto(out *DenyMaintenancePeriodObservation) {
	*out = *in
	if in.EndDate != nil {
		in, out := &in.EndDate, &out.EndDate
		*out = new(string)
		**out = **in
	}
	if in.StartDate != nil {
		in, out := &in.StartDate, &out.StartDate
		*out = new(string)
		**out = **in
	}
	if in.Time != nil {
		in, out := &in.Time, &out.Time
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DenyMaintenancePeriodObservation.
func (in *DenyMaintenancePeriodObservation) DeepCopy() *DenyMaintenancePeriodObservation {
	if in == nil {
		return nil
	}
	out := new(DenyMaintenancePeriodObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DenyMaintenancePeriodParameters) DeepCopyInto(out *DenyMaintenancePeriodParameters) {
	*out = *in
	if in.EndDate != nil {
		in, out := &in.EndDate, &out.EndDate
		*out = new(string)
		**out = **in
	}
	if in.StartDate != nil {
		in, out := &in.StartDate, &out.StartDate
		*out = new(string)
		**out = **in
	}
	if in.Time != nil {
		in, out := &in.Time, &out.Time
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DenyMaintenancePeriodParameters.
func (in *DenyMaintenancePeriodParameters) DeepCopy() *DenyMaintenancePeriodParameters {
	if in == nil {
		return nil
	}
	out := new(DenyMaintenancePeriodParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IPAddressInitParameters) DeepCopyInto(out *IPAddressInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IPAddressInitParameters.
func (in *IPAddressInitParameters) DeepCopy() *IPAddressInitParameters {
	if in == nil {
		return nil
	}
	out := new(IPAddressInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IPAddressObservation) DeepCopyInto(out *IPAddressObservation) {
	*out = *in
	if in.IPAddress != nil {
		in, out := &in.IPAddress, &out.IPAddress
		*out = new(string)
		**out = **in
	}
	if in.TimeToRetire != nil {
		in, out := &in.TimeToRetire, &out.TimeToRetire
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IPAddressObservation.
func (in *IPAddressObservation) DeepCopy() *IPAddressObservation {
	if in == nil {
		return nil
	}
	out := new(IPAddressObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IPAddressParameters) DeepCopyInto(out *IPAddressParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IPAddressParameters.
func (in *IPAddressParameters) DeepCopy() *IPAddressParameters {
	if in == nil {
		return nil
	}
	out := new(IPAddressParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IPConfigurationInitParameters) DeepCopyInto(out *IPConfigurationInitParameters) {
	*out = *in
	if in.AllocatedIPRange != nil {
		in, out := &in.AllocatedIPRange, &out.AllocatedIPRange
		*out = new(string)
		**out = **in
	}
	if in.AuthorizedNetworks != nil {
		in, out := &in.AuthorizedNetworks, &out.AuthorizedNetworks
		*out = make([]AuthorizedNetworksInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EnablePrivatePathForGoogleCloudServices != nil {
		in, out := &in.EnablePrivatePathForGoogleCloudServices, &out.EnablePrivatePathForGoogleCloudServices
		*out = new(bool)
		**out = **in
	}
	if in.IPv4Enabled != nil {
		in, out := &in.IPv4Enabled, &out.IPv4Enabled
		*out = new(bool)
		**out = **in
	}
	if in.PrivateNetwork != nil {
		in, out := &in.PrivateNetwork, &out.PrivateNetwork
		*out = new(string)
		**out = **in
	}
	if in.PrivateNetworkRef != nil {
		in, out := &in.PrivateNetworkRef, &out.PrivateNetworkRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.PrivateNetworkSelector != nil {
		in, out := &in.PrivateNetworkSelector, &out.PrivateNetworkSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.PscConfig != nil {
		in, out := &in.PscConfig, &out.PscConfig
		*out = make([]PscConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RequireSSL != nil {
		in, out := &in.RequireSSL, &out.RequireSSL
		*out = new(bool)
		**out = **in
	}
	if in.SSLMode != nil {
		in, out := &in.SSLMode, &out.SSLMode
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IPConfigurationInitParameters.
func (in *IPConfigurationInitParameters) DeepCopy() *IPConfigurationInitParameters {
	if in == nil {
		return nil
	}
	out := new(IPConfigurationInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IPConfigurationObservation) DeepCopyInto(out *IPConfigurationObservation) {
	*out = *in
	if in.AllocatedIPRange != nil {
		in, out := &in.AllocatedIPRange, &out.AllocatedIPRange
		*out = new(string)
		**out = **in
	}
	if in.AuthorizedNetworks != nil {
		in, out := &in.AuthorizedNetworks, &out.AuthorizedNetworks
		*out = make([]AuthorizedNetworksObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EnablePrivatePathForGoogleCloudServices != nil {
		in, out := &in.EnablePrivatePathForGoogleCloudServices, &out.EnablePrivatePathForGoogleCloudServices
		*out = new(bool)
		**out = **in
	}
	if in.IPv4Enabled != nil {
		in, out := &in.IPv4Enabled, &out.IPv4Enabled
		*out = new(bool)
		**out = **in
	}
	if in.PrivateNetwork != nil {
		in, out := &in.PrivateNetwork, &out.PrivateNetwork
		*out = new(string)
		**out = **in
	}
	if in.PscConfig != nil {
		in, out := &in.PscConfig, &out.PscConfig
		*out = make([]PscConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RequireSSL != nil {
		in, out := &in.RequireSSL, &out.RequireSSL
		*out = new(bool)
		**out = **in
	}
	if in.SSLMode != nil {
		in, out := &in.SSLMode, &out.SSLMode
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IPConfigurationObservation.
func (in *IPConfigurationObservation) DeepCopy() *IPConfigurationObservation {
	if in == nil {
		return nil
	}
	out := new(IPConfigurationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IPConfigurationParameters) DeepCopyInto(out *IPConfigurationParameters) {
	*out = *in
	if in.AllocatedIPRange != nil {
		in, out := &in.AllocatedIPRange, &out.AllocatedIPRange
		*out = new(string)
		**out = **in
	}
	if in.AuthorizedNetworks != nil {
		in, out := &in.AuthorizedNetworks, &out.AuthorizedNetworks
		*out = make([]AuthorizedNetworksParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EnablePrivatePathForGoogleCloudServices != nil {
		in, out := &in.EnablePrivatePathForGoogleCloudServices, &out.EnablePrivatePathForGoogleCloudServices
		*out = new(bool)
		**out = **in
	}
	if in.IPv4Enabled != nil {
		in, out := &in.IPv4Enabled, &out.IPv4Enabled
		*out = new(bool)
		**out = **in
	}
	if in.PrivateNetwork != nil {
		in, out := &in.PrivateNetwork, &out.PrivateNetwork
		*out = new(string)
		**out = **in
	}
	if in.PrivateNetworkRef != nil {
		in, out := &in.PrivateNetworkRef, &out.PrivateNetworkRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.PrivateNetworkSelector != nil {
		in, out := &in.PrivateNetworkSelector, &out.PrivateNetworkSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.PscConfig != nil {
		in, out := &in.PscConfig, &out.PscConfig
		*out = make([]PscConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RequireSSL != nil {
		in, out := &in.RequireSSL, &out.RequireSSL
		*out = new(bool)
		**out = **in
	}
	if in.SSLMode != nil {
		in, out := &in.SSLMode, &out.SSLMode
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IPConfigurationParameters.
func (in *IPConfigurationParameters) DeepCopy() *IPConfigurationParameters {
	if in == nil {
		return nil
	}
	out := new(IPConfigurationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InsightsConfigInitParameters) DeepCopyInto(out *InsightsConfigInitParameters) {
	*out = *in
	if in.QueryInsightsEnabled != nil {
		in, out := &in.QueryInsightsEnabled, &out.QueryInsightsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.QueryPlansPerMinute != nil {
		in, out := &in.QueryPlansPerMinute, &out.QueryPlansPerMinute
		*out = new(float64)
		**out = **in
	}
	if in.QueryStringLength != nil {
		in, out := &in.QueryStringLength, &out.QueryStringLength
		*out = new(float64)
		**out = **in
	}
	if in.RecordApplicationTags != nil {
		in, out := &in.RecordApplicationTags, &out.RecordApplicationTags
		*out = new(bool)
		**out = **in
	}
	if in.RecordClientAddress != nil {
		in, out := &in.RecordClientAddress, &out.RecordClientAddress
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InsightsConfigInitParameters.
func (in *InsightsConfigInitParameters) DeepCopy() *InsightsConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(InsightsConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InsightsConfigObservation) DeepCopyInto(out *InsightsConfigObservation) {
	*out = *in
	if in.QueryInsightsEnabled != nil {
		in, out := &in.QueryInsightsEnabled, &out.QueryInsightsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.QueryPlansPerMinute != nil {
		in, out := &in.QueryPlansPerMinute, &out.QueryPlansPerMinute
		*out = new(float64)
		**out = **in
	}
	if in.QueryStringLength != nil {
		in, out := &in.QueryStringLength, &out.QueryStringLength
		*out = new(float64)
		**out = **in
	}
	if in.RecordApplicationTags != nil {
		in, out := &in.RecordApplicationTags, &out.RecordApplicationTags
		*out = new(bool)
		**out = **in
	}
	if in.RecordClientAddress != nil {
		in, out := &in.RecordClientAddress, &out.RecordClientAddress
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InsightsConfigObservation.
func (in *InsightsConfigObservation) DeepCopy() *InsightsConfigObservation {
	if in == nil {
		return nil
	}
	out := new(InsightsConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InsightsConfigParameters) DeepCopyInto(out *InsightsConfigParameters) {
	*out = *in
	if in.QueryInsightsEnabled != nil {
		in, out := &in.QueryInsightsEnabled, &out.QueryInsightsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.QueryPlansPerMinute != nil {
		in, out := &in.QueryPlansPerMinute, &out.QueryPlansPerMinute
		*out = new(float64)
		**out = **in
	}
	if in.QueryStringLength != nil {
		in, out := &in.QueryStringLength, &out.QueryStringLength
		*out = new(float64)
		**out = **in
	}
	if in.RecordApplicationTags != nil {
		in, out := &in.RecordApplicationTags, &out.RecordApplicationTags
		*out = new(bool)
		**out = **in
	}
	if in.RecordClientAddress != nil {
		in, out := &in.RecordClientAddress, &out.RecordClientAddress
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InsightsConfigParameters.
func (in *InsightsConfigParameters) DeepCopy() *InsightsConfigParameters {
	if in == nil {
		return nil
	}
	out := new(InsightsConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LocationPreferenceInitParameters) DeepCopyInto(out *LocationPreferenceInitParameters) {
	*out = *in
	if in.FollowGaeApplication != nil {
		in, out := &in.FollowGaeApplication, &out.FollowGaeApplication
		*out = new(string)
		**out = **in
	}
	if in.SecondaryZone != nil {
		in, out := &in.SecondaryZone, &out.SecondaryZone
		*out = new(string)
		**out = **in
	}
	if in.Zone != nil {
		in, out := &in.Zone, &out.Zone
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LocationPreferenceInitParameters.
func (in *LocationPreferenceInitParameters) DeepCopy() *LocationPreferenceInitParameters {
	if in == nil {
		return nil
	}
	out := new(LocationPreferenceInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LocationPreferenceObservation) DeepCopyInto(out *LocationPreferenceObservation) {
	*out = *in
	if in.FollowGaeApplication != nil {
		in, out := &in.FollowGaeApplication, &out.FollowGaeApplication
		*out = new(string)
		**out = **in
	}
	if in.SecondaryZone != nil {
		in, out := &in.SecondaryZone, &out.SecondaryZone
		*out = new(string)
		**out = **in
	}
	if in.Zone != nil {
		in, out := &in.Zone, &out.Zone
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LocationPreferenceObservation.
func (in *LocationPreferenceObservation) DeepCopy() *LocationPreferenceObservation {
	if in == nil {
		return nil
	}
	out := new(LocationPreferenceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LocationPreferenceParameters) DeepCopyInto(out *LocationPreferenceParameters) {
	*out = *in
	if in.FollowGaeApplication != nil {
		in, out := &in.FollowGaeApplication, &out.FollowGaeApplication
		*out = new(string)
		**out = **in
	}
	if in.SecondaryZone != nil {
		in, out := &in.SecondaryZone, &out.SecondaryZone
		*out = new(string)
		**out = **in
	}
	if in.Zone != nil {
		in, out := &in.Zone, &out.Zone
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LocationPreferenceParameters.
func (in *LocationPreferenceParameters) DeepCopy() *LocationPreferenceParameters {
	if in == nil {
		return nil
	}
	out := new(LocationPreferenceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MaintenanceWindowInitParameters) DeepCopyInto(out *MaintenanceWindowInitParameters) {
	*out = *in
	if in.Day != nil {
		in, out := &in.Day, &out.Day
		*out = new(float64)
		**out = **in
	}
	if in.Hour != nil {
		in, out := &in.Hour, &out.Hour
		*out = new(float64)
		**out = **in
	}
	if in.UpdateTrack != nil {
		in, out := &in.UpdateTrack, &out.UpdateTrack
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MaintenanceWindowInitParameters.
func (in *MaintenanceWindowInitParameters) DeepCopy() *MaintenanceWindowInitParameters {
	if in == nil {
		return nil
	}
	out := new(MaintenanceWindowInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MaintenanceWindowObservation) DeepCopyInto(out *MaintenanceWindowObservation) {
	*out = *in
	if in.Day != nil {
		in, out := &in.Day, &out.Day
		*out = new(float64)
		**out = **in
	}
	if in.Hour != nil {
		in, out := &in.Hour, &out.Hour
		*out = new(float64)
		**out = **in
	}
	if in.UpdateTrack != nil {
		in, out := &in.UpdateTrack, &out.UpdateTrack
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MaintenanceWindowObservation.
func (in *MaintenanceWindowObservation) DeepCopy() *MaintenanceWindowObservation {
	if in == nil {
		return nil
	}
	out := new(MaintenanceWindowObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MaintenanceWindowParameters) DeepCopyInto(out *MaintenanceWindowParameters) {
	*out = *in
	if in.Day != nil {
		in, out := &in.Day, &out.Day
		*out = new(float64)
		**out = **in
	}
	if in.Hour != nil {
		in, out := &in.Hour, &out.Hour
		*out = new(float64)
		**out = **in
	}
	if in.UpdateTrack != nil {
		in, out := &in.UpdateTrack, &out.UpdateTrack
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MaintenanceWindowParameters.
func (in *MaintenanceWindowParameters) DeepCopy() *MaintenanceWindowParameters {
	if in == nil {
		return nil
	}
	out := new(MaintenanceWindowParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PasswordPolicyInitParameters) DeepCopyInto(out *PasswordPolicyInitParameters) {
	*out = *in
	if in.AllowedFailedAttempts != nil {
		in, out := &in.AllowedFailedAttempts, &out.AllowedFailedAttempts
		*out = new(float64)
		**out = **in
	}
	if in.EnableFailedAttemptsCheck != nil {
		in, out := &in.EnableFailedAttemptsCheck, &out.EnableFailedAttemptsCheck
		*out = new(bool)
		**out = **in
	}
	if in.EnablePasswordVerification != nil {
		in, out := &in.EnablePasswordVerification, &out.EnablePasswordVerification
		*out = new(bool)
		**out = **in
	}
	if in.PasswordExpirationDuration != nil {
		in, out := &in.PasswordExpirationDuration, &out.PasswordExpirationDuration
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PasswordPolicyInitParameters.
func (in *PasswordPolicyInitParameters) DeepCopy() *PasswordPolicyInitParameters {
	if in == nil {
		return nil
	}
	out := new(PasswordPolicyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PasswordPolicyObservation) DeepCopyInto(out *PasswordPolicyObservation) {
	*out = *in
	if in.AllowedFailedAttempts != nil {
		in, out := &in.AllowedFailedAttempts, &out.AllowedFailedAttempts
		*out = new(float64)
		**out = **in
	}
	if in.EnableFailedAttemptsCheck != nil {
		in, out := &in.EnableFailedAttemptsCheck, &out.EnableFailedAttemptsCheck
		*out = new(bool)
		**out = **in
	}
	if in.EnablePasswordVerification != nil {
		in, out := &in.EnablePasswordVerification, &out.EnablePasswordVerification
		*out = new(bool)
		**out = **in
	}
	if in.PasswordExpirationDuration != nil {
		in, out := &in.PasswordExpirationDuration, &out.PasswordExpirationDuration
		*out = new(string)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = make([]StatusObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PasswordPolicyObservation.
func (in *PasswordPolicyObservation) DeepCopy() *PasswordPolicyObservation {
	if in == nil {
		return nil
	}
	out := new(PasswordPolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PasswordPolicyParameters) DeepCopyInto(out *PasswordPolicyParameters) {
	*out = *in
	if in.AllowedFailedAttempts != nil {
		in, out := &in.AllowedFailedAttempts, &out.AllowedFailedAttempts
		*out = new(float64)
		**out = **in
	}
	if in.EnableFailedAttemptsCheck != nil {
		in, out := &in.EnableFailedAttemptsCheck, &out.EnableFailedAttemptsCheck
		*out = new(bool)
		**out = **in
	}
	if in.EnablePasswordVerification != nil {
		in, out := &in.EnablePasswordVerification, &out.EnablePasswordVerification
		*out = new(bool)
		**out = **in
	}
	if in.PasswordExpirationDuration != nil {
		in, out := &in.PasswordExpirationDuration, &out.PasswordExpirationDuration
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PasswordPolicyParameters.
func (in *PasswordPolicyParameters) DeepCopy() *PasswordPolicyParameters {
	if in == nil {
		return nil
	}
	out := new(PasswordPolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PasswordValidationPolicyInitParameters) DeepCopyInto(out *PasswordValidationPolicyInitParameters) {
	*out = *in
	if in.Complexity != nil {
		in, out := &in.Complexity, &out.Complexity
		*out = new(string)
		**out = **in
	}
	if in.DisallowUsernameSubstring != nil {
		in, out := &in.DisallowUsernameSubstring, &out.DisallowUsernameSubstring
		*out = new(bool)
		**out = **in
	}
	if in.EnablePasswordPolicy != nil {
		in, out := &in.EnablePasswordPolicy, &out.EnablePasswordPolicy
		*out = new(bool)
		**out = **in
	}
	if in.MinLength != nil {
		in, out := &in.MinLength, &out.MinLength
		*out = new(float64)
		**out = **in
	}
	if in.PasswordChangeInterval != nil {
		in, out := &in.PasswordChangeInterval, &out.PasswordChangeInterval
		*out = new(string)
		**out = **in
	}
	if in.ReuseInterval != nil {
		in, out := &in.ReuseInterval, &out.ReuseInterval
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PasswordValidationPolicyInitParameters.
func (in *PasswordValidationPolicyInitParameters) DeepCopy() *PasswordValidationPolicyInitParameters {
	if in == nil {
		return nil
	}
	out := new(PasswordValidationPolicyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PasswordValidationPolicyObservation) DeepCopyInto(out *PasswordValidationPolicyObservation) {
	*out = *in
	if in.Complexity != nil {
		in, out := &in.Complexity, &out.Complexity
		*out = new(string)
		**out = **in
	}
	if in.DisallowUsernameSubstring != nil {
		in, out := &in.DisallowUsernameSubstring, &out.DisallowUsernameSubstring
		*out = new(bool)
		**out = **in
	}
	if in.EnablePasswordPolicy != nil {
		in, out := &in.EnablePasswordPolicy, &out.EnablePasswordPolicy
		*out = new(bool)
		**out = **in
	}
	if in.MinLength != nil {
		in, out := &in.MinLength, &out.MinLength
		*out = new(float64)
		**out = **in
	}
	if in.PasswordChangeInterval != nil {
		in, out := &in.PasswordChangeInterval, &out.PasswordChangeInterval
		*out = new(string)
		**out = **in
	}
	if in.ReuseInterval != nil {
		in, out := &in.ReuseInterval, &out.ReuseInterval
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PasswordValidationPolicyObservation.
func (in *PasswordValidationPolicyObservation) DeepCopy() *PasswordValidationPolicyObservation {
	if in == nil {
		return nil
	}
	out := new(PasswordValidationPolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PasswordValidationPolicyParameters) DeepCopyInto(out *PasswordValidationPolicyParameters) {
	*out = *in
	if in.Complexity != nil {
		in, out := &in.Complexity, &out.Complexity
		*out = new(string)
		**out = **in
	}
	if in.DisallowUsernameSubstring != nil {
		in, out := &in.DisallowUsernameSubstring, &out.DisallowUsernameSubstring
		*out = new(bool)
		**out = **in
	}
	if in.EnablePasswordPolicy != nil {
		in, out := &in.EnablePasswordPolicy, &out.EnablePasswordPolicy
		*out = new(bool)
		**out = **in
	}
	if in.MinLength != nil {
		in, out := &in.MinLength, &out.MinLength
		*out = new(float64)
		**out = **in
	}
	if in.PasswordChangeInterval != nil {
		in, out := &in.PasswordChangeInterval, &out.PasswordChangeInterval
		*out = new(string)
		**out = **in
	}
	if in.ReuseInterval != nil {
		in, out := &in.ReuseInterval, &out.ReuseInterval
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PasswordValidationPolicyParameters.
func (in *PasswordValidationPolicyParameters) DeepCopy() *PasswordValidationPolicyParameters {
	if in == nil {
		return nil
	}
	out := new(PasswordValidationPolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PscConfigInitParameters) DeepCopyInto(out *PscConfigInitParameters) {
	*out = *in
	if in.AllowedConsumerProjects != nil {
		in, out := &in.AllowedConsumerProjects, &out.AllowedConsumerProjects
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.PscEnabled != nil {
		in, out := &in.PscEnabled, &out.PscEnabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PscConfigInitParameters.
func (in *PscConfigInitParameters) DeepCopy() *PscConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(PscConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PscConfigObservation) DeepCopyInto(out *PscConfigObservation) {
	*out = *in
	if in.AllowedConsumerProjects != nil {
		in, out := &in.AllowedConsumerProjects, &out.AllowedConsumerProjects
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.PscEnabled != nil {
		in, out := &in.PscEnabled, &out.PscEnabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PscConfigObservation.
func (in *PscConfigObservation) DeepCopy() *PscConfigObservation {
	if in == nil {
		return nil
	}
	out := new(PscConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PscConfigParameters) DeepCopyInto(out *PscConfigParameters) {
	*out = *in
	if in.AllowedConsumerProjects != nil {
		in, out := &in.AllowedConsumerProjects, &out.AllowedConsumerProjects
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.PscEnabled != nil {
		in, out := &in.PscEnabled, &out.PscEnabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PscConfigParameters.
func (in *PscConfigParameters) DeepCopy() *PscConfigParameters {
	if in == nil {
		return nil
	}
	out := new(PscConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReplicaConfigurationInitParameters) DeepCopyInto(out *ReplicaConfigurationInitParameters) {
	*out = *in
	if in.CACertificate != nil {
		in, out := &in.CACertificate, &out.CACertificate
		*out = new(string)
		**out = **in
	}
	if in.ClientCertificate != nil {
		in, out := &in.ClientCertificate, &out.ClientCertificate
		*out = new(string)
		**out = **in
	}
	if in.ClientKey != nil {
		in, out := &in.ClientKey, &out.ClientKey
		*out = new(string)
		**out = **in
	}
	if in.ConnectRetryInterval != nil {
		in, out := &in.ConnectRetryInterval, &out.ConnectRetryInterval
		*out = new(float64)
		**out = **in
	}
	if in.DumpFilePath != nil {
		in, out := &in.DumpFilePath, &out.DumpFilePath
		*out = new(string)
		**out = **in
	}
	if in.FailoverTarget != nil {
		in, out := &in.FailoverTarget, &out.FailoverTarget
		*out = new(bool)
		**out = **in
	}
	if in.MasterHeartbeatPeriod != nil {
		in, out := &in.MasterHeartbeatPeriod, &out.MasterHeartbeatPeriod
		*out = new(float64)
		**out = **in
	}
	if in.SSLCipher != nil {
		in, out := &in.SSLCipher, &out.SSLCipher
		*out = new(string)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
	if in.VerifyServerCertificate != nil {
		in, out := &in.VerifyServerCertificate, &out.VerifyServerCertificate
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReplicaConfigurationInitParameters.
func (in *ReplicaConfigurationInitParameters) DeepCopy() *ReplicaConfigurationInitParameters {
	if in == nil {
		return nil
	}
	out := new(ReplicaConfigurationInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReplicaConfigurationObservation) DeepCopyInto(out *ReplicaConfigurationObservation) {
	*out = *in
	if in.CACertificate != nil {
		in, out := &in.CACertificate, &out.CACertificate
		*out = new(string)
		**out = **in
	}
	if in.ClientCertificate != nil {
		in, out := &in.ClientCertificate, &out.ClientCertificate
		*out = new(string)
		**out = **in
	}
	if in.ClientKey != nil {
		in, out := &in.ClientKey, &out.ClientKey
		*out = new(string)
		**out = **in
	}
	if in.ConnectRetryInterval != nil {
		in, out := &in.ConnectRetryInterval, &out.ConnectRetryInterval
		*out = new(float64)
		**out = **in
	}
	if in.DumpFilePath != nil {
		in, out := &in.DumpFilePath, &out.DumpFilePath
		*out = new(string)
		**out = **in
	}
	if in.FailoverTarget != nil {
		in, out := &in.FailoverTarget, &out.FailoverTarget
		*out = new(bool)
		**out = **in
	}
	if in.MasterHeartbeatPeriod != nil {
		in, out := &in.MasterHeartbeatPeriod, &out.MasterHeartbeatPeriod
		*out = new(float64)
		**out = **in
	}
	if in.SSLCipher != nil {
		in, out := &in.SSLCipher, &out.SSLCipher
		*out = new(string)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
	if in.VerifyServerCertificate != nil {
		in, out := &in.VerifyServerCertificate, &out.VerifyServerCertificate
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReplicaConfigurationObservation.
func (in *ReplicaConfigurationObservation) DeepCopy() *ReplicaConfigurationObservation {
	if in == nil {
		return nil
	}
	out := new(ReplicaConfigurationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReplicaConfigurationParameters) DeepCopyInto(out *ReplicaConfigurationParameters) {
	*out = *in
	if in.CACertificate != nil {
		in, out := &in.CACertificate, &out.CACertificate
		*out = new(string)
		**out = **in
	}
	if in.ClientCertificate != nil {
		in, out := &in.ClientCertificate, &out.ClientCertificate
		*out = new(string)
		**out = **in
	}
	if in.ClientKey != nil {
		in, out := &in.ClientKey, &out.ClientKey
		*out = new(string)
		**out = **in
	}
	if in.ConnectRetryInterval != nil {
		in, out := &in.ConnectRetryInterval, &out.ConnectRetryInterval
		*out = new(float64)
		**out = **in
	}
	if in.DumpFilePath != nil {
		in, out := &in.DumpFilePath, &out.DumpFilePath
		*out = new(string)
		**out = **in
	}
	if in.FailoverTarget != nil {
		in, out := &in.FailoverTarget, &out.FailoverTarget
		*out = new(bool)
		**out = **in
	}
	if in.MasterHeartbeatPeriod != nil {
		in, out := &in.MasterHeartbeatPeriod, &out.MasterHeartbeatPeriod
		*out = new(float64)
		**out = **in
	}
	if in.PasswordSecretRef != nil {
		in, out := &in.PasswordSecretRef, &out.PasswordSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.SSLCipher != nil {
		in, out := &in.SSLCipher, &out.SSLCipher
		*out = new(string)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
	if in.VerifyServerCertificate != nil {
		in, out := &in.VerifyServerCertificate, &out.VerifyServerCertificate
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReplicaConfigurationParameters.
func (in *ReplicaConfigurationParameters) DeepCopy() *ReplicaConfigurationParameters {
	if in == nil {
		return nil
	}
	out := new(ReplicaConfigurationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RestoreBackupContextInitParameters) DeepCopyInto(out *RestoreBackupContextInitParameters) {
	*out = *in
	if in.BackupRunID != nil {
		in, out := &in.BackupRunID, &out.BackupRunID
		*out = new(float64)
		**out = **in
	}
	if in.InstanceID != nil {
		in, out := &in.InstanceID, &out.InstanceID
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RestoreBackupContextInitParameters.
func (in *RestoreBackupContextInitParameters) DeepCopy() *RestoreBackupContextInitParameters {
	if in == nil {
		return nil
	}
	out := new(RestoreBackupContextInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RestoreBackupContextObservation) DeepCopyInto(out *RestoreBackupContextObservation) {
	*out = *in
	if in.BackupRunID != nil {
		in, out := &in.BackupRunID, &out.BackupRunID
		*out = new(float64)
		**out = **in
	}
	if in.InstanceID != nil {
		in, out := &in.InstanceID, &out.InstanceID
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RestoreBackupContextObservation.
func (in *RestoreBackupContextObservation) DeepCopy() *RestoreBackupContextObservation {
	if in == nil {
		return nil
	}
	out := new(RestoreBackupContextObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RestoreBackupContextParameters) DeepCopyInto(out *RestoreBackupContextParameters) {
	*out = *in
	if in.BackupRunID != nil {
		in, out := &in.BackupRunID, &out.BackupRunID
		*out = new(float64)
		**out = **in
	}
	if in.InstanceID != nil {
		in, out := &in.InstanceID, &out.InstanceID
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RestoreBackupContextParameters.
func (in *RestoreBackupContextParameters) DeepCopy() *RestoreBackupContextParameters {
	if in == nil {
		return nil
	}
	out := new(RestoreBackupContextParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLServerAuditConfigInitParameters) DeepCopyInto(out *SQLServerAuditConfigInitParameters) {
	*out = *in
	if in.Bucket != nil {
		in, out := &in.Bucket, &out.Bucket
		*out = new(string)
		**out = **in
	}
	if in.RetentionInterval != nil {
		in, out := &in.RetentionInterval, &out.RetentionInterval
		*out = new(string)
		**out = **in
	}
	if in.UploadInterval != nil {
		in, out := &in.UploadInterval, &out.UploadInterval
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLServerAuditConfigInitParameters.
func (in *SQLServerAuditConfigInitParameters) DeepCopy() *SQLServerAuditConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(SQLServerAuditConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLServerAuditConfigObservation) DeepCopyInto(out *SQLServerAuditConfigObservation) {
	*out = *in
	if in.Bucket != nil {
		in, out := &in.Bucket, &out.Bucket
		*out = new(string)
		**out = **in
	}
	if in.RetentionInterval != nil {
		in, out := &in.RetentionInterval, &out.RetentionInterval
		*out = new(string)
		**out = **in
	}
	if in.UploadInterval != nil {
		in, out := &in.UploadInterval, &out.UploadInterval
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLServerAuditConfigObservation.
func (in *SQLServerAuditConfigObservation) DeepCopy() *SQLServerAuditConfigObservation {
	if in == nil {
		return nil
	}
	out := new(SQLServerAuditConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLServerAuditConfigParameters) DeepCopyInto(out *SQLServerAuditConfigParameters) {
	*out = *in
	if in.Bucket != nil {
		in, out := &in.Bucket, &out.Bucket
		*out = new(string)
		**out = **in
	}
	if in.RetentionInterval != nil {
		in, out := &in.RetentionInterval, &out.RetentionInterval
		*out = new(string)
		**out = **in
	}
	if in.UploadInterval != nil {
		in, out := &in.UploadInterval, &out.UploadInterval
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLServerAuditConfigParameters.
func (in *SQLServerAuditConfigParameters) DeepCopy() *SQLServerAuditConfigParameters {
	if in == nil {
		return nil
	}
	out := new(SQLServerAuditConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLServerUserDetailsInitParameters) DeepCopyInto(out *SQLServerUserDetailsInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLServerUserDetailsInitParameters.
func (in *SQLServerUserDetailsInitParameters) DeepCopy() *SQLServerUserDetailsInitParameters {
	if in == nil {
		return nil
	}
	out := new(SQLServerUserDetailsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLServerUserDetailsObservation) DeepCopyInto(out *SQLServerUserDetailsObservation) {
	*out = *in
	if in.Disabled != nil {
		in, out := &in.Disabled, &out.Disabled
		*out = new(bool)
		**out = **in
	}
	if in.ServerRoles != nil {
		in, out := &in.ServerRoles, &out.ServerRoles
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLServerUserDetailsObservation.
func (in *SQLServerUserDetailsObservation) DeepCopy() *SQLServerUserDetailsObservation {
	if in == nil {
		return nil
	}
	out := new(SQLServerUserDetailsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLServerUserDetailsParameters) DeepCopyInto(out *SQLServerUserDetailsParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLServerUserDetailsParameters.
func (in *SQLServerUserDetailsParameters) DeepCopy() *SQLServerUserDetailsParameters {
	if in == nil {
		return nil
	}
	out := new(SQLServerUserDetailsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SSLCert) DeepCopyInto(out *SSLCert) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SSLCert.
func (in *SSLCert) DeepCopy() *SSLCert {
	if in == nil {
		return nil
	}
	out := new(SSLCert)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SSLCert) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SSLCertInitParameters) DeepCopyInto(out *SSLCertInitParameters) {
	*out = *in
	if in.CommonName != nil {
		in, out := &in.CommonName, &out.CommonName
		*out = new(string)
		**out = **in
	}
	if in.Instance != nil {
		in, out := &in.Instance, &out.Instance
		*out = new(string)
		**out = **in
	}
	if in.InstanceRef != nil {
		in, out := &in.InstanceRef, &out.InstanceRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.InstanceSelector != nil {
		in, out := &in.InstanceSelector, &out.InstanceSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SSLCertInitParameters.
func (in *SSLCertInitParameters) DeepCopy() *SSLCertInitParameters {
	if in == nil {
		return nil
	}
	out := new(SSLCertInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SSLCertList) DeepCopyInto(out *SSLCertList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]SSLCert, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SSLCertList.
func (in *SSLCertList) DeepCopy() *SSLCertList {
	if in == nil {
		return nil
	}
	out := new(SSLCertList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SSLCertList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SSLCertObservation) DeepCopyInto(out *SSLCertObservation) {
	*out = *in
	if in.CertSerialNumber != nil {
		in, out := &in.CertSerialNumber, &out.CertSerialNumber
		*out = new(string)
		**out = **in
	}
	if in.CommonName != nil {
		in, out := &in.CommonName, &out.CommonName
		*out = new(string)
		**out = **in
	}
	if in.CreateTime != nil {
		in, out := &in.CreateTime, &out.CreateTime
		*out = new(string)
		**out = **in
	}
	if in.ExpirationTime != nil {
		in, out := &in.ExpirationTime, &out.ExpirationTime
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Instance != nil {
		in, out := &in.Instance, &out.Instance
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Sha1Fingerprint != nil {
		in, out := &in.Sha1Fingerprint, &out.Sha1Fingerprint
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SSLCertObservation.
func (in *SSLCertObservation) DeepCopy() *SSLCertObservation {
	if in == nil {
		return nil
	}
	out := new(SSLCertObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SSLCertParameters) DeepCopyInto(out *SSLCertParameters) {
	*out = *in
	if in.CommonName != nil {
		in, out := &in.CommonName, &out.CommonName
		*out = new(string)
		**out = **in
	}
	if in.Instance != nil {
		in, out := &in.Instance, &out.Instance
		*out = new(string)
		**out = **in
	}
	if in.InstanceRef != nil {
		in, out := &in.InstanceRef, &out.InstanceRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.InstanceSelector != nil {
		in, out := &in.InstanceSelector, &out.InstanceSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SSLCertParameters.
func (in *SSLCertParameters) DeepCopy() *SSLCertParameters {
	if in == nil {
		return nil
	}
	out := new(SSLCertParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SSLCertSpec) DeepCopyInto(out *SSLCertSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SSLCertSpec.
func (in *SSLCertSpec) DeepCopy() *SSLCertSpec {
	if in == nil {
		return nil
	}
	out := new(SSLCertSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SSLCertStatus) DeepCopyInto(out *SSLCertStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SSLCertStatus.
func (in *SSLCertStatus) DeepCopy() *SSLCertStatus {
	if in == nil {
		return nil
	}
	out := new(SSLCertStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServerCACertInitParameters) DeepCopyInto(out *ServerCACertInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServerCACertInitParameters.
func (in *ServerCACertInitParameters) DeepCopy() *ServerCACertInitParameters {
	if in == nil {
		return nil
	}
	out := new(ServerCACertInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServerCACertObservation) DeepCopyInto(out *ServerCACertObservation) {
	*out = *in
	if in.Cert != nil {
		in, out := &in.Cert, &out.Cert
		*out = new(string)
		**out = **in
	}
	if in.CommonName != nil {
		in, out := &in.CommonName, &out.CommonName
		*out = new(string)
		**out = **in
	}
	if in.CreateTime != nil {
		in, out := &in.CreateTime, &out.CreateTime
		*out = new(string)
		**out = **in
	}
	if in.ExpirationTime != nil {
		in, out := &in.ExpirationTime, &out.ExpirationTime
		*out = new(string)
		**out = **in
	}
	if in.Sha1Fingerprint != nil {
		in, out := &in.Sha1Fingerprint, &out.Sha1Fingerprint
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServerCACertObservation.
func (in *ServerCACertObservation) DeepCopy() *ServerCACertObservation {
	if in == nil {
		return nil
	}
	out := new(ServerCACertObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServerCACertParameters) DeepCopyInto(out *ServerCACertParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServerCACertParameters.
func (in *ServerCACertParameters) DeepCopy() *ServerCACertParameters {
	if in == nil {
		return nil
	}
	out := new(ServerCACertParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SettingsInitParameters) DeepCopyInto(out *SettingsInitParameters) {
	*out = *in
	if in.ActivationPolicy != nil {
		in, out := &in.ActivationPolicy, &out.ActivationPolicy
		*out = new(string)
		**out = **in
	}
	if in.ActiveDirectoryConfig != nil {
		in, out := &in.ActiveDirectoryConfig, &out.ActiveDirectoryConfig
		*out = make([]ActiveDirectoryConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AdvancedMachineFeatures != nil {
		in, out := &in.AdvancedMachineFeatures, &out.AdvancedMachineFeatures
		*out = make([]AdvancedMachineFeaturesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AvailabilityType != nil {
		in, out := &in.AvailabilityType, &out.AvailabilityType
		*out = new(string)
		**out = **in
	}
	if in.BackupConfiguration != nil {
		in, out := &in.BackupConfiguration, &out.BackupConfiguration
		*out = make([]BackupConfigurationInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Collation != nil {
		in, out := &in.Collation, &out.Collation
		*out = new(string)
		**out = **in
	}
	if in.ConnectorEnforcement != nil {
		in, out := &in.ConnectorEnforcement, &out.ConnectorEnforcement
		*out = new(string)
		**out = **in
	}
	if in.DataCacheConfig != nil {
		in, out := &in.DataCacheConfig, &out.DataCacheConfig
		*out = make([]DataCacheConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DatabaseFlags != nil {
		in, out := &in.DatabaseFlags, &out.DatabaseFlags
		*out = make([]DatabaseFlagsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DeletionProtectionEnabled != nil {
		in, out := &in.DeletionProtectionEnabled, &out.DeletionProtectionEnabled
		*out = new(bool)
		**out = **in
	}
	if in.DenyMaintenancePeriod != nil {
		in, out := &in.DenyMaintenancePeriod, &out.DenyMaintenancePeriod
		*out = make([]DenyMaintenancePeriodInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DiskAutoresize != nil {
		in, out := &in.DiskAutoresize, &out.DiskAutoresize
		*out = new(bool)
		**out = **in
	}
	if in.DiskAutoresizeLimit != nil {
		in, out := &in.DiskAutoresizeLimit, &out.DiskAutoresizeLimit
		*out = new(float64)
		**out = **in
	}
	if in.DiskSize != nil {
		in, out := &in.DiskSize, &out.DiskSize
		*out = new(float64)
		**out = **in
	}
	if in.DiskType != nil {
		in, out := &in.DiskType, &out.DiskType
		*out = new(string)
		**out = **in
	}
	if in.Edition != nil {
		in, out := &in.Edition, &out.Edition
		*out = new(string)
		**out = **in
	}
	if in.IPConfiguration != nil {
		in, out := &in.IPConfiguration, &out.IPConfiguration
		*out = make([]IPConfigurationInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.InsightsConfig != nil {
		in, out := &in.InsightsConfig, &out.InsightsConfig
		*out = make([]InsightsConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LocationPreference != nil {
		in, out := &in.LocationPreference, &out.LocationPreference
		*out = make([]LocationPreferenceInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MaintenanceWindow != nil {
		in, out := &in.MaintenanceWindow, &out.MaintenanceWindow
		*out = make([]MaintenanceWindowInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PasswordValidationPolicy != nil {
		in, out := &in.PasswordValidationPolicy, &out.PasswordValidationPolicy
		*out = make([]PasswordValidationPolicyInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PricingPlan != nil {
		in, out := &in.PricingPlan, &out.PricingPlan
		*out = new(string)
		**out = **in
	}
	if in.SQLServerAuditConfig != nil {
		in, out := &in.SQLServerAuditConfig, &out.SQLServerAuditConfig
		*out = make([]SQLServerAuditConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Tier != nil {
		in, out := &in.Tier, &out.Tier
		*out = new(string)
		**out = **in
	}
	if in.TimeZone != nil {
		in, out := &in.TimeZone, &out.TimeZone
		*out = new(string)
		**out = **in
	}
	if in.UserLabels != nil {
		in, out := &in.UserLabels, &out.UserLabels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SettingsInitParameters.
func (in *SettingsInitParameters) DeepCopy() *SettingsInitParameters {
	if in == nil {
		return nil
	}
	out := new(SettingsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SettingsObservation) DeepCopyInto(out *SettingsObservation) {
	*out = *in
	if in.ActivationPolicy != nil {
		in, out := &in.ActivationPolicy, &out.ActivationPolicy
		*out = new(string)
		**out = **in
	}
	if in.ActiveDirectoryConfig != nil {
		in, out := &in.ActiveDirectoryConfig, &out.ActiveDirectoryConfig
		*out = make([]ActiveDirectoryConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AdvancedMachineFeatures != nil {
		in, out := &in.AdvancedMachineFeatures, &out.AdvancedMachineFeatures
		*out = make([]AdvancedMachineFeaturesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AvailabilityType != nil {
		in, out := &in.AvailabilityType, &out.AvailabilityType
		*out = new(string)
		**out = **in
	}
	if in.BackupConfiguration != nil {
		in, out := &in.BackupConfiguration, &out.BackupConfiguration
		*out = make([]BackupConfigurationObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Collation != nil {
		in, out := &in.Collation, &out.Collation
		*out = new(string)
		**out = **in
	}
	if in.ConnectorEnforcement != nil {
		in, out := &in.ConnectorEnforcement, &out.ConnectorEnforcement
		*out = new(string)
		**out = **in
	}
	if in.DataCacheConfig != nil {
		in, out := &in.DataCacheConfig, &out.DataCacheConfig
		*out = make([]DataCacheConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DatabaseFlags != nil {
		in, out := &in.DatabaseFlags, &out.DatabaseFlags
		*out = make([]DatabaseFlagsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DeletionProtectionEnabled != nil {
		in, out := &in.DeletionProtectionEnabled, &out.DeletionProtectionEnabled
		*out = new(bool)
		**out = **in
	}
	if in.DenyMaintenancePeriod != nil {
		in, out := &in.DenyMaintenancePeriod, &out.DenyMaintenancePeriod
		*out = make([]DenyMaintenancePeriodObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DiskAutoresize != nil {
		in, out := &in.DiskAutoresize, &out.DiskAutoresize
		*out = new(bool)
		**out = **in
	}
	if in.DiskAutoresizeLimit != nil {
		in, out := &in.DiskAutoresizeLimit, &out.DiskAutoresizeLimit
		*out = new(float64)
		**out = **in
	}
	if in.DiskSize != nil {
		in, out := &in.DiskSize, &out.DiskSize
		*out = new(float64)
		**out = **in
	}
	if in.DiskType != nil {
		in, out := &in.DiskType, &out.DiskType
		*out = new(string)
		**out = **in
	}
	if in.Edition != nil {
		in, out := &in.Edition, &out.Edition
		*out = new(string)
		**out = **in
	}
	if in.IPConfiguration != nil {
		in, out := &in.IPConfiguration, &out.IPConfiguration
		*out = make([]IPConfigurationObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.InsightsConfig != nil {
		in, out := &in.InsightsConfig, &out.InsightsConfig
		*out = make([]InsightsConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LocationPreference != nil {
		in, out := &in.LocationPreference, &out.LocationPreference
		*out = make([]LocationPreferenceObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MaintenanceWindow != nil {
		in, out := &in.MaintenanceWindow, &out.MaintenanceWindow
		*out = make([]MaintenanceWindowObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PasswordValidationPolicy != nil {
		in, out := &in.PasswordValidationPolicy, &out.PasswordValidationPolicy
		*out = make([]PasswordValidationPolicyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PricingPlan != nil {
		in, out := &in.PricingPlan, &out.PricingPlan
		*out = new(string)
		**out = **in
	}
	if in.SQLServerAuditConfig != nil {
		in, out := &in.SQLServerAuditConfig, &out.SQLServerAuditConfig
		*out = make([]SQLServerAuditConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Tier != nil {
		in, out := &in.Tier, &out.Tier
		*out = new(string)
		**out = **in
	}
	if in.TimeZone != nil {
		in, out := &in.TimeZone, &out.TimeZone
		*out = new(string)
		**out = **in
	}
	if in.UserLabels != nil {
		in, out := &in.UserLabels, &out.UserLabels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SettingsObservation.
func (in *SettingsObservation) DeepCopy() *SettingsObservation {
	if in == nil {
		return nil
	}
	out := new(SettingsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SettingsParameters) DeepCopyInto(out *SettingsParameters) {
	*out = *in
	if in.ActivationPolicy != nil {
		in, out := &in.ActivationPolicy, &out.ActivationPolicy
		*out = new(string)
		**out = **in
	}
	if in.ActiveDirectoryConfig != nil {
		in, out := &in.ActiveDirectoryConfig, &out.ActiveDirectoryConfig
		*out = make([]ActiveDirectoryConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AdvancedMachineFeatures != nil {
		in, out := &in.AdvancedMachineFeatures, &out.AdvancedMachineFeatures
		*out = make([]AdvancedMachineFeaturesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AvailabilityType != nil {
		in, out := &in.AvailabilityType, &out.AvailabilityType
		*out = new(string)
		**out = **in
	}
	if in.BackupConfiguration != nil {
		in, out := &in.BackupConfiguration, &out.BackupConfiguration
		*out = make([]BackupConfigurationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Collation != nil {
		in, out := &in.Collation, &out.Collation
		*out = new(string)
		**out = **in
	}
	if in.ConnectorEnforcement != nil {
		in, out := &in.ConnectorEnforcement, &out.ConnectorEnforcement
		*out = new(string)
		**out = **in
	}
	if in.DataCacheConfig != nil {
		in, out := &in.DataCacheConfig, &out.DataCacheConfig
		*out = make([]DataCacheConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DatabaseFlags != nil {
		in, out := &in.DatabaseFlags, &out.DatabaseFlags
		*out = make([]DatabaseFlagsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DeletionProtectionEnabled != nil {
		in, out := &in.DeletionProtectionEnabled, &out.DeletionProtectionEnabled
		*out = new(bool)
		**out = **in
	}
	if in.DenyMaintenancePeriod != nil {
		in, out := &in.DenyMaintenancePeriod, &out.DenyMaintenancePeriod
		*out = make([]DenyMaintenancePeriodParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DiskAutoresize != nil {
		in, out := &in.DiskAutoresize, &out.DiskAutoresize
		*out = new(bool)
		**out = **in
	}
	if in.DiskAutoresizeLimit != nil {
		in, out := &in.DiskAutoresizeLimit, &out.DiskAutoresizeLimit
		*out = new(float64)
		**out = **in
	}
	if in.DiskSize != nil {
		in, out := &in.DiskSize, &out.DiskSize
		*out = new(float64)
		**out = **in
	}
	if in.DiskType != nil {
		in, out := &in.DiskType, &out.DiskType
		*out = new(string)
		**out = **in
	}
	if in.Edition != nil {
		in, out := &in.Edition, &out.Edition
		*out = new(string)
		**out = **in
	}
	if in.IPConfiguration != nil {
		in, out := &in.IPConfiguration, &out.IPConfiguration
		*out = make([]IPConfigurationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.InsightsConfig != nil {
		in, out := &in.InsightsConfig, &out.InsightsConfig
		*out = make([]InsightsConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LocationPreference != nil {
		in, out := &in.LocationPreference, &out.LocationPreference
		*out = make([]LocationPreferenceParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MaintenanceWindow != nil {
		in, out := &in.MaintenanceWindow, &out.MaintenanceWindow
		*out = make([]MaintenanceWindowParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PasswordValidationPolicy != nil {
		in, out := &in.PasswordValidationPolicy, &out.PasswordValidationPolicy
		*out = make([]PasswordValidationPolicyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PricingPlan != nil {
		in, out := &in.PricingPlan, &out.PricingPlan
		*out = new(string)
		**out = **in
	}
	if in.SQLServerAuditConfig != nil {
		in, out := &in.SQLServerAuditConfig, &out.SQLServerAuditConfig
		*out = make([]SQLServerAuditConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Tier != nil {
		in, out := &in.Tier, &out.Tier
		*out = new(string)
		**out = **in
	}
	if in.TimeZone != nil {
		in, out := &in.TimeZone, &out.TimeZone
		*out = new(string)
		**out = **in
	}
	if in.UserLabels != nil {
		in, out := &in.UserLabels, &out.UserLabels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SettingsParameters.
func (in *SettingsParameters) DeepCopy() *SettingsParameters {
	if in == nil {
		return nil
	}
	out := new(SettingsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SourceRepresentationInstance) DeepCopyInto(out *SourceRepresentationInstance) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SourceRepresentationInstance.
func (in *SourceRepresentationInstance) DeepCopy() *SourceRepresentationInstance {
	if in == nil {
		return nil
	}
	out := new(SourceRepresentationInstance)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SourceRepresentationInstance) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SourceRepresentationInstanceInitParameters) DeepCopyInto(out *SourceRepresentationInstanceInitParameters) {
	*out = *in
	if in.CACertificate != nil {
		in, out := &in.CACertificate, &out.CACertificate
		*out = new(string)
		**out = **in
	}
	if in.ClientCertificate != nil {
		in, out := &in.ClientCertificate, &out.ClientCertificate
		*out = new(string)
		**out = **in
	}
	if in.ClientKey != nil {
		in, out := &in.ClientKey, &out.ClientKey
		*out = new(string)
		**out = **in
	}
	if in.DatabaseVersion != nil {
		in, out := &in.DatabaseVersion, &out.DatabaseVersion
		*out = new(string)
		**out = **in
	}
	if in.DumpFilePath != nil {
		in, out := &in.DumpFilePath, &out.DumpFilePath
		*out = new(string)
		**out = **in
	}
	if in.Host != nil {
		in, out := &in.Host, &out.Host
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SourceRepresentationInstanceInitParameters.
func (in *SourceRepresentationInstanceInitParameters) DeepCopy() *SourceRepresentationInstanceInitParameters {
	if in == nil {
		return nil
	}
	out := new(SourceRepresentationInstanceInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SourceRepresentationInstanceList) DeepCopyInto(out *SourceRepresentationInstanceList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]SourceRepresentationInstance, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SourceRepresentationInstanceList.
func (in *SourceRepresentationInstanceList) DeepCopy() *SourceRepresentationInstanceList {
	if in == nil {
		return nil
	}
	out := new(SourceRepresentationInstanceList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SourceRepresentationInstanceList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SourceRepresentationInstanceObservation) DeepCopyInto(out *SourceRepresentationInstanceObservation) {
	*out = *in
	if in.CACertificate != nil {
		in, out := &in.CACertificate, &out.CACertificate
		*out = new(string)
		**out = **in
	}
	if in.ClientCertificate != nil {
		in, out := &in.ClientCertificate, &out.ClientCertificate
		*out = new(string)
		**out = **in
	}
	if in.ClientKey != nil {
		in, out := &in.ClientKey, &out.ClientKey
		*out = new(string)
		**out = **in
	}
	if in.DatabaseVersion != nil {
		in, out := &in.DatabaseVersion, &out.DatabaseVersion
		*out = new(string)
		**out = **in
	}
	if in.DumpFilePath != nil {
		in, out := &in.DumpFilePath, &out.DumpFilePath
		*out = new(string)
		**out = **in
	}
	if in.Host != nil {
		in, out := &in.Host, &out.Host
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SourceRepresentationInstanceObservation.
func (in *SourceRepresentationInstanceObservation) DeepCopy() *SourceRepresentationInstanceObservation {
	if in == nil {
		return nil
	}
	out := new(SourceRepresentationInstanceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SourceRepresentationInstanceParameters) DeepCopyInto(out *SourceRepresentationInstanceParameters) {
	*out = *in
	if in.CACertificate != nil {
		in, out := &in.CACertificate, &out.CACertificate
		*out = new(string)
		**out = **in
	}
	if in.ClientCertificate != nil {
		in, out := &in.ClientCertificate, &out.ClientCertificate
		*out = new(string)
		**out = **in
	}
	if in.ClientKey != nil {
		in, out := &in.ClientKey, &out.ClientKey
		*out = new(string)
		**out = **in
	}
	if in.DatabaseVersion != nil {
		in, out := &in.DatabaseVersion, &out.DatabaseVersion
		*out = new(string)
		**out = **in
	}
	if in.DumpFilePath != nil {
		in, out := &in.DumpFilePath, &out.DumpFilePath
		*out = new(string)
		**out = **in
	}
	if in.Host != nil {
		in, out := &in.Host, &out.Host
		*out = new(string)
		**out = **in
	}
	if in.PasswordSecretRef != nil {
		in, out := &in.PasswordSecretRef, &out.PasswordSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SourceRepresentationInstanceParameters.
func (in *SourceRepresentationInstanceParameters) DeepCopy() *SourceRepresentationInstanceParameters {
	if in == nil {
		return nil
	}
	out := new(SourceRepresentationInstanceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SourceRepresentationInstanceSpec) DeepCopyInto(out *SourceRepresentationInstanceSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SourceRepresentationInstanceSpec.
func (in *SourceRepresentationInstanceSpec) DeepCopy() *SourceRepresentationInstanceSpec {
	if in == nil {
		return nil
	}
	out := new(SourceRepresentationInstanceSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SourceRepresentationInstanceStatus) DeepCopyInto(out *SourceRepresentationInstanceStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SourceRepresentationInstanceStatus.
func (in *SourceRepresentationInstanceStatus) DeepCopy() *SourceRepresentationInstanceStatus {
	if in == nil {
		return nil
	}
	out := new(SourceRepresentationInstanceStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StatusInitParameters) DeepCopyInto(out *StatusInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StatusInitParameters.
func (in *StatusInitParameters) DeepCopy() *StatusInitParameters {
	if in == nil {
		return nil
	}
	out := new(StatusInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StatusObservation) DeepCopyInto(out *StatusObservation) {
	*out = *in
	if in.Locked != nil {
		in, out := &in.Locked, &out.Locked
		*out = new(bool)
		**out = **in
	}
	if in.PasswordExpirationTime != nil {
		in, out := &in.PasswordExpirationTime, &out.PasswordExpirationTime
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StatusObservation.
func (in *StatusObservation) DeepCopy() *StatusObservation {
	if in == nil {
		return nil
	}
	out := new(StatusObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StatusParameters) DeepCopyInto(out *StatusParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StatusParameters.
func (in *StatusParameters) DeepCopy() *StatusParameters {
	if in == nil {
		return nil
	}
	out := new(StatusParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *User) DeepCopyInto(out *User) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new User.
func (in *User) DeepCopy() *User {
	if in == nil {
		return nil
	}
	out := new(User)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *User) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UserInitParameters) DeepCopyInto(out *UserInitParameters) {
	*out = *in
	if in.DeletionPolicy != nil {
		in, out := &in.DeletionPolicy, &out.DeletionPolicy
		*out = new(string)
		**out = **in
	}
	if in.Host != nil {
		in, out := &in.Host, &out.Host
		*out = new(string)
		**out = **in
	}
	if in.Instance != nil {
		in, out := &in.Instance, &out.Instance
		*out = new(string)
		**out = **in
	}
	if in.InstanceRef != nil {
		in, out := &in.InstanceRef, &out.InstanceRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.InstanceSelector != nil {
		in, out := &in.InstanceSelector, &out.InstanceSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.PasswordPolicy != nil {
		in, out := &in.PasswordPolicy, &out.PasswordPolicy
		*out = make([]PasswordPolicyInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UserInitParameters.
func (in *UserInitParameters) DeepCopy() *UserInitParameters {
	if in == nil {
		return nil
	}
	out := new(UserInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UserList) DeepCopyInto(out *UserList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]User, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UserList.
func (in *UserList) DeepCopy() *UserList {
	if in == nil {
		return nil
	}
	out := new(UserList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *UserList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UserObservation) DeepCopyInto(out *UserObservation) {
	*out = *in
	if in.DeletionPolicy != nil {
		in, out := &in.DeletionPolicy, &out.DeletionPolicy
		*out = new(string)
		**out = **in
	}
	if in.Host != nil {
		in, out := &in.Host, &out.Host
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Instance != nil {
		in, out := &in.Instance, &out.Instance
		*out = new(string)
		**out = **in
	}
	if in.PasswordPolicy != nil {
		in, out := &in.PasswordPolicy, &out.PasswordPolicy
		*out = make([]PasswordPolicyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.SQLServerUserDetails != nil {
		in, out := &in.SQLServerUserDetails, &out.SQLServerUserDetails
		*out = make([]SQLServerUserDetailsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UserObservation.
func (in *UserObservation) DeepCopy() *UserObservation {
	if in == nil {
		return nil
	}
	out := new(UserObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UserParameters) DeepCopyInto(out *UserParameters) {
	*out = *in
	if in.DeletionPolicy != nil {
		in, out := &in.DeletionPolicy, &out.DeletionPolicy
		*out = new(string)
		**out = **in
	}
	if in.Host != nil {
		in, out := &in.Host, &out.Host
		*out = new(string)
		**out = **in
	}
	if in.Instance != nil {
		in, out := &in.Instance, &out.Instance
		*out = new(string)
		**out = **in
	}
	if in.InstanceRef != nil {
		in, out := &in.InstanceRef, &out.InstanceRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.InstanceSelector != nil {
		in, out := &in.InstanceSelector, &out.InstanceSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.PasswordPolicy != nil {
		in, out := &in.PasswordPolicy, &out.PasswordPolicy
		*out = make([]PasswordPolicyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PasswordSecretRef != nil {
		in, out := &in.PasswordSecretRef, &out.PasswordSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UserParameters.
func (in *UserParameters) DeepCopy() *UserParameters {
	if in == nil {
		return nil
	}
	out := new(UserParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UserSpec) DeepCopyInto(out *UserSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UserSpec.
func (in *UserSpec) DeepCopy() *UserSpec {
	if in == nil {
		return nil
	}
	out := new(UserSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UserStatus) DeepCopyInto(out *UserStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UserStatus.
func (in *UserStatus) DeepCopy() *UserStatus {
	if in == nil {
		return nil
	}
	out := new(UserStatus)
	in.DeepCopyInto(out)
	return out
}
