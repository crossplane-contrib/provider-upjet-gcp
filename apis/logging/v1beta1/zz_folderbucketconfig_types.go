// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1beta1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type CmekSettingsInitParameters struct {

	// The resource name of the bucket. For example: "folders/my-folder-id/locations/my-location/buckets/my-bucket-id"
	KMSKeyName *string `json:"kmsKeyName,omitempty" tf:"kms_key_name,omitempty"`
}

type CmekSettingsObservation struct {

	// The resource name of the bucket. For example: "folders/my-folder-id/locations/my-location/buckets/my-bucket-id"
	KMSKeyName *string `json:"kmsKeyName,omitempty" tf:"kms_key_name,omitempty"`

	// The resource name of the bucket. For example: "folders/my-folder-id/locations/my-location/buckets/my-bucket-id"
	KMSKeyVersionName *string `json:"kmsKeyVersionName,omitempty" tf:"kms_key_version_name,omitempty"`

	// The resource name of the bucket. For example: "folders/my-folder-id/locations/my-location/buckets/my-bucket-id"
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// an identifier for the resource with format folders/{{folder}}/locations/{{location}}/buckets/{{bucket_id}}
	ServiceAccountID *string `json:"serviceAccountId,omitempty" tf:"service_account_id,omitempty"`
}

type CmekSettingsParameters struct {

	// The resource name of the bucket. For example: "folders/my-folder-id/locations/my-location/buckets/my-bucket-id"
	// +kubebuilder:validation:Optional
	KMSKeyName *string `json:"kmsKeyName" tf:"kms_key_name,omitempty"`
}

type FolderBucketConfigInitParameters struct {
	CmekSettings []CmekSettingsInitParameters `json:"cmekSettings,omitempty" tf:"cmek_settings,omitempty"`

	// Describes this bucket.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// A list of indexed fields and related configuration data. Structure is documented below.
	IndexConfigs []IndexConfigsInitParameters `json:"indexConfigs,omitempty" tf:"index_configs,omitempty"`

	// Logs will be retained by default for this amount of time, after which they will automatically be deleted. The minimum retention period is 1 day. If this value is set to zero at bucket creation time, the default time of 30 days will be used. Bucket retention can not be increased on buckets outside of projects.
	RetentionDays *float64 `json:"retentionDays,omitempty" tf:"retention_days,omitempty"`
}

type FolderBucketConfigObservation struct {

	// The name of the logging bucket. Logging automatically creates two log buckets: _Required and _Default.
	BucketID *string `json:"bucketId,omitempty" tf:"bucket_id,omitempty"`

	CmekSettings []CmekSettingsObservation `json:"cmekSettings,omitempty" tf:"cmek_settings,omitempty"`

	// Describes this bucket.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// The parent resource that contains the logging bucket.
	Folder *string `json:"folder,omitempty" tf:"folder,omitempty"`

	// an identifier for the resource with format folders/{{folder}}/locations/{{location}}/buckets/{{bucket_id}}
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// A list of indexed fields and related configuration data. Structure is documented below.
	IndexConfigs []IndexConfigsObservation `json:"indexConfigs,omitempty" tf:"index_configs,omitempty"`

	// The bucket's lifecycle such as active or deleted. See LifecycleState.
	LifecycleState *string `json:"lifecycleState,omitempty" tf:"lifecycle_state,omitempty"`

	// The location of the bucket.
	Location *string `json:"location,omitempty" tf:"location,omitempty"`

	// The resource name of the bucket. For example: "folders/my-folder-id/locations/my-location/buckets/my-bucket-id"
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Logs will be retained by default for this amount of time, after which they will automatically be deleted. The minimum retention period is 1 day. If this value is set to zero at bucket creation time, the default time of 30 days will be used. Bucket retention can not be increased on buckets outside of projects.
	RetentionDays *float64 `json:"retentionDays,omitempty" tf:"retention_days,omitempty"`
}

type FolderBucketConfigParameters struct {

	// The name of the logging bucket. Logging automatically creates two log buckets: _Required and _Default.
	// +kubebuilder:validation:Required
	BucketID *string `json:"bucketId" tf:"bucket_id,omitempty"`

	// +kubebuilder:validation:Optional
	CmekSettings []CmekSettingsParameters `json:"cmekSettings,omitempty" tf:"cmek_settings,omitempty"`

	// Describes this bucket.
	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// The parent resource that contains the logging bucket.
	// +crossplane:generate:reference:type=github.com/upbound/provider-gcp/apis/cloudplatform/v1beta1.Folder
	// +crossplane:generate:reference:extractor=github.com/upbound/provider-gcp/config/common.ExtractFolderID()
	// +kubebuilder:validation:Optional
	Folder *string `json:"folder,omitempty" tf:"folder,omitempty"`

	// Reference to a Folder in cloudplatform to populate folder.
	// +kubebuilder:validation:Optional
	FolderRef *v1.Reference `json:"folderRef,omitempty" tf:"-"`

	// Selector for a Folder in cloudplatform to populate folder.
	// +kubebuilder:validation:Optional
	FolderSelector *v1.Selector `json:"folderSelector,omitempty" tf:"-"`

	// A list of indexed fields and related configuration data. Structure is documented below.
	// +kubebuilder:validation:Optional
	IndexConfigs []IndexConfigsParameters `json:"indexConfigs,omitempty" tf:"index_configs,omitempty"`

	// The location of the bucket.
	// +kubebuilder:validation:Required
	Location *string `json:"location" tf:"location,omitempty"`

	// Logs will be retained by default for this amount of time, after which they will automatically be deleted. The minimum retention period is 1 day. If this value is set to zero at bucket creation time, the default time of 30 days will be used. Bucket retention can not be increased on buckets outside of projects.
	// +kubebuilder:validation:Optional
	RetentionDays *float64 `json:"retentionDays,omitempty" tf:"retention_days,omitempty"`
}

type IndexConfigsInitParameters struct {

	// The LogEntry field path to index.
	// Note that some paths are automatically indexed, and other paths are not eligible for indexing. See indexing documentation for details.
	FieldPath *string `json:"fieldPath,omitempty" tf:"field_path,omitempty"`

	// The type of data in this index. Allowed types include INDEX_TYPE_UNSPECIFIED, INDEX_TYPE_STRING and INDEX_TYPE_INTEGER.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type IndexConfigsObservation struct {

	// The LogEntry field path to index.
	// Note that some paths are automatically indexed, and other paths are not eligible for indexing. See indexing documentation for details.
	FieldPath *string `json:"fieldPath,omitempty" tf:"field_path,omitempty"`

	// The type of data in this index. Allowed types include INDEX_TYPE_UNSPECIFIED, INDEX_TYPE_STRING and INDEX_TYPE_INTEGER.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type IndexConfigsParameters struct {

	// The LogEntry field path to index.
	// Note that some paths are automatically indexed, and other paths are not eligible for indexing. See indexing documentation for details.
	// +kubebuilder:validation:Optional
	FieldPath *string `json:"fieldPath" tf:"field_path,omitempty"`

	// The type of data in this index. Allowed types include INDEX_TYPE_UNSPECIFIED, INDEX_TYPE_STRING and INDEX_TYPE_INTEGER.
	// +kubebuilder:validation:Optional
	Type *string `json:"type" tf:"type,omitempty"`
}

// FolderBucketConfigSpec defines the desired state of FolderBucketConfig
type FolderBucketConfigSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     FolderBucketConfigParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider FolderBucketConfigInitParameters `json:"initProvider,omitempty"`
}

// FolderBucketConfigStatus defines the observed state of FolderBucketConfig.
type FolderBucketConfigStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        FolderBucketConfigObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// FolderBucketConfig is the Schema for the FolderBucketConfigs API. Manages a folder-level logging bucket config.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,gcp}
type FolderBucketConfig struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              FolderBucketConfigSpec   `json:"spec"`
	Status            FolderBucketConfigStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// FolderBucketConfigList contains a list of FolderBucketConfigs
type FolderBucketConfigList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []FolderBucketConfig `json:"items"`
}

// Repository type metadata.
var (
	FolderBucketConfig_Kind             = "FolderBucketConfig"
	FolderBucketConfig_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: FolderBucketConfig_Kind}.String()
	FolderBucketConfig_KindAPIVersion   = FolderBucketConfig_Kind + "." + CRDGroupVersion.String()
	FolderBucketConfig_GroupVersionKind = CRDGroupVersion.WithKind(FolderBucketConfig_Kind)
)

func init() {
	SchemeBuilder.Register(&FolderBucketConfig{}, &FolderBucketConfigList{})
}
