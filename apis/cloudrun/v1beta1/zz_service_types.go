// SPDX-FileCopyrightText: 2023 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

/*
Copyright 2021 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by upjet. DO NOT EDIT.

package v1beta1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type ConfigMapRefInitParameters struct {

	// The Secret to select from.
	// Structure is documented below.
	LocalObjectReference []LocalObjectReferenceInitParameters `json:"localObjectReference,omitempty" tf:"local_object_reference,omitempty"`

	// Specify whether the Secret must be defined
	Optional *bool `json:"optional,omitempty" tf:"optional,omitempty"`
}

type ConfigMapRefObservation struct {

	// The Secret to select from.
	// Structure is documented below.
	LocalObjectReference []LocalObjectReferenceObservation `json:"localObjectReference,omitempty" tf:"local_object_reference,omitempty"`

	// Specify whether the Secret must be defined
	Optional *bool `json:"optional,omitempty" tf:"optional,omitempty"`
}

type ConfigMapRefParameters struct {

	// The Secret to select from.
	// Structure is documented below.
	// +kubebuilder:validation:Optional
	LocalObjectReference []LocalObjectReferenceParameters `json:"localObjectReference,omitempty" tf:"local_object_reference,omitempty"`

	// Specify whether the Secret must be defined
	// +kubebuilder:validation:Optional
	Optional *bool `json:"optional,omitempty" tf:"optional,omitempty"`
}

type ContainersInitParameters struct {

	// Arguments to the entrypoint.
	// The docker image's CMD is used if this is not provided.
	Args []*string `json:"args,omitempty" tf:"args,omitempty"`

	// Entrypoint array. Not executed within a shell.
	// The docker image's ENTRYPOINT is used if this is not provided.
	Command []*string `json:"command,omitempty" tf:"command,omitempty"`

	// List of environment variables to set in the container.
	// Structure is documented below.
	Env []EnvInitParameters `json:"env,omitempty" tf:"env,omitempty"`

	// List of sources to populate environment variables in the container.
	// All invalid keys will be reported as an event when the container is starting.
	// When a key exists in multiple sources, the value associated with the last source will
	// take precedence. Values defined by an Env with a duplicate key will take
	// precedence.
	// Structure is documented below.
	EnvFrom []EnvFromInitParameters `json:"envFrom,omitempty" tf:"env_from,omitempty"`

	// Docker image name. This is most often a reference to a container located
	// in the container registry, such as gcr.io/cloudrun/hello
	Image *string `json:"image,omitempty" tf:"image,omitempty"`

	// Periodic probe of container liveness. Container will be restarted if the probe fails.
	// Structure is documented below.
	LivenessProbe []LivenessProbeInitParameters `json:"livenessProbe,omitempty" tf:"liveness_probe,omitempty"`

	// Volume's name.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// List of open ports in the container.
	// Structure is documented below.
	Ports []PortsInitParameters `json:"ports,omitempty" tf:"ports,omitempty"`

	// Compute Resources required by this container. Used to set values such as max memory
	// Structure is documented below.
	Resources []ResourcesInitParameters `json:"resources,omitempty" tf:"resources,omitempty"`

	// Startup probe of application within the container.
	// All other probes are disabled if a startup probe is provided, until it
	// succeeds. Container will not be added to service endpoints if the probe fails.
	// Structure is documented below.
	StartupProbe []StartupProbeInitParameters `json:"startupProbe,omitempty" tf:"startup_probe,omitempty"`

	// Volume to mount into the container's filesystem.
	// Only supports SecretVolumeSources.
	// Structure is documented below.
	VolumeMounts []VolumeMountsInitParameters `json:"volumeMounts,omitempty" tf:"volume_mounts,omitempty"`

	// Container's working directory.
	// If not specified, the container runtime's default will be used, which
	// might be configured in the container image.
	WorkingDir *string `json:"workingDir,omitempty" tf:"working_dir,omitempty"`
}

type ContainersObservation struct {

	// Arguments to the entrypoint.
	// The docker image's CMD is used if this is not provided.
	Args []*string `json:"args,omitempty" tf:"args,omitempty"`

	// Entrypoint array. Not executed within a shell.
	// The docker image's ENTRYPOINT is used if this is not provided.
	Command []*string `json:"command,omitempty" tf:"command,omitempty"`

	// List of environment variables to set in the container.
	// Structure is documented below.
	Env []EnvObservation `json:"env,omitempty" tf:"env,omitempty"`

	// List of sources to populate environment variables in the container.
	// All invalid keys will be reported as an event when the container is starting.
	// When a key exists in multiple sources, the value associated with the last source will
	// take precedence. Values defined by an Env with a duplicate key will take
	// precedence.
	// Structure is documented below.
	EnvFrom []EnvFromObservation `json:"envFrom,omitempty" tf:"env_from,omitempty"`

	// Docker image name. This is most often a reference to a container located
	// in the container registry, such as gcr.io/cloudrun/hello
	Image *string `json:"image,omitempty" tf:"image,omitempty"`

	// Periodic probe of container liveness. Container will be restarted if the probe fails.
	// Structure is documented below.
	LivenessProbe []LivenessProbeObservation `json:"livenessProbe,omitempty" tf:"liveness_probe,omitempty"`

	// Volume's name.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// List of open ports in the container.
	// Structure is documented below.
	Ports []PortsObservation `json:"ports,omitempty" tf:"ports,omitempty"`

	// Compute Resources required by this container. Used to set values such as max memory
	// Structure is documented below.
	Resources []ResourcesObservation `json:"resources,omitempty" tf:"resources,omitempty"`

	// Startup probe of application within the container.
	// All other probes are disabled if a startup probe is provided, until it
	// succeeds. Container will not be added to service endpoints if the probe fails.
	// Structure is documented below.
	StartupProbe []StartupProbeObservation `json:"startupProbe,omitempty" tf:"startup_probe,omitempty"`

	// Volume to mount into the container's filesystem.
	// Only supports SecretVolumeSources.
	// Structure is documented below.
	VolumeMounts []VolumeMountsObservation `json:"volumeMounts,omitempty" tf:"volume_mounts,omitempty"`

	// Container's working directory.
	// If not specified, the container runtime's default will be used, which
	// might be configured in the container image.
	WorkingDir *string `json:"workingDir,omitempty" tf:"working_dir,omitempty"`
}

type ContainersParameters struct {

	// Arguments to the entrypoint.
	// The docker image's CMD is used if this is not provided.
	// +kubebuilder:validation:Optional
	Args []*string `json:"args,omitempty" tf:"args,omitempty"`

	// Entrypoint array. Not executed within a shell.
	// The docker image's ENTRYPOINT is used if this is not provided.
	// +kubebuilder:validation:Optional
	Command []*string `json:"command,omitempty" tf:"command,omitempty"`

	// List of environment variables to set in the container.
	// Structure is documented below.
	// +kubebuilder:validation:Optional
	Env []EnvParameters `json:"env,omitempty" tf:"env,omitempty"`

	// List of sources to populate environment variables in the container.
	// All invalid keys will be reported as an event when the container is starting.
	// When a key exists in multiple sources, the value associated with the last source will
	// take precedence. Values defined by an Env with a duplicate key will take
	// precedence.
	// Structure is documented below.
	// +kubebuilder:validation:Optional
	EnvFrom []EnvFromParameters `json:"envFrom,omitempty" tf:"env_from,omitempty"`

	// Docker image name. This is most often a reference to a container located
	// in the container registry, such as gcr.io/cloudrun/hello
	// +kubebuilder:validation:Optional
	Image *string `json:"image" tf:"image,omitempty"`

	// Periodic probe of container liveness. Container will be restarted if the probe fails.
	// Structure is documented below.
	// +kubebuilder:validation:Optional
	LivenessProbe []LivenessProbeParameters `json:"livenessProbe,omitempty" tf:"liveness_probe,omitempty"`

	// Volume's name.
	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// List of open ports in the container.
	// Structure is documented below.
	// +kubebuilder:validation:Optional
	Ports []PortsParameters `json:"ports,omitempty" tf:"ports,omitempty"`

	// Compute Resources required by this container. Used to set values such as max memory
	// Structure is documented below.
	// +kubebuilder:validation:Optional
	Resources []ResourcesParameters `json:"resources,omitempty" tf:"resources,omitempty"`

	// Startup probe of application within the container.
	// All other probes are disabled if a startup probe is provided, until it
	// succeeds. Container will not be added to service endpoints if the probe fails.
	// Structure is documented below.
	// +kubebuilder:validation:Optional
	StartupProbe []StartupProbeParameters `json:"startupProbe,omitempty" tf:"startup_probe,omitempty"`

	// Volume to mount into the container's filesystem.
	// Only supports SecretVolumeSources.
	// Structure is documented below.
	// +kubebuilder:validation:Optional
	VolumeMounts []VolumeMountsParameters `json:"volumeMounts,omitempty" tf:"volume_mounts,omitempty"`

	// Container's working directory.
	// If not specified, the container runtime's default will be used, which
	// might be configured in the container image.
	// +kubebuilder:validation:Optional
	WorkingDir *string `json:"workingDir,omitempty" tf:"working_dir,omitempty"`
}

type EnvFromInitParameters struct {

	// The ConfigMap to select from.
	// Structure is documented below.
	ConfigMapRef []ConfigMapRefInitParameters `json:"configMapRef,omitempty" tf:"config_map_ref,omitempty"`

	// An optional identifier to prepend to each key in the ConfigMap.
	Prefix *string `json:"prefix,omitempty" tf:"prefix,omitempty"`

	// The Secret to select from.
	// Structure is documented below.
	SecretRef []SecretRefInitParameters `json:"secretRef,omitempty" tf:"secret_ref,omitempty"`
}

type EnvFromObservation struct {

	// The ConfigMap to select from.
	// Structure is documented below.
	ConfigMapRef []ConfigMapRefObservation `json:"configMapRef,omitempty" tf:"config_map_ref,omitempty"`

	// An optional identifier to prepend to each key in the ConfigMap.
	Prefix *string `json:"prefix,omitempty" tf:"prefix,omitempty"`

	// The Secret to select from.
	// Structure is documented below.
	SecretRef []SecretRefObservation `json:"secretRef,omitempty" tf:"secret_ref,omitempty"`
}

type EnvFromParameters struct {

	// The ConfigMap to select from.
	// Structure is documented below.
	// +kubebuilder:validation:Optional
	ConfigMapRef []ConfigMapRefParameters `json:"configMapRef,omitempty" tf:"config_map_ref,omitempty"`

	// An optional identifier to prepend to each key in the ConfigMap.
	// +kubebuilder:validation:Optional
	Prefix *string `json:"prefix,omitempty" tf:"prefix,omitempty"`

	// The Secret to select from.
	// Structure is documented below.
	// +kubebuilder:validation:Optional
	SecretRef []SecretRefParameters `json:"secretRef,omitempty" tf:"secret_ref,omitempty"`
}

type EnvInitParameters struct {

	// Volume's name.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// The header field value.
	Value *string `json:"value,omitempty" tf:"value,omitempty"`

	// Source for the environment variable's value. Only supports secret_key_ref.
	// Structure is documented below.
	ValueFrom []ValueFromInitParameters `json:"valueFrom,omitempty" tf:"value_from,omitempty"`
}

type EnvObservation struct {

	// Volume's name.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// The header field value.
	Value *string `json:"value,omitempty" tf:"value,omitempty"`

	// Source for the environment variable's value. Only supports secret_key_ref.
	// Structure is documented below.
	ValueFrom []ValueFromObservation `json:"valueFrom,omitempty" tf:"value_from,omitempty"`
}

type EnvParameters struct {

	// Volume's name.
	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// The header field value.
	// +kubebuilder:validation:Optional
	Value *string `json:"value,omitempty" tf:"value,omitempty"`

	// Source for the environment variable's value. Only supports secret_key_ref.
	// Structure is documented below.
	// +kubebuilder:validation:Optional
	ValueFrom []ValueFromParameters `json:"valueFrom,omitempty" tf:"value_from,omitempty"`
}

type GRPCInitParameters struct {

	// Port number to access on the container. Number must be in the range 1 to 65535.
	// If not specified, defaults to the same value as container.ports[0].containerPort.
	Port *float64 `json:"port,omitempty" tf:"port,omitempty"`

	// The name of the service to place in the gRPC HealthCheckRequest
	// (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).
	// If this is not specified, the default behavior is defined by gRPC.
	Service *string `json:"service,omitempty" tf:"service,omitempty"`
}

type GRPCObservation struct {

	// Port number to access on the container. Number must be in the range 1 to 65535.
	// If not specified, defaults to the same value as container.ports[0].containerPort.
	Port *float64 `json:"port,omitempty" tf:"port,omitempty"`

	// The name of the service to place in the gRPC HealthCheckRequest
	// (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).
	// If this is not specified, the default behavior is defined by gRPC.
	Service *string `json:"service,omitempty" tf:"service,omitempty"`
}

type GRPCParameters struct {

	// Port number to access on the container. Number must be in the range 1 to 65535.
	// If not specified, defaults to the same value as container.ports[0].containerPort.
	// +kubebuilder:validation:Optional
	Port *float64 `json:"port,omitempty" tf:"port,omitempty"`

	// The name of the service to place in the gRPC HealthCheckRequest
	// (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).
	// If this is not specified, the default behavior is defined by gRPC.
	// +kubebuilder:validation:Optional
	Service *string `json:"service,omitempty" tf:"service,omitempty"`
}

type HTTPGetHTTPHeadersInitParameters struct {

	// Volume's name.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// The header field value.
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type HTTPGetHTTPHeadersObservation struct {

	// Volume's name.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// The header field value.
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type HTTPGetHTTPHeadersParameters struct {

	// Volume's name.
	// +kubebuilder:validation:Optional
	Name *string `json:"name" tf:"name,omitempty"`

	// The header field value.
	// +kubebuilder:validation:Optional
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type HTTPGetInitParameters struct {

	// Custom headers to set in the request. HTTP allows repeated headers.
	// Structure is documented below.
	HTTPHeaders []HTTPHeadersInitParameters `json:"httpHeaders,omitempty" tf:"http_headers,omitempty"`

	// The relative path of the file to map the key to.
	// May not be an absolute path.
	// May not contain the path element '..'.
	// May not start with the string '..'.
	Path *string `json:"path,omitempty" tf:"path,omitempty"`

	// Port number to access on the container. Number must be in the range 1 to 65535.
	// If not specified, defaults to the same value as container.ports[0].containerPort.
	Port *float64 `json:"port,omitempty" tf:"port,omitempty"`
}

type HTTPGetObservation struct {

	// Custom headers to set in the request. HTTP allows repeated headers.
	// Structure is documented below.
	HTTPHeaders []HTTPHeadersObservation `json:"httpHeaders,omitempty" tf:"http_headers,omitempty"`

	// The relative path of the file to map the key to.
	// May not be an absolute path.
	// May not contain the path element '..'.
	// May not start with the string '..'.
	Path *string `json:"path,omitempty" tf:"path,omitempty"`

	// Port number to access on the container. Number must be in the range 1 to 65535.
	// If not specified, defaults to the same value as container.ports[0].containerPort.
	Port *float64 `json:"port,omitempty" tf:"port,omitempty"`
}

type HTTPGetParameters struct {

	// Custom headers to set in the request. HTTP allows repeated headers.
	// Structure is documented below.
	// +kubebuilder:validation:Optional
	HTTPHeaders []HTTPHeadersParameters `json:"httpHeaders,omitempty" tf:"http_headers,omitempty"`

	// The relative path of the file to map the key to.
	// May not be an absolute path.
	// May not contain the path element '..'.
	// May not start with the string '..'.
	// +kubebuilder:validation:Optional
	Path *string `json:"path,omitempty" tf:"path,omitempty"`

	// Port number to access on the container. Number must be in the range 1 to 65535.
	// If not specified, defaults to the same value as container.ports[0].containerPort.
	// +kubebuilder:validation:Optional
	Port *float64 `json:"port,omitempty" tf:"port,omitempty"`
}

type HTTPHeadersInitParameters struct {

	// Volume's name.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// The header field value.
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type HTTPHeadersObservation struct {

	// Volume's name.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// The header field value.
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type HTTPHeadersParameters struct {

	// Volume's name.
	// +kubebuilder:validation:Optional
	Name *string `json:"name" tf:"name,omitempty"`

	// The header field value.
	// +kubebuilder:validation:Optional
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type ItemsInitParameters struct {

	// A Cloud Secret Manager secret version. Must be 'latest' for the latest
	// version or an integer for a specific version.
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	// Mode bits to use on this file, must be a value between 0000 and 0777. If
	// not specified, the volume defaultMode will be used. This might be in
	// conflict with other options that affect the file mode, like fsGroup, and
	// the result can be other mode bits set.
	Mode *float64 `json:"mode,omitempty" tf:"mode,omitempty"`

	// The relative path of the file to map the key to.
	// May not be an absolute path.
	// May not contain the path element '..'.
	// May not start with the string '..'.
	Path *string `json:"path,omitempty" tf:"path,omitempty"`
}

type ItemsObservation struct {

	// A Cloud Secret Manager secret version. Must be 'latest' for the latest
	// version or an integer for a specific version.
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	// Mode bits to use on this file, must be a value between 0000 and 0777. If
	// not specified, the volume defaultMode will be used. This might be in
	// conflict with other options that affect the file mode, like fsGroup, and
	// the result can be other mode bits set.
	Mode *float64 `json:"mode,omitempty" tf:"mode,omitempty"`

	// The relative path of the file to map the key to.
	// May not be an absolute path.
	// May not contain the path element '..'.
	// May not start with the string '..'.
	Path *string `json:"path,omitempty" tf:"path,omitempty"`
}

type ItemsParameters struct {

	// A Cloud Secret Manager secret version. Must be 'latest' for the latest
	// version or an integer for a specific version.
	// +kubebuilder:validation:Optional
	Key *string `json:"key" tf:"key,omitempty"`

	// Mode bits to use on this file, must be a value between 0000 and 0777. If
	// not specified, the volume defaultMode will be used. This might be in
	// conflict with other options that affect the file mode, like fsGroup, and
	// the result can be other mode bits set.
	// +kubebuilder:validation:Optional
	Mode *float64 `json:"mode,omitempty" tf:"mode,omitempty"`

	// The relative path of the file to map the key to.
	// May not be an absolute path.
	// May not contain the path element '..'.
	// May not start with the string '..'.
	// +kubebuilder:validation:Optional
	Path *string `json:"path" tf:"path,omitempty"`
}

type LivenessProbeInitParameters struct {

	// Minimum consecutive failures for the probe to be considered failed after
	// having succeeded. Defaults to 3. Minimum value is 1.
	FailureThreshold *float64 `json:"failureThreshold,omitempty" tf:"failure_threshold,omitempty"`

	// GRPC specifies an action involving a GRPC port.
	// Structure is documented below.
	GRPC []GRPCInitParameters `json:"grpc,omitempty" tf:"grpc,omitempty"`

	// HttpGet specifies the http request to perform.
	// Structure is documented below.
	HTTPGet []HTTPGetInitParameters `json:"httpGet,omitempty" tf:"http_get,omitempty"`

	// Number of seconds after the container has started before the probe is
	// initiated.
	// Defaults to 0 seconds. Minimum value is 0. Maximum value is 240.
	InitialDelaySeconds *float64 `json:"initialDelaySeconds,omitempty" tf:"initial_delay_seconds,omitempty"`

	// How often (in seconds) to perform the probe.
	// Default to 10 seconds. Minimum value is 1. Maximum value is 240.
	PeriodSeconds *float64 `json:"periodSeconds,omitempty" tf:"period_seconds,omitempty"`

	// Number of seconds after which the probe times out.
	// Defaults to 1 second. Minimum value is 1. Maximum value is 3600.
	// Must be smaller than periodSeconds.
	TimeoutSeconds *float64 `json:"timeoutSeconds,omitempty" tf:"timeout_seconds,omitempty"`
}

type LivenessProbeObservation struct {

	// Minimum consecutive failures for the probe to be considered failed after
	// having succeeded. Defaults to 3. Minimum value is 1.
	FailureThreshold *float64 `json:"failureThreshold,omitempty" tf:"failure_threshold,omitempty"`

	// GRPC specifies an action involving a GRPC port.
	// Structure is documented below.
	GRPC []GRPCObservation `json:"grpc,omitempty" tf:"grpc,omitempty"`

	// HttpGet specifies the http request to perform.
	// Structure is documented below.
	HTTPGet []HTTPGetObservation `json:"httpGet,omitempty" tf:"http_get,omitempty"`

	// Number of seconds after the container has started before the probe is
	// initiated.
	// Defaults to 0 seconds. Minimum value is 0. Maximum value is 240.
	InitialDelaySeconds *float64 `json:"initialDelaySeconds,omitempty" tf:"initial_delay_seconds,omitempty"`

	// How often (in seconds) to perform the probe.
	// Default to 10 seconds. Minimum value is 1. Maximum value is 240.
	PeriodSeconds *float64 `json:"periodSeconds,omitempty" tf:"period_seconds,omitempty"`

	// Number of seconds after which the probe times out.
	// Defaults to 1 second. Minimum value is 1. Maximum value is 3600.
	// Must be smaller than periodSeconds.
	TimeoutSeconds *float64 `json:"timeoutSeconds,omitempty" tf:"timeout_seconds,omitempty"`
}

type LivenessProbeParameters struct {

	// Minimum consecutive failures for the probe to be considered failed after
	// having succeeded. Defaults to 3. Minimum value is 1.
	// +kubebuilder:validation:Optional
	FailureThreshold *float64 `json:"failureThreshold,omitempty" tf:"failure_threshold,omitempty"`

	// GRPC specifies an action involving a GRPC port.
	// Structure is documented below.
	// +kubebuilder:validation:Optional
	GRPC []GRPCParameters `json:"grpc,omitempty" tf:"grpc,omitempty"`

	// HttpGet specifies the http request to perform.
	// Structure is documented below.
	// +kubebuilder:validation:Optional
	HTTPGet []HTTPGetParameters `json:"httpGet,omitempty" tf:"http_get,omitempty"`

	// Number of seconds after the container has started before the probe is
	// initiated.
	// Defaults to 0 seconds. Minimum value is 0. Maximum value is 240.
	// +kubebuilder:validation:Optional
	InitialDelaySeconds *float64 `json:"initialDelaySeconds,omitempty" tf:"initial_delay_seconds,omitempty"`

	// How often (in seconds) to perform the probe.
	// Default to 10 seconds. Minimum value is 1. Maximum value is 240.
	// +kubebuilder:validation:Optional
	PeriodSeconds *float64 `json:"periodSeconds,omitempty" tf:"period_seconds,omitempty"`

	// Number of seconds after which the probe times out.
	// Defaults to 1 second. Minimum value is 1. Maximum value is 3600.
	// Must be smaller than periodSeconds.
	// +kubebuilder:validation:Optional
	TimeoutSeconds *float64 `json:"timeoutSeconds,omitempty" tf:"timeout_seconds,omitempty"`
}

type LocalObjectReferenceInitParameters struct {

	// Volume's name.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`
}

type LocalObjectReferenceObservation struct {

	// Volume's name.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`
}

type LocalObjectReferenceParameters struct {

	// Volume's name.
	// +kubebuilder:validation:Optional
	Name *string `json:"name" tf:"name,omitempty"`
}

type PortsInitParameters struct {

	// Port number the container listens on. This must be a valid port number (between 1 and 65535). Defaults to "8080".
	ContainerPort *float64 `json:"containerPort,omitempty" tf:"container_port,omitempty"`

	// Volume's name.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Protocol for port. Must be "TCP". Defaults to "TCP".
	Protocol *string `json:"protocol,omitempty" tf:"protocol,omitempty"`
}

type PortsObservation struct {

	// Port number the container listens on. This must be a valid port number (between 1 and 65535). Defaults to "8080".
	ContainerPort *float64 `json:"containerPort,omitempty" tf:"container_port,omitempty"`

	// Volume's name.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Protocol for port. Must be "TCP". Defaults to "TCP".
	Protocol *string `json:"protocol,omitempty" tf:"protocol,omitempty"`
}

type PortsParameters struct {

	// Port number the container listens on. This must be a valid port number (between 1 and 65535). Defaults to "8080".
	// +kubebuilder:validation:Optional
	ContainerPort *float64 `json:"containerPort,omitempty" tf:"container_port,omitempty"`

	// Volume's name.
	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Protocol for port. Must be "TCP". Defaults to "TCP".
	// +kubebuilder:validation:Optional
	Protocol *string `json:"protocol,omitempty" tf:"protocol,omitempty"`
}

type ResourcesInitParameters struct {

	// Limits describes the maximum amount of compute resources allowed.
	// The values of the map is string form of the 'quantity' k8s type:
	// https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/apimachinery/pkg/api/resource/quantity.go
	// +mapType=granular
	Limits map[string]*string `json:"limits,omitempty" tf:"limits,omitempty"`

	// Requests describes the minimum amount of compute resources required.
	// If Requests is omitted for a container, it defaults to Limits if that is
	// explicitly specified, otherwise to an implementation-defined value.
	// The values of the map is string form of the 'quantity' k8s type:
	// https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/apimachinery/pkg/api/resource/quantity.go
	// +mapType=granular
	Requests map[string]*string `json:"requests,omitempty" tf:"requests,omitempty"`
}

type ResourcesObservation struct {

	// Limits describes the maximum amount of compute resources allowed.
	// The values of the map is string form of the 'quantity' k8s type:
	// https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/apimachinery/pkg/api/resource/quantity.go
	// +mapType=granular
	Limits map[string]*string `json:"limits,omitempty" tf:"limits,omitempty"`

	// Requests describes the minimum amount of compute resources required.
	// If Requests is omitted for a container, it defaults to Limits if that is
	// explicitly specified, otherwise to an implementation-defined value.
	// The values of the map is string form of the 'quantity' k8s type:
	// https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/apimachinery/pkg/api/resource/quantity.go
	// +mapType=granular
	Requests map[string]*string `json:"requests,omitempty" tf:"requests,omitempty"`
}

type ResourcesParameters struct {

	// Limits describes the maximum amount of compute resources allowed.
	// The values of the map is string form of the 'quantity' k8s type:
	// https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/apimachinery/pkg/api/resource/quantity.go
	// +kubebuilder:validation:Optional
	// +mapType=granular
	Limits map[string]*string `json:"limits,omitempty" tf:"limits,omitempty"`

	// Requests describes the minimum amount of compute resources required.
	// If Requests is omitted for a container, it defaults to Limits if that is
	// explicitly specified, otherwise to an implementation-defined value.
	// The values of the map is string form of the 'quantity' k8s type:
	// https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/apimachinery/pkg/api/resource/quantity.go
	// +kubebuilder:validation:Optional
	// +mapType=granular
	Requests map[string]*string `json:"requests,omitempty" tf:"requests,omitempty"`
}

type SecretInitParameters struct {

	// Mode bits to use on created files by default. Must be a value between 0000
	// and 0777. Defaults to 0644. Directories within the path are not affected by
	// this setting. This might be in conflict with other options that affect the
	// file mode, like fsGroup, and the result can be other mode bits set.
	DefaultMode *float64 `json:"defaultMode,omitempty" tf:"default_mode,omitempty"`

	// If unspecified, the volume will expose a file whose name is the
	// secret_name.
	// If specified, the key will be used as the version to fetch from Cloud
	// Secret Manager and the path will be the name of the file exposed in the
	// volume. When items are defined, they must specify a key and a path.
	// Structure is documented below.
	Items []ItemsInitParameters `json:"items,omitempty" tf:"items,omitempty"`

	// The name of the secret in Cloud Secret Manager. By default, the secret
	// is assumed to be in the same project.
	// If the secret is in another project, you must define an alias.
	// An alias definition has the form:
	// {alias}:projects/{project-id|project-number}/secrets/{secret-name}.
	// If multiple alias definitions are needed, they must be separated by
	// commas.
	// The alias definitions must be set on the run.googleapis.com/secrets
	// annotation.
	// +crossplane:generate:reference:type=github.com/upbound/provider-gcp/apis/secretmanager/v1beta1.Secret
	SecretName *string `json:"secretName,omitempty" tf:"secret_name,omitempty"`

	// Reference to a Secret in secretmanager to populate secretName.
	// +kubebuilder:validation:Optional
	SecretNameRef *v1.Reference `json:"secretNameRef,omitempty" tf:"-"`

	// Selector for a Secret in secretmanager to populate secretName.
	// +kubebuilder:validation:Optional
	SecretNameSelector *v1.Selector `json:"secretNameSelector,omitempty" tf:"-"`
}

type SecretKeyRefInitParameters struct {

	// A Cloud Secret Manager secret version. Must be 'latest' for the latest
	// version or an integer for a specific version.
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	// Volume's name.
	// +crossplane:generate:reference:type=github.com/upbound/provider-gcp/apis/secretmanager/v1beta1.Secret
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Reference to a Secret in secretmanager to populate name.
	// +kubebuilder:validation:Optional
	NameRef *v1.Reference `json:"nameRef,omitempty" tf:"-"`

	// Selector for a Secret in secretmanager to populate name.
	// +kubebuilder:validation:Optional
	NameSelector *v1.Selector `json:"nameSelector,omitempty" tf:"-"`
}

type SecretKeyRefObservation struct {

	// A Cloud Secret Manager secret version. Must be 'latest' for the latest
	// version or an integer for a specific version.
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	// Volume's name.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`
}

type SecretKeyRefParameters struct {

	// A Cloud Secret Manager secret version. Must be 'latest' for the latest
	// version or an integer for a specific version.
	// +kubebuilder:validation:Optional
	Key *string `json:"key" tf:"key,omitempty"`

	// Volume's name.
	// +crossplane:generate:reference:type=github.com/upbound/provider-gcp/apis/secretmanager/v1beta1.Secret
	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Reference to a Secret in secretmanager to populate name.
	// +kubebuilder:validation:Optional
	NameRef *v1.Reference `json:"nameRef,omitempty" tf:"-"`

	// Selector for a Secret in secretmanager to populate name.
	// +kubebuilder:validation:Optional
	NameSelector *v1.Selector `json:"nameSelector,omitempty" tf:"-"`
}

type SecretObservation struct {

	// Mode bits to use on created files by default. Must be a value between 0000
	// and 0777. Defaults to 0644. Directories within the path are not affected by
	// this setting. This might be in conflict with other options that affect the
	// file mode, like fsGroup, and the result can be other mode bits set.
	DefaultMode *float64 `json:"defaultMode,omitempty" tf:"default_mode,omitempty"`

	// If unspecified, the volume will expose a file whose name is the
	// secret_name.
	// If specified, the key will be used as the version to fetch from Cloud
	// Secret Manager and the path will be the name of the file exposed in the
	// volume. When items are defined, they must specify a key and a path.
	// Structure is documented below.
	Items []ItemsObservation `json:"items,omitempty" tf:"items,omitempty"`

	// The name of the secret in Cloud Secret Manager. By default, the secret
	// is assumed to be in the same project.
	// If the secret is in another project, you must define an alias.
	// An alias definition has the form:
	// {alias}:projects/{project-id|project-number}/secrets/{secret-name}.
	// If multiple alias definitions are needed, they must be separated by
	// commas.
	// The alias definitions must be set on the run.googleapis.com/secrets
	// annotation.
	SecretName *string `json:"secretName,omitempty" tf:"secret_name,omitempty"`
}

type SecretParameters struct {

	// Mode bits to use on created files by default. Must be a value between 0000
	// and 0777. Defaults to 0644. Directories within the path are not affected by
	// this setting. This might be in conflict with other options that affect the
	// file mode, like fsGroup, and the result can be other mode bits set.
	// +kubebuilder:validation:Optional
	DefaultMode *float64 `json:"defaultMode,omitempty" tf:"default_mode,omitempty"`

	// If unspecified, the volume will expose a file whose name is the
	// secret_name.
	// If specified, the key will be used as the version to fetch from Cloud
	// Secret Manager and the path will be the name of the file exposed in the
	// volume. When items are defined, they must specify a key and a path.
	// Structure is documented below.
	// +kubebuilder:validation:Optional
	Items []ItemsParameters `json:"items,omitempty" tf:"items,omitempty"`

	// The name of the secret in Cloud Secret Manager. By default, the secret
	// is assumed to be in the same project.
	// If the secret is in another project, you must define an alias.
	// An alias definition has the form:
	// {alias}:projects/{project-id|project-number}/secrets/{secret-name}.
	// If multiple alias definitions are needed, they must be separated by
	// commas.
	// The alias definitions must be set on the run.googleapis.com/secrets
	// annotation.
	// +crossplane:generate:reference:type=github.com/upbound/provider-gcp/apis/secretmanager/v1beta1.Secret
	// +kubebuilder:validation:Optional
	SecretName *string `json:"secretName,omitempty" tf:"secret_name,omitempty"`

	// Reference to a Secret in secretmanager to populate secretName.
	// +kubebuilder:validation:Optional
	SecretNameRef *v1.Reference `json:"secretNameRef,omitempty" tf:"-"`

	// Selector for a Secret in secretmanager to populate secretName.
	// +kubebuilder:validation:Optional
	SecretNameSelector *v1.Selector `json:"secretNameSelector,omitempty" tf:"-"`
}

type SecretRefInitParameters struct {

	// The Secret to select from.
	// Structure is documented below.
	LocalObjectReference []SecretRefLocalObjectReferenceInitParameters `json:"localObjectReference,omitempty" tf:"local_object_reference,omitempty"`

	// Specify whether the Secret must be defined
	Optional *bool `json:"optional,omitempty" tf:"optional,omitempty"`
}

type SecretRefLocalObjectReferenceInitParameters struct {

	// Volume's name.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`
}

type SecretRefLocalObjectReferenceObservation struct {

	// Volume's name.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`
}

type SecretRefLocalObjectReferenceParameters struct {

	// Volume's name.
	// +kubebuilder:validation:Optional
	Name *string `json:"name" tf:"name,omitempty"`
}

type SecretRefObservation struct {

	// The Secret to select from.
	// Structure is documented below.
	LocalObjectReference []SecretRefLocalObjectReferenceObservation `json:"localObjectReference,omitempty" tf:"local_object_reference,omitempty"`

	// Specify whether the Secret must be defined
	Optional *bool `json:"optional,omitempty" tf:"optional,omitempty"`
}

type SecretRefParameters struct {

	// The Secret to select from.
	// Structure is documented below.
	// +kubebuilder:validation:Optional
	LocalObjectReference []SecretRefLocalObjectReferenceParameters `json:"localObjectReference,omitempty" tf:"local_object_reference,omitempty"`

	// Specify whether the Secret must be defined
	// +kubebuilder:validation:Optional
	Optional *bool `json:"optional,omitempty" tf:"optional,omitempty"`
}

type ServiceInitParameters struct {

	// If set to true, the revision name (template.metadata.name) will be omitted and
	// autogenerated by Cloud Run. This cannot be set to true while template.metadata.name
	// is also set.
	// (For legacy support, if template.metadata.name is unset in state while
	// this field is set to false, the revision name will still autogenerate.)
	AutogenerateRevisionName *bool `json:"autogenerateRevisionName,omitempty" tf:"autogenerate_revision_name,omitempty"`

	// Optional metadata for this Revision, including labels and annotations.
	// Name will be generated by the Configuration. To set minimum instances
	// for this revision, use the "autoscaling.knative.dev/minScale" annotation
	// key. To set maximum instances for this revision, use the
	// "autoscaling.knative.dev/maxScale" annotation key. To set Cloud SQL
	// connections for the revision, use the "run.googleapis.com/cloudsql-instances"
	// annotation key.
	// Structure is documented below.
	Metadata []ServiceMetadataInitParameters `json:"metadata,omitempty" tf:"metadata,omitempty"`

	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project *string `json:"project,omitempty" tf:"project,omitempty"`

	// template holds the latest specification for the Revision to
	// be stamped out. The template references the container image, and may also
	// include labels and annotations that should be attached to the Revision.
	// To correlate a Revision, and/or to force a Revision to be created when the
	// spec doesn't otherwise change, a nonce label may be provided in the
	// template metadata. For more details, see:
	// https://github.com/knative/serving/blob/main/docs/client-conventions.md#associate-modifications-with-revisions
	// Cloud Run does not currently support referencing a build that is
	// responsible for materializing the container image from source.
	// Structure is documented below.
	Template []TemplateInitParameters `json:"template,omitempty" tf:"template,omitempty"`

	// (Output)
	// Traffic specifies how to distribute traffic over a collection of Knative Revisions
	// and Configurations
	// Structure is documented below.
	Traffic []ServiceTrafficInitParameters `json:"traffic,omitempty" tf:"traffic,omitempty"`
}

type ServiceMetadataInitParameters struct {

	// Annotations is a key value map stored with a resource that
	// may be set by external tools to store and retrieve arbitrary metadata. More
	// info: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations
	// Note: The Cloud Run API may add additional annotations that were not provided in your config.ignore_changes rule to the metadata.0.annotations field.
	// Annotations with run.googleapis.com/ and autoscaling.knative.dev are restricted. Use the following annotation
	// keys to configure features on a Revision template:
	// +mapType=granular
	Annotations map[string]*string `json:"annotations,omitempty" tf:"annotations,omitempty"`

	// Map of string keys and values that can be used to organize and categorize
	// (scope and select) objects.
	// +mapType=granular
	Labels map[string]*string `json:"labels,omitempty" tf:"labels,omitempty"`

	// In Cloud Run the namespace must be equal to either the
	// project ID or project number. It will default to the resource's project.
	// +crossplane:generate:reference:type=github.com/upbound/provider-gcp/apis/cloudplatform/v1beta1.Project
	Namespace *string `json:"namespace,omitempty" tf:"namespace,omitempty"`

	// Reference to a Project in cloudplatform to populate namespace.
	// +kubebuilder:validation:Optional
	NamespaceRef *v1.Reference `json:"namespaceRef,omitempty" tf:"-"`

	// Selector for a Project in cloudplatform to populate namespace.
	// +kubebuilder:validation:Optional
	NamespaceSelector *v1.Selector `json:"namespaceSelector,omitempty" tf:"-"`
}

type ServiceMetadataObservation struct {

	// Annotations is a key value map stored with a resource that
	// may be set by external tools to store and retrieve arbitrary metadata. More
	// info: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations
	// Note: The Cloud Run API may add additional annotations that were not provided in your config.ignore_changes rule to the metadata.0.annotations field.
	// Annotations with run.googleapis.com/ and autoscaling.knative.dev are restricted. Use the following annotation
	// keys to configure features on a Revision template:
	// +mapType=granular
	Annotations map[string]*string `json:"annotations,omitempty" tf:"annotations,omitempty"`

	// (Output)
	// A sequence number representing a specific generation of the desired state.
	Generation *float64 `json:"generation,omitempty" tf:"generation,omitempty"`

	// Map of string keys and values that can be used to organize and categorize
	// (scope and select) objects.
	// +mapType=granular
	Labels map[string]*string `json:"labels,omitempty" tf:"labels,omitempty"`

	// In Cloud Run the namespace must be equal to either the
	// project ID or project number. It will default to the resource's project.
	Namespace *string `json:"namespace,omitempty" tf:"namespace,omitempty"`

	// (Output)
	// An opaque value that represents the internal version of this object that
	// can be used by clients to determine when objects have changed. May be used
	// for optimistic concurrency, change detection, and the watch operation on a
	// resource or set of resources. They may only be valid for a
	// particular resource or set of resources.
	ResourceVersion *string `json:"resourceVersion,omitempty" tf:"resource_version,omitempty"`

	// (Output)
	// SelfLink is a URL representing this object.
	SelfLink *string `json:"selfLink,omitempty" tf:"self_link,omitempty"`

	// (Output)
	// UID is a unique id generated by the server on successful creation of a resource and is not
	// allowed to change on PUT operations.
	UID *string `json:"uid,omitempty" tf:"uid,omitempty"`
}

type ServiceMetadataParameters struct {

	// Annotations is a key value map stored with a resource that
	// may be set by external tools to store and retrieve arbitrary metadata. More
	// info: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations
	// Note: The Cloud Run API may add additional annotations that were not provided in your config.ignore_changes rule to the metadata.0.annotations field.
	// Annotations with run.googleapis.com/ and autoscaling.knative.dev are restricted. Use the following annotation
	// keys to configure features on a Revision template:
	// +kubebuilder:validation:Optional
	// +mapType=granular
	Annotations map[string]*string `json:"annotations,omitempty" tf:"annotations,omitempty"`

	// Map of string keys and values that can be used to organize and categorize
	// (scope and select) objects.
	// +kubebuilder:validation:Optional
	// +mapType=granular
	Labels map[string]*string `json:"labels,omitempty" tf:"labels,omitempty"`

	// In Cloud Run the namespace must be equal to either the
	// project ID or project number. It will default to the resource's project.
	// +crossplane:generate:reference:type=github.com/upbound/provider-gcp/apis/cloudplatform/v1beta1.Project
	// +kubebuilder:validation:Optional
	Namespace *string `json:"namespace,omitempty" tf:"namespace,omitempty"`

	// Reference to a Project in cloudplatform to populate namespace.
	// +kubebuilder:validation:Optional
	NamespaceRef *v1.Reference `json:"namespaceRef,omitempty" tf:"-"`

	// Selector for a Project in cloudplatform to populate namespace.
	// +kubebuilder:validation:Optional
	NamespaceSelector *v1.Selector `json:"namespaceSelector,omitempty" tf:"-"`
}

type ServiceObservation struct {

	// If set to true, the revision name (template.metadata.name) will be omitted and
	// autogenerated by Cloud Run. This cannot be set to true while template.metadata.name
	// is also set.
	// (For legacy support, if template.metadata.name is unset in state while
	// this field is set to false, the revision name will still autogenerate.)
	AutogenerateRevisionName *bool `json:"autogenerateRevisionName,omitempty" tf:"autogenerate_revision_name,omitempty"`

	// an identifier for the resource with format locations/{{location}}/namespaces/{{project}}/services/{{name}}
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// The location of the cloud run instance. eg us-central1
	Location *string `json:"location,omitempty" tf:"location,omitempty"`

	// Optional metadata for this Revision, including labels and annotations.
	// Name will be generated by the Configuration. To set minimum instances
	// for this revision, use the "autoscaling.knative.dev/minScale" annotation
	// key. To set maximum instances for this revision, use the
	// "autoscaling.knative.dev/maxScale" annotation key. To set Cloud SQL
	// connections for the revision, use the "run.googleapis.com/cloudsql-instances"
	// annotation key.
	// Structure is documented below.
	Metadata []ServiceMetadataObservation `json:"metadata,omitempty" tf:"metadata,omitempty"`

	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project *string `json:"project,omitempty" tf:"project,omitempty"`

	// The current status of the Service.
	// Structure is documented below.
	Status []ServiceStatusObservation `json:"status,omitempty" tf:"status,omitempty"`

	// template holds the latest specification for the Revision to
	// be stamped out. The template references the container image, and may also
	// include labels and annotations that should be attached to the Revision.
	// To correlate a Revision, and/or to force a Revision to be created when the
	// spec doesn't otherwise change, a nonce label may be provided in the
	// template metadata. For more details, see:
	// https://github.com/knative/serving/blob/main/docs/client-conventions.md#associate-modifications-with-revisions
	// Cloud Run does not currently support referencing a build that is
	// responsible for materializing the container image from source.
	// Structure is documented below.
	Template []TemplateObservation `json:"template,omitempty" tf:"template,omitempty"`

	// (Output)
	// Traffic specifies how to distribute traffic over a collection of Knative Revisions
	// and Configurations
	// Structure is documented below.
	Traffic []ServiceTrafficObservation `json:"traffic,omitempty" tf:"traffic,omitempty"`
}

type ServiceParameters struct {

	// If set to true, the revision name (template.metadata.name) will be omitted and
	// autogenerated by Cloud Run. This cannot be set to true while template.metadata.name
	// is also set.
	// (For legacy support, if template.metadata.name is unset in state while
	// this field is set to false, the revision name will still autogenerate.)
	// +kubebuilder:validation:Optional
	AutogenerateRevisionName *bool `json:"autogenerateRevisionName,omitempty" tf:"autogenerate_revision_name,omitempty"`

	// The location of the cloud run instance. eg us-central1
	// +kubebuilder:validation:Required
	Location *string `json:"location" tf:"location,omitempty"`

	// Optional metadata for this Revision, including labels and annotations.
	// Name will be generated by the Configuration. To set minimum instances
	// for this revision, use the "autoscaling.knative.dev/minScale" annotation
	// key. To set maximum instances for this revision, use the
	// "autoscaling.knative.dev/maxScale" annotation key. To set Cloud SQL
	// connections for the revision, use the "run.googleapis.com/cloudsql-instances"
	// annotation key.
	// Structure is documented below.
	// +kubebuilder:validation:Optional
	Metadata []ServiceMetadataParameters `json:"metadata,omitempty" tf:"metadata,omitempty"`

	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	// +kubebuilder:validation:Optional
	Project *string `json:"project,omitempty" tf:"project,omitempty"`

	// template holds the latest specification for the Revision to
	// be stamped out. The template references the container image, and may also
	// include labels and annotations that should be attached to the Revision.
	// To correlate a Revision, and/or to force a Revision to be created when the
	// spec doesn't otherwise change, a nonce label may be provided in the
	// template metadata. For more details, see:
	// https://github.com/knative/serving/blob/main/docs/client-conventions.md#associate-modifications-with-revisions
	// Cloud Run does not currently support referencing a build that is
	// responsible for materializing the container image from source.
	// Structure is documented below.
	// +kubebuilder:validation:Optional
	Template []TemplateParameters `json:"template,omitempty" tf:"template,omitempty"`

	// (Output)
	// Traffic specifies how to distribute traffic over a collection of Knative Revisions
	// and Configurations
	// Structure is documented below.
	// +kubebuilder:validation:Optional
	Traffic []ServiceTrafficParameters `json:"traffic,omitempty" tf:"traffic,omitempty"`
}

type ServiceStatusInitParameters struct {
}

type ServiceStatusObservation struct {

	// (Output)
	// Array of observed Service Conditions, indicating the current ready state of the service.
	// Structure is documented below.
	Conditions []StatusConditionsObservation `json:"conditions,omitempty" tf:"conditions,omitempty"`

	// (Output)
	// From ConfigurationStatus. LatestCreatedRevisionName is the last revision that was created
	// from this Service's Configuration. It might not be ready yet, for that use
	// LatestReadyRevisionName.
	LatestCreatedRevisionName *string `json:"latestCreatedRevisionName,omitempty" tf:"latest_created_revision_name,omitempty"`

	// (Output)
	// From ConfigurationStatus. LatestReadyRevisionName holds the name of the latest Revision
	// stamped out from this Service's Configuration that has had its "Ready" condition become
	// "True".
	LatestReadyRevisionName *string `json:"latestReadyRevisionName,omitempty" tf:"latest_ready_revision_name,omitempty"`

	// (Output)
	// ObservedGeneration is the 'Generation' of the Route that was last processed by the
	// controller.
	// Clients polling for completed reconciliation should poll until observedGeneration =
	// metadata.generation and the Ready condition's status is True or False.
	ObservedGeneration *float64 `json:"observedGeneration,omitempty" tf:"observed_generation,omitempty"`

	// (Output)
	// Traffic specifies how to distribute traffic over a collection of Knative Revisions
	// and Configurations
	// Structure is documented below.
	Traffic []TrafficObservation `json:"traffic,omitempty" tf:"traffic,omitempty"`

	// (Output)
	// From RouteStatus. URL holds the url that will distribute traffic over the provided traffic
	// targets. It generally has the form
	// https://{route-hash}-{project-hash}-{cluster-level-suffix}.a.run.app
	URL *string `json:"url,omitempty" tf:"url,omitempty"`
}

type ServiceStatusParameters struct {
}

type ServiceTrafficInitParameters struct {

	// LatestRevision may be optionally provided to indicate that the latest ready
	// Revision of the Configuration should be used for this traffic target. When
	// provided LatestRevision must be true if RevisionName is empty; it must be
	// false when RevisionName is non-empty.
	LatestRevision *bool `json:"latestRevision,omitempty" tf:"latest_revision,omitempty"`

	// Percent specifies percent of the traffic to this Revision or Configuration.
	Percent *float64 `json:"percent,omitempty" tf:"percent,omitempty"`

	// RevisionName of a specific revision to which to send this portion of traffic.
	RevisionName *string `json:"revisionName,omitempty" tf:"revision_name,omitempty"`

	// Tag is optionally used to expose a dedicated url for referencing this target exclusively.
	Tag *string `json:"tag,omitempty" tf:"tag,omitempty"`
}

type ServiceTrafficObservation struct {

	// LatestRevision may be optionally provided to indicate that the latest ready
	// Revision of the Configuration should be used for this traffic target. When
	// provided LatestRevision must be true if RevisionName is empty; it must be
	// false when RevisionName is non-empty.
	LatestRevision *bool `json:"latestRevision,omitempty" tf:"latest_revision,omitempty"`

	// Percent specifies percent of the traffic to this Revision or Configuration.
	Percent *float64 `json:"percent,omitempty" tf:"percent,omitempty"`

	// RevisionName of a specific revision to which to send this portion of traffic.
	RevisionName *string `json:"revisionName,omitempty" tf:"revision_name,omitempty"`

	// Tag is optionally used to expose a dedicated url for referencing this target exclusively.
	Tag *string `json:"tag,omitempty" tf:"tag,omitempty"`

	// (Output)
	// URL displays the URL for accessing tagged traffic targets. URL is displayed in status,
	// and is disallowed on spec. URL must contain a scheme (e.g. http://) and a hostname,
	// but may not contain anything else (e.g. basic auth, url path, etc.)
	URL *string `json:"url,omitempty" tf:"url,omitempty"`
}

type ServiceTrafficParameters struct {

	// LatestRevision may be optionally provided to indicate that the latest ready
	// Revision of the Configuration should be used for this traffic target. When
	// provided LatestRevision must be true if RevisionName is empty; it must be
	// false when RevisionName is non-empty.
	// +kubebuilder:validation:Optional
	LatestRevision *bool `json:"latestRevision,omitempty" tf:"latest_revision,omitempty"`

	// Percent specifies percent of the traffic to this Revision or Configuration.
	// +kubebuilder:validation:Optional
	Percent *float64 `json:"percent" tf:"percent,omitempty"`

	// RevisionName of a specific revision to which to send this portion of traffic.
	// +kubebuilder:validation:Optional
	RevisionName *string `json:"revisionName,omitempty" tf:"revision_name,omitempty"`

	// Tag is optionally used to expose a dedicated url for referencing this target exclusively.
	// +kubebuilder:validation:Optional
	Tag *string `json:"tag,omitempty" tf:"tag,omitempty"`
}

type StartupProbeGRPCInitParameters struct {

	// Port number to access on the container. Number must be in the range 1 to 65535.
	// If not specified, defaults to the same value as container.ports[0].containerPort.
	Port *float64 `json:"port,omitempty" tf:"port,omitempty"`

	// The name of the service to place in the gRPC HealthCheckRequest
	// (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).
	// If this is not specified, the default behavior is defined by gRPC.
	Service *string `json:"service,omitempty" tf:"service,omitempty"`
}

type StartupProbeGRPCObservation struct {

	// Port number to access on the container. Number must be in the range 1 to 65535.
	// If not specified, defaults to the same value as container.ports[0].containerPort.
	Port *float64 `json:"port,omitempty" tf:"port,omitempty"`

	// The name of the service to place in the gRPC HealthCheckRequest
	// (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).
	// If this is not specified, the default behavior is defined by gRPC.
	Service *string `json:"service,omitempty" tf:"service,omitempty"`
}

type StartupProbeGRPCParameters struct {

	// Port number to access on the container. Number must be in the range 1 to 65535.
	// If not specified, defaults to the same value as container.ports[0].containerPort.
	// +kubebuilder:validation:Optional
	Port *float64 `json:"port,omitempty" tf:"port,omitempty"`

	// The name of the service to place in the gRPC HealthCheckRequest
	// (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).
	// If this is not specified, the default behavior is defined by gRPC.
	// +kubebuilder:validation:Optional
	Service *string `json:"service,omitempty" tf:"service,omitempty"`
}

type StartupProbeHTTPGetInitParameters struct {

	// Custom headers to set in the request. HTTP allows repeated headers.
	// Structure is documented below.
	HTTPHeaders []HTTPGetHTTPHeadersInitParameters `json:"httpHeaders,omitempty" tf:"http_headers,omitempty"`

	// The relative path of the file to map the key to.
	// May not be an absolute path.
	// May not contain the path element '..'.
	// May not start with the string '..'.
	Path *string `json:"path,omitempty" tf:"path,omitempty"`

	// Port number to access on the container. Number must be in the range 1 to 65535.
	// If not specified, defaults to the same value as container.ports[0].containerPort.
	Port *float64 `json:"port,omitempty" tf:"port,omitempty"`
}

type StartupProbeHTTPGetObservation struct {

	// Custom headers to set in the request. HTTP allows repeated headers.
	// Structure is documented below.
	HTTPHeaders []HTTPGetHTTPHeadersObservation `json:"httpHeaders,omitempty" tf:"http_headers,omitempty"`

	// The relative path of the file to map the key to.
	// May not be an absolute path.
	// May not contain the path element '..'.
	// May not start with the string '..'.
	Path *string `json:"path,omitempty" tf:"path,omitempty"`

	// Port number to access on the container. Number must be in the range 1 to 65535.
	// If not specified, defaults to the same value as container.ports[0].containerPort.
	Port *float64 `json:"port,omitempty" tf:"port,omitempty"`
}

type StartupProbeHTTPGetParameters struct {

	// Custom headers to set in the request. HTTP allows repeated headers.
	// Structure is documented below.
	// +kubebuilder:validation:Optional
	HTTPHeaders []HTTPGetHTTPHeadersParameters `json:"httpHeaders,omitempty" tf:"http_headers,omitempty"`

	// The relative path of the file to map the key to.
	// May not be an absolute path.
	// May not contain the path element '..'.
	// May not start with the string '..'.
	// +kubebuilder:validation:Optional
	Path *string `json:"path,omitempty" tf:"path,omitempty"`

	// Port number to access on the container. Number must be in the range 1 to 65535.
	// If not specified, defaults to the same value as container.ports[0].containerPort.
	// +kubebuilder:validation:Optional
	Port *float64 `json:"port,omitempty" tf:"port,omitempty"`
}

type StartupProbeInitParameters struct {

	// Minimum consecutive failures for the probe to be considered failed after
	// having succeeded. Defaults to 3. Minimum value is 1.
	FailureThreshold *float64 `json:"failureThreshold,omitempty" tf:"failure_threshold,omitempty"`

	// GRPC specifies an action involving a GRPC port.
	// Structure is documented below.
	GRPC []StartupProbeGRPCInitParameters `json:"grpc,omitempty" tf:"grpc,omitempty"`

	// HttpGet specifies the http request to perform.
	// Structure is documented below.
	HTTPGet []StartupProbeHTTPGetInitParameters `json:"httpGet,omitempty" tf:"http_get,omitempty"`

	// Number of seconds after the container has started before the probe is
	// initiated.
	// Defaults to 0 seconds. Minimum value is 0. Maximum value is 240.
	InitialDelaySeconds *float64 `json:"initialDelaySeconds,omitempty" tf:"initial_delay_seconds,omitempty"`

	// How often (in seconds) to perform the probe.
	// Default to 10 seconds. Minimum value is 1. Maximum value is 240.
	PeriodSeconds *float64 `json:"periodSeconds,omitempty" tf:"period_seconds,omitempty"`

	// TcpSocket specifies an action involving a TCP port.
	// Structure is documented below.
	TCPSocket []TCPSocketInitParameters `json:"tcpSocket,omitempty" tf:"tcp_socket,omitempty"`

	// Number of seconds after which the probe times out.
	// Defaults to 1 second. Minimum value is 1. Maximum value is 3600.
	// Must be smaller than periodSeconds.
	TimeoutSeconds *float64 `json:"timeoutSeconds,omitempty" tf:"timeout_seconds,omitempty"`
}

type StartupProbeObservation struct {

	// Minimum consecutive failures for the probe to be considered failed after
	// having succeeded. Defaults to 3. Minimum value is 1.
	FailureThreshold *float64 `json:"failureThreshold,omitempty" tf:"failure_threshold,omitempty"`

	// GRPC specifies an action involving a GRPC port.
	// Structure is documented below.
	GRPC []StartupProbeGRPCObservation `json:"grpc,omitempty" tf:"grpc,omitempty"`

	// HttpGet specifies the http request to perform.
	// Structure is documented below.
	HTTPGet []StartupProbeHTTPGetObservation `json:"httpGet,omitempty" tf:"http_get,omitempty"`

	// Number of seconds after the container has started before the probe is
	// initiated.
	// Defaults to 0 seconds. Minimum value is 0. Maximum value is 240.
	InitialDelaySeconds *float64 `json:"initialDelaySeconds,omitempty" tf:"initial_delay_seconds,omitempty"`

	// How often (in seconds) to perform the probe.
	// Default to 10 seconds. Minimum value is 1. Maximum value is 240.
	PeriodSeconds *float64 `json:"periodSeconds,omitempty" tf:"period_seconds,omitempty"`

	// TcpSocket specifies an action involving a TCP port.
	// Structure is documented below.
	TCPSocket []TCPSocketObservation `json:"tcpSocket,omitempty" tf:"tcp_socket,omitempty"`

	// Number of seconds after which the probe times out.
	// Defaults to 1 second. Minimum value is 1. Maximum value is 3600.
	// Must be smaller than periodSeconds.
	TimeoutSeconds *float64 `json:"timeoutSeconds,omitempty" tf:"timeout_seconds,omitempty"`
}

type StartupProbeParameters struct {

	// Minimum consecutive failures for the probe to be considered failed after
	// having succeeded. Defaults to 3. Minimum value is 1.
	// +kubebuilder:validation:Optional
	FailureThreshold *float64 `json:"failureThreshold,omitempty" tf:"failure_threshold,omitempty"`

	// GRPC specifies an action involving a GRPC port.
	// Structure is documented below.
	// +kubebuilder:validation:Optional
	GRPC []StartupProbeGRPCParameters `json:"grpc,omitempty" tf:"grpc,omitempty"`

	// HttpGet specifies the http request to perform.
	// Structure is documented below.
	// +kubebuilder:validation:Optional
	HTTPGet []StartupProbeHTTPGetParameters `json:"httpGet,omitempty" tf:"http_get,omitempty"`

	// Number of seconds after the container has started before the probe is
	// initiated.
	// Defaults to 0 seconds. Minimum value is 0. Maximum value is 240.
	// +kubebuilder:validation:Optional
	InitialDelaySeconds *float64 `json:"initialDelaySeconds,omitempty" tf:"initial_delay_seconds,omitempty"`

	// How often (in seconds) to perform the probe.
	// Default to 10 seconds. Minimum value is 1. Maximum value is 240.
	// +kubebuilder:validation:Optional
	PeriodSeconds *float64 `json:"periodSeconds,omitempty" tf:"period_seconds,omitempty"`

	// TcpSocket specifies an action involving a TCP port.
	// Structure is documented below.
	// +kubebuilder:validation:Optional
	TCPSocket []TCPSocketParameters `json:"tcpSocket,omitempty" tf:"tcp_socket,omitempty"`

	// Number of seconds after which the probe times out.
	// Defaults to 1 second. Minimum value is 1. Maximum value is 3600.
	// Must be smaller than periodSeconds.
	// +kubebuilder:validation:Optional
	TimeoutSeconds *float64 `json:"timeoutSeconds,omitempty" tf:"timeout_seconds,omitempty"`
}

type StatusConditionsInitParameters struct {
}

type StatusConditionsObservation struct {

	// (Output)
	// Human readable message indicating details about the current status.
	Message *string `json:"message,omitempty" tf:"message,omitempty"`

	// (Output)
	// One-word CamelCase reason for the condition's current status.
	Reason *string `json:"reason,omitempty" tf:"reason,omitempty"`

	// The current status of the Service.
	// Structure is documented below.
	Status *string `json:"status,omitempty" tf:"status,omitempty"`

	// (Output)
	// Type of domain mapping condition.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type StatusConditionsParameters struct {
}

type TCPSocketInitParameters struct {

	// Port number to access on the container. Number must be in the range 1 to 65535.
	// If not specified, defaults to the same value as container.ports[0].containerPort.
	Port *float64 `json:"port,omitempty" tf:"port,omitempty"`
}

type TCPSocketObservation struct {

	// Port number to access on the container. Number must be in the range 1 to 65535.
	// If not specified, defaults to the same value as container.ports[0].containerPort.
	Port *float64 `json:"port,omitempty" tf:"port,omitempty"`
}

type TCPSocketParameters struct {

	// Port number to access on the container. Number must be in the range 1 to 65535.
	// If not specified, defaults to the same value as container.ports[0].containerPort.
	// +kubebuilder:validation:Optional
	Port *float64 `json:"port,omitempty" tf:"port,omitempty"`
}

type TemplateInitParameters struct {

	// Optional metadata for this Revision, including labels and annotations.
	// Name will be generated by the Configuration. To set minimum instances
	// for this revision, use the "autoscaling.knative.dev/minScale" annotation
	// key. To set maximum instances for this revision, use the
	// "autoscaling.knative.dev/maxScale" annotation key. To set Cloud SQL
	// connections for the revision, use the "run.googleapis.com/cloudsql-instances"
	// annotation key.
	// Structure is documented below.
	Metadata []TemplateMetadataInitParameters `json:"metadata,omitempty" tf:"metadata,omitempty"`

	// RevisionSpec holds the desired state of the Revision (from the client).
	// Structure is documented below.
	Spec []TemplateSpecInitParameters `json:"spec,omitempty" tf:"spec,omitempty"`
}

type TemplateMetadataInitParameters struct {

	// Annotations is a key value map stored with a resource that
	// may be set by external tools to store and retrieve arbitrary metadata. More
	// info: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations
	// Note: The Cloud Run API may add additional annotations that were not provided in your config.ignore_changes rule to the metadata.0.annotations field.
	// Annotations with run.googleapis.com/ and autoscaling.knative.dev are restricted. Use the following annotation
	// keys to configure features on a Revision template:
	// +mapType=granular
	Annotations map[string]*string `json:"annotations,omitempty" tf:"annotations,omitempty"`

	// Map of string keys and values that can be used to organize and categorize
	// (scope and select) objects.
	// +mapType=granular
	Labels map[string]*string `json:"labels,omitempty" tf:"labels,omitempty"`

	// Volume's name.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// In Cloud Run the namespace must be equal to either the
	// project ID or project number. It will default to the resource's project.
	Namespace *string `json:"namespace,omitempty" tf:"namespace,omitempty"`
}

type TemplateMetadataObservation struct {

	// Annotations is a key value map stored with a resource that
	// may be set by external tools to store and retrieve arbitrary metadata. More
	// info: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations
	// Note: The Cloud Run API may add additional annotations that were not provided in your config.ignore_changes rule to the metadata.0.annotations field.
	// Annotations with run.googleapis.com/ and autoscaling.knative.dev are restricted. Use the following annotation
	// keys to configure features on a Revision template:
	// +mapType=granular
	Annotations map[string]*string `json:"annotations,omitempty" tf:"annotations,omitempty"`

	// (Output)
	// A sequence number representing a specific generation of the desired state.
	Generation *float64 `json:"generation,omitempty" tf:"generation,omitempty"`

	// Map of string keys and values that can be used to organize and categorize
	// (scope and select) objects.
	// +mapType=granular
	Labels map[string]*string `json:"labels,omitempty" tf:"labels,omitempty"`

	// Volume's name.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// In Cloud Run the namespace must be equal to either the
	// project ID or project number. It will default to the resource's project.
	Namespace *string `json:"namespace,omitempty" tf:"namespace,omitempty"`

	// (Output)
	// An opaque value that represents the internal version of this object that
	// can be used by clients to determine when objects have changed. May be used
	// for optimistic concurrency, change detection, and the watch operation on a
	// resource or set of resources. They may only be valid for a
	// particular resource or set of resources.
	ResourceVersion *string `json:"resourceVersion,omitempty" tf:"resource_version,omitempty"`

	// (Output)
	// SelfLink is a URL representing this object.
	SelfLink *string `json:"selfLink,omitempty" tf:"self_link,omitempty"`

	// (Output)
	// UID is a unique id generated by the server on successful creation of a resource and is not
	// allowed to change on PUT operations.
	UID *string `json:"uid,omitempty" tf:"uid,omitempty"`
}

type TemplateMetadataParameters struct {

	// Annotations is a key value map stored with a resource that
	// may be set by external tools to store and retrieve arbitrary metadata. More
	// info: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations
	// Note: The Cloud Run API may add additional annotations that were not provided in your config.ignore_changes rule to the metadata.0.annotations field.
	// Annotations with run.googleapis.com/ and autoscaling.knative.dev are restricted. Use the following annotation
	// keys to configure features on a Revision template:
	// +kubebuilder:validation:Optional
	// +mapType=granular
	Annotations map[string]*string `json:"annotations,omitempty" tf:"annotations,omitempty"`

	// Map of string keys and values that can be used to organize and categorize
	// (scope and select) objects.
	// +kubebuilder:validation:Optional
	// +mapType=granular
	Labels map[string]*string `json:"labels,omitempty" tf:"labels,omitempty"`

	// Volume's name.
	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// In Cloud Run the namespace must be equal to either the
	// project ID or project number. It will default to the resource's project.
	// +kubebuilder:validation:Optional
	Namespace *string `json:"namespace,omitempty" tf:"namespace,omitempty"`
}

type TemplateObservation struct {

	// Optional metadata for this Revision, including labels and annotations.
	// Name will be generated by the Configuration. To set minimum instances
	// for this revision, use the "autoscaling.knative.dev/minScale" annotation
	// key. To set maximum instances for this revision, use the
	// "autoscaling.knative.dev/maxScale" annotation key. To set Cloud SQL
	// connections for the revision, use the "run.googleapis.com/cloudsql-instances"
	// annotation key.
	// Structure is documented below.
	Metadata []TemplateMetadataObservation `json:"metadata,omitempty" tf:"metadata,omitempty"`

	// RevisionSpec holds the desired state of the Revision (from the client).
	// Structure is documented below.
	Spec []TemplateSpecObservation `json:"spec,omitempty" tf:"spec,omitempty"`
}

type TemplateParameters struct {

	// Optional metadata for this Revision, including labels and annotations.
	// Name will be generated by the Configuration. To set minimum instances
	// for this revision, use the "autoscaling.knative.dev/minScale" annotation
	// key. To set maximum instances for this revision, use the
	// "autoscaling.knative.dev/maxScale" annotation key. To set Cloud SQL
	// connections for the revision, use the "run.googleapis.com/cloudsql-instances"
	// annotation key.
	// Structure is documented below.
	// +kubebuilder:validation:Optional
	Metadata []TemplateMetadataParameters `json:"metadata,omitempty" tf:"metadata,omitempty"`

	// RevisionSpec holds the desired state of the Revision (from the client).
	// Structure is documented below.
	// +kubebuilder:validation:Optional
	Spec []TemplateSpecParameters `json:"spec,omitempty" tf:"spec,omitempty"`
}

type TemplateSpecInitParameters struct {

	// ContainerConcurrency specifies the maximum allowed in-flight (concurrent)
	// requests per container of the Revision. Values are:
	ContainerConcurrency *float64 `json:"containerConcurrency,omitempty" tf:"container_concurrency,omitempty"`

	// Containers defines the unit of execution for this Revision.
	// Structure is documented below.
	Containers []ContainersInitParameters `json:"containers,omitempty" tf:"containers,omitempty"`

	// Email address of the IAM service account associated with the revision of the
	// service. The service account represents the identity of the running revision,
	// and determines what permissions the revision has. If not provided, the revision
	// will use the project's default service account.
	ServiceAccountName *string `json:"serviceAccountName,omitempty" tf:"service_account_name,omitempty"`

	// Number of seconds after which the probe times out.
	// Defaults to 1 second. Minimum value is 1. Maximum value is 3600.
	// Must be smaller than periodSeconds.
	TimeoutSeconds *float64 `json:"timeoutSeconds,omitempty" tf:"timeout_seconds,omitempty"`

	// Volume represents a named volume in a container.
	// Structure is documented below.
	Volumes []VolumesInitParameters `json:"volumes,omitempty" tf:"volumes,omitempty"`
}

type TemplateSpecObservation struct {

	// ContainerConcurrency specifies the maximum allowed in-flight (concurrent)
	// requests per container of the Revision. Values are:
	ContainerConcurrency *float64 `json:"containerConcurrency,omitempty" tf:"container_concurrency,omitempty"`

	// Containers defines the unit of execution for this Revision.
	// Structure is documented below.
	Containers []ContainersObservation `json:"containers,omitempty" tf:"containers,omitempty"`

	// Email address of the IAM service account associated with the revision of the
	// service. The service account represents the identity of the running revision,
	// and determines what permissions the revision has. If not provided, the revision
	// will use the project's default service account.
	ServiceAccountName *string `json:"serviceAccountName,omitempty" tf:"service_account_name,omitempty"`

	// (Output, Deprecated)
	// ServingState holds a value describing the state the resources
	// are in for this Revision.
	// It is expected
	// that the system will manipulate this based on routability and load.
	ServingState *string `json:"servingState,omitempty" tf:"serving_state,omitempty"`

	// Number of seconds after which the probe times out.
	// Defaults to 1 second. Minimum value is 1. Maximum value is 3600.
	// Must be smaller than periodSeconds.
	TimeoutSeconds *float64 `json:"timeoutSeconds,omitempty" tf:"timeout_seconds,omitempty"`

	// Volume represents a named volume in a container.
	// Structure is documented below.
	Volumes []VolumesObservation `json:"volumes,omitempty" tf:"volumes,omitempty"`
}

type TemplateSpecParameters struct {

	// ContainerConcurrency specifies the maximum allowed in-flight (concurrent)
	// requests per container of the Revision. Values are:
	// +kubebuilder:validation:Optional
	ContainerConcurrency *float64 `json:"containerConcurrency,omitempty" tf:"container_concurrency,omitempty"`

	// Containers defines the unit of execution for this Revision.
	// Structure is documented below.
	// +kubebuilder:validation:Optional
	Containers []ContainersParameters `json:"containers,omitempty" tf:"containers,omitempty"`

	// Email address of the IAM service account associated with the revision of the
	// service. The service account represents the identity of the running revision,
	// and determines what permissions the revision has. If not provided, the revision
	// will use the project's default service account.
	// +kubebuilder:validation:Optional
	ServiceAccountName *string `json:"serviceAccountName,omitempty" tf:"service_account_name,omitempty"`

	// Number of seconds after which the probe times out.
	// Defaults to 1 second. Minimum value is 1. Maximum value is 3600.
	// Must be smaller than periodSeconds.
	// +kubebuilder:validation:Optional
	TimeoutSeconds *float64 `json:"timeoutSeconds,omitempty" tf:"timeout_seconds,omitempty"`

	// Volume represents a named volume in a container.
	// Structure is documented below.
	// +kubebuilder:validation:Optional
	Volumes []VolumesParameters `json:"volumes,omitempty" tf:"volumes,omitempty"`
}

type TrafficInitParameters struct {
}

type TrafficObservation struct {

	// LatestRevision may be optionally provided to indicate that the latest ready
	// Revision of the Configuration should be used for this traffic target. When
	// provided LatestRevision must be true if RevisionName is empty; it must be
	// false when RevisionName is non-empty.
	LatestRevision *bool `json:"latestRevision,omitempty" tf:"latest_revision,omitempty"`

	// Percent specifies percent of the traffic to this Revision or Configuration.
	Percent *float64 `json:"percent,omitempty" tf:"percent,omitempty"`

	// RevisionName of a specific revision to which to send this portion of traffic.
	RevisionName *string `json:"revisionName,omitempty" tf:"revision_name,omitempty"`

	// Tag is optionally used to expose a dedicated url for referencing this target exclusively.
	Tag *string `json:"tag,omitempty" tf:"tag,omitempty"`

	// (Output)
	// URL displays the URL for accessing tagged traffic targets. URL is displayed in status,
	// and is disallowed on spec. URL must contain a scheme (e.g. http://) and a hostname,
	// but may not contain anything else (e.g. basic auth, url path, etc.)
	URL *string `json:"url,omitempty" tf:"url,omitempty"`
}

type TrafficParameters struct {
}

type ValueFromInitParameters struct {

	// Selects a key (version) of a secret in Secret Manager.
	// Structure is documented below.
	SecretKeyRef []SecretKeyRefInitParameters `json:"secretKeyRef,omitempty" tf:"secret_key_ref,omitempty"`
}

type ValueFromObservation struct {

	// Selects a key (version) of a secret in Secret Manager.
	// Structure is documented below.
	SecretKeyRef []SecretKeyRefObservation `json:"secretKeyRef,omitempty" tf:"secret_key_ref,omitempty"`
}

type ValueFromParameters struct {

	// Selects a key (version) of a secret in Secret Manager.
	// Structure is documented below.
	// +kubebuilder:validation:Optional
	SecretKeyRef []SecretKeyRefParameters `json:"secretKeyRef" tf:"secret_key_ref,omitempty"`
}

type VolumeMountsInitParameters struct {

	// Path within the container at which the volume should be mounted.  Must
	// not contain ':'.
	MountPath *string `json:"mountPath,omitempty" tf:"mount_path,omitempty"`

	// Volume's name.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`
}

type VolumeMountsObservation struct {

	// Path within the container at which the volume should be mounted.  Must
	// not contain ':'.
	MountPath *string `json:"mountPath,omitempty" tf:"mount_path,omitempty"`

	// Volume's name.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`
}

type VolumeMountsParameters struct {

	// Path within the container at which the volume should be mounted.  Must
	// not contain ':'.
	// +kubebuilder:validation:Optional
	MountPath *string `json:"mountPath" tf:"mount_path,omitempty"`

	// Volume's name.
	// +kubebuilder:validation:Optional
	Name *string `json:"name" tf:"name,omitempty"`
}

type VolumesInitParameters struct {

	// Volume's name.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// The secret's value will be presented as the content of a file whose
	// name is defined in the item path. If no items are defined, the name of
	// the file is the secret_name.
	// Structure is documented below.
	Secret []SecretInitParameters `json:"secret,omitempty" tf:"secret,omitempty"`
}

type VolumesObservation struct {

	// Volume's name.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// The secret's value will be presented as the content of a file whose
	// name is defined in the item path. If no items are defined, the name of
	// the file is the secret_name.
	// Structure is documented below.
	Secret []SecretObservation `json:"secret,omitempty" tf:"secret,omitempty"`
}

type VolumesParameters struct {

	// Volume's name.
	// +kubebuilder:validation:Optional
	Name *string `json:"name" tf:"name,omitempty"`

	// The secret's value will be presented as the content of a file whose
	// name is defined in the item path. If no items are defined, the name of
	// the file is the secret_name.
	// Structure is documented below.
	// +kubebuilder:validation:Optional
	Secret []SecretParameters `json:"secret,omitempty" tf:"secret,omitempty"`
}

// ServiceSpec defines the desired state of Service
type ServiceSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     ServiceParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider ServiceInitParameters `json:"initProvider,omitempty"`
}

// ServiceStatus defines the observed state of Service.
type ServiceStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        ServiceObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// Service is the Schema for the Services API. A Cloud Run service has a unique endpoint and autoscales containers.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,gcp}
type Service struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              ServiceSpec   `json:"spec"`
	Status            ServiceStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// ServiceList contains a list of Services
type ServiceList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []Service `json:"items"`
}

// Repository type metadata.
var (
	Service_Kind             = "Service"
	Service_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: Service_Kind}.String()
	Service_KindAPIVersion   = Service_Kind + "." + CRDGroupVersion.String()
	Service_GroupVersionKind = CRDGroupVersion.WithKind(Service_Kind)
)

func init() {
	SchemeBuilder.Register(&Service{}, &ServiceList{})
}
