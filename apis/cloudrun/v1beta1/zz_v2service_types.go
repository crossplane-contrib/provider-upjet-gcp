// SPDX-FileCopyrightText: 2023 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

/*
Copyright 2021 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by upjet. DO NOT EDIT.

package v1beta1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type ContainersLivenessProbeHTTPGetHTTPHeadersInitParameters struct {

	// Volume's name.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// The header field value
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type ContainersLivenessProbeHTTPGetHTTPHeadersObservation struct {

	// Volume's name.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// The header field value
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type ContainersLivenessProbeHTTPGetHTTPHeadersParameters struct {

	// Volume's name.
	// +kubebuilder:validation:Optional
	Name *string `json:"name" tf:"name,omitempty"`

	// The header field value
	// +kubebuilder:validation:Optional
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type ContainersLivenessProbeHTTPGetInitParameters struct {

	// Custom headers to set in the request. HTTP allows repeated headers.
	// Structure is documented below.
	HTTPHeaders []ContainersLivenessProbeHTTPGetHTTPHeadersInitParameters `json:"httpHeaders,omitempty" tf:"http_headers,omitempty"`

	// The relative path of the secret in the container.
	Path *string `json:"path,omitempty" tf:"path,omitempty"`

	// Port number to access on the container. Must be in the range 1 to 65535. If not specified, defaults to 8080.
	Port *float64 `json:"port,omitempty" tf:"port,omitempty"`
}

type ContainersLivenessProbeHTTPGetObservation struct {

	// Custom headers to set in the request. HTTP allows repeated headers.
	// Structure is documented below.
	HTTPHeaders []ContainersLivenessProbeHTTPGetHTTPHeadersObservation `json:"httpHeaders,omitempty" tf:"http_headers,omitempty"`

	// The relative path of the secret in the container.
	Path *string `json:"path,omitempty" tf:"path,omitempty"`

	// Port number to access on the container. Must be in the range 1 to 65535. If not specified, defaults to 8080.
	Port *float64 `json:"port,omitempty" tf:"port,omitempty"`
}

type ContainersLivenessProbeHTTPGetParameters struct {

	// Custom headers to set in the request. HTTP allows repeated headers.
	// Structure is documented below.
	// +kubebuilder:validation:Optional
	HTTPHeaders []ContainersLivenessProbeHTTPGetHTTPHeadersParameters `json:"httpHeaders,omitempty" tf:"http_headers,omitempty"`

	// The relative path of the secret in the container.
	// +kubebuilder:validation:Optional
	Path *string `json:"path,omitempty" tf:"path,omitempty"`

	// Port number to access on the container. Must be in the range 1 to 65535. If not specified, defaults to 8080.
	// +kubebuilder:validation:Optional
	Port *float64 `json:"port,omitempty" tf:"port,omitempty"`
}

type ContainersLivenessProbeTCPSocketInitParameters struct {

	// Port number to access on the container. Must be in the range 1 to 65535. If not specified, defaults to 8080.
	Port *float64 `json:"port,omitempty" tf:"port,omitempty"`
}

type ContainersLivenessProbeTCPSocketObservation struct {

	// Port number to access on the container. Must be in the range 1 to 65535. If not specified, defaults to 8080.
	Port *float64 `json:"port,omitempty" tf:"port,omitempty"`
}

type ContainersLivenessProbeTCPSocketParameters struct {

	// Port number to access on the container. Must be in the range 1 to 65535. If not specified, defaults to 8080.
	// +kubebuilder:validation:Optional
	Port *float64 `json:"port,omitempty" tf:"port,omitempty"`
}

type ContainersStartupProbeGRPCInitParameters struct {

	// Port number to access on the container. Must be in the range 1 to 65535. If not specified, defaults to 8080.
	Port *float64 `json:"port,omitempty" tf:"port,omitempty"`

	// The name of the service to place in the gRPC HealthCheckRequest
	// (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).
	// If this is not specified, the default behavior is defined by gRPC.
	Service *string `json:"service,omitempty" tf:"service,omitempty"`
}

type ContainersStartupProbeGRPCObservation struct {

	// Port number to access on the container. Must be in the range 1 to 65535. If not specified, defaults to 8080.
	Port *float64 `json:"port,omitempty" tf:"port,omitempty"`

	// The name of the service to place in the gRPC HealthCheckRequest
	// (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).
	// If this is not specified, the default behavior is defined by gRPC.
	Service *string `json:"service,omitempty" tf:"service,omitempty"`
}

type ContainersStartupProbeGRPCParameters struct {

	// Port number to access on the container. Must be in the range 1 to 65535. If not specified, defaults to 8080.
	// +kubebuilder:validation:Optional
	Port *float64 `json:"port,omitempty" tf:"port,omitempty"`

	// The name of the service to place in the gRPC HealthCheckRequest
	// (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).
	// If this is not specified, the default behavior is defined by gRPC.
	// +kubebuilder:validation:Optional
	Service *string `json:"service,omitempty" tf:"service,omitempty"`
}

type ContainersStartupProbeHTTPGetHTTPHeadersInitParameters struct {

	// Volume's name.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// The header field value
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type ContainersStartupProbeHTTPGetHTTPHeadersObservation struct {

	// Volume's name.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// The header field value
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type ContainersStartupProbeHTTPGetHTTPHeadersParameters struct {

	// Volume's name.
	// +kubebuilder:validation:Optional
	Name *string `json:"name" tf:"name,omitempty"`

	// The header field value
	// +kubebuilder:validation:Optional
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type ContainersStartupProbeTCPSocketInitParameters struct {

	// Port number to access on the container. Must be in the range 1 to 65535. If not specified, defaults to 8080.
	Port *float64 `json:"port,omitempty" tf:"port,omitempty"`
}

type ContainersStartupProbeTCPSocketObservation struct {

	// Port number to access on the container. Must be in the range 1 to 65535. If not specified, defaults to 8080.
	Port *float64 `json:"port,omitempty" tf:"port,omitempty"`
}

type ContainersStartupProbeTCPSocketParameters struct {

	// Port number to access on the container. Must be in the range 1 to 65535. If not specified, defaults to 8080.
	// +kubebuilder:validation:Optional
	Port *float64 `json:"port,omitempty" tf:"port,omitempty"`
}

type EnvValueSourceInitParameters struct {

	// Selects a secret and a specific version from Cloud Secret Manager.
	// Structure is documented below.
	SecretKeyRef []EnvValueSourceSecretKeyRefInitParameters `json:"secretKeyRef,omitempty" tf:"secret_key_ref,omitempty"`
}

type EnvValueSourceObservation struct {

	// Selects a secret and a specific version from Cloud Secret Manager.
	// Structure is documented below.
	SecretKeyRef []EnvValueSourceSecretKeyRefObservation `json:"secretKeyRef,omitempty" tf:"secret_key_ref,omitempty"`
}

type EnvValueSourceParameters struct {

	// Selects a secret and a specific version from Cloud Secret Manager.
	// Structure is documented below.
	// +kubebuilder:validation:Optional
	SecretKeyRef []EnvValueSourceSecretKeyRefParameters `json:"secretKeyRef,omitempty" tf:"secret_key_ref,omitempty"`
}

type EnvValueSourceSecretKeyRefInitParameters struct {

	// Secret represents a secret that should populate this volume. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret
	// Structure is documented below.
	// +crossplane:generate:reference:type=github.com/upbound/provider-gcp/apis/secretmanager/v1beta1.Secret
	Secret *string `json:"secret,omitempty" tf:"secret,omitempty"`

	// Reference to a Secret in secretmanager to populate secret.
	// +kubebuilder:validation:Optional
	SecretRef *v1.Reference `json:"secretRef,omitempty" tf:"-"`

	// Selector for a Secret in secretmanager to populate secret.
	// +kubebuilder:validation:Optional
	SecretSelector *v1.Selector `json:"secretSelector,omitempty" tf:"-"`

	// The Cloud Secret Manager secret version. Can be 'latest' for the latest value or an integer for a specific version.
	Version *string `json:"version,omitempty" tf:"version,omitempty"`
}

type EnvValueSourceSecretKeyRefObservation struct {

	// Secret represents a secret that should populate this volume. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret
	// Structure is documented below.
	Secret *string `json:"secret,omitempty" tf:"secret,omitempty"`

	// The Cloud Secret Manager secret version. Can be 'latest' for the latest value or an integer for a specific version.
	Version *string `json:"version,omitempty" tf:"version,omitempty"`
}

type EnvValueSourceSecretKeyRefParameters struct {

	// Secret represents a secret that should populate this volume. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret
	// Structure is documented below.
	// +crossplane:generate:reference:type=github.com/upbound/provider-gcp/apis/secretmanager/v1beta1.Secret
	// +kubebuilder:validation:Optional
	Secret *string `json:"secret,omitempty" tf:"secret,omitempty"`

	// Reference to a Secret in secretmanager to populate secret.
	// +kubebuilder:validation:Optional
	SecretRef *v1.Reference `json:"secretRef,omitempty" tf:"-"`

	// Selector for a Secret in secretmanager to populate secret.
	// +kubebuilder:validation:Optional
	SecretSelector *v1.Selector `json:"secretSelector,omitempty" tf:"-"`

	// The Cloud Secret Manager secret version. Can be 'latest' for the latest value or an integer for a specific version.
	// +kubebuilder:validation:Optional
	Version *string `json:"version,omitempty" tf:"version,omitempty"`
}

type LivenessProbeGRPCInitParameters struct {

	// Port number to access on the container. Must be in the range 1 to 65535. If not specified, defaults to 8080.
	Port *float64 `json:"port,omitempty" tf:"port,omitempty"`

	// The name of the service to place in the gRPC HealthCheckRequest
	// (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).
	// If this is not specified, the default behavior is defined by gRPC.
	Service *string `json:"service,omitempty" tf:"service,omitempty"`
}

type LivenessProbeGRPCObservation struct {

	// Port number to access on the container. Must be in the range 1 to 65535. If not specified, defaults to 8080.
	Port *float64 `json:"port,omitempty" tf:"port,omitempty"`

	// The name of the service to place in the gRPC HealthCheckRequest
	// (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).
	// If this is not specified, the default behavior is defined by gRPC.
	Service *string `json:"service,omitempty" tf:"service,omitempty"`
}

type LivenessProbeGRPCParameters struct {

	// Port number to access on the container. Must be in the range 1 to 65535. If not specified, defaults to 8080.
	// +kubebuilder:validation:Optional
	Port *float64 `json:"port,omitempty" tf:"port,omitempty"`

	// The name of the service to place in the gRPC HealthCheckRequest
	// (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).
	// If this is not specified, the default behavior is defined by gRPC.
	// +kubebuilder:validation:Optional
	Service *string `json:"service,omitempty" tf:"service,omitempty"`
}

type ScalingInitParameters struct {

	// Maximum number of serving instances that this resource should have.
	MaxInstanceCount *float64 `json:"maxInstanceCount,omitempty" tf:"max_instance_count,omitempty"`

	// Minimum number of serving instances that this resource should have.
	MinInstanceCount *float64 `json:"minInstanceCount,omitempty" tf:"min_instance_count,omitempty"`
}

type ScalingObservation struct {

	// Maximum number of serving instances that this resource should have.
	MaxInstanceCount *float64 `json:"maxInstanceCount,omitempty" tf:"max_instance_count,omitempty"`

	// Minimum number of serving instances that this resource should have.
	MinInstanceCount *float64 `json:"minInstanceCount,omitempty" tf:"min_instance_count,omitempty"`
}

type ScalingParameters struct {

	// Maximum number of serving instances that this resource should have.
	// +kubebuilder:validation:Optional
	MaxInstanceCount *float64 `json:"maxInstanceCount,omitempty" tf:"max_instance_count,omitempty"`

	// Minimum number of serving instances that this resource should have.
	// +kubebuilder:validation:Optional
	MinInstanceCount *float64 `json:"minInstanceCount,omitempty" tf:"min_instance_count,omitempty"`
}

type TemplateContainersEnvInitParameters struct {

	// Volume's name.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// The header field value
	Value *string `json:"value,omitempty" tf:"value,omitempty"`

	// Source for the environment variable's value.
	// Structure is documented below.
	ValueSource []EnvValueSourceInitParameters `json:"valueSource,omitempty" tf:"value_source,omitempty"`
}

type TemplateContainersEnvObservation struct {

	// Volume's name.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// The header field value
	Value *string `json:"value,omitempty" tf:"value,omitempty"`

	// Source for the environment variable's value.
	// Structure is documented below.
	ValueSource []EnvValueSourceObservation `json:"valueSource,omitempty" tf:"value_source,omitempty"`
}

type TemplateContainersEnvParameters struct {

	// Volume's name.
	// +kubebuilder:validation:Optional
	Name *string `json:"name" tf:"name,omitempty"`

	// The header field value
	// +kubebuilder:validation:Optional
	Value *string `json:"value,omitempty" tf:"value,omitempty"`

	// Source for the environment variable's value.
	// Structure is documented below.
	// +kubebuilder:validation:Optional
	ValueSource []EnvValueSourceParameters `json:"valueSource,omitempty" tf:"value_source,omitempty"`
}

type TemplateContainersLivenessProbeInitParameters struct {

	// Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
	FailureThreshold *float64 `json:"failureThreshold,omitempty" tf:"failure_threshold,omitempty"`

	// GRPC specifies an action involving a GRPC port.
	// Structure is documented below.
	GRPC []LivenessProbeGRPCInitParameters `json:"grpc,omitempty" tf:"grpc,omitempty"`

	// HTTPGet specifies the http request to perform. Exactly one of HTTPGet or TCPSocket must be specified.
	// Structure is documented below.
	HTTPGet []ContainersLivenessProbeHTTPGetInitParameters `json:"httpGet,omitempty" tf:"http_get,omitempty"`

	// Number of seconds after the container has started before the probe is initiated. Defaults to 0 seconds. Minimum value is 0. Maximum value for liveness probe is 3600. Maximum value for startup probe is 240. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
	InitialDelaySeconds *float64 `json:"initialDelaySeconds,omitempty" tf:"initial_delay_seconds,omitempty"`

	// How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1. Maximum value for liveness probe is 3600. Maximum value for startup probe is 240. Must be greater or equal than timeoutSeconds
	PeriodSeconds *float64 `json:"periodSeconds,omitempty" tf:"period_seconds,omitempty"`

	// TCPSocket specifies an action involving a TCP port. Exactly one of HTTPGet or TCPSocket must be specified.
	// Structure is documented below.
	TCPSocket []ContainersLivenessProbeTCPSocketInitParameters `json:"tcpSocket,omitempty" tf:"tcp_socket,omitempty"`

	// Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. Maximum value is 3600. Must be smaller than periodSeconds. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
	TimeoutSeconds *float64 `json:"timeoutSeconds,omitempty" tf:"timeout_seconds,omitempty"`
}

type TemplateContainersLivenessProbeObservation struct {

	// Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
	FailureThreshold *float64 `json:"failureThreshold,omitempty" tf:"failure_threshold,omitempty"`

	// GRPC specifies an action involving a GRPC port.
	// Structure is documented below.
	GRPC []LivenessProbeGRPCObservation `json:"grpc,omitempty" tf:"grpc,omitempty"`

	// HTTPGet specifies the http request to perform. Exactly one of HTTPGet or TCPSocket must be specified.
	// Structure is documented below.
	HTTPGet []ContainersLivenessProbeHTTPGetObservation `json:"httpGet,omitempty" tf:"http_get,omitempty"`

	// Number of seconds after the container has started before the probe is initiated. Defaults to 0 seconds. Minimum value is 0. Maximum value for liveness probe is 3600. Maximum value for startup probe is 240. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
	InitialDelaySeconds *float64 `json:"initialDelaySeconds,omitempty" tf:"initial_delay_seconds,omitempty"`

	// How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1. Maximum value for liveness probe is 3600. Maximum value for startup probe is 240. Must be greater or equal than timeoutSeconds
	PeriodSeconds *float64 `json:"periodSeconds,omitempty" tf:"period_seconds,omitempty"`

	// TCPSocket specifies an action involving a TCP port. Exactly one of HTTPGet or TCPSocket must be specified.
	// Structure is documented below.
	TCPSocket []ContainersLivenessProbeTCPSocketObservation `json:"tcpSocket,omitempty" tf:"tcp_socket,omitempty"`

	// Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. Maximum value is 3600. Must be smaller than periodSeconds. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
	TimeoutSeconds *float64 `json:"timeoutSeconds,omitempty" tf:"timeout_seconds,omitempty"`
}

type TemplateContainersLivenessProbeParameters struct {

	// Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
	// +kubebuilder:validation:Optional
	FailureThreshold *float64 `json:"failureThreshold,omitempty" tf:"failure_threshold,omitempty"`

	// GRPC specifies an action involving a GRPC port.
	// Structure is documented below.
	// +kubebuilder:validation:Optional
	GRPC []LivenessProbeGRPCParameters `json:"grpc,omitempty" tf:"grpc,omitempty"`

	// HTTPGet specifies the http request to perform. Exactly one of HTTPGet or TCPSocket must be specified.
	// Structure is documented below.
	// +kubebuilder:validation:Optional
	HTTPGet []ContainersLivenessProbeHTTPGetParameters `json:"httpGet,omitempty" tf:"http_get,omitempty"`

	// Number of seconds after the container has started before the probe is initiated. Defaults to 0 seconds. Minimum value is 0. Maximum value for liveness probe is 3600. Maximum value for startup probe is 240. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
	// +kubebuilder:validation:Optional
	InitialDelaySeconds *float64 `json:"initialDelaySeconds,omitempty" tf:"initial_delay_seconds,omitempty"`

	// How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1. Maximum value for liveness probe is 3600. Maximum value for startup probe is 240. Must be greater or equal than timeoutSeconds
	// +kubebuilder:validation:Optional
	PeriodSeconds *float64 `json:"periodSeconds,omitempty" tf:"period_seconds,omitempty"`

	// TCPSocket specifies an action involving a TCP port. Exactly one of HTTPGet or TCPSocket must be specified.
	// Structure is documented below.
	// +kubebuilder:validation:Optional
	TCPSocket []ContainersLivenessProbeTCPSocketParameters `json:"tcpSocket,omitempty" tf:"tcp_socket,omitempty"`

	// Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. Maximum value is 3600. Must be smaller than periodSeconds. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
	// +kubebuilder:validation:Optional
	TimeoutSeconds *float64 `json:"timeoutSeconds,omitempty" tf:"timeout_seconds,omitempty"`
}

type TemplateContainersPortsInitParameters struct {

	// Port number the container listens on. This must be a valid TCP port number, 0 < containerPort < 65536.
	ContainerPort *float64 `json:"containerPort,omitempty" tf:"container_port,omitempty"`

	// Volume's name.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`
}

type TemplateContainersPortsObservation struct {

	// Port number the container listens on. This must be a valid TCP port number, 0 < containerPort < 65536.
	ContainerPort *float64 `json:"containerPort,omitempty" tf:"container_port,omitempty"`

	// Volume's name.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`
}

type TemplateContainersPortsParameters struct {

	// Port number the container listens on. This must be a valid TCP port number, 0 < containerPort < 65536.
	// +kubebuilder:validation:Optional
	ContainerPort *float64 `json:"containerPort,omitempty" tf:"container_port,omitempty"`

	// Volume's name.
	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`
}

type TemplateContainersResourcesInitParameters struct {

	// Determines whether CPU should be throttled or not outside of requests.
	CPUIdle *bool `json:"cpuIdle,omitempty" tf:"cpu_idle,omitempty"`

	// Only memory and CPU are supported. Note: The only supported values for CPU are '1', '2', '4', and '8'. Setting 4 CPU requires at least 2Gi of memory. The values of the map is string form of the 'quantity' k8s type: https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/apimachinery/pkg/api/resource/quantity.go
	// +mapType=granular
	Limits map[string]*string `json:"limits,omitempty" tf:"limits,omitempty"`

	// Determines whether CPU should be boosted on startup of a new container instance above the requested CPU threshold, this can help reduce cold-start latency.
	StartupCPUBoost *bool `json:"startupCpuBoost,omitempty" tf:"startup_cpu_boost,omitempty"`
}

type TemplateContainersResourcesObservation struct {

	// Determines whether CPU should be throttled or not outside of requests.
	CPUIdle *bool `json:"cpuIdle,omitempty" tf:"cpu_idle,omitempty"`

	// Only memory and CPU are supported. Note: The only supported values for CPU are '1', '2', '4', and '8'. Setting 4 CPU requires at least 2Gi of memory. The values of the map is string form of the 'quantity' k8s type: https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/apimachinery/pkg/api/resource/quantity.go
	// +mapType=granular
	Limits map[string]*string `json:"limits,omitempty" tf:"limits,omitempty"`

	// Determines whether CPU should be boosted on startup of a new container instance above the requested CPU threshold, this can help reduce cold-start latency.
	StartupCPUBoost *bool `json:"startupCpuBoost,omitempty" tf:"startup_cpu_boost,omitempty"`
}

type TemplateContainersResourcesParameters struct {

	// Determines whether CPU should be throttled or not outside of requests.
	// +kubebuilder:validation:Optional
	CPUIdle *bool `json:"cpuIdle,omitempty" tf:"cpu_idle,omitempty"`

	// Only memory and CPU are supported. Note: The only supported values for CPU are '1', '2', '4', and '8'. Setting 4 CPU requires at least 2Gi of memory. The values of the map is string form of the 'quantity' k8s type: https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/apimachinery/pkg/api/resource/quantity.go
	// +kubebuilder:validation:Optional
	// +mapType=granular
	Limits map[string]*string `json:"limits,omitempty" tf:"limits,omitempty"`

	// Determines whether CPU should be boosted on startup of a new container instance above the requested CPU threshold, this can help reduce cold-start latency.
	// +kubebuilder:validation:Optional
	StartupCPUBoost *bool `json:"startupCpuBoost,omitempty" tf:"startup_cpu_boost,omitempty"`
}

type TemplateContainersStartupProbeHTTPGetInitParameters struct {

	// Custom headers to set in the request. HTTP allows repeated headers.
	// Structure is documented below.
	HTTPHeaders []ContainersStartupProbeHTTPGetHTTPHeadersInitParameters `json:"httpHeaders,omitempty" tf:"http_headers,omitempty"`

	// The relative path of the secret in the container.
	Path *string `json:"path,omitempty" tf:"path,omitempty"`

	// Port number to access on the container. Must be in the range 1 to 65535. If not specified, defaults to 8080.
	Port *float64 `json:"port,omitempty" tf:"port,omitempty"`
}

type TemplateContainersStartupProbeHTTPGetObservation struct {

	// Custom headers to set in the request. HTTP allows repeated headers.
	// Structure is documented below.
	HTTPHeaders []ContainersStartupProbeHTTPGetHTTPHeadersObservation `json:"httpHeaders,omitempty" tf:"http_headers,omitempty"`

	// The relative path of the secret in the container.
	Path *string `json:"path,omitempty" tf:"path,omitempty"`

	// Port number to access on the container. Must be in the range 1 to 65535. If not specified, defaults to 8080.
	Port *float64 `json:"port,omitempty" tf:"port,omitempty"`
}

type TemplateContainersStartupProbeHTTPGetParameters struct {

	// Custom headers to set in the request. HTTP allows repeated headers.
	// Structure is documented below.
	// +kubebuilder:validation:Optional
	HTTPHeaders []ContainersStartupProbeHTTPGetHTTPHeadersParameters `json:"httpHeaders,omitempty" tf:"http_headers,omitempty"`

	// The relative path of the secret in the container.
	// +kubebuilder:validation:Optional
	Path *string `json:"path,omitempty" tf:"path,omitempty"`

	// Port number to access on the container. Must be in the range 1 to 65535. If not specified, defaults to 8080.
	// +kubebuilder:validation:Optional
	Port *float64 `json:"port,omitempty" tf:"port,omitempty"`
}

type TemplateContainersStartupProbeInitParameters struct {

	// Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
	FailureThreshold *float64 `json:"failureThreshold,omitempty" tf:"failure_threshold,omitempty"`

	// GRPC specifies an action involving a GRPC port.
	// Structure is documented below.
	GRPC []ContainersStartupProbeGRPCInitParameters `json:"grpc,omitempty" tf:"grpc,omitempty"`

	// HTTPGet specifies the http request to perform. Exactly one of HTTPGet or TCPSocket must be specified.
	// Structure is documented below.
	HTTPGet []TemplateContainersStartupProbeHTTPGetInitParameters `json:"httpGet,omitempty" tf:"http_get,omitempty"`

	// Number of seconds after the container has started before the probe is initiated. Defaults to 0 seconds. Minimum value is 0. Maximum value for liveness probe is 3600. Maximum value for startup probe is 240. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
	InitialDelaySeconds *float64 `json:"initialDelaySeconds,omitempty" tf:"initial_delay_seconds,omitempty"`

	// How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1. Maximum value for liveness probe is 3600. Maximum value for startup probe is 240. Must be greater or equal than timeoutSeconds
	PeriodSeconds *float64 `json:"periodSeconds,omitempty" tf:"period_seconds,omitempty"`

	// TCPSocket specifies an action involving a TCP port. Exactly one of HTTPGet or TCPSocket must be specified.
	// Structure is documented below.
	TCPSocket []ContainersStartupProbeTCPSocketInitParameters `json:"tcpSocket,omitempty" tf:"tcp_socket,omitempty"`

	// Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. Maximum value is 3600. Must be smaller than periodSeconds. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
	TimeoutSeconds *float64 `json:"timeoutSeconds,omitempty" tf:"timeout_seconds,omitempty"`
}

type TemplateContainersStartupProbeObservation struct {

	// Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
	FailureThreshold *float64 `json:"failureThreshold,omitempty" tf:"failure_threshold,omitempty"`

	// GRPC specifies an action involving a GRPC port.
	// Structure is documented below.
	GRPC []ContainersStartupProbeGRPCObservation `json:"grpc,omitempty" tf:"grpc,omitempty"`

	// HTTPGet specifies the http request to perform. Exactly one of HTTPGet or TCPSocket must be specified.
	// Structure is documented below.
	HTTPGet []TemplateContainersStartupProbeHTTPGetObservation `json:"httpGet,omitempty" tf:"http_get,omitempty"`

	// Number of seconds after the container has started before the probe is initiated. Defaults to 0 seconds. Minimum value is 0. Maximum value for liveness probe is 3600. Maximum value for startup probe is 240. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
	InitialDelaySeconds *float64 `json:"initialDelaySeconds,omitempty" tf:"initial_delay_seconds,omitempty"`

	// How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1. Maximum value for liveness probe is 3600. Maximum value for startup probe is 240. Must be greater or equal than timeoutSeconds
	PeriodSeconds *float64 `json:"periodSeconds,omitempty" tf:"period_seconds,omitempty"`

	// TCPSocket specifies an action involving a TCP port. Exactly one of HTTPGet or TCPSocket must be specified.
	// Structure is documented below.
	TCPSocket []ContainersStartupProbeTCPSocketObservation `json:"tcpSocket,omitempty" tf:"tcp_socket,omitempty"`

	// Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. Maximum value is 3600. Must be smaller than periodSeconds. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
	TimeoutSeconds *float64 `json:"timeoutSeconds,omitempty" tf:"timeout_seconds,omitempty"`
}

type TemplateContainersStartupProbeParameters struct {

	// Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
	// +kubebuilder:validation:Optional
	FailureThreshold *float64 `json:"failureThreshold,omitempty" tf:"failure_threshold,omitempty"`

	// GRPC specifies an action involving a GRPC port.
	// Structure is documented below.
	// +kubebuilder:validation:Optional
	GRPC []ContainersStartupProbeGRPCParameters `json:"grpc,omitempty" tf:"grpc,omitempty"`

	// HTTPGet specifies the http request to perform. Exactly one of HTTPGet or TCPSocket must be specified.
	// Structure is documented below.
	// +kubebuilder:validation:Optional
	HTTPGet []TemplateContainersStartupProbeHTTPGetParameters `json:"httpGet,omitempty" tf:"http_get,omitempty"`

	// Number of seconds after the container has started before the probe is initiated. Defaults to 0 seconds. Minimum value is 0. Maximum value for liveness probe is 3600. Maximum value for startup probe is 240. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
	// +kubebuilder:validation:Optional
	InitialDelaySeconds *float64 `json:"initialDelaySeconds,omitempty" tf:"initial_delay_seconds,omitempty"`

	// How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1. Maximum value for liveness probe is 3600. Maximum value for startup probe is 240. Must be greater or equal than timeoutSeconds
	// +kubebuilder:validation:Optional
	PeriodSeconds *float64 `json:"periodSeconds,omitempty" tf:"period_seconds,omitempty"`

	// TCPSocket specifies an action involving a TCP port. Exactly one of HTTPGet or TCPSocket must be specified.
	// Structure is documented below.
	// +kubebuilder:validation:Optional
	TCPSocket []ContainersStartupProbeTCPSocketParameters `json:"tcpSocket,omitempty" tf:"tcp_socket,omitempty"`

	// Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. Maximum value is 3600. Must be smaller than periodSeconds. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
	// +kubebuilder:validation:Optional
	TimeoutSeconds *float64 `json:"timeoutSeconds,omitempty" tf:"timeout_seconds,omitempty"`
}

type TemplateContainersVolumeMountsInitParameters struct {

	// Path within the container at which the volume should be mounted. Must not contain ':'. For Cloud SQL volumes, it can be left empty, or must otherwise be /cloudsql. All instances defined in the Volume will be available as /cloudsql/[instance]. For more information on Cloud SQL volumes, visit https://cloud.google.com/sql/docs/mysql/connect-run
	MountPath *string `json:"mountPath,omitempty" tf:"mount_path,omitempty"`

	// Volume's name.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`
}

type TemplateContainersVolumeMountsObservation struct {

	// Path within the container at which the volume should be mounted. Must not contain ':'. For Cloud SQL volumes, it can be left empty, or must otherwise be /cloudsql. All instances defined in the Volume will be available as /cloudsql/[instance]. For more information on Cloud SQL volumes, visit https://cloud.google.com/sql/docs/mysql/connect-run
	MountPath *string `json:"mountPath,omitempty" tf:"mount_path,omitempty"`

	// Volume's name.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`
}

type TemplateContainersVolumeMountsParameters struct {

	// Path within the container at which the volume should be mounted. Must not contain ':'. For Cloud SQL volumes, it can be left empty, or must otherwise be /cloudsql. All instances defined in the Volume will be available as /cloudsql/[instance]. For more information on Cloud SQL volumes, visit https://cloud.google.com/sql/docs/mysql/connect-run
	// +kubebuilder:validation:Optional
	MountPath *string `json:"mountPath" tf:"mount_path,omitempty"`

	// Volume's name.
	// +kubebuilder:validation:Optional
	Name *string `json:"name" tf:"name,omitempty"`
}

type TemplateVPCAccessInitParameters struct {

	// VPC Access connector name. Format: projects/{project}/locations/{location}/connectors/{connector}, where {project} can be project id or number.
	Connector *string `json:"connector,omitempty" tf:"connector,omitempty"`

	// Traffic VPC egress settings.
	// Possible values are: ALL_TRAFFIC, PRIVATE_RANGES_ONLY.
	Egress *string `json:"egress,omitempty" tf:"egress,omitempty"`
}

type TemplateVPCAccessObservation struct {

	// VPC Access connector name. Format: projects/{project}/locations/{location}/connectors/{connector}, where {project} can be project id or number.
	Connector *string `json:"connector,omitempty" tf:"connector,omitempty"`

	// Traffic VPC egress settings.
	// Possible values are: ALL_TRAFFIC, PRIVATE_RANGES_ONLY.
	Egress *string `json:"egress,omitempty" tf:"egress,omitempty"`
}

type TemplateVPCAccessParameters struct {

	// VPC Access connector name. Format: projects/{project}/locations/{location}/connectors/{connector}, where {project} can be project id or number.
	// +kubebuilder:validation:Optional
	Connector *string `json:"connector,omitempty" tf:"connector,omitempty"`

	// Traffic VPC egress settings.
	// Possible values are: ALL_TRAFFIC, PRIVATE_RANGES_ONLY.
	// +kubebuilder:validation:Optional
	Egress *string `json:"egress,omitempty" tf:"egress,omitempty"`
}

type TemplateVolumesSecretInitParameters struct {

	// Integer representation of mode bits to use on created files by default. Must be a value between 0000 and 0777 (octal), defaulting to 0444. Directories within the path are not affected by this setting.
	DefaultMode *float64 `json:"defaultMode,omitempty" tf:"default_mode,omitempty"`

	// If unspecified, the volume will expose a file whose name is the secret, relative to VolumeMount.mount_path. If specified, the key will be used as the version to fetch from Cloud Secret Manager and the path will be the name of the file exposed in the volume. When items are defined, they must specify a path and a version.
	// Structure is documented below.
	Items []VolumesSecretItemsInitParameters `json:"items,omitempty" tf:"items,omitempty"`

	// Secret represents a secret that should populate this volume. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret
	// Structure is documented below.
	// +crossplane:generate:reference:type=github.com/upbound/provider-gcp/apis/secretmanager/v1beta1.Secret
	Secret *string `json:"secret,omitempty" tf:"secret,omitempty"`

	// Reference to a Secret in secretmanager to populate secret.
	// +kubebuilder:validation:Optional
	SecretRef *v1.Reference `json:"secretRef,omitempty" tf:"-"`

	// Selector for a Secret in secretmanager to populate secret.
	// +kubebuilder:validation:Optional
	SecretSelector *v1.Selector `json:"secretSelector,omitempty" tf:"-"`
}

type TemplateVolumesSecretObservation struct {

	// Integer representation of mode bits to use on created files by default. Must be a value between 0000 and 0777 (octal), defaulting to 0444. Directories within the path are not affected by this setting.
	DefaultMode *float64 `json:"defaultMode,omitempty" tf:"default_mode,omitempty"`

	// If unspecified, the volume will expose a file whose name is the secret, relative to VolumeMount.mount_path. If specified, the key will be used as the version to fetch from Cloud Secret Manager and the path will be the name of the file exposed in the volume. When items are defined, they must specify a path and a version.
	// Structure is documented below.
	Items []VolumesSecretItemsObservation `json:"items,omitempty" tf:"items,omitempty"`

	// Secret represents a secret that should populate this volume. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret
	// Structure is documented below.
	Secret *string `json:"secret,omitempty" tf:"secret,omitempty"`
}

type TemplateVolumesSecretParameters struct {

	// Integer representation of mode bits to use on created files by default. Must be a value between 0000 and 0777 (octal), defaulting to 0444. Directories within the path are not affected by this setting.
	// +kubebuilder:validation:Optional
	DefaultMode *float64 `json:"defaultMode,omitempty" tf:"default_mode,omitempty"`

	// If unspecified, the volume will expose a file whose name is the secret, relative to VolumeMount.mount_path. If specified, the key will be used as the version to fetch from Cloud Secret Manager and the path will be the name of the file exposed in the volume. When items are defined, they must specify a path and a version.
	// Structure is documented below.
	// +kubebuilder:validation:Optional
	Items []VolumesSecretItemsParameters `json:"items,omitempty" tf:"items,omitempty"`

	// Secret represents a secret that should populate this volume. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret
	// Structure is documented below.
	// +crossplane:generate:reference:type=github.com/upbound/provider-gcp/apis/secretmanager/v1beta1.Secret
	// +kubebuilder:validation:Optional
	Secret *string `json:"secret,omitempty" tf:"secret,omitempty"`

	// Reference to a Secret in secretmanager to populate secret.
	// +kubebuilder:validation:Optional
	SecretRef *v1.Reference `json:"secretRef,omitempty" tf:"-"`

	// Selector for a Secret in secretmanager to populate secret.
	// +kubebuilder:validation:Optional
	SecretSelector *v1.Selector `json:"secretSelector,omitempty" tf:"-"`
}

type TrafficStatusesInitParameters struct {
}

type TrafficStatusesObservation struct {

	// (Output)
	// Specifies percent of the traffic to this Revision.
	Percent *float64 `json:"percent,omitempty" tf:"percent,omitempty"`

	// (Output)
	// Revision to which this traffic is sent.
	Revision *string `json:"revision,omitempty" tf:"revision,omitempty"`

	// (Output)
	// Indicates the string used in the URI to exclusively reference this target.
	Tag *string `json:"tag,omitempty" tf:"tag,omitempty"`

	// (Output)
	// The allocation type for this traffic target.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	// (Output)
	// Displays the target URI.
	URI *string `json:"uri,omitempty" tf:"uri,omitempty"`
}

type TrafficStatusesParameters struct {
}

type V2ServiceBinaryAuthorizationInitParameters struct {

	// If present, indicates to use Breakglass using this justification. If useDefault is False, then it must be empty. For more information on breakglass, see https://cloud.google.com/binary-authorization/docs/using-breakglass
	BreakglassJustification *string `json:"breakglassJustification,omitempty" tf:"breakglass_justification,omitempty"`

	// If True, indicates to use the default project's binary authorization policy. If False, binary authorization will be disabled.
	UseDefault *bool `json:"useDefault,omitempty" tf:"use_default,omitempty"`
}

type V2ServiceBinaryAuthorizationObservation struct {

	// If present, indicates to use Breakglass using this justification. If useDefault is False, then it must be empty. For more information on breakglass, see https://cloud.google.com/binary-authorization/docs/using-breakglass
	BreakglassJustification *string `json:"breakglassJustification,omitempty" tf:"breakglass_justification,omitempty"`

	// If True, indicates to use the default project's binary authorization policy. If False, binary authorization will be disabled.
	UseDefault *bool `json:"useDefault,omitempty" tf:"use_default,omitempty"`
}

type V2ServiceBinaryAuthorizationParameters struct {

	// If present, indicates to use Breakglass using this justification. If useDefault is False, then it must be empty. For more information on breakglass, see https://cloud.google.com/binary-authorization/docs/using-breakglass
	// +kubebuilder:validation:Optional
	BreakglassJustification *string `json:"breakglassJustification,omitempty" tf:"breakglass_justification,omitempty"`

	// If True, indicates to use the default project's binary authorization policy. If False, binary authorization will be disabled.
	// +kubebuilder:validation:Optional
	UseDefault *bool `json:"useDefault,omitempty" tf:"use_default,omitempty"`
}

type V2ServiceConditionsInitParameters struct {
}

type V2ServiceConditionsObservation struct {

	// (Output)
	// A reason for the execution condition.
	ExecutionReason *string `json:"executionReason,omitempty" tf:"execution_reason,omitempty"`

	// (Output)
	// Last time the condition transitioned from one status to another.
	// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine fractional digits. Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".
	LastTransitionTime *string `json:"lastTransitionTime,omitempty" tf:"last_transition_time,omitempty"`

	// (Output)
	// Human readable message indicating details about the current status.
	Message *string `json:"message,omitempty" tf:"message,omitempty"`

	// (Output)
	// A common (service-level) reason for this condition.
	Reason *string `json:"reason,omitempty" tf:"reason,omitempty"`

	// (Output)
	// A reason for the revision condition.
	RevisionReason *string `json:"revisionReason,omitempty" tf:"revision_reason,omitempty"`

	// (Output)
	// How to interpret failures of this condition, one of Error, Warning, Info
	Severity *string `json:"severity,omitempty" tf:"severity,omitempty"`

	// (Output)
	// State of the condition.
	State *string `json:"state,omitempty" tf:"state,omitempty"`

	// (Output)
	// type is used to communicate the status of the reconciliation process. See also: https://github.com/knative/serving/blob/main/docs/spec/errors.md#error-conditions-and-reporting Types common to all resources include: * "Ready": True when the Resource is ready.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type V2ServiceConditionsParameters struct {
}

type V2ServiceInitParameters struct {

	// Unstructured key value map that may be set by external tools to store and arbitrary metadata. They are not queryable and should be preserved when modifying objects.
	// Cloud Run API v2 does not support annotations with run.googleapis.com, cloud.googleapis.com, serving.knative.dev, or autoscaling.knative.dev namespaces, and they will be rejected.
	// All system annotations in v1 now have a corresponding field in v2 RevisionTemplate.
	// This field follows Kubernetes annotations' namespacing, limits, and rules.
	// +mapType=granular
	Annotations map[string]*string `json:"annotations,omitempty" tf:"annotations,omitempty"`

	// Settings for the Binary Authorization feature.
	// Structure is documented below.
	BinaryAuthorization []V2ServiceBinaryAuthorizationInitParameters `json:"binaryAuthorization,omitempty" tf:"binary_authorization,omitempty"`

	// Arbitrary identifier for the API client.
	Client *string `json:"client,omitempty" tf:"client,omitempty"`

	// Arbitrary version identifier for the API client.
	ClientVersion *string `json:"clientVersion,omitempty" tf:"client_version,omitempty"`

	// User-provided description of the Service. This field currently has a 512-character limit.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// Provides the ingress settings for this Service. On output, returns the currently observed ingress settings, or INGRESS_TRAFFIC_UNSPECIFIED if no revision is active.
	// Possible values are: INGRESS_TRAFFIC_ALL, INGRESS_TRAFFIC_INTERNAL_ONLY, INGRESS_TRAFFIC_INTERNAL_LOAD_BALANCER.
	Ingress *string `json:"ingress,omitempty" tf:"ingress,omitempty"`

	// Unstructured key value map that can be used to organize and categorize objects. User-provided labels are shared with Google's billing system, so they can be used to filter, or break down billing charges by team, component, environment, state, etc.
	// For more information, visit https://cloud.google.com/resource-manager/docs/creating-managing-labels or https://cloud.google.com/run/docs/configuring/labels.
	// Cloud Run API v2 does not support labels with run.googleapis.com, cloud.googleapis.com, serving.knative.dev, or autoscaling.knative.dev namespaces, and they will be rejected.
	// All system labels in v1 now have a corresponding field in v2 RevisionTemplate.
	// +mapType=granular
	Labels map[string]*string `json:"labels,omitempty" tf:"labels,omitempty"`

	// The launch stage as defined by Google Cloud Platform Launch Stages. Cloud Run supports ALPHA, BETA, and GA.
	// If no value is specified, GA is assumed. Set the launch stage to a preview stage on input to allow use of preview features in that stage. On read (or output), describes whether the resource uses preview features.
	// For example, if ALPHA is provided as input, but only BETA and GA-level features are used, this field will be BETA on output.
	// Possible values are: UNIMPLEMENTED, PRELAUNCH, EARLY_ACCESS, ALPHA, BETA, GA, DEPRECATED.
	LaunchStage *string `json:"launchStage,omitempty" tf:"launch_stage,omitempty"`

	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project *string `json:"project,omitempty" tf:"project,omitempty"`

	// The template used to create revisions for this Service.
	// Structure is documented below.
	Template []V2ServiceTemplateInitParameters `json:"template,omitempty" tf:"template,omitempty"`

	// Specifies how to distribute traffic over a collection of Revisions belonging to the Service. If traffic is empty or not provided, defaults to 100% traffic to the latest Ready Revision.
	// Structure is documented below.
	Traffic []V2ServiceTrafficInitParameters `json:"traffic,omitempty" tf:"traffic,omitempty"`
}

type V2ServiceObservation struct {

	// Unstructured key value map that may be set by external tools to store and arbitrary metadata. They are not queryable and should be preserved when modifying objects.
	// Cloud Run API v2 does not support annotations with run.googleapis.com, cloud.googleapis.com, serving.knative.dev, or autoscaling.knative.dev namespaces, and they will be rejected.
	// All system annotations in v1 now have a corresponding field in v2 RevisionTemplate.
	// This field follows Kubernetes annotations' namespacing, limits, and rules.
	// +mapType=granular
	Annotations map[string]*string `json:"annotations,omitempty" tf:"annotations,omitempty"`

	// Settings for the Binary Authorization feature.
	// Structure is documented below.
	BinaryAuthorization []V2ServiceBinaryAuthorizationObservation `json:"binaryAuthorization,omitempty" tf:"binary_authorization,omitempty"`

	// Arbitrary identifier for the API client.
	Client *string `json:"client,omitempty" tf:"client,omitempty"`

	// Arbitrary version identifier for the API client.
	ClientVersion *string `json:"clientVersion,omitempty" tf:"client_version,omitempty"`

	// The Conditions of all other associated sub-resources. They contain additional diagnostics information in case the Service does not reach its Serving state. See comments in reconciling for additional information on reconciliation process in Cloud Run.
	// Structure is documented below.
	Conditions []V2ServiceConditionsObservation `json:"conditions,omitempty" tf:"conditions,omitempty"`

	// User-provided description of the Service. This field currently has a 512-character limit.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// A system-generated fingerprint for this version of the resource. May be used to detect modification conflict during updates.
	Etag *string `json:"etag,omitempty" tf:"etag,omitempty"`

	// A number that monotonically increases every time the user modifies the desired state. Please note that unlike v1, this is an int64 value. As with most Google APIs, its JSON representation will be a string instead of an integer.
	Generation *string `json:"generation,omitempty" tf:"generation,omitempty"`

	// an identifier for the resource with format projects/{{project}}/locations/{{location}}/services/{{name}}
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// Provides the ingress settings for this Service. On output, returns the currently observed ingress settings, or INGRESS_TRAFFIC_UNSPECIFIED if no revision is active.
	// Possible values are: INGRESS_TRAFFIC_ALL, INGRESS_TRAFFIC_INTERNAL_ONLY, INGRESS_TRAFFIC_INTERNAL_LOAD_BALANCER.
	Ingress *string `json:"ingress,omitempty" tf:"ingress,omitempty"`

	// Unstructured key value map that can be used to organize and categorize objects. User-provided labels are shared with Google's billing system, so they can be used to filter, or break down billing charges by team, component, environment, state, etc.
	// For more information, visit https://cloud.google.com/resource-manager/docs/creating-managing-labels or https://cloud.google.com/run/docs/configuring/labels.
	// Cloud Run API v2 does not support labels with run.googleapis.com, cloud.googleapis.com, serving.knative.dev, or autoscaling.knative.dev namespaces, and they will be rejected.
	// All system labels in v1 now have a corresponding field in v2 RevisionTemplate.
	// +mapType=granular
	Labels map[string]*string `json:"labels,omitempty" tf:"labels,omitempty"`

	// Name of the last created revision. See comments in reconciling for additional information on reconciliation process in Cloud Run.
	LatestCreatedRevision *string `json:"latestCreatedRevision,omitempty" tf:"latest_created_revision,omitempty"`

	// Name of the latest revision that is serving traffic. See comments in reconciling for additional information on reconciliation process in Cloud Run.
	LatestReadyRevision *string `json:"latestReadyRevision,omitempty" tf:"latest_ready_revision,omitempty"`

	// The launch stage as defined by Google Cloud Platform Launch Stages. Cloud Run supports ALPHA, BETA, and GA.
	// If no value is specified, GA is assumed. Set the launch stage to a preview stage on input to allow use of preview features in that stage. On read (or output), describes whether the resource uses preview features.
	// For example, if ALPHA is provided as input, but only BETA and GA-level features are used, this field will be BETA on output.
	// Possible values are: UNIMPLEMENTED, PRELAUNCH, EARLY_ACCESS, ALPHA, BETA, GA, DEPRECATED.
	LaunchStage *string `json:"launchStage,omitempty" tf:"launch_stage,omitempty"`

	// The location of the cloud run service
	Location *string `json:"location,omitempty" tf:"location,omitempty"`

	// The generation of this Service currently serving traffic. See comments in reconciling for additional information on reconciliation process in Cloud Run. Please note that unlike v1, this is an int64 value. As with most Google APIs, its JSON representation will be a string instead of an integer.
	ObservedGeneration *string `json:"observedGeneration,omitempty" tf:"observed_generation,omitempty"`

	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project *string `json:"project,omitempty" tf:"project,omitempty"`

	// Returns true if the Service is currently being acted upon by the system to bring it into the desired state.
	// When a new Service is created, or an existing one is updated, Cloud Run will asynchronously perform all necessary steps to bring the Service to the desired serving state. This process is called reconciliation. While reconciliation is in process, observedGeneration, latest_ready_revison, trafficStatuses, and uri will have transient values that might mismatch the intended state: Once reconciliation is over (and this field is false), there are two possible outcomes: reconciliation succeeded and the serving state matches the Service, or there was an error, and reconciliation failed. This state can be found in terminalCondition.state.
	// If reconciliation succeeded, the following fields will match: traffic and trafficStatuses, observedGeneration and generation, latestReadyRevision and latestCreatedRevision.
	// If reconciliation failed, trafficStatuses, observedGeneration, and latestReadyRevision will have the state of the last serving revision, or empty for newly created Services. Additional information on the failure can be found in terminalCondition and conditions.
	Reconciling *bool `json:"reconciling,omitempty" tf:"reconciling,omitempty"`

	// The template used to create revisions for this Service.
	// Structure is documented below.
	Template []V2ServiceTemplateObservation `json:"template,omitempty" tf:"template,omitempty"`

	// The Condition of this Service, containing its readiness status, and detailed error information in case it did not reach a serving state. See comments in reconciling for additional information on reconciliation process in Cloud Run.
	// Structure is documented below.
	TerminalCondition []V2ServiceTerminalConditionObservation `json:"terminalCondition,omitempty" tf:"terminal_condition,omitempty"`

	// Specifies how to distribute traffic over a collection of Revisions belonging to the Service. If traffic is empty or not provided, defaults to 100% traffic to the latest Ready Revision.
	// Structure is documented below.
	Traffic []V2ServiceTrafficObservation `json:"traffic,omitempty" tf:"traffic,omitempty"`

	// Detailed status information for corresponding traffic targets. See comments in reconciling for additional information on reconciliation process in Cloud Run.
	// Structure is documented below.
	TrafficStatuses []TrafficStatusesObservation `json:"trafficStatuses,omitempty" tf:"traffic_statuses,omitempty"`

	// Server assigned unique identifier for the trigger. The value is a UUID4 string and guaranteed to remain unchanged until the resource is deleted.
	UID *string `json:"uid,omitempty" tf:"uid,omitempty"`

	// The main URI in which this Service is serving traffic.
	URI *string `json:"uri,omitempty" tf:"uri,omitempty"`
}

type V2ServiceParameters struct {

	// Unstructured key value map that may be set by external tools to store and arbitrary metadata. They are not queryable and should be preserved when modifying objects.
	// Cloud Run API v2 does not support annotations with run.googleapis.com, cloud.googleapis.com, serving.knative.dev, or autoscaling.knative.dev namespaces, and they will be rejected.
	// All system annotations in v1 now have a corresponding field in v2 RevisionTemplate.
	// This field follows Kubernetes annotations' namespacing, limits, and rules.
	// +kubebuilder:validation:Optional
	// +mapType=granular
	Annotations map[string]*string `json:"annotations,omitempty" tf:"annotations,omitempty"`

	// Settings for the Binary Authorization feature.
	// Structure is documented below.
	// +kubebuilder:validation:Optional
	BinaryAuthorization []V2ServiceBinaryAuthorizationParameters `json:"binaryAuthorization,omitempty" tf:"binary_authorization,omitempty"`

	// Arbitrary identifier for the API client.
	// +kubebuilder:validation:Optional
	Client *string `json:"client,omitempty" tf:"client,omitempty"`

	// Arbitrary version identifier for the API client.
	// +kubebuilder:validation:Optional
	ClientVersion *string `json:"clientVersion,omitempty" tf:"client_version,omitempty"`

	// User-provided description of the Service. This field currently has a 512-character limit.
	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// Provides the ingress settings for this Service. On output, returns the currently observed ingress settings, or INGRESS_TRAFFIC_UNSPECIFIED if no revision is active.
	// Possible values are: INGRESS_TRAFFIC_ALL, INGRESS_TRAFFIC_INTERNAL_ONLY, INGRESS_TRAFFIC_INTERNAL_LOAD_BALANCER.
	// +kubebuilder:validation:Optional
	Ingress *string `json:"ingress,omitempty" tf:"ingress,omitempty"`

	// Unstructured key value map that can be used to organize and categorize objects. User-provided labels are shared with Google's billing system, so they can be used to filter, or break down billing charges by team, component, environment, state, etc.
	// For more information, visit https://cloud.google.com/resource-manager/docs/creating-managing-labels or https://cloud.google.com/run/docs/configuring/labels.
	// Cloud Run API v2 does not support labels with run.googleapis.com, cloud.googleapis.com, serving.knative.dev, or autoscaling.knative.dev namespaces, and they will be rejected.
	// All system labels in v1 now have a corresponding field in v2 RevisionTemplate.
	// +kubebuilder:validation:Optional
	// +mapType=granular
	Labels map[string]*string `json:"labels,omitempty" tf:"labels,omitempty"`

	// The launch stage as defined by Google Cloud Platform Launch Stages. Cloud Run supports ALPHA, BETA, and GA.
	// If no value is specified, GA is assumed. Set the launch stage to a preview stage on input to allow use of preview features in that stage. On read (or output), describes whether the resource uses preview features.
	// For example, if ALPHA is provided as input, but only BETA and GA-level features are used, this field will be BETA on output.
	// Possible values are: UNIMPLEMENTED, PRELAUNCH, EARLY_ACCESS, ALPHA, BETA, GA, DEPRECATED.
	// +kubebuilder:validation:Optional
	LaunchStage *string `json:"launchStage,omitempty" tf:"launch_stage,omitempty"`

	// The location of the cloud run service
	// +kubebuilder:validation:Optional
	Location *string `json:"location,omitempty" tf:"location,omitempty"`

	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	// +kubebuilder:validation:Optional
	Project *string `json:"project,omitempty" tf:"project,omitempty"`

	// The template used to create revisions for this Service.
	// Structure is documented below.
	// +kubebuilder:validation:Optional
	Template []V2ServiceTemplateParameters `json:"template,omitempty" tf:"template,omitempty"`

	// Specifies how to distribute traffic over a collection of Revisions belonging to the Service. If traffic is empty or not provided, defaults to 100% traffic to the latest Ready Revision.
	// Structure is documented below.
	// +kubebuilder:validation:Optional
	Traffic []V2ServiceTrafficParameters `json:"traffic,omitempty" tf:"traffic,omitempty"`
}

type V2ServiceTemplateContainersInitParameters struct {

	// Arguments to the entrypoint. The docker image's CMD is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell
	Args []*string `json:"args,omitempty" tf:"args,omitempty"`

	// Entrypoint array. Not executed within a shell. The docker image's ENTRYPOINT is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell
	Command []*string `json:"command,omitempty" tf:"command,omitempty"`

	// List of environment variables to set in the container.
	// Structure is documented below.
	Env []TemplateContainersEnvInitParameters `json:"env,omitempty" tf:"env,omitempty"`

	// URL of the Container image in Google Container Registry or Google Artifact Registry. More info: https://kubernetes.io/docs/concepts/containers/images
	Image *string `json:"image,omitempty" tf:"image,omitempty"`

	// Periodic probe of container liveness. Container will be restarted if the probe fails. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
	// Structure is documented below.
	LivenessProbe []TemplateContainersLivenessProbeInitParameters `json:"livenessProbe,omitempty" tf:"liveness_probe,omitempty"`

	// Volume's name.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// List of ports to expose from the container. Only a single port can be specified. The specified ports must be listening on all interfaces (0.0.0.0) within the container to be accessible.
	// If omitted, a port number will be chosen and passed to the container through the PORT environment variable for the container to listen on
	// Structure is documented below.
	Ports []TemplateContainersPortsInitParameters `json:"ports,omitempty" tf:"ports,omitempty"`

	// Compute Resource requirements by this container. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources
	// Structure is documented below.
	Resources []TemplateContainersResourcesInitParameters `json:"resources,omitempty" tf:"resources,omitempty"`

	// Startup probe of application within the container. All other probes are disabled if a startup probe is provided, until it succeeds. Container will not be added to service endpoints if the probe fails. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
	// Structure is documented below.
	StartupProbe []TemplateContainersStartupProbeInitParameters `json:"startupProbe,omitempty" tf:"startup_probe,omitempty"`

	// Volume to mount into the container's filesystem.
	// Structure is documented below.
	VolumeMounts []TemplateContainersVolumeMountsInitParameters `json:"volumeMounts,omitempty" tf:"volume_mounts,omitempty"`

	// Container's working directory. If not specified, the container runtime's default will be used, which might be configured in the container image.
	WorkingDir *string `json:"workingDir,omitempty" tf:"working_dir,omitempty"`
}

type V2ServiceTemplateContainersObservation struct {

	// Arguments to the entrypoint. The docker image's CMD is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell
	Args []*string `json:"args,omitempty" tf:"args,omitempty"`

	// Entrypoint array. Not executed within a shell. The docker image's ENTRYPOINT is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell
	Command []*string `json:"command,omitempty" tf:"command,omitempty"`

	// List of environment variables to set in the container.
	// Structure is documented below.
	Env []TemplateContainersEnvObservation `json:"env,omitempty" tf:"env,omitempty"`

	// URL of the Container image in Google Container Registry or Google Artifact Registry. More info: https://kubernetes.io/docs/concepts/containers/images
	Image *string `json:"image,omitempty" tf:"image,omitempty"`

	// Periodic probe of container liveness. Container will be restarted if the probe fails. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
	// Structure is documented below.
	LivenessProbe []TemplateContainersLivenessProbeObservation `json:"livenessProbe,omitempty" tf:"liveness_probe,omitempty"`

	// Volume's name.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// List of ports to expose from the container. Only a single port can be specified. The specified ports must be listening on all interfaces (0.0.0.0) within the container to be accessible.
	// If omitted, a port number will be chosen and passed to the container through the PORT environment variable for the container to listen on
	// Structure is documented below.
	Ports []TemplateContainersPortsObservation `json:"ports,omitempty" tf:"ports,omitempty"`

	// Compute Resource requirements by this container. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources
	// Structure is documented below.
	Resources []TemplateContainersResourcesObservation `json:"resources,omitempty" tf:"resources,omitempty"`

	// Startup probe of application within the container. All other probes are disabled if a startup probe is provided, until it succeeds. Container will not be added to service endpoints if the probe fails. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
	// Structure is documented below.
	StartupProbe []TemplateContainersStartupProbeObservation `json:"startupProbe,omitempty" tf:"startup_probe,omitempty"`

	// Volume to mount into the container's filesystem.
	// Structure is documented below.
	VolumeMounts []TemplateContainersVolumeMountsObservation `json:"volumeMounts,omitempty" tf:"volume_mounts,omitempty"`

	// Container's working directory. If not specified, the container runtime's default will be used, which might be configured in the container image.
	WorkingDir *string `json:"workingDir,omitempty" tf:"working_dir,omitempty"`
}

type V2ServiceTemplateContainersParameters struct {

	// Arguments to the entrypoint. The docker image's CMD is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell
	// +kubebuilder:validation:Optional
	Args []*string `json:"args,omitempty" tf:"args,omitempty"`

	// Entrypoint array. Not executed within a shell. The docker image's ENTRYPOINT is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell
	// +kubebuilder:validation:Optional
	Command []*string `json:"command,omitempty" tf:"command,omitempty"`

	// List of environment variables to set in the container.
	// Structure is documented below.
	// +kubebuilder:validation:Optional
	Env []TemplateContainersEnvParameters `json:"env,omitempty" tf:"env,omitempty"`

	// URL of the Container image in Google Container Registry or Google Artifact Registry. More info: https://kubernetes.io/docs/concepts/containers/images
	// +kubebuilder:validation:Optional
	Image *string `json:"image" tf:"image,omitempty"`

	// Periodic probe of container liveness. Container will be restarted if the probe fails. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
	// Structure is documented below.
	// +kubebuilder:validation:Optional
	LivenessProbe []TemplateContainersLivenessProbeParameters `json:"livenessProbe,omitempty" tf:"liveness_probe,omitempty"`

	// Volume's name.
	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// List of ports to expose from the container. Only a single port can be specified. The specified ports must be listening on all interfaces (0.0.0.0) within the container to be accessible.
	// If omitted, a port number will be chosen and passed to the container through the PORT environment variable for the container to listen on
	// Structure is documented below.
	// +kubebuilder:validation:Optional
	Ports []TemplateContainersPortsParameters `json:"ports,omitempty" tf:"ports,omitempty"`

	// Compute Resource requirements by this container. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources
	// Structure is documented below.
	// +kubebuilder:validation:Optional
	Resources []TemplateContainersResourcesParameters `json:"resources,omitempty" tf:"resources,omitempty"`

	// Startup probe of application within the container. All other probes are disabled if a startup probe is provided, until it succeeds. Container will not be added to service endpoints if the probe fails. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
	// Structure is documented below.
	// +kubebuilder:validation:Optional
	StartupProbe []TemplateContainersStartupProbeParameters `json:"startupProbe,omitempty" tf:"startup_probe,omitempty"`

	// Volume to mount into the container's filesystem.
	// Structure is documented below.
	// +kubebuilder:validation:Optional
	VolumeMounts []TemplateContainersVolumeMountsParameters `json:"volumeMounts,omitempty" tf:"volume_mounts,omitempty"`

	// Container's working directory. If not specified, the container runtime's default will be used, which might be configured in the container image.
	// +kubebuilder:validation:Optional
	WorkingDir *string `json:"workingDir,omitempty" tf:"working_dir,omitempty"`
}

type V2ServiceTemplateInitParameters struct {

	// Unstructured key value map that may be set by external tools to store and arbitrary metadata. They are not queryable and should be preserved when modifying objects.
	// Cloud Run API v2 does not support annotations with run.googleapis.com, cloud.googleapis.com, serving.knative.dev, or autoscaling.knative.dev namespaces, and they will be rejected.
	// All system annotations in v1 now have a corresponding field in v2 RevisionTemplate.
	// This field follows Kubernetes annotations' namespacing, limits, and rules.
	// +mapType=granular
	Annotations map[string]*string `json:"annotations,omitempty" tf:"annotations,omitempty"`

	// Holds the containers that define the unit of execution for this Service.
	// Structure is documented below.
	Containers []V2ServiceTemplateContainersInitParameters `json:"containers,omitempty" tf:"containers,omitempty"`

	// A reference to a customer managed encryption key (CMEK) to use to encrypt this container image. For more information, go to https://cloud.google.com/run/docs/securing/using-cmek
	EncryptionKey *string `json:"encryptionKey,omitempty" tf:"encryption_key,omitempty"`

	// The sandbox environment to host this Revision.
	// Possible values are: EXECUTION_ENVIRONMENT_GEN1, EXECUTION_ENVIRONMENT_GEN2.
	ExecutionEnvironment *string `json:"executionEnvironment,omitempty" tf:"execution_environment,omitempty"`

	// Unstructured key value map that can be used to organize and categorize objects. User-provided labels are shared with Google's billing system, so they can be used to filter, or break down billing charges by team, component, environment, state, etc.
	// For more information, visit https://cloud.google.com/resource-manager/docs/creating-managing-labels or https://cloud.google.com/run/docs/configuring/labels.
	// Cloud Run API v2 does not support labels with run.googleapis.com, cloud.googleapis.com, serving.knative.dev, or autoscaling.knative.dev namespaces, and they will be rejected.
	// All system labels in v1 now have a corresponding field in v2 RevisionTemplate.
	// +mapType=granular
	Labels map[string]*string `json:"labels,omitempty" tf:"labels,omitempty"`

	// Sets the maximum number of requests that each serving instance can receive.
	MaxInstanceRequestConcurrency *float64 `json:"maxInstanceRequestConcurrency,omitempty" tf:"max_instance_request_concurrency,omitempty"`

	// The unique name for the revision. If this field is omitted, it will be automatically generated based on the Service name.
	Revision *string `json:"revision,omitempty" tf:"revision,omitempty"`

	// Scaling settings for this Revision.
	// Structure is documented below.
	Scaling []ScalingInitParameters `json:"scaling,omitempty" tf:"scaling,omitempty"`

	// Email address of the IAM service account associated with the revision of the service. The service account represents the identity of the running revision, and determines what permissions the revision has. If not provided, the revision will use the project's default service account.
	ServiceAccount *string `json:"serviceAccount,omitempty" tf:"service_account,omitempty"`

	// Enables session affinity. For more information, go to https://cloud.google.com/run/docs/configuring/session-affinity
	SessionAffinity *bool `json:"sessionAffinity,omitempty" tf:"session_affinity,omitempty"`

	// Max allowed time for an instance to respond to a request.
	// A duration in seconds with up to nine fractional digits, ending with 's'. Example: "3.5s".
	Timeout *string `json:"timeout,omitempty" tf:"timeout,omitempty"`

	// VPC Access configuration to use for this Task. For more information, visit https://cloud.google.com/run/docs/configuring/connecting-vpc.
	// Structure is documented below.
	VPCAccess []TemplateVPCAccessInitParameters `json:"vpcAccess,omitempty" tf:"vpc_access,omitempty"`

	// A list of Volumes to make available to containers.
	// Structure is documented below.
	Volumes []V2ServiceTemplateVolumesInitParameters `json:"volumes,omitempty" tf:"volumes,omitempty"`
}

type V2ServiceTemplateObservation struct {

	// Unstructured key value map that may be set by external tools to store and arbitrary metadata. They are not queryable and should be preserved when modifying objects.
	// Cloud Run API v2 does not support annotations with run.googleapis.com, cloud.googleapis.com, serving.knative.dev, or autoscaling.knative.dev namespaces, and they will be rejected.
	// All system annotations in v1 now have a corresponding field in v2 RevisionTemplate.
	// This field follows Kubernetes annotations' namespacing, limits, and rules.
	// +mapType=granular
	Annotations map[string]*string `json:"annotations,omitempty" tf:"annotations,omitempty"`

	// Holds the containers that define the unit of execution for this Service.
	// Structure is documented below.
	Containers []V2ServiceTemplateContainersObservation `json:"containers,omitempty" tf:"containers,omitempty"`

	// A reference to a customer managed encryption key (CMEK) to use to encrypt this container image. For more information, go to https://cloud.google.com/run/docs/securing/using-cmek
	EncryptionKey *string `json:"encryptionKey,omitempty" tf:"encryption_key,omitempty"`

	// The sandbox environment to host this Revision.
	// Possible values are: EXECUTION_ENVIRONMENT_GEN1, EXECUTION_ENVIRONMENT_GEN2.
	ExecutionEnvironment *string `json:"executionEnvironment,omitempty" tf:"execution_environment,omitempty"`

	// Unstructured key value map that can be used to organize and categorize objects. User-provided labels are shared with Google's billing system, so they can be used to filter, or break down billing charges by team, component, environment, state, etc.
	// For more information, visit https://cloud.google.com/resource-manager/docs/creating-managing-labels or https://cloud.google.com/run/docs/configuring/labels.
	// Cloud Run API v2 does not support labels with run.googleapis.com, cloud.googleapis.com, serving.knative.dev, or autoscaling.knative.dev namespaces, and they will be rejected.
	// All system labels in v1 now have a corresponding field in v2 RevisionTemplate.
	// +mapType=granular
	Labels map[string]*string `json:"labels,omitempty" tf:"labels,omitempty"`

	// Sets the maximum number of requests that each serving instance can receive.
	MaxInstanceRequestConcurrency *float64 `json:"maxInstanceRequestConcurrency,omitempty" tf:"max_instance_request_concurrency,omitempty"`

	// The unique name for the revision. If this field is omitted, it will be automatically generated based on the Service name.
	Revision *string `json:"revision,omitempty" tf:"revision,omitempty"`

	// Scaling settings for this Revision.
	// Structure is documented below.
	Scaling []ScalingObservation `json:"scaling,omitempty" tf:"scaling,omitempty"`

	// Email address of the IAM service account associated with the revision of the service. The service account represents the identity of the running revision, and determines what permissions the revision has. If not provided, the revision will use the project's default service account.
	ServiceAccount *string `json:"serviceAccount,omitempty" tf:"service_account,omitempty"`

	// Enables session affinity. For more information, go to https://cloud.google.com/run/docs/configuring/session-affinity
	SessionAffinity *bool `json:"sessionAffinity,omitempty" tf:"session_affinity,omitempty"`

	// Max allowed time for an instance to respond to a request.
	// A duration in seconds with up to nine fractional digits, ending with 's'. Example: "3.5s".
	Timeout *string `json:"timeout,omitempty" tf:"timeout,omitempty"`

	// VPC Access configuration to use for this Task. For more information, visit https://cloud.google.com/run/docs/configuring/connecting-vpc.
	// Structure is documented below.
	VPCAccess []TemplateVPCAccessObservation `json:"vpcAccess,omitempty" tf:"vpc_access,omitempty"`

	// A list of Volumes to make available to containers.
	// Structure is documented below.
	Volumes []V2ServiceTemplateVolumesObservation `json:"volumes,omitempty" tf:"volumes,omitempty"`
}

type V2ServiceTemplateParameters struct {

	// Unstructured key value map that may be set by external tools to store and arbitrary metadata. They are not queryable and should be preserved when modifying objects.
	// Cloud Run API v2 does not support annotations with run.googleapis.com, cloud.googleapis.com, serving.knative.dev, or autoscaling.knative.dev namespaces, and they will be rejected.
	// All system annotations in v1 now have a corresponding field in v2 RevisionTemplate.
	// This field follows Kubernetes annotations' namespacing, limits, and rules.
	// +kubebuilder:validation:Optional
	// +mapType=granular
	Annotations map[string]*string `json:"annotations,omitempty" tf:"annotations,omitempty"`

	// Holds the containers that define the unit of execution for this Service.
	// Structure is documented below.
	// +kubebuilder:validation:Optional
	Containers []V2ServiceTemplateContainersParameters `json:"containers,omitempty" tf:"containers,omitempty"`

	// A reference to a customer managed encryption key (CMEK) to use to encrypt this container image. For more information, go to https://cloud.google.com/run/docs/securing/using-cmek
	// +kubebuilder:validation:Optional
	EncryptionKey *string `json:"encryptionKey,omitempty" tf:"encryption_key,omitempty"`

	// The sandbox environment to host this Revision.
	// Possible values are: EXECUTION_ENVIRONMENT_GEN1, EXECUTION_ENVIRONMENT_GEN2.
	// +kubebuilder:validation:Optional
	ExecutionEnvironment *string `json:"executionEnvironment,omitempty" tf:"execution_environment,omitempty"`

	// Unstructured key value map that can be used to organize and categorize objects. User-provided labels are shared with Google's billing system, so they can be used to filter, or break down billing charges by team, component, environment, state, etc.
	// For more information, visit https://cloud.google.com/resource-manager/docs/creating-managing-labels or https://cloud.google.com/run/docs/configuring/labels.
	// Cloud Run API v2 does not support labels with run.googleapis.com, cloud.googleapis.com, serving.knative.dev, or autoscaling.knative.dev namespaces, and they will be rejected.
	// All system labels in v1 now have a corresponding field in v2 RevisionTemplate.
	// +kubebuilder:validation:Optional
	// +mapType=granular
	Labels map[string]*string `json:"labels,omitempty" tf:"labels,omitempty"`

	// Sets the maximum number of requests that each serving instance can receive.
	// +kubebuilder:validation:Optional
	MaxInstanceRequestConcurrency *float64 `json:"maxInstanceRequestConcurrency,omitempty" tf:"max_instance_request_concurrency,omitempty"`

	// The unique name for the revision. If this field is omitted, it will be automatically generated based on the Service name.
	// +kubebuilder:validation:Optional
	Revision *string `json:"revision,omitempty" tf:"revision,omitempty"`

	// Scaling settings for this Revision.
	// Structure is documented below.
	// +kubebuilder:validation:Optional
	Scaling []ScalingParameters `json:"scaling,omitempty" tf:"scaling,omitempty"`

	// Email address of the IAM service account associated with the revision of the service. The service account represents the identity of the running revision, and determines what permissions the revision has. If not provided, the revision will use the project's default service account.
	// +kubebuilder:validation:Optional
	ServiceAccount *string `json:"serviceAccount,omitempty" tf:"service_account,omitempty"`

	// Enables session affinity. For more information, go to https://cloud.google.com/run/docs/configuring/session-affinity
	// +kubebuilder:validation:Optional
	SessionAffinity *bool `json:"sessionAffinity,omitempty" tf:"session_affinity,omitempty"`

	// Max allowed time for an instance to respond to a request.
	// A duration in seconds with up to nine fractional digits, ending with 's'. Example: "3.5s".
	// +kubebuilder:validation:Optional
	Timeout *string `json:"timeout,omitempty" tf:"timeout,omitempty"`

	// VPC Access configuration to use for this Task. For more information, visit https://cloud.google.com/run/docs/configuring/connecting-vpc.
	// Structure is documented below.
	// +kubebuilder:validation:Optional
	VPCAccess []TemplateVPCAccessParameters `json:"vpcAccess,omitempty" tf:"vpc_access,omitempty"`

	// A list of Volumes to make available to containers.
	// Structure is documented below.
	// +kubebuilder:validation:Optional
	Volumes []V2ServiceTemplateVolumesParameters `json:"volumes,omitempty" tf:"volumes,omitempty"`
}

type V2ServiceTemplateVolumesInitParameters struct {

	// For Cloud SQL volumes, contains the specific instances that should be mounted. Visit https://cloud.google.com/sql/docs/mysql/connect-run for more information on how to connect Cloud SQL and Cloud Run.
	// Structure is documented below.
	CloudSQLInstance []VolumesCloudSQLInstanceInitParameters `json:"cloudSqlInstance,omitempty" tf:"cloud_sql_instance,omitempty"`

	// Volume's name.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Secret represents a secret that should populate this volume. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret
	// Structure is documented below.
	Secret []TemplateVolumesSecretInitParameters `json:"secret,omitempty" tf:"secret,omitempty"`
}

type V2ServiceTemplateVolumesObservation struct {

	// For Cloud SQL volumes, contains the specific instances that should be mounted. Visit https://cloud.google.com/sql/docs/mysql/connect-run for more information on how to connect Cloud SQL and Cloud Run.
	// Structure is documented below.
	CloudSQLInstance []VolumesCloudSQLInstanceObservation `json:"cloudSqlInstance,omitempty" tf:"cloud_sql_instance,omitempty"`

	// Volume's name.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Secret represents a secret that should populate this volume. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret
	// Structure is documented below.
	Secret []TemplateVolumesSecretObservation `json:"secret,omitempty" tf:"secret,omitempty"`
}

type V2ServiceTemplateVolumesParameters struct {

	// For Cloud SQL volumes, contains the specific instances that should be mounted. Visit https://cloud.google.com/sql/docs/mysql/connect-run for more information on how to connect Cloud SQL and Cloud Run.
	// Structure is documented below.
	// +kubebuilder:validation:Optional
	CloudSQLInstance []VolumesCloudSQLInstanceParameters `json:"cloudSqlInstance,omitempty" tf:"cloud_sql_instance,omitempty"`

	// Volume's name.
	// +kubebuilder:validation:Optional
	Name *string `json:"name" tf:"name,omitempty"`

	// Secret represents a secret that should populate this volume. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret
	// Structure is documented below.
	// +kubebuilder:validation:Optional
	Secret []TemplateVolumesSecretParameters `json:"secret,omitempty" tf:"secret,omitempty"`
}

type V2ServiceTerminalConditionInitParameters struct {
}

type V2ServiceTerminalConditionObservation struct {

	// (Output)
	// A reason for the execution condition.
	ExecutionReason *string `json:"executionReason,omitempty" tf:"execution_reason,omitempty"`

	// (Output)
	// Last time the condition transitioned from one status to another.
	LastTransitionTime *string `json:"lastTransitionTime,omitempty" tf:"last_transition_time,omitempty"`

	// (Output)
	// Human readable message indicating details about the current status.
	Message *string `json:"message,omitempty" tf:"message,omitempty"`

	// (Output)
	// A common (service-level) reason for this condition.
	Reason *string `json:"reason,omitempty" tf:"reason,omitempty"`

	// (Output)
	// A reason for the revision condition.
	RevisionReason *string `json:"revisionReason,omitempty" tf:"revision_reason,omitempty"`

	// (Output)
	// How to interpret failures of this condition, one of Error, Warning, Info
	Severity *string `json:"severity,omitempty" tf:"severity,omitempty"`

	// (Output)
	// State of the condition.
	State *string `json:"state,omitempty" tf:"state,omitempty"`

	// (Output)
	// type is used to communicate the status of the reconciliation process. See also: https://github.com/knative/serving/blob/main/docs/spec/errors.md#error-conditions-and-reporting Types common to all resources include: * "Ready": True when the Resource is ready.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type V2ServiceTerminalConditionParameters struct {
}

type V2ServiceTrafficInitParameters struct {

	// Specifies percent of the traffic to this Revision. This defaults to zero if unspecified.
	Percent *float64 `json:"percent,omitempty" tf:"percent,omitempty"`

	// Revision to which to send this portion of traffic, if traffic allocation is by revision.
	Revision *string `json:"revision,omitempty" tf:"revision,omitempty"`

	// Indicates a string to be part of the URI to exclusively reference this target.
	Tag *string `json:"tag,omitempty" tf:"tag,omitempty"`

	// The allocation type for this traffic target.
	// Possible values are: TRAFFIC_TARGET_ALLOCATION_TYPE_LATEST, TRAFFIC_TARGET_ALLOCATION_TYPE_REVISION.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type V2ServiceTrafficObservation struct {

	// Specifies percent of the traffic to this Revision. This defaults to zero if unspecified.
	Percent *float64 `json:"percent,omitempty" tf:"percent,omitempty"`

	// Revision to which to send this portion of traffic, if traffic allocation is by revision.
	Revision *string `json:"revision,omitempty" tf:"revision,omitempty"`

	// Indicates a string to be part of the URI to exclusively reference this target.
	Tag *string `json:"tag,omitempty" tf:"tag,omitempty"`

	// The allocation type for this traffic target.
	// Possible values are: TRAFFIC_TARGET_ALLOCATION_TYPE_LATEST, TRAFFIC_TARGET_ALLOCATION_TYPE_REVISION.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type V2ServiceTrafficParameters struct {

	// Specifies percent of the traffic to this Revision. This defaults to zero if unspecified.
	// +kubebuilder:validation:Optional
	Percent *float64 `json:"percent,omitempty" tf:"percent,omitempty"`

	// Revision to which to send this portion of traffic, if traffic allocation is by revision.
	// +kubebuilder:validation:Optional
	Revision *string `json:"revision,omitempty" tf:"revision,omitempty"`

	// Indicates a string to be part of the URI to exclusively reference this target.
	// +kubebuilder:validation:Optional
	Tag *string `json:"tag,omitempty" tf:"tag,omitempty"`

	// The allocation type for this traffic target.
	// Possible values are: TRAFFIC_TARGET_ALLOCATION_TYPE_LATEST, TRAFFIC_TARGET_ALLOCATION_TYPE_REVISION.
	// +kubebuilder:validation:Optional
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type VolumesCloudSQLInstanceInitParameters struct {

	// The Cloud SQL instance connection names, as can be found in https://console.cloud.google.com/sql/instances. Visit https://cloud.google.com/sql/docs/mysql/connect-run for more information on how to connect Cloud SQL and Cloud Run. Format: {project}:{location}:{instance}
	Instances []*string `json:"instances,omitempty" tf:"instances,omitempty"`
}

type VolumesCloudSQLInstanceObservation struct {

	// The Cloud SQL instance connection names, as can be found in https://console.cloud.google.com/sql/instances. Visit https://cloud.google.com/sql/docs/mysql/connect-run for more information on how to connect Cloud SQL and Cloud Run. Format: {project}:{location}:{instance}
	Instances []*string `json:"instances,omitempty" tf:"instances,omitempty"`
}

type VolumesCloudSQLInstanceParameters struct {

	// The Cloud SQL instance connection names, as can be found in https://console.cloud.google.com/sql/instances. Visit https://cloud.google.com/sql/docs/mysql/connect-run for more information on how to connect Cloud SQL and Cloud Run. Format: {project}:{location}:{instance}
	// +kubebuilder:validation:Optional
	Instances []*string `json:"instances,omitempty" tf:"instances,omitempty"`
}

type VolumesSecretItemsInitParameters struct {

	// Integer octal mode bits to use on this file, must be a value between 01 and 0777 (octal). If 0 or not set, the Volume's default mode will be used.
	Mode *float64 `json:"mode,omitempty" tf:"mode,omitempty"`

	// The relative path of the secret in the container.
	Path *string `json:"path,omitempty" tf:"path,omitempty"`

	// The Cloud Secret Manager secret version. Can be 'latest' for the latest value or an integer for a specific version.
	Version *string `json:"version,omitempty" tf:"version,omitempty"`
}

type VolumesSecretItemsObservation struct {

	// Integer octal mode bits to use on this file, must be a value between 01 and 0777 (octal). If 0 or not set, the Volume's default mode will be used.
	Mode *float64 `json:"mode,omitempty" tf:"mode,omitempty"`

	// The relative path of the secret in the container.
	Path *string `json:"path,omitempty" tf:"path,omitempty"`

	// The Cloud Secret Manager secret version. Can be 'latest' for the latest value or an integer for a specific version.
	Version *string `json:"version,omitempty" tf:"version,omitempty"`
}

type VolumesSecretItemsParameters struct {

	// Integer octal mode bits to use on this file, must be a value between 01 and 0777 (octal). If 0 or not set, the Volume's default mode will be used.
	// +kubebuilder:validation:Optional
	Mode *float64 `json:"mode" tf:"mode,omitempty"`

	// The relative path of the secret in the container.
	// +kubebuilder:validation:Optional
	Path *string `json:"path" tf:"path,omitempty"`

	// The Cloud Secret Manager secret version. Can be 'latest' for the latest value or an integer for a specific version.
	// +kubebuilder:validation:Optional
	Version *string `json:"version,omitempty" tf:"version,omitempty"`
}

// V2ServiceSpec defines the desired state of V2Service
type V2ServiceSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     V2ServiceParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider V2ServiceInitParameters `json:"initProvider,omitempty"`
}

// V2ServiceStatus defines the observed state of V2Service.
type V2ServiceStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        V2ServiceObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// V2Service is the Schema for the V2Services API. Service acts as a top-level container that manages a set of configurations and revision templates which implement a network service.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,gcp}
type V2Service struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.template) || (has(self.initProvider) && has(self.initProvider.template))",message="spec.forProvider.template is a required parameter"
	Spec   V2ServiceSpec   `json:"spec"`
	Status V2ServiceStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// V2ServiceList contains a list of V2Services
type V2ServiceList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []V2Service `json:"items"`
}

// Repository type metadata.
var (
	V2Service_Kind             = "V2Service"
	V2Service_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: V2Service_Kind}.String()
	V2Service_KindAPIVersion   = V2Service_Kind + "." + CRDGroupVersion.String()
	V2Service_GroupVersionKind = CRDGroupVersion.WithKind(V2Service_Kind)
)

func init() {
	SchemeBuilder.Register(&V2Service{}, &V2ServiceList{})
}
