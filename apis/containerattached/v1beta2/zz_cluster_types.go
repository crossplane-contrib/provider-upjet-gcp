// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1beta2

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type AuthorizationInitParameters struct {

	// Groups that can perform operations as a cluster admin. A managed
	// ClusterRoleBinding will be created to grant the cluster-admin ClusterRole
	// to the groups. Up to ten admin groups can be provided.
	// For more info on RBAC, see
	// https://kubernetes.io/docs/reference/access-authn-authz/rbac/#user-facing-roles
	AdminGroups []*string `json:"adminGroups,omitempty" tf:"admin_groups,omitempty"`

	// Users that can perform operations as a cluster admin. A managed
	// ClusterRoleBinding will be created to grant the cluster-admin ClusterRole
	// to the users. Up to ten admin users can be provided.
	// For more info on RBAC, see
	// https://kubernetes.io/docs/reference/access-authn-authz/rbac/#user-facing-roles
	AdminUsers []*string `json:"adminUsers,omitempty" tf:"admin_users,omitempty"`
}

type AuthorizationObservation struct {

	// Groups that can perform operations as a cluster admin. A managed
	// ClusterRoleBinding will be created to grant the cluster-admin ClusterRole
	// to the groups. Up to ten admin groups can be provided.
	// For more info on RBAC, see
	// https://kubernetes.io/docs/reference/access-authn-authz/rbac/#user-facing-roles
	AdminGroups []*string `json:"adminGroups,omitempty" tf:"admin_groups,omitempty"`

	// Users that can perform operations as a cluster admin. A managed
	// ClusterRoleBinding will be created to grant the cluster-admin ClusterRole
	// to the users. Up to ten admin users can be provided.
	// For more info on RBAC, see
	// https://kubernetes.io/docs/reference/access-authn-authz/rbac/#user-facing-roles
	AdminUsers []*string `json:"adminUsers,omitempty" tf:"admin_users,omitempty"`
}

type AuthorizationParameters struct {

	// Groups that can perform operations as a cluster admin. A managed
	// ClusterRoleBinding will be created to grant the cluster-admin ClusterRole
	// to the groups. Up to ten admin groups can be provided.
	// For more info on RBAC, see
	// https://kubernetes.io/docs/reference/access-authn-authz/rbac/#user-facing-roles
	// +kubebuilder:validation:Optional
	AdminGroups []*string `json:"adminGroups,omitempty" tf:"admin_groups,omitempty"`

	// Users that can perform operations as a cluster admin. A managed
	// ClusterRoleBinding will be created to grant the cluster-admin ClusterRole
	// to the users. Up to ten admin users can be provided.
	// For more info on RBAC, see
	// https://kubernetes.io/docs/reference/access-authn-authz/rbac/#user-facing-roles
	// +kubebuilder:validation:Optional
	AdminUsers []*string `json:"adminUsers,omitempty" tf:"admin_users,omitempty"`
}

type BinaryAuthorizationInitParameters struct {

	// Configure Binary Authorization evaluation mode.
	// Possible values are: DISABLED, PROJECT_SINGLETON_POLICY_ENFORCE.
	EvaluationMode *string `json:"evaluationMode,omitempty" tf:"evaluation_mode,omitempty"`
}

type BinaryAuthorizationObservation struct {

	// Configure Binary Authorization evaluation mode.
	// Possible values are: DISABLED, PROJECT_SINGLETON_POLICY_ENFORCE.
	EvaluationMode *string `json:"evaluationMode,omitempty" tf:"evaluation_mode,omitempty"`
}

type BinaryAuthorizationParameters struct {

	// Configure Binary Authorization evaluation mode.
	// Possible values are: DISABLED, PROJECT_SINGLETON_POLICY_ENFORCE.
	// +kubebuilder:validation:Optional
	EvaluationMode *string `json:"evaluationMode,omitempty" tf:"evaluation_mode,omitempty"`
}

type ClusterInitParameters struct {

	// Optional. Annotations on the cluster. This field has the same
	// restrictions as Kubernetes annotations. The total size of all keys and
	// values combined is limited to 256k. Key can have 2 segments: prefix
	// and name , separated by a slash (/). Prefix must be a DNS subdomain.
	// Name must be 63 characters or less, begin and end with alphanumerics,
	// with dashes (-), underscores (_), dots (.), and alphanumerics between.
	// +mapType=granular
	Annotations map[string]*string `json:"annotations,omitempty" tf:"annotations,omitempty"`

	// Configuration related to the cluster RBAC settings.
	// Structure is documented below.
	Authorization *AuthorizationInitParameters `json:"authorization,omitempty" tf:"authorization,omitempty"`

	// Binary Authorization configuration.
	// Structure is documented below.
	BinaryAuthorization *BinaryAuthorizationInitParameters `json:"binaryAuthorization,omitempty" tf:"binary_authorization,omitempty"`

	// Policy to determine what flags to send on delete.
	DeletionPolicy *string `json:"deletionPolicy,omitempty" tf:"deletion_policy,omitempty"`

	// A human readable description of this attached cluster. Cannot be longer
	// than 255 UTF-8 encoded bytes.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// The Kubernetes distribution of the underlying attached cluster. Supported values:
	// "eks", "aks", "generic". The generic distribution provides the ability to register
	// or migrate any CNCF conformant cluster.
	Distribution *string `json:"distribution,omitempty" tf:"distribution,omitempty"`

	// Fleet configuration.
	// Structure is documented below.
	Fleet *FleetInitParameters `json:"fleet,omitempty" tf:"fleet,omitempty"`

	// Logging configuration.
	// Structure is documented below.
	LoggingConfig *LoggingConfigInitParameters `json:"loggingConfig,omitempty" tf:"logging_config,omitempty"`

	// Monitoring configuration.
	// Structure is documented below.
	MonitoringConfig *MonitoringConfigInitParameters `json:"monitoringConfig,omitempty" tf:"monitoring_config,omitempty"`

	// OIDC discovery information of the target cluster.
	// Kubernetes Service Account (KSA) tokens are JWT tokens signed by the cluster
	// API server. This fields indicates how GCP services
	// validate KSA tokens in order to allow system workloads (such as GKE Connect
	// and telemetry agents) to authenticate back to GCP.
	// Both clusters with public and private issuer URLs are supported.
	// Clusters with public issuers only need to specify the issuer_url field
	// while clusters with private issuers need to provide both
	// issuer_url and jwks.
	// Structure is documented below.
	OidcConfig *OidcConfigInitParameters `json:"oidcConfig,omitempty" tf:"oidc_config,omitempty"`

	// The platform version for the cluster (e.g. 1.23.0-gke.1).
	PlatformVersion *string `json:"platformVersion,omitempty" tf:"platform_version,omitempty"`

	// The number of the Fleet host project where this cluster will be registered.
	Project *string `json:"project,omitempty" tf:"project,omitempty"`

	// Support for proxy configuration.
	// Structure is documented below.
	ProxyConfig *ProxyConfigInitParameters `json:"proxyConfig,omitempty" tf:"proxy_config,omitempty"`
}

type ClusterObservation struct {

	// Optional. Annotations on the cluster. This field has the same
	// restrictions as Kubernetes annotations. The total size of all keys and
	// values combined is limited to 256k. Key can have 2 segments: prefix
	// and name , separated by a slash (/). Prefix must be a DNS subdomain.
	// Name must be 63 characters or less, begin and end with alphanumerics,
	// with dashes (-), underscores (_), dots (.), and alphanumerics between.
	// +mapType=granular
	Annotations map[string]*string `json:"annotations,omitempty" tf:"annotations,omitempty"`

	// Configuration related to the cluster RBAC settings.
	// Structure is documented below.
	Authorization *AuthorizationObservation `json:"authorization,omitempty" tf:"authorization,omitempty"`

	// Binary Authorization configuration.
	// Structure is documented below.
	BinaryAuthorization *BinaryAuthorizationObservation `json:"binaryAuthorization,omitempty" tf:"binary_authorization,omitempty"`

	// Output only. The region where this cluster runs.
	// For EKS clusters, this is an AWS region. For AKS clusters,
	// this is an Azure region.
	ClusterRegion *string `json:"clusterRegion,omitempty" tf:"cluster_region,omitempty"`

	// Output only. The time at which this cluster was created.
	CreateTime *string `json:"createTime,omitempty" tf:"create_time,omitempty"`

	// Policy to determine what flags to send on delete.
	DeletionPolicy *string `json:"deletionPolicy,omitempty" tf:"deletion_policy,omitempty"`

	// A human readable description of this attached cluster. Cannot be longer
	// than 255 UTF-8 encoded bytes.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// The Kubernetes distribution of the underlying attached cluster. Supported values:
	// "eks", "aks", "generic". The generic distribution provides the ability to register
	// or migrate any CNCF conformant cluster.
	Distribution *string `json:"distribution,omitempty" tf:"distribution,omitempty"`

	// +mapType=granular
	EffectiveAnnotations map[string]*string `json:"effectiveAnnotations,omitempty" tf:"effective_annotations,omitempty"`

	// A set of errors found in the cluster.
	// Structure is documented below.
	Errors []ErrorsObservation `json:"errors,omitempty" tf:"errors,omitempty"`

	// Fleet configuration.
	// Structure is documented below.
	Fleet *FleetObservation `json:"fleet,omitempty" tf:"fleet,omitempty"`

	// an identifier for the resource with format projects/{{project}}/locations/{{location}}/attachedClusters/{{name}}
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// The Kubernetes version of the cluster.
	KubernetesVersion *string `json:"kubernetesVersion,omitempty" tf:"kubernetes_version,omitempty"`

	// The location for the resource
	Location *string `json:"location,omitempty" tf:"location,omitempty"`

	// Logging configuration.
	// Structure is documented below.
	LoggingConfig *LoggingConfigObservation `json:"loggingConfig,omitempty" tf:"logging_config,omitempty"`

	// Monitoring configuration.
	// Structure is documented below.
	MonitoringConfig *MonitoringConfigObservation `json:"monitoringConfig,omitempty" tf:"monitoring_config,omitempty"`

	// OIDC discovery information of the target cluster.
	// Kubernetes Service Account (KSA) tokens are JWT tokens signed by the cluster
	// API server. This fields indicates how GCP services
	// validate KSA tokens in order to allow system workloads (such as GKE Connect
	// and telemetry agents) to authenticate back to GCP.
	// Both clusters with public and private issuer URLs are supported.
	// Clusters with public issuers only need to specify the issuer_url field
	// while clusters with private issuers need to provide both
	// issuer_url and jwks.
	// Structure is documented below.
	OidcConfig *OidcConfigObservation `json:"oidcConfig,omitempty" tf:"oidc_config,omitempty"`

	// The platform version for the cluster (e.g. 1.23.0-gke.1).
	PlatformVersion *string `json:"platformVersion,omitempty" tf:"platform_version,omitempty"`

	// The number of the Fleet host project where this cluster will be registered.
	Project *string `json:"project,omitempty" tf:"project,omitempty"`

	// Support for proxy configuration.
	// Structure is documented below.
	ProxyConfig *ProxyConfigObservation `json:"proxyConfig,omitempty" tf:"proxy_config,omitempty"`

	// If set, there are currently changes in flight to the cluster.
	Reconciling *bool `json:"reconciling,omitempty" tf:"reconciling,omitempty"`

	// The current state of the cluster. Possible values:
	// STATE_UNSPECIFIED, PROVISIONING, RUNNING, RECONCILING, STOPPING, ERROR,
	// DEGRADED
	State *string `json:"state,omitempty" tf:"state,omitempty"`

	// A globally unique identifier for the cluster.
	UID *string `json:"uid,omitempty" tf:"uid,omitempty"`

	// The time at which this cluster was last updated.
	UpdateTime *string `json:"updateTime,omitempty" tf:"update_time,omitempty"`

	// Workload Identity settings.
	// Structure is documented below.
	WorkloadIdentityConfig []WorkloadIdentityConfigObservation `json:"workloadIdentityConfig,omitempty" tf:"workload_identity_config,omitempty"`
}

type ClusterParameters struct {

	// Optional. Annotations on the cluster. This field has the same
	// restrictions as Kubernetes annotations. The total size of all keys and
	// values combined is limited to 256k. Key can have 2 segments: prefix
	// and name , separated by a slash (/). Prefix must be a DNS subdomain.
	// Name must be 63 characters or less, begin and end with alphanumerics,
	// with dashes (-), underscores (_), dots (.), and alphanumerics between.
	// +kubebuilder:validation:Optional
	// +mapType=granular
	Annotations map[string]*string `json:"annotations,omitempty" tf:"annotations,omitempty"`

	// Configuration related to the cluster RBAC settings.
	// Structure is documented below.
	// +kubebuilder:validation:Optional
	Authorization *AuthorizationParameters `json:"authorization,omitempty" tf:"authorization,omitempty"`

	// Binary Authorization configuration.
	// Structure is documented below.
	// +kubebuilder:validation:Optional
	BinaryAuthorization *BinaryAuthorizationParameters `json:"binaryAuthorization,omitempty" tf:"binary_authorization,omitempty"`

	// Policy to determine what flags to send on delete.
	// +kubebuilder:validation:Optional
	DeletionPolicy *string `json:"deletionPolicy,omitempty" tf:"deletion_policy,omitempty"`

	// A human readable description of this attached cluster. Cannot be longer
	// than 255 UTF-8 encoded bytes.
	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// The Kubernetes distribution of the underlying attached cluster. Supported values:
	// "eks", "aks", "generic". The generic distribution provides the ability to register
	// or migrate any CNCF conformant cluster.
	// +kubebuilder:validation:Optional
	Distribution *string `json:"distribution,omitempty" tf:"distribution,omitempty"`

	// Fleet configuration.
	// Structure is documented below.
	// +kubebuilder:validation:Optional
	Fleet *FleetParameters `json:"fleet,omitempty" tf:"fleet,omitempty"`

	// The location for the resource
	// +kubebuilder:validation:Required
	Location *string `json:"location" tf:"location,omitempty"`

	// Logging configuration.
	// Structure is documented below.
	// +kubebuilder:validation:Optional
	LoggingConfig *LoggingConfigParameters `json:"loggingConfig,omitempty" tf:"logging_config,omitempty"`

	// Monitoring configuration.
	// Structure is documented below.
	// +kubebuilder:validation:Optional
	MonitoringConfig *MonitoringConfigParameters `json:"monitoringConfig,omitempty" tf:"monitoring_config,omitempty"`

	// OIDC discovery information of the target cluster.
	// Kubernetes Service Account (KSA) tokens are JWT tokens signed by the cluster
	// API server. This fields indicates how GCP services
	// validate KSA tokens in order to allow system workloads (such as GKE Connect
	// and telemetry agents) to authenticate back to GCP.
	// Both clusters with public and private issuer URLs are supported.
	// Clusters with public issuers only need to specify the issuer_url field
	// while clusters with private issuers need to provide both
	// issuer_url and jwks.
	// Structure is documented below.
	// +kubebuilder:validation:Optional
	OidcConfig *OidcConfigParameters `json:"oidcConfig,omitempty" tf:"oidc_config,omitempty"`

	// The platform version for the cluster (e.g. 1.23.0-gke.1).
	// +kubebuilder:validation:Optional
	PlatformVersion *string `json:"platformVersion,omitempty" tf:"platform_version,omitempty"`

	// The number of the Fleet host project where this cluster will be registered.
	// +kubebuilder:validation:Optional
	Project *string `json:"project,omitempty" tf:"project,omitempty"`

	// Support for proxy configuration.
	// Structure is documented below.
	// +kubebuilder:validation:Optional
	ProxyConfig *ProxyConfigParameters `json:"proxyConfig,omitempty" tf:"proxy_config,omitempty"`
}

type ComponentConfigInitParameters struct {

	// The components to be enabled.
	// Each value may be one of: SYSTEM_COMPONENTS, WORKLOADS.
	EnableComponents []*string `json:"enableComponents,omitempty" tf:"enable_components,omitempty"`
}

type ComponentConfigObservation struct {

	// The components to be enabled.
	// Each value may be one of: SYSTEM_COMPONENTS, WORKLOADS.
	EnableComponents []*string `json:"enableComponents,omitempty" tf:"enable_components,omitempty"`
}

type ComponentConfigParameters struct {

	// The components to be enabled.
	// Each value may be one of: SYSTEM_COMPONENTS, WORKLOADS.
	// +kubebuilder:validation:Optional
	EnableComponents []*string `json:"enableComponents,omitempty" tf:"enable_components,omitempty"`
}

type ErrorsInitParameters struct {
}

type ErrorsObservation struct {

	// Human-friendly description of the error.
	Message *string `json:"message,omitempty" tf:"message,omitempty"`
}

type ErrorsParameters struct {
}

type FleetInitParameters struct {

	// The number of the Fleet host project where this cluster will be registered.
	Project *string `json:"project,omitempty" tf:"project,omitempty"`
}

type FleetObservation struct {

	// (Output)
	// The name of the managed Hub Membership resource associated to this
	// cluster. Membership names are formatted as
	// projects//locations/global/membership/.
	Membership *string `json:"membership,omitempty" tf:"membership,omitempty"`

	// The number of the Fleet host project where this cluster will be registered.
	Project *string `json:"project,omitempty" tf:"project,omitempty"`
}

type FleetParameters struct {

	// The number of the Fleet host project where this cluster will be registered.
	// +kubebuilder:validation:Optional
	Project *string `json:"project" tf:"project,omitempty"`
}

type KubernetesSecretInitParameters struct {

	// Name of the kubernetes secret containing the proxy config.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Namespace of the kubernetes secret containing the proxy config.
	Namespace *string `json:"namespace,omitempty" tf:"namespace,omitempty"`
}

type KubernetesSecretObservation struct {

	// Name of the kubernetes secret containing the proxy config.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Namespace of the kubernetes secret containing the proxy config.
	Namespace *string `json:"namespace,omitempty" tf:"namespace,omitempty"`
}

type KubernetesSecretParameters struct {

	// Name of the kubernetes secret containing the proxy config.
	// +kubebuilder:validation:Optional
	Name *string `json:"name" tf:"name,omitempty"`

	// Namespace of the kubernetes secret containing the proxy config.
	// +kubebuilder:validation:Optional
	Namespace *string `json:"namespace" tf:"namespace,omitempty"`
}

type LoggingConfigInitParameters struct {

	// The configuration of the logging components
	// Structure is documented below.
	ComponentConfig *ComponentConfigInitParameters `json:"componentConfig,omitempty" tf:"component_config,omitempty"`
}

type LoggingConfigObservation struct {

	// The configuration of the logging components
	// Structure is documented below.
	ComponentConfig *ComponentConfigObservation `json:"componentConfig,omitempty" tf:"component_config,omitempty"`
}

type LoggingConfigParameters struct {

	// The configuration of the logging components
	// Structure is documented below.
	// +kubebuilder:validation:Optional
	ComponentConfig *ComponentConfigParameters `json:"componentConfig,omitempty" tf:"component_config,omitempty"`
}

type ManagedPrometheusConfigInitParameters struct {

	// Enable Managed Collection.
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`
}

type ManagedPrometheusConfigObservation struct {

	// Enable Managed Collection.
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`
}

type ManagedPrometheusConfigParameters struct {

	// Enable Managed Collection.
	// +kubebuilder:validation:Optional
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`
}

type MonitoringConfigInitParameters struct {

	// Enable Google Cloud Managed Service for Prometheus in the cluster.
	// Structure is documented below.
	ManagedPrometheusConfig *ManagedPrometheusConfigInitParameters `json:"managedPrometheusConfig,omitempty" tf:"managed_prometheus_config,omitempty"`
}

type MonitoringConfigObservation struct {

	// Enable Google Cloud Managed Service for Prometheus in the cluster.
	// Structure is documented below.
	ManagedPrometheusConfig *ManagedPrometheusConfigObservation `json:"managedPrometheusConfig,omitempty" tf:"managed_prometheus_config,omitempty"`
}

type MonitoringConfigParameters struct {

	// Enable Google Cloud Managed Service for Prometheus in the cluster.
	// Structure is documented below.
	// +kubebuilder:validation:Optional
	ManagedPrometheusConfig *ManagedPrometheusConfigParameters `json:"managedPrometheusConfig,omitempty" tf:"managed_prometheus_config,omitempty"`
}

type OidcConfigInitParameters struct {

	// A JSON Web Token (JWT) issuer URI. issuer must start with https://
	IssuerURL *string `json:"issuerUrl,omitempty" tf:"issuer_url,omitempty"`

	// OIDC verification keys in JWKS format (RFC 7517).
	Jwks *string `json:"jwks,omitempty" tf:"jwks,omitempty"`
}

type OidcConfigObservation struct {

	// A JSON Web Token (JWT) issuer URI. issuer must start with https://
	IssuerURL *string `json:"issuerUrl,omitempty" tf:"issuer_url,omitempty"`

	// OIDC verification keys in JWKS format (RFC 7517).
	Jwks *string `json:"jwks,omitempty" tf:"jwks,omitempty"`
}

type OidcConfigParameters struct {

	// A JSON Web Token (JWT) issuer URI. issuer must start with https://
	// +kubebuilder:validation:Optional
	IssuerURL *string `json:"issuerUrl" tf:"issuer_url,omitempty"`

	// OIDC verification keys in JWKS format (RFC 7517).
	// +kubebuilder:validation:Optional
	Jwks *string `json:"jwks,omitempty" tf:"jwks,omitempty"`
}

type ProxyConfigInitParameters struct {

	// The Kubernetes Secret resource that contains the HTTP(S) proxy configuration.
	// Structure is documented below.
	KubernetesSecret *KubernetesSecretInitParameters `json:"kubernetesSecret,omitempty" tf:"kubernetes_secret,omitempty"`
}

type ProxyConfigObservation struct {

	// The Kubernetes Secret resource that contains the HTTP(S) proxy configuration.
	// Structure is documented below.
	KubernetesSecret *KubernetesSecretObservation `json:"kubernetesSecret,omitempty" tf:"kubernetes_secret,omitempty"`
}

type ProxyConfigParameters struct {

	// The Kubernetes Secret resource that contains the HTTP(S) proxy configuration.
	// Structure is documented below.
	// +kubebuilder:validation:Optional
	KubernetesSecret *KubernetesSecretParameters `json:"kubernetesSecret,omitempty" tf:"kubernetes_secret,omitempty"`
}

type WorkloadIdentityConfigInitParameters struct {
}

type WorkloadIdentityConfigObservation struct {

	// The ID of the OIDC Identity Provider (IdP) associated to
	// the Workload Identity Pool.
	IdentityProvider *string `json:"identityProvider,omitempty" tf:"identity_provider,omitempty"`

	// The OIDC issuer URL for this cluster.
	IssuerURI *string `json:"issuerUri,omitempty" tf:"issuer_uri,omitempty"`

	// The Workload Identity Pool associated to the cluster.
	WorkloadPool *string `json:"workloadPool,omitempty" tf:"workload_pool,omitempty"`
}

type WorkloadIdentityConfigParameters struct {
}

// ClusterSpec defines the desired state of Cluster
type ClusterSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     ClusterParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider ClusterInitParameters `json:"initProvider,omitempty"`
}

// ClusterStatus defines the observed state of Cluster.
type ClusterStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        ClusterObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status

// Cluster is the Schema for the Clusters API. An Anthos cluster running on customer owned infrastructure.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,gcp}
type Cluster struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.distribution) || (has(self.initProvider) && has(self.initProvider.distribution))",message="spec.forProvider.distribution is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.fleet) || (has(self.initProvider) && has(self.initProvider.fleet))",message="spec.forProvider.fleet is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.oidcConfig) || (has(self.initProvider) && has(self.initProvider.oidcConfig))",message="spec.forProvider.oidcConfig is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.platformVersion) || (has(self.initProvider) && has(self.initProvider.platformVersion))",message="spec.forProvider.platformVersion is a required parameter"
	Spec   ClusterSpec   `json:"spec"`
	Status ClusterStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// ClusterList contains a list of Clusters
type ClusterList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []Cluster `json:"items"`
}

// Repository type metadata.
var (
	Cluster_Kind             = "Cluster"
	Cluster_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: Cluster_Kind}.String()
	Cluster_KindAPIVersion   = Cluster_Kind + "." + CRDGroupVersion.String()
	Cluster_GroupVersionKind = CRDGroupVersion.WithKind(Cluster_Kind)
)

func init() {
	SchemeBuilder.Register(&Cluster{}, &ClusterList{})
}
