//go:build !ignore_autogenerated

// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by controller-gen. DO NOT EDIT.

package v1beta1

import (
	"github.com/crossplane/crossplane-runtime/apis/common/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *APIConfigInitParameters) DeepCopyInto(out *APIConfigInitParameters) {
	*out = *in
	if in.AuthFailAction != nil {
		in, out := &in.AuthFailAction, &out.AuthFailAction
		*out = new(string)
		**out = **in
	}
	if in.Login != nil {
		in, out := &in.Login, &out.Login
		*out = new(string)
		**out = **in
	}
	if in.Script != nil {
		in, out := &in.Script, &out.Script
		*out = new(string)
		**out = **in
	}
	if in.SecurityLevel != nil {
		in, out := &in.SecurityLevel, &out.SecurityLevel
		*out = new(string)
		**out = **in
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new APIConfigInitParameters.
func (in *APIConfigInitParameters) DeepCopy() *APIConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(APIConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *APIConfigObservation) DeepCopyInto(out *APIConfigObservation) {
	*out = *in
	if in.AuthFailAction != nil {
		in, out := &in.AuthFailAction, &out.AuthFailAction
		*out = new(string)
		**out = **in
	}
	if in.Login != nil {
		in, out := &in.Login, &out.Login
		*out = new(string)
		**out = **in
	}
	if in.Script != nil {
		in, out := &in.Script, &out.Script
		*out = new(string)
		**out = **in
	}
	if in.SecurityLevel != nil {
		in, out := &in.SecurityLevel, &out.SecurityLevel
		*out = new(string)
		**out = **in
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new APIConfigObservation.
func (in *APIConfigObservation) DeepCopy() *APIConfigObservation {
	if in == nil {
		return nil
	}
	out := new(APIConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *APIConfigParameters) DeepCopyInto(out *APIConfigParameters) {
	*out = *in
	if in.AuthFailAction != nil {
		in, out := &in.AuthFailAction, &out.AuthFailAction
		*out = new(string)
		**out = **in
	}
	if in.Login != nil {
		in, out := &in.Login, &out.Login
		*out = new(string)
		**out = **in
	}
	if in.Script != nil {
		in, out := &in.Script, &out.Script
		*out = new(string)
		**out = **in
	}
	if in.SecurityLevel != nil {
		in, out := &in.SecurityLevel, &out.SecurityLevel
		*out = new(string)
		**out = **in
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new APIConfigParameters.
func (in *APIConfigParameters) DeepCopy() *APIConfigParameters {
	if in == nil {
		return nil
	}
	out := new(APIConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Application) DeepCopyInto(out *Application) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Application.
func (in *Application) DeepCopy() *Application {
	if in == nil {
		return nil
	}
	out := new(Application)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Application) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApplicationInitParameters) DeepCopyInto(out *ApplicationInitParameters) {
	*out = *in
	if in.AuthDomain != nil {
		in, out := &in.AuthDomain, &out.AuthDomain
		*out = new(string)
		**out = **in
	}
	if in.DatabaseType != nil {
		in, out := &in.DatabaseType, &out.DatabaseType
		*out = new(string)
		**out = **in
	}
	if in.FeatureSettings != nil {
		in, out := &in.FeatureSettings, &out.FeatureSettings
		*out = make([]FeatureSettingsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Iap != nil {
		in, out := &in.Iap, &out.Iap
		*out = make([]IapInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LocationID != nil {
		in, out := &in.LocationID, &out.LocationID
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.ProjectRef != nil {
		in, out := &in.ProjectRef, &out.ProjectRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ProjectSelector != nil {
		in, out := &in.ProjectSelector, &out.ProjectSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.ServingStatus != nil {
		in, out := &in.ServingStatus, &out.ServingStatus
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApplicationInitParameters.
func (in *ApplicationInitParameters) DeepCopy() *ApplicationInitParameters {
	if in == nil {
		return nil
	}
	out := new(ApplicationInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApplicationList) DeepCopyInto(out *ApplicationList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Application, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApplicationList.
func (in *ApplicationList) DeepCopy() *ApplicationList {
	if in == nil {
		return nil
	}
	out := new(ApplicationList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ApplicationList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApplicationObservation) DeepCopyInto(out *ApplicationObservation) {
	*out = *in
	if in.AppID != nil {
		in, out := &in.AppID, &out.AppID
		*out = new(string)
		**out = **in
	}
	if in.AuthDomain != nil {
		in, out := &in.AuthDomain, &out.AuthDomain
		*out = new(string)
		**out = **in
	}
	if in.CodeBucket != nil {
		in, out := &in.CodeBucket, &out.CodeBucket
		*out = new(string)
		**out = **in
	}
	if in.DatabaseType != nil {
		in, out := &in.DatabaseType, &out.DatabaseType
		*out = new(string)
		**out = **in
	}
	if in.DefaultBucket != nil {
		in, out := &in.DefaultBucket, &out.DefaultBucket
		*out = new(string)
		**out = **in
	}
	if in.DefaultHostname != nil {
		in, out := &in.DefaultHostname, &out.DefaultHostname
		*out = new(string)
		**out = **in
	}
	if in.FeatureSettings != nil {
		in, out := &in.FeatureSettings, &out.FeatureSettings
		*out = make([]FeatureSettingsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.GcrDomain != nil {
		in, out := &in.GcrDomain, &out.GcrDomain
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Iap != nil {
		in, out := &in.Iap, &out.Iap
		*out = make([]IapObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LocationID != nil {
		in, out := &in.LocationID, &out.LocationID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.ServingStatus != nil {
		in, out := &in.ServingStatus, &out.ServingStatus
		*out = new(string)
		**out = **in
	}
	if in.URLDispatchRule != nil {
		in, out := &in.URLDispatchRule, &out.URLDispatchRule
		*out = make([]URLDispatchRuleObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApplicationObservation.
func (in *ApplicationObservation) DeepCopy() *ApplicationObservation {
	if in == nil {
		return nil
	}
	out := new(ApplicationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApplicationParameters) DeepCopyInto(out *ApplicationParameters) {
	*out = *in
	if in.AuthDomain != nil {
		in, out := &in.AuthDomain, &out.AuthDomain
		*out = new(string)
		**out = **in
	}
	if in.DatabaseType != nil {
		in, out := &in.DatabaseType, &out.DatabaseType
		*out = new(string)
		**out = **in
	}
	if in.FeatureSettings != nil {
		in, out := &in.FeatureSettings, &out.FeatureSettings
		*out = make([]FeatureSettingsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Iap != nil {
		in, out := &in.Iap, &out.Iap
		*out = make([]IapParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LocationID != nil {
		in, out := &in.LocationID, &out.LocationID
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.ProjectRef != nil {
		in, out := &in.ProjectRef, &out.ProjectRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ProjectSelector != nil {
		in, out := &in.ProjectSelector, &out.ProjectSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.ServingStatus != nil {
		in, out := &in.ServingStatus, &out.ServingStatus
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApplicationParameters.
func (in *ApplicationParameters) DeepCopy() *ApplicationParameters {
	if in == nil {
		return nil
	}
	out := new(ApplicationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApplicationSpec) DeepCopyInto(out *ApplicationSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApplicationSpec.
func (in *ApplicationSpec) DeepCopy() *ApplicationSpec {
	if in == nil {
		return nil
	}
	out := new(ApplicationSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApplicationStatus) DeepCopyInto(out *ApplicationStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApplicationStatus.
func (in *ApplicationStatus) DeepCopy() *ApplicationStatus {
	if in == nil {
		return nil
	}
	out := new(ApplicationStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApplicationURLDispatchRules) DeepCopyInto(out *ApplicationURLDispatchRules) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApplicationURLDispatchRules.
func (in *ApplicationURLDispatchRules) DeepCopy() *ApplicationURLDispatchRules {
	if in == nil {
		return nil
	}
	out := new(ApplicationURLDispatchRules)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ApplicationURLDispatchRules) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApplicationURLDispatchRulesInitParameters) DeepCopyInto(out *ApplicationURLDispatchRulesInitParameters) {
	*out = *in
	if in.DispatchRules != nil {
		in, out := &in.DispatchRules, &out.DispatchRules
		*out = make([]DispatchRulesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApplicationURLDispatchRulesInitParameters.
func (in *ApplicationURLDispatchRulesInitParameters) DeepCopy() *ApplicationURLDispatchRulesInitParameters {
	if in == nil {
		return nil
	}
	out := new(ApplicationURLDispatchRulesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApplicationURLDispatchRulesList) DeepCopyInto(out *ApplicationURLDispatchRulesList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ApplicationURLDispatchRules, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApplicationURLDispatchRulesList.
func (in *ApplicationURLDispatchRulesList) DeepCopy() *ApplicationURLDispatchRulesList {
	if in == nil {
		return nil
	}
	out := new(ApplicationURLDispatchRulesList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ApplicationURLDispatchRulesList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApplicationURLDispatchRulesObservation) DeepCopyInto(out *ApplicationURLDispatchRulesObservation) {
	*out = *in
	if in.DispatchRules != nil {
		in, out := &in.DispatchRules, &out.DispatchRules
		*out = make([]DispatchRulesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApplicationURLDispatchRulesObservation.
func (in *ApplicationURLDispatchRulesObservation) DeepCopy() *ApplicationURLDispatchRulesObservation {
	if in == nil {
		return nil
	}
	out := new(ApplicationURLDispatchRulesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApplicationURLDispatchRulesParameters) DeepCopyInto(out *ApplicationURLDispatchRulesParameters) {
	*out = *in
	if in.DispatchRules != nil {
		in, out := &in.DispatchRules, &out.DispatchRules
		*out = make([]DispatchRulesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApplicationURLDispatchRulesParameters.
func (in *ApplicationURLDispatchRulesParameters) DeepCopy() *ApplicationURLDispatchRulesParameters {
	if in == nil {
		return nil
	}
	out := new(ApplicationURLDispatchRulesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApplicationURLDispatchRulesSpec) DeepCopyInto(out *ApplicationURLDispatchRulesSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApplicationURLDispatchRulesSpec.
func (in *ApplicationURLDispatchRulesSpec) DeepCopy() *ApplicationURLDispatchRulesSpec {
	if in == nil {
		return nil
	}
	out := new(ApplicationURLDispatchRulesSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApplicationURLDispatchRulesStatus) DeepCopyInto(out *ApplicationURLDispatchRulesStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApplicationURLDispatchRulesStatus.
func (in *ApplicationURLDispatchRulesStatus) DeepCopy() *ApplicationURLDispatchRulesStatus {
	if in == nil {
		return nil
	}
	out := new(ApplicationURLDispatchRulesStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutomaticScalingInitParameters) DeepCopyInto(out *AutomaticScalingInitParameters) {
	*out = *in
	if in.MaxConcurrentRequests != nil {
		in, out := &in.MaxConcurrentRequests, &out.MaxConcurrentRequests
		*out = new(float64)
		**out = **in
	}
	if in.MaxIdleInstances != nil {
		in, out := &in.MaxIdleInstances, &out.MaxIdleInstances
		*out = new(float64)
		**out = **in
	}
	if in.MaxPendingLatency != nil {
		in, out := &in.MaxPendingLatency, &out.MaxPendingLatency
		*out = new(string)
		**out = **in
	}
	if in.MinIdleInstances != nil {
		in, out := &in.MinIdleInstances, &out.MinIdleInstances
		*out = new(float64)
		**out = **in
	}
	if in.MinPendingLatency != nil {
		in, out := &in.MinPendingLatency, &out.MinPendingLatency
		*out = new(string)
		**out = **in
	}
	if in.StandardSchedulerSettings != nil {
		in, out := &in.StandardSchedulerSettings, &out.StandardSchedulerSettings
		*out = make([]StandardSchedulerSettingsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutomaticScalingInitParameters.
func (in *AutomaticScalingInitParameters) DeepCopy() *AutomaticScalingInitParameters {
	if in == nil {
		return nil
	}
	out := new(AutomaticScalingInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutomaticScalingObservation) DeepCopyInto(out *AutomaticScalingObservation) {
	*out = *in
	if in.MaxConcurrentRequests != nil {
		in, out := &in.MaxConcurrentRequests, &out.MaxConcurrentRequests
		*out = new(float64)
		**out = **in
	}
	if in.MaxIdleInstances != nil {
		in, out := &in.MaxIdleInstances, &out.MaxIdleInstances
		*out = new(float64)
		**out = **in
	}
	if in.MaxPendingLatency != nil {
		in, out := &in.MaxPendingLatency, &out.MaxPendingLatency
		*out = new(string)
		**out = **in
	}
	if in.MinIdleInstances != nil {
		in, out := &in.MinIdleInstances, &out.MinIdleInstances
		*out = new(float64)
		**out = **in
	}
	if in.MinPendingLatency != nil {
		in, out := &in.MinPendingLatency, &out.MinPendingLatency
		*out = new(string)
		**out = **in
	}
	if in.StandardSchedulerSettings != nil {
		in, out := &in.StandardSchedulerSettings, &out.StandardSchedulerSettings
		*out = make([]StandardSchedulerSettingsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutomaticScalingObservation.
func (in *AutomaticScalingObservation) DeepCopy() *AutomaticScalingObservation {
	if in == nil {
		return nil
	}
	out := new(AutomaticScalingObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutomaticScalingParameters) DeepCopyInto(out *AutomaticScalingParameters) {
	*out = *in
	if in.MaxConcurrentRequests != nil {
		in, out := &in.MaxConcurrentRequests, &out.MaxConcurrentRequests
		*out = new(float64)
		**out = **in
	}
	if in.MaxIdleInstances != nil {
		in, out := &in.MaxIdleInstances, &out.MaxIdleInstances
		*out = new(float64)
		**out = **in
	}
	if in.MaxPendingLatency != nil {
		in, out := &in.MaxPendingLatency, &out.MaxPendingLatency
		*out = new(string)
		**out = **in
	}
	if in.MinIdleInstances != nil {
		in, out := &in.MinIdleInstances, &out.MinIdleInstances
		*out = new(float64)
		**out = **in
	}
	if in.MinPendingLatency != nil {
		in, out := &in.MinPendingLatency, &out.MinPendingLatency
		*out = new(string)
		**out = **in
	}
	if in.StandardSchedulerSettings != nil {
		in, out := &in.StandardSchedulerSettings, &out.StandardSchedulerSettings
		*out = make([]StandardSchedulerSettingsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutomaticScalingParameters.
func (in *AutomaticScalingParameters) DeepCopy() *AutomaticScalingParameters {
	if in == nil {
		return nil
	}
	out := new(AutomaticScalingParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BasicScalingInitParameters) DeepCopyInto(out *BasicScalingInitParameters) {
	*out = *in
	if in.IdleTimeout != nil {
		in, out := &in.IdleTimeout, &out.IdleTimeout
		*out = new(string)
		**out = **in
	}
	if in.MaxInstances != nil {
		in, out := &in.MaxInstances, &out.MaxInstances
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BasicScalingInitParameters.
func (in *BasicScalingInitParameters) DeepCopy() *BasicScalingInitParameters {
	if in == nil {
		return nil
	}
	out := new(BasicScalingInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BasicScalingObservation) DeepCopyInto(out *BasicScalingObservation) {
	*out = *in
	if in.IdleTimeout != nil {
		in, out := &in.IdleTimeout, &out.IdleTimeout
		*out = new(string)
		**out = **in
	}
	if in.MaxInstances != nil {
		in, out := &in.MaxInstances, &out.MaxInstances
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BasicScalingObservation.
func (in *BasicScalingObservation) DeepCopy() *BasicScalingObservation {
	if in == nil {
		return nil
	}
	out := new(BasicScalingObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BasicScalingParameters) DeepCopyInto(out *BasicScalingParameters) {
	*out = *in
	if in.IdleTimeout != nil {
		in, out := &in.IdleTimeout, &out.IdleTimeout
		*out = new(string)
		**out = **in
	}
	if in.MaxInstances != nil {
		in, out := &in.MaxInstances, &out.MaxInstances
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BasicScalingParameters.
func (in *BasicScalingParameters) DeepCopy() *BasicScalingParameters {
	if in == nil {
		return nil
	}
	out := new(BasicScalingParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CPUUtilizationInitParameters) DeepCopyInto(out *CPUUtilizationInitParameters) {
	*out = *in
	if in.AggregationWindowLength != nil {
		in, out := &in.AggregationWindowLength, &out.AggregationWindowLength
		*out = new(string)
		**out = **in
	}
	if in.TargetUtilization != nil {
		in, out := &in.TargetUtilization, &out.TargetUtilization
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CPUUtilizationInitParameters.
func (in *CPUUtilizationInitParameters) DeepCopy() *CPUUtilizationInitParameters {
	if in == nil {
		return nil
	}
	out := new(CPUUtilizationInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CPUUtilizationObservation) DeepCopyInto(out *CPUUtilizationObservation) {
	*out = *in
	if in.AggregationWindowLength != nil {
		in, out := &in.AggregationWindowLength, &out.AggregationWindowLength
		*out = new(string)
		**out = **in
	}
	if in.TargetUtilization != nil {
		in, out := &in.TargetUtilization, &out.TargetUtilization
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CPUUtilizationObservation.
func (in *CPUUtilizationObservation) DeepCopy() *CPUUtilizationObservation {
	if in == nil {
		return nil
	}
	out := new(CPUUtilizationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CPUUtilizationParameters) DeepCopyInto(out *CPUUtilizationParameters) {
	*out = *in
	if in.AggregationWindowLength != nil {
		in, out := &in.AggregationWindowLength, &out.AggregationWindowLength
		*out = new(string)
		**out = **in
	}
	if in.TargetUtilization != nil {
		in, out := &in.TargetUtilization, &out.TargetUtilization
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CPUUtilizationParameters.
func (in *CPUUtilizationParameters) DeepCopy() *CPUUtilizationParameters {
	if in == nil {
		return nil
	}
	out := new(CPUUtilizationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CloudBuildOptionsInitParameters) DeepCopyInto(out *CloudBuildOptionsInitParameters) {
	*out = *in
	if in.AppYamlPath != nil {
		in, out := &in.AppYamlPath, &out.AppYamlPath
		*out = new(string)
		**out = **in
	}
	if in.CloudBuildTimeout != nil {
		in, out := &in.CloudBuildTimeout, &out.CloudBuildTimeout
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CloudBuildOptionsInitParameters.
func (in *CloudBuildOptionsInitParameters) DeepCopy() *CloudBuildOptionsInitParameters {
	if in == nil {
		return nil
	}
	out := new(CloudBuildOptionsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CloudBuildOptionsObservation) DeepCopyInto(out *CloudBuildOptionsObservation) {
	*out = *in
	if in.AppYamlPath != nil {
		in, out := &in.AppYamlPath, &out.AppYamlPath
		*out = new(string)
		**out = **in
	}
	if in.CloudBuildTimeout != nil {
		in, out := &in.CloudBuildTimeout, &out.CloudBuildTimeout
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CloudBuildOptionsObservation.
func (in *CloudBuildOptionsObservation) DeepCopy() *CloudBuildOptionsObservation {
	if in == nil {
		return nil
	}
	out := new(CloudBuildOptionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CloudBuildOptionsParameters) DeepCopyInto(out *CloudBuildOptionsParameters) {
	*out = *in
	if in.AppYamlPath != nil {
		in, out := &in.AppYamlPath, &out.AppYamlPath
		*out = new(string)
		**out = **in
	}
	if in.CloudBuildTimeout != nil {
		in, out := &in.CloudBuildTimeout, &out.CloudBuildTimeout
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CloudBuildOptionsParameters.
func (in *CloudBuildOptionsParameters) DeepCopy() *CloudBuildOptionsParameters {
	if in == nil {
		return nil
	}
	out := new(CloudBuildOptionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ContainerInitParameters) DeepCopyInto(out *ContainerInitParameters) {
	*out = *in
	if in.Image != nil {
		in, out := &in.Image, &out.Image
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ContainerInitParameters.
func (in *ContainerInitParameters) DeepCopy() *ContainerInitParameters {
	if in == nil {
		return nil
	}
	out := new(ContainerInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ContainerObservation) DeepCopyInto(out *ContainerObservation) {
	*out = *in
	if in.Image != nil {
		in, out := &in.Image, &out.Image
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ContainerObservation.
func (in *ContainerObservation) DeepCopy() *ContainerObservation {
	if in == nil {
		return nil
	}
	out := new(ContainerObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ContainerParameters) DeepCopyInto(out *ContainerParameters) {
	*out = *in
	if in.Image != nil {
		in, out := &in.Image, &out.Image
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ContainerParameters.
func (in *ContainerParameters) DeepCopy() *ContainerParameters {
	if in == nil {
		return nil
	}
	out := new(ContainerParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DeploymentFilesInitParameters) DeepCopyInto(out *DeploymentFilesInitParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Sha1Sum != nil {
		in, out := &in.Sha1Sum, &out.Sha1Sum
		*out = new(string)
		**out = **in
	}
	if in.SourceURL != nil {
		in, out := &in.SourceURL, &out.SourceURL
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DeploymentFilesInitParameters.
func (in *DeploymentFilesInitParameters) DeepCopy() *DeploymentFilesInitParameters {
	if in == nil {
		return nil
	}
	out := new(DeploymentFilesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DeploymentFilesObservation) DeepCopyInto(out *DeploymentFilesObservation) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Sha1Sum != nil {
		in, out := &in.Sha1Sum, &out.Sha1Sum
		*out = new(string)
		**out = **in
	}
	if in.SourceURL != nil {
		in, out := &in.SourceURL, &out.SourceURL
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DeploymentFilesObservation.
func (in *DeploymentFilesObservation) DeepCopy() *DeploymentFilesObservation {
	if in == nil {
		return nil
	}
	out := new(DeploymentFilesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DeploymentFilesParameters) DeepCopyInto(out *DeploymentFilesParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Sha1Sum != nil {
		in, out := &in.Sha1Sum, &out.Sha1Sum
		*out = new(string)
		**out = **in
	}
	if in.SourceURL != nil {
		in, out := &in.SourceURL, &out.SourceURL
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DeploymentFilesParameters.
func (in *DeploymentFilesParameters) DeepCopy() *DeploymentFilesParameters {
	if in == nil {
		return nil
	}
	out := new(DeploymentFilesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DeploymentInitParameters) DeepCopyInto(out *DeploymentInitParameters) {
	*out = *in
	if in.Files != nil {
		in, out := &in.Files, &out.Files
		*out = make([]FilesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Zip != nil {
		in, out := &in.Zip, &out.Zip
		*out = make([]ZipInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DeploymentInitParameters.
func (in *DeploymentInitParameters) DeepCopy() *DeploymentInitParameters {
	if in == nil {
		return nil
	}
	out := new(DeploymentInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DeploymentObservation) DeepCopyInto(out *DeploymentObservation) {
	*out = *in
	if in.Files != nil {
		in, out := &in.Files, &out.Files
		*out = make([]FilesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Zip != nil {
		in, out := &in.Zip, &out.Zip
		*out = make([]ZipObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DeploymentObservation.
func (in *DeploymentObservation) DeepCopy() *DeploymentObservation {
	if in == nil {
		return nil
	}
	out := new(DeploymentObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DeploymentParameters) DeepCopyInto(out *DeploymentParameters) {
	*out = *in
	if in.Files != nil {
		in, out := &in.Files, &out.Files
		*out = make([]FilesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Zip != nil {
		in, out := &in.Zip, &out.Zip
		*out = make([]ZipParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DeploymentParameters.
func (in *DeploymentParameters) DeepCopy() *DeploymentParameters {
	if in == nil {
		return nil
	}
	out := new(DeploymentParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DeploymentZipInitParameters) DeepCopyInto(out *DeploymentZipInitParameters) {
	*out = *in
	if in.FilesCount != nil {
		in, out := &in.FilesCount, &out.FilesCount
		*out = new(float64)
		**out = **in
	}
	if in.SourceURL != nil {
		in, out := &in.SourceURL, &out.SourceURL
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DeploymentZipInitParameters.
func (in *DeploymentZipInitParameters) DeepCopy() *DeploymentZipInitParameters {
	if in == nil {
		return nil
	}
	out := new(DeploymentZipInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DeploymentZipObservation) DeepCopyInto(out *DeploymentZipObservation) {
	*out = *in
	if in.FilesCount != nil {
		in, out := &in.FilesCount, &out.FilesCount
		*out = new(float64)
		**out = **in
	}
	if in.SourceURL != nil {
		in, out := &in.SourceURL, &out.SourceURL
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DeploymentZipObservation.
func (in *DeploymentZipObservation) DeepCopy() *DeploymentZipObservation {
	if in == nil {
		return nil
	}
	out := new(DeploymentZipObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DeploymentZipParameters) DeepCopyInto(out *DeploymentZipParameters) {
	*out = *in
	if in.FilesCount != nil {
		in, out := &in.FilesCount, &out.FilesCount
		*out = new(float64)
		**out = **in
	}
	if in.SourceURL != nil {
		in, out := &in.SourceURL, &out.SourceURL
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DeploymentZipParameters.
func (in *DeploymentZipParameters) DeepCopy() *DeploymentZipParameters {
	if in == nil {
		return nil
	}
	out := new(DeploymentZipParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DiskUtilizationInitParameters) DeepCopyInto(out *DiskUtilizationInitParameters) {
	*out = *in
	if in.TargetReadBytesPerSecond != nil {
		in, out := &in.TargetReadBytesPerSecond, &out.TargetReadBytesPerSecond
		*out = new(float64)
		**out = **in
	}
	if in.TargetReadOpsPerSecond != nil {
		in, out := &in.TargetReadOpsPerSecond, &out.TargetReadOpsPerSecond
		*out = new(float64)
		**out = **in
	}
	if in.TargetWriteBytesPerSecond != nil {
		in, out := &in.TargetWriteBytesPerSecond, &out.TargetWriteBytesPerSecond
		*out = new(float64)
		**out = **in
	}
	if in.TargetWriteOpsPerSecond != nil {
		in, out := &in.TargetWriteOpsPerSecond, &out.TargetWriteOpsPerSecond
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DiskUtilizationInitParameters.
func (in *DiskUtilizationInitParameters) DeepCopy() *DiskUtilizationInitParameters {
	if in == nil {
		return nil
	}
	out := new(DiskUtilizationInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DiskUtilizationObservation) DeepCopyInto(out *DiskUtilizationObservation) {
	*out = *in
	if in.TargetReadBytesPerSecond != nil {
		in, out := &in.TargetReadBytesPerSecond, &out.TargetReadBytesPerSecond
		*out = new(float64)
		**out = **in
	}
	if in.TargetReadOpsPerSecond != nil {
		in, out := &in.TargetReadOpsPerSecond, &out.TargetReadOpsPerSecond
		*out = new(float64)
		**out = **in
	}
	if in.TargetWriteBytesPerSecond != nil {
		in, out := &in.TargetWriteBytesPerSecond, &out.TargetWriteBytesPerSecond
		*out = new(float64)
		**out = **in
	}
	if in.TargetWriteOpsPerSecond != nil {
		in, out := &in.TargetWriteOpsPerSecond, &out.TargetWriteOpsPerSecond
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DiskUtilizationObservation.
func (in *DiskUtilizationObservation) DeepCopy() *DiskUtilizationObservation {
	if in == nil {
		return nil
	}
	out := new(DiskUtilizationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DiskUtilizationParameters) DeepCopyInto(out *DiskUtilizationParameters) {
	*out = *in
	if in.TargetReadBytesPerSecond != nil {
		in, out := &in.TargetReadBytesPerSecond, &out.TargetReadBytesPerSecond
		*out = new(float64)
		**out = **in
	}
	if in.TargetReadOpsPerSecond != nil {
		in, out := &in.TargetReadOpsPerSecond, &out.TargetReadOpsPerSecond
		*out = new(float64)
		**out = **in
	}
	if in.TargetWriteBytesPerSecond != nil {
		in, out := &in.TargetWriteBytesPerSecond, &out.TargetWriteBytesPerSecond
		*out = new(float64)
		**out = **in
	}
	if in.TargetWriteOpsPerSecond != nil {
		in, out := &in.TargetWriteOpsPerSecond, &out.TargetWriteOpsPerSecond
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DiskUtilizationParameters.
func (in *DiskUtilizationParameters) DeepCopy() *DiskUtilizationParameters {
	if in == nil {
		return nil
	}
	out := new(DiskUtilizationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DispatchRulesInitParameters) DeepCopyInto(out *DispatchRulesInitParameters) {
	*out = *in
	if in.Domain != nil {
		in, out := &in.Domain, &out.Domain
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.Service != nil {
		in, out := &in.Service, &out.Service
		*out = new(string)
		**out = **in
	}
	if in.ServiceRef != nil {
		in, out := &in.ServiceRef, &out.ServiceRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ServiceSelector != nil {
		in, out := &in.ServiceSelector, &out.ServiceSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DispatchRulesInitParameters.
func (in *DispatchRulesInitParameters) DeepCopy() *DispatchRulesInitParameters {
	if in == nil {
		return nil
	}
	out := new(DispatchRulesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DispatchRulesObservation) DeepCopyInto(out *DispatchRulesObservation) {
	*out = *in
	if in.Domain != nil {
		in, out := &in.Domain, &out.Domain
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.Service != nil {
		in, out := &in.Service, &out.Service
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DispatchRulesObservation.
func (in *DispatchRulesObservation) DeepCopy() *DispatchRulesObservation {
	if in == nil {
		return nil
	}
	out := new(DispatchRulesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DispatchRulesParameters) DeepCopyInto(out *DispatchRulesParameters) {
	*out = *in
	if in.Domain != nil {
		in, out := &in.Domain, &out.Domain
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.Service != nil {
		in, out := &in.Service, &out.Service
		*out = new(string)
		**out = **in
	}
	if in.ServiceRef != nil {
		in, out := &in.ServiceRef, &out.ServiceRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ServiceSelector != nil {
		in, out := &in.ServiceSelector, &out.ServiceSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DispatchRulesParameters.
func (in *DispatchRulesParameters) DeepCopy() *DispatchRulesParameters {
	if in == nil {
		return nil
	}
	out := new(DispatchRulesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DomainMapping) DeepCopyInto(out *DomainMapping) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DomainMapping.
func (in *DomainMapping) DeepCopy() *DomainMapping {
	if in == nil {
		return nil
	}
	out := new(DomainMapping)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DomainMapping) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DomainMappingInitParameters) DeepCopyInto(out *DomainMappingInitParameters) {
	*out = *in
	if in.OverrideStrategy != nil {
		in, out := &in.OverrideStrategy, &out.OverrideStrategy
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.SSLSettings != nil {
		in, out := &in.SSLSettings, &out.SSLSettings
		*out = new(SSLSettingsInitParameters)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DomainMappingInitParameters.
func (in *DomainMappingInitParameters) DeepCopy() *DomainMappingInitParameters {
	if in == nil {
		return nil
	}
	out := new(DomainMappingInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DomainMappingList) DeepCopyInto(out *DomainMappingList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]DomainMapping, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DomainMappingList.
func (in *DomainMappingList) DeepCopy() *DomainMappingList {
	if in == nil {
		return nil
	}
	out := new(DomainMappingList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DomainMappingList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DomainMappingObservation) DeepCopyInto(out *DomainMappingObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.OverrideStrategy != nil {
		in, out := &in.OverrideStrategy, &out.OverrideStrategy
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.ResourceRecords != nil {
		in, out := &in.ResourceRecords, &out.ResourceRecords
		*out = make([]ResourceRecordsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SSLSettings != nil {
		in, out := &in.SSLSettings, &out.SSLSettings
		*out = new(SSLSettingsObservation)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DomainMappingObservation.
func (in *DomainMappingObservation) DeepCopy() *DomainMappingObservation {
	if in == nil {
		return nil
	}
	out := new(DomainMappingObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DomainMappingParameters) DeepCopyInto(out *DomainMappingParameters) {
	*out = *in
	if in.OverrideStrategy != nil {
		in, out := &in.OverrideStrategy, &out.OverrideStrategy
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.SSLSettings != nil {
		in, out := &in.SSLSettings, &out.SSLSettings
		*out = new(SSLSettingsParameters)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DomainMappingParameters.
func (in *DomainMappingParameters) DeepCopy() *DomainMappingParameters {
	if in == nil {
		return nil
	}
	out := new(DomainMappingParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DomainMappingSpec) DeepCopyInto(out *DomainMappingSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DomainMappingSpec.
func (in *DomainMappingSpec) DeepCopy() *DomainMappingSpec {
	if in == nil {
		return nil
	}
	out := new(DomainMappingSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DomainMappingStatus) DeepCopyInto(out *DomainMappingStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DomainMappingStatus.
func (in *DomainMappingStatus) DeepCopy() *DomainMappingStatus {
	if in == nil {
		return nil
	}
	out := new(DomainMappingStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EndpointsAPIServiceInitParameters) DeepCopyInto(out *EndpointsAPIServiceInitParameters) {
	*out = *in
	if in.ConfigID != nil {
		in, out := &in.ConfigID, &out.ConfigID
		*out = new(string)
		**out = **in
	}
	if in.DisableTraceSampling != nil {
		in, out := &in.DisableTraceSampling, &out.DisableTraceSampling
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.RolloutStrategy != nil {
		in, out := &in.RolloutStrategy, &out.RolloutStrategy
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EndpointsAPIServiceInitParameters.
func (in *EndpointsAPIServiceInitParameters) DeepCopy() *EndpointsAPIServiceInitParameters {
	if in == nil {
		return nil
	}
	out := new(EndpointsAPIServiceInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EndpointsAPIServiceObservation) DeepCopyInto(out *EndpointsAPIServiceObservation) {
	*out = *in
	if in.ConfigID != nil {
		in, out := &in.ConfigID, &out.ConfigID
		*out = new(string)
		**out = **in
	}
	if in.DisableTraceSampling != nil {
		in, out := &in.DisableTraceSampling, &out.DisableTraceSampling
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.RolloutStrategy != nil {
		in, out := &in.RolloutStrategy, &out.RolloutStrategy
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EndpointsAPIServiceObservation.
func (in *EndpointsAPIServiceObservation) DeepCopy() *EndpointsAPIServiceObservation {
	if in == nil {
		return nil
	}
	out := new(EndpointsAPIServiceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EndpointsAPIServiceParameters) DeepCopyInto(out *EndpointsAPIServiceParameters) {
	*out = *in
	if in.ConfigID != nil {
		in, out := &in.ConfigID, &out.ConfigID
		*out = new(string)
		**out = **in
	}
	if in.DisableTraceSampling != nil {
		in, out := &in.DisableTraceSampling, &out.DisableTraceSampling
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.RolloutStrategy != nil {
		in, out := &in.RolloutStrategy, &out.RolloutStrategy
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EndpointsAPIServiceParameters.
func (in *EndpointsAPIServiceParameters) DeepCopy() *EndpointsAPIServiceParameters {
	if in == nil {
		return nil
	}
	out := new(EndpointsAPIServiceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EntrypointInitParameters) DeepCopyInto(out *EntrypointInitParameters) {
	*out = *in
	if in.Shell != nil {
		in, out := &in.Shell, &out.Shell
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EntrypointInitParameters.
func (in *EntrypointInitParameters) DeepCopy() *EntrypointInitParameters {
	if in == nil {
		return nil
	}
	out := new(EntrypointInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EntrypointObservation) DeepCopyInto(out *EntrypointObservation) {
	*out = *in
	if in.Shell != nil {
		in, out := &in.Shell, &out.Shell
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EntrypointObservation.
func (in *EntrypointObservation) DeepCopy() *EntrypointObservation {
	if in == nil {
		return nil
	}
	out := new(EntrypointObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EntrypointParameters) DeepCopyInto(out *EntrypointParameters) {
	*out = *in
	if in.Shell != nil {
		in, out := &in.Shell, &out.Shell
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EntrypointParameters.
func (in *EntrypointParameters) DeepCopy() *EntrypointParameters {
	if in == nil {
		return nil
	}
	out := new(EntrypointParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FeatureSettingsInitParameters) DeepCopyInto(out *FeatureSettingsInitParameters) {
	*out = *in
	if in.SplitHealthChecks != nil {
		in, out := &in.SplitHealthChecks, &out.SplitHealthChecks
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FeatureSettingsInitParameters.
func (in *FeatureSettingsInitParameters) DeepCopy() *FeatureSettingsInitParameters {
	if in == nil {
		return nil
	}
	out := new(FeatureSettingsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FeatureSettingsObservation) DeepCopyInto(out *FeatureSettingsObservation) {
	*out = *in
	if in.SplitHealthChecks != nil {
		in, out := &in.SplitHealthChecks, &out.SplitHealthChecks
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FeatureSettingsObservation.
func (in *FeatureSettingsObservation) DeepCopy() *FeatureSettingsObservation {
	if in == nil {
		return nil
	}
	out := new(FeatureSettingsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FeatureSettingsParameters) DeepCopyInto(out *FeatureSettingsParameters) {
	*out = *in
	if in.SplitHealthChecks != nil {
		in, out := &in.SplitHealthChecks, &out.SplitHealthChecks
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FeatureSettingsParameters.
func (in *FeatureSettingsParameters) DeepCopy() *FeatureSettingsParameters {
	if in == nil {
		return nil
	}
	out := new(FeatureSettingsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FilesInitParameters) DeepCopyInto(out *FilesInitParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Sha1Sum != nil {
		in, out := &in.Sha1Sum, &out.Sha1Sum
		*out = new(string)
		**out = **in
	}
	if in.SourceURL != nil {
		in, out := &in.SourceURL, &out.SourceURL
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FilesInitParameters.
func (in *FilesInitParameters) DeepCopy() *FilesInitParameters {
	if in == nil {
		return nil
	}
	out := new(FilesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FilesObservation) DeepCopyInto(out *FilesObservation) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Sha1Sum != nil {
		in, out := &in.Sha1Sum, &out.Sha1Sum
		*out = new(string)
		**out = **in
	}
	if in.SourceURL != nil {
		in, out := &in.SourceURL, &out.SourceURL
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FilesObservation.
func (in *FilesObservation) DeepCopy() *FilesObservation {
	if in == nil {
		return nil
	}
	out := new(FilesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FilesParameters) DeepCopyInto(out *FilesParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Sha1Sum != nil {
		in, out := &in.Sha1Sum, &out.Sha1Sum
		*out = new(string)
		**out = **in
	}
	if in.SourceURL != nil {
		in, out := &in.SourceURL, &out.SourceURL
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FilesParameters.
func (in *FilesParameters) DeepCopy() *FilesParameters {
	if in == nil {
		return nil
	}
	out := new(FilesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FirewallRule) DeepCopyInto(out *FirewallRule) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FirewallRule.
func (in *FirewallRule) DeepCopy() *FirewallRule {
	if in == nil {
		return nil
	}
	out := new(FirewallRule)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *FirewallRule) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FirewallRuleInitParameters) DeepCopyInto(out *FirewallRuleInitParameters) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Priority != nil {
		in, out := &in.Priority, &out.Priority
		*out = new(float64)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.ProjectRef != nil {
		in, out := &in.ProjectRef, &out.ProjectRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ProjectSelector != nil {
		in, out := &in.ProjectSelector, &out.ProjectSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.SourceRange != nil {
		in, out := &in.SourceRange, &out.SourceRange
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FirewallRuleInitParameters.
func (in *FirewallRuleInitParameters) DeepCopy() *FirewallRuleInitParameters {
	if in == nil {
		return nil
	}
	out := new(FirewallRuleInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FirewallRuleList) DeepCopyInto(out *FirewallRuleList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]FirewallRule, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FirewallRuleList.
func (in *FirewallRuleList) DeepCopy() *FirewallRuleList {
	if in == nil {
		return nil
	}
	out := new(FirewallRuleList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *FirewallRuleList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FirewallRuleObservation) DeepCopyInto(out *FirewallRuleObservation) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Priority != nil {
		in, out := &in.Priority, &out.Priority
		*out = new(float64)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.SourceRange != nil {
		in, out := &in.SourceRange, &out.SourceRange
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FirewallRuleObservation.
func (in *FirewallRuleObservation) DeepCopy() *FirewallRuleObservation {
	if in == nil {
		return nil
	}
	out := new(FirewallRuleObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FirewallRuleParameters) DeepCopyInto(out *FirewallRuleParameters) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Priority != nil {
		in, out := &in.Priority, &out.Priority
		*out = new(float64)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.ProjectRef != nil {
		in, out := &in.ProjectRef, &out.ProjectRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ProjectSelector != nil {
		in, out := &in.ProjectSelector, &out.ProjectSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.SourceRange != nil {
		in, out := &in.SourceRange, &out.SourceRange
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FirewallRuleParameters.
func (in *FirewallRuleParameters) DeepCopy() *FirewallRuleParameters {
	if in == nil {
		return nil
	}
	out := new(FirewallRuleParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FirewallRuleSpec) DeepCopyInto(out *FirewallRuleSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FirewallRuleSpec.
func (in *FirewallRuleSpec) DeepCopy() *FirewallRuleSpec {
	if in == nil {
		return nil
	}
	out := new(FirewallRuleSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FirewallRuleStatus) DeepCopyInto(out *FirewallRuleStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FirewallRuleStatus.
func (in *FirewallRuleStatus) DeepCopy() *FirewallRuleStatus {
	if in == nil {
		return nil
	}
	out := new(FirewallRuleStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FlexibleAppVersion) DeepCopyInto(out *FlexibleAppVersion) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FlexibleAppVersion.
func (in *FlexibleAppVersion) DeepCopy() *FlexibleAppVersion {
	if in == nil {
		return nil
	}
	out := new(FlexibleAppVersion)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *FlexibleAppVersion) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FlexibleAppVersionAutomaticScalingInitParameters) DeepCopyInto(out *FlexibleAppVersionAutomaticScalingInitParameters) {
	*out = *in
	if in.CPUUtilization != nil {
		in, out := &in.CPUUtilization, &out.CPUUtilization
		*out = new(CPUUtilizationInitParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.CoolDownPeriod != nil {
		in, out := &in.CoolDownPeriod, &out.CoolDownPeriod
		*out = new(string)
		**out = **in
	}
	if in.DiskUtilization != nil {
		in, out := &in.DiskUtilization, &out.DiskUtilization
		*out = new(DiskUtilizationInitParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.MaxConcurrentRequests != nil {
		in, out := &in.MaxConcurrentRequests, &out.MaxConcurrentRequests
		*out = new(float64)
		**out = **in
	}
	if in.MaxIdleInstances != nil {
		in, out := &in.MaxIdleInstances, &out.MaxIdleInstances
		*out = new(float64)
		**out = **in
	}
	if in.MaxPendingLatency != nil {
		in, out := &in.MaxPendingLatency, &out.MaxPendingLatency
		*out = new(string)
		**out = **in
	}
	if in.MaxTotalInstances != nil {
		in, out := &in.MaxTotalInstances, &out.MaxTotalInstances
		*out = new(float64)
		**out = **in
	}
	if in.MinIdleInstances != nil {
		in, out := &in.MinIdleInstances, &out.MinIdleInstances
		*out = new(float64)
		**out = **in
	}
	if in.MinPendingLatency != nil {
		in, out := &in.MinPendingLatency, &out.MinPendingLatency
		*out = new(string)
		**out = **in
	}
	if in.MinTotalInstances != nil {
		in, out := &in.MinTotalInstances, &out.MinTotalInstances
		*out = new(float64)
		**out = **in
	}
	if in.NetworkUtilization != nil {
		in, out := &in.NetworkUtilization, &out.NetworkUtilization
		*out = new(NetworkUtilizationInitParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.RequestUtilization != nil {
		in, out := &in.RequestUtilization, &out.RequestUtilization
		*out = new(RequestUtilizationInitParameters)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FlexibleAppVersionAutomaticScalingInitParameters.
func (in *FlexibleAppVersionAutomaticScalingInitParameters) DeepCopy() *FlexibleAppVersionAutomaticScalingInitParameters {
	if in == nil {
		return nil
	}
	out := new(FlexibleAppVersionAutomaticScalingInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FlexibleAppVersionAutomaticScalingObservation) DeepCopyInto(out *FlexibleAppVersionAutomaticScalingObservation) {
	*out = *in
	if in.CPUUtilization != nil {
		in, out := &in.CPUUtilization, &out.CPUUtilization
		*out = new(CPUUtilizationObservation)
		(*in).DeepCopyInto(*out)
	}
	if in.CoolDownPeriod != nil {
		in, out := &in.CoolDownPeriod, &out.CoolDownPeriod
		*out = new(string)
		**out = **in
	}
	if in.DiskUtilization != nil {
		in, out := &in.DiskUtilization, &out.DiskUtilization
		*out = new(DiskUtilizationObservation)
		(*in).DeepCopyInto(*out)
	}
	if in.MaxConcurrentRequests != nil {
		in, out := &in.MaxConcurrentRequests, &out.MaxConcurrentRequests
		*out = new(float64)
		**out = **in
	}
	if in.MaxIdleInstances != nil {
		in, out := &in.MaxIdleInstances, &out.MaxIdleInstances
		*out = new(float64)
		**out = **in
	}
	if in.MaxPendingLatency != nil {
		in, out := &in.MaxPendingLatency, &out.MaxPendingLatency
		*out = new(string)
		**out = **in
	}
	if in.MaxTotalInstances != nil {
		in, out := &in.MaxTotalInstances, &out.MaxTotalInstances
		*out = new(float64)
		**out = **in
	}
	if in.MinIdleInstances != nil {
		in, out := &in.MinIdleInstances, &out.MinIdleInstances
		*out = new(float64)
		**out = **in
	}
	if in.MinPendingLatency != nil {
		in, out := &in.MinPendingLatency, &out.MinPendingLatency
		*out = new(string)
		**out = **in
	}
	if in.MinTotalInstances != nil {
		in, out := &in.MinTotalInstances, &out.MinTotalInstances
		*out = new(float64)
		**out = **in
	}
	if in.NetworkUtilization != nil {
		in, out := &in.NetworkUtilization, &out.NetworkUtilization
		*out = new(NetworkUtilizationObservation)
		(*in).DeepCopyInto(*out)
	}
	if in.RequestUtilization != nil {
		in, out := &in.RequestUtilization, &out.RequestUtilization
		*out = new(RequestUtilizationObservation)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FlexibleAppVersionAutomaticScalingObservation.
func (in *FlexibleAppVersionAutomaticScalingObservation) DeepCopy() *FlexibleAppVersionAutomaticScalingObservation {
	if in == nil {
		return nil
	}
	out := new(FlexibleAppVersionAutomaticScalingObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FlexibleAppVersionAutomaticScalingParameters) DeepCopyInto(out *FlexibleAppVersionAutomaticScalingParameters) {
	*out = *in
	if in.CPUUtilization != nil {
		in, out := &in.CPUUtilization, &out.CPUUtilization
		*out = new(CPUUtilizationParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.CoolDownPeriod != nil {
		in, out := &in.CoolDownPeriod, &out.CoolDownPeriod
		*out = new(string)
		**out = **in
	}
	if in.DiskUtilization != nil {
		in, out := &in.DiskUtilization, &out.DiskUtilization
		*out = new(DiskUtilizationParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.MaxConcurrentRequests != nil {
		in, out := &in.MaxConcurrentRequests, &out.MaxConcurrentRequests
		*out = new(float64)
		**out = **in
	}
	if in.MaxIdleInstances != nil {
		in, out := &in.MaxIdleInstances, &out.MaxIdleInstances
		*out = new(float64)
		**out = **in
	}
	if in.MaxPendingLatency != nil {
		in, out := &in.MaxPendingLatency, &out.MaxPendingLatency
		*out = new(string)
		**out = **in
	}
	if in.MaxTotalInstances != nil {
		in, out := &in.MaxTotalInstances, &out.MaxTotalInstances
		*out = new(float64)
		**out = **in
	}
	if in.MinIdleInstances != nil {
		in, out := &in.MinIdleInstances, &out.MinIdleInstances
		*out = new(float64)
		**out = **in
	}
	if in.MinPendingLatency != nil {
		in, out := &in.MinPendingLatency, &out.MinPendingLatency
		*out = new(string)
		**out = **in
	}
	if in.MinTotalInstances != nil {
		in, out := &in.MinTotalInstances, &out.MinTotalInstances
		*out = new(float64)
		**out = **in
	}
	if in.NetworkUtilization != nil {
		in, out := &in.NetworkUtilization, &out.NetworkUtilization
		*out = new(NetworkUtilizationParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.RequestUtilization != nil {
		in, out := &in.RequestUtilization, &out.RequestUtilization
		*out = new(RequestUtilizationParameters)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FlexibleAppVersionAutomaticScalingParameters.
func (in *FlexibleAppVersionAutomaticScalingParameters) DeepCopy() *FlexibleAppVersionAutomaticScalingParameters {
	if in == nil {
		return nil
	}
	out := new(FlexibleAppVersionAutomaticScalingParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FlexibleAppVersionDeploymentInitParameters) DeepCopyInto(out *FlexibleAppVersionDeploymentInitParameters) {
	*out = *in
	if in.CloudBuildOptions != nil {
		in, out := &in.CloudBuildOptions, &out.CloudBuildOptions
		*out = new(CloudBuildOptionsInitParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.Container != nil {
		in, out := &in.Container, &out.Container
		*out = new(ContainerInitParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.Files != nil {
		in, out := &in.Files, &out.Files
		*out = make([]DeploymentFilesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Zip != nil {
		in, out := &in.Zip, &out.Zip
		*out = new(DeploymentZipInitParameters)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FlexibleAppVersionDeploymentInitParameters.
func (in *FlexibleAppVersionDeploymentInitParameters) DeepCopy() *FlexibleAppVersionDeploymentInitParameters {
	if in == nil {
		return nil
	}
	out := new(FlexibleAppVersionDeploymentInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FlexibleAppVersionDeploymentObservation) DeepCopyInto(out *FlexibleAppVersionDeploymentObservation) {
	*out = *in
	if in.CloudBuildOptions != nil {
		in, out := &in.CloudBuildOptions, &out.CloudBuildOptions
		*out = new(CloudBuildOptionsObservation)
		(*in).DeepCopyInto(*out)
	}
	if in.Container != nil {
		in, out := &in.Container, &out.Container
		*out = new(ContainerObservation)
		(*in).DeepCopyInto(*out)
	}
	if in.Files != nil {
		in, out := &in.Files, &out.Files
		*out = make([]DeploymentFilesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Zip != nil {
		in, out := &in.Zip, &out.Zip
		*out = new(DeploymentZipObservation)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FlexibleAppVersionDeploymentObservation.
func (in *FlexibleAppVersionDeploymentObservation) DeepCopy() *FlexibleAppVersionDeploymentObservation {
	if in == nil {
		return nil
	}
	out := new(FlexibleAppVersionDeploymentObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FlexibleAppVersionDeploymentParameters) DeepCopyInto(out *FlexibleAppVersionDeploymentParameters) {
	*out = *in
	if in.CloudBuildOptions != nil {
		in, out := &in.CloudBuildOptions, &out.CloudBuildOptions
		*out = new(CloudBuildOptionsParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.Container != nil {
		in, out := &in.Container, &out.Container
		*out = new(ContainerParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.Files != nil {
		in, out := &in.Files, &out.Files
		*out = make([]DeploymentFilesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Zip != nil {
		in, out := &in.Zip, &out.Zip
		*out = new(DeploymentZipParameters)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FlexibleAppVersionDeploymentParameters.
func (in *FlexibleAppVersionDeploymentParameters) DeepCopy() *FlexibleAppVersionDeploymentParameters {
	if in == nil {
		return nil
	}
	out := new(FlexibleAppVersionDeploymentParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FlexibleAppVersionEntrypointInitParameters) DeepCopyInto(out *FlexibleAppVersionEntrypointInitParameters) {
	*out = *in
	if in.Shell != nil {
		in, out := &in.Shell, &out.Shell
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FlexibleAppVersionEntrypointInitParameters.
func (in *FlexibleAppVersionEntrypointInitParameters) DeepCopy() *FlexibleAppVersionEntrypointInitParameters {
	if in == nil {
		return nil
	}
	out := new(FlexibleAppVersionEntrypointInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FlexibleAppVersionEntrypointObservation) DeepCopyInto(out *FlexibleAppVersionEntrypointObservation) {
	*out = *in
	if in.Shell != nil {
		in, out := &in.Shell, &out.Shell
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FlexibleAppVersionEntrypointObservation.
func (in *FlexibleAppVersionEntrypointObservation) DeepCopy() *FlexibleAppVersionEntrypointObservation {
	if in == nil {
		return nil
	}
	out := new(FlexibleAppVersionEntrypointObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FlexibleAppVersionEntrypointParameters) DeepCopyInto(out *FlexibleAppVersionEntrypointParameters) {
	*out = *in
	if in.Shell != nil {
		in, out := &in.Shell, &out.Shell
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FlexibleAppVersionEntrypointParameters.
func (in *FlexibleAppVersionEntrypointParameters) DeepCopy() *FlexibleAppVersionEntrypointParameters {
	if in == nil {
		return nil
	}
	out := new(FlexibleAppVersionEntrypointParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FlexibleAppVersionHandlersInitParameters) DeepCopyInto(out *FlexibleAppVersionHandlersInitParameters) {
	*out = *in
	if in.AuthFailAction != nil {
		in, out := &in.AuthFailAction, &out.AuthFailAction
		*out = new(string)
		**out = **in
	}
	if in.Login != nil {
		in, out := &in.Login, &out.Login
		*out = new(string)
		**out = **in
	}
	if in.RedirectHTTPResponseCode != nil {
		in, out := &in.RedirectHTTPResponseCode, &out.RedirectHTTPResponseCode
		*out = new(string)
		**out = **in
	}
	if in.Script != nil {
		in, out := &in.Script, &out.Script
		*out = new(HandlersScriptInitParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.SecurityLevel != nil {
		in, out := &in.SecurityLevel, &out.SecurityLevel
		*out = new(string)
		**out = **in
	}
	if in.StaticFiles != nil {
		in, out := &in.StaticFiles, &out.StaticFiles
		*out = new(HandlersStaticFilesInitParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.URLRegex != nil {
		in, out := &in.URLRegex, &out.URLRegex
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FlexibleAppVersionHandlersInitParameters.
func (in *FlexibleAppVersionHandlersInitParameters) DeepCopy() *FlexibleAppVersionHandlersInitParameters {
	if in == nil {
		return nil
	}
	out := new(FlexibleAppVersionHandlersInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FlexibleAppVersionHandlersObservation) DeepCopyInto(out *FlexibleAppVersionHandlersObservation) {
	*out = *in
	if in.AuthFailAction != nil {
		in, out := &in.AuthFailAction, &out.AuthFailAction
		*out = new(string)
		**out = **in
	}
	if in.Login != nil {
		in, out := &in.Login, &out.Login
		*out = new(string)
		**out = **in
	}
	if in.RedirectHTTPResponseCode != nil {
		in, out := &in.RedirectHTTPResponseCode, &out.RedirectHTTPResponseCode
		*out = new(string)
		**out = **in
	}
	if in.Script != nil {
		in, out := &in.Script, &out.Script
		*out = new(HandlersScriptObservation)
		(*in).DeepCopyInto(*out)
	}
	if in.SecurityLevel != nil {
		in, out := &in.SecurityLevel, &out.SecurityLevel
		*out = new(string)
		**out = **in
	}
	if in.StaticFiles != nil {
		in, out := &in.StaticFiles, &out.StaticFiles
		*out = new(HandlersStaticFilesObservation)
		(*in).DeepCopyInto(*out)
	}
	if in.URLRegex != nil {
		in, out := &in.URLRegex, &out.URLRegex
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FlexibleAppVersionHandlersObservation.
func (in *FlexibleAppVersionHandlersObservation) DeepCopy() *FlexibleAppVersionHandlersObservation {
	if in == nil {
		return nil
	}
	out := new(FlexibleAppVersionHandlersObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FlexibleAppVersionHandlersParameters) DeepCopyInto(out *FlexibleAppVersionHandlersParameters) {
	*out = *in
	if in.AuthFailAction != nil {
		in, out := &in.AuthFailAction, &out.AuthFailAction
		*out = new(string)
		**out = **in
	}
	if in.Login != nil {
		in, out := &in.Login, &out.Login
		*out = new(string)
		**out = **in
	}
	if in.RedirectHTTPResponseCode != nil {
		in, out := &in.RedirectHTTPResponseCode, &out.RedirectHTTPResponseCode
		*out = new(string)
		**out = **in
	}
	if in.Script != nil {
		in, out := &in.Script, &out.Script
		*out = new(HandlersScriptParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.SecurityLevel != nil {
		in, out := &in.SecurityLevel, &out.SecurityLevel
		*out = new(string)
		**out = **in
	}
	if in.StaticFiles != nil {
		in, out := &in.StaticFiles, &out.StaticFiles
		*out = new(HandlersStaticFilesParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.URLRegex != nil {
		in, out := &in.URLRegex, &out.URLRegex
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FlexibleAppVersionHandlersParameters.
func (in *FlexibleAppVersionHandlersParameters) DeepCopy() *FlexibleAppVersionHandlersParameters {
	if in == nil {
		return nil
	}
	out := new(FlexibleAppVersionHandlersParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FlexibleAppVersionInitParameters) DeepCopyInto(out *FlexibleAppVersionInitParameters) {
	*out = *in
	if in.APIConfig != nil {
		in, out := &in.APIConfig, &out.APIConfig
		*out = new(APIConfigInitParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.AutomaticScaling != nil {
		in, out := &in.AutomaticScaling, &out.AutomaticScaling
		*out = new(FlexibleAppVersionAutomaticScalingInitParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.BetaSettings != nil {
		in, out := &in.BetaSettings, &out.BetaSettings
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DefaultExpiration != nil {
		in, out := &in.DefaultExpiration, &out.DefaultExpiration
		*out = new(string)
		**out = **in
	}
	if in.DeleteServiceOnDestroy != nil {
		in, out := &in.DeleteServiceOnDestroy, &out.DeleteServiceOnDestroy
		*out = new(bool)
		**out = **in
	}
	if in.Deployment != nil {
		in, out := &in.Deployment, &out.Deployment
		*out = new(FlexibleAppVersionDeploymentInitParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.EndpointsAPIService != nil {
		in, out := &in.EndpointsAPIService, &out.EndpointsAPIService
		*out = new(EndpointsAPIServiceInitParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.Entrypoint != nil {
		in, out := &in.Entrypoint, &out.Entrypoint
		*out = new(FlexibleAppVersionEntrypointInitParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.EnvVariables != nil {
		in, out := &in.EnvVariables, &out.EnvVariables
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.FlexibleRuntimeSettings != nil {
		in, out := &in.FlexibleRuntimeSettings, &out.FlexibleRuntimeSettings
		*out = new(FlexibleRuntimeSettingsInitParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.Handlers != nil {
		in, out := &in.Handlers, &out.Handlers
		*out = make([]FlexibleAppVersionHandlersInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.InboundServices != nil {
		in, out := &in.InboundServices, &out.InboundServices
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.InstanceClass != nil {
		in, out := &in.InstanceClass, &out.InstanceClass
		*out = new(string)
		**out = **in
	}
	if in.LivenessCheck != nil {
		in, out := &in.LivenessCheck, &out.LivenessCheck
		*out = new(LivenessCheckInitParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.ManualScaling != nil {
		in, out := &in.ManualScaling, &out.ManualScaling
		*out = new(FlexibleAppVersionManualScalingInitParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.Network != nil {
		in, out := &in.Network, &out.Network
		*out = new(NetworkInitParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.NobuildFilesRegex != nil {
		in, out := &in.NobuildFilesRegex, &out.NobuildFilesRegex
		*out = new(string)
		**out = **in
	}
	if in.NoopOnDestroy != nil {
		in, out := &in.NoopOnDestroy, &out.NoopOnDestroy
		*out = new(bool)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.ProjectRef != nil {
		in, out := &in.ProjectRef, &out.ProjectRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ProjectSelector != nil {
		in, out := &in.ProjectSelector, &out.ProjectSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.ReadinessCheck != nil {
		in, out := &in.ReadinessCheck, &out.ReadinessCheck
		*out = new(ReadinessCheckInitParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.Resources != nil {
		in, out := &in.Resources, &out.Resources
		*out = new(ResourcesInitParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.Runtime != nil {
		in, out := &in.Runtime, &out.Runtime
		*out = new(string)
		**out = **in
	}
	if in.RuntimeAPIVersion != nil {
		in, out := &in.RuntimeAPIVersion, &out.RuntimeAPIVersion
		*out = new(string)
		**out = **in
	}
	if in.RuntimeChannel != nil {
		in, out := &in.RuntimeChannel, &out.RuntimeChannel
		*out = new(string)
		**out = **in
	}
	if in.RuntimeMainExecutablePath != nil {
		in, out := &in.RuntimeMainExecutablePath, &out.RuntimeMainExecutablePath
		*out = new(string)
		**out = **in
	}
	if in.ServiceAccount != nil {
		in, out := &in.ServiceAccount, &out.ServiceAccount
		*out = new(string)
		**out = **in
	}
	if in.ServiceAccountRef != nil {
		in, out := &in.ServiceAccountRef, &out.ServiceAccountRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ServiceAccountSelector != nil {
		in, out := &in.ServiceAccountSelector, &out.ServiceAccountSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.ServingStatus != nil {
		in, out := &in.ServingStatus, &out.ServingStatus
		*out = new(string)
		**out = **in
	}
	if in.VPCAccessConnector != nil {
		in, out := &in.VPCAccessConnector, &out.VPCAccessConnector
		*out = new(FlexibleAppVersionVPCAccessConnectorInitParameters)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FlexibleAppVersionInitParameters.
func (in *FlexibleAppVersionInitParameters) DeepCopy() *FlexibleAppVersionInitParameters {
	if in == nil {
		return nil
	}
	out := new(FlexibleAppVersionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FlexibleAppVersionList) DeepCopyInto(out *FlexibleAppVersionList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]FlexibleAppVersion, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FlexibleAppVersionList.
func (in *FlexibleAppVersionList) DeepCopy() *FlexibleAppVersionList {
	if in == nil {
		return nil
	}
	out := new(FlexibleAppVersionList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *FlexibleAppVersionList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FlexibleAppVersionManualScalingInitParameters) DeepCopyInto(out *FlexibleAppVersionManualScalingInitParameters) {
	*out = *in
	if in.Instances != nil {
		in, out := &in.Instances, &out.Instances
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FlexibleAppVersionManualScalingInitParameters.
func (in *FlexibleAppVersionManualScalingInitParameters) DeepCopy() *FlexibleAppVersionManualScalingInitParameters {
	if in == nil {
		return nil
	}
	out := new(FlexibleAppVersionManualScalingInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FlexibleAppVersionManualScalingObservation) DeepCopyInto(out *FlexibleAppVersionManualScalingObservation) {
	*out = *in
	if in.Instances != nil {
		in, out := &in.Instances, &out.Instances
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FlexibleAppVersionManualScalingObservation.
func (in *FlexibleAppVersionManualScalingObservation) DeepCopy() *FlexibleAppVersionManualScalingObservation {
	if in == nil {
		return nil
	}
	out := new(FlexibleAppVersionManualScalingObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FlexibleAppVersionManualScalingParameters) DeepCopyInto(out *FlexibleAppVersionManualScalingParameters) {
	*out = *in
	if in.Instances != nil {
		in, out := &in.Instances, &out.Instances
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FlexibleAppVersionManualScalingParameters.
func (in *FlexibleAppVersionManualScalingParameters) DeepCopy() *FlexibleAppVersionManualScalingParameters {
	if in == nil {
		return nil
	}
	out := new(FlexibleAppVersionManualScalingParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FlexibleAppVersionObservation) DeepCopyInto(out *FlexibleAppVersionObservation) {
	*out = *in
	if in.APIConfig != nil {
		in, out := &in.APIConfig, &out.APIConfig
		*out = new(APIConfigObservation)
		(*in).DeepCopyInto(*out)
	}
	if in.AutomaticScaling != nil {
		in, out := &in.AutomaticScaling, &out.AutomaticScaling
		*out = new(FlexibleAppVersionAutomaticScalingObservation)
		(*in).DeepCopyInto(*out)
	}
	if in.BetaSettings != nil {
		in, out := &in.BetaSettings, &out.BetaSettings
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DefaultExpiration != nil {
		in, out := &in.DefaultExpiration, &out.DefaultExpiration
		*out = new(string)
		**out = **in
	}
	if in.DeleteServiceOnDestroy != nil {
		in, out := &in.DeleteServiceOnDestroy, &out.DeleteServiceOnDestroy
		*out = new(bool)
		**out = **in
	}
	if in.Deployment != nil {
		in, out := &in.Deployment, &out.Deployment
		*out = new(FlexibleAppVersionDeploymentObservation)
		(*in).DeepCopyInto(*out)
	}
	if in.EndpointsAPIService != nil {
		in, out := &in.EndpointsAPIService, &out.EndpointsAPIService
		*out = new(EndpointsAPIServiceObservation)
		(*in).DeepCopyInto(*out)
	}
	if in.Entrypoint != nil {
		in, out := &in.Entrypoint, &out.Entrypoint
		*out = new(FlexibleAppVersionEntrypointObservation)
		(*in).DeepCopyInto(*out)
	}
	if in.EnvVariables != nil {
		in, out := &in.EnvVariables, &out.EnvVariables
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.FlexibleRuntimeSettings != nil {
		in, out := &in.FlexibleRuntimeSettings, &out.FlexibleRuntimeSettings
		*out = new(FlexibleRuntimeSettingsObservation)
		(*in).DeepCopyInto(*out)
	}
	if in.Handlers != nil {
		in, out := &in.Handlers, &out.Handlers
		*out = make([]FlexibleAppVersionHandlersObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.InboundServices != nil {
		in, out := &in.InboundServices, &out.InboundServices
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.InstanceClass != nil {
		in, out := &in.InstanceClass, &out.InstanceClass
		*out = new(string)
		**out = **in
	}
	if in.LivenessCheck != nil {
		in, out := &in.LivenessCheck, &out.LivenessCheck
		*out = new(LivenessCheckObservation)
		(*in).DeepCopyInto(*out)
	}
	if in.ManualScaling != nil {
		in, out := &in.ManualScaling, &out.ManualScaling
		*out = new(FlexibleAppVersionManualScalingObservation)
		(*in).DeepCopyInto(*out)
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Network != nil {
		in, out := &in.Network, &out.Network
		*out = new(NetworkObservation)
		(*in).DeepCopyInto(*out)
	}
	if in.NobuildFilesRegex != nil {
		in, out := &in.NobuildFilesRegex, &out.NobuildFilesRegex
		*out = new(string)
		**out = **in
	}
	if in.NoopOnDestroy != nil {
		in, out := &in.NoopOnDestroy, &out.NoopOnDestroy
		*out = new(bool)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.ReadinessCheck != nil {
		in, out := &in.ReadinessCheck, &out.ReadinessCheck
		*out = new(ReadinessCheckObservation)
		(*in).DeepCopyInto(*out)
	}
	if in.Resources != nil {
		in, out := &in.Resources, &out.Resources
		*out = new(ResourcesObservation)
		(*in).DeepCopyInto(*out)
	}
	if in.Runtime != nil {
		in, out := &in.Runtime, &out.Runtime
		*out = new(string)
		**out = **in
	}
	if in.RuntimeAPIVersion != nil {
		in, out := &in.RuntimeAPIVersion, &out.RuntimeAPIVersion
		*out = new(string)
		**out = **in
	}
	if in.RuntimeChannel != nil {
		in, out := &in.RuntimeChannel, &out.RuntimeChannel
		*out = new(string)
		**out = **in
	}
	if in.RuntimeMainExecutablePath != nil {
		in, out := &in.RuntimeMainExecutablePath, &out.RuntimeMainExecutablePath
		*out = new(string)
		**out = **in
	}
	if in.Service != nil {
		in, out := &in.Service, &out.Service
		*out = new(string)
		**out = **in
	}
	if in.ServiceAccount != nil {
		in, out := &in.ServiceAccount, &out.ServiceAccount
		*out = new(string)
		**out = **in
	}
	if in.ServingStatus != nil {
		in, out := &in.ServingStatus, &out.ServingStatus
		*out = new(string)
		**out = **in
	}
	if in.VPCAccessConnector != nil {
		in, out := &in.VPCAccessConnector, &out.VPCAccessConnector
		*out = new(FlexibleAppVersionVPCAccessConnectorObservation)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FlexibleAppVersionObservation.
func (in *FlexibleAppVersionObservation) DeepCopy() *FlexibleAppVersionObservation {
	if in == nil {
		return nil
	}
	out := new(FlexibleAppVersionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FlexibleAppVersionParameters) DeepCopyInto(out *FlexibleAppVersionParameters) {
	*out = *in
	if in.APIConfig != nil {
		in, out := &in.APIConfig, &out.APIConfig
		*out = new(APIConfigParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.AutomaticScaling != nil {
		in, out := &in.AutomaticScaling, &out.AutomaticScaling
		*out = new(FlexibleAppVersionAutomaticScalingParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.BetaSettings != nil {
		in, out := &in.BetaSettings, &out.BetaSettings
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DefaultExpiration != nil {
		in, out := &in.DefaultExpiration, &out.DefaultExpiration
		*out = new(string)
		**out = **in
	}
	if in.DeleteServiceOnDestroy != nil {
		in, out := &in.DeleteServiceOnDestroy, &out.DeleteServiceOnDestroy
		*out = new(bool)
		**out = **in
	}
	if in.Deployment != nil {
		in, out := &in.Deployment, &out.Deployment
		*out = new(FlexibleAppVersionDeploymentParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.EndpointsAPIService != nil {
		in, out := &in.EndpointsAPIService, &out.EndpointsAPIService
		*out = new(EndpointsAPIServiceParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.Entrypoint != nil {
		in, out := &in.Entrypoint, &out.Entrypoint
		*out = new(FlexibleAppVersionEntrypointParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.EnvVariables != nil {
		in, out := &in.EnvVariables, &out.EnvVariables
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.FlexibleRuntimeSettings != nil {
		in, out := &in.FlexibleRuntimeSettings, &out.FlexibleRuntimeSettings
		*out = new(FlexibleRuntimeSettingsParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.Handlers != nil {
		in, out := &in.Handlers, &out.Handlers
		*out = make([]FlexibleAppVersionHandlersParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.InboundServices != nil {
		in, out := &in.InboundServices, &out.InboundServices
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.InstanceClass != nil {
		in, out := &in.InstanceClass, &out.InstanceClass
		*out = new(string)
		**out = **in
	}
	if in.LivenessCheck != nil {
		in, out := &in.LivenessCheck, &out.LivenessCheck
		*out = new(LivenessCheckParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.ManualScaling != nil {
		in, out := &in.ManualScaling, &out.ManualScaling
		*out = new(FlexibleAppVersionManualScalingParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.Network != nil {
		in, out := &in.Network, &out.Network
		*out = new(NetworkParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.NobuildFilesRegex != nil {
		in, out := &in.NobuildFilesRegex, &out.NobuildFilesRegex
		*out = new(string)
		**out = **in
	}
	if in.NoopOnDestroy != nil {
		in, out := &in.NoopOnDestroy, &out.NoopOnDestroy
		*out = new(bool)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.ProjectRef != nil {
		in, out := &in.ProjectRef, &out.ProjectRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ProjectSelector != nil {
		in, out := &in.ProjectSelector, &out.ProjectSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.ReadinessCheck != nil {
		in, out := &in.ReadinessCheck, &out.ReadinessCheck
		*out = new(ReadinessCheckParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.Resources != nil {
		in, out := &in.Resources, &out.Resources
		*out = new(ResourcesParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.Runtime != nil {
		in, out := &in.Runtime, &out.Runtime
		*out = new(string)
		**out = **in
	}
	if in.RuntimeAPIVersion != nil {
		in, out := &in.RuntimeAPIVersion, &out.RuntimeAPIVersion
		*out = new(string)
		**out = **in
	}
	if in.RuntimeChannel != nil {
		in, out := &in.RuntimeChannel, &out.RuntimeChannel
		*out = new(string)
		**out = **in
	}
	if in.RuntimeMainExecutablePath != nil {
		in, out := &in.RuntimeMainExecutablePath, &out.RuntimeMainExecutablePath
		*out = new(string)
		**out = **in
	}
	if in.Service != nil {
		in, out := &in.Service, &out.Service
		*out = new(string)
		**out = **in
	}
	if in.ServiceAccount != nil {
		in, out := &in.ServiceAccount, &out.ServiceAccount
		*out = new(string)
		**out = **in
	}
	if in.ServiceAccountRef != nil {
		in, out := &in.ServiceAccountRef, &out.ServiceAccountRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ServiceAccountSelector != nil {
		in, out := &in.ServiceAccountSelector, &out.ServiceAccountSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.ServingStatus != nil {
		in, out := &in.ServingStatus, &out.ServingStatus
		*out = new(string)
		**out = **in
	}
	if in.VPCAccessConnector != nil {
		in, out := &in.VPCAccessConnector, &out.VPCAccessConnector
		*out = new(FlexibleAppVersionVPCAccessConnectorParameters)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FlexibleAppVersionParameters.
func (in *FlexibleAppVersionParameters) DeepCopy() *FlexibleAppVersionParameters {
	if in == nil {
		return nil
	}
	out := new(FlexibleAppVersionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FlexibleAppVersionSpec) DeepCopyInto(out *FlexibleAppVersionSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FlexibleAppVersionSpec.
func (in *FlexibleAppVersionSpec) DeepCopy() *FlexibleAppVersionSpec {
	if in == nil {
		return nil
	}
	out := new(FlexibleAppVersionSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FlexibleAppVersionStatus) DeepCopyInto(out *FlexibleAppVersionStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FlexibleAppVersionStatus.
func (in *FlexibleAppVersionStatus) DeepCopy() *FlexibleAppVersionStatus {
	if in == nil {
		return nil
	}
	out := new(FlexibleAppVersionStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FlexibleAppVersionVPCAccessConnectorInitParameters) DeepCopyInto(out *FlexibleAppVersionVPCAccessConnectorInitParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FlexibleAppVersionVPCAccessConnectorInitParameters.
func (in *FlexibleAppVersionVPCAccessConnectorInitParameters) DeepCopy() *FlexibleAppVersionVPCAccessConnectorInitParameters {
	if in == nil {
		return nil
	}
	out := new(FlexibleAppVersionVPCAccessConnectorInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FlexibleAppVersionVPCAccessConnectorObservation) DeepCopyInto(out *FlexibleAppVersionVPCAccessConnectorObservation) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FlexibleAppVersionVPCAccessConnectorObservation.
func (in *FlexibleAppVersionVPCAccessConnectorObservation) DeepCopy() *FlexibleAppVersionVPCAccessConnectorObservation {
	if in == nil {
		return nil
	}
	out := new(FlexibleAppVersionVPCAccessConnectorObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FlexibleAppVersionVPCAccessConnectorParameters) DeepCopyInto(out *FlexibleAppVersionVPCAccessConnectorParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FlexibleAppVersionVPCAccessConnectorParameters.
func (in *FlexibleAppVersionVPCAccessConnectorParameters) DeepCopy() *FlexibleAppVersionVPCAccessConnectorParameters {
	if in == nil {
		return nil
	}
	out := new(FlexibleAppVersionVPCAccessConnectorParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FlexibleRuntimeSettingsInitParameters) DeepCopyInto(out *FlexibleRuntimeSettingsInitParameters) {
	*out = *in
	if in.OperatingSystem != nil {
		in, out := &in.OperatingSystem, &out.OperatingSystem
		*out = new(string)
		**out = **in
	}
	if in.RuntimeVersion != nil {
		in, out := &in.RuntimeVersion, &out.RuntimeVersion
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FlexibleRuntimeSettingsInitParameters.
func (in *FlexibleRuntimeSettingsInitParameters) DeepCopy() *FlexibleRuntimeSettingsInitParameters {
	if in == nil {
		return nil
	}
	out := new(FlexibleRuntimeSettingsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FlexibleRuntimeSettingsObservation) DeepCopyInto(out *FlexibleRuntimeSettingsObservation) {
	*out = *in
	if in.OperatingSystem != nil {
		in, out := &in.OperatingSystem, &out.OperatingSystem
		*out = new(string)
		**out = **in
	}
	if in.RuntimeVersion != nil {
		in, out := &in.RuntimeVersion, &out.RuntimeVersion
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FlexibleRuntimeSettingsObservation.
func (in *FlexibleRuntimeSettingsObservation) DeepCopy() *FlexibleRuntimeSettingsObservation {
	if in == nil {
		return nil
	}
	out := new(FlexibleRuntimeSettingsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FlexibleRuntimeSettingsParameters) DeepCopyInto(out *FlexibleRuntimeSettingsParameters) {
	*out = *in
	if in.OperatingSystem != nil {
		in, out := &in.OperatingSystem, &out.OperatingSystem
		*out = new(string)
		**out = **in
	}
	if in.RuntimeVersion != nil {
		in, out := &in.RuntimeVersion, &out.RuntimeVersion
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FlexibleRuntimeSettingsParameters.
func (in *FlexibleRuntimeSettingsParameters) DeepCopy() *FlexibleRuntimeSettingsParameters {
	if in == nil {
		return nil
	}
	out := new(FlexibleRuntimeSettingsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HandlersInitParameters) DeepCopyInto(out *HandlersInitParameters) {
	*out = *in
	if in.AuthFailAction != nil {
		in, out := &in.AuthFailAction, &out.AuthFailAction
		*out = new(string)
		**out = **in
	}
	if in.Login != nil {
		in, out := &in.Login, &out.Login
		*out = new(string)
		**out = **in
	}
	if in.RedirectHTTPResponseCode != nil {
		in, out := &in.RedirectHTTPResponseCode, &out.RedirectHTTPResponseCode
		*out = new(string)
		**out = **in
	}
	if in.Script != nil {
		in, out := &in.Script, &out.Script
		*out = make([]ScriptInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SecurityLevel != nil {
		in, out := &in.SecurityLevel, &out.SecurityLevel
		*out = new(string)
		**out = **in
	}
	if in.StaticFiles != nil {
		in, out := &in.StaticFiles, &out.StaticFiles
		*out = make([]StaticFilesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.URLRegex != nil {
		in, out := &in.URLRegex, &out.URLRegex
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HandlersInitParameters.
func (in *HandlersInitParameters) DeepCopy() *HandlersInitParameters {
	if in == nil {
		return nil
	}
	out := new(HandlersInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HandlersObservation) DeepCopyInto(out *HandlersObservation) {
	*out = *in
	if in.AuthFailAction != nil {
		in, out := &in.AuthFailAction, &out.AuthFailAction
		*out = new(string)
		**out = **in
	}
	if in.Login != nil {
		in, out := &in.Login, &out.Login
		*out = new(string)
		**out = **in
	}
	if in.RedirectHTTPResponseCode != nil {
		in, out := &in.RedirectHTTPResponseCode, &out.RedirectHTTPResponseCode
		*out = new(string)
		**out = **in
	}
	if in.Script != nil {
		in, out := &in.Script, &out.Script
		*out = make([]ScriptObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SecurityLevel != nil {
		in, out := &in.SecurityLevel, &out.SecurityLevel
		*out = new(string)
		**out = **in
	}
	if in.StaticFiles != nil {
		in, out := &in.StaticFiles, &out.StaticFiles
		*out = make([]StaticFilesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.URLRegex != nil {
		in, out := &in.URLRegex, &out.URLRegex
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HandlersObservation.
func (in *HandlersObservation) DeepCopy() *HandlersObservation {
	if in == nil {
		return nil
	}
	out := new(HandlersObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HandlersParameters) DeepCopyInto(out *HandlersParameters) {
	*out = *in
	if in.AuthFailAction != nil {
		in, out := &in.AuthFailAction, &out.AuthFailAction
		*out = new(string)
		**out = **in
	}
	if in.Login != nil {
		in, out := &in.Login, &out.Login
		*out = new(string)
		**out = **in
	}
	if in.RedirectHTTPResponseCode != nil {
		in, out := &in.RedirectHTTPResponseCode, &out.RedirectHTTPResponseCode
		*out = new(string)
		**out = **in
	}
	if in.Script != nil {
		in, out := &in.Script, &out.Script
		*out = make([]ScriptParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SecurityLevel != nil {
		in, out := &in.SecurityLevel, &out.SecurityLevel
		*out = new(string)
		**out = **in
	}
	if in.StaticFiles != nil {
		in, out := &in.StaticFiles, &out.StaticFiles
		*out = make([]StaticFilesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.URLRegex != nil {
		in, out := &in.URLRegex, &out.URLRegex
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HandlersParameters.
func (in *HandlersParameters) DeepCopy() *HandlersParameters {
	if in == nil {
		return nil
	}
	out := new(HandlersParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HandlersScriptInitParameters) DeepCopyInto(out *HandlersScriptInitParameters) {
	*out = *in
	if in.ScriptPath != nil {
		in, out := &in.ScriptPath, &out.ScriptPath
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HandlersScriptInitParameters.
func (in *HandlersScriptInitParameters) DeepCopy() *HandlersScriptInitParameters {
	if in == nil {
		return nil
	}
	out := new(HandlersScriptInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HandlersScriptObservation) DeepCopyInto(out *HandlersScriptObservation) {
	*out = *in
	if in.ScriptPath != nil {
		in, out := &in.ScriptPath, &out.ScriptPath
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HandlersScriptObservation.
func (in *HandlersScriptObservation) DeepCopy() *HandlersScriptObservation {
	if in == nil {
		return nil
	}
	out := new(HandlersScriptObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HandlersScriptParameters) DeepCopyInto(out *HandlersScriptParameters) {
	*out = *in
	if in.ScriptPath != nil {
		in, out := &in.ScriptPath, &out.ScriptPath
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HandlersScriptParameters.
func (in *HandlersScriptParameters) DeepCopy() *HandlersScriptParameters {
	if in == nil {
		return nil
	}
	out := new(HandlersScriptParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HandlersStaticFilesInitParameters) DeepCopyInto(out *HandlersStaticFilesInitParameters) {
	*out = *in
	if in.ApplicationReadable != nil {
		in, out := &in.ApplicationReadable, &out.ApplicationReadable
		*out = new(bool)
		**out = **in
	}
	if in.Expiration != nil {
		in, out := &in.Expiration, &out.Expiration
		*out = new(string)
		**out = **in
	}
	if in.HTTPHeaders != nil {
		in, out := &in.HTTPHeaders, &out.HTTPHeaders
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.MimeType != nil {
		in, out := &in.MimeType, &out.MimeType
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.RequireMatchingFile != nil {
		in, out := &in.RequireMatchingFile, &out.RequireMatchingFile
		*out = new(bool)
		**out = **in
	}
	if in.UploadPathRegex != nil {
		in, out := &in.UploadPathRegex, &out.UploadPathRegex
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HandlersStaticFilesInitParameters.
func (in *HandlersStaticFilesInitParameters) DeepCopy() *HandlersStaticFilesInitParameters {
	if in == nil {
		return nil
	}
	out := new(HandlersStaticFilesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HandlersStaticFilesObservation) DeepCopyInto(out *HandlersStaticFilesObservation) {
	*out = *in
	if in.ApplicationReadable != nil {
		in, out := &in.ApplicationReadable, &out.ApplicationReadable
		*out = new(bool)
		**out = **in
	}
	if in.Expiration != nil {
		in, out := &in.Expiration, &out.Expiration
		*out = new(string)
		**out = **in
	}
	if in.HTTPHeaders != nil {
		in, out := &in.HTTPHeaders, &out.HTTPHeaders
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.MimeType != nil {
		in, out := &in.MimeType, &out.MimeType
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.RequireMatchingFile != nil {
		in, out := &in.RequireMatchingFile, &out.RequireMatchingFile
		*out = new(bool)
		**out = **in
	}
	if in.UploadPathRegex != nil {
		in, out := &in.UploadPathRegex, &out.UploadPathRegex
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HandlersStaticFilesObservation.
func (in *HandlersStaticFilesObservation) DeepCopy() *HandlersStaticFilesObservation {
	if in == nil {
		return nil
	}
	out := new(HandlersStaticFilesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HandlersStaticFilesParameters) DeepCopyInto(out *HandlersStaticFilesParameters) {
	*out = *in
	if in.ApplicationReadable != nil {
		in, out := &in.ApplicationReadable, &out.ApplicationReadable
		*out = new(bool)
		**out = **in
	}
	if in.Expiration != nil {
		in, out := &in.Expiration, &out.Expiration
		*out = new(string)
		**out = **in
	}
	if in.HTTPHeaders != nil {
		in, out := &in.HTTPHeaders, &out.HTTPHeaders
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.MimeType != nil {
		in, out := &in.MimeType, &out.MimeType
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.RequireMatchingFile != nil {
		in, out := &in.RequireMatchingFile, &out.RequireMatchingFile
		*out = new(bool)
		**out = **in
	}
	if in.UploadPathRegex != nil {
		in, out := &in.UploadPathRegex, &out.UploadPathRegex
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HandlersStaticFilesParameters.
func (in *HandlersStaticFilesParameters) DeepCopy() *HandlersStaticFilesParameters {
	if in == nil {
		return nil
	}
	out := new(HandlersStaticFilesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IapInitParameters) DeepCopyInto(out *IapInitParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Oauth2ClientID != nil {
		in, out := &in.Oauth2ClientID, &out.Oauth2ClientID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IapInitParameters.
func (in *IapInitParameters) DeepCopy() *IapInitParameters {
	if in == nil {
		return nil
	}
	out := new(IapInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IapObservation) DeepCopyInto(out *IapObservation) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Oauth2ClientID != nil {
		in, out := &in.Oauth2ClientID, &out.Oauth2ClientID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IapObservation.
func (in *IapObservation) DeepCopy() *IapObservation {
	if in == nil {
		return nil
	}
	out := new(IapObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IapParameters) DeepCopyInto(out *IapParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Oauth2ClientID != nil {
		in, out := &in.Oauth2ClientID, &out.Oauth2ClientID
		*out = new(string)
		**out = **in
	}
	out.Oauth2ClientSecretSecretRef = in.Oauth2ClientSecretSecretRef
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IapParameters.
func (in *IapParameters) DeepCopy() *IapParameters {
	if in == nil {
		return nil
	}
	out := new(IapParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LibrariesInitParameters) DeepCopyInto(out *LibrariesInitParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LibrariesInitParameters.
func (in *LibrariesInitParameters) DeepCopy() *LibrariesInitParameters {
	if in == nil {
		return nil
	}
	out := new(LibrariesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LibrariesObservation) DeepCopyInto(out *LibrariesObservation) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LibrariesObservation.
func (in *LibrariesObservation) DeepCopy() *LibrariesObservation {
	if in == nil {
		return nil
	}
	out := new(LibrariesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LibrariesParameters) DeepCopyInto(out *LibrariesParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LibrariesParameters.
func (in *LibrariesParameters) DeepCopy() *LibrariesParameters {
	if in == nil {
		return nil
	}
	out := new(LibrariesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LivenessCheckInitParameters) DeepCopyInto(out *LivenessCheckInitParameters) {
	*out = *in
	if in.CheckInterval != nil {
		in, out := &in.CheckInterval, &out.CheckInterval
		*out = new(string)
		**out = **in
	}
	if in.FailureThreshold != nil {
		in, out := &in.FailureThreshold, &out.FailureThreshold
		*out = new(float64)
		**out = **in
	}
	if in.Host != nil {
		in, out := &in.Host, &out.Host
		*out = new(string)
		**out = **in
	}
	if in.InitialDelay != nil {
		in, out := &in.InitialDelay, &out.InitialDelay
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.SuccessThreshold != nil {
		in, out := &in.SuccessThreshold, &out.SuccessThreshold
		*out = new(float64)
		**out = **in
	}
	if in.Timeout != nil {
		in, out := &in.Timeout, &out.Timeout
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LivenessCheckInitParameters.
func (in *LivenessCheckInitParameters) DeepCopy() *LivenessCheckInitParameters {
	if in == nil {
		return nil
	}
	out := new(LivenessCheckInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LivenessCheckObservation) DeepCopyInto(out *LivenessCheckObservation) {
	*out = *in
	if in.CheckInterval != nil {
		in, out := &in.CheckInterval, &out.CheckInterval
		*out = new(string)
		**out = **in
	}
	if in.FailureThreshold != nil {
		in, out := &in.FailureThreshold, &out.FailureThreshold
		*out = new(float64)
		**out = **in
	}
	if in.Host != nil {
		in, out := &in.Host, &out.Host
		*out = new(string)
		**out = **in
	}
	if in.InitialDelay != nil {
		in, out := &in.InitialDelay, &out.InitialDelay
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.SuccessThreshold != nil {
		in, out := &in.SuccessThreshold, &out.SuccessThreshold
		*out = new(float64)
		**out = **in
	}
	if in.Timeout != nil {
		in, out := &in.Timeout, &out.Timeout
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LivenessCheckObservation.
func (in *LivenessCheckObservation) DeepCopy() *LivenessCheckObservation {
	if in == nil {
		return nil
	}
	out := new(LivenessCheckObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LivenessCheckParameters) DeepCopyInto(out *LivenessCheckParameters) {
	*out = *in
	if in.CheckInterval != nil {
		in, out := &in.CheckInterval, &out.CheckInterval
		*out = new(string)
		**out = **in
	}
	if in.FailureThreshold != nil {
		in, out := &in.FailureThreshold, &out.FailureThreshold
		*out = new(float64)
		**out = **in
	}
	if in.Host != nil {
		in, out := &in.Host, &out.Host
		*out = new(string)
		**out = **in
	}
	if in.InitialDelay != nil {
		in, out := &in.InitialDelay, &out.InitialDelay
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.SuccessThreshold != nil {
		in, out := &in.SuccessThreshold, &out.SuccessThreshold
		*out = new(float64)
		**out = **in
	}
	if in.Timeout != nil {
		in, out := &in.Timeout, &out.Timeout
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LivenessCheckParameters.
func (in *LivenessCheckParameters) DeepCopy() *LivenessCheckParameters {
	if in == nil {
		return nil
	}
	out := new(LivenessCheckParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManualScalingInitParameters) DeepCopyInto(out *ManualScalingInitParameters) {
	*out = *in
	if in.Instances != nil {
		in, out := &in.Instances, &out.Instances
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManualScalingInitParameters.
func (in *ManualScalingInitParameters) DeepCopy() *ManualScalingInitParameters {
	if in == nil {
		return nil
	}
	out := new(ManualScalingInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManualScalingObservation) DeepCopyInto(out *ManualScalingObservation) {
	*out = *in
	if in.Instances != nil {
		in, out := &in.Instances, &out.Instances
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManualScalingObservation.
func (in *ManualScalingObservation) DeepCopy() *ManualScalingObservation {
	if in == nil {
		return nil
	}
	out := new(ManualScalingObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManualScalingParameters) DeepCopyInto(out *ManualScalingParameters) {
	*out = *in
	if in.Instances != nil {
		in, out := &in.Instances, &out.Instances
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManualScalingParameters.
func (in *ManualScalingParameters) DeepCopy() *ManualScalingParameters {
	if in == nil {
		return nil
	}
	out := new(ManualScalingParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkInitParameters) DeepCopyInto(out *NetworkInitParameters) {
	*out = *in
	if in.ForwardedPorts != nil {
		in, out := &in.ForwardedPorts, &out.ForwardedPorts
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.InstanceTag != nil {
		in, out := &in.InstanceTag, &out.InstanceTag
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.SessionAffinity != nil {
		in, out := &in.SessionAffinity, &out.SessionAffinity
		*out = new(bool)
		**out = **in
	}
	if in.Subnetwork != nil {
		in, out := &in.Subnetwork, &out.Subnetwork
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkInitParameters.
func (in *NetworkInitParameters) DeepCopy() *NetworkInitParameters {
	if in == nil {
		return nil
	}
	out := new(NetworkInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkObservation) DeepCopyInto(out *NetworkObservation) {
	*out = *in
	if in.ForwardedPorts != nil {
		in, out := &in.ForwardedPorts, &out.ForwardedPorts
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.InstanceTag != nil {
		in, out := &in.InstanceTag, &out.InstanceTag
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.SessionAffinity != nil {
		in, out := &in.SessionAffinity, &out.SessionAffinity
		*out = new(bool)
		**out = **in
	}
	if in.Subnetwork != nil {
		in, out := &in.Subnetwork, &out.Subnetwork
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkObservation.
func (in *NetworkObservation) DeepCopy() *NetworkObservation {
	if in == nil {
		return nil
	}
	out := new(NetworkObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkParameters) DeepCopyInto(out *NetworkParameters) {
	*out = *in
	if in.ForwardedPorts != nil {
		in, out := &in.ForwardedPorts, &out.ForwardedPorts
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.InstanceTag != nil {
		in, out := &in.InstanceTag, &out.InstanceTag
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.SessionAffinity != nil {
		in, out := &in.SessionAffinity, &out.SessionAffinity
		*out = new(bool)
		**out = **in
	}
	if in.Subnetwork != nil {
		in, out := &in.Subnetwork, &out.Subnetwork
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkParameters.
func (in *NetworkParameters) DeepCopy() *NetworkParameters {
	if in == nil {
		return nil
	}
	out := new(NetworkParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkSettingsInitParameters) DeepCopyInto(out *NetworkSettingsInitParameters) {
	*out = *in
	if in.IngressTrafficAllowed != nil {
		in, out := &in.IngressTrafficAllowed, &out.IngressTrafficAllowed
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkSettingsInitParameters.
func (in *NetworkSettingsInitParameters) DeepCopy() *NetworkSettingsInitParameters {
	if in == nil {
		return nil
	}
	out := new(NetworkSettingsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkSettingsObservation) DeepCopyInto(out *NetworkSettingsObservation) {
	*out = *in
	if in.IngressTrafficAllowed != nil {
		in, out := &in.IngressTrafficAllowed, &out.IngressTrafficAllowed
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkSettingsObservation.
func (in *NetworkSettingsObservation) DeepCopy() *NetworkSettingsObservation {
	if in == nil {
		return nil
	}
	out := new(NetworkSettingsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkSettingsParameters) DeepCopyInto(out *NetworkSettingsParameters) {
	*out = *in
	if in.IngressTrafficAllowed != nil {
		in, out := &in.IngressTrafficAllowed, &out.IngressTrafficAllowed
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkSettingsParameters.
func (in *NetworkSettingsParameters) DeepCopy() *NetworkSettingsParameters {
	if in == nil {
		return nil
	}
	out := new(NetworkSettingsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkUtilizationInitParameters) DeepCopyInto(out *NetworkUtilizationInitParameters) {
	*out = *in
	if in.TargetReceivedBytesPerSecond != nil {
		in, out := &in.TargetReceivedBytesPerSecond, &out.TargetReceivedBytesPerSecond
		*out = new(float64)
		**out = **in
	}
	if in.TargetReceivedPacketsPerSecond != nil {
		in, out := &in.TargetReceivedPacketsPerSecond, &out.TargetReceivedPacketsPerSecond
		*out = new(float64)
		**out = **in
	}
	if in.TargetSentBytesPerSecond != nil {
		in, out := &in.TargetSentBytesPerSecond, &out.TargetSentBytesPerSecond
		*out = new(float64)
		**out = **in
	}
	if in.TargetSentPacketsPerSecond != nil {
		in, out := &in.TargetSentPacketsPerSecond, &out.TargetSentPacketsPerSecond
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkUtilizationInitParameters.
func (in *NetworkUtilizationInitParameters) DeepCopy() *NetworkUtilizationInitParameters {
	if in == nil {
		return nil
	}
	out := new(NetworkUtilizationInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkUtilizationObservation) DeepCopyInto(out *NetworkUtilizationObservation) {
	*out = *in
	if in.TargetReceivedBytesPerSecond != nil {
		in, out := &in.TargetReceivedBytesPerSecond, &out.TargetReceivedBytesPerSecond
		*out = new(float64)
		**out = **in
	}
	if in.TargetReceivedPacketsPerSecond != nil {
		in, out := &in.TargetReceivedPacketsPerSecond, &out.TargetReceivedPacketsPerSecond
		*out = new(float64)
		**out = **in
	}
	if in.TargetSentBytesPerSecond != nil {
		in, out := &in.TargetSentBytesPerSecond, &out.TargetSentBytesPerSecond
		*out = new(float64)
		**out = **in
	}
	if in.TargetSentPacketsPerSecond != nil {
		in, out := &in.TargetSentPacketsPerSecond, &out.TargetSentPacketsPerSecond
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkUtilizationObservation.
func (in *NetworkUtilizationObservation) DeepCopy() *NetworkUtilizationObservation {
	if in == nil {
		return nil
	}
	out := new(NetworkUtilizationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkUtilizationParameters) DeepCopyInto(out *NetworkUtilizationParameters) {
	*out = *in
	if in.TargetReceivedBytesPerSecond != nil {
		in, out := &in.TargetReceivedBytesPerSecond, &out.TargetReceivedBytesPerSecond
		*out = new(float64)
		**out = **in
	}
	if in.TargetReceivedPacketsPerSecond != nil {
		in, out := &in.TargetReceivedPacketsPerSecond, &out.TargetReceivedPacketsPerSecond
		*out = new(float64)
		**out = **in
	}
	if in.TargetSentBytesPerSecond != nil {
		in, out := &in.TargetSentBytesPerSecond, &out.TargetSentBytesPerSecond
		*out = new(float64)
		**out = **in
	}
	if in.TargetSentPacketsPerSecond != nil {
		in, out := &in.TargetSentPacketsPerSecond, &out.TargetSentPacketsPerSecond
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkUtilizationParameters.
func (in *NetworkUtilizationParameters) DeepCopy() *NetworkUtilizationParameters {
	if in == nil {
		return nil
	}
	out := new(NetworkUtilizationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReadinessCheckInitParameters) DeepCopyInto(out *ReadinessCheckInitParameters) {
	*out = *in
	if in.AppStartTimeout != nil {
		in, out := &in.AppStartTimeout, &out.AppStartTimeout
		*out = new(string)
		**out = **in
	}
	if in.CheckInterval != nil {
		in, out := &in.CheckInterval, &out.CheckInterval
		*out = new(string)
		**out = **in
	}
	if in.FailureThreshold != nil {
		in, out := &in.FailureThreshold, &out.FailureThreshold
		*out = new(float64)
		**out = **in
	}
	if in.Host != nil {
		in, out := &in.Host, &out.Host
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.SuccessThreshold != nil {
		in, out := &in.SuccessThreshold, &out.SuccessThreshold
		*out = new(float64)
		**out = **in
	}
	if in.Timeout != nil {
		in, out := &in.Timeout, &out.Timeout
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReadinessCheckInitParameters.
func (in *ReadinessCheckInitParameters) DeepCopy() *ReadinessCheckInitParameters {
	if in == nil {
		return nil
	}
	out := new(ReadinessCheckInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReadinessCheckObservation) DeepCopyInto(out *ReadinessCheckObservation) {
	*out = *in
	if in.AppStartTimeout != nil {
		in, out := &in.AppStartTimeout, &out.AppStartTimeout
		*out = new(string)
		**out = **in
	}
	if in.CheckInterval != nil {
		in, out := &in.CheckInterval, &out.CheckInterval
		*out = new(string)
		**out = **in
	}
	if in.FailureThreshold != nil {
		in, out := &in.FailureThreshold, &out.FailureThreshold
		*out = new(float64)
		**out = **in
	}
	if in.Host != nil {
		in, out := &in.Host, &out.Host
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.SuccessThreshold != nil {
		in, out := &in.SuccessThreshold, &out.SuccessThreshold
		*out = new(float64)
		**out = **in
	}
	if in.Timeout != nil {
		in, out := &in.Timeout, &out.Timeout
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReadinessCheckObservation.
func (in *ReadinessCheckObservation) DeepCopy() *ReadinessCheckObservation {
	if in == nil {
		return nil
	}
	out := new(ReadinessCheckObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReadinessCheckParameters) DeepCopyInto(out *ReadinessCheckParameters) {
	*out = *in
	if in.AppStartTimeout != nil {
		in, out := &in.AppStartTimeout, &out.AppStartTimeout
		*out = new(string)
		**out = **in
	}
	if in.CheckInterval != nil {
		in, out := &in.CheckInterval, &out.CheckInterval
		*out = new(string)
		**out = **in
	}
	if in.FailureThreshold != nil {
		in, out := &in.FailureThreshold, &out.FailureThreshold
		*out = new(float64)
		**out = **in
	}
	if in.Host != nil {
		in, out := &in.Host, &out.Host
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.SuccessThreshold != nil {
		in, out := &in.SuccessThreshold, &out.SuccessThreshold
		*out = new(float64)
		**out = **in
	}
	if in.Timeout != nil {
		in, out := &in.Timeout, &out.Timeout
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReadinessCheckParameters.
func (in *ReadinessCheckParameters) DeepCopy() *ReadinessCheckParameters {
	if in == nil {
		return nil
	}
	out := new(ReadinessCheckParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RequestUtilizationInitParameters) DeepCopyInto(out *RequestUtilizationInitParameters) {
	*out = *in
	if in.TargetConcurrentRequests != nil {
		in, out := &in.TargetConcurrentRequests, &out.TargetConcurrentRequests
		*out = new(float64)
		**out = **in
	}
	if in.TargetRequestCountPerSecond != nil {
		in, out := &in.TargetRequestCountPerSecond, &out.TargetRequestCountPerSecond
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RequestUtilizationInitParameters.
func (in *RequestUtilizationInitParameters) DeepCopy() *RequestUtilizationInitParameters {
	if in == nil {
		return nil
	}
	out := new(RequestUtilizationInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RequestUtilizationObservation) DeepCopyInto(out *RequestUtilizationObservation) {
	*out = *in
	if in.TargetConcurrentRequests != nil {
		in, out := &in.TargetConcurrentRequests, &out.TargetConcurrentRequests
		*out = new(float64)
		**out = **in
	}
	if in.TargetRequestCountPerSecond != nil {
		in, out := &in.TargetRequestCountPerSecond, &out.TargetRequestCountPerSecond
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RequestUtilizationObservation.
func (in *RequestUtilizationObservation) DeepCopy() *RequestUtilizationObservation {
	if in == nil {
		return nil
	}
	out := new(RequestUtilizationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RequestUtilizationParameters) DeepCopyInto(out *RequestUtilizationParameters) {
	*out = *in
	if in.TargetConcurrentRequests != nil {
		in, out := &in.TargetConcurrentRequests, &out.TargetConcurrentRequests
		*out = new(float64)
		**out = **in
	}
	if in.TargetRequestCountPerSecond != nil {
		in, out := &in.TargetRequestCountPerSecond, &out.TargetRequestCountPerSecond
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RequestUtilizationParameters.
func (in *RequestUtilizationParameters) DeepCopy() *RequestUtilizationParameters {
	if in == nil {
		return nil
	}
	out := new(RequestUtilizationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ResourceRecordsInitParameters) DeepCopyInto(out *ResourceRecordsInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ResourceRecordsInitParameters.
func (in *ResourceRecordsInitParameters) DeepCopy() *ResourceRecordsInitParameters {
	if in == nil {
		return nil
	}
	out := new(ResourceRecordsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ResourceRecordsObservation) DeepCopyInto(out *ResourceRecordsObservation) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Rrdata != nil {
		in, out := &in.Rrdata, &out.Rrdata
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ResourceRecordsObservation.
func (in *ResourceRecordsObservation) DeepCopy() *ResourceRecordsObservation {
	if in == nil {
		return nil
	}
	out := new(ResourceRecordsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ResourceRecordsParameters) DeepCopyInto(out *ResourceRecordsParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ResourceRecordsParameters.
func (in *ResourceRecordsParameters) DeepCopy() *ResourceRecordsParameters {
	if in == nil {
		return nil
	}
	out := new(ResourceRecordsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ResourcesInitParameters) DeepCopyInto(out *ResourcesInitParameters) {
	*out = *in
	if in.CPU != nil {
		in, out := &in.CPU, &out.CPU
		*out = new(float64)
		**out = **in
	}
	if in.DiskGb != nil {
		in, out := &in.DiskGb, &out.DiskGb
		*out = new(float64)
		**out = **in
	}
	if in.MemoryGb != nil {
		in, out := &in.MemoryGb, &out.MemoryGb
		*out = new(float64)
		**out = **in
	}
	if in.Volumes != nil {
		in, out := &in.Volumes, &out.Volumes
		*out = make([]VolumesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ResourcesInitParameters.
func (in *ResourcesInitParameters) DeepCopy() *ResourcesInitParameters {
	if in == nil {
		return nil
	}
	out := new(ResourcesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ResourcesObservation) DeepCopyInto(out *ResourcesObservation) {
	*out = *in
	if in.CPU != nil {
		in, out := &in.CPU, &out.CPU
		*out = new(float64)
		**out = **in
	}
	if in.DiskGb != nil {
		in, out := &in.DiskGb, &out.DiskGb
		*out = new(float64)
		**out = **in
	}
	if in.MemoryGb != nil {
		in, out := &in.MemoryGb, &out.MemoryGb
		*out = new(float64)
		**out = **in
	}
	if in.Volumes != nil {
		in, out := &in.Volumes, &out.Volumes
		*out = make([]VolumesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ResourcesObservation.
func (in *ResourcesObservation) DeepCopy() *ResourcesObservation {
	if in == nil {
		return nil
	}
	out := new(ResourcesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ResourcesParameters) DeepCopyInto(out *ResourcesParameters) {
	*out = *in
	if in.CPU != nil {
		in, out := &in.CPU, &out.CPU
		*out = new(float64)
		**out = **in
	}
	if in.DiskGb != nil {
		in, out := &in.DiskGb, &out.DiskGb
		*out = new(float64)
		**out = **in
	}
	if in.MemoryGb != nil {
		in, out := &in.MemoryGb, &out.MemoryGb
		*out = new(float64)
		**out = **in
	}
	if in.Volumes != nil {
		in, out := &in.Volumes, &out.Volumes
		*out = make([]VolumesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ResourcesParameters.
func (in *ResourcesParameters) DeepCopy() *ResourcesParameters {
	if in == nil {
		return nil
	}
	out := new(ResourcesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SSLSettingsInitParameters) DeepCopyInto(out *SSLSettingsInitParameters) {
	*out = *in
	if in.CertificateID != nil {
		in, out := &in.CertificateID, &out.CertificateID
		*out = new(string)
		**out = **in
	}
	if in.SSLManagementType != nil {
		in, out := &in.SSLManagementType, &out.SSLManagementType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SSLSettingsInitParameters.
func (in *SSLSettingsInitParameters) DeepCopy() *SSLSettingsInitParameters {
	if in == nil {
		return nil
	}
	out := new(SSLSettingsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SSLSettingsObservation) DeepCopyInto(out *SSLSettingsObservation) {
	*out = *in
	if in.CertificateID != nil {
		in, out := &in.CertificateID, &out.CertificateID
		*out = new(string)
		**out = **in
	}
	if in.PendingManagedCertificateID != nil {
		in, out := &in.PendingManagedCertificateID, &out.PendingManagedCertificateID
		*out = new(string)
		**out = **in
	}
	if in.SSLManagementType != nil {
		in, out := &in.SSLManagementType, &out.SSLManagementType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SSLSettingsObservation.
func (in *SSLSettingsObservation) DeepCopy() *SSLSettingsObservation {
	if in == nil {
		return nil
	}
	out := new(SSLSettingsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SSLSettingsParameters) DeepCopyInto(out *SSLSettingsParameters) {
	*out = *in
	if in.CertificateID != nil {
		in, out := &in.CertificateID, &out.CertificateID
		*out = new(string)
		**out = **in
	}
	if in.SSLManagementType != nil {
		in, out := &in.SSLManagementType, &out.SSLManagementType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SSLSettingsParameters.
func (in *SSLSettingsParameters) DeepCopy() *SSLSettingsParameters {
	if in == nil {
		return nil
	}
	out := new(SSLSettingsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScriptInitParameters) DeepCopyInto(out *ScriptInitParameters) {
	*out = *in
	if in.ScriptPath != nil {
		in, out := &in.ScriptPath, &out.ScriptPath
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScriptInitParameters.
func (in *ScriptInitParameters) DeepCopy() *ScriptInitParameters {
	if in == nil {
		return nil
	}
	out := new(ScriptInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScriptObservation) DeepCopyInto(out *ScriptObservation) {
	*out = *in
	if in.ScriptPath != nil {
		in, out := &in.ScriptPath, &out.ScriptPath
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScriptObservation.
func (in *ScriptObservation) DeepCopy() *ScriptObservation {
	if in == nil {
		return nil
	}
	out := new(ScriptObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScriptParameters) DeepCopyInto(out *ScriptParameters) {
	*out = *in
	if in.ScriptPath != nil {
		in, out := &in.ScriptPath, &out.ScriptPath
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScriptParameters.
func (in *ScriptParameters) DeepCopy() *ScriptParameters {
	if in == nil {
		return nil
	}
	out := new(ScriptParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceNetworkSettings) DeepCopyInto(out *ServiceNetworkSettings) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceNetworkSettings.
func (in *ServiceNetworkSettings) DeepCopy() *ServiceNetworkSettings {
	if in == nil {
		return nil
	}
	out := new(ServiceNetworkSettings)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ServiceNetworkSettings) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceNetworkSettingsInitParameters) DeepCopyInto(out *ServiceNetworkSettingsInitParameters) {
	*out = *in
	if in.NetworkSettings != nil {
		in, out := &in.NetworkSettings, &out.NetworkSettings
		*out = make([]NetworkSettingsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Service != nil {
		in, out := &in.Service, &out.Service
		*out = new(string)
		**out = **in
	}
	if in.ServiceRef != nil {
		in, out := &in.ServiceRef, &out.ServiceRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ServiceSelector != nil {
		in, out := &in.ServiceSelector, &out.ServiceSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceNetworkSettingsInitParameters.
func (in *ServiceNetworkSettingsInitParameters) DeepCopy() *ServiceNetworkSettingsInitParameters {
	if in == nil {
		return nil
	}
	out := new(ServiceNetworkSettingsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceNetworkSettingsList) DeepCopyInto(out *ServiceNetworkSettingsList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ServiceNetworkSettings, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceNetworkSettingsList.
func (in *ServiceNetworkSettingsList) DeepCopy() *ServiceNetworkSettingsList {
	if in == nil {
		return nil
	}
	out := new(ServiceNetworkSettingsList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ServiceNetworkSettingsList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceNetworkSettingsObservation) DeepCopyInto(out *ServiceNetworkSettingsObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.NetworkSettings != nil {
		in, out := &in.NetworkSettings, &out.NetworkSettings
		*out = make([]NetworkSettingsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Service != nil {
		in, out := &in.Service, &out.Service
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceNetworkSettingsObservation.
func (in *ServiceNetworkSettingsObservation) DeepCopy() *ServiceNetworkSettingsObservation {
	if in == nil {
		return nil
	}
	out := new(ServiceNetworkSettingsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceNetworkSettingsParameters) DeepCopyInto(out *ServiceNetworkSettingsParameters) {
	*out = *in
	if in.NetworkSettings != nil {
		in, out := &in.NetworkSettings, &out.NetworkSettings
		*out = make([]NetworkSettingsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Service != nil {
		in, out := &in.Service, &out.Service
		*out = new(string)
		**out = **in
	}
	if in.ServiceRef != nil {
		in, out := &in.ServiceRef, &out.ServiceRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ServiceSelector != nil {
		in, out := &in.ServiceSelector, &out.ServiceSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceNetworkSettingsParameters.
func (in *ServiceNetworkSettingsParameters) DeepCopy() *ServiceNetworkSettingsParameters {
	if in == nil {
		return nil
	}
	out := new(ServiceNetworkSettingsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceNetworkSettingsSpec) DeepCopyInto(out *ServiceNetworkSettingsSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceNetworkSettingsSpec.
func (in *ServiceNetworkSettingsSpec) DeepCopy() *ServiceNetworkSettingsSpec {
	if in == nil {
		return nil
	}
	out := new(ServiceNetworkSettingsSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceNetworkSettingsStatus) DeepCopyInto(out *ServiceNetworkSettingsStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceNetworkSettingsStatus.
func (in *ServiceNetworkSettingsStatus) DeepCopy() *ServiceNetworkSettingsStatus {
	if in == nil {
		return nil
	}
	out := new(ServiceNetworkSettingsStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceSplitTraffic) DeepCopyInto(out *ServiceSplitTraffic) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceSplitTraffic.
func (in *ServiceSplitTraffic) DeepCopy() *ServiceSplitTraffic {
	if in == nil {
		return nil
	}
	out := new(ServiceSplitTraffic)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ServiceSplitTraffic) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceSplitTrafficInitParameters) DeepCopyInto(out *ServiceSplitTrafficInitParameters) {
	*out = *in
	if in.MigrateTraffic != nil {
		in, out := &in.MigrateTraffic, &out.MigrateTraffic
		*out = new(bool)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Split != nil {
		in, out := &in.Split, &out.Split
		*out = new(SplitInitParameters)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceSplitTrafficInitParameters.
func (in *ServiceSplitTrafficInitParameters) DeepCopy() *ServiceSplitTrafficInitParameters {
	if in == nil {
		return nil
	}
	out := new(ServiceSplitTrafficInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceSplitTrafficList) DeepCopyInto(out *ServiceSplitTrafficList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ServiceSplitTraffic, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceSplitTrafficList.
func (in *ServiceSplitTrafficList) DeepCopy() *ServiceSplitTrafficList {
	if in == nil {
		return nil
	}
	out := new(ServiceSplitTrafficList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ServiceSplitTrafficList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceSplitTrafficObservation) DeepCopyInto(out *ServiceSplitTrafficObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.MigrateTraffic != nil {
		in, out := &in.MigrateTraffic, &out.MigrateTraffic
		*out = new(bool)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Split != nil {
		in, out := &in.Split, &out.Split
		*out = new(SplitObservation)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceSplitTrafficObservation.
func (in *ServiceSplitTrafficObservation) DeepCopy() *ServiceSplitTrafficObservation {
	if in == nil {
		return nil
	}
	out := new(ServiceSplitTrafficObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceSplitTrafficParameters) DeepCopyInto(out *ServiceSplitTrafficParameters) {
	*out = *in
	if in.MigrateTraffic != nil {
		in, out := &in.MigrateTraffic, &out.MigrateTraffic
		*out = new(bool)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Split != nil {
		in, out := &in.Split, &out.Split
		*out = new(SplitParameters)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceSplitTrafficParameters.
func (in *ServiceSplitTrafficParameters) DeepCopy() *ServiceSplitTrafficParameters {
	if in == nil {
		return nil
	}
	out := new(ServiceSplitTrafficParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceSplitTrafficSpec) DeepCopyInto(out *ServiceSplitTrafficSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceSplitTrafficSpec.
func (in *ServiceSplitTrafficSpec) DeepCopy() *ServiceSplitTrafficSpec {
	if in == nil {
		return nil
	}
	out := new(ServiceSplitTrafficSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceSplitTrafficStatus) DeepCopyInto(out *ServiceSplitTrafficStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceSplitTrafficStatus.
func (in *ServiceSplitTrafficStatus) DeepCopy() *ServiceSplitTrafficStatus {
	if in == nil {
		return nil
	}
	out := new(ServiceSplitTrafficStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SplitInitParameters) DeepCopyInto(out *SplitInitParameters) {
	*out = *in
	if in.Allocations != nil {
		in, out := &in.Allocations, &out.Allocations
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ShardBy != nil {
		in, out := &in.ShardBy, &out.ShardBy
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SplitInitParameters.
func (in *SplitInitParameters) DeepCopy() *SplitInitParameters {
	if in == nil {
		return nil
	}
	out := new(SplitInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SplitObservation) DeepCopyInto(out *SplitObservation) {
	*out = *in
	if in.Allocations != nil {
		in, out := &in.Allocations, &out.Allocations
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ShardBy != nil {
		in, out := &in.ShardBy, &out.ShardBy
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SplitObservation.
func (in *SplitObservation) DeepCopy() *SplitObservation {
	if in == nil {
		return nil
	}
	out := new(SplitObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SplitParameters) DeepCopyInto(out *SplitParameters) {
	*out = *in
	if in.Allocations != nil {
		in, out := &in.Allocations, &out.Allocations
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ShardBy != nil {
		in, out := &in.ShardBy, &out.ShardBy
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SplitParameters.
func (in *SplitParameters) DeepCopy() *SplitParameters {
	if in == nil {
		return nil
	}
	out := new(SplitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StandardAppVersion) DeepCopyInto(out *StandardAppVersion) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StandardAppVersion.
func (in *StandardAppVersion) DeepCopy() *StandardAppVersion {
	if in == nil {
		return nil
	}
	out := new(StandardAppVersion)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *StandardAppVersion) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StandardAppVersionInitParameters) DeepCopyInto(out *StandardAppVersionInitParameters) {
	*out = *in
	if in.AppEngineApis != nil {
		in, out := &in.AppEngineApis, &out.AppEngineApis
		*out = new(bool)
		**out = **in
	}
	if in.AutomaticScaling != nil {
		in, out := &in.AutomaticScaling, &out.AutomaticScaling
		*out = make([]AutomaticScalingInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.BasicScaling != nil {
		in, out := &in.BasicScaling, &out.BasicScaling
		*out = make([]BasicScalingInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DeleteServiceOnDestroy != nil {
		in, out := &in.DeleteServiceOnDestroy, &out.DeleteServiceOnDestroy
		*out = new(bool)
		**out = **in
	}
	if in.Deployment != nil {
		in, out := &in.Deployment, &out.Deployment
		*out = make([]DeploymentInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Entrypoint != nil {
		in, out := &in.Entrypoint, &out.Entrypoint
		*out = make([]EntrypointInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EnvVariables != nil {
		in, out := &in.EnvVariables, &out.EnvVariables
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Handlers != nil {
		in, out := &in.Handlers, &out.Handlers
		*out = make([]HandlersInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.InboundServices != nil {
		in, out := &in.InboundServices, &out.InboundServices
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.InstanceClass != nil {
		in, out := &in.InstanceClass, &out.InstanceClass
		*out = new(string)
		**out = **in
	}
	if in.Libraries != nil {
		in, out := &in.Libraries, &out.Libraries
		*out = make([]LibrariesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ManualScaling != nil {
		in, out := &in.ManualScaling, &out.ManualScaling
		*out = make([]ManualScalingInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NoopOnDestroy != nil {
		in, out := &in.NoopOnDestroy, &out.NoopOnDestroy
		*out = new(bool)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Runtime != nil {
		in, out := &in.Runtime, &out.Runtime
		*out = new(string)
		**out = **in
	}
	if in.RuntimeAPIVersion != nil {
		in, out := &in.RuntimeAPIVersion, &out.RuntimeAPIVersion
		*out = new(string)
		**out = **in
	}
	if in.ServiceAccount != nil {
		in, out := &in.ServiceAccount, &out.ServiceAccount
		*out = new(string)
		**out = **in
	}
	if in.ServiceAccountRef != nil {
		in, out := &in.ServiceAccountRef, &out.ServiceAccountRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ServiceAccountSelector != nil {
		in, out := &in.ServiceAccountSelector, &out.ServiceAccountSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Threadsafe != nil {
		in, out := &in.Threadsafe, &out.Threadsafe
		*out = new(bool)
		**out = **in
	}
	if in.VPCAccessConnector != nil {
		in, out := &in.VPCAccessConnector, &out.VPCAccessConnector
		*out = make([]VPCAccessConnectorInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StandardAppVersionInitParameters.
func (in *StandardAppVersionInitParameters) DeepCopy() *StandardAppVersionInitParameters {
	if in == nil {
		return nil
	}
	out := new(StandardAppVersionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StandardAppVersionList) DeepCopyInto(out *StandardAppVersionList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]StandardAppVersion, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StandardAppVersionList.
func (in *StandardAppVersionList) DeepCopy() *StandardAppVersionList {
	if in == nil {
		return nil
	}
	out := new(StandardAppVersionList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *StandardAppVersionList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StandardAppVersionObservation) DeepCopyInto(out *StandardAppVersionObservation) {
	*out = *in
	if in.AppEngineApis != nil {
		in, out := &in.AppEngineApis, &out.AppEngineApis
		*out = new(bool)
		**out = **in
	}
	if in.AutomaticScaling != nil {
		in, out := &in.AutomaticScaling, &out.AutomaticScaling
		*out = make([]AutomaticScalingObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.BasicScaling != nil {
		in, out := &in.BasicScaling, &out.BasicScaling
		*out = make([]BasicScalingObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DeleteServiceOnDestroy != nil {
		in, out := &in.DeleteServiceOnDestroy, &out.DeleteServiceOnDestroy
		*out = new(bool)
		**out = **in
	}
	if in.Deployment != nil {
		in, out := &in.Deployment, &out.Deployment
		*out = make([]DeploymentObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Entrypoint != nil {
		in, out := &in.Entrypoint, &out.Entrypoint
		*out = make([]EntrypointObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EnvVariables != nil {
		in, out := &in.EnvVariables, &out.EnvVariables
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Handlers != nil {
		in, out := &in.Handlers, &out.Handlers
		*out = make([]HandlersObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.InboundServices != nil {
		in, out := &in.InboundServices, &out.InboundServices
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.InstanceClass != nil {
		in, out := &in.InstanceClass, &out.InstanceClass
		*out = new(string)
		**out = **in
	}
	if in.Libraries != nil {
		in, out := &in.Libraries, &out.Libraries
		*out = make([]LibrariesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ManualScaling != nil {
		in, out := &in.ManualScaling, &out.ManualScaling
		*out = make([]ManualScalingObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NoopOnDestroy != nil {
		in, out := &in.NoopOnDestroy, &out.NoopOnDestroy
		*out = new(bool)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Runtime != nil {
		in, out := &in.Runtime, &out.Runtime
		*out = new(string)
		**out = **in
	}
	if in.RuntimeAPIVersion != nil {
		in, out := &in.RuntimeAPIVersion, &out.RuntimeAPIVersion
		*out = new(string)
		**out = **in
	}
	if in.Service != nil {
		in, out := &in.Service, &out.Service
		*out = new(string)
		**out = **in
	}
	if in.ServiceAccount != nil {
		in, out := &in.ServiceAccount, &out.ServiceAccount
		*out = new(string)
		**out = **in
	}
	if in.Threadsafe != nil {
		in, out := &in.Threadsafe, &out.Threadsafe
		*out = new(bool)
		**out = **in
	}
	if in.VPCAccessConnector != nil {
		in, out := &in.VPCAccessConnector, &out.VPCAccessConnector
		*out = make([]VPCAccessConnectorObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StandardAppVersionObservation.
func (in *StandardAppVersionObservation) DeepCopy() *StandardAppVersionObservation {
	if in == nil {
		return nil
	}
	out := new(StandardAppVersionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StandardAppVersionParameters) DeepCopyInto(out *StandardAppVersionParameters) {
	*out = *in
	if in.AppEngineApis != nil {
		in, out := &in.AppEngineApis, &out.AppEngineApis
		*out = new(bool)
		**out = **in
	}
	if in.AutomaticScaling != nil {
		in, out := &in.AutomaticScaling, &out.AutomaticScaling
		*out = make([]AutomaticScalingParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.BasicScaling != nil {
		in, out := &in.BasicScaling, &out.BasicScaling
		*out = make([]BasicScalingParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DeleteServiceOnDestroy != nil {
		in, out := &in.DeleteServiceOnDestroy, &out.DeleteServiceOnDestroy
		*out = new(bool)
		**out = **in
	}
	if in.Deployment != nil {
		in, out := &in.Deployment, &out.Deployment
		*out = make([]DeploymentParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Entrypoint != nil {
		in, out := &in.Entrypoint, &out.Entrypoint
		*out = make([]EntrypointParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EnvVariables != nil {
		in, out := &in.EnvVariables, &out.EnvVariables
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Handlers != nil {
		in, out := &in.Handlers, &out.Handlers
		*out = make([]HandlersParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.InboundServices != nil {
		in, out := &in.InboundServices, &out.InboundServices
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.InstanceClass != nil {
		in, out := &in.InstanceClass, &out.InstanceClass
		*out = new(string)
		**out = **in
	}
	if in.Libraries != nil {
		in, out := &in.Libraries, &out.Libraries
		*out = make([]LibrariesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ManualScaling != nil {
		in, out := &in.ManualScaling, &out.ManualScaling
		*out = make([]ManualScalingParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NoopOnDestroy != nil {
		in, out := &in.NoopOnDestroy, &out.NoopOnDestroy
		*out = new(bool)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Runtime != nil {
		in, out := &in.Runtime, &out.Runtime
		*out = new(string)
		**out = **in
	}
	if in.RuntimeAPIVersion != nil {
		in, out := &in.RuntimeAPIVersion, &out.RuntimeAPIVersion
		*out = new(string)
		**out = **in
	}
	if in.Service != nil {
		in, out := &in.Service, &out.Service
		*out = new(string)
		**out = **in
	}
	if in.ServiceAccount != nil {
		in, out := &in.ServiceAccount, &out.ServiceAccount
		*out = new(string)
		**out = **in
	}
	if in.ServiceAccountRef != nil {
		in, out := &in.ServiceAccountRef, &out.ServiceAccountRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ServiceAccountSelector != nil {
		in, out := &in.ServiceAccountSelector, &out.ServiceAccountSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Threadsafe != nil {
		in, out := &in.Threadsafe, &out.Threadsafe
		*out = new(bool)
		**out = **in
	}
	if in.VPCAccessConnector != nil {
		in, out := &in.VPCAccessConnector, &out.VPCAccessConnector
		*out = make([]VPCAccessConnectorParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StandardAppVersionParameters.
func (in *StandardAppVersionParameters) DeepCopy() *StandardAppVersionParameters {
	if in == nil {
		return nil
	}
	out := new(StandardAppVersionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StandardAppVersionSpec) DeepCopyInto(out *StandardAppVersionSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StandardAppVersionSpec.
func (in *StandardAppVersionSpec) DeepCopy() *StandardAppVersionSpec {
	if in == nil {
		return nil
	}
	out := new(StandardAppVersionSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StandardAppVersionStatus) DeepCopyInto(out *StandardAppVersionStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StandardAppVersionStatus.
func (in *StandardAppVersionStatus) DeepCopy() *StandardAppVersionStatus {
	if in == nil {
		return nil
	}
	out := new(StandardAppVersionStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StandardSchedulerSettingsInitParameters) DeepCopyInto(out *StandardSchedulerSettingsInitParameters) {
	*out = *in
	if in.MaxInstances != nil {
		in, out := &in.MaxInstances, &out.MaxInstances
		*out = new(float64)
		**out = **in
	}
	if in.MinInstances != nil {
		in, out := &in.MinInstances, &out.MinInstances
		*out = new(float64)
		**out = **in
	}
	if in.TargetCPUUtilization != nil {
		in, out := &in.TargetCPUUtilization, &out.TargetCPUUtilization
		*out = new(float64)
		**out = **in
	}
	if in.TargetThroughputUtilization != nil {
		in, out := &in.TargetThroughputUtilization, &out.TargetThroughputUtilization
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StandardSchedulerSettingsInitParameters.
func (in *StandardSchedulerSettingsInitParameters) DeepCopy() *StandardSchedulerSettingsInitParameters {
	if in == nil {
		return nil
	}
	out := new(StandardSchedulerSettingsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StandardSchedulerSettingsObservation) DeepCopyInto(out *StandardSchedulerSettingsObservation) {
	*out = *in
	if in.MaxInstances != nil {
		in, out := &in.MaxInstances, &out.MaxInstances
		*out = new(float64)
		**out = **in
	}
	if in.MinInstances != nil {
		in, out := &in.MinInstances, &out.MinInstances
		*out = new(float64)
		**out = **in
	}
	if in.TargetCPUUtilization != nil {
		in, out := &in.TargetCPUUtilization, &out.TargetCPUUtilization
		*out = new(float64)
		**out = **in
	}
	if in.TargetThroughputUtilization != nil {
		in, out := &in.TargetThroughputUtilization, &out.TargetThroughputUtilization
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StandardSchedulerSettingsObservation.
func (in *StandardSchedulerSettingsObservation) DeepCopy() *StandardSchedulerSettingsObservation {
	if in == nil {
		return nil
	}
	out := new(StandardSchedulerSettingsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StandardSchedulerSettingsParameters) DeepCopyInto(out *StandardSchedulerSettingsParameters) {
	*out = *in
	if in.MaxInstances != nil {
		in, out := &in.MaxInstances, &out.MaxInstances
		*out = new(float64)
		**out = **in
	}
	if in.MinInstances != nil {
		in, out := &in.MinInstances, &out.MinInstances
		*out = new(float64)
		**out = **in
	}
	if in.TargetCPUUtilization != nil {
		in, out := &in.TargetCPUUtilization, &out.TargetCPUUtilization
		*out = new(float64)
		**out = **in
	}
	if in.TargetThroughputUtilization != nil {
		in, out := &in.TargetThroughputUtilization, &out.TargetThroughputUtilization
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StandardSchedulerSettingsParameters.
func (in *StandardSchedulerSettingsParameters) DeepCopy() *StandardSchedulerSettingsParameters {
	if in == nil {
		return nil
	}
	out := new(StandardSchedulerSettingsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StaticFilesInitParameters) DeepCopyInto(out *StaticFilesInitParameters) {
	*out = *in
	if in.ApplicationReadable != nil {
		in, out := &in.ApplicationReadable, &out.ApplicationReadable
		*out = new(bool)
		**out = **in
	}
	if in.Expiration != nil {
		in, out := &in.Expiration, &out.Expiration
		*out = new(string)
		**out = **in
	}
	if in.HTTPHeaders != nil {
		in, out := &in.HTTPHeaders, &out.HTTPHeaders
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.MimeType != nil {
		in, out := &in.MimeType, &out.MimeType
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.RequireMatchingFile != nil {
		in, out := &in.RequireMatchingFile, &out.RequireMatchingFile
		*out = new(bool)
		**out = **in
	}
	if in.UploadPathRegex != nil {
		in, out := &in.UploadPathRegex, &out.UploadPathRegex
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StaticFilesInitParameters.
func (in *StaticFilesInitParameters) DeepCopy() *StaticFilesInitParameters {
	if in == nil {
		return nil
	}
	out := new(StaticFilesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StaticFilesObservation) DeepCopyInto(out *StaticFilesObservation) {
	*out = *in
	if in.ApplicationReadable != nil {
		in, out := &in.ApplicationReadable, &out.ApplicationReadable
		*out = new(bool)
		**out = **in
	}
	if in.Expiration != nil {
		in, out := &in.Expiration, &out.Expiration
		*out = new(string)
		**out = **in
	}
	if in.HTTPHeaders != nil {
		in, out := &in.HTTPHeaders, &out.HTTPHeaders
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.MimeType != nil {
		in, out := &in.MimeType, &out.MimeType
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.RequireMatchingFile != nil {
		in, out := &in.RequireMatchingFile, &out.RequireMatchingFile
		*out = new(bool)
		**out = **in
	}
	if in.UploadPathRegex != nil {
		in, out := &in.UploadPathRegex, &out.UploadPathRegex
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StaticFilesObservation.
func (in *StaticFilesObservation) DeepCopy() *StaticFilesObservation {
	if in == nil {
		return nil
	}
	out := new(StaticFilesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StaticFilesParameters) DeepCopyInto(out *StaticFilesParameters) {
	*out = *in
	if in.ApplicationReadable != nil {
		in, out := &in.ApplicationReadable, &out.ApplicationReadable
		*out = new(bool)
		**out = **in
	}
	if in.Expiration != nil {
		in, out := &in.Expiration, &out.Expiration
		*out = new(string)
		**out = **in
	}
	if in.HTTPHeaders != nil {
		in, out := &in.HTTPHeaders, &out.HTTPHeaders
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.MimeType != nil {
		in, out := &in.MimeType, &out.MimeType
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.RequireMatchingFile != nil {
		in, out := &in.RequireMatchingFile, &out.RequireMatchingFile
		*out = new(bool)
		**out = **in
	}
	if in.UploadPathRegex != nil {
		in, out := &in.UploadPathRegex, &out.UploadPathRegex
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StaticFilesParameters.
func (in *StaticFilesParameters) DeepCopy() *StaticFilesParameters {
	if in == nil {
		return nil
	}
	out := new(StaticFilesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *URLDispatchRuleInitParameters) DeepCopyInto(out *URLDispatchRuleInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new URLDispatchRuleInitParameters.
func (in *URLDispatchRuleInitParameters) DeepCopy() *URLDispatchRuleInitParameters {
	if in == nil {
		return nil
	}
	out := new(URLDispatchRuleInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *URLDispatchRuleObservation) DeepCopyInto(out *URLDispatchRuleObservation) {
	*out = *in
	if in.Domain != nil {
		in, out := &in.Domain, &out.Domain
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.Service != nil {
		in, out := &in.Service, &out.Service
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new URLDispatchRuleObservation.
func (in *URLDispatchRuleObservation) DeepCopy() *URLDispatchRuleObservation {
	if in == nil {
		return nil
	}
	out := new(URLDispatchRuleObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *URLDispatchRuleParameters) DeepCopyInto(out *URLDispatchRuleParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new URLDispatchRuleParameters.
func (in *URLDispatchRuleParameters) DeepCopy() *URLDispatchRuleParameters {
	if in == nil {
		return nil
	}
	out := new(URLDispatchRuleParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCAccessConnectorInitParameters) DeepCopyInto(out *VPCAccessConnectorInitParameters) {
	*out = *in
	if in.EgressSetting != nil {
		in, out := &in.EgressSetting, &out.EgressSetting
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCAccessConnectorInitParameters.
func (in *VPCAccessConnectorInitParameters) DeepCopy() *VPCAccessConnectorInitParameters {
	if in == nil {
		return nil
	}
	out := new(VPCAccessConnectorInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCAccessConnectorObservation) DeepCopyInto(out *VPCAccessConnectorObservation) {
	*out = *in
	if in.EgressSetting != nil {
		in, out := &in.EgressSetting, &out.EgressSetting
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCAccessConnectorObservation.
func (in *VPCAccessConnectorObservation) DeepCopy() *VPCAccessConnectorObservation {
	if in == nil {
		return nil
	}
	out := new(VPCAccessConnectorObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCAccessConnectorParameters) DeepCopyInto(out *VPCAccessConnectorParameters) {
	*out = *in
	if in.EgressSetting != nil {
		in, out := &in.EgressSetting, &out.EgressSetting
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCAccessConnectorParameters.
func (in *VPCAccessConnectorParameters) DeepCopy() *VPCAccessConnectorParameters {
	if in == nil {
		return nil
	}
	out := new(VPCAccessConnectorParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VolumesInitParameters) DeepCopyInto(out *VolumesInitParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.SizeGb != nil {
		in, out := &in.SizeGb, &out.SizeGb
		*out = new(float64)
		**out = **in
	}
	if in.VolumeType != nil {
		in, out := &in.VolumeType, &out.VolumeType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VolumesInitParameters.
func (in *VolumesInitParameters) DeepCopy() *VolumesInitParameters {
	if in == nil {
		return nil
	}
	out := new(VolumesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VolumesObservation) DeepCopyInto(out *VolumesObservation) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.SizeGb != nil {
		in, out := &in.SizeGb, &out.SizeGb
		*out = new(float64)
		**out = **in
	}
	if in.VolumeType != nil {
		in, out := &in.VolumeType, &out.VolumeType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VolumesObservation.
func (in *VolumesObservation) DeepCopy() *VolumesObservation {
	if in == nil {
		return nil
	}
	out := new(VolumesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VolumesParameters) DeepCopyInto(out *VolumesParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.SizeGb != nil {
		in, out := &in.SizeGb, &out.SizeGb
		*out = new(float64)
		**out = **in
	}
	if in.VolumeType != nil {
		in, out := &in.VolumeType, &out.VolumeType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VolumesParameters.
func (in *VolumesParameters) DeepCopy() *VolumesParameters {
	if in == nil {
		return nil
	}
	out := new(VolumesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ZipInitParameters) DeepCopyInto(out *ZipInitParameters) {
	*out = *in
	if in.FilesCount != nil {
		in, out := &in.FilesCount, &out.FilesCount
		*out = new(float64)
		**out = **in
	}
	if in.SourceURL != nil {
		in, out := &in.SourceURL, &out.SourceURL
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ZipInitParameters.
func (in *ZipInitParameters) DeepCopy() *ZipInitParameters {
	if in == nil {
		return nil
	}
	out := new(ZipInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ZipObservation) DeepCopyInto(out *ZipObservation) {
	*out = *in
	if in.FilesCount != nil {
		in, out := &in.FilesCount, &out.FilesCount
		*out = new(float64)
		**out = **in
	}
	if in.SourceURL != nil {
		in, out := &in.SourceURL, &out.SourceURL
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ZipObservation.
func (in *ZipObservation) DeepCopy() *ZipObservation {
	if in == nil {
		return nil
	}
	out := new(ZipObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ZipParameters) DeepCopyInto(out *ZipParameters) {
	*out = *in
	if in.FilesCount != nil {
		in, out := &in.FilesCount, &out.FilesCount
		*out = new(float64)
		**out = **in
	}
	if in.SourceURL != nil {
		in, out := &in.SourceURL, &out.SourceURL
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ZipParameters.
func (in *ZipParameters) DeepCopy() *ZipParameters {
	if in == nil {
		return nil
	}
	out := new(ZipParameters)
	in.DeepCopyInto(out)
	return out
}
