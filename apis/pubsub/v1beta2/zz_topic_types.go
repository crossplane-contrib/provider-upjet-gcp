// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1beta2

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type AvroFormatInitParameters struct {
}

type AvroFormatObservation struct {
}

type AvroFormatParameters struct {
}

type AwsKinesisInitParameters struct {

	// AWS role ARN to be used for Federated Identity authentication with
	// Kinesis. Check the Pub/Sub docs for how to set up this role and the
	// required permissions that need to be attached to it.
	AwsRoleArn *string `json:"awsRoleArn,omitempty" tf:"aws_role_arn,omitempty"`

	// The Kinesis consumer ARN to used for ingestion in
	// Enhanced Fan-Out mode. The consumer must be already
	// created and ready to be used.
	ConsumerArn *string `json:"consumerArn,omitempty" tf:"consumer_arn,omitempty"`

	// The GCP service account to be used for Federated Identity authentication
	// with Kinesis (via a AssumeRoleWithWebIdentity call for the provided
	// role). The awsRoleArn must be set up with accounts.google.com:sub
	// equals to this service account number.
	GCPServiceAccount *string `json:"gcpServiceAccount,omitempty" tf:"gcp_service_account,omitempty"`

	// The Kinesis stream ARN to ingest data from.
	StreamArn *string `json:"streamArn,omitempty" tf:"stream_arn,omitempty"`
}

type AwsKinesisObservation struct {

	// AWS role ARN to be used for Federated Identity authentication with
	// Kinesis. Check the Pub/Sub docs for how to set up this role and the
	// required permissions that need to be attached to it.
	AwsRoleArn *string `json:"awsRoleArn,omitempty" tf:"aws_role_arn,omitempty"`

	// The Kinesis consumer ARN to used for ingestion in
	// Enhanced Fan-Out mode. The consumer must be already
	// created and ready to be used.
	ConsumerArn *string `json:"consumerArn,omitempty" tf:"consumer_arn,omitempty"`

	// The GCP service account to be used for Federated Identity authentication
	// with Kinesis (via a AssumeRoleWithWebIdentity call for the provided
	// role). The awsRoleArn must be set up with accounts.google.com:sub
	// equals to this service account number.
	GCPServiceAccount *string `json:"gcpServiceAccount,omitempty" tf:"gcp_service_account,omitempty"`

	// The Kinesis stream ARN to ingest data from.
	StreamArn *string `json:"streamArn,omitempty" tf:"stream_arn,omitempty"`
}

type AwsKinesisParameters struct {

	// AWS role ARN to be used for Federated Identity authentication with
	// Kinesis. Check the Pub/Sub docs for how to set up this role and the
	// required permissions that need to be attached to it.
	// +kubebuilder:validation:Optional
	AwsRoleArn *string `json:"awsRoleArn" tf:"aws_role_arn,omitempty"`

	// The Kinesis consumer ARN to used for ingestion in
	// Enhanced Fan-Out mode. The consumer must be already
	// created and ready to be used.
	// +kubebuilder:validation:Optional
	ConsumerArn *string `json:"consumerArn" tf:"consumer_arn,omitempty"`

	// The GCP service account to be used for Federated Identity authentication
	// with Kinesis (via a AssumeRoleWithWebIdentity call for the provided
	// role). The awsRoleArn must be set up with accounts.google.com:sub
	// equals to this service account number.
	// +kubebuilder:validation:Optional
	GCPServiceAccount *string `json:"gcpServiceAccount" tf:"gcp_service_account,omitempty"`

	// The Kinesis stream ARN to ingest data from.
	// +kubebuilder:validation:Optional
	StreamArn *string `json:"streamArn" tf:"stream_arn,omitempty"`
}

type AwsMskInitParameters struct {

	// AWS role ARN to be used for Federated Identity authentication with
	// Kinesis. Check the Pub/Sub docs for how to set up this role and the
	// required permissions that need to be attached to it.
	AwsRoleArn *string `json:"awsRoleArn,omitempty" tf:"aws_role_arn,omitempty"`

	ClusterArn *string `json:"clusterArn,omitempty" tf:"cluster_arn,omitempty"`

	// The GCP service account to be used for Federated Identity authentication
	// with Kinesis (via a AssumeRoleWithWebIdentity call for the provided
	// role). The awsRoleArn must be set up with accounts.google.com:sub
	// equals to this service account number.
	GCPServiceAccount *string `json:"gcpServiceAccount,omitempty" tf:"gcp_service_account,omitempty"`

	Topic *string `json:"topic,omitempty" tf:"topic,omitempty"`
}

type AwsMskObservation struct {

	// AWS role ARN to be used for Federated Identity authentication with
	// Kinesis. Check the Pub/Sub docs for how to set up this role and the
	// required permissions that need to be attached to it.
	AwsRoleArn *string `json:"awsRoleArn,omitempty" tf:"aws_role_arn,omitempty"`

	ClusterArn *string `json:"clusterArn,omitempty" tf:"cluster_arn,omitempty"`

	// The GCP service account to be used for Federated Identity authentication
	// with Kinesis (via a AssumeRoleWithWebIdentity call for the provided
	// role). The awsRoleArn must be set up with accounts.google.com:sub
	// equals to this service account number.
	GCPServiceAccount *string `json:"gcpServiceAccount,omitempty" tf:"gcp_service_account,omitempty"`

	Topic *string `json:"topic,omitempty" tf:"topic,omitempty"`
}

type AwsMskParameters struct {

	// AWS role ARN to be used for Federated Identity authentication with
	// Kinesis. Check the Pub/Sub docs for how to set up this role and the
	// required permissions that need to be attached to it.
	// +kubebuilder:validation:Optional
	AwsRoleArn *string `json:"awsRoleArn" tf:"aws_role_arn,omitempty"`

	// +kubebuilder:validation:Optional
	ClusterArn *string `json:"clusterArn" tf:"cluster_arn,omitempty"`

	// The GCP service account to be used for Federated Identity authentication
	// with Kinesis (via a AssumeRoleWithWebIdentity call for the provided
	// role). The awsRoleArn must be set up with accounts.google.com:sub
	// equals to this service account number.
	// +kubebuilder:validation:Optional
	GCPServiceAccount *string `json:"gcpServiceAccount" tf:"gcp_service_account,omitempty"`

	// +kubebuilder:validation:Optional
	Topic *string `json:"topic" tf:"topic,omitempty"`
}

type AzureEventHubsInitParameters struct {

	// an identifier for the resource with format projects/{{project}}/topics/{{name}}
	ClientID *string `json:"clientId,omitempty" tf:"client_id,omitempty"`

	EventHub *string `json:"eventHub,omitempty" tf:"event_hub,omitempty"`

	// The GCP service account to be used for Federated Identity authentication
	// with Kinesis (via a AssumeRoleWithWebIdentity call for the provided
	// role). The awsRoleArn must be set up with accounts.google.com:sub
	// equals to this service account number.
	GCPServiceAccount *string `json:"gcpServiceAccount,omitempty" tf:"gcp_service_account,omitempty"`

	Namespace *string `json:"namespace,omitempty" tf:"namespace,omitempty"`

	ResourceGroup *string `json:"resourceGroup,omitempty" tf:"resource_group,omitempty"`

	// an identifier for the resource with format projects/{{project}}/topics/{{name}}
	SubscriptionID *string `json:"subscriptionId,omitempty" tf:"subscription_id,omitempty"`

	// an identifier for the resource with format projects/{{project}}/topics/{{name}}
	TenantID *string `json:"tenantId,omitempty" tf:"tenant_id,omitempty"`
}

type AzureEventHubsObservation struct {

	// an identifier for the resource with format projects/{{project}}/topics/{{name}}
	ClientID *string `json:"clientId,omitempty" tf:"client_id,omitempty"`

	EventHub *string `json:"eventHub,omitempty" tf:"event_hub,omitempty"`

	// The GCP service account to be used for Federated Identity authentication
	// with Kinesis (via a AssumeRoleWithWebIdentity call for the provided
	// role). The awsRoleArn must be set up with accounts.google.com:sub
	// equals to this service account number.
	GCPServiceAccount *string `json:"gcpServiceAccount,omitempty" tf:"gcp_service_account,omitempty"`

	Namespace *string `json:"namespace,omitempty" tf:"namespace,omitempty"`

	ResourceGroup *string `json:"resourceGroup,omitempty" tf:"resource_group,omitempty"`

	// an identifier for the resource with format projects/{{project}}/topics/{{name}}
	SubscriptionID *string `json:"subscriptionId,omitempty" tf:"subscription_id,omitempty"`

	// an identifier for the resource with format projects/{{project}}/topics/{{name}}
	TenantID *string `json:"tenantId,omitempty" tf:"tenant_id,omitempty"`
}

type AzureEventHubsParameters struct {

	// an identifier for the resource with format projects/{{project}}/topics/{{name}}
	// +kubebuilder:validation:Optional
	ClientID *string `json:"clientId,omitempty" tf:"client_id,omitempty"`

	// +kubebuilder:validation:Optional
	EventHub *string `json:"eventHub,omitempty" tf:"event_hub,omitempty"`

	// The GCP service account to be used for Federated Identity authentication
	// with Kinesis (via a AssumeRoleWithWebIdentity call for the provided
	// role). The awsRoleArn must be set up with accounts.google.com:sub
	// equals to this service account number.
	// +kubebuilder:validation:Optional
	GCPServiceAccount *string `json:"gcpServiceAccount,omitempty" tf:"gcp_service_account,omitempty"`

	// +kubebuilder:validation:Optional
	Namespace *string `json:"namespace,omitempty" tf:"namespace,omitempty"`

	// +kubebuilder:validation:Optional
	ResourceGroup *string `json:"resourceGroup,omitempty" tf:"resource_group,omitempty"`

	// an identifier for the resource with format projects/{{project}}/topics/{{name}}
	// +kubebuilder:validation:Optional
	SubscriptionID *string `json:"subscriptionId,omitempty" tf:"subscription_id,omitempty"`

	// an identifier for the resource with format projects/{{project}}/topics/{{name}}
	// +kubebuilder:validation:Optional
	TenantID *string `json:"tenantId,omitempty" tf:"tenant_id,omitempty"`
}

type CloudStorageInitParameters struct {
	AvroFormat *AvroFormatInitParameters `json:"avroFormat,omitempty" tf:"avro_format,omitempty"`

	Bucket *string `json:"bucket,omitempty" tf:"bucket,omitempty"`

	MatchGlob *string `json:"matchGlob,omitempty" tf:"match_glob,omitempty"`

	MinimumObjectCreateTime *string `json:"minimumObjectCreateTime,omitempty" tf:"minimum_object_create_time,omitempty"`

	PubsubAvroFormat *PubsubAvroFormatInitParameters `json:"pubsubAvroFormat,omitempty" tf:"pubsub_avro_format,omitempty"`

	TextFormat *TextFormatInitParameters `json:"textFormat,omitempty" tf:"text_format,omitempty"`
}

type CloudStorageObservation struct {
	AvroFormat *AvroFormatParameters `json:"avroFormat,omitempty" tf:"avro_format,omitempty"`

	Bucket *string `json:"bucket,omitempty" tf:"bucket,omitempty"`

	MatchGlob *string `json:"matchGlob,omitempty" tf:"match_glob,omitempty"`

	MinimumObjectCreateTime *string `json:"minimumObjectCreateTime,omitempty" tf:"minimum_object_create_time,omitempty"`

	PubsubAvroFormat *PubsubAvroFormatParameters `json:"pubsubAvroFormat,omitempty" tf:"pubsub_avro_format,omitempty"`

	TextFormat *TextFormatObservation `json:"textFormat,omitempty" tf:"text_format,omitempty"`
}

type CloudStorageParameters struct {

	// +kubebuilder:validation:Optional
	AvroFormat *AvroFormatParameters `json:"avroFormat,omitempty" tf:"avro_format,omitempty"`

	// +kubebuilder:validation:Optional
	Bucket *string `json:"bucket" tf:"bucket,omitempty"`

	// +kubebuilder:validation:Optional
	MatchGlob *string `json:"matchGlob,omitempty" tf:"match_glob,omitempty"`

	// +kubebuilder:validation:Optional
	MinimumObjectCreateTime *string `json:"minimumObjectCreateTime,omitempty" tf:"minimum_object_create_time,omitempty"`

	// +kubebuilder:validation:Optional
	PubsubAvroFormat *PubsubAvroFormatParameters `json:"pubsubAvroFormat,omitempty" tf:"pubsub_avro_format,omitempty"`

	// +kubebuilder:validation:Optional
	TextFormat *TextFormatParameters `json:"textFormat,omitempty" tf:"text_format,omitempty"`
}

type ConfluentCloudInitParameters struct {
	BootstrapServer *string `json:"bootstrapServer,omitempty" tf:"bootstrap_server,omitempty"`

	// an identifier for the resource with format projects/{{project}}/topics/{{name}}
	ClusterID *string `json:"clusterId,omitempty" tf:"cluster_id,omitempty"`

	// The GCP service account to be used for Federated Identity authentication
	// with Kinesis (via a AssumeRoleWithWebIdentity call for the provided
	// role). The awsRoleArn must be set up with accounts.google.com:sub
	// equals to this service account number.
	GCPServiceAccount *string `json:"gcpServiceAccount,omitempty" tf:"gcp_service_account,omitempty"`

	// an identifier for the resource with format projects/{{project}}/topics/{{name}}
	IdentityPoolID *string `json:"identityPoolId,omitempty" tf:"identity_pool_id,omitempty"`

	Topic *string `json:"topic,omitempty" tf:"topic,omitempty"`
}

type ConfluentCloudObservation struct {
	BootstrapServer *string `json:"bootstrapServer,omitempty" tf:"bootstrap_server,omitempty"`

	// an identifier for the resource with format projects/{{project}}/topics/{{name}}
	ClusterID *string `json:"clusterId,omitempty" tf:"cluster_id,omitempty"`

	// The GCP service account to be used for Federated Identity authentication
	// with Kinesis (via a AssumeRoleWithWebIdentity call for the provided
	// role). The awsRoleArn must be set up with accounts.google.com:sub
	// equals to this service account number.
	GCPServiceAccount *string `json:"gcpServiceAccount,omitempty" tf:"gcp_service_account,omitempty"`

	// an identifier for the resource with format projects/{{project}}/topics/{{name}}
	IdentityPoolID *string `json:"identityPoolId,omitempty" tf:"identity_pool_id,omitempty"`

	Topic *string `json:"topic,omitempty" tf:"topic,omitempty"`
}

type ConfluentCloudParameters struct {

	// +kubebuilder:validation:Optional
	BootstrapServer *string `json:"bootstrapServer" tf:"bootstrap_server,omitempty"`

	// an identifier for the resource with format projects/{{project}}/topics/{{name}}
	// +kubebuilder:validation:Optional
	ClusterID *string `json:"clusterId,omitempty" tf:"cluster_id,omitempty"`

	// The GCP service account to be used for Federated Identity authentication
	// with Kinesis (via a AssumeRoleWithWebIdentity call for the provided
	// role). The awsRoleArn must be set up with accounts.google.com:sub
	// equals to this service account number.
	// +kubebuilder:validation:Optional
	GCPServiceAccount *string `json:"gcpServiceAccount" tf:"gcp_service_account,omitempty"`

	// an identifier for the resource with format projects/{{project}}/topics/{{name}}
	// +kubebuilder:validation:Optional
	IdentityPoolID *string `json:"identityPoolId" tf:"identity_pool_id,omitempty"`

	// +kubebuilder:validation:Optional
	Topic *string `json:"topic" tf:"topic,omitempty"`
}

type IngestionDataSourceSettingsInitParameters struct {

	// Settings for ingestion from Amazon Kinesis Data Streams.
	// Structure is documented below.
	AwsKinesis *AwsKinesisInitParameters `json:"awsKinesis,omitempty" tf:"aws_kinesis,omitempty"`

	AwsMsk *AwsMskInitParameters `json:"awsMsk,omitempty" tf:"aws_msk,omitempty"`

	AzureEventHubs *AzureEventHubsInitParameters `json:"azureEventHubs,omitempty" tf:"azure_event_hubs,omitempty"`

	CloudStorage *CloudStorageInitParameters `json:"cloudStorage,omitempty" tf:"cloud_storage,omitempty"`

	ConfluentCloud *ConfluentCloudInitParameters `json:"confluentCloud,omitempty" tf:"confluent_cloud,omitempty"`

	PlatformLogsSettings *PlatformLogsSettingsInitParameters `json:"platformLogsSettings,omitempty" tf:"platform_logs_settings,omitempty"`
}

type IngestionDataSourceSettingsObservation struct {

	// Settings for ingestion from Amazon Kinesis Data Streams.
	// Structure is documented below.
	AwsKinesis *AwsKinesisObservation `json:"awsKinesis,omitempty" tf:"aws_kinesis,omitempty"`

	AwsMsk *AwsMskObservation `json:"awsMsk,omitempty" tf:"aws_msk,omitempty"`

	AzureEventHubs *AzureEventHubsObservation `json:"azureEventHubs,omitempty" tf:"azure_event_hubs,omitempty"`

	CloudStorage *CloudStorageObservation `json:"cloudStorage,omitempty" tf:"cloud_storage,omitempty"`

	ConfluentCloud *ConfluentCloudObservation `json:"confluentCloud,omitempty" tf:"confluent_cloud,omitempty"`

	PlatformLogsSettings *PlatformLogsSettingsObservation `json:"platformLogsSettings,omitempty" tf:"platform_logs_settings,omitempty"`
}

type IngestionDataSourceSettingsParameters struct {

	// Settings for ingestion from Amazon Kinesis Data Streams.
	// Structure is documented below.
	// +kubebuilder:validation:Optional
	AwsKinesis *AwsKinesisParameters `json:"awsKinesis,omitempty" tf:"aws_kinesis,omitempty"`

	// +kubebuilder:validation:Optional
	AwsMsk *AwsMskParameters `json:"awsMsk,omitempty" tf:"aws_msk,omitempty"`

	// +kubebuilder:validation:Optional
	AzureEventHubs *AzureEventHubsParameters `json:"azureEventHubs,omitempty" tf:"azure_event_hubs,omitempty"`

	// +kubebuilder:validation:Optional
	CloudStorage *CloudStorageParameters `json:"cloudStorage,omitempty" tf:"cloud_storage,omitempty"`

	// +kubebuilder:validation:Optional
	ConfluentCloud *ConfluentCloudParameters `json:"confluentCloud,omitempty" tf:"confluent_cloud,omitempty"`

	// +kubebuilder:validation:Optional
	PlatformLogsSettings *PlatformLogsSettingsParameters `json:"platformLogsSettings,omitempty" tf:"platform_logs_settings,omitempty"`
}

type MessageStoragePolicyInitParameters struct {

	// A list of IDs of GCP regions where messages that are published to
	// the topic may be persisted in storage. Messages published by
	// publishers running in non-allowed GCP regions (or running outside
	// of GCP altogether) will be routed for storage in one of the
	// allowed regions. An empty list means that no regions are allowed,
	// and is not a valid configuration.
	// +listType=set
	AllowedPersistenceRegions []*string `json:"allowedPersistenceRegions,omitempty" tf:"allowed_persistence_regions,omitempty"`

	EnforceInTransit *bool `json:"enforceInTransit,omitempty" tf:"enforce_in_transit,omitempty"`
}

type MessageStoragePolicyObservation struct {

	// A list of IDs of GCP regions where messages that are published to
	// the topic may be persisted in storage. Messages published by
	// publishers running in non-allowed GCP regions (or running outside
	// of GCP altogether) will be routed for storage in one of the
	// allowed regions. An empty list means that no regions are allowed,
	// and is not a valid configuration.
	// +listType=set
	AllowedPersistenceRegions []*string `json:"allowedPersistenceRegions,omitempty" tf:"allowed_persistence_regions,omitempty"`

	EnforceInTransit *bool `json:"enforceInTransit,omitempty" tf:"enforce_in_transit,omitempty"`
}

type MessageStoragePolicyParameters struct {

	// A list of IDs of GCP regions where messages that are published to
	// the topic may be persisted in storage. Messages published by
	// publishers running in non-allowed GCP regions (or running outside
	// of GCP altogether) will be routed for storage in one of the
	// allowed regions. An empty list means that no regions are allowed,
	// and is not a valid configuration.
	// +kubebuilder:validation:Optional
	// +listType=set
	AllowedPersistenceRegions []*string `json:"allowedPersistenceRegions" tf:"allowed_persistence_regions,omitempty"`

	// +kubebuilder:validation:Optional
	EnforceInTransit *bool `json:"enforceInTransit,omitempty" tf:"enforce_in_transit,omitempty"`
}

type MessageTransformsJavascriptUdfInitParameters struct {
	Code *string `json:"code,omitempty" tf:"code,omitempty"`

	// Name of the topic.
	FunctionName *string `json:"functionName,omitempty" tf:"function_name,omitempty"`
}

type MessageTransformsJavascriptUdfObservation struct {
	Code *string `json:"code,omitempty" tf:"code,omitempty"`

	// Name of the topic.
	FunctionName *string `json:"functionName,omitempty" tf:"function_name,omitempty"`
}

type MessageTransformsJavascriptUdfParameters struct {

	// +kubebuilder:validation:Optional
	Code *string `json:"code" tf:"code,omitempty"`

	// Name of the topic.
	// +kubebuilder:validation:Optional
	FunctionName *string `json:"functionName" tf:"function_name,omitempty"`
}

type PlatformLogsSettingsInitParameters struct {
	Severity *string `json:"severity,omitempty" tf:"severity,omitempty"`
}

type PlatformLogsSettingsObservation struct {
	Severity *string `json:"severity,omitempty" tf:"severity,omitempty"`
}

type PlatformLogsSettingsParameters struct {

	// +kubebuilder:validation:Optional
	Severity *string `json:"severity,omitempty" tf:"severity,omitempty"`
}

type PubsubAvroFormatInitParameters struct {
}

type PubsubAvroFormatObservation struct {
}

type PubsubAvroFormatParameters struct {
}

type SchemaSettingsInitParameters struct {

	// The encoding of messages validated against schema.
	// Default value is ENCODING_UNSPECIFIED.
	// Possible values are: ENCODING_UNSPECIFIED, JSON, BINARY.
	Encoding *string `json:"encoding,omitempty" tf:"encoding,omitempty"`

	// The name of the schema that messages published should be
	// validated against. Format is projects/{project}/schemas/{schema}.
	// The value of this field will be deleted-schema
	// if the schema has been deleted.
	Schema *string `json:"schema,omitempty" tf:"schema,omitempty"`
}

type SchemaSettingsObservation struct {

	// The encoding of messages validated against schema.
	// Default value is ENCODING_UNSPECIFIED.
	// Possible values are: ENCODING_UNSPECIFIED, JSON, BINARY.
	Encoding *string `json:"encoding,omitempty" tf:"encoding,omitempty"`

	// The name of the schema that messages published should be
	// validated against. Format is projects/{project}/schemas/{schema}.
	// The value of this field will be deleted-schema
	// if the schema has been deleted.
	Schema *string `json:"schema,omitempty" tf:"schema,omitempty"`
}

type SchemaSettingsParameters struct {

	// The encoding of messages validated against schema.
	// Default value is ENCODING_UNSPECIFIED.
	// Possible values are: ENCODING_UNSPECIFIED, JSON, BINARY.
	// +kubebuilder:validation:Optional
	Encoding *string `json:"encoding,omitempty" tf:"encoding,omitempty"`

	// The name of the schema that messages published should be
	// validated against. Format is projects/{project}/schemas/{schema}.
	// The value of this field will be deleted-schema
	// if the schema has been deleted.
	// +kubebuilder:validation:Optional
	Schema *string `json:"schema" tf:"schema,omitempty"`
}

type TextFormatInitParameters struct {
	Delimiter *string `json:"delimiter,omitempty" tf:"delimiter,omitempty"`
}

type TextFormatObservation struct {
	Delimiter *string `json:"delimiter,omitempty" tf:"delimiter,omitempty"`
}

type TextFormatParameters struct {

	// +kubebuilder:validation:Optional
	Delimiter *string `json:"delimiter,omitempty" tf:"delimiter,omitempty"`
}

type TopicInitParameters struct {

	// Settings for ingestion from a data source into this topic.
	// Structure is documented below.
	IngestionDataSourceSettings *IngestionDataSourceSettingsInitParameters `json:"ingestionDataSourceSettings,omitempty" tf:"ingestion_data_source_settings,omitempty"`

	// The resource name of the Cloud KMS CryptoKey to be used to protect access
	// to messages published on this topic. Your project's PubSub service account
	// (service-{{PROJECT_NUMBER}}@gcp-sa-pubsub.iam.gserviceaccount.com) must have
	// roles/cloudkms.cryptoKeyEncrypterDecrypter to use this feature.
	// The expected format is projects/*/locations/*/keyRings/*/cryptoKeys/*
	// +crossplane:generate:reference:type=github.com/upbound/provider-gcp/apis/kms/v1beta2.CryptoKey
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractResourceID()
	KMSKeyName *string `json:"kmsKeyName,omitempty" tf:"kms_key_name,omitempty"`

	// Reference to a CryptoKey in kms to populate kmsKeyName.
	// +kubebuilder:validation:Optional
	KMSKeyNameRef *v1.Reference `json:"kmsKeyNameRef,omitempty" tf:"-"`

	// Selector for a CryptoKey in kms to populate kmsKeyName.
	// +kubebuilder:validation:Optional
	KMSKeyNameSelector *v1.Selector `json:"kmsKeyNameSelector,omitempty" tf:"-"`

	// A set of key/value label pairs to assign to this Topic.
	// +mapType=granular
	Labels map[string]*string `json:"labels,omitempty" tf:"labels,omitempty"`

	// Indicates the minimum duration to retain a message after it is published
	// to the topic. If this field is set, messages published to the topic in
	// the last messageRetentionDuration are always available to subscribers.
	// For instance, it allows any attached subscription to seek to a timestamp
	// that is up to messageRetentionDuration in the past. If this field is not
	// set, message retention is controlled by settings on individual subscriptions.
	// The rotation period has the format of a decimal number, followed by the
	// letter s (seconds). Cannot be more than 31 days or less than 10 minutes.
	MessageRetentionDuration *string `json:"messageRetentionDuration,omitempty" tf:"message_retention_duration,omitempty"`

	// Policy constraining the set of Google Cloud Platform regions where
	// messages published to the topic may be stored. If not present, then no
	// constraints are in effect.
	// Structure is documented below.
	MessageStoragePolicy *MessageStoragePolicyInitParameters `json:"messageStoragePolicy,omitempty" tf:"message_storage_policy,omitempty"`

	MessageTransforms []TopicMessageTransformsInitParameters `json:"messageTransforms,omitempty" tf:"message_transforms,omitempty"`

	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project *string `json:"project,omitempty" tf:"project,omitempty"`

	// Settings for validating messages published against a schema.
	// Structure is documented below.
	SchemaSettings *SchemaSettingsInitParameters `json:"schemaSettings,omitempty" tf:"schema_settings,omitempty"`
}

type TopicMessageTransformsInitParameters struct {
	Disabled *bool `json:"disabled,omitempty" tf:"disabled,omitempty"`

	JavascriptUdf *MessageTransformsJavascriptUdfInitParameters `json:"javascriptUdf,omitempty" tf:"javascript_udf,omitempty"`
}

type TopicMessageTransformsObservation struct {
	Disabled *bool `json:"disabled,omitempty" tf:"disabled,omitempty"`

	JavascriptUdf *MessageTransformsJavascriptUdfObservation `json:"javascriptUdf,omitempty" tf:"javascript_udf,omitempty"`
}

type TopicMessageTransformsParameters struct {

	// +kubebuilder:validation:Optional
	Disabled *bool `json:"disabled,omitempty" tf:"disabled,omitempty"`

	// +kubebuilder:validation:Optional
	JavascriptUdf *MessageTransformsJavascriptUdfParameters `json:"javascriptUdf,omitempty" tf:"javascript_udf,omitempty"`
}

type TopicObservation struct {

	// for all of the labels present on the resource.
	// +mapType=granular
	EffectiveLabels map[string]*string `json:"effectiveLabels,omitempty" tf:"effective_labels,omitempty"`

	// an identifier for the resource with format projects/{{project}}/topics/{{name}}
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// Settings for ingestion from a data source into this topic.
	// Structure is documented below.
	IngestionDataSourceSettings *IngestionDataSourceSettingsObservation `json:"ingestionDataSourceSettings,omitempty" tf:"ingestion_data_source_settings,omitempty"`

	// The resource name of the Cloud KMS CryptoKey to be used to protect access
	// to messages published on this topic. Your project's PubSub service account
	// (service-{{PROJECT_NUMBER}}@gcp-sa-pubsub.iam.gserviceaccount.com) must have
	// roles/cloudkms.cryptoKeyEncrypterDecrypter to use this feature.
	// The expected format is projects/*/locations/*/keyRings/*/cryptoKeys/*
	KMSKeyName *string `json:"kmsKeyName,omitempty" tf:"kms_key_name,omitempty"`

	// A set of key/value label pairs to assign to this Topic.
	// +mapType=granular
	Labels map[string]*string `json:"labels,omitempty" tf:"labels,omitempty"`

	// Indicates the minimum duration to retain a message after it is published
	// to the topic. If this field is set, messages published to the topic in
	// the last messageRetentionDuration are always available to subscribers.
	// For instance, it allows any attached subscription to seek to a timestamp
	// that is up to messageRetentionDuration in the past. If this field is not
	// set, message retention is controlled by settings on individual subscriptions.
	// The rotation period has the format of a decimal number, followed by the
	// letter s (seconds). Cannot be more than 31 days or less than 10 minutes.
	MessageRetentionDuration *string `json:"messageRetentionDuration,omitempty" tf:"message_retention_duration,omitempty"`

	// Policy constraining the set of Google Cloud Platform regions where
	// messages published to the topic may be stored. If not present, then no
	// constraints are in effect.
	// Structure is documented below.
	MessageStoragePolicy *MessageStoragePolicyObservation `json:"messageStoragePolicy,omitempty" tf:"message_storage_policy,omitempty"`

	MessageTransforms []TopicMessageTransformsObservation `json:"messageTransforms,omitempty" tf:"message_transforms,omitempty"`

	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project *string `json:"project,omitempty" tf:"project,omitempty"`

	// Settings for validating messages published against a schema.
	// Structure is documented below.
	SchemaSettings *SchemaSettingsObservation `json:"schemaSettings,omitempty" tf:"schema_settings,omitempty"`

	// The combination of labels configured directly on the resource
	// and default labels configured on the provider.
	// +mapType=granular
	TerraformLabels map[string]*string `json:"terraformLabels,omitempty" tf:"terraform_labels,omitempty"`
}

type TopicParameters struct {

	// Settings for ingestion from a data source into this topic.
	// Structure is documented below.
	// +kubebuilder:validation:Optional
	IngestionDataSourceSettings *IngestionDataSourceSettingsParameters `json:"ingestionDataSourceSettings,omitempty" tf:"ingestion_data_source_settings,omitempty"`

	// The resource name of the Cloud KMS CryptoKey to be used to protect access
	// to messages published on this topic. Your project's PubSub service account
	// (service-{{PROJECT_NUMBER}}@gcp-sa-pubsub.iam.gserviceaccount.com) must have
	// roles/cloudkms.cryptoKeyEncrypterDecrypter to use this feature.
	// The expected format is projects/*/locations/*/keyRings/*/cryptoKeys/*
	// +crossplane:generate:reference:type=github.com/upbound/provider-gcp/apis/kms/v1beta2.CryptoKey
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	KMSKeyName *string `json:"kmsKeyName,omitempty" tf:"kms_key_name,omitempty"`

	// Reference to a CryptoKey in kms to populate kmsKeyName.
	// +kubebuilder:validation:Optional
	KMSKeyNameRef *v1.Reference `json:"kmsKeyNameRef,omitempty" tf:"-"`

	// Selector for a CryptoKey in kms to populate kmsKeyName.
	// +kubebuilder:validation:Optional
	KMSKeyNameSelector *v1.Selector `json:"kmsKeyNameSelector,omitempty" tf:"-"`

	// A set of key/value label pairs to assign to this Topic.
	// +kubebuilder:validation:Optional
	// +mapType=granular
	Labels map[string]*string `json:"labels,omitempty" tf:"labels,omitempty"`

	// Indicates the minimum duration to retain a message after it is published
	// to the topic. If this field is set, messages published to the topic in
	// the last messageRetentionDuration are always available to subscribers.
	// For instance, it allows any attached subscription to seek to a timestamp
	// that is up to messageRetentionDuration in the past. If this field is not
	// set, message retention is controlled by settings on individual subscriptions.
	// The rotation period has the format of a decimal number, followed by the
	// letter s (seconds). Cannot be more than 31 days or less than 10 minutes.
	// +kubebuilder:validation:Optional
	MessageRetentionDuration *string `json:"messageRetentionDuration,omitempty" tf:"message_retention_duration,omitempty"`

	// Policy constraining the set of Google Cloud Platform regions where
	// messages published to the topic may be stored. If not present, then no
	// constraints are in effect.
	// Structure is documented below.
	// +kubebuilder:validation:Optional
	MessageStoragePolicy *MessageStoragePolicyParameters `json:"messageStoragePolicy,omitempty" tf:"message_storage_policy,omitempty"`

	// +kubebuilder:validation:Optional
	MessageTransforms []TopicMessageTransformsParameters `json:"messageTransforms,omitempty" tf:"message_transforms,omitempty"`

	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	// +kubebuilder:validation:Optional
	Project *string `json:"project,omitempty" tf:"project,omitempty"`

	// Settings for validating messages published against a schema.
	// Structure is documented below.
	// +kubebuilder:validation:Optional
	SchemaSettings *SchemaSettingsParameters `json:"schemaSettings,omitempty" tf:"schema_settings,omitempty"`
}

// TopicSpec defines the desired state of Topic
type TopicSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     TopicParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider TopicInitParameters `json:"initProvider,omitempty"`
}

// TopicStatus defines the observed state of Topic.
type TopicStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        TopicObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status

// Topic is the Schema for the Topics API. A named resource to which messages are sent by publishers.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,gcp}
type Topic struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              TopicSpec   `json:"spec"`
	Status            TopicStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// TopicList contains a list of Topics
type TopicList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []Topic `json:"items"`
}

// Repository type metadata.
var (
	Topic_Kind             = "Topic"
	Topic_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: Topic_Kind}.String()
	Topic_KindAPIVersion   = Topic_Kind + "." + CRDGroupVersion.String()
	Topic_GroupVersionKind = CRDGroupVersion.WithKind(Topic_Kind)
)

func init() {
	SchemeBuilder.Register(&Topic{}, &TopicList{})
}
