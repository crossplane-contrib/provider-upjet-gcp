// SPDX-FileCopyrightText: 2023 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

/*
Copyright 2021 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by upjet. DO NOT EDIT.

package v1beta1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type DefaultObjectACLInitParameters struct {

	// The name of the bucket it applies to.
	// +crossplane:generate:reference:type=github.com/upbound/provider-gcp/apis/storage/v1beta1.Bucket
	Bucket *string `json:"bucket,omitempty" tf:"bucket,omitempty"`

	// Reference to a Bucket in storage to populate bucket.
	// +kubebuilder:validation:Optional
	BucketRef *v1.Reference `json:"bucketRef,omitempty" tf:"-"`

	// Selector for a Bucket in storage to populate bucket.
	// +kubebuilder:validation:Optional
	BucketSelector *v1.Selector `json:"bucketSelector,omitempty" tf:"-"`

	// List of role/entity pairs in the form ROLE:entity.
	// See GCS Object ACL documentation for more details.
	// Omitting the field is the same as providing an empty list.
	// +listType=set
	RoleEntity []*string `json:"roleEntity,omitempty" tf:"role_entity,omitempty"`
}

type DefaultObjectACLObservation struct {

	// The name of the bucket it applies to.
	Bucket *string `json:"bucket,omitempty" tf:"bucket,omitempty"`

	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// List of role/entity pairs in the form ROLE:entity.
	// See GCS Object ACL documentation for more details.
	// Omitting the field is the same as providing an empty list.
	// +listType=set
	RoleEntity []*string `json:"roleEntity,omitempty" tf:"role_entity,omitempty"`
}

type DefaultObjectACLParameters struct {

	// The name of the bucket it applies to.
	// +crossplane:generate:reference:type=github.com/upbound/provider-gcp/apis/storage/v1beta1.Bucket
	// +kubebuilder:validation:Optional
	Bucket *string `json:"bucket,omitempty" tf:"bucket,omitempty"`

	// Reference to a Bucket in storage to populate bucket.
	// +kubebuilder:validation:Optional
	BucketRef *v1.Reference `json:"bucketRef,omitempty" tf:"-"`

	// Selector for a Bucket in storage to populate bucket.
	// +kubebuilder:validation:Optional
	BucketSelector *v1.Selector `json:"bucketSelector,omitempty" tf:"-"`

	// List of role/entity pairs in the form ROLE:entity.
	// See GCS Object ACL documentation for more details.
	// Omitting the field is the same as providing an empty list.
	// +kubebuilder:validation:Optional
	// +listType=set
	RoleEntity []*string `json:"roleEntity,omitempty" tf:"role_entity,omitempty"`
}

// DefaultObjectACLSpec defines the desired state of DefaultObjectACL
type DefaultObjectACLSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     DefaultObjectACLParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider DefaultObjectACLInitParameters `json:"initProvider,omitempty"`
}

// DefaultObjectACLStatus defines the observed state of DefaultObjectACL.
type DefaultObjectACLStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        DefaultObjectACLObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// DefaultObjectACL is the Schema for the DefaultObjectACLs API. Authoritatively manages the default object ACLs for a Google Cloud Storage bucket
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,gcp}
type DefaultObjectACL struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              DefaultObjectACLSpec   `json:"spec"`
	Status            DefaultObjectACLStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// DefaultObjectACLList contains a list of DefaultObjectACLs
type DefaultObjectACLList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []DefaultObjectACL `json:"items"`
}

// Repository type metadata.
var (
	DefaultObjectACL_Kind             = "DefaultObjectACL"
	DefaultObjectACL_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: DefaultObjectACL_Kind}.String()
	DefaultObjectACL_KindAPIVersion   = DefaultObjectACL_Kind + "." + CRDGroupVersion.String()
	DefaultObjectACL_GroupVersionKind = CRDGroupVersion.WithKind(DefaultObjectACL_Kind)
)

func init() {
	SchemeBuilder.Register(&DefaultObjectACL{}, &DefaultObjectACLList{})
}
