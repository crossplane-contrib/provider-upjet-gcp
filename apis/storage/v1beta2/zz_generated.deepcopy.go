//go:build !ignore_autogenerated

// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by controller-gen. DO NOT EDIT.

package v1beta2

import (
	"github.com/crossplane/crossplane-runtime/apis/common/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ActionInitParameters) DeepCopyInto(out *ActionInitParameters) {
	*out = *in
	if in.StorageClass != nil {
		in, out := &in.StorageClass, &out.StorageClass
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ActionInitParameters.
func (in *ActionInitParameters) DeepCopy() *ActionInitParameters {
	if in == nil {
		return nil
	}
	out := new(ActionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ActionObservation) DeepCopyInto(out *ActionObservation) {
	*out = *in
	if in.StorageClass != nil {
		in, out := &in.StorageClass, &out.StorageClass
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ActionObservation.
func (in *ActionObservation) DeepCopy() *ActionObservation {
	if in == nil {
		return nil
	}
	out := new(ActionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ActionParameters) DeepCopyInto(out *ActionParameters) {
	*out = *in
	if in.StorageClass != nil {
		in, out := &in.StorageClass, &out.StorageClass
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ActionParameters.
func (in *ActionParameters) DeepCopy() *ActionParameters {
	if in == nil {
		return nil
	}
	out := new(ActionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoclassInitParameters) DeepCopyInto(out *AutoclassInitParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.TerminalStorageClass != nil {
		in, out := &in.TerminalStorageClass, &out.TerminalStorageClass
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoclassInitParameters.
func (in *AutoclassInitParameters) DeepCopy() *AutoclassInitParameters {
	if in == nil {
		return nil
	}
	out := new(AutoclassInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoclassObservation) DeepCopyInto(out *AutoclassObservation) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.TerminalStorageClass != nil {
		in, out := &in.TerminalStorageClass, &out.TerminalStorageClass
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoclassObservation.
func (in *AutoclassObservation) DeepCopy() *AutoclassObservation {
	if in == nil {
		return nil
	}
	out := new(AutoclassObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoclassParameters) DeepCopyInto(out *AutoclassParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.TerminalStorageClass != nil {
		in, out := &in.TerminalStorageClass, &out.TerminalStorageClass
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoclassParameters.
func (in *AutoclassParameters) DeepCopy() *AutoclassParameters {
	if in == nil {
		return nil
	}
	out := new(AutoclassParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Bucket) DeepCopyInto(out *Bucket) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Bucket.
func (in *Bucket) DeepCopy() *Bucket {
	if in == nil {
		return nil
	}
	out := new(Bucket)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Bucket) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BucketIAMMember) DeepCopyInto(out *BucketIAMMember) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BucketIAMMember.
func (in *BucketIAMMember) DeepCopy() *BucketIAMMember {
	if in == nil {
		return nil
	}
	out := new(BucketIAMMember)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *BucketIAMMember) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BucketIAMMemberConditionInitParameters) DeepCopyInto(out *BucketIAMMemberConditionInitParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Expression != nil {
		in, out := &in.Expression, &out.Expression
		*out = new(string)
		**out = **in
	}
	if in.Title != nil {
		in, out := &in.Title, &out.Title
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BucketIAMMemberConditionInitParameters.
func (in *BucketIAMMemberConditionInitParameters) DeepCopy() *BucketIAMMemberConditionInitParameters {
	if in == nil {
		return nil
	}
	out := new(BucketIAMMemberConditionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BucketIAMMemberConditionObservation) DeepCopyInto(out *BucketIAMMemberConditionObservation) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Expression != nil {
		in, out := &in.Expression, &out.Expression
		*out = new(string)
		**out = **in
	}
	if in.Title != nil {
		in, out := &in.Title, &out.Title
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BucketIAMMemberConditionObservation.
func (in *BucketIAMMemberConditionObservation) DeepCopy() *BucketIAMMemberConditionObservation {
	if in == nil {
		return nil
	}
	out := new(BucketIAMMemberConditionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BucketIAMMemberConditionParameters) DeepCopyInto(out *BucketIAMMemberConditionParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Expression != nil {
		in, out := &in.Expression, &out.Expression
		*out = new(string)
		**out = **in
	}
	if in.Title != nil {
		in, out := &in.Title, &out.Title
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BucketIAMMemberConditionParameters.
func (in *BucketIAMMemberConditionParameters) DeepCopy() *BucketIAMMemberConditionParameters {
	if in == nil {
		return nil
	}
	out := new(BucketIAMMemberConditionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BucketIAMMemberInitParameters) DeepCopyInto(out *BucketIAMMemberInitParameters) {
	*out = *in
	if in.Bucket != nil {
		in, out := &in.Bucket, &out.Bucket
		*out = new(string)
		**out = **in
	}
	if in.BucketRef != nil {
		in, out := &in.BucketRef, &out.BucketRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.BucketSelector != nil {
		in, out := &in.BucketSelector, &out.BucketSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Condition != nil {
		in, out := &in.Condition, &out.Condition
		*out = new(BucketIAMMemberConditionInitParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.Member != nil {
		in, out := &in.Member, &out.Member
		*out = new(string)
		**out = **in
	}
	if in.Role != nil {
		in, out := &in.Role, &out.Role
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BucketIAMMemberInitParameters.
func (in *BucketIAMMemberInitParameters) DeepCopy() *BucketIAMMemberInitParameters {
	if in == nil {
		return nil
	}
	out := new(BucketIAMMemberInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BucketIAMMemberList) DeepCopyInto(out *BucketIAMMemberList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]BucketIAMMember, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BucketIAMMemberList.
func (in *BucketIAMMemberList) DeepCopy() *BucketIAMMemberList {
	if in == nil {
		return nil
	}
	out := new(BucketIAMMemberList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *BucketIAMMemberList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BucketIAMMemberObservation) DeepCopyInto(out *BucketIAMMemberObservation) {
	*out = *in
	if in.Bucket != nil {
		in, out := &in.Bucket, &out.Bucket
		*out = new(string)
		**out = **in
	}
	if in.Condition != nil {
		in, out := &in.Condition, &out.Condition
		*out = new(BucketIAMMemberConditionObservation)
		(*in).DeepCopyInto(*out)
	}
	if in.Etag != nil {
		in, out := &in.Etag, &out.Etag
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Member != nil {
		in, out := &in.Member, &out.Member
		*out = new(string)
		**out = **in
	}
	if in.Role != nil {
		in, out := &in.Role, &out.Role
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BucketIAMMemberObservation.
func (in *BucketIAMMemberObservation) DeepCopy() *BucketIAMMemberObservation {
	if in == nil {
		return nil
	}
	out := new(BucketIAMMemberObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BucketIAMMemberParameters) DeepCopyInto(out *BucketIAMMemberParameters) {
	*out = *in
	if in.Bucket != nil {
		in, out := &in.Bucket, &out.Bucket
		*out = new(string)
		**out = **in
	}
	if in.BucketRef != nil {
		in, out := &in.BucketRef, &out.BucketRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.BucketSelector != nil {
		in, out := &in.BucketSelector, &out.BucketSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Condition != nil {
		in, out := &in.Condition, &out.Condition
		*out = new(BucketIAMMemberConditionParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.Member != nil {
		in, out := &in.Member, &out.Member
		*out = new(string)
		**out = **in
	}
	if in.Role != nil {
		in, out := &in.Role, &out.Role
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BucketIAMMemberParameters.
func (in *BucketIAMMemberParameters) DeepCopy() *BucketIAMMemberParameters {
	if in == nil {
		return nil
	}
	out := new(BucketIAMMemberParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BucketIAMMemberSpec) DeepCopyInto(out *BucketIAMMemberSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BucketIAMMemberSpec.
func (in *BucketIAMMemberSpec) DeepCopy() *BucketIAMMemberSpec {
	if in == nil {
		return nil
	}
	out := new(BucketIAMMemberSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BucketIAMMemberStatus) DeepCopyInto(out *BucketIAMMemberStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BucketIAMMemberStatus.
func (in *BucketIAMMemberStatus) DeepCopy() *BucketIAMMemberStatus {
	if in == nil {
		return nil
	}
	out := new(BucketIAMMemberStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BucketInitParameters) DeepCopyInto(out *BucketInitParameters) {
	*out = *in
	if in.Autoclass != nil {
		in, out := &in.Autoclass, &out.Autoclass
		*out = new(AutoclassInitParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.Cors != nil {
		in, out := &in.Cors, &out.Cors
		*out = make([]CorsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CustomPlacementConfig != nil {
		in, out := &in.CustomPlacementConfig, &out.CustomPlacementConfig
		*out = new(CustomPlacementConfigInitParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.DefaultEventBasedHold != nil {
		in, out := &in.DefaultEventBasedHold, &out.DefaultEventBasedHold
		*out = new(bool)
		**out = **in
	}
	if in.EnableObjectRetention != nil {
		in, out := &in.EnableObjectRetention, &out.EnableObjectRetention
		*out = new(bool)
		**out = **in
	}
	if in.Encryption != nil {
		in, out := &in.Encryption, &out.Encryption
		*out = new(EncryptionInitParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.ForceDestroy != nil {
		in, out := &in.ForceDestroy, &out.ForceDestroy
		*out = new(bool)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.LifecycleRule != nil {
		in, out := &in.LifecycleRule, &out.LifecycleRule
		*out = make([]LifecycleRuleInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.Logging != nil {
		in, out := &in.Logging, &out.Logging
		*out = new(LoggingInitParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.PublicAccessPrevention != nil {
		in, out := &in.PublicAccessPrevention, &out.PublicAccessPrevention
		*out = new(string)
		**out = **in
	}
	if in.RequesterPays != nil {
		in, out := &in.RequesterPays, &out.RequesterPays
		*out = new(bool)
		**out = **in
	}
	if in.RetentionPolicy != nil {
		in, out := &in.RetentionPolicy, &out.RetentionPolicy
		*out = new(RetentionPolicyInitParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.Rpo != nil {
		in, out := &in.Rpo, &out.Rpo
		*out = new(string)
		**out = **in
	}
	if in.SoftDeletePolicy != nil {
		in, out := &in.SoftDeletePolicy, &out.SoftDeletePolicy
		*out = new(SoftDeletePolicyInitParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.StorageClass != nil {
		in, out := &in.StorageClass, &out.StorageClass
		*out = new(string)
		**out = **in
	}
	if in.UniformBucketLevelAccess != nil {
		in, out := &in.UniformBucketLevelAccess, &out.UniformBucketLevelAccess
		*out = new(bool)
		**out = **in
	}
	if in.Versioning != nil {
		in, out := &in.Versioning, &out.Versioning
		*out = new(VersioningInitParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.Website != nil {
		in, out := &in.Website, &out.Website
		*out = new(WebsiteInitParameters)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BucketInitParameters.
func (in *BucketInitParameters) DeepCopy() *BucketInitParameters {
	if in == nil {
		return nil
	}
	out := new(BucketInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BucketList) DeepCopyInto(out *BucketList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Bucket, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BucketList.
func (in *BucketList) DeepCopy() *BucketList {
	if in == nil {
		return nil
	}
	out := new(BucketList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *BucketList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BucketObject) DeepCopyInto(out *BucketObject) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BucketObject.
func (in *BucketObject) DeepCopy() *BucketObject {
	if in == nil {
		return nil
	}
	out := new(BucketObject)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *BucketObject) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BucketObjectInitParameters) DeepCopyInto(out *BucketObjectInitParameters) {
	*out = *in
	if in.Bucket != nil {
		in, out := &in.Bucket, &out.Bucket
		*out = new(string)
		**out = **in
	}
	if in.BucketRef != nil {
		in, out := &in.BucketRef, &out.BucketRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.BucketSelector != nil {
		in, out := &in.BucketSelector, &out.BucketSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.CacheControl != nil {
		in, out := &in.CacheControl, &out.CacheControl
		*out = new(string)
		**out = **in
	}
	if in.Content != nil {
		in, out := &in.Content, &out.Content
		*out = new(string)
		**out = **in
	}
	if in.ContentDisposition != nil {
		in, out := &in.ContentDisposition, &out.ContentDisposition
		*out = new(string)
		**out = **in
	}
	if in.ContentEncoding != nil {
		in, out := &in.ContentEncoding, &out.ContentEncoding
		*out = new(string)
		**out = **in
	}
	if in.ContentLanguage != nil {
		in, out := &in.ContentLanguage, &out.ContentLanguage
		*out = new(string)
		**out = **in
	}
	if in.ContentType != nil {
		in, out := &in.ContentType, &out.ContentType
		*out = new(string)
		**out = **in
	}
	if in.CustomerEncryption != nil {
		in, out := &in.CustomerEncryption, &out.CustomerEncryption
		*out = new(CustomerEncryptionInitParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.DetectMd5Hash != nil {
		in, out := &in.DetectMd5Hash, &out.DetectMd5Hash
		*out = new(string)
		**out = **in
	}
	if in.EventBasedHold != nil {
		in, out := &in.EventBasedHold, &out.EventBasedHold
		*out = new(bool)
		**out = **in
	}
	if in.KMSKeyName != nil {
		in, out := &in.KMSKeyName, &out.KMSKeyName
		*out = new(string)
		**out = **in
	}
	if in.Metadata != nil {
		in, out := &in.Metadata, &out.Metadata
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Retention != nil {
		in, out := &in.Retention, &out.Retention
		*out = new(RetentionInitParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(string)
		**out = **in
	}
	if in.StorageClass != nil {
		in, out := &in.StorageClass, &out.StorageClass
		*out = new(string)
		**out = **in
	}
	if in.TemporaryHold != nil {
		in, out := &in.TemporaryHold, &out.TemporaryHold
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BucketObjectInitParameters.
func (in *BucketObjectInitParameters) DeepCopy() *BucketObjectInitParameters {
	if in == nil {
		return nil
	}
	out := new(BucketObjectInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BucketObjectList) DeepCopyInto(out *BucketObjectList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]BucketObject, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BucketObjectList.
func (in *BucketObjectList) DeepCopy() *BucketObjectList {
	if in == nil {
		return nil
	}
	out := new(BucketObjectList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *BucketObjectList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BucketObjectObservation) DeepCopyInto(out *BucketObjectObservation) {
	*out = *in
	if in.Bucket != nil {
		in, out := &in.Bucket, &out.Bucket
		*out = new(string)
		**out = **in
	}
	if in.CacheControl != nil {
		in, out := &in.CacheControl, &out.CacheControl
		*out = new(string)
		**out = **in
	}
	if in.Content != nil {
		in, out := &in.Content, &out.Content
		*out = new(string)
		**out = **in
	}
	if in.ContentDisposition != nil {
		in, out := &in.ContentDisposition, &out.ContentDisposition
		*out = new(string)
		**out = **in
	}
	if in.ContentEncoding != nil {
		in, out := &in.ContentEncoding, &out.ContentEncoding
		*out = new(string)
		**out = **in
	}
	if in.ContentLanguage != nil {
		in, out := &in.ContentLanguage, &out.ContentLanguage
		*out = new(string)
		**out = **in
	}
	if in.ContentType != nil {
		in, out := &in.ContentType, &out.ContentType
		*out = new(string)
		**out = **in
	}
	if in.Crc32C != nil {
		in, out := &in.Crc32C, &out.Crc32C
		*out = new(string)
		**out = **in
	}
	if in.CustomerEncryption != nil {
		in, out := &in.CustomerEncryption, &out.CustomerEncryption
		*out = new(CustomerEncryptionObservation)
		(*in).DeepCopyInto(*out)
	}
	if in.DetectMd5Hash != nil {
		in, out := &in.DetectMd5Hash, &out.DetectMd5Hash
		*out = new(string)
		**out = **in
	}
	if in.EventBasedHold != nil {
		in, out := &in.EventBasedHold, &out.EventBasedHold
		*out = new(bool)
		**out = **in
	}
	if in.Generation != nil {
		in, out := &in.Generation, &out.Generation
		*out = new(float64)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.KMSKeyName != nil {
		in, out := &in.KMSKeyName, &out.KMSKeyName
		*out = new(string)
		**out = **in
	}
	if in.Md5Hash != nil {
		in, out := &in.Md5Hash, &out.Md5Hash
		*out = new(string)
		**out = **in
	}
	if in.MediaLink != nil {
		in, out := &in.MediaLink, &out.MediaLink
		*out = new(string)
		**out = **in
	}
	if in.Metadata != nil {
		in, out := &in.Metadata, &out.Metadata
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.OutputName != nil {
		in, out := &in.OutputName, &out.OutputName
		*out = new(string)
		**out = **in
	}
	if in.Retention != nil {
		in, out := &in.Retention, &out.Retention
		*out = new(RetentionObservation)
		(*in).DeepCopyInto(*out)
	}
	if in.SelfLink != nil {
		in, out := &in.SelfLink, &out.SelfLink
		*out = new(string)
		**out = **in
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(string)
		**out = **in
	}
	if in.StorageClass != nil {
		in, out := &in.StorageClass, &out.StorageClass
		*out = new(string)
		**out = **in
	}
	if in.TemporaryHold != nil {
		in, out := &in.TemporaryHold, &out.TemporaryHold
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BucketObjectObservation.
func (in *BucketObjectObservation) DeepCopy() *BucketObjectObservation {
	if in == nil {
		return nil
	}
	out := new(BucketObjectObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BucketObjectParameters) DeepCopyInto(out *BucketObjectParameters) {
	*out = *in
	if in.Bucket != nil {
		in, out := &in.Bucket, &out.Bucket
		*out = new(string)
		**out = **in
	}
	if in.BucketRef != nil {
		in, out := &in.BucketRef, &out.BucketRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.BucketSelector != nil {
		in, out := &in.BucketSelector, &out.BucketSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.CacheControl != nil {
		in, out := &in.CacheControl, &out.CacheControl
		*out = new(string)
		**out = **in
	}
	if in.Content != nil {
		in, out := &in.Content, &out.Content
		*out = new(string)
		**out = **in
	}
	if in.ContentDisposition != nil {
		in, out := &in.ContentDisposition, &out.ContentDisposition
		*out = new(string)
		**out = **in
	}
	if in.ContentEncoding != nil {
		in, out := &in.ContentEncoding, &out.ContentEncoding
		*out = new(string)
		**out = **in
	}
	if in.ContentLanguage != nil {
		in, out := &in.ContentLanguage, &out.ContentLanguage
		*out = new(string)
		**out = **in
	}
	if in.ContentType != nil {
		in, out := &in.ContentType, &out.ContentType
		*out = new(string)
		**out = **in
	}
	if in.CustomerEncryption != nil {
		in, out := &in.CustomerEncryption, &out.CustomerEncryption
		*out = new(CustomerEncryptionParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.DetectMd5Hash != nil {
		in, out := &in.DetectMd5Hash, &out.DetectMd5Hash
		*out = new(string)
		**out = **in
	}
	if in.EventBasedHold != nil {
		in, out := &in.EventBasedHold, &out.EventBasedHold
		*out = new(bool)
		**out = **in
	}
	if in.KMSKeyName != nil {
		in, out := &in.KMSKeyName, &out.KMSKeyName
		*out = new(string)
		**out = **in
	}
	if in.Metadata != nil {
		in, out := &in.Metadata, &out.Metadata
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Retention != nil {
		in, out := &in.Retention, &out.Retention
		*out = new(RetentionParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(string)
		**out = **in
	}
	if in.StorageClass != nil {
		in, out := &in.StorageClass, &out.StorageClass
		*out = new(string)
		**out = **in
	}
	if in.TemporaryHold != nil {
		in, out := &in.TemporaryHold, &out.TemporaryHold
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BucketObjectParameters.
func (in *BucketObjectParameters) DeepCopy() *BucketObjectParameters {
	if in == nil {
		return nil
	}
	out := new(BucketObjectParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BucketObjectSpec) DeepCopyInto(out *BucketObjectSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BucketObjectSpec.
func (in *BucketObjectSpec) DeepCopy() *BucketObjectSpec {
	if in == nil {
		return nil
	}
	out := new(BucketObjectSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BucketObjectStatus) DeepCopyInto(out *BucketObjectStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BucketObjectStatus.
func (in *BucketObjectStatus) DeepCopy() *BucketObjectStatus {
	if in == nil {
		return nil
	}
	out := new(BucketObjectStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BucketObservation) DeepCopyInto(out *BucketObservation) {
	*out = *in
	if in.Autoclass != nil {
		in, out := &in.Autoclass, &out.Autoclass
		*out = new(AutoclassObservation)
		(*in).DeepCopyInto(*out)
	}
	if in.Cors != nil {
		in, out := &in.Cors, &out.Cors
		*out = make([]CorsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CustomPlacementConfig != nil {
		in, out := &in.CustomPlacementConfig, &out.CustomPlacementConfig
		*out = new(CustomPlacementConfigObservation)
		(*in).DeepCopyInto(*out)
	}
	if in.DefaultEventBasedHold != nil {
		in, out := &in.DefaultEventBasedHold, &out.DefaultEventBasedHold
		*out = new(bool)
		**out = **in
	}
	if in.EffectiveLabels != nil {
		in, out := &in.EffectiveLabels, &out.EffectiveLabels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.EnableObjectRetention != nil {
		in, out := &in.EnableObjectRetention, &out.EnableObjectRetention
		*out = new(bool)
		**out = **in
	}
	if in.Encryption != nil {
		in, out := &in.Encryption, &out.Encryption
		*out = new(EncryptionObservation)
		(*in).DeepCopyInto(*out)
	}
	if in.ForceDestroy != nil {
		in, out := &in.ForceDestroy, &out.ForceDestroy
		*out = new(bool)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.LifecycleRule != nil {
		in, out := &in.LifecycleRule, &out.LifecycleRule
		*out = make([]LifecycleRuleObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.Logging != nil {
		in, out := &in.Logging, &out.Logging
		*out = new(LoggingObservation)
		(*in).DeepCopyInto(*out)
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.ProjectNumber != nil {
		in, out := &in.ProjectNumber, &out.ProjectNumber
		*out = new(float64)
		**out = **in
	}
	if in.PublicAccessPrevention != nil {
		in, out := &in.PublicAccessPrevention, &out.PublicAccessPrevention
		*out = new(string)
		**out = **in
	}
	if in.RequesterPays != nil {
		in, out := &in.RequesterPays, &out.RequesterPays
		*out = new(bool)
		**out = **in
	}
	if in.RetentionPolicy != nil {
		in, out := &in.RetentionPolicy, &out.RetentionPolicy
		*out = new(RetentionPolicyObservation)
		(*in).DeepCopyInto(*out)
	}
	if in.Rpo != nil {
		in, out := &in.Rpo, &out.Rpo
		*out = new(string)
		**out = **in
	}
	if in.SelfLink != nil {
		in, out := &in.SelfLink, &out.SelfLink
		*out = new(string)
		**out = **in
	}
	if in.SoftDeletePolicy != nil {
		in, out := &in.SoftDeletePolicy, &out.SoftDeletePolicy
		*out = new(SoftDeletePolicyObservation)
		(*in).DeepCopyInto(*out)
	}
	if in.StorageClass != nil {
		in, out := &in.StorageClass, &out.StorageClass
		*out = new(string)
		**out = **in
	}
	if in.TerraformLabels != nil {
		in, out := &in.TerraformLabels, &out.TerraformLabels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
	if in.UniformBucketLevelAccess != nil {
		in, out := &in.UniformBucketLevelAccess, &out.UniformBucketLevelAccess
		*out = new(bool)
		**out = **in
	}
	if in.Versioning != nil {
		in, out := &in.Versioning, &out.Versioning
		*out = new(VersioningObservation)
		(*in).DeepCopyInto(*out)
	}
	if in.Website != nil {
		in, out := &in.Website, &out.Website
		*out = new(WebsiteObservation)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BucketObservation.
func (in *BucketObservation) DeepCopy() *BucketObservation {
	if in == nil {
		return nil
	}
	out := new(BucketObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BucketParameters) DeepCopyInto(out *BucketParameters) {
	*out = *in
	if in.Autoclass != nil {
		in, out := &in.Autoclass, &out.Autoclass
		*out = new(AutoclassParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.Cors != nil {
		in, out := &in.Cors, &out.Cors
		*out = make([]CorsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CustomPlacementConfig != nil {
		in, out := &in.CustomPlacementConfig, &out.CustomPlacementConfig
		*out = new(CustomPlacementConfigParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.DefaultEventBasedHold != nil {
		in, out := &in.DefaultEventBasedHold, &out.DefaultEventBasedHold
		*out = new(bool)
		**out = **in
	}
	if in.EnableObjectRetention != nil {
		in, out := &in.EnableObjectRetention, &out.EnableObjectRetention
		*out = new(bool)
		**out = **in
	}
	if in.Encryption != nil {
		in, out := &in.Encryption, &out.Encryption
		*out = new(EncryptionParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.ForceDestroy != nil {
		in, out := &in.ForceDestroy, &out.ForceDestroy
		*out = new(bool)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.LifecycleRule != nil {
		in, out := &in.LifecycleRule, &out.LifecycleRule
		*out = make([]LifecycleRuleParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.Logging != nil {
		in, out := &in.Logging, &out.Logging
		*out = new(LoggingParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.PublicAccessPrevention != nil {
		in, out := &in.PublicAccessPrevention, &out.PublicAccessPrevention
		*out = new(string)
		**out = **in
	}
	if in.RequesterPays != nil {
		in, out := &in.RequesterPays, &out.RequesterPays
		*out = new(bool)
		**out = **in
	}
	if in.RetentionPolicy != nil {
		in, out := &in.RetentionPolicy, &out.RetentionPolicy
		*out = new(RetentionPolicyParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.Rpo != nil {
		in, out := &in.Rpo, &out.Rpo
		*out = new(string)
		**out = **in
	}
	if in.SoftDeletePolicy != nil {
		in, out := &in.SoftDeletePolicy, &out.SoftDeletePolicy
		*out = new(SoftDeletePolicyParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.StorageClass != nil {
		in, out := &in.StorageClass, &out.StorageClass
		*out = new(string)
		**out = **in
	}
	if in.UniformBucketLevelAccess != nil {
		in, out := &in.UniformBucketLevelAccess, &out.UniformBucketLevelAccess
		*out = new(bool)
		**out = **in
	}
	if in.Versioning != nil {
		in, out := &in.Versioning, &out.Versioning
		*out = new(VersioningParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.Website != nil {
		in, out := &in.Website, &out.Website
		*out = new(WebsiteParameters)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BucketParameters.
func (in *BucketParameters) DeepCopy() *BucketParameters {
	if in == nil {
		return nil
	}
	out := new(BucketParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BucketSpec) DeepCopyInto(out *BucketSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BucketSpec.
func (in *BucketSpec) DeepCopy() *BucketSpec {
	if in == nil {
		return nil
	}
	out := new(BucketSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BucketStatus) DeepCopyInto(out *BucketStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BucketStatus.
func (in *BucketStatus) DeepCopy() *BucketStatus {
	if in == nil {
		return nil
	}
	out := new(BucketStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConditionInitParameters) DeepCopyInto(out *ConditionInitParameters) {
	*out = *in
	if in.Age != nil {
		in, out := &in.Age, &out.Age
		*out = new(float64)
		**out = **in
	}
	if in.CreatedBefore != nil {
		in, out := &in.CreatedBefore, &out.CreatedBefore
		*out = new(string)
		**out = **in
	}
	if in.CustomTimeBefore != nil {
		in, out := &in.CustomTimeBefore, &out.CustomTimeBefore
		*out = new(string)
		**out = **in
	}
	if in.DaysSinceCustomTime != nil {
		in, out := &in.DaysSinceCustomTime, &out.DaysSinceCustomTime
		*out = new(float64)
		**out = **in
	}
	if in.DaysSinceNoncurrentTime != nil {
		in, out := &in.DaysSinceNoncurrentTime, &out.DaysSinceNoncurrentTime
		*out = new(float64)
		**out = **in
	}
	if in.MatchesPrefix != nil {
		in, out := &in.MatchesPrefix, &out.MatchesPrefix
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.MatchesStorageClass != nil {
		in, out := &in.MatchesStorageClass, &out.MatchesStorageClass
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.MatchesSuffix != nil {
		in, out := &in.MatchesSuffix, &out.MatchesSuffix
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.NoAge != nil {
		in, out := &in.NoAge, &out.NoAge
		*out = new(bool)
		**out = **in
	}
	if in.NoncurrentTimeBefore != nil {
		in, out := &in.NoncurrentTimeBefore, &out.NoncurrentTimeBefore
		*out = new(string)
		**out = **in
	}
	if in.NumNewerVersions != nil {
		in, out := &in.NumNewerVersions, &out.NumNewerVersions
		*out = new(float64)
		**out = **in
	}
	if in.SendAgeIfZero != nil {
		in, out := &in.SendAgeIfZero, &out.SendAgeIfZero
		*out = new(bool)
		**out = **in
	}
	if in.SendDaysSinceCustomTimeIfZero != nil {
		in, out := &in.SendDaysSinceCustomTimeIfZero, &out.SendDaysSinceCustomTimeIfZero
		*out = new(bool)
		**out = **in
	}
	if in.SendDaysSinceNoncurrentTimeIfZero != nil {
		in, out := &in.SendDaysSinceNoncurrentTimeIfZero, &out.SendDaysSinceNoncurrentTimeIfZero
		*out = new(bool)
		**out = **in
	}
	if in.SendNumNewerVersionsIfZero != nil {
		in, out := &in.SendNumNewerVersionsIfZero, &out.SendNumNewerVersionsIfZero
		*out = new(bool)
		**out = **in
	}
	if in.WithState != nil {
		in, out := &in.WithState, &out.WithState
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConditionInitParameters.
func (in *ConditionInitParameters) DeepCopy() *ConditionInitParameters {
	if in == nil {
		return nil
	}
	out := new(ConditionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConditionObservation) DeepCopyInto(out *ConditionObservation) {
	*out = *in
	if in.Age != nil {
		in, out := &in.Age, &out.Age
		*out = new(float64)
		**out = **in
	}
	if in.CreatedBefore != nil {
		in, out := &in.CreatedBefore, &out.CreatedBefore
		*out = new(string)
		**out = **in
	}
	if in.CustomTimeBefore != nil {
		in, out := &in.CustomTimeBefore, &out.CustomTimeBefore
		*out = new(string)
		**out = **in
	}
	if in.DaysSinceCustomTime != nil {
		in, out := &in.DaysSinceCustomTime, &out.DaysSinceCustomTime
		*out = new(float64)
		**out = **in
	}
	if in.DaysSinceNoncurrentTime != nil {
		in, out := &in.DaysSinceNoncurrentTime, &out.DaysSinceNoncurrentTime
		*out = new(float64)
		**out = **in
	}
	if in.MatchesPrefix != nil {
		in, out := &in.MatchesPrefix, &out.MatchesPrefix
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.MatchesStorageClass != nil {
		in, out := &in.MatchesStorageClass, &out.MatchesStorageClass
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.MatchesSuffix != nil {
		in, out := &in.MatchesSuffix, &out.MatchesSuffix
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.NoAge != nil {
		in, out := &in.NoAge, &out.NoAge
		*out = new(bool)
		**out = **in
	}
	if in.NoncurrentTimeBefore != nil {
		in, out := &in.NoncurrentTimeBefore, &out.NoncurrentTimeBefore
		*out = new(string)
		**out = **in
	}
	if in.NumNewerVersions != nil {
		in, out := &in.NumNewerVersions, &out.NumNewerVersions
		*out = new(float64)
		**out = **in
	}
	if in.SendAgeIfZero != nil {
		in, out := &in.SendAgeIfZero, &out.SendAgeIfZero
		*out = new(bool)
		**out = **in
	}
	if in.SendDaysSinceCustomTimeIfZero != nil {
		in, out := &in.SendDaysSinceCustomTimeIfZero, &out.SendDaysSinceCustomTimeIfZero
		*out = new(bool)
		**out = **in
	}
	if in.SendDaysSinceNoncurrentTimeIfZero != nil {
		in, out := &in.SendDaysSinceNoncurrentTimeIfZero, &out.SendDaysSinceNoncurrentTimeIfZero
		*out = new(bool)
		**out = **in
	}
	if in.SendNumNewerVersionsIfZero != nil {
		in, out := &in.SendNumNewerVersionsIfZero, &out.SendNumNewerVersionsIfZero
		*out = new(bool)
		**out = **in
	}
	if in.WithState != nil {
		in, out := &in.WithState, &out.WithState
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConditionObservation.
func (in *ConditionObservation) DeepCopy() *ConditionObservation {
	if in == nil {
		return nil
	}
	out := new(ConditionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConditionParameters) DeepCopyInto(out *ConditionParameters) {
	*out = *in
	if in.Age != nil {
		in, out := &in.Age, &out.Age
		*out = new(float64)
		**out = **in
	}
	if in.CreatedBefore != nil {
		in, out := &in.CreatedBefore, &out.CreatedBefore
		*out = new(string)
		**out = **in
	}
	if in.CustomTimeBefore != nil {
		in, out := &in.CustomTimeBefore, &out.CustomTimeBefore
		*out = new(string)
		**out = **in
	}
	if in.DaysSinceCustomTime != nil {
		in, out := &in.DaysSinceCustomTime, &out.DaysSinceCustomTime
		*out = new(float64)
		**out = **in
	}
	if in.DaysSinceNoncurrentTime != nil {
		in, out := &in.DaysSinceNoncurrentTime, &out.DaysSinceNoncurrentTime
		*out = new(float64)
		**out = **in
	}
	if in.MatchesPrefix != nil {
		in, out := &in.MatchesPrefix, &out.MatchesPrefix
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.MatchesStorageClass != nil {
		in, out := &in.MatchesStorageClass, &out.MatchesStorageClass
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.MatchesSuffix != nil {
		in, out := &in.MatchesSuffix, &out.MatchesSuffix
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.NoAge != nil {
		in, out := &in.NoAge, &out.NoAge
		*out = new(bool)
		**out = **in
	}
	if in.NoncurrentTimeBefore != nil {
		in, out := &in.NoncurrentTimeBefore, &out.NoncurrentTimeBefore
		*out = new(string)
		**out = **in
	}
	if in.NumNewerVersions != nil {
		in, out := &in.NumNewerVersions, &out.NumNewerVersions
		*out = new(float64)
		**out = **in
	}
	if in.SendAgeIfZero != nil {
		in, out := &in.SendAgeIfZero, &out.SendAgeIfZero
		*out = new(bool)
		**out = **in
	}
	if in.SendDaysSinceCustomTimeIfZero != nil {
		in, out := &in.SendDaysSinceCustomTimeIfZero, &out.SendDaysSinceCustomTimeIfZero
		*out = new(bool)
		**out = **in
	}
	if in.SendDaysSinceNoncurrentTimeIfZero != nil {
		in, out := &in.SendDaysSinceNoncurrentTimeIfZero, &out.SendDaysSinceNoncurrentTimeIfZero
		*out = new(bool)
		**out = **in
	}
	if in.SendNumNewerVersionsIfZero != nil {
		in, out := &in.SendNumNewerVersionsIfZero, &out.SendNumNewerVersionsIfZero
		*out = new(bool)
		**out = **in
	}
	if in.WithState != nil {
		in, out := &in.WithState, &out.WithState
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConditionParameters.
func (in *ConditionParameters) DeepCopy() *ConditionParameters {
	if in == nil {
		return nil
	}
	out := new(ConditionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CorsInitParameters) DeepCopyInto(out *CorsInitParameters) {
	*out = *in
	if in.MaxAgeSeconds != nil {
		in, out := &in.MaxAgeSeconds, &out.MaxAgeSeconds
		*out = new(float64)
		**out = **in
	}
	if in.Method != nil {
		in, out := &in.Method, &out.Method
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Origin != nil {
		in, out := &in.Origin, &out.Origin
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ResponseHeader != nil {
		in, out := &in.ResponseHeader, &out.ResponseHeader
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CorsInitParameters.
func (in *CorsInitParameters) DeepCopy() *CorsInitParameters {
	if in == nil {
		return nil
	}
	out := new(CorsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CorsObservation) DeepCopyInto(out *CorsObservation) {
	*out = *in
	if in.MaxAgeSeconds != nil {
		in, out := &in.MaxAgeSeconds, &out.MaxAgeSeconds
		*out = new(float64)
		**out = **in
	}
	if in.Method != nil {
		in, out := &in.Method, &out.Method
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Origin != nil {
		in, out := &in.Origin, &out.Origin
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ResponseHeader != nil {
		in, out := &in.ResponseHeader, &out.ResponseHeader
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CorsObservation.
func (in *CorsObservation) DeepCopy() *CorsObservation {
	if in == nil {
		return nil
	}
	out := new(CorsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CorsParameters) DeepCopyInto(out *CorsParameters) {
	*out = *in
	if in.MaxAgeSeconds != nil {
		in, out := &in.MaxAgeSeconds, &out.MaxAgeSeconds
		*out = new(float64)
		**out = **in
	}
	if in.Method != nil {
		in, out := &in.Method, &out.Method
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Origin != nil {
		in, out := &in.Origin, &out.Origin
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ResponseHeader != nil {
		in, out := &in.ResponseHeader, &out.ResponseHeader
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CorsParameters.
func (in *CorsParameters) DeepCopy() *CorsParameters {
	if in == nil {
		return nil
	}
	out := new(CorsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomPlacementConfigInitParameters) DeepCopyInto(out *CustomPlacementConfigInitParameters) {
	*out = *in
	if in.DataLocations != nil {
		in, out := &in.DataLocations, &out.DataLocations
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomPlacementConfigInitParameters.
func (in *CustomPlacementConfigInitParameters) DeepCopy() *CustomPlacementConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(CustomPlacementConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomPlacementConfigObservation) DeepCopyInto(out *CustomPlacementConfigObservation) {
	*out = *in
	if in.DataLocations != nil {
		in, out := &in.DataLocations, &out.DataLocations
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomPlacementConfigObservation.
func (in *CustomPlacementConfigObservation) DeepCopy() *CustomPlacementConfigObservation {
	if in == nil {
		return nil
	}
	out := new(CustomPlacementConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomPlacementConfigParameters) DeepCopyInto(out *CustomPlacementConfigParameters) {
	*out = *in
	if in.DataLocations != nil {
		in, out := &in.DataLocations, &out.DataLocations
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomPlacementConfigParameters.
func (in *CustomPlacementConfigParameters) DeepCopy() *CustomPlacementConfigParameters {
	if in == nil {
		return nil
	}
	out := new(CustomPlacementConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomerEncryptionInitParameters) DeepCopyInto(out *CustomerEncryptionInitParameters) {
	*out = *in
	if in.EncryptionAlgorithm != nil {
		in, out := &in.EncryptionAlgorithm, &out.EncryptionAlgorithm
		*out = new(string)
		**out = **in
	}
	out.EncryptionKeySecretRef = in.EncryptionKeySecretRef
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomerEncryptionInitParameters.
func (in *CustomerEncryptionInitParameters) DeepCopy() *CustomerEncryptionInitParameters {
	if in == nil {
		return nil
	}
	out := new(CustomerEncryptionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomerEncryptionObservation) DeepCopyInto(out *CustomerEncryptionObservation) {
	*out = *in
	if in.EncryptionAlgorithm != nil {
		in, out := &in.EncryptionAlgorithm, &out.EncryptionAlgorithm
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomerEncryptionObservation.
func (in *CustomerEncryptionObservation) DeepCopy() *CustomerEncryptionObservation {
	if in == nil {
		return nil
	}
	out := new(CustomerEncryptionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomerEncryptionParameters) DeepCopyInto(out *CustomerEncryptionParameters) {
	*out = *in
	if in.EncryptionAlgorithm != nil {
		in, out := &in.EncryptionAlgorithm, &out.EncryptionAlgorithm
		*out = new(string)
		**out = **in
	}
	out.EncryptionKeySecretRef = in.EncryptionKeySecretRef
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomerEncryptionParameters.
func (in *CustomerEncryptionParameters) DeepCopy() *CustomerEncryptionParameters {
	if in == nil {
		return nil
	}
	out := new(CustomerEncryptionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EncryptionInitParameters) DeepCopyInto(out *EncryptionInitParameters) {
	*out = *in
	if in.DefaultKMSKeyName != nil {
		in, out := &in.DefaultKMSKeyName, &out.DefaultKMSKeyName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EncryptionInitParameters.
func (in *EncryptionInitParameters) DeepCopy() *EncryptionInitParameters {
	if in == nil {
		return nil
	}
	out := new(EncryptionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EncryptionObservation) DeepCopyInto(out *EncryptionObservation) {
	*out = *in
	if in.DefaultKMSKeyName != nil {
		in, out := &in.DefaultKMSKeyName, &out.DefaultKMSKeyName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EncryptionObservation.
func (in *EncryptionObservation) DeepCopy() *EncryptionObservation {
	if in == nil {
		return nil
	}
	out := new(EncryptionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EncryptionParameters) DeepCopyInto(out *EncryptionParameters) {
	*out = *in
	if in.DefaultKMSKeyName != nil {
		in, out := &in.DefaultKMSKeyName, &out.DefaultKMSKeyName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EncryptionParameters.
func (in *EncryptionParameters) DeepCopy() *EncryptionParameters {
	if in == nil {
		return nil
	}
	out := new(EncryptionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LifecycleRuleInitParameters) DeepCopyInto(out *LifecycleRuleInitParameters) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = new(ActionInitParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.Condition != nil {
		in, out := &in.Condition, &out.Condition
		*out = new(ConditionInitParameters)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LifecycleRuleInitParameters.
func (in *LifecycleRuleInitParameters) DeepCopy() *LifecycleRuleInitParameters {
	if in == nil {
		return nil
	}
	out := new(LifecycleRuleInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LifecycleRuleObservation) DeepCopyInto(out *LifecycleRuleObservation) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = new(ActionObservation)
		(*in).DeepCopyInto(*out)
	}
	if in.Condition != nil {
		in, out := &in.Condition, &out.Condition
		*out = new(ConditionObservation)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LifecycleRuleObservation.
func (in *LifecycleRuleObservation) DeepCopy() *LifecycleRuleObservation {
	if in == nil {
		return nil
	}
	out := new(LifecycleRuleObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LifecycleRuleParameters) DeepCopyInto(out *LifecycleRuleParameters) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = new(ActionParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.Condition != nil {
		in, out := &in.Condition, &out.Condition
		*out = new(ConditionParameters)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LifecycleRuleParameters.
func (in *LifecycleRuleParameters) DeepCopy() *LifecycleRuleParameters {
	if in == nil {
		return nil
	}
	out := new(LifecycleRuleParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoggingInitParameters) DeepCopyInto(out *LoggingInitParameters) {
	*out = *in
	if in.LogBucket != nil {
		in, out := &in.LogBucket, &out.LogBucket
		*out = new(string)
		**out = **in
	}
	if in.LogObjectPrefix != nil {
		in, out := &in.LogObjectPrefix, &out.LogObjectPrefix
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoggingInitParameters.
func (in *LoggingInitParameters) DeepCopy() *LoggingInitParameters {
	if in == nil {
		return nil
	}
	out := new(LoggingInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoggingObservation) DeepCopyInto(out *LoggingObservation) {
	*out = *in
	if in.LogBucket != nil {
		in, out := &in.LogBucket, &out.LogBucket
		*out = new(string)
		**out = **in
	}
	if in.LogObjectPrefix != nil {
		in, out := &in.LogObjectPrefix, &out.LogObjectPrefix
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoggingObservation.
func (in *LoggingObservation) DeepCopy() *LoggingObservation {
	if in == nil {
		return nil
	}
	out := new(LoggingObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoggingParameters) DeepCopyInto(out *LoggingParameters) {
	*out = *in
	if in.LogBucket != nil {
		in, out := &in.LogBucket, &out.LogBucket
		*out = new(string)
		**out = **in
	}
	if in.LogObjectPrefix != nil {
		in, out := &in.LogObjectPrefix, &out.LogObjectPrefix
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoggingParameters.
func (in *LoggingParameters) DeepCopy() *LoggingParameters {
	if in == nil {
		return nil
	}
	out := new(LoggingParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RetentionInitParameters) DeepCopyInto(out *RetentionInitParameters) {
	*out = *in
	if in.Mode != nil {
		in, out := &in.Mode, &out.Mode
		*out = new(string)
		**out = **in
	}
	if in.RetainUntilTime != nil {
		in, out := &in.RetainUntilTime, &out.RetainUntilTime
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RetentionInitParameters.
func (in *RetentionInitParameters) DeepCopy() *RetentionInitParameters {
	if in == nil {
		return nil
	}
	out := new(RetentionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RetentionObservation) DeepCopyInto(out *RetentionObservation) {
	*out = *in
	if in.Mode != nil {
		in, out := &in.Mode, &out.Mode
		*out = new(string)
		**out = **in
	}
	if in.RetainUntilTime != nil {
		in, out := &in.RetainUntilTime, &out.RetainUntilTime
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RetentionObservation.
func (in *RetentionObservation) DeepCopy() *RetentionObservation {
	if in == nil {
		return nil
	}
	out := new(RetentionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RetentionParameters) DeepCopyInto(out *RetentionParameters) {
	*out = *in
	if in.Mode != nil {
		in, out := &in.Mode, &out.Mode
		*out = new(string)
		**out = **in
	}
	if in.RetainUntilTime != nil {
		in, out := &in.RetainUntilTime, &out.RetainUntilTime
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RetentionParameters.
func (in *RetentionParameters) DeepCopy() *RetentionParameters {
	if in == nil {
		return nil
	}
	out := new(RetentionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RetentionPolicyInitParameters) DeepCopyInto(out *RetentionPolicyInitParameters) {
	*out = *in
	if in.IsLocked != nil {
		in, out := &in.IsLocked, &out.IsLocked
		*out = new(bool)
		**out = **in
	}
	if in.RetentionPeriod != nil {
		in, out := &in.RetentionPeriod, &out.RetentionPeriod
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RetentionPolicyInitParameters.
func (in *RetentionPolicyInitParameters) DeepCopy() *RetentionPolicyInitParameters {
	if in == nil {
		return nil
	}
	out := new(RetentionPolicyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RetentionPolicyObservation) DeepCopyInto(out *RetentionPolicyObservation) {
	*out = *in
	if in.IsLocked != nil {
		in, out := &in.IsLocked, &out.IsLocked
		*out = new(bool)
		**out = **in
	}
	if in.RetentionPeriod != nil {
		in, out := &in.RetentionPeriod, &out.RetentionPeriod
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RetentionPolicyObservation.
func (in *RetentionPolicyObservation) DeepCopy() *RetentionPolicyObservation {
	if in == nil {
		return nil
	}
	out := new(RetentionPolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RetentionPolicyParameters) DeepCopyInto(out *RetentionPolicyParameters) {
	*out = *in
	if in.IsLocked != nil {
		in, out := &in.IsLocked, &out.IsLocked
		*out = new(bool)
		**out = **in
	}
	if in.RetentionPeriod != nil {
		in, out := &in.RetentionPeriod, &out.RetentionPeriod
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RetentionPolicyParameters.
func (in *RetentionPolicyParameters) DeepCopy() *RetentionPolicyParameters {
	if in == nil {
		return nil
	}
	out := new(RetentionPolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SoftDeletePolicyInitParameters) DeepCopyInto(out *SoftDeletePolicyInitParameters) {
	*out = *in
	if in.RetentionDurationSeconds != nil {
		in, out := &in.RetentionDurationSeconds, &out.RetentionDurationSeconds
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SoftDeletePolicyInitParameters.
func (in *SoftDeletePolicyInitParameters) DeepCopy() *SoftDeletePolicyInitParameters {
	if in == nil {
		return nil
	}
	out := new(SoftDeletePolicyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SoftDeletePolicyObservation) DeepCopyInto(out *SoftDeletePolicyObservation) {
	*out = *in
	if in.EffectiveTime != nil {
		in, out := &in.EffectiveTime, &out.EffectiveTime
		*out = new(string)
		**out = **in
	}
	if in.RetentionDurationSeconds != nil {
		in, out := &in.RetentionDurationSeconds, &out.RetentionDurationSeconds
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SoftDeletePolicyObservation.
func (in *SoftDeletePolicyObservation) DeepCopy() *SoftDeletePolicyObservation {
	if in == nil {
		return nil
	}
	out := new(SoftDeletePolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SoftDeletePolicyParameters) DeepCopyInto(out *SoftDeletePolicyParameters) {
	*out = *in
	if in.RetentionDurationSeconds != nil {
		in, out := &in.RetentionDurationSeconds, &out.RetentionDurationSeconds
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SoftDeletePolicyParameters.
func (in *SoftDeletePolicyParameters) DeepCopy() *SoftDeletePolicyParameters {
	if in == nil {
		return nil
	}
	out := new(SoftDeletePolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VersioningInitParameters) DeepCopyInto(out *VersioningInitParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VersioningInitParameters.
func (in *VersioningInitParameters) DeepCopy() *VersioningInitParameters {
	if in == nil {
		return nil
	}
	out := new(VersioningInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VersioningObservation) DeepCopyInto(out *VersioningObservation) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VersioningObservation.
func (in *VersioningObservation) DeepCopy() *VersioningObservation {
	if in == nil {
		return nil
	}
	out := new(VersioningObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VersioningParameters) DeepCopyInto(out *VersioningParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VersioningParameters.
func (in *VersioningParameters) DeepCopy() *VersioningParameters {
	if in == nil {
		return nil
	}
	out := new(VersioningParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WebsiteInitParameters) DeepCopyInto(out *WebsiteInitParameters) {
	*out = *in
	if in.MainPageSuffix != nil {
		in, out := &in.MainPageSuffix, &out.MainPageSuffix
		*out = new(string)
		**out = **in
	}
	if in.NotFoundPage != nil {
		in, out := &in.NotFoundPage, &out.NotFoundPage
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WebsiteInitParameters.
func (in *WebsiteInitParameters) DeepCopy() *WebsiteInitParameters {
	if in == nil {
		return nil
	}
	out := new(WebsiteInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WebsiteObservation) DeepCopyInto(out *WebsiteObservation) {
	*out = *in
	if in.MainPageSuffix != nil {
		in, out := &in.MainPageSuffix, &out.MainPageSuffix
		*out = new(string)
		**out = **in
	}
	if in.NotFoundPage != nil {
		in, out := &in.NotFoundPage, &out.NotFoundPage
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WebsiteObservation.
func (in *WebsiteObservation) DeepCopy() *WebsiteObservation {
	if in == nil {
		return nil
	}
	out := new(WebsiteObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WebsiteParameters) DeepCopyInto(out *WebsiteParameters) {
	*out = *in
	if in.MainPageSuffix != nil {
		in, out := &in.MainPageSuffix, &out.MainPageSuffix
		*out = new(string)
		**out = **in
	}
	if in.NotFoundPage != nil {
		in, out := &in.NotFoundPage, &out.NotFoundPage
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WebsiteParameters.
func (in *WebsiteParameters) DeepCopy() *WebsiteParameters {
	if in == nil {
		return nil
	}
	out := new(WebsiteParameters)
	in.DeepCopyInto(out)
	return out
}
