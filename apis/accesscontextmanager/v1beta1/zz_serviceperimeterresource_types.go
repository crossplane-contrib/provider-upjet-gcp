// SPDX-FileCopyrightText: 2023 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

/*
Copyright 2021 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by upjet. DO NOT EDIT.

package v1beta1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type ServicePerimeterResourceInitParameters struct {

	// The name of the Service Perimeter to add this resource to.
	// +crossplane:generate:reference:type=github.com/upbound/provider-gcp/apis/accesscontextmanager/v1beta1.ServicePerimeter
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractParamPath("name",false)
	PerimeterName *string `json:"perimeterName,omitempty" tf:"perimeter_name,omitempty"`

	// Reference to a ServicePerimeter in accesscontextmanager to populate perimeterName.
	// +kubebuilder:validation:Optional
	PerimeterNameRef *v1.Reference `json:"perimeterNameRef,omitempty" tf:"-"`

	// Selector for a ServicePerimeter in accesscontextmanager to populate perimeterName.
	// +kubebuilder:validation:Optional
	PerimeterNameSelector *v1.Selector `json:"perimeterNameSelector,omitempty" tf:"-"`

	// A GCP resource that is inside of the service perimeter.
	// Currently only projects are allowed.
	// Format: projects/{project_number}
	Resource *string `json:"resource,omitempty" tf:"resource,omitempty"`
}

type ServicePerimeterResourceObservation struct {

	// an identifier for the resource with format {{perimeter_name}}/{{resource}}
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// The name of the Service Perimeter to add this resource to.
	PerimeterName *string `json:"perimeterName,omitempty" tf:"perimeter_name,omitempty"`

	// A GCP resource that is inside of the service perimeter.
	// Currently only projects are allowed.
	// Format: projects/{project_number}
	Resource *string `json:"resource,omitempty" tf:"resource,omitempty"`
}

type ServicePerimeterResourceParameters struct {

	// The name of the Service Perimeter to add this resource to.
	// +crossplane:generate:reference:type=github.com/upbound/provider-gcp/apis/accesscontextmanager/v1beta1.ServicePerimeter
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractParamPath("name",false)
	// +kubebuilder:validation:Optional
	PerimeterName *string `json:"perimeterName,omitempty" tf:"perimeter_name,omitempty"`

	// Reference to a ServicePerimeter in accesscontextmanager to populate perimeterName.
	// +kubebuilder:validation:Optional
	PerimeterNameRef *v1.Reference `json:"perimeterNameRef,omitempty" tf:"-"`

	// Selector for a ServicePerimeter in accesscontextmanager to populate perimeterName.
	// +kubebuilder:validation:Optional
	PerimeterNameSelector *v1.Selector `json:"perimeterNameSelector,omitempty" tf:"-"`

	// A GCP resource that is inside of the service perimeter.
	// Currently only projects are allowed.
	// Format: projects/{project_number}
	// +kubebuilder:validation:Optional
	Resource *string `json:"resource,omitempty" tf:"resource,omitempty"`
}

// ServicePerimeterResourceSpec defines the desired state of ServicePerimeterResource
type ServicePerimeterResourceSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     ServicePerimeterResourceParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider ServicePerimeterResourceInitParameters `json:"initProvider,omitempty"`
}

// ServicePerimeterResourceStatus defines the observed state of ServicePerimeterResource.
type ServicePerimeterResourceStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        ServicePerimeterResourceObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// ServicePerimeterResource is the Schema for the ServicePerimeterResources API. Allows configuring a single GCP resource that should be inside of a service perimeter.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,gcp}
type ServicePerimeterResource struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.resource) || (has(self.initProvider) && has(self.initProvider.resource))",message="spec.forProvider.resource is a required parameter"
	Spec   ServicePerimeterResourceSpec   `json:"spec"`
	Status ServicePerimeterResourceStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// ServicePerimeterResourceList contains a list of ServicePerimeterResources
type ServicePerimeterResourceList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []ServicePerimeterResource `json:"items"`
}

// Repository type metadata.
var (
	ServicePerimeterResource_Kind             = "ServicePerimeterResource"
	ServicePerimeterResource_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: ServicePerimeterResource_Kind}.String()
	ServicePerimeterResource_KindAPIVersion   = ServicePerimeterResource_Kind + "." + CRDGroupVersion.String()
	ServicePerimeterResource_GroupVersionKind = CRDGroupVersion.WithKind(ServicePerimeterResource_Kind)
)

func init() {
	SchemeBuilder.Register(&ServicePerimeterResource{}, &ServicePerimeterResourceList{})
}
