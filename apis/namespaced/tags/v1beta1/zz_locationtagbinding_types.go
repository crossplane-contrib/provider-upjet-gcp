// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1beta1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
	v2 "github.com/crossplane/crossplane-runtime/apis/common/v2"
)

type LocationTagBindingInitParameters struct {

	// Location of the target resource.
	Location *string `json:"location,omitempty" tf:"location,omitempty"`

	// The full resource name of the resource the TagValue is bound to. E.g. //cloudresourcemanager.googleapis.com/projects/123
	Parent *string `json:"parent,omitempty" tf:"parent,omitempty"`

	// The TagValue of the TagBinding. Must be of the form tagValues/456.
	// +crossplane:generate:reference:type=github.com/upbound/provider-gcp/apis/namespaced/tags/v1beta1.TagValue
	// +crossplane:generate:reference:extractor=github.com/upbound/provider-gcp/config/namespaced/common.ExtractResourceID()
	TagValue *string `json:"tagValue,omitempty" tf:"tag_value,omitempty"`

	// Reference to a TagValue in tags to populate tagValue.
	// +kubebuilder:validation:Optional
	TagValueRef *v1.NamespacedReference `json:"tagValueRef,omitempty" tf:"-"`

	// Selector for a TagValue in tags to populate tagValue.
	// +kubebuilder:validation:Optional
	TagValueSelector *v1.NamespacedSelector `json:"tagValueSelector,omitempty" tf:"-"`
}

type LocationTagBindingObservation struct {

	// an identifier for the resource with format {{location}}/{{name}}
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// Location of the target resource.
	Location *string `json:"location,omitempty" tf:"location,omitempty"`

	// The generated id for the TagBinding. This is a string of the form: tagBindings/{parent}/{tag-value-name}
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// The full resource name of the resource the TagValue is bound to. E.g. //cloudresourcemanager.googleapis.com/projects/123
	Parent *string `json:"parent,omitempty" tf:"parent,omitempty"`

	// The TagValue of the TagBinding. Must be of the form tagValues/456.
	TagValue *string `json:"tagValue,omitempty" tf:"tag_value,omitempty"`
}

type LocationTagBindingParameters struct {

	// Location of the target resource.
	// +kubebuilder:validation:Optional
	Location *string `json:"location,omitempty" tf:"location,omitempty"`

	// The full resource name of the resource the TagValue is bound to. E.g. //cloudresourcemanager.googleapis.com/projects/123
	// +kubebuilder:validation:Optional
	Parent *string `json:"parent,omitempty" tf:"parent,omitempty"`

	// The TagValue of the TagBinding. Must be of the form tagValues/456.
	// +crossplane:generate:reference:type=github.com/upbound/provider-gcp/apis/namespaced/tags/v1beta1.TagValue
	// +crossplane:generate:reference:extractor=github.com/upbound/provider-gcp/config/namespaced/common.ExtractResourceID()
	// +kubebuilder:validation:Optional
	TagValue *string `json:"tagValue,omitempty" tf:"tag_value,omitempty"`

	// Reference to a TagValue in tags to populate tagValue.
	// +kubebuilder:validation:Optional
	TagValueRef *v1.NamespacedReference `json:"tagValueRef,omitempty" tf:"-"`

	// Selector for a TagValue in tags to populate tagValue.
	// +kubebuilder:validation:Optional
	TagValueSelector *v1.NamespacedSelector `json:"tagValueSelector,omitempty" tf:"-"`
}

// LocationTagBindingSpec defines the desired state of LocationTagBinding
type LocationTagBindingSpec struct {
	v2.ManagedResourceSpec `json:",inline"`
	ForProvider            LocationTagBindingParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider LocationTagBindingInitParameters `json:"initProvider,omitempty"`
}

// LocationTagBindingStatus defines the observed state of LocationTagBinding.
type LocationTagBindingStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        LocationTagBindingObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// LocationTagBinding is the Schema for the LocationTagBindings API. A LocationTagBinding represents a connection between a TagValue and a non-global cloud resource.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Namespaced,categories={crossplane,managed,gcp}
type LocationTagBinding struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.parent) || (has(self.initProvider) && has(self.initProvider.parent))",message="spec.forProvider.parent is a required parameter"
	Spec   LocationTagBindingSpec   `json:"spec"`
	Status LocationTagBindingStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// LocationTagBindingList contains a list of LocationTagBindings
type LocationTagBindingList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []LocationTagBinding `json:"items"`
}

// Repository type metadata.
var (
	LocationTagBinding_Kind             = "LocationTagBinding"
	LocationTagBinding_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: LocationTagBinding_Kind}.String()
	LocationTagBinding_KindAPIVersion   = LocationTagBinding_Kind + "." + CRDGroupVersion.String()
	LocationTagBinding_GroupVersionKind = CRDGroupVersion.WithKind(LocationTagBinding_Kind)
)

func init() {
	SchemeBuilder.Register(&LocationTagBinding{}, &LocationTagBindingList{})
}
