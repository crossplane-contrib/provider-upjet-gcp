// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1beta1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/v2/apis/common/v1"
	v2 "github.com/crossplane/crossplane-runtime/v2/apis/common/v2"
)

type BanThresholdInitParameters struct {

	// Number of HTTP(S) requests for calculating the threshold.
	Count *float64 `json:"count,omitempty" tf:"count,omitempty"`

	// Interval over which the threshold is computed.
	IntervalSec *float64 `json:"intervalSec,omitempty" tf:"interval_sec,omitempty"`
}

type BanThresholdObservation struct {

	// Number of HTTP(S) requests for calculating the threshold.
	Count *float64 `json:"count,omitempty" tf:"count,omitempty"`

	// Interval over which the threshold is computed.
	IntervalSec *float64 `json:"intervalSec,omitempty" tf:"interval_sec,omitempty"`
}

type BanThresholdParameters struct {

	// Number of HTTP(S) requests for calculating the threshold.
	// +kubebuilder:validation:Optional
	Count *float64 `json:"count,omitempty" tf:"count,omitempty"`

	// Interval over which the threshold is computed.
	// +kubebuilder:validation:Optional
	IntervalSec *float64 `json:"intervalSec,omitempty" tf:"interval_sec,omitempty"`
}

type ConfigInitParameters struct {

	// Source IPv4/IPv6 addresses or CIDR prefixes, in standard text format.
	SrcIPRanges []*string `json:"srcIpRanges,omitempty" tf:"src_ip_ranges,omitempty"`
}

type ConfigObservation struct {

	// Source IPv4/IPv6 addresses or CIDR prefixes, in standard text format.
	SrcIPRanges []*string `json:"srcIpRanges,omitempty" tf:"src_ip_ranges,omitempty"`
}

type ConfigParameters struct {

	// Source IPv4/IPv6 addresses or CIDR prefixes, in standard text format.
	// +kubebuilder:validation:Optional
	SrcIPRanges []*string `json:"srcIpRanges,omitempty" tf:"src_ip_ranges,omitempty"`
}

type DdosProtectionConfigInitParameters struct {

	// Google Cloud Armor offers the following options to help protect systems against DDoS attacks:
	DdosProtection *string `json:"ddosProtection,omitempty" tf:"ddos_protection,omitempty"`
}

type DdosProtectionConfigObservation struct {

	// Google Cloud Armor offers the following options to help protect systems against DDoS attacks:
	DdosProtection *string `json:"ddosProtection,omitempty" tf:"ddos_protection,omitempty"`
}

type DdosProtectionConfigParameters struct {

	// Google Cloud Armor offers the following options to help protect systems against DDoS attacks:
	// +kubebuilder:validation:Optional
	DdosProtection *string `json:"ddosProtection" tf:"ddos_protection,omitempty"`
}

type EnforceOnKeyConfigsInitParameters struct {

	// Rate limit key name applicable only for the following key types:
	// HTTP_HEADER -- Name of the HTTP header whose value is taken as the key value.
	// HTTP_COOKIE -- Name of the HTTP cookie whose value is taken as the key value.
	EnforceOnKeyName *string `json:"enforceOnKeyName,omitempty" tf:"enforce_on_key_name,omitempty"`

	// Determines the key to enforce the rateLimitThreshold on. Possible values are:
	EnforceOnKeyType *string `json:"enforceOnKeyType,omitempty" tf:"enforce_on_key_type,omitempty"`
}

type EnforceOnKeyConfigsObservation struct {

	// Rate limit key name applicable only for the following key types:
	// HTTP_HEADER -- Name of the HTTP header whose value is taken as the key value.
	// HTTP_COOKIE -- Name of the HTTP cookie whose value is taken as the key value.
	EnforceOnKeyName *string `json:"enforceOnKeyName,omitempty" tf:"enforce_on_key_name,omitempty"`

	// Determines the key to enforce the rateLimitThreshold on. Possible values are:
	EnforceOnKeyType *string `json:"enforceOnKeyType,omitempty" tf:"enforce_on_key_type,omitempty"`
}

type EnforceOnKeyConfigsParameters struct {

	// Rate limit key name applicable only for the following key types:
	// HTTP_HEADER -- Name of the HTTP header whose value is taken as the key value.
	// HTTP_COOKIE -- Name of the HTTP cookie whose value is taken as the key value.
	// +kubebuilder:validation:Optional
	EnforceOnKeyName *string `json:"enforceOnKeyName,omitempty" tf:"enforce_on_key_name,omitempty"`

	// Determines the key to enforce the rateLimitThreshold on. Possible values are:
	// +kubebuilder:validation:Optional
	EnforceOnKeyType *string `json:"enforceOnKeyType,omitempty" tf:"enforce_on_key_type,omitempty"`
}

type ExclusionInitParameters struct {

	// Request cookie whose value will be excluded from inspection during preconfigured WAF evaluation.
	// Structure is documented below.
	RequestCookie []RequestCookieInitParameters `json:"requestCookie,omitempty" tf:"request_cookie,omitempty"`

	// Request header whose value will be excluded from inspection during preconfigured WAF evaluation.
	// Structure is documented below.
	RequestHeader []RequestHeaderInitParameters `json:"requestHeader,omitempty" tf:"request_header,omitempty"`

	// Request query parameter whose value will be excluded from inspection during preconfigured WAF evaluation.
	// Note that the parameter can be in the query string or in the POST body.
	// Structure is documented below.
	RequestQueryParam []RequestQueryParamInitParameters `json:"requestQueryParam,omitempty" tf:"request_query_param,omitempty"`

	// Request URI from the request line to be excluded from inspection during preconfigured WAF evaluation.
	// When specifying this field, the query or fragment part should be excluded.
	// Structure is documented below.
	RequestURI []RequestURIInitParameters `json:"requestUri,omitempty" tf:"request_uri,omitempty"`

	// A list of target rule IDs under the WAF rule set to apply the preconfigured WAF exclusion.
	// If omitted, it refers to all the rule IDs under the WAF rule set.
	TargetRuleIds []*string `json:"targetRuleIds,omitempty" tf:"target_rule_ids,omitempty"`

	// Target WAF rule set to apply the preconfigured WAF exclusion.
	TargetRuleSet *string `json:"targetRuleSet,omitempty" tf:"target_rule_set,omitempty"`
}

type ExclusionObservation struct {

	// Request cookie whose value will be excluded from inspection during preconfigured WAF evaluation.
	// Structure is documented below.
	RequestCookie []RequestCookieObservation `json:"requestCookie,omitempty" tf:"request_cookie,omitempty"`

	// Request header whose value will be excluded from inspection during preconfigured WAF evaluation.
	// Structure is documented below.
	RequestHeader []RequestHeaderObservation `json:"requestHeader,omitempty" tf:"request_header,omitempty"`

	// Request query parameter whose value will be excluded from inspection during preconfigured WAF evaluation.
	// Note that the parameter can be in the query string or in the POST body.
	// Structure is documented below.
	RequestQueryParam []RequestQueryParamObservation `json:"requestQueryParam,omitempty" tf:"request_query_param,omitempty"`

	// Request URI from the request line to be excluded from inspection during preconfigured WAF evaluation.
	// When specifying this field, the query or fragment part should be excluded.
	// Structure is documented below.
	RequestURI []RequestURIObservation `json:"requestUri,omitempty" tf:"request_uri,omitempty"`

	// A list of target rule IDs under the WAF rule set to apply the preconfigured WAF exclusion.
	// If omitted, it refers to all the rule IDs under the WAF rule set.
	TargetRuleIds []*string `json:"targetRuleIds,omitempty" tf:"target_rule_ids,omitempty"`

	// Target WAF rule set to apply the preconfigured WAF exclusion.
	TargetRuleSet *string `json:"targetRuleSet,omitempty" tf:"target_rule_set,omitempty"`
}

type ExclusionParameters struct {

	// Request cookie whose value will be excluded from inspection during preconfigured WAF evaluation.
	// Structure is documented below.
	// +kubebuilder:validation:Optional
	RequestCookie []RequestCookieParameters `json:"requestCookie,omitempty" tf:"request_cookie,omitempty"`

	// Request header whose value will be excluded from inspection during preconfigured WAF evaluation.
	// Structure is documented below.
	// +kubebuilder:validation:Optional
	RequestHeader []RequestHeaderParameters `json:"requestHeader,omitempty" tf:"request_header,omitempty"`

	// Request query parameter whose value will be excluded from inspection during preconfigured WAF evaluation.
	// Note that the parameter can be in the query string or in the POST body.
	// Structure is documented below.
	// +kubebuilder:validation:Optional
	RequestQueryParam []RequestQueryParamParameters `json:"requestQueryParam,omitempty" tf:"request_query_param,omitempty"`

	// Request URI from the request line to be excluded from inspection during preconfigured WAF evaluation.
	// When specifying this field, the query or fragment part should be excluded.
	// Structure is documented below.
	// +kubebuilder:validation:Optional
	RequestURI []RequestURIParameters `json:"requestUri,omitempty" tf:"request_uri,omitempty"`

	// A list of target rule IDs under the WAF rule set to apply the preconfigured WAF exclusion.
	// If omitted, it refers to all the rule IDs under the WAF rule set.
	// +kubebuilder:validation:Optional
	TargetRuleIds []*string `json:"targetRuleIds,omitempty" tf:"target_rule_ids,omitempty"`

	// Target WAF rule set to apply the preconfigured WAF exclusion.
	// +kubebuilder:validation:Optional
	TargetRuleSet *string `json:"targetRuleSet" tf:"target_rule_set,omitempty"`
}

type ExprInitParameters struct {

	// Textual representation of an expression in Common Expression Language syntax. The application context of the containing message determines which well-known feature set of CEL is supported.
	Expression *string `json:"expression,omitempty" tf:"expression,omitempty"`
}

type ExprObservation struct {

	// Textual representation of an expression in Common Expression Language syntax. The application context of the containing message determines which well-known feature set of CEL is supported.
	Expression *string `json:"expression,omitempty" tf:"expression,omitempty"`
}

type ExprParameters struct {

	// Textual representation of an expression in Common Expression Language syntax. The application context of the containing message determines which well-known feature set of CEL is supported.
	// +kubebuilder:validation:Optional
	Expression *string `json:"expression" tf:"expression,omitempty"`
}

type NetworkMatchInitParameters struct {

	// Destination IPv4/IPv6 addresses or CIDR prefixes, in standard text format.
	DestIPRanges []*string `json:"destIpRanges,omitempty" tf:"dest_ip_ranges,omitempty"`

	// Destination port numbers for TCP/UDP/SCTP. Each element can be a 16-bit unsigned decimal number (e.g. "80") or range (e.g. "0-1023").
	DestPorts []*string `json:"destPorts,omitempty" tf:"dest_ports,omitempty"`

	// IPv4 protocol / IPv6 next header (after extension headers). Each element can be an 8-bit unsigned decimal number (e.g. "6"), range (e.g. "253-254"), or one of the following protocol names: "tcp", "udp", "icmp", "esp", "ah", "ipip", or "sctp".
	IPProtocols []*string `json:"ipProtocols,omitempty" tf:"ip_protocols,omitempty"`

	// BGP Autonomous System Number associated with the source IP address.
	SrcAsns []*float64 `json:"srcAsns,omitempty" tf:"src_asns,omitempty"`

	// Source IPv4/IPv6 addresses or CIDR prefixes, in standard text format.
	SrcIPRanges []*string `json:"srcIpRanges,omitempty" tf:"src_ip_ranges,omitempty"`

	// Source port numbers for TCP/UDP/SCTP. Each element can be a 16-bit unsigned decimal number (e.g. "80") or range (e.g. "0-1023").
	SrcPorts []*string `json:"srcPorts,omitempty" tf:"src_ports,omitempty"`

	// Two-letter ISO 3166-1 alpha-2 country code associated with the source IP address.
	SrcRegionCodes []*string `json:"srcRegionCodes,omitempty" tf:"src_region_codes,omitempty"`

	// Definitions of user-defined fields for CLOUD_ARMOR_NETWORK policies.
	// A user-defined field consists of up to 4 bytes extracted from a fixed offset in the packet, relative to the IPv4, IPv6, TCP, or UDP header, with an optional mask to select certain bits.
	// Rules may then specify matching values for these fields.
	// Structure is documented below.
	UserDefinedFields []UserDefinedFieldsInitParameters `json:"userDefinedFields,omitempty" tf:"user_defined_fields,omitempty"`
}

type NetworkMatchObservation struct {

	// Destination IPv4/IPv6 addresses or CIDR prefixes, in standard text format.
	DestIPRanges []*string `json:"destIpRanges,omitempty" tf:"dest_ip_ranges,omitempty"`

	// Destination port numbers for TCP/UDP/SCTP. Each element can be a 16-bit unsigned decimal number (e.g. "80") or range (e.g. "0-1023").
	DestPorts []*string `json:"destPorts,omitempty" tf:"dest_ports,omitempty"`

	// IPv4 protocol / IPv6 next header (after extension headers). Each element can be an 8-bit unsigned decimal number (e.g. "6"), range (e.g. "253-254"), or one of the following protocol names: "tcp", "udp", "icmp", "esp", "ah", "ipip", or "sctp".
	IPProtocols []*string `json:"ipProtocols,omitempty" tf:"ip_protocols,omitempty"`

	// BGP Autonomous System Number associated with the source IP address.
	SrcAsns []*float64 `json:"srcAsns,omitempty" tf:"src_asns,omitempty"`

	// Source IPv4/IPv6 addresses or CIDR prefixes, in standard text format.
	SrcIPRanges []*string `json:"srcIpRanges,omitempty" tf:"src_ip_ranges,omitempty"`

	// Source port numbers for TCP/UDP/SCTP. Each element can be a 16-bit unsigned decimal number (e.g. "80") or range (e.g. "0-1023").
	SrcPorts []*string `json:"srcPorts,omitempty" tf:"src_ports,omitempty"`

	// Two-letter ISO 3166-1 alpha-2 country code associated with the source IP address.
	SrcRegionCodes []*string `json:"srcRegionCodes,omitempty" tf:"src_region_codes,omitempty"`

	// Definitions of user-defined fields for CLOUD_ARMOR_NETWORK policies.
	// A user-defined field consists of up to 4 bytes extracted from a fixed offset in the packet, relative to the IPv4, IPv6, TCP, or UDP header, with an optional mask to select certain bits.
	// Rules may then specify matching values for these fields.
	// Structure is documented below.
	UserDefinedFields []UserDefinedFieldsObservation `json:"userDefinedFields,omitempty" tf:"user_defined_fields,omitempty"`
}

type NetworkMatchParameters struct {

	// Destination IPv4/IPv6 addresses or CIDR prefixes, in standard text format.
	// +kubebuilder:validation:Optional
	DestIPRanges []*string `json:"destIpRanges,omitempty" tf:"dest_ip_ranges,omitempty"`

	// Destination port numbers for TCP/UDP/SCTP. Each element can be a 16-bit unsigned decimal number (e.g. "80") or range (e.g. "0-1023").
	// +kubebuilder:validation:Optional
	DestPorts []*string `json:"destPorts,omitempty" tf:"dest_ports,omitempty"`

	// IPv4 protocol / IPv6 next header (after extension headers). Each element can be an 8-bit unsigned decimal number (e.g. "6"), range (e.g. "253-254"), or one of the following protocol names: "tcp", "udp", "icmp", "esp", "ah", "ipip", or "sctp".
	// +kubebuilder:validation:Optional
	IPProtocols []*string `json:"ipProtocols,omitempty" tf:"ip_protocols,omitempty"`

	// BGP Autonomous System Number associated with the source IP address.
	// +kubebuilder:validation:Optional
	SrcAsns []*float64 `json:"srcAsns,omitempty" tf:"src_asns,omitempty"`

	// Source IPv4/IPv6 addresses or CIDR prefixes, in standard text format.
	// +kubebuilder:validation:Optional
	SrcIPRanges []*string `json:"srcIpRanges,omitempty" tf:"src_ip_ranges,omitempty"`

	// Source port numbers for TCP/UDP/SCTP. Each element can be a 16-bit unsigned decimal number (e.g. "80") or range (e.g. "0-1023").
	// +kubebuilder:validation:Optional
	SrcPorts []*string `json:"srcPorts,omitempty" tf:"src_ports,omitempty"`

	// Two-letter ISO 3166-1 alpha-2 country code associated with the source IP address.
	// +kubebuilder:validation:Optional
	SrcRegionCodes []*string `json:"srcRegionCodes,omitempty" tf:"src_region_codes,omitempty"`

	// Definitions of user-defined fields for CLOUD_ARMOR_NETWORK policies.
	// A user-defined field consists of up to 4 bytes extracted from a fixed offset in the packet, relative to the IPv4, IPv6, TCP, or UDP header, with an optional mask to select certain bits.
	// Rules may then specify matching values for these fields.
	// Structure is documented below.
	// +kubebuilder:validation:Optional
	UserDefinedFields []UserDefinedFieldsParameters `json:"userDefinedFields,omitempty" tf:"user_defined_fields,omitempty"`
}

type PreconfiguredWafConfigInitParameters struct {

	// An exclusion to apply during preconfigured WAF evaluation.
	// Structure is documented below.
	Exclusion []ExclusionInitParameters `json:"exclusion,omitempty" tf:"exclusion,omitempty"`
}

type PreconfiguredWafConfigObservation struct {

	// An exclusion to apply during preconfigured WAF evaluation.
	// Structure is documented below.
	Exclusion []ExclusionObservation `json:"exclusion,omitempty" tf:"exclusion,omitempty"`
}

type PreconfiguredWafConfigParameters struct {

	// An exclusion to apply during preconfigured WAF evaluation.
	// Structure is documented below.
	// +kubebuilder:validation:Optional
	Exclusion []ExclusionParameters `json:"exclusion,omitempty" tf:"exclusion,omitempty"`
}

type RateLimitOptionsInitParameters struct {

	// Can only be specified if the action for the rule is "rate_based_ban".
	// If specified, determines the time (in seconds) the traffic will continue to be banned by the rate limit after the rate falls below the threshold.
	BanDurationSec *float64 `json:"banDurationSec,omitempty" tf:"ban_duration_sec,omitempty"`

	// Can only be specified if the action for the rule is "rate_based_ban".
	// If specified, the key will be banned for the configured 'banDurationSec' when the number of requests that exceed the 'rateLimitThreshold' also exceed this 'banThreshold'.
	// Structure is documented below.
	BanThreshold *BanThresholdInitParameters `json:"banThreshold,omitempty" tf:"ban_threshold,omitempty"`

	// Action to take for requests that are under the configured rate limit threshold.
	// Valid option is "allow" only.
	ConformAction *string `json:"conformAction,omitempty" tf:"conform_action,omitempty"`

	// Determines the key to enforce the rateLimitThreshold on. Possible values are:
	EnforceOnKey *string `json:"enforceOnKey,omitempty" tf:"enforce_on_key,omitempty"`

	// If specified, any combination of values of enforceOnKeyType/enforceOnKeyName is treated as the key on which ratelimit threshold/action is enforced.
	// You can specify up to 3 enforceOnKeyConfigs.
	// If enforceOnKeyConfigs is specified, enforceOnKey must not be specified.
	// Structure is documented below.
	EnforceOnKeyConfigs []EnforceOnKeyConfigsInitParameters `json:"enforceOnKeyConfigs,omitempty" tf:"enforce_on_key_configs,omitempty"`

	// Rate limit key name applicable only for the following key types:
	// HTTP_HEADER -- Name of the HTTP header whose value is taken as the key value.
	// HTTP_COOKIE -- Name of the HTTP cookie whose value is taken as the key value.
	EnforceOnKeyName *string `json:"enforceOnKeyName,omitempty" tf:"enforce_on_key_name,omitempty"`

	// Action to take for requests that are above the configured rate limit threshold, to deny with a specified HTTP response code.
	// Valid options are deny(STATUS), where valid values for STATUS are 403, 404, 429, and 502.
	ExceedAction *string `json:"exceedAction,omitempty" tf:"exceed_action,omitempty"`

	// Threshold at which to begin ratelimiting.
	// Structure is documented below.
	RateLimitThreshold *RateLimitThresholdInitParameters `json:"rateLimitThreshold,omitempty" tf:"rate_limit_threshold,omitempty"`
}

type RateLimitOptionsObservation struct {

	// Can only be specified if the action for the rule is "rate_based_ban".
	// If specified, determines the time (in seconds) the traffic will continue to be banned by the rate limit after the rate falls below the threshold.
	BanDurationSec *float64 `json:"banDurationSec,omitempty" tf:"ban_duration_sec,omitempty"`

	// Can only be specified if the action for the rule is "rate_based_ban".
	// If specified, the key will be banned for the configured 'banDurationSec' when the number of requests that exceed the 'rateLimitThreshold' also exceed this 'banThreshold'.
	// Structure is documented below.
	BanThreshold *BanThresholdObservation `json:"banThreshold,omitempty" tf:"ban_threshold,omitempty"`

	// Action to take for requests that are under the configured rate limit threshold.
	// Valid option is "allow" only.
	ConformAction *string `json:"conformAction,omitempty" tf:"conform_action,omitempty"`

	// Determines the key to enforce the rateLimitThreshold on. Possible values are:
	EnforceOnKey *string `json:"enforceOnKey,omitempty" tf:"enforce_on_key,omitempty"`

	// If specified, any combination of values of enforceOnKeyType/enforceOnKeyName is treated as the key on which ratelimit threshold/action is enforced.
	// You can specify up to 3 enforceOnKeyConfigs.
	// If enforceOnKeyConfigs is specified, enforceOnKey must not be specified.
	// Structure is documented below.
	EnforceOnKeyConfigs []EnforceOnKeyConfigsObservation `json:"enforceOnKeyConfigs,omitempty" tf:"enforce_on_key_configs,omitempty"`

	// Rate limit key name applicable only for the following key types:
	// HTTP_HEADER -- Name of the HTTP header whose value is taken as the key value.
	// HTTP_COOKIE -- Name of the HTTP cookie whose value is taken as the key value.
	EnforceOnKeyName *string `json:"enforceOnKeyName,omitempty" tf:"enforce_on_key_name,omitempty"`

	// Action to take for requests that are above the configured rate limit threshold, to deny with a specified HTTP response code.
	// Valid options are deny(STATUS), where valid values for STATUS are 403, 404, 429, and 502.
	ExceedAction *string `json:"exceedAction,omitempty" tf:"exceed_action,omitempty"`

	// Threshold at which to begin ratelimiting.
	// Structure is documented below.
	RateLimitThreshold *RateLimitThresholdObservation `json:"rateLimitThreshold,omitempty" tf:"rate_limit_threshold,omitempty"`
}

type RateLimitOptionsParameters struct {

	// Can only be specified if the action for the rule is "rate_based_ban".
	// If specified, determines the time (in seconds) the traffic will continue to be banned by the rate limit after the rate falls below the threshold.
	// +kubebuilder:validation:Optional
	BanDurationSec *float64 `json:"banDurationSec,omitempty" tf:"ban_duration_sec,omitempty"`

	// Can only be specified if the action for the rule is "rate_based_ban".
	// If specified, the key will be banned for the configured 'banDurationSec' when the number of requests that exceed the 'rateLimitThreshold' also exceed this 'banThreshold'.
	// Structure is documented below.
	// +kubebuilder:validation:Optional
	BanThreshold *BanThresholdParameters `json:"banThreshold,omitempty" tf:"ban_threshold,omitempty"`

	// Action to take for requests that are under the configured rate limit threshold.
	// Valid option is "allow" only.
	// +kubebuilder:validation:Optional
	ConformAction *string `json:"conformAction,omitempty" tf:"conform_action,omitempty"`

	// Determines the key to enforce the rateLimitThreshold on. Possible values are:
	// +kubebuilder:validation:Optional
	EnforceOnKey *string `json:"enforceOnKey,omitempty" tf:"enforce_on_key,omitempty"`

	// If specified, any combination of values of enforceOnKeyType/enforceOnKeyName is treated as the key on which ratelimit threshold/action is enforced.
	// You can specify up to 3 enforceOnKeyConfigs.
	// If enforceOnKeyConfigs is specified, enforceOnKey must not be specified.
	// Structure is documented below.
	// +kubebuilder:validation:Optional
	EnforceOnKeyConfigs []EnforceOnKeyConfigsParameters `json:"enforceOnKeyConfigs,omitempty" tf:"enforce_on_key_configs,omitempty"`

	// Rate limit key name applicable only for the following key types:
	// HTTP_HEADER -- Name of the HTTP header whose value is taken as the key value.
	// HTTP_COOKIE -- Name of the HTTP cookie whose value is taken as the key value.
	// +kubebuilder:validation:Optional
	EnforceOnKeyName *string `json:"enforceOnKeyName,omitempty" tf:"enforce_on_key_name,omitempty"`

	// Action to take for requests that are above the configured rate limit threshold, to deny with a specified HTTP response code.
	// Valid options are deny(STATUS), where valid values for STATUS are 403, 404, 429, and 502.
	// +kubebuilder:validation:Optional
	ExceedAction *string `json:"exceedAction,omitempty" tf:"exceed_action,omitempty"`

	// Threshold at which to begin ratelimiting.
	// Structure is documented below.
	// +kubebuilder:validation:Optional
	RateLimitThreshold *RateLimitThresholdParameters `json:"rateLimitThreshold,omitempty" tf:"rate_limit_threshold,omitempty"`
}

type RateLimitThresholdInitParameters struct {

	// Number of HTTP(S) requests for calculating the threshold.
	Count *float64 `json:"count,omitempty" tf:"count,omitempty"`

	// Interval over which the threshold is computed.
	IntervalSec *float64 `json:"intervalSec,omitempty" tf:"interval_sec,omitempty"`
}

type RateLimitThresholdObservation struct {

	// Number of HTTP(S) requests for calculating the threshold.
	Count *float64 `json:"count,omitempty" tf:"count,omitempty"`

	// Interval over which the threshold is computed.
	IntervalSec *float64 `json:"intervalSec,omitempty" tf:"interval_sec,omitempty"`
}

type RateLimitThresholdParameters struct {

	// Number of HTTP(S) requests for calculating the threshold.
	// +kubebuilder:validation:Optional
	Count *float64 `json:"count,omitempty" tf:"count,omitempty"`

	// Interval over which the threshold is computed.
	// +kubebuilder:validation:Optional
	IntervalSec *float64 `json:"intervalSec,omitempty" tf:"interval_sec,omitempty"`
}

type RegionSecurityPolicyInitParameters struct {

	// Configuration for Google Cloud Armor DDOS Proctection Config.
	// Structure is documented below.
	DdosProtectionConfig *DdosProtectionConfigInitParameters `json:"ddosProtectionConfig,omitempty" tf:"ddos_protection_config,omitempty"`

	// An optional description of this resource. Provide this property when you create the resource.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project *string `json:"project,omitempty" tf:"project,omitempty"`

	// The set of rules that belong to this policy. There must always be a default rule (rule with priority 2147483647 and match "*"). If no rules are provided when creating a security policy, a default rule with action "allow" will be added.
	// Structure is documented below.
	Rules []RulesInitParameters `json:"rules,omitempty" tf:"rules,omitempty"`

	// The type indicates the intended use of the security policy.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	// Definitions of user-defined fields for CLOUD_ARMOR_NETWORK policies.
	// A user-defined field consists of up to 4 bytes extracted from a fixed offset in the packet, relative to the IPv4, IPv6, TCP, or UDP header, with an optional mask to select certain bits.
	// Rules may then specify matching values for these fields.
	// Structure is documented below.
	UserDefinedFields []RegionSecurityPolicyUserDefinedFieldsInitParameters `json:"userDefinedFields,omitempty" tf:"user_defined_fields,omitempty"`
}

type RegionSecurityPolicyObservation struct {

	// Configuration for Google Cloud Armor DDOS Proctection Config.
	// Structure is documented below.
	DdosProtectionConfig *DdosProtectionConfigObservation `json:"ddosProtectionConfig,omitempty" tf:"ddos_protection_config,omitempty"`

	// An optional description of this resource. Provide this property when you create the resource.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// Fingerprint of this resource. This field is used internally during
	// updates of this resource.
	Fingerprint *string `json:"fingerprint,omitempty" tf:"fingerprint,omitempty"`

	// an identifier for the resource with format projects/{{project}}/regions/{{region}}/securityPolicies/{{name}}
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// The unique identifier for the resource. This identifier is defined by the server.
	PolicyID *string `json:"policyId,omitempty" tf:"policy_id,omitempty"`

	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project *string `json:"project,omitempty" tf:"project,omitempty"`

	// The Region in which the created Region Security Policy should reside.
	// If it is not provided, the provider region is used.
	Region *string `json:"region,omitempty" tf:"region,omitempty"`

	// The set of rules that belong to this policy. There must always be a default rule (rule with priority 2147483647 and match "*"). If no rules are provided when creating a security policy, a default rule with action "allow" will be added.
	// Structure is documented below.
	Rules []RulesObservation `json:"rules,omitempty" tf:"rules,omitempty"`

	// Server-defined URL for the resource.
	SelfLink *string `json:"selfLink,omitempty" tf:"self_link,omitempty"`

	// Server-defined URL for this resource with the resource id.
	SelfLinkWithPolicyID *string `json:"selfLinkWithPolicyId,omitempty" tf:"self_link_with_policy_id,omitempty"`

	// The type indicates the intended use of the security policy.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	// Definitions of user-defined fields for CLOUD_ARMOR_NETWORK policies.
	// A user-defined field consists of up to 4 bytes extracted from a fixed offset in the packet, relative to the IPv4, IPv6, TCP, or UDP header, with an optional mask to select certain bits.
	// Rules may then specify matching values for these fields.
	// Structure is documented below.
	UserDefinedFields []RegionSecurityPolicyUserDefinedFieldsObservation `json:"userDefinedFields,omitempty" tf:"user_defined_fields,omitempty"`
}

type RegionSecurityPolicyParameters struct {

	// Configuration for Google Cloud Armor DDOS Proctection Config.
	// Structure is documented below.
	// +kubebuilder:validation:Optional
	DdosProtectionConfig *DdosProtectionConfigParameters `json:"ddosProtectionConfig,omitempty" tf:"ddos_protection_config,omitempty"`

	// An optional description of this resource. Provide this property when you create the resource.
	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	// +kubebuilder:validation:Optional
	Project *string `json:"project,omitempty" tf:"project,omitempty"`

	// The Region in which the created Region Security Policy should reside.
	// If it is not provided, the provider region is used.
	// +kubebuilder:validation:Required
	Region *string `json:"region" tf:"region,omitempty"`

	// The set of rules that belong to this policy. There must always be a default rule (rule with priority 2147483647 and match "*"). If no rules are provided when creating a security policy, a default rule with action "allow" will be added.
	// Structure is documented below.
	// +kubebuilder:validation:Optional
	Rules []RulesParameters `json:"rules,omitempty" tf:"rules,omitempty"`

	// The type indicates the intended use of the security policy.
	// +kubebuilder:validation:Optional
	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	// Definitions of user-defined fields for CLOUD_ARMOR_NETWORK policies.
	// A user-defined field consists of up to 4 bytes extracted from a fixed offset in the packet, relative to the IPv4, IPv6, TCP, or UDP header, with an optional mask to select certain bits.
	// Rules may then specify matching values for these fields.
	// Structure is documented below.
	// +kubebuilder:validation:Optional
	UserDefinedFields []RegionSecurityPolicyUserDefinedFieldsParameters `json:"userDefinedFields,omitempty" tf:"user_defined_fields,omitempty"`
}

type RegionSecurityPolicyUserDefinedFieldsInitParameters struct {

	// The base relative to which 'offset' is measured. Possible values are:
	Base *string `json:"base,omitempty" tf:"base,omitempty"`

	// If specified, apply this mask (bitwise AND) to the field to ignore bits before matching.
	// Encoded as a hexadecimal number (starting with "0x").
	// The last byte of the field (in network byte order) corresponds to the least significant byte of the mask.
	Mask *string `json:"mask,omitempty" tf:"mask,omitempty"`

	// The name of this field. Must be unique within the policy.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Offset of the first byte of the field (in network byte order) relative to 'base'.
	Offset *float64 `json:"offset,omitempty" tf:"offset,omitempty"`

	// Size of the field in bytes. Valid values: 1-4.
	Size *float64 `json:"size,omitempty" tf:"size,omitempty"`
}

type RegionSecurityPolicyUserDefinedFieldsObservation struct {

	// The base relative to which 'offset' is measured. Possible values are:
	Base *string `json:"base,omitempty" tf:"base,omitempty"`

	// If specified, apply this mask (bitwise AND) to the field to ignore bits before matching.
	// Encoded as a hexadecimal number (starting with "0x").
	// The last byte of the field (in network byte order) corresponds to the least significant byte of the mask.
	Mask *string `json:"mask,omitempty" tf:"mask,omitempty"`

	// The name of this field. Must be unique within the policy.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Offset of the first byte of the field (in network byte order) relative to 'base'.
	Offset *float64 `json:"offset,omitempty" tf:"offset,omitempty"`

	// Size of the field in bytes. Valid values: 1-4.
	Size *float64 `json:"size,omitempty" tf:"size,omitempty"`
}

type RegionSecurityPolicyUserDefinedFieldsParameters struct {

	// The base relative to which 'offset' is measured. Possible values are:
	// +kubebuilder:validation:Optional
	Base *string `json:"base" tf:"base,omitempty"`

	// If specified, apply this mask (bitwise AND) to the field to ignore bits before matching.
	// Encoded as a hexadecimal number (starting with "0x").
	// The last byte of the field (in network byte order) corresponds to the least significant byte of the mask.
	// +kubebuilder:validation:Optional
	Mask *string `json:"mask,omitempty" tf:"mask,omitempty"`

	// The name of this field. Must be unique within the policy.
	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Offset of the first byte of the field (in network byte order) relative to 'base'.
	// +kubebuilder:validation:Optional
	Offset *float64 `json:"offset,omitempty" tf:"offset,omitempty"`

	// Size of the field in bytes. Valid values: 1-4.
	// +kubebuilder:validation:Optional
	Size *float64 `json:"size,omitempty" tf:"size,omitempty"`
}

type RequestCookieInitParameters struct {

	// You can specify an exact match or a partial match by using a field operator and a field value.
	// Available options:
	// EQUALS: The operator matches if the field value equals the specified value.
	// STARTS_WITH: The operator matches if the field value starts with the specified value.
	// ENDS_WITH: The operator matches if the field value ends with the specified value.
	// CONTAINS: The operator matches if the field value contains the specified value.
	// EQUALS_ANY: The operator matches if the field value is any value.
	// Possible values are: CONTAINS, ENDS_WITH, EQUALS, EQUALS_ANY, STARTS_WITH.
	Operator *string `json:"operator,omitempty" tf:"operator,omitempty"`

	// A request field matching the specified value will be excluded from inspection during preconfigured WAF evaluation.
	// The field value must be given if the field operator is not EQUALS_ANY, and cannot be given if the field operator is EQUALS_ANY.
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type RequestCookieObservation struct {

	// You can specify an exact match or a partial match by using a field operator and a field value.
	// Available options:
	// EQUALS: The operator matches if the field value equals the specified value.
	// STARTS_WITH: The operator matches if the field value starts with the specified value.
	// ENDS_WITH: The operator matches if the field value ends with the specified value.
	// CONTAINS: The operator matches if the field value contains the specified value.
	// EQUALS_ANY: The operator matches if the field value is any value.
	// Possible values are: CONTAINS, ENDS_WITH, EQUALS, EQUALS_ANY, STARTS_WITH.
	Operator *string `json:"operator,omitempty" tf:"operator,omitempty"`

	// A request field matching the specified value will be excluded from inspection during preconfigured WAF evaluation.
	// The field value must be given if the field operator is not EQUALS_ANY, and cannot be given if the field operator is EQUALS_ANY.
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type RequestCookieParameters struct {

	// You can specify an exact match or a partial match by using a field operator and a field value.
	// Available options:
	// EQUALS: The operator matches if the field value equals the specified value.
	// STARTS_WITH: The operator matches if the field value starts with the specified value.
	// ENDS_WITH: The operator matches if the field value ends with the specified value.
	// CONTAINS: The operator matches if the field value contains the specified value.
	// EQUALS_ANY: The operator matches if the field value is any value.
	// Possible values are: CONTAINS, ENDS_WITH, EQUALS, EQUALS_ANY, STARTS_WITH.
	// +kubebuilder:validation:Optional
	Operator *string `json:"operator" tf:"operator,omitempty"`

	// A request field matching the specified value will be excluded from inspection during preconfigured WAF evaluation.
	// The field value must be given if the field operator is not EQUALS_ANY, and cannot be given if the field operator is EQUALS_ANY.
	// +kubebuilder:validation:Optional
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type RequestHeaderInitParameters struct {

	// You can specify an exact match or a partial match by using a field operator and a field value.
	// Available options:
	// EQUALS: The operator matches if the field value equals the specified value.
	// STARTS_WITH: The operator matches if the field value starts with the specified value.
	// ENDS_WITH: The operator matches if the field value ends with the specified value.
	// CONTAINS: The operator matches if the field value contains the specified value.
	// EQUALS_ANY: The operator matches if the field value is any value.
	// Possible values are: CONTAINS, ENDS_WITH, EQUALS, EQUALS_ANY, STARTS_WITH.
	Operator *string `json:"operator,omitempty" tf:"operator,omitempty"`

	// A request field matching the specified value will be excluded from inspection during preconfigured WAF evaluation.
	// The field value must be given if the field operator is not EQUALS_ANY, and cannot be given if the field operator is EQUALS_ANY.
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type RequestHeaderObservation struct {

	// You can specify an exact match or a partial match by using a field operator and a field value.
	// Available options:
	// EQUALS: The operator matches if the field value equals the specified value.
	// STARTS_WITH: The operator matches if the field value starts with the specified value.
	// ENDS_WITH: The operator matches if the field value ends with the specified value.
	// CONTAINS: The operator matches if the field value contains the specified value.
	// EQUALS_ANY: The operator matches if the field value is any value.
	// Possible values are: CONTAINS, ENDS_WITH, EQUALS, EQUALS_ANY, STARTS_WITH.
	Operator *string `json:"operator,omitempty" tf:"operator,omitempty"`

	// A request field matching the specified value will be excluded from inspection during preconfigured WAF evaluation.
	// The field value must be given if the field operator is not EQUALS_ANY, and cannot be given if the field operator is EQUALS_ANY.
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type RequestHeaderParameters struct {

	// You can specify an exact match or a partial match by using a field operator and a field value.
	// Available options:
	// EQUALS: The operator matches if the field value equals the specified value.
	// STARTS_WITH: The operator matches if the field value starts with the specified value.
	// ENDS_WITH: The operator matches if the field value ends with the specified value.
	// CONTAINS: The operator matches if the field value contains the specified value.
	// EQUALS_ANY: The operator matches if the field value is any value.
	// Possible values are: CONTAINS, ENDS_WITH, EQUALS, EQUALS_ANY, STARTS_WITH.
	// +kubebuilder:validation:Optional
	Operator *string `json:"operator" tf:"operator,omitempty"`

	// A request field matching the specified value will be excluded from inspection during preconfigured WAF evaluation.
	// The field value must be given if the field operator is not EQUALS_ANY, and cannot be given if the field operator is EQUALS_ANY.
	// +kubebuilder:validation:Optional
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type RequestQueryParamInitParameters struct {

	// You can specify an exact match or a partial match by using a field operator and a field value.
	// Available options:
	// EQUALS: The operator matches if the field value equals the specified value.
	// STARTS_WITH: The operator matches if the field value starts with the specified value.
	// ENDS_WITH: The operator matches if the field value ends with the specified value.
	// CONTAINS: The operator matches if the field value contains the specified value.
	// EQUALS_ANY: The operator matches if the field value is any value.
	// Possible values are: CONTAINS, ENDS_WITH, EQUALS, EQUALS_ANY, STARTS_WITH.
	Operator *string `json:"operator,omitempty" tf:"operator,omitempty"`

	// A request field matching the specified value will be excluded from inspection during preconfigured WAF evaluation.
	// The field value must be given if the field operator is not EQUALS_ANY, and cannot be given if the field operator is EQUALS_ANY.
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type RequestQueryParamObservation struct {

	// You can specify an exact match or a partial match by using a field operator and a field value.
	// Available options:
	// EQUALS: The operator matches if the field value equals the specified value.
	// STARTS_WITH: The operator matches if the field value starts with the specified value.
	// ENDS_WITH: The operator matches if the field value ends with the specified value.
	// CONTAINS: The operator matches if the field value contains the specified value.
	// EQUALS_ANY: The operator matches if the field value is any value.
	// Possible values are: CONTAINS, ENDS_WITH, EQUALS, EQUALS_ANY, STARTS_WITH.
	Operator *string `json:"operator,omitempty" tf:"operator,omitempty"`

	// A request field matching the specified value will be excluded from inspection during preconfigured WAF evaluation.
	// The field value must be given if the field operator is not EQUALS_ANY, and cannot be given if the field operator is EQUALS_ANY.
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type RequestQueryParamParameters struct {

	// You can specify an exact match or a partial match by using a field operator and a field value.
	// Available options:
	// EQUALS: The operator matches if the field value equals the specified value.
	// STARTS_WITH: The operator matches if the field value starts with the specified value.
	// ENDS_WITH: The operator matches if the field value ends with the specified value.
	// CONTAINS: The operator matches if the field value contains the specified value.
	// EQUALS_ANY: The operator matches if the field value is any value.
	// Possible values are: CONTAINS, ENDS_WITH, EQUALS, EQUALS_ANY, STARTS_WITH.
	// +kubebuilder:validation:Optional
	Operator *string `json:"operator" tf:"operator,omitempty"`

	// A request field matching the specified value will be excluded from inspection during preconfigured WAF evaluation.
	// The field value must be given if the field operator is not EQUALS_ANY, and cannot be given if the field operator is EQUALS_ANY.
	// +kubebuilder:validation:Optional
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type RequestURIInitParameters struct {

	// You can specify an exact match or a partial match by using a field operator and a field value.
	// Available options:
	// EQUALS: The operator matches if the field value equals the specified value.
	// STARTS_WITH: The operator matches if the field value starts with the specified value.
	// ENDS_WITH: The operator matches if the field value ends with the specified value.
	// CONTAINS: The operator matches if the field value contains the specified value.
	// EQUALS_ANY: The operator matches if the field value is any value.
	// Possible values are: CONTAINS, ENDS_WITH, EQUALS, EQUALS_ANY, STARTS_WITH.
	Operator *string `json:"operator,omitempty" tf:"operator,omitempty"`

	// A request field matching the specified value will be excluded from inspection during preconfigured WAF evaluation.
	// The field value must be given if the field operator is not EQUALS_ANY, and cannot be given if the field operator is EQUALS_ANY.
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type RequestURIObservation struct {

	// You can specify an exact match or a partial match by using a field operator and a field value.
	// Available options:
	// EQUALS: The operator matches if the field value equals the specified value.
	// STARTS_WITH: The operator matches if the field value starts with the specified value.
	// ENDS_WITH: The operator matches if the field value ends with the specified value.
	// CONTAINS: The operator matches if the field value contains the specified value.
	// EQUALS_ANY: The operator matches if the field value is any value.
	// Possible values are: CONTAINS, ENDS_WITH, EQUALS, EQUALS_ANY, STARTS_WITH.
	Operator *string `json:"operator,omitempty" tf:"operator,omitempty"`

	// A request field matching the specified value will be excluded from inspection during preconfigured WAF evaluation.
	// The field value must be given if the field operator is not EQUALS_ANY, and cannot be given if the field operator is EQUALS_ANY.
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type RequestURIParameters struct {

	// You can specify an exact match or a partial match by using a field operator and a field value.
	// Available options:
	// EQUALS: The operator matches if the field value equals the specified value.
	// STARTS_WITH: The operator matches if the field value starts with the specified value.
	// ENDS_WITH: The operator matches if the field value ends with the specified value.
	// CONTAINS: The operator matches if the field value contains the specified value.
	// EQUALS_ANY: The operator matches if the field value is any value.
	// Possible values are: CONTAINS, ENDS_WITH, EQUALS, EQUALS_ANY, STARTS_WITH.
	// +kubebuilder:validation:Optional
	Operator *string `json:"operator" tf:"operator,omitempty"`

	// A request field matching the specified value will be excluded from inspection during preconfigured WAF evaluation.
	// The field value must be given if the field operator is not EQUALS_ANY, and cannot be given if the field operator is EQUALS_ANY.
	// +kubebuilder:validation:Optional
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type RulesInitParameters struct {

	// The Action to perform when the rule is matched. The following are the valid actions:
	Action *string `json:"action,omitempty" tf:"action,omitempty"`

	// An optional description of this resource. Provide this property when you create the resource.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// A match condition that incoming traffic is evaluated against.
	// If it evaluates to true, the corresponding 'action' is enforced.
	// Structure is documented below.
	Match *RulesMatchInitParameters `json:"match,omitempty" tf:"match,omitempty"`

	// A match condition that incoming packets are evaluated against for CLOUD_ARMOR_NETWORK security policies. If it matches, the corresponding 'action' is enforced.
	// The match criteria for a rule consists of built-in match fields (like 'srcIpRanges') and potentially multiple user-defined match fields ('userDefinedFields').
	// Field values may be extracted directly from the packet or derived from it (e.g. 'srcRegionCodes'). Some fields may not be present in every packet (e.g. 'srcPorts'). A user-defined field is only present if the base header is found in the packet and the entire field is in bounds.
	// Each match field may specify which values can match it, listing one or more ranges, prefixes, or exact values that are considered a match for the field. A field value must be present in order to match a specified match field. If no match values are specified for a match field, then any field value is considered to match it, and it's not required to be present. For strings specifying '*' is also equivalent to match all.
	// For a packet to match a rule, all specified match fields must match the corresponding field values derived from the packet.
	// Example:
	// networkMatch: srcIpRanges: - "192.0.2.0/24" - "198.51.100.0/24" userDefinedFields: - name: "ipv4_fragment_offset" values: - "1-0x1fff"
	// The above match condition matches packets with a source IP in 192.0.2.0/24 or 198.51.100.0/24 and a user-defined field named "ipv4_fragment_offset" with a value between 1 and 0x1fff inclusive
	// Structure is documented below.
	NetworkMatch *NetworkMatchInitParameters `json:"networkMatch,omitempty" tf:"network_match,omitempty"`

	// Preconfigured WAF configuration to be applied for the rule.
	// If the rule does not evaluate preconfigured WAF rules, i.e., if evaluatePreconfiguredWaf() is not used, this field will have no effect.
	// Structure is documented below.
	PreconfiguredWafConfig *PreconfiguredWafConfigInitParameters `json:"preconfiguredWafConfig,omitempty" tf:"preconfigured_waf_config,omitempty"`

	// If set to true, the specified action is not enforced.
	Preview *bool `json:"preview,omitempty" tf:"preview,omitempty"`

	// An integer indicating the priority of a rule in the list.
	// The priority must be a positive value between 0 and 2147483647.
	// Rules are evaluated from highest to lowest priority where 0 is the highest priority and 2147483647 is the lowest priority.
	Priority *float64 `json:"priority,omitempty" tf:"priority,omitempty"`

	// Must be specified if the action is "rate_based_ban" or "throttle". Cannot be specified for any other actions.
	// Structure is documented below.
	RateLimitOptions *RateLimitOptionsInitParameters `json:"rateLimitOptions,omitempty" tf:"rate_limit_options,omitempty"`
}

type RulesMatchInitParameters struct {

	// The configuration options available when specifying versionedExpr.
	// This field must be specified if versionedExpr is specified and cannot be specified if versionedExpr is not specified.
	// Structure is documented below.
	Config *ConfigInitParameters `json:"config,omitempty" tf:"config,omitempty"`

	// User defined CEVAL expression. A CEVAL expression is used to specify match criteria such as origin.ip, source.region_code and contents in the request header. See Sample expressions for examples.
	// Structure is documented below.
	Expr *ExprInitParameters `json:"expr,omitempty" tf:"expr,omitempty"`

	// Preconfigured versioned expression. If this field is specified, config must also be specified.
	// Available preconfigured expressions along with their requirements are: SRC_IPS_V1 - must specify the corresponding srcIpRange field in config.
	// Possible values are: SRC_IPS_V1.
	VersionedExpr *string `json:"versionedExpr,omitempty" tf:"versioned_expr,omitempty"`
}

type RulesMatchObservation struct {

	// The configuration options available when specifying versionedExpr.
	// This field must be specified if versionedExpr is specified and cannot be specified if versionedExpr is not specified.
	// Structure is documented below.
	Config *ConfigObservation `json:"config,omitempty" tf:"config,omitempty"`

	// User defined CEVAL expression. A CEVAL expression is used to specify match criteria such as origin.ip, source.region_code and contents in the request header. See Sample expressions for examples.
	// Structure is documented below.
	Expr *ExprObservation `json:"expr,omitempty" tf:"expr,omitempty"`

	// Preconfigured versioned expression. If this field is specified, config must also be specified.
	// Available preconfigured expressions along with their requirements are: SRC_IPS_V1 - must specify the corresponding srcIpRange field in config.
	// Possible values are: SRC_IPS_V1.
	VersionedExpr *string `json:"versionedExpr,omitempty" tf:"versioned_expr,omitempty"`
}

type RulesMatchParameters struct {

	// The configuration options available when specifying versionedExpr.
	// This field must be specified if versionedExpr is specified and cannot be specified if versionedExpr is not specified.
	// Structure is documented below.
	// +kubebuilder:validation:Optional
	Config *ConfigParameters `json:"config,omitempty" tf:"config,omitempty"`

	// User defined CEVAL expression. A CEVAL expression is used to specify match criteria such as origin.ip, source.region_code and contents in the request header. See Sample expressions for examples.
	// Structure is documented below.
	// +kubebuilder:validation:Optional
	Expr *ExprParameters `json:"expr,omitempty" tf:"expr,omitempty"`

	// Preconfigured versioned expression. If this field is specified, config must also be specified.
	// Available preconfigured expressions along with their requirements are: SRC_IPS_V1 - must specify the corresponding srcIpRange field in config.
	// Possible values are: SRC_IPS_V1.
	// +kubebuilder:validation:Optional
	VersionedExpr *string `json:"versionedExpr,omitempty" tf:"versioned_expr,omitempty"`
}

type RulesObservation struct {

	// The Action to perform when the rule is matched. The following are the valid actions:
	Action *string `json:"action,omitempty" tf:"action,omitempty"`

	// An optional description of this resource. Provide this property when you create the resource.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// A match condition that incoming traffic is evaluated against.
	// If it evaluates to true, the corresponding 'action' is enforced.
	// Structure is documented below.
	Match *RulesMatchObservation `json:"match,omitempty" tf:"match,omitempty"`

	// A match condition that incoming packets are evaluated against for CLOUD_ARMOR_NETWORK security policies. If it matches, the corresponding 'action' is enforced.
	// The match criteria for a rule consists of built-in match fields (like 'srcIpRanges') and potentially multiple user-defined match fields ('userDefinedFields').
	// Field values may be extracted directly from the packet or derived from it (e.g. 'srcRegionCodes'). Some fields may not be present in every packet (e.g. 'srcPorts'). A user-defined field is only present if the base header is found in the packet and the entire field is in bounds.
	// Each match field may specify which values can match it, listing one or more ranges, prefixes, or exact values that are considered a match for the field. A field value must be present in order to match a specified match field. If no match values are specified for a match field, then any field value is considered to match it, and it's not required to be present. For strings specifying '*' is also equivalent to match all.
	// For a packet to match a rule, all specified match fields must match the corresponding field values derived from the packet.
	// Example:
	// networkMatch: srcIpRanges: - "192.0.2.0/24" - "198.51.100.0/24" userDefinedFields: - name: "ipv4_fragment_offset" values: - "1-0x1fff"
	// The above match condition matches packets with a source IP in 192.0.2.0/24 or 198.51.100.0/24 and a user-defined field named "ipv4_fragment_offset" with a value between 1 and 0x1fff inclusive
	// Structure is documented below.
	NetworkMatch *NetworkMatchObservation `json:"networkMatch,omitempty" tf:"network_match,omitempty"`

	// Preconfigured WAF configuration to be applied for the rule.
	// If the rule does not evaluate preconfigured WAF rules, i.e., if evaluatePreconfiguredWaf() is not used, this field will have no effect.
	// Structure is documented below.
	PreconfiguredWafConfig *PreconfiguredWafConfigObservation `json:"preconfiguredWafConfig,omitempty" tf:"preconfigured_waf_config,omitempty"`

	// If set to true, the specified action is not enforced.
	Preview *bool `json:"preview,omitempty" tf:"preview,omitempty"`

	// An integer indicating the priority of a rule in the list.
	// The priority must be a positive value between 0 and 2147483647.
	// Rules are evaluated from highest to lowest priority where 0 is the highest priority and 2147483647 is the lowest priority.
	Priority *float64 `json:"priority,omitempty" tf:"priority,omitempty"`

	// Must be specified if the action is "rate_based_ban" or "throttle". Cannot be specified for any other actions.
	// Structure is documented below.
	RateLimitOptions *RateLimitOptionsObservation `json:"rateLimitOptions,omitempty" tf:"rate_limit_options,omitempty"`
}

type RulesParameters struct {

	// The Action to perform when the rule is matched. The following are the valid actions:
	// +kubebuilder:validation:Optional
	Action *string `json:"action" tf:"action,omitempty"`

	// An optional description of this resource. Provide this property when you create the resource.
	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// A match condition that incoming traffic is evaluated against.
	// If it evaluates to true, the corresponding 'action' is enforced.
	// Structure is documented below.
	// +kubebuilder:validation:Optional
	Match *RulesMatchParameters `json:"match,omitempty" tf:"match,omitempty"`

	// A match condition that incoming packets are evaluated against for CLOUD_ARMOR_NETWORK security policies. If it matches, the corresponding 'action' is enforced.
	// The match criteria for a rule consists of built-in match fields (like 'srcIpRanges') and potentially multiple user-defined match fields ('userDefinedFields').
	// Field values may be extracted directly from the packet or derived from it (e.g. 'srcRegionCodes'). Some fields may not be present in every packet (e.g. 'srcPorts'). A user-defined field is only present if the base header is found in the packet and the entire field is in bounds.
	// Each match field may specify which values can match it, listing one or more ranges, prefixes, or exact values that are considered a match for the field. A field value must be present in order to match a specified match field. If no match values are specified for a match field, then any field value is considered to match it, and it's not required to be present. For strings specifying '*' is also equivalent to match all.
	// For a packet to match a rule, all specified match fields must match the corresponding field values derived from the packet.
	// Example:
	// networkMatch: srcIpRanges: - "192.0.2.0/24" - "198.51.100.0/24" userDefinedFields: - name: "ipv4_fragment_offset" values: - "1-0x1fff"
	// The above match condition matches packets with a source IP in 192.0.2.0/24 or 198.51.100.0/24 and a user-defined field named "ipv4_fragment_offset" with a value between 1 and 0x1fff inclusive
	// Structure is documented below.
	// +kubebuilder:validation:Optional
	NetworkMatch *NetworkMatchParameters `json:"networkMatch,omitempty" tf:"network_match,omitempty"`

	// Preconfigured WAF configuration to be applied for the rule.
	// If the rule does not evaluate preconfigured WAF rules, i.e., if evaluatePreconfiguredWaf() is not used, this field will have no effect.
	// Structure is documented below.
	// +kubebuilder:validation:Optional
	PreconfiguredWafConfig *PreconfiguredWafConfigParameters `json:"preconfiguredWafConfig,omitempty" tf:"preconfigured_waf_config,omitempty"`

	// If set to true, the specified action is not enforced.
	// +kubebuilder:validation:Optional
	Preview *bool `json:"preview,omitempty" tf:"preview,omitempty"`

	// An integer indicating the priority of a rule in the list.
	// The priority must be a positive value between 0 and 2147483647.
	// Rules are evaluated from highest to lowest priority where 0 is the highest priority and 2147483647 is the lowest priority.
	// +kubebuilder:validation:Optional
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// Must be specified if the action is "rate_based_ban" or "throttle". Cannot be specified for any other actions.
	// Structure is documented below.
	// +kubebuilder:validation:Optional
	RateLimitOptions *RateLimitOptionsParameters `json:"rateLimitOptions,omitempty" tf:"rate_limit_options,omitempty"`
}

type UserDefinedFieldsInitParameters struct {

	// The name of this field. Must be unique within the policy.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Matching values of the field. Each element can be a 32-bit unsigned decimal or hexadecimal (starting with "0x") number (e.g. "64") or range (e.g. "0x400-0x7ff").
	Values []*string `json:"values,omitempty" tf:"values,omitempty"`
}

type UserDefinedFieldsObservation struct {

	// The name of this field. Must be unique within the policy.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Matching values of the field. Each element can be a 32-bit unsigned decimal or hexadecimal (starting with "0x") number (e.g. "64") or range (e.g. "0x400-0x7ff").
	Values []*string `json:"values,omitempty" tf:"values,omitempty"`
}

type UserDefinedFieldsParameters struct {

	// The name of this field. Must be unique within the policy.
	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Matching values of the field. Each element can be a 32-bit unsigned decimal or hexadecimal (starting with "0x") number (e.g. "64") or range (e.g. "0x400-0x7ff").
	// +kubebuilder:validation:Optional
	Values []*string `json:"values,omitempty" tf:"values,omitempty"`
}

// RegionSecurityPolicySpec defines the desired state of RegionSecurityPolicy
type RegionSecurityPolicySpec struct {
	v2.ManagedResourceSpec `json:",inline"`
	ForProvider            RegionSecurityPolicyParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider RegionSecurityPolicyInitParameters `json:"initProvider,omitempty"`
}

// RegionSecurityPolicyStatus defines the observed state of RegionSecurityPolicy.
type RegionSecurityPolicyStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        RegionSecurityPolicyObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// RegionSecurityPolicy is the Schema for the RegionSecurityPolicys API. Represents a Region Cloud Armor Security Policy resource.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Namespaced,categories={crossplane,managed,gcp}
type RegionSecurityPolicy struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              RegionSecurityPolicySpec   `json:"spec"`
	Status            RegionSecurityPolicyStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// RegionSecurityPolicyList contains a list of RegionSecurityPolicys
type RegionSecurityPolicyList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []RegionSecurityPolicy `json:"items"`
}

// Repository type metadata.
var (
	RegionSecurityPolicy_Kind             = "RegionSecurityPolicy"
	RegionSecurityPolicy_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: RegionSecurityPolicy_Kind}.String()
	RegionSecurityPolicy_KindAPIVersion   = RegionSecurityPolicy_Kind + "." + CRDGroupVersion.String()
	RegionSecurityPolicy_GroupVersionKind = CRDGroupVersion.WithKind(RegionSecurityPolicy_Kind)
)

func init() {
	SchemeBuilder.Register(&RegionSecurityPolicy{}, &RegionSecurityPolicyList{})
}
