// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1beta1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/v2/apis/common/v1"
	v2 "github.com/crossplane/crossplane-runtime/v2/apis/common/v2"
)

type BackupBackupPlanInitParameters struct {

	// Defines the configuration of Backups created via this BackupPlan.
	// Structure is documented below.
	BackupConfig *BackupConfigInitParameters `json:"backupConfig,omitempty" tf:"backup_config,omitempty"`

	// Defines a schedule for automatic Backup creation via this BackupPlan.
	// Structure is documented below.
	BackupSchedule *BackupScheduleInitParameters `json:"backupSchedule,omitempty" tf:"backup_schedule,omitempty"`

	// The source cluster from which Backups will be created via this BackupPlan.
	// +crossplane:generate:reference:type=github.com/upbound/provider-gcp/apis/namespaced/container/v1beta1.Cluster
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/v2/pkg/resource.ExtractResourceID()
	Cluster *string `json:"cluster,omitempty" tf:"cluster,omitempty"`

	// Reference to a Cluster in container to populate cluster.
	// +kubebuilder:validation:Optional
	ClusterRef *v1.NamespacedReference `json:"clusterRef,omitempty" tf:"-"`

	// Selector for a Cluster in container to populate cluster.
	// +kubebuilder:validation:Optional
	ClusterSelector *v1.NamespacedSelector `json:"clusterSelector,omitempty" tf:"-"`

	// This flag indicates whether this BackupPlan has been deactivated.
	// Setting this field to True locks the BackupPlan such that no further updates will be allowed
	// (except deletes), including the deactivated field itself. It also prevents any new Backups
	// from being created via this BackupPlan (including scheduled Backups).
	Deactivated *bool `json:"deactivated,omitempty" tf:"deactivated,omitempty"`

	// User specified descriptive string for this BackupPlan.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// Description: A set of custom labels supplied by the user.
	// A list of key->value pairs.
	// Example: { "name": "wrench", "mass": "1.3kg", "count": "3" }.
	// +mapType=granular
	Labels map[string]*string `json:"labels,omitempty" tf:"labels,omitempty"`

	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project *string `json:"project,omitempty" tf:"project,omitempty"`

	// RetentionPolicy governs lifecycle of Backups created under this plan.
	// Structure is documented below.
	RetentionPolicy *RetentionPolicyInitParameters `json:"retentionPolicy,omitempty" tf:"retention_policy,omitempty"`
}

type BackupBackupPlanObservation struct {

	// Defines the configuration of Backups created via this BackupPlan.
	// Structure is documented below.
	BackupConfig *BackupConfigObservation `json:"backupConfig,omitempty" tf:"backup_config,omitempty"`

	// Defines a schedule for automatic Backup creation via this BackupPlan.
	// Structure is documented below.
	BackupSchedule *BackupScheduleObservation `json:"backupSchedule,omitempty" tf:"backup_schedule,omitempty"`

	// The source cluster from which Backups will be created via this BackupPlan.
	Cluster *string `json:"cluster,omitempty" tf:"cluster,omitempty"`

	// This flag indicates whether this BackupPlan has been deactivated.
	// Setting this field to True locks the BackupPlan such that no further updates will be allowed
	// (except deletes), including the deactivated field itself. It also prevents any new Backups
	// from being created via this BackupPlan (including scheduled Backups).
	Deactivated *bool `json:"deactivated,omitempty" tf:"deactivated,omitempty"`

	// User specified descriptive string for this BackupPlan.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// for all of the labels present on the resource.
	// +mapType=granular
	EffectiveLabels map[string]*string `json:"effectiveLabels,omitempty" tf:"effective_labels,omitempty"`

	// etag is used for optimistic concurrency control as a way to help prevent simultaneous
	// updates of a backup plan from overwriting each other. It is strongly suggested that
	// systems make use of the 'etag' in the read-modify-write cycle to perform BackupPlan updates
	// in order to avoid race conditions: An etag is returned in the response to backupPlans.get,
	// and systems are expected to put that etag in the request to backupPlans.patch or
	// backupPlans.delete to ensure that their change will be applied to the same version of the resource.
	Etag *string `json:"etag,omitempty" tf:"etag,omitempty"`

	// an identifier for the resource with format projects/{{project}}/locations/{{location}}/backupPlans/{{name}}
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// Description: A set of custom labels supplied by the user.
	// A list of key->value pairs.
	// Example: { "name": "wrench", "mass": "1.3kg", "count": "3" }.
	// +mapType=granular
	Labels map[string]*string `json:"labels,omitempty" tf:"labels,omitempty"`

	// The region of the Backup Plan.
	Location *string `json:"location,omitempty" tf:"location,omitempty"`

	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project *string `json:"project,omitempty" tf:"project,omitempty"`

	// The number of Kubernetes Pods backed up in the last successful Backup created via this BackupPlan.
	ProtectedPodCount *float64 `json:"protectedPodCount,omitempty" tf:"protected_pod_count,omitempty"`

	// RetentionPolicy governs lifecycle of Backups created under this plan.
	// Structure is documented below.
	RetentionPolicy *RetentionPolicyObservation `json:"retentionPolicy,omitempty" tf:"retention_policy,omitempty"`

	// The State of the BackupPlan.
	State *string `json:"state,omitempty" tf:"state,omitempty"`

	// Detailed description of why BackupPlan is in its current state.
	StateReason *string `json:"stateReason,omitempty" tf:"state_reason,omitempty"`

	// The combination of labels configured directly on the resource
	// and default labels configured on the provider.
	// +mapType=granular
	TerraformLabels map[string]*string `json:"terraformLabels,omitempty" tf:"terraform_labels,omitempty"`

	// Server generated, unique identifier of UUID format.
	UID *string `json:"uid,omitempty" tf:"uid,omitempty"`
}

type BackupBackupPlanParameters struct {

	// Defines the configuration of Backups created via this BackupPlan.
	// Structure is documented below.
	// +kubebuilder:validation:Optional
	BackupConfig *BackupConfigParameters `json:"backupConfig,omitempty" tf:"backup_config,omitempty"`

	// Defines a schedule for automatic Backup creation via this BackupPlan.
	// Structure is documented below.
	// +kubebuilder:validation:Optional
	BackupSchedule *BackupScheduleParameters `json:"backupSchedule,omitempty" tf:"backup_schedule,omitempty"`

	// The source cluster from which Backups will be created via this BackupPlan.
	// +crossplane:generate:reference:type=github.com/upbound/provider-gcp/apis/namespaced/container/v1beta1.Cluster
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/v2/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	Cluster *string `json:"cluster,omitempty" tf:"cluster,omitempty"`

	// Reference to a Cluster in container to populate cluster.
	// +kubebuilder:validation:Optional
	ClusterRef *v1.NamespacedReference `json:"clusterRef,omitempty" tf:"-"`

	// Selector for a Cluster in container to populate cluster.
	// +kubebuilder:validation:Optional
	ClusterSelector *v1.NamespacedSelector `json:"clusterSelector,omitempty" tf:"-"`

	// This flag indicates whether this BackupPlan has been deactivated.
	// Setting this field to True locks the BackupPlan such that no further updates will be allowed
	// (except deletes), including the deactivated field itself. It also prevents any new Backups
	// from being created via this BackupPlan (including scheduled Backups).
	// +kubebuilder:validation:Optional
	Deactivated *bool `json:"deactivated,omitempty" tf:"deactivated,omitempty"`

	// User specified descriptive string for this BackupPlan.
	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// Description: A set of custom labels supplied by the user.
	// A list of key->value pairs.
	// Example: { "name": "wrench", "mass": "1.3kg", "count": "3" }.
	// +kubebuilder:validation:Optional
	// +mapType=granular
	Labels map[string]*string `json:"labels,omitempty" tf:"labels,omitempty"`

	// The region of the Backup Plan.
	// +kubebuilder:validation:Required
	Location *string `json:"location" tf:"location,omitempty"`

	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	// +kubebuilder:validation:Optional
	Project *string `json:"project,omitempty" tf:"project,omitempty"`

	// RetentionPolicy governs lifecycle of Backups created under this plan.
	// Structure is documented below.
	// +kubebuilder:validation:Optional
	RetentionPolicy *RetentionPolicyParameters `json:"retentionPolicy,omitempty" tf:"retention_policy,omitempty"`
}

type BackupConfigInitParameters struct {

	// If True, include all namespaced resources.
	AllNamespaces *bool `json:"allNamespaces,omitempty" tf:"all_namespaces,omitempty"`

	// This defines a customer managed encryption key that will be used to encrypt the "config"
	// portion (the Kubernetes resources) of Backups created via this plan.
	// Structure is documented below.
	EncryptionKey *EncryptionKeyInitParameters `json:"encryptionKey,omitempty" tf:"encryption_key,omitempty"`

	// This flag specifies whether Kubernetes Secret resources should be included
	// when they fall into the scope of Backups.
	IncludeSecrets *bool `json:"includeSecrets,omitempty" tf:"include_secrets,omitempty"`

	// This flag specifies whether volume data should be backed up when PVCs are
	// included in the scope of a Backup.
	IncludeVolumeData *bool `json:"includeVolumeData,omitempty" tf:"include_volume_data,omitempty"`

	// This flag specifies whether Backups will not fail when
	// Backup for GKE detects Kubernetes configuration that is
	// non-standard or requires additional setup to restore.
	PermissiveMode *bool `json:"permissiveMode,omitempty" tf:"permissive_mode,omitempty"`

	// A list of namespaced Kubernetes Resources.
	// Structure is documented below.
	SelectedApplications *SelectedApplicationsInitParameters `json:"selectedApplications,omitempty" tf:"selected_applications,omitempty"`

	// If set, include just the resources in the listed namespaces.
	// Structure is documented below.
	SelectedNamespaces *SelectedNamespacesInitParameters `json:"selectedNamespaces,omitempty" tf:"selected_namespaces,omitempty"`
}

type BackupConfigObservation struct {

	// If True, include all namespaced resources.
	AllNamespaces *bool `json:"allNamespaces,omitempty" tf:"all_namespaces,omitempty"`

	// This defines a customer managed encryption key that will be used to encrypt the "config"
	// portion (the Kubernetes resources) of Backups created via this plan.
	// Structure is documented below.
	EncryptionKey *EncryptionKeyObservation `json:"encryptionKey,omitempty" tf:"encryption_key,omitempty"`

	// This flag specifies whether Kubernetes Secret resources should be included
	// when they fall into the scope of Backups.
	IncludeSecrets *bool `json:"includeSecrets,omitempty" tf:"include_secrets,omitempty"`

	// This flag specifies whether volume data should be backed up when PVCs are
	// included in the scope of a Backup.
	IncludeVolumeData *bool `json:"includeVolumeData,omitempty" tf:"include_volume_data,omitempty"`

	// This flag specifies whether Backups will not fail when
	// Backup for GKE detects Kubernetes configuration that is
	// non-standard or requires additional setup to restore.
	PermissiveMode *bool `json:"permissiveMode,omitempty" tf:"permissive_mode,omitempty"`

	// A list of namespaced Kubernetes Resources.
	// Structure is documented below.
	SelectedApplications *SelectedApplicationsObservation `json:"selectedApplications,omitempty" tf:"selected_applications,omitempty"`

	// If set, include just the resources in the listed namespaces.
	// Structure is documented below.
	SelectedNamespaces *SelectedNamespacesObservation `json:"selectedNamespaces,omitempty" tf:"selected_namespaces,omitempty"`
}

type BackupConfigParameters struct {

	// If True, include all namespaced resources.
	// +kubebuilder:validation:Optional
	AllNamespaces *bool `json:"allNamespaces,omitempty" tf:"all_namespaces,omitempty"`

	// This defines a customer managed encryption key that will be used to encrypt the "config"
	// portion (the Kubernetes resources) of Backups created via this plan.
	// Structure is documented below.
	// +kubebuilder:validation:Optional
	EncryptionKey *EncryptionKeyParameters `json:"encryptionKey,omitempty" tf:"encryption_key,omitempty"`

	// This flag specifies whether Kubernetes Secret resources should be included
	// when they fall into the scope of Backups.
	// +kubebuilder:validation:Optional
	IncludeSecrets *bool `json:"includeSecrets,omitempty" tf:"include_secrets,omitempty"`

	// This flag specifies whether volume data should be backed up when PVCs are
	// included in the scope of a Backup.
	// +kubebuilder:validation:Optional
	IncludeVolumeData *bool `json:"includeVolumeData,omitempty" tf:"include_volume_data,omitempty"`

	// This flag specifies whether Backups will not fail when
	// Backup for GKE detects Kubernetes configuration that is
	// non-standard or requires additional setup to restore.
	// +kubebuilder:validation:Optional
	PermissiveMode *bool `json:"permissiveMode,omitempty" tf:"permissive_mode,omitempty"`

	// A list of namespaced Kubernetes Resources.
	// Structure is documented below.
	// +kubebuilder:validation:Optional
	SelectedApplications *SelectedApplicationsParameters `json:"selectedApplications,omitempty" tf:"selected_applications,omitempty"`

	// If set, include just the resources in the listed namespaces.
	// Structure is documented below.
	// +kubebuilder:validation:Optional
	SelectedNamespaces *SelectedNamespacesParameters `json:"selectedNamespaces,omitempty" tf:"selected_namespaces,omitempty"`
}

type BackupScheduleInitParameters struct {

	// A standard cron string that defines a repeating schedule for
	// creating Backups via this BackupPlan.
	// This is mutually exclusive with the rpoConfig field since at most one
	// schedule can be defined for a BackupPlan.
	// If this is defined, then backupRetainDays must also be defined.
	CronSchedule *string `json:"cronSchedule,omitempty" tf:"cron_schedule,omitempty"`

	// This flag denotes whether automatic Backup creation is paused for this BackupPlan.
	Paused *bool `json:"paused,omitempty" tf:"paused,omitempty"`

	// Defines the RPO schedule configuration for this BackupPlan. This is mutually
	// exclusive with the cronSchedule field since at most one schedule can be defined
	// for a BackupPLan. If this is defined, then backupRetainDays must also be defined.
	// Structure is documented below.
	RpoConfig *RpoConfigInitParameters `json:"rpoConfig,omitempty" tf:"rpo_config,omitempty"`
}

type BackupScheduleObservation struct {

	// A standard cron string that defines a repeating schedule for
	// creating Backups via this BackupPlan.
	// This is mutually exclusive with the rpoConfig field since at most one
	// schedule can be defined for a BackupPlan.
	// If this is defined, then backupRetainDays must also be defined.
	CronSchedule *string `json:"cronSchedule,omitempty" tf:"cron_schedule,omitempty"`

	// This flag denotes whether automatic Backup creation is paused for this BackupPlan.
	Paused *bool `json:"paused,omitempty" tf:"paused,omitempty"`

	// Defines the RPO schedule configuration for this BackupPlan. This is mutually
	// exclusive with the cronSchedule field since at most one schedule can be defined
	// for a BackupPLan. If this is defined, then backupRetainDays must also be defined.
	// Structure is documented below.
	RpoConfig *RpoConfigObservation `json:"rpoConfig,omitempty" tf:"rpo_config,omitempty"`
}

type BackupScheduleParameters struct {

	// A standard cron string that defines a repeating schedule for
	// creating Backups via this BackupPlan.
	// This is mutually exclusive with the rpoConfig field since at most one
	// schedule can be defined for a BackupPlan.
	// If this is defined, then backupRetainDays must also be defined.
	// +kubebuilder:validation:Optional
	CronSchedule *string `json:"cronSchedule,omitempty" tf:"cron_schedule,omitempty"`

	// This flag denotes whether automatic Backup creation is paused for this BackupPlan.
	// +kubebuilder:validation:Optional
	Paused *bool `json:"paused,omitempty" tf:"paused,omitempty"`

	// Defines the RPO schedule configuration for this BackupPlan. This is mutually
	// exclusive with the cronSchedule field since at most one schedule can be defined
	// for a BackupPLan. If this is defined, then backupRetainDays must also be defined.
	// Structure is documented below.
	// +kubebuilder:validation:Optional
	RpoConfig *RpoConfigParameters `json:"rpoConfig,omitempty" tf:"rpo_config,omitempty"`
}

type DaysOfWeekInitParameters struct {

	// The exclusion window occurs on these days of each week in UTC.
	// Only one of singleOccurrenceDate, daily and daysOfWeek may be set.
	// Structure is documented below.
	DaysOfWeek []*string `json:"daysOfWeek,omitempty" tf:"days_of_week,omitempty"`
}

type DaysOfWeekObservation struct {

	// The exclusion window occurs on these days of each week in UTC.
	// Only one of singleOccurrenceDate, daily and daysOfWeek may be set.
	// Structure is documented below.
	DaysOfWeek []*string `json:"daysOfWeek,omitempty" tf:"days_of_week,omitempty"`
}

type DaysOfWeekParameters struct {

	// The exclusion window occurs on these days of each week in UTC.
	// Only one of singleOccurrenceDate, daily and daysOfWeek may be set.
	// Structure is documented below.
	// +kubebuilder:validation:Optional
	DaysOfWeek []*string `json:"daysOfWeek,omitempty" tf:"days_of_week,omitempty"`
}

type EncryptionKeyInitParameters struct {

	// Google Cloud KMS encryption key. Format: projects//locations//keyRings//cryptoKeys/
	// +crossplane:generate:reference:type=github.com/upbound/provider-gcp/apis/namespaced/kms/v1beta1.CryptoKey
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/v2/pkg/resource.ExtractResourceID()
	GCPKMSEncryptionKey *string `json:"gcpKmsEncryptionKey,omitempty" tf:"gcp_kms_encryption_key,omitempty"`

	// Reference to a CryptoKey in kms to populate gcpKmsEncryptionKey.
	// +kubebuilder:validation:Optional
	GCPKMSEncryptionKeyRef *v1.NamespacedReference `json:"gcpKmsEncryptionKeyRef,omitempty" tf:"-"`

	// Selector for a CryptoKey in kms to populate gcpKmsEncryptionKey.
	// +kubebuilder:validation:Optional
	GCPKMSEncryptionKeySelector *v1.NamespacedSelector `json:"gcpKmsEncryptionKeySelector,omitempty" tf:"-"`
}

type EncryptionKeyObservation struct {

	// Google Cloud KMS encryption key. Format: projects//locations//keyRings//cryptoKeys/
	GCPKMSEncryptionKey *string `json:"gcpKmsEncryptionKey,omitempty" tf:"gcp_kms_encryption_key,omitempty"`
}

type EncryptionKeyParameters struct {

	// Google Cloud KMS encryption key. Format: projects//locations//keyRings//cryptoKeys/
	// +crossplane:generate:reference:type=github.com/upbound/provider-gcp/apis/namespaced/kms/v1beta1.CryptoKey
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/v2/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	GCPKMSEncryptionKey *string `json:"gcpKmsEncryptionKey,omitempty" tf:"gcp_kms_encryption_key,omitempty"`

	// Reference to a CryptoKey in kms to populate gcpKmsEncryptionKey.
	// +kubebuilder:validation:Optional
	GCPKMSEncryptionKeyRef *v1.NamespacedReference `json:"gcpKmsEncryptionKeyRef,omitempty" tf:"-"`

	// Selector for a CryptoKey in kms to populate gcpKmsEncryptionKey.
	// +kubebuilder:validation:Optional
	GCPKMSEncryptionKeySelector *v1.NamespacedSelector `json:"gcpKmsEncryptionKeySelector,omitempty" tf:"-"`
}

type ExclusionWindowsInitParameters struct {

	// The exclusion window occurs every day if set to "True".
	// Specifying this field to "False" is an error.
	// Only one of singleOccurrenceDate, daily and daysOfWeek may be set.
	Daily *bool `json:"daily,omitempty" tf:"daily,omitempty"`

	// The exclusion window occurs on these days of each week in UTC.
	// Only one of singleOccurrenceDate, daily and daysOfWeek may be set.
	// Structure is documented below.
	DaysOfWeek *DaysOfWeekInitParameters `json:"daysOfWeek,omitempty" tf:"days_of_week,omitempty"`

	// Specifies duration of the window in seconds with up to nine fractional digits,
	// terminated by 's'. Example: "3.5s". Restrictions for duration based on the
	// recurrence type to allow some time for backup to happen:
	Duration *string `json:"duration,omitempty" tf:"duration,omitempty"`

	// No recurrence. The exclusion window occurs only once and on this date in UTC.
	// Only one of singleOccurrenceDate, daily and daysOfWeek may be set.
	// Structure is documented below.
	SingleOccurrenceDate *SingleOccurrenceDateInitParameters `json:"singleOccurrenceDate,omitempty" tf:"single_occurrence_date,omitempty"`

	// Specifies the start time of the window using time of the day in UTC.
	// Structure is documented below.
	StartTime *StartTimeInitParameters `json:"startTime,omitempty" tf:"start_time,omitempty"`
}

type ExclusionWindowsObservation struct {

	// The exclusion window occurs every day if set to "True".
	// Specifying this field to "False" is an error.
	// Only one of singleOccurrenceDate, daily and daysOfWeek may be set.
	Daily *bool `json:"daily,omitempty" tf:"daily,omitempty"`

	// The exclusion window occurs on these days of each week in UTC.
	// Only one of singleOccurrenceDate, daily and daysOfWeek may be set.
	// Structure is documented below.
	DaysOfWeek *DaysOfWeekObservation `json:"daysOfWeek,omitempty" tf:"days_of_week,omitempty"`

	// Specifies duration of the window in seconds with up to nine fractional digits,
	// terminated by 's'. Example: "3.5s". Restrictions for duration based on the
	// recurrence type to allow some time for backup to happen:
	Duration *string `json:"duration,omitempty" tf:"duration,omitempty"`

	// No recurrence. The exclusion window occurs only once and on this date in UTC.
	// Only one of singleOccurrenceDate, daily and daysOfWeek may be set.
	// Structure is documented below.
	SingleOccurrenceDate *SingleOccurrenceDateObservation `json:"singleOccurrenceDate,omitempty" tf:"single_occurrence_date,omitempty"`

	// Specifies the start time of the window using time of the day in UTC.
	// Structure is documented below.
	StartTime *StartTimeObservation `json:"startTime,omitempty" tf:"start_time,omitempty"`
}

type ExclusionWindowsParameters struct {

	// The exclusion window occurs every day if set to "True".
	// Specifying this field to "False" is an error.
	// Only one of singleOccurrenceDate, daily and daysOfWeek may be set.
	// +kubebuilder:validation:Optional
	Daily *bool `json:"daily,omitempty" tf:"daily,omitempty"`

	// The exclusion window occurs on these days of each week in UTC.
	// Only one of singleOccurrenceDate, daily and daysOfWeek may be set.
	// Structure is documented below.
	// +kubebuilder:validation:Optional
	DaysOfWeek *DaysOfWeekParameters `json:"daysOfWeek,omitempty" tf:"days_of_week,omitempty"`

	// Specifies duration of the window in seconds with up to nine fractional digits,
	// terminated by 's'. Example: "3.5s". Restrictions for duration based on the
	// recurrence type to allow some time for backup to happen:
	// +kubebuilder:validation:Optional
	Duration *string `json:"duration" tf:"duration,omitempty"`

	// No recurrence. The exclusion window occurs only once and on this date in UTC.
	// Only one of singleOccurrenceDate, daily and daysOfWeek may be set.
	// Structure is documented below.
	// +kubebuilder:validation:Optional
	SingleOccurrenceDate *SingleOccurrenceDateParameters `json:"singleOccurrenceDate,omitempty" tf:"single_occurrence_date,omitempty"`

	// Specifies the start time of the window using time of the day in UTC.
	// Structure is documented below.
	// +kubebuilder:validation:Optional
	StartTime *StartTimeParameters `json:"startTime" tf:"start_time,omitempty"`
}

type NamespacedNamesInitParameters struct {

	// The name of a Kubernetes Resource.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// The namespace of a Kubernetes Resource.
	Namespace *string `json:"namespace,omitempty" tf:"namespace,omitempty"`
}

type NamespacedNamesObservation struct {

	// The name of a Kubernetes Resource.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// The namespace of a Kubernetes Resource.
	Namespace *string `json:"namespace,omitempty" tf:"namespace,omitempty"`
}

type NamespacedNamesParameters struct {

	// The name of a Kubernetes Resource.
	// +kubebuilder:validation:Optional
	Name *string `json:"name" tf:"name,omitempty"`

	// The namespace of a Kubernetes Resource.
	// +kubebuilder:validation:Optional
	Namespace *string `json:"namespace" tf:"namespace,omitempty"`
}

type RetentionPolicyInitParameters struct {

	// Minimum age for a Backup created via this BackupPlan (in days).
	// Must be an integer value between 0-90 (inclusive).
	// A Backup created under this BackupPlan will not be deletable
	// until it reaches Backup's (create time + backup_delete_lock_days).
	// Updating this field of a BackupPlan does not affect existing Backups.
	// Backups created after a successful update will inherit this new value.
	BackupDeleteLockDays *float64 `json:"backupDeleteLockDays,omitempty" tf:"backup_delete_lock_days,omitempty"`

	// The default maximum age of a Backup created via this BackupPlan.
	// This field MUST be an integer value >= 0 and <= 365. If specified,
	// a Backup created under this BackupPlan will be automatically deleted
	// after its age reaches (createTime + backupRetainDays).
	// If not specified, Backups created under this BackupPlan will NOT be
	// subject to automatic deletion. Updating this field does NOT affect
	// existing Backups under it. Backups created AFTER a successful update
	// will automatically pick up the new value.
	// NOTE: backupRetainDays must be >= backupDeleteLockDays.
	// If cronSchedule is defined, then this must be <= 360 * the creation interval.
	// If rpo_config is defined, then this must be
	// <= 360 * targetRpoMinutes/(1440minutes/day)
	BackupRetainDays *float64 `json:"backupRetainDays,omitempty" tf:"backup_retain_days,omitempty"`

	// This flag denotes whether the retention policy of this BackupPlan is locked.
	// If set to True, no further update is allowed on this policy, including
	// the locked field itself.
	Locked *bool `json:"locked,omitempty" tf:"locked,omitempty"`
}

type RetentionPolicyObservation struct {

	// Minimum age for a Backup created via this BackupPlan (in days).
	// Must be an integer value between 0-90 (inclusive).
	// A Backup created under this BackupPlan will not be deletable
	// until it reaches Backup's (create time + backup_delete_lock_days).
	// Updating this field of a BackupPlan does not affect existing Backups.
	// Backups created after a successful update will inherit this new value.
	BackupDeleteLockDays *float64 `json:"backupDeleteLockDays,omitempty" tf:"backup_delete_lock_days,omitempty"`

	// The default maximum age of a Backup created via this BackupPlan.
	// This field MUST be an integer value >= 0 and <= 365. If specified,
	// a Backup created under this BackupPlan will be automatically deleted
	// after its age reaches (createTime + backupRetainDays).
	// If not specified, Backups created under this BackupPlan will NOT be
	// subject to automatic deletion. Updating this field does NOT affect
	// existing Backups under it. Backups created AFTER a successful update
	// will automatically pick up the new value.
	// NOTE: backupRetainDays must be >= backupDeleteLockDays.
	// If cronSchedule is defined, then this must be <= 360 * the creation interval.
	// If rpo_config is defined, then this must be
	// <= 360 * targetRpoMinutes/(1440minutes/day)
	BackupRetainDays *float64 `json:"backupRetainDays,omitempty" tf:"backup_retain_days,omitempty"`

	// This flag denotes whether the retention policy of this BackupPlan is locked.
	// If set to True, no further update is allowed on this policy, including
	// the locked field itself.
	Locked *bool `json:"locked,omitempty" tf:"locked,omitempty"`
}

type RetentionPolicyParameters struct {

	// Minimum age for a Backup created via this BackupPlan (in days).
	// Must be an integer value between 0-90 (inclusive).
	// A Backup created under this BackupPlan will not be deletable
	// until it reaches Backup's (create time + backup_delete_lock_days).
	// Updating this field of a BackupPlan does not affect existing Backups.
	// Backups created after a successful update will inherit this new value.
	// +kubebuilder:validation:Optional
	BackupDeleteLockDays *float64 `json:"backupDeleteLockDays,omitempty" tf:"backup_delete_lock_days,omitempty"`

	// The default maximum age of a Backup created via this BackupPlan.
	// This field MUST be an integer value >= 0 and <= 365. If specified,
	// a Backup created under this BackupPlan will be automatically deleted
	// after its age reaches (createTime + backupRetainDays).
	// If not specified, Backups created under this BackupPlan will NOT be
	// subject to automatic deletion. Updating this field does NOT affect
	// existing Backups under it. Backups created AFTER a successful update
	// will automatically pick up the new value.
	// NOTE: backupRetainDays must be >= backupDeleteLockDays.
	// If cronSchedule is defined, then this must be <= 360 * the creation interval.
	// If rpo_config is defined, then this must be
	// <= 360 * targetRpoMinutes/(1440minutes/day)
	// +kubebuilder:validation:Optional
	BackupRetainDays *float64 `json:"backupRetainDays,omitempty" tf:"backup_retain_days,omitempty"`

	// This flag denotes whether the retention policy of this BackupPlan is locked.
	// If set to True, no further update is allowed on this policy, including
	// the locked field itself.
	// +kubebuilder:validation:Optional
	Locked *bool `json:"locked,omitempty" tf:"locked,omitempty"`
}

type RpoConfigInitParameters struct {

	// User specified time windows during which backup can NOT happen for this BackupPlan.
	// Backups should start and finish outside of any given exclusion window. Note: backup
	// jobs will be scheduled to start and finish outside the duration of the window as
	// much as possible, but running jobs will not get canceled when it runs into the window.
	// All the time and date values in exclusionWindows entry in the API are in UTC. We
	// only allow <=1 recurrence (daily or weekly) exclusion window for a BackupPlan while no
	// restriction on number of single occurrence windows.
	// Structure is documented below.
	ExclusionWindows []ExclusionWindowsInitParameters `json:"exclusionWindows,omitempty" tf:"exclusion_windows,omitempty"`

	// Defines the target RPO for the BackupPlan in minutes, which means the target
	// maximum data loss in time that is acceptable for this BackupPlan. This must be
	// at least 60, i.e., 1 hour, and at most 86400, i.e., 60 days.
	TargetRpoMinutes *float64 `json:"targetRpoMinutes,omitempty" tf:"target_rpo_minutes,omitempty"`
}

type RpoConfigObservation struct {

	// User specified time windows during which backup can NOT happen for this BackupPlan.
	// Backups should start and finish outside of any given exclusion window. Note: backup
	// jobs will be scheduled to start and finish outside the duration of the window as
	// much as possible, but running jobs will not get canceled when it runs into the window.
	// All the time and date values in exclusionWindows entry in the API are in UTC. We
	// only allow <=1 recurrence (daily or weekly) exclusion window for a BackupPlan while no
	// restriction on number of single occurrence windows.
	// Structure is documented below.
	ExclusionWindows []ExclusionWindowsObservation `json:"exclusionWindows,omitempty" tf:"exclusion_windows,omitempty"`

	// Defines the target RPO for the BackupPlan in minutes, which means the target
	// maximum data loss in time that is acceptable for this BackupPlan. This must be
	// at least 60, i.e., 1 hour, and at most 86400, i.e., 60 days.
	TargetRpoMinutes *float64 `json:"targetRpoMinutes,omitempty" tf:"target_rpo_minutes,omitempty"`
}

type RpoConfigParameters struct {

	// User specified time windows during which backup can NOT happen for this BackupPlan.
	// Backups should start and finish outside of any given exclusion window. Note: backup
	// jobs will be scheduled to start and finish outside the duration of the window as
	// much as possible, but running jobs will not get canceled when it runs into the window.
	// All the time and date values in exclusionWindows entry in the API are in UTC. We
	// only allow <=1 recurrence (daily or weekly) exclusion window for a BackupPlan while no
	// restriction on number of single occurrence windows.
	// Structure is documented below.
	// +kubebuilder:validation:Optional
	ExclusionWindows []ExclusionWindowsParameters `json:"exclusionWindows,omitempty" tf:"exclusion_windows,omitempty"`

	// Defines the target RPO for the BackupPlan in minutes, which means the target
	// maximum data loss in time that is acceptable for this BackupPlan. This must be
	// at least 60, i.e., 1 hour, and at most 86400, i.e., 60 days.
	// +kubebuilder:validation:Optional
	TargetRpoMinutes *float64 `json:"targetRpoMinutes" tf:"target_rpo_minutes,omitempty"`
}

type SelectedApplicationsInitParameters struct {

	// A list of namespaced Kubernetes resources.
	// Structure is documented below.
	NamespacedNames []NamespacedNamesInitParameters `json:"namespacedNames,omitempty" tf:"namespaced_names,omitempty"`
}

type SelectedApplicationsObservation struct {

	// A list of namespaced Kubernetes resources.
	// Structure is documented below.
	NamespacedNames []NamespacedNamesObservation `json:"namespacedNames,omitempty" tf:"namespaced_names,omitempty"`
}

type SelectedApplicationsParameters struct {

	// A list of namespaced Kubernetes resources.
	// Structure is documented below.
	// +kubebuilder:validation:Optional
	NamespacedNames []NamespacedNamesParameters `json:"namespacedNames" tf:"namespaced_names,omitempty"`
}

type SelectedNamespacesInitParameters struct {

	// A list of Kubernetes Namespaces.
	Namespaces []*string `json:"namespaces,omitempty" tf:"namespaces,omitempty"`
}

type SelectedNamespacesObservation struct {

	// A list of Kubernetes Namespaces.
	Namespaces []*string `json:"namespaces,omitempty" tf:"namespaces,omitempty"`
}

type SelectedNamespacesParameters struct {

	// A list of Kubernetes Namespaces.
	// +kubebuilder:validation:Optional
	Namespaces []*string `json:"namespaces" tf:"namespaces,omitempty"`
}

type SingleOccurrenceDateInitParameters struct {

	// Day of a month.
	Day *float64 `json:"day,omitempty" tf:"day,omitempty"`

	// Month of a year.
	Month *float64 `json:"month,omitempty" tf:"month,omitempty"`

	// Year of the date.
	Year *float64 `json:"year,omitempty" tf:"year,omitempty"`
}

type SingleOccurrenceDateObservation struct {

	// Day of a month.
	Day *float64 `json:"day,omitempty" tf:"day,omitempty"`

	// Month of a year.
	Month *float64 `json:"month,omitempty" tf:"month,omitempty"`

	// Year of the date.
	Year *float64 `json:"year,omitempty" tf:"year,omitempty"`
}

type SingleOccurrenceDateParameters struct {

	// Day of a month.
	// +kubebuilder:validation:Optional
	Day *float64 `json:"day,omitempty" tf:"day,omitempty"`

	// Month of a year.
	// +kubebuilder:validation:Optional
	Month *float64 `json:"month,omitempty" tf:"month,omitempty"`

	// Year of the date.
	// +kubebuilder:validation:Optional
	Year *float64 `json:"year,omitempty" tf:"year,omitempty"`
}

type StartTimeInitParameters struct {

	// Hours of day in 24 hour format.
	Hours *float64 `json:"hours,omitempty" tf:"hours,omitempty"`

	// Minutes of hour of day.
	Minutes *float64 `json:"minutes,omitempty" tf:"minutes,omitempty"`

	// Fractions of seconds in nanoseconds.
	Nanos *float64 `json:"nanos,omitempty" tf:"nanos,omitempty"`

	// Seconds of minutes of the time.
	Seconds *float64 `json:"seconds,omitempty" tf:"seconds,omitempty"`
}

type StartTimeObservation struct {

	// Hours of day in 24 hour format.
	Hours *float64 `json:"hours,omitempty" tf:"hours,omitempty"`

	// Minutes of hour of day.
	Minutes *float64 `json:"minutes,omitempty" tf:"minutes,omitempty"`

	// Fractions of seconds in nanoseconds.
	Nanos *float64 `json:"nanos,omitempty" tf:"nanos,omitempty"`

	// Seconds of minutes of the time.
	Seconds *float64 `json:"seconds,omitempty" tf:"seconds,omitempty"`
}

type StartTimeParameters struct {

	// Hours of day in 24 hour format.
	// +kubebuilder:validation:Optional
	Hours *float64 `json:"hours,omitempty" tf:"hours,omitempty"`

	// Minutes of hour of day.
	// +kubebuilder:validation:Optional
	Minutes *float64 `json:"minutes,omitempty" tf:"minutes,omitempty"`

	// Fractions of seconds in nanoseconds.
	// +kubebuilder:validation:Optional
	Nanos *float64 `json:"nanos,omitempty" tf:"nanos,omitempty"`

	// Seconds of minutes of the time.
	// +kubebuilder:validation:Optional
	Seconds *float64 `json:"seconds,omitempty" tf:"seconds,omitempty"`
}

// BackupBackupPlanSpec defines the desired state of BackupBackupPlan
type BackupBackupPlanSpec struct {
	v2.ManagedResourceSpec `json:",inline"`
	ForProvider            BackupBackupPlanParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider BackupBackupPlanInitParameters `json:"initProvider,omitempty"`
}

// BackupBackupPlanStatus defines the observed state of BackupBackupPlan.
type BackupBackupPlanStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        BackupBackupPlanObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// BackupBackupPlan is the Schema for the BackupBackupPlans API. Represents a Backup Plan instance.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Namespaced,categories={crossplane,managed,gcp}
type BackupBackupPlan struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              BackupBackupPlanSpec   `json:"spec"`
	Status            BackupBackupPlanStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// BackupBackupPlanList contains a list of BackupBackupPlans
type BackupBackupPlanList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []BackupBackupPlan `json:"items"`
}

// Repository type metadata.
var (
	BackupBackupPlan_Kind             = "BackupBackupPlan"
	BackupBackupPlan_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: BackupBackupPlan_Kind}.String()
	BackupBackupPlan_KindAPIVersion   = BackupBackupPlan_Kind + "." + CRDGroupVersion.String()
	BackupBackupPlan_GroupVersionKind = CRDGroupVersion.WithKind(BackupBackupPlan_Kind)
)

func init() {
	SchemeBuilder.Register(&BackupBackupPlan{}, &BackupBackupPlanList{})
}
