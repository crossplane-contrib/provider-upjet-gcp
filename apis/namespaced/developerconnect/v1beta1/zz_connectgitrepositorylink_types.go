// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1beta1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/v2/apis/common/v1"
	v2 "github.com/crossplane/crossplane-runtime/v2/apis/common/v2"
)

type ConnectGitRepositoryLinkInitParameters struct {

	// Optional. Allows clients to store small amounts of arbitrary data.
	// Note: This field is non-authoritative, and will only manage the annotations present in your configuration.
	// Please refer to the field effective_annotations for all of the annotations present on the resource.
	// +mapType=granular
	Annotations map[string]*string `json:"annotations,omitempty" tf:"annotations,omitempty"`

	// Required. Git Clone URI.
	CloneURI *string `json:"cloneUri,omitempty" tf:"clone_uri,omitempty"`

	// Optional. This checksum is computed by the server based on the value of other
	// fields, and may be sent on update and delete requests to ensure the
	// client has an up-to-date value before proceeding.
	Etag *string `json:"etag,omitempty" tf:"etag,omitempty"`

	// Optional. Labels as key value pairs
	// Note: This field is non-authoritative, and will only manage the labels present in your configuration.
	// Please refer to the field effective_labels for all of the labels present on the resource.
	// +mapType=granular
	Labels map[string]*string `json:"labels,omitempty" tf:"labels,omitempty"`

	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project *string `json:"project,omitempty" tf:"project,omitempty"`
}

type ConnectGitRepositoryLinkObservation struct {

	// Optional. Allows clients to store small amounts of arbitrary data.
	// Note: This field is non-authoritative, and will only manage the annotations present in your configuration.
	// Please refer to the field effective_annotations for all of the annotations present on the resource.
	// +mapType=granular
	Annotations map[string]*string `json:"annotations,omitempty" tf:"annotations,omitempty"`

	// Required. Git Clone URI.
	CloneURI *string `json:"cloneUri,omitempty" tf:"clone_uri,omitempty"`

	// Output only. [Output only] Create timestamp
	CreateTime *string `json:"createTime,omitempty" tf:"create_time,omitempty"`

	// Output only. [Output only] Delete timestamp
	DeleteTime *string `json:"deleteTime,omitempty" tf:"delete_time,omitempty"`

	// +mapType=granular
	EffectiveAnnotations map[string]*string `json:"effectiveAnnotations,omitempty" tf:"effective_annotations,omitempty"`

	// +mapType=granular
	EffectiveLabels map[string]*string `json:"effectiveLabels,omitempty" tf:"effective_labels,omitempty"`

	// Optional. This checksum is computed by the server based on the value of other
	// fields, and may be sent on update and delete requests to ensure the
	// client has an up-to-date value before proceeding.
	Etag *string `json:"etag,omitempty" tf:"etag,omitempty"`

	// an identifier for the resource with format projects/{{project}}/locations/{{location}}/connections/{{parent_connection}}/gitRepositoryLinks/{{git_repository_link_id}}
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// Optional. Labels as key value pairs
	// Note: This field is non-authoritative, and will only manage the labels present in your configuration.
	// Please refer to the field effective_labels for all of the labels present on the resource.
	// +mapType=granular
	Labels map[string]*string `json:"labels,omitempty" tf:"labels,omitempty"`

	// Resource ID segment making up resource name. It identifies the resource within its parent collection as described in https://google.aip.dev/122. See documentation for resource type developerconnect.googleapis.com/GitRepositoryLink.
	Location *string `json:"location,omitempty" tf:"location,omitempty"`

	// Identifier. Resource name of the repository, in the format
	// projects/*/locations/*/connections/*/gitRepositoryLinks/*.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Resource ID segment making up resource name. It identifies the resource within its parent collection as described in https://google.aip.dev/122. See documentation for resource type developerconnect.googleapis.com/GitRepositoryLink.
	ParentConnection *string `json:"parentConnection,omitempty" tf:"parent_connection,omitempty"`

	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project *string `json:"project,omitempty" tf:"project,omitempty"`

	// Output only. Set to true when the connection is being set up or updated in the
	// background.
	Reconciling *bool `json:"reconciling,omitempty" tf:"reconciling,omitempty"`

	// The combination of labels configured directly on the resource
	// and default labels configured on the provider.
	// +mapType=granular
	TerraformLabels map[string]*string `json:"terraformLabels,omitempty" tf:"terraform_labels,omitempty"`

	// Output only. A system-assigned unique identifier for a the GitRepositoryLink.
	UID *string `json:"uid,omitempty" tf:"uid,omitempty"`

	// Output only. [Output only] Update timestamp
	UpdateTime *string `json:"updateTime,omitempty" tf:"update_time,omitempty"`
}

type ConnectGitRepositoryLinkParameters struct {

	// Optional. Allows clients to store small amounts of arbitrary data.
	// Note: This field is non-authoritative, and will only manage the annotations present in your configuration.
	// Please refer to the field effective_annotations for all of the annotations present on the resource.
	// +kubebuilder:validation:Optional
	// +mapType=granular
	Annotations map[string]*string `json:"annotations,omitempty" tf:"annotations,omitempty"`

	// Required. Git Clone URI.
	// +kubebuilder:validation:Optional
	CloneURI *string `json:"cloneUri,omitempty" tf:"clone_uri,omitempty"`

	// Optional. This checksum is computed by the server based on the value of other
	// fields, and may be sent on update and delete requests to ensure the
	// client has an up-to-date value before proceeding.
	// +kubebuilder:validation:Optional
	Etag *string `json:"etag,omitempty" tf:"etag,omitempty"`

	// Optional. Labels as key value pairs
	// Note: This field is non-authoritative, and will only manage the labels present in your configuration.
	// Please refer to the field effective_labels for all of the labels present on the resource.
	// +kubebuilder:validation:Optional
	// +mapType=granular
	Labels map[string]*string `json:"labels,omitempty" tf:"labels,omitempty"`

	// Resource ID segment making up resource name. It identifies the resource within its parent collection as described in https://google.aip.dev/122. See documentation for resource type developerconnect.googleapis.com/GitRepositoryLink.
	// +kubebuilder:validation:Required
	Location *string `json:"location" tf:"location,omitempty"`

	// Resource ID segment making up resource name. It identifies the resource within its parent collection as described in https://google.aip.dev/122. See documentation for resource type developerconnect.googleapis.com/GitRepositoryLink.
	// +crossplane:generate:reference:type=github.com/upbound/provider-gcp/apis/namespaced/developerconnect/v1beta1.ConnectConnection
	// +kubebuilder:validation:Optional
	ParentConnection *string `json:"parentConnection,omitempty" tf:"parent_connection,omitempty"`

	// Reference to a ConnectConnection in developerconnect to populate parentConnection.
	// +kubebuilder:validation:Optional
	ParentConnectionRef *v1.NamespacedReference `json:"parentConnectionRef,omitempty" tf:"-"`

	// Selector for a ConnectConnection in developerconnect to populate parentConnection.
	// +kubebuilder:validation:Optional
	ParentConnectionSelector *v1.NamespacedSelector `json:"parentConnectionSelector,omitempty" tf:"-"`

	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	// +kubebuilder:validation:Optional
	Project *string `json:"project,omitempty" tf:"project,omitempty"`
}

// ConnectGitRepositoryLinkSpec defines the desired state of ConnectGitRepositoryLink
type ConnectGitRepositoryLinkSpec struct {
	v2.ManagedResourceSpec `json:",inline"`
	ForProvider            ConnectGitRepositoryLinkParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider ConnectGitRepositoryLinkInitParameters `json:"initProvider,omitempty"`
}

// ConnectGitRepositoryLinkStatus defines the observed state of ConnectGitRepositoryLink.
type ConnectGitRepositoryLinkStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        ConnectGitRepositoryLinkObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// ConnectGitRepositoryLink is the Schema for the ConnectGitRepositoryLinks API. A git repository link to a parent connection.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Namespaced,categories={crossplane,managed,gcp}
type ConnectGitRepositoryLink struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.cloneUri) || (has(self.initProvider) && has(self.initProvider.cloneUri))",message="spec.forProvider.cloneUri is a required parameter"
	Spec   ConnectGitRepositoryLinkSpec   `json:"spec"`
	Status ConnectGitRepositoryLinkStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// ConnectGitRepositoryLinkList contains a list of ConnectGitRepositoryLinks
type ConnectGitRepositoryLinkList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []ConnectGitRepositoryLink `json:"items"`
}

// Repository type metadata.
var (
	ConnectGitRepositoryLink_Kind             = "ConnectGitRepositoryLink"
	ConnectGitRepositoryLink_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: ConnectGitRepositoryLink_Kind}.String()
	ConnectGitRepositoryLink_KindAPIVersion   = ConnectGitRepositoryLink_Kind + "." + CRDGroupVersion.String()
	ConnectGitRepositoryLink_GroupVersionKind = CRDGroupVersion.WithKind(ConnectGitRepositoryLink_Kind)
)

func init() {
	SchemeBuilder.Register(&ConnectGitRepositoryLink{}, &ConnectGitRepositoryLinkList{})
}
