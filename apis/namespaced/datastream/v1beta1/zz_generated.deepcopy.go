//go:build !ignore_autogenerated

// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by controller-gen. DO NOT EDIT.

package v1beta1

import (
	"github.com/crossplane/crossplane-runtime/v2/apis/common/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AppendOnlyInitParameters) DeepCopyInto(out *AppendOnlyInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AppendOnlyInitParameters.
func (in *AppendOnlyInitParameters) DeepCopy() *AppendOnlyInitParameters {
	if in == nil {
		return nil
	}
	out := new(AppendOnlyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AppendOnlyObservation) DeepCopyInto(out *AppendOnlyObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AppendOnlyObservation.
func (in *AppendOnlyObservation) DeepCopy() *AppendOnlyObservation {
	if in == nil {
		return nil
	}
	out := new(AppendOnlyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AppendOnlyParameters) DeepCopyInto(out *AppendOnlyParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AppendOnlyParameters.
func (in *AppendOnlyParameters) DeepCopy() *AppendOnlyParameters {
	if in == nil {
		return nil
	}
	out := new(AppendOnlyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AvroFileFormatInitParameters) DeepCopyInto(out *AvroFileFormatInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AvroFileFormatInitParameters.
func (in *AvroFileFormatInitParameters) DeepCopy() *AvroFileFormatInitParameters {
	if in == nil {
		return nil
	}
	out := new(AvroFileFormatInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AvroFileFormatObservation) DeepCopyInto(out *AvroFileFormatObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AvroFileFormatObservation.
func (in *AvroFileFormatObservation) DeepCopy() *AvroFileFormatObservation {
	if in == nil {
		return nil
	}
	out := new(AvroFileFormatObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AvroFileFormatParameters) DeepCopyInto(out *AvroFileFormatParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AvroFileFormatParameters.
func (in *AvroFileFormatParameters) DeepCopy() *AvroFileFormatParameters {
	if in == nil {
		return nil
	}
	out := new(AvroFileFormatParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BackfillAllInitParameters) DeepCopyInto(out *BackfillAllInitParameters) {
	*out = *in
	if in.MySQLExcludedObjects != nil {
		in, out := &in.MySQLExcludedObjects, &out.MySQLExcludedObjects
		*out = new(MySQLExcludedObjectsInitParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.OracleExcludedObjects != nil {
		in, out := &in.OracleExcludedObjects, &out.OracleExcludedObjects
		*out = new(OracleExcludedObjectsInitParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.PostgresqlExcludedObjects != nil {
		in, out := &in.PostgresqlExcludedObjects, &out.PostgresqlExcludedObjects
		*out = new(PostgresqlExcludedObjectsInitParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.SQLServerExcludedObjects != nil {
		in, out := &in.SQLServerExcludedObjects, &out.SQLServerExcludedObjects
		*out = new(SQLServerExcludedObjectsInitParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.SalesforceExcludedObjects != nil {
		in, out := &in.SalesforceExcludedObjects, &out.SalesforceExcludedObjects
		*out = new(SalesforceExcludedObjectsInitParameters)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BackfillAllInitParameters.
func (in *BackfillAllInitParameters) DeepCopy() *BackfillAllInitParameters {
	if in == nil {
		return nil
	}
	out := new(BackfillAllInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BackfillAllObservation) DeepCopyInto(out *BackfillAllObservation) {
	*out = *in
	if in.MySQLExcludedObjects != nil {
		in, out := &in.MySQLExcludedObjects, &out.MySQLExcludedObjects
		*out = new(MySQLExcludedObjectsObservation)
		(*in).DeepCopyInto(*out)
	}
	if in.OracleExcludedObjects != nil {
		in, out := &in.OracleExcludedObjects, &out.OracleExcludedObjects
		*out = new(OracleExcludedObjectsObservation)
		(*in).DeepCopyInto(*out)
	}
	if in.PostgresqlExcludedObjects != nil {
		in, out := &in.PostgresqlExcludedObjects, &out.PostgresqlExcludedObjects
		*out = new(PostgresqlExcludedObjectsObservation)
		(*in).DeepCopyInto(*out)
	}
	if in.SQLServerExcludedObjects != nil {
		in, out := &in.SQLServerExcludedObjects, &out.SQLServerExcludedObjects
		*out = new(SQLServerExcludedObjectsObservation)
		(*in).DeepCopyInto(*out)
	}
	if in.SalesforceExcludedObjects != nil {
		in, out := &in.SalesforceExcludedObjects, &out.SalesforceExcludedObjects
		*out = new(SalesforceExcludedObjectsObservation)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BackfillAllObservation.
func (in *BackfillAllObservation) DeepCopy() *BackfillAllObservation {
	if in == nil {
		return nil
	}
	out := new(BackfillAllObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BackfillAllParameters) DeepCopyInto(out *BackfillAllParameters) {
	*out = *in
	if in.MySQLExcludedObjects != nil {
		in, out := &in.MySQLExcludedObjects, &out.MySQLExcludedObjects
		*out = new(MySQLExcludedObjectsParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.OracleExcludedObjects != nil {
		in, out := &in.OracleExcludedObjects, &out.OracleExcludedObjects
		*out = new(OracleExcludedObjectsParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.PostgresqlExcludedObjects != nil {
		in, out := &in.PostgresqlExcludedObjects, &out.PostgresqlExcludedObjects
		*out = new(PostgresqlExcludedObjectsParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.SQLServerExcludedObjects != nil {
		in, out := &in.SQLServerExcludedObjects, &out.SQLServerExcludedObjects
		*out = new(SQLServerExcludedObjectsParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.SalesforceExcludedObjects != nil {
		in, out := &in.SalesforceExcludedObjects, &out.SalesforceExcludedObjects
		*out = new(SalesforceExcludedObjectsParameters)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BackfillAllParameters.
func (in *BackfillAllParameters) DeepCopy() *BackfillAllParameters {
	if in == nil {
		return nil
	}
	out := new(BackfillAllParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BackfillNoneInitParameters) DeepCopyInto(out *BackfillNoneInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BackfillNoneInitParameters.
func (in *BackfillNoneInitParameters) DeepCopy() *BackfillNoneInitParameters {
	if in == nil {
		return nil
	}
	out := new(BackfillNoneInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BackfillNoneObservation) DeepCopyInto(out *BackfillNoneObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BackfillNoneObservation.
func (in *BackfillNoneObservation) DeepCopy() *BackfillNoneObservation {
	if in == nil {
		return nil
	}
	out := new(BackfillNoneObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BackfillNoneParameters) DeepCopyInto(out *BackfillNoneParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BackfillNoneParameters.
func (in *BackfillNoneParameters) DeepCopy() *BackfillNoneParameters {
	if in == nil {
		return nil
	}
	out := new(BackfillNoneParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BigqueryDestinationConfigInitParameters) DeepCopyInto(out *BigqueryDestinationConfigInitParameters) {
	*out = *in
	if in.AppendOnly != nil {
		in, out := &in.AppendOnly, &out.AppendOnly
		*out = new(AppendOnlyInitParameters)
		**out = **in
	}
	if in.BlmtConfig != nil {
		in, out := &in.BlmtConfig, &out.BlmtConfig
		*out = new(BlmtConfigInitParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.DataFreshness != nil {
		in, out := &in.DataFreshness, &out.DataFreshness
		*out = new(string)
		**out = **in
	}
	if in.Merge != nil {
		in, out := &in.Merge, &out.Merge
		*out = new(MergeInitParameters)
		**out = **in
	}
	if in.SingleTargetDataset != nil {
		in, out := &in.SingleTargetDataset, &out.SingleTargetDataset
		*out = new(SingleTargetDatasetInitParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.SourceHierarchyDatasets != nil {
		in, out := &in.SourceHierarchyDatasets, &out.SourceHierarchyDatasets
		*out = new(SourceHierarchyDatasetsInitParameters)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BigqueryDestinationConfigInitParameters.
func (in *BigqueryDestinationConfigInitParameters) DeepCopy() *BigqueryDestinationConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(BigqueryDestinationConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BigqueryDestinationConfigObservation) DeepCopyInto(out *BigqueryDestinationConfigObservation) {
	*out = *in
	if in.AppendOnly != nil {
		in, out := &in.AppendOnly, &out.AppendOnly
		*out = new(AppendOnlyParameters)
		**out = **in
	}
	if in.BlmtConfig != nil {
		in, out := &in.BlmtConfig, &out.BlmtConfig
		*out = new(BlmtConfigObservation)
		(*in).DeepCopyInto(*out)
	}
	if in.DataFreshness != nil {
		in, out := &in.DataFreshness, &out.DataFreshness
		*out = new(string)
		**out = **in
	}
	if in.Merge != nil {
		in, out := &in.Merge, &out.Merge
		*out = new(MergeParameters)
		**out = **in
	}
	if in.SingleTargetDataset != nil {
		in, out := &in.SingleTargetDataset, &out.SingleTargetDataset
		*out = new(SingleTargetDatasetObservation)
		(*in).DeepCopyInto(*out)
	}
	if in.SourceHierarchyDatasets != nil {
		in, out := &in.SourceHierarchyDatasets, &out.SourceHierarchyDatasets
		*out = new(SourceHierarchyDatasetsObservation)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BigqueryDestinationConfigObservation.
func (in *BigqueryDestinationConfigObservation) DeepCopy() *BigqueryDestinationConfigObservation {
	if in == nil {
		return nil
	}
	out := new(BigqueryDestinationConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BigqueryDestinationConfigParameters) DeepCopyInto(out *BigqueryDestinationConfigParameters) {
	*out = *in
	if in.AppendOnly != nil {
		in, out := &in.AppendOnly, &out.AppendOnly
		*out = new(AppendOnlyParameters)
		**out = **in
	}
	if in.BlmtConfig != nil {
		in, out := &in.BlmtConfig, &out.BlmtConfig
		*out = new(BlmtConfigParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.DataFreshness != nil {
		in, out := &in.DataFreshness, &out.DataFreshness
		*out = new(string)
		**out = **in
	}
	if in.Merge != nil {
		in, out := &in.Merge, &out.Merge
		*out = new(MergeParameters)
		**out = **in
	}
	if in.SingleTargetDataset != nil {
		in, out := &in.SingleTargetDataset, &out.SingleTargetDataset
		*out = new(SingleTargetDatasetParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.SourceHierarchyDatasets != nil {
		in, out := &in.SourceHierarchyDatasets, &out.SourceHierarchyDatasets
		*out = new(SourceHierarchyDatasetsParameters)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BigqueryDestinationConfigParameters.
func (in *BigqueryDestinationConfigParameters) DeepCopy() *BigqueryDestinationConfigParameters {
	if in == nil {
		return nil
	}
	out := new(BigqueryDestinationConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BigqueryProfileInitParameters) DeepCopyInto(out *BigqueryProfileInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BigqueryProfileInitParameters.
func (in *BigqueryProfileInitParameters) DeepCopy() *BigqueryProfileInitParameters {
	if in == nil {
		return nil
	}
	out := new(BigqueryProfileInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BigqueryProfileObservation) DeepCopyInto(out *BigqueryProfileObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BigqueryProfileObservation.
func (in *BigqueryProfileObservation) DeepCopy() *BigqueryProfileObservation {
	if in == nil {
		return nil
	}
	out := new(BigqueryProfileObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BigqueryProfileParameters) DeepCopyInto(out *BigqueryProfileParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BigqueryProfileParameters.
func (in *BigqueryProfileParameters) DeepCopy() *BigqueryProfileParameters {
	if in == nil {
		return nil
	}
	out := new(BigqueryProfileParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BinaryLogPositionInitParameters) DeepCopyInto(out *BinaryLogPositionInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BinaryLogPositionInitParameters.
func (in *BinaryLogPositionInitParameters) DeepCopy() *BinaryLogPositionInitParameters {
	if in == nil {
		return nil
	}
	out := new(BinaryLogPositionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BinaryLogPositionObservation) DeepCopyInto(out *BinaryLogPositionObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BinaryLogPositionObservation.
func (in *BinaryLogPositionObservation) DeepCopy() *BinaryLogPositionObservation {
	if in == nil {
		return nil
	}
	out := new(BinaryLogPositionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BinaryLogPositionParameters) DeepCopyInto(out *BinaryLogPositionParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BinaryLogPositionParameters.
func (in *BinaryLogPositionParameters) DeepCopy() *BinaryLogPositionParameters {
	if in == nil {
		return nil
	}
	out := new(BinaryLogPositionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BlmtConfigInitParameters) DeepCopyInto(out *BlmtConfigInitParameters) {
	*out = *in
	if in.Bucket != nil {
		in, out := &in.Bucket, &out.Bucket
		*out = new(string)
		**out = **in
	}
	if in.BucketRef != nil {
		in, out := &in.BucketRef, &out.BucketRef
		*out = new(v1.NamespacedReference)
		(*in).DeepCopyInto(*out)
	}
	if in.BucketSelector != nil {
		in, out := &in.BucketSelector, &out.BucketSelector
		*out = new(v1.NamespacedSelector)
		(*in).DeepCopyInto(*out)
	}
	if in.ConnectionName != nil {
		in, out := &in.ConnectionName, &out.ConnectionName
		*out = new(string)
		**out = **in
	}
	if in.FileFormat != nil {
		in, out := &in.FileFormat, &out.FileFormat
		*out = new(string)
		**out = **in
	}
	if in.RootPath != nil {
		in, out := &in.RootPath, &out.RootPath
		*out = new(string)
		**out = **in
	}
	if in.TableFormat != nil {
		in, out := &in.TableFormat, &out.TableFormat
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BlmtConfigInitParameters.
func (in *BlmtConfigInitParameters) DeepCopy() *BlmtConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(BlmtConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BlmtConfigObservation) DeepCopyInto(out *BlmtConfigObservation) {
	*out = *in
	if in.Bucket != nil {
		in, out := &in.Bucket, &out.Bucket
		*out = new(string)
		**out = **in
	}
	if in.ConnectionName != nil {
		in, out := &in.ConnectionName, &out.ConnectionName
		*out = new(string)
		**out = **in
	}
	if in.FileFormat != nil {
		in, out := &in.FileFormat, &out.FileFormat
		*out = new(string)
		**out = **in
	}
	if in.RootPath != nil {
		in, out := &in.RootPath, &out.RootPath
		*out = new(string)
		**out = **in
	}
	if in.TableFormat != nil {
		in, out := &in.TableFormat, &out.TableFormat
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BlmtConfigObservation.
func (in *BlmtConfigObservation) DeepCopy() *BlmtConfigObservation {
	if in == nil {
		return nil
	}
	out := new(BlmtConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BlmtConfigParameters) DeepCopyInto(out *BlmtConfigParameters) {
	*out = *in
	if in.Bucket != nil {
		in, out := &in.Bucket, &out.Bucket
		*out = new(string)
		**out = **in
	}
	if in.BucketRef != nil {
		in, out := &in.BucketRef, &out.BucketRef
		*out = new(v1.NamespacedReference)
		(*in).DeepCopyInto(*out)
	}
	if in.BucketSelector != nil {
		in, out := &in.BucketSelector, &out.BucketSelector
		*out = new(v1.NamespacedSelector)
		(*in).DeepCopyInto(*out)
	}
	if in.ConnectionName != nil {
		in, out := &in.ConnectionName, &out.ConnectionName
		*out = new(string)
		**out = **in
	}
	if in.FileFormat != nil {
		in, out := &in.FileFormat, &out.FileFormat
		*out = new(string)
		**out = **in
	}
	if in.RootPath != nil {
		in, out := &in.RootPath, &out.RootPath
		*out = new(string)
		**out = **in
	}
	if in.TableFormat != nil {
		in, out := &in.TableFormat, &out.TableFormat
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BlmtConfigParameters.
func (in *BlmtConfigParameters) DeepCopy() *BlmtConfigParameters {
	if in == nil {
		return nil
	}
	out := new(BlmtConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ChangeTablesInitParameters) DeepCopyInto(out *ChangeTablesInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ChangeTablesInitParameters.
func (in *ChangeTablesInitParameters) DeepCopy() *ChangeTablesInitParameters {
	if in == nil {
		return nil
	}
	out := new(ChangeTablesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ChangeTablesObservation) DeepCopyInto(out *ChangeTablesObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ChangeTablesObservation.
func (in *ChangeTablesObservation) DeepCopy() *ChangeTablesObservation {
	if in == nil {
		return nil
	}
	out := new(ChangeTablesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ChangeTablesParameters) DeepCopyInto(out *ChangeTablesParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ChangeTablesParameters.
func (in *ChangeTablesParameters) DeepCopy() *ChangeTablesParameters {
	if in == nil {
		return nil
	}
	out := new(ChangeTablesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ColumnsInitParameters) DeepCopyInto(out *ColumnsInitParameters) {
	*out = *in
	if in.Column != nil {
		in, out := &in.Column, &out.Column
		*out = new(string)
		**out = **in
	}
	if in.DataType != nil {
		in, out := &in.DataType, &out.DataType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ColumnsInitParameters.
func (in *ColumnsInitParameters) DeepCopy() *ColumnsInitParameters {
	if in == nil {
		return nil
	}
	out := new(ColumnsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ColumnsObservation) DeepCopyInto(out *ColumnsObservation) {
	*out = *in
	if in.Column != nil {
		in, out := &in.Column, &out.Column
		*out = new(string)
		**out = **in
	}
	if in.DataType != nil {
		in, out := &in.DataType, &out.DataType
		*out = new(string)
		**out = **in
	}
	if in.Length != nil {
		in, out := &in.Length, &out.Length
		*out = new(float64)
		**out = **in
	}
	if in.Nullable != nil {
		in, out := &in.Nullable, &out.Nullable
		*out = new(bool)
		**out = **in
	}
	if in.OrdinalPosition != nil {
		in, out := &in.OrdinalPosition, &out.OrdinalPosition
		*out = new(float64)
		**out = **in
	}
	if in.Precision != nil {
		in, out := &in.Precision, &out.Precision
		*out = new(float64)
		**out = **in
	}
	if in.PrimaryKey != nil {
		in, out := &in.PrimaryKey, &out.PrimaryKey
		*out = new(bool)
		**out = **in
	}
	if in.Scale != nil {
		in, out := &in.Scale, &out.Scale
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ColumnsObservation.
func (in *ColumnsObservation) DeepCopy() *ColumnsObservation {
	if in == nil {
		return nil
	}
	out := new(ColumnsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ColumnsParameters) DeepCopyInto(out *ColumnsParameters) {
	*out = *in
	if in.Column != nil {
		in, out := &in.Column, &out.Column
		*out = new(string)
		**out = **in
	}
	if in.DataType != nil {
		in, out := &in.DataType, &out.DataType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ColumnsParameters.
func (in *ColumnsParameters) DeepCopy() *ColumnsParameters {
	if in == nil {
		return nil
	}
	out := new(ColumnsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectionProfile) DeepCopyInto(out *ConnectionProfile) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectionProfile.
func (in *ConnectionProfile) DeepCopy() *ConnectionProfile {
	if in == nil {
		return nil
	}
	out := new(ConnectionProfile)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ConnectionProfile) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectionProfileInitParameters) DeepCopyInto(out *ConnectionProfileInitParameters) {
	*out = *in
	if in.BigqueryProfile != nil {
		in, out := &in.BigqueryProfile, &out.BigqueryProfile
		*out = new(BigqueryProfileInitParameters)
		**out = **in
	}
	if in.CreateWithoutValidation != nil {
		in, out := &in.CreateWithoutValidation, &out.CreateWithoutValidation
		*out = new(bool)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.ForwardSSHConnectivity != nil {
		in, out := &in.ForwardSSHConnectivity, &out.ForwardSSHConnectivity
		*out = new(ForwardSSHConnectivityInitParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.GcsProfile != nil {
		in, out := &in.GcsProfile, &out.GcsProfile
		*out = new(GcsProfileInitParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.MySQLProfile != nil {
		in, out := &in.MySQLProfile, &out.MySQLProfile
		*out = new(MySQLProfileInitParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.OracleProfile != nil {
		in, out := &in.OracleProfile, &out.OracleProfile
		*out = new(OracleProfileInitParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.PostgresqlProfile != nil {
		in, out := &in.PostgresqlProfile, &out.PostgresqlProfile
		*out = new(PostgresqlProfileInitParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.PrivateConnectivity != nil {
		in, out := &in.PrivateConnectivity, &out.PrivateConnectivity
		*out = new(PrivateConnectivityInitParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.SQLServerProfile != nil {
		in, out := &in.SQLServerProfile, &out.SQLServerProfile
		*out = new(SQLServerProfileInitParameters)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectionProfileInitParameters.
func (in *ConnectionProfileInitParameters) DeepCopy() *ConnectionProfileInitParameters {
	if in == nil {
		return nil
	}
	out := new(ConnectionProfileInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectionProfileList) DeepCopyInto(out *ConnectionProfileList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ConnectionProfile, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectionProfileList.
func (in *ConnectionProfileList) DeepCopy() *ConnectionProfileList {
	if in == nil {
		return nil
	}
	out := new(ConnectionProfileList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ConnectionProfileList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectionProfileObservation) DeepCopyInto(out *ConnectionProfileObservation) {
	*out = *in
	if in.BigqueryProfile != nil {
		in, out := &in.BigqueryProfile, &out.BigqueryProfile
		*out = new(BigqueryProfileParameters)
		**out = **in
	}
	if in.CreateWithoutValidation != nil {
		in, out := &in.CreateWithoutValidation, &out.CreateWithoutValidation
		*out = new(bool)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.EffectiveLabels != nil {
		in, out := &in.EffectiveLabels, &out.EffectiveLabels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ForwardSSHConnectivity != nil {
		in, out := &in.ForwardSSHConnectivity, &out.ForwardSSHConnectivity
		*out = new(ForwardSSHConnectivityObservation)
		(*in).DeepCopyInto(*out)
	}
	if in.GcsProfile != nil {
		in, out := &in.GcsProfile, &out.GcsProfile
		*out = new(GcsProfileObservation)
		(*in).DeepCopyInto(*out)
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.MySQLProfile != nil {
		in, out := &in.MySQLProfile, &out.MySQLProfile
		*out = new(MySQLProfileObservation)
		(*in).DeepCopyInto(*out)
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.OracleProfile != nil {
		in, out := &in.OracleProfile, &out.OracleProfile
		*out = new(OracleProfileObservation)
		(*in).DeepCopyInto(*out)
	}
	if in.PostgresqlProfile != nil {
		in, out := &in.PostgresqlProfile, &out.PostgresqlProfile
		*out = new(PostgresqlProfileObservation)
		(*in).DeepCopyInto(*out)
	}
	if in.PrivateConnectivity != nil {
		in, out := &in.PrivateConnectivity, &out.PrivateConnectivity
		*out = new(PrivateConnectivityObservation)
		(*in).DeepCopyInto(*out)
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.SQLServerProfile != nil {
		in, out := &in.SQLServerProfile, &out.SQLServerProfile
		*out = new(SQLServerProfileObservation)
		(*in).DeepCopyInto(*out)
	}
	if in.TerraformLabels != nil {
		in, out := &in.TerraformLabels, &out.TerraformLabels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectionProfileObservation.
func (in *ConnectionProfileObservation) DeepCopy() *ConnectionProfileObservation {
	if in == nil {
		return nil
	}
	out := new(ConnectionProfileObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectionProfileParameters) DeepCopyInto(out *ConnectionProfileParameters) {
	*out = *in
	if in.BigqueryProfile != nil {
		in, out := &in.BigqueryProfile, &out.BigqueryProfile
		*out = new(BigqueryProfileParameters)
		**out = **in
	}
	if in.CreateWithoutValidation != nil {
		in, out := &in.CreateWithoutValidation, &out.CreateWithoutValidation
		*out = new(bool)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.ForwardSSHConnectivity != nil {
		in, out := &in.ForwardSSHConnectivity, &out.ForwardSSHConnectivity
		*out = new(ForwardSSHConnectivityParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.GcsProfile != nil {
		in, out := &in.GcsProfile, &out.GcsProfile
		*out = new(GcsProfileParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.MySQLProfile != nil {
		in, out := &in.MySQLProfile, &out.MySQLProfile
		*out = new(MySQLProfileParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.OracleProfile != nil {
		in, out := &in.OracleProfile, &out.OracleProfile
		*out = new(OracleProfileParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.PostgresqlProfile != nil {
		in, out := &in.PostgresqlProfile, &out.PostgresqlProfile
		*out = new(PostgresqlProfileParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.PrivateConnectivity != nil {
		in, out := &in.PrivateConnectivity, &out.PrivateConnectivity
		*out = new(PrivateConnectivityParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.SQLServerProfile != nil {
		in, out := &in.SQLServerProfile, &out.SQLServerProfile
		*out = new(SQLServerProfileParameters)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectionProfileParameters.
func (in *ConnectionProfileParameters) DeepCopy() *ConnectionProfileParameters {
	if in == nil {
		return nil
	}
	out := new(ConnectionProfileParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectionProfileSpec) DeepCopyInto(out *ConnectionProfileSpec) {
	*out = *in
	in.ManagedResourceSpec.DeepCopyInto(&out.ManagedResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectionProfileSpec.
func (in *ConnectionProfileSpec) DeepCopy() *ConnectionProfileSpec {
	if in == nil {
		return nil
	}
	out := new(ConnectionProfileSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectionProfileStatus) DeepCopyInto(out *ConnectionProfileStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectionProfileStatus.
func (in *ConnectionProfileStatus) DeepCopy() *ConnectionProfileStatus {
	if in == nil {
		return nil
	}
	out := new(ConnectionProfileStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatasetTemplateInitParameters) DeepCopyInto(out *DatasetTemplateInitParameters) {
	*out = *in
	if in.DatasetIDPrefix != nil {
		in, out := &in.DatasetIDPrefix, &out.DatasetIDPrefix
		*out = new(string)
		**out = **in
	}
	if in.KMSKeyName != nil {
		in, out := &in.KMSKeyName, &out.KMSKeyName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatasetTemplateInitParameters.
func (in *DatasetTemplateInitParameters) DeepCopy() *DatasetTemplateInitParameters {
	if in == nil {
		return nil
	}
	out := new(DatasetTemplateInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatasetTemplateObservation) DeepCopyInto(out *DatasetTemplateObservation) {
	*out = *in
	if in.DatasetIDPrefix != nil {
		in, out := &in.DatasetIDPrefix, &out.DatasetIDPrefix
		*out = new(string)
		**out = **in
	}
	if in.KMSKeyName != nil {
		in, out := &in.KMSKeyName, &out.KMSKeyName
		*out = new(string)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatasetTemplateObservation.
func (in *DatasetTemplateObservation) DeepCopy() *DatasetTemplateObservation {
	if in == nil {
		return nil
	}
	out := new(DatasetTemplateObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatasetTemplateParameters) DeepCopyInto(out *DatasetTemplateParameters) {
	*out = *in
	if in.DatasetIDPrefix != nil {
		in, out := &in.DatasetIDPrefix, &out.DatasetIDPrefix
		*out = new(string)
		**out = **in
	}
	if in.KMSKeyName != nil {
		in, out := &in.KMSKeyName, &out.KMSKeyName
		*out = new(string)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatasetTemplateParameters.
func (in *DatasetTemplateParameters) DeepCopy() *DatasetTemplateParameters {
	if in == nil {
		return nil
	}
	out := new(DatasetTemplateParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DestinationConfigInitParameters) DeepCopyInto(out *DestinationConfigInitParameters) {
	*out = *in
	if in.BigqueryDestinationConfig != nil {
		in, out := &in.BigqueryDestinationConfig, &out.BigqueryDestinationConfig
		*out = new(BigqueryDestinationConfigInitParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.DestinationConnectionProfile != nil {
		in, out := &in.DestinationConnectionProfile, &out.DestinationConnectionProfile
		*out = new(string)
		**out = **in
	}
	if in.DestinationConnectionProfileRef != nil {
		in, out := &in.DestinationConnectionProfileRef, &out.DestinationConnectionProfileRef
		*out = new(v1.NamespacedReference)
		(*in).DeepCopyInto(*out)
	}
	if in.DestinationConnectionProfileSelector != nil {
		in, out := &in.DestinationConnectionProfileSelector, &out.DestinationConnectionProfileSelector
		*out = new(v1.NamespacedSelector)
		(*in).DeepCopyInto(*out)
	}
	if in.GcsDestinationConfig != nil {
		in, out := &in.GcsDestinationConfig, &out.GcsDestinationConfig
		*out = new(GcsDestinationConfigInitParameters)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DestinationConfigInitParameters.
func (in *DestinationConfigInitParameters) DeepCopy() *DestinationConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(DestinationConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DestinationConfigObservation) DeepCopyInto(out *DestinationConfigObservation) {
	*out = *in
	if in.BigqueryDestinationConfig != nil {
		in, out := &in.BigqueryDestinationConfig, &out.BigqueryDestinationConfig
		*out = new(BigqueryDestinationConfigObservation)
		(*in).DeepCopyInto(*out)
	}
	if in.DestinationConnectionProfile != nil {
		in, out := &in.DestinationConnectionProfile, &out.DestinationConnectionProfile
		*out = new(string)
		**out = **in
	}
	if in.GcsDestinationConfig != nil {
		in, out := &in.GcsDestinationConfig, &out.GcsDestinationConfig
		*out = new(GcsDestinationConfigObservation)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DestinationConfigObservation.
func (in *DestinationConfigObservation) DeepCopy() *DestinationConfigObservation {
	if in == nil {
		return nil
	}
	out := new(DestinationConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DestinationConfigParameters) DeepCopyInto(out *DestinationConfigParameters) {
	*out = *in
	if in.BigqueryDestinationConfig != nil {
		in, out := &in.BigqueryDestinationConfig, &out.BigqueryDestinationConfig
		*out = new(BigqueryDestinationConfigParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.DestinationConnectionProfile != nil {
		in, out := &in.DestinationConnectionProfile, &out.DestinationConnectionProfile
		*out = new(string)
		**out = **in
	}
	if in.DestinationConnectionProfileRef != nil {
		in, out := &in.DestinationConnectionProfileRef, &out.DestinationConnectionProfileRef
		*out = new(v1.NamespacedReference)
		(*in).DeepCopyInto(*out)
	}
	if in.DestinationConnectionProfileSelector != nil {
		in, out := &in.DestinationConnectionProfileSelector, &out.DestinationConnectionProfileSelector
		*out = new(v1.NamespacedSelector)
		(*in).DeepCopyInto(*out)
	}
	if in.GcsDestinationConfig != nil {
		in, out := &in.GcsDestinationConfig, &out.GcsDestinationConfig
		*out = new(GcsDestinationConfigParameters)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DestinationConfigParameters.
func (in *DestinationConfigParameters) DeepCopy() *DestinationConfigParameters {
	if in == nil {
		return nil
	}
	out := new(DestinationConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DropLargeObjectsInitParameters) DeepCopyInto(out *DropLargeObjectsInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DropLargeObjectsInitParameters.
func (in *DropLargeObjectsInitParameters) DeepCopy() *DropLargeObjectsInitParameters {
	if in == nil {
		return nil
	}
	out := new(DropLargeObjectsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DropLargeObjectsObservation) DeepCopyInto(out *DropLargeObjectsObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DropLargeObjectsObservation.
func (in *DropLargeObjectsObservation) DeepCopy() *DropLargeObjectsObservation {
	if in == nil {
		return nil
	}
	out := new(DropLargeObjectsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DropLargeObjectsParameters) DeepCopyInto(out *DropLargeObjectsParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DropLargeObjectsParameters.
func (in *DropLargeObjectsParameters) DeepCopy() *DropLargeObjectsParameters {
	if in == nil {
		return nil
	}
	out := new(DropLargeObjectsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ErrorInitParameters) DeepCopyInto(out *ErrorInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ErrorInitParameters.
func (in *ErrorInitParameters) DeepCopy() *ErrorInitParameters {
	if in == nil {
		return nil
	}
	out := new(ErrorInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ErrorObservation) DeepCopyInto(out *ErrorObservation) {
	*out = *in
	if in.Details != nil {
		in, out := &in.Details, &out.Details
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Message != nil {
		in, out := &in.Message, &out.Message
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ErrorObservation.
func (in *ErrorObservation) DeepCopy() *ErrorObservation {
	if in == nil {
		return nil
	}
	out := new(ErrorObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ErrorParameters) DeepCopyInto(out *ErrorParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ErrorParameters.
func (in *ErrorParameters) DeepCopy() *ErrorParameters {
	if in == nil {
		return nil
	}
	out := new(ErrorParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExcludeObjectsInitParameters) DeepCopyInto(out *ExcludeObjectsInitParameters) {
	*out = *in
	if in.MySQLDatabases != nil {
		in, out := &in.MySQLDatabases, &out.MySQLDatabases
		*out = make([]ExcludeObjectsMySQLDatabasesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExcludeObjectsInitParameters.
func (in *ExcludeObjectsInitParameters) DeepCopy() *ExcludeObjectsInitParameters {
	if in == nil {
		return nil
	}
	out := new(ExcludeObjectsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExcludeObjectsMySQLDatabasesInitParameters) DeepCopyInto(out *ExcludeObjectsMySQLDatabasesInitParameters) {
	*out = *in
	if in.Database != nil {
		in, out := &in.Database, &out.Database
		*out = new(string)
		**out = **in
	}
	if in.MySQLTables != nil {
		in, out := &in.MySQLTables, &out.MySQLTables
		*out = make([]MySQLDatabasesMySQLTablesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExcludeObjectsMySQLDatabasesInitParameters.
func (in *ExcludeObjectsMySQLDatabasesInitParameters) DeepCopy() *ExcludeObjectsMySQLDatabasesInitParameters {
	if in == nil {
		return nil
	}
	out := new(ExcludeObjectsMySQLDatabasesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExcludeObjectsMySQLDatabasesObservation) DeepCopyInto(out *ExcludeObjectsMySQLDatabasesObservation) {
	*out = *in
	if in.Database != nil {
		in, out := &in.Database, &out.Database
		*out = new(string)
		**out = **in
	}
	if in.MySQLTables != nil {
		in, out := &in.MySQLTables, &out.MySQLTables
		*out = make([]MySQLDatabasesMySQLTablesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExcludeObjectsMySQLDatabasesObservation.
func (in *ExcludeObjectsMySQLDatabasesObservation) DeepCopy() *ExcludeObjectsMySQLDatabasesObservation {
	if in == nil {
		return nil
	}
	out := new(ExcludeObjectsMySQLDatabasesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExcludeObjectsMySQLDatabasesParameters) DeepCopyInto(out *ExcludeObjectsMySQLDatabasesParameters) {
	*out = *in
	if in.Database != nil {
		in, out := &in.Database, &out.Database
		*out = new(string)
		**out = **in
	}
	if in.MySQLTables != nil {
		in, out := &in.MySQLTables, &out.MySQLTables
		*out = make([]MySQLDatabasesMySQLTablesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExcludeObjectsMySQLDatabasesParameters.
func (in *ExcludeObjectsMySQLDatabasesParameters) DeepCopy() *ExcludeObjectsMySQLDatabasesParameters {
	if in == nil {
		return nil
	}
	out := new(ExcludeObjectsMySQLDatabasesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExcludeObjectsObjectsInitParameters) DeepCopyInto(out *ExcludeObjectsObjectsInitParameters) {
	*out = *in
	if in.Fields != nil {
		in, out := &in.Fields, &out.Fields
		*out = make([]ObjectsFieldsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ObjectName != nil {
		in, out := &in.ObjectName, &out.ObjectName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExcludeObjectsObjectsInitParameters.
func (in *ExcludeObjectsObjectsInitParameters) DeepCopy() *ExcludeObjectsObjectsInitParameters {
	if in == nil {
		return nil
	}
	out := new(ExcludeObjectsObjectsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExcludeObjectsObjectsObservation) DeepCopyInto(out *ExcludeObjectsObjectsObservation) {
	*out = *in
	if in.Fields != nil {
		in, out := &in.Fields, &out.Fields
		*out = make([]ObjectsFieldsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ObjectName != nil {
		in, out := &in.ObjectName, &out.ObjectName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExcludeObjectsObjectsObservation.
func (in *ExcludeObjectsObjectsObservation) DeepCopy() *ExcludeObjectsObjectsObservation {
	if in == nil {
		return nil
	}
	out := new(ExcludeObjectsObjectsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExcludeObjectsObjectsParameters) DeepCopyInto(out *ExcludeObjectsObjectsParameters) {
	*out = *in
	if in.Fields != nil {
		in, out := &in.Fields, &out.Fields
		*out = make([]ObjectsFieldsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ObjectName != nil {
		in, out := &in.ObjectName, &out.ObjectName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExcludeObjectsObjectsParameters.
func (in *ExcludeObjectsObjectsParameters) DeepCopy() *ExcludeObjectsObjectsParameters {
	if in == nil {
		return nil
	}
	out := new(ExcludeObjectsObjectsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExcludeObjectsObservation) DeepCopyInto(out *ExcludeObjectsObservation) {
	*out = *in
	if in.MySQLDatabases != nil {
		in, out := &in.MySQLDatabases, &out.MySQLDatabases
		*out = make([]ExcludeObjectsMySQLDatabasesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExcludeObjectsObservation.
func (in *ExcludeObjectsObservation) DeepCopy() *ExcludeObjectsObservation {
	if in == nil {
		return nil
	}
	out := new(ExcludeObjectsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExcludeObjectsOracleSchemasInitParameters) DeepCopyInto(out *ExcludeObjectsOracleSchemasInitParameters) {
	*out = *in
	if in.OracleTables != nil {
		in, out := &in.OracleTables, &out.OracleTables
		*out = make([]OracleSchemasOracleTablesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Schema != nil {
		in, out := &in.Schema, &out.Schema
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExcludeObjectsOracleSchemasInitParameters.
func (in *ExcludeObjectsOracleSchemasInitParameters) DeepCopy() *ExcludeObjectsOracleSchemasInitParameters {
	if in == nil {
		return nil
	}
	out := new(ExcludeObjectsOracleSchemasInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExcludeObjectsOracleSchemasObservation) DeepCopyInto(out *ExcludeObjectsOracleSchemasObservation) {
	*out = *in
	if in.OracleTables != nil {
		in, out := &in.OracleTables, &out.OracleTables
		*out = make([]OracleSchemasOracleTablesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Schema != nil {
		in, out := &in.Schema, &out.Schema
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExcludeObjectsOracleSchemasObservation.
func (in *ExcludeObjectsOracleSchemasObservation) DeepCopy() *ExcludeObjectsOracleSchemasObservation {
	if in == nil {
		return nil
	}
	out := new(ExcludeObjectsOracleSchemasObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExcludeObjectsOracleSchemasParameters) DeepCopyInto(out *ExcludeObjectsOracleSchemasParameters) {
	*out = *in
	if in.OracleTables != nil {
		in, out := &in.OracleTables, &out.OracleTables
		*out = make([]OracleSchemasOracleTablesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Schema != nil {
		in, out := &in.Schema, &out.Schema
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExcludeObjectsOracleSchemasParameters.
func (in *ExcludeObjectsOracleSchemasParameters) DeepCopy() *ExcludeObjectsOracleSchemasParameters {
	if in == nil {
		return nil
	}
	out := new(ExcludeObjectsOracleSchemasParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExcludeObjectsParameters) DeepCopyInto(out *ExcludeObjectsParameters) {
	*out = *in
	if in.MySQLDatabases != nil {
		in, out := &in.MySQLDatabases, &out.MySQLDatabases
		*out = make([]ExcludeObjectsMySQLDatabasesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExcludeObjectsParameters.
func (in *ExcludeObjectsParameters) DeepCopy() *ExcludeObjectsParameters {
	if in == nil {
		return nil
	}
	out := new(ExcludeObjectsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExcludeObjectsPostgresqlSchemasInitParameters) DeepCopyInto(out *ExcludeObjectsPostgresqlSchemasInitParameters) {
	*out = *in
	if in.PostgresqlTables != nil {
		in, out := &in.PostgresqlTables, &out.PostgresqlTables
		*out = make([]PostgresqlSchemasPostgresqlTablesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Schema != nil {
		in, out := &in.Schema, &out.Schema
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExcludeObjectsPostgresqlSchemasInitParameters.
func (in *ExcludeObjectsPostgresqlSchemasInitParameters) DeepCopy() *ExcludeObjectsPostgresqlSchemasInitParameters {
	if in == nil {
		return nil
	}
	out := new(ExcludeObjectsPostgresqlSchemasInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExcludeObjectsPostgresqlSchemasObservation) DeepCopyInto(out *ExcludeObjectsPostgresqlSchemasObservation) {
	*out = *in
	if in.PostgresqlTables != nil {
		in, out := &in.PostgresqlTables, &out.PostgresqlTables
		*out = make([]PostgresqlSchemasPostgresqlTablesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Schema != nil {
		in, out := &in.Schema, &out.Schema
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExcludeObjectsPostgresqlSchemasObservation.
func (in *ExcludeObjectsPostgresqlSchemasObservation) DeepCopy() *ExcludeObjectsPostgresqlSchemasObservation {
	if in == nil {
		return nil
	}
	out := new(ExcludeObjectsPostgresqlSchemasObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExcludeObjectsPostgresqlSchemasParameters) DeepCopyInto(out *ExcludeObjectsPostgresqlSchemasParameters) {
	*out = *in
	if in.PostgresqlTables != nil {
		in, out := &in.PostgresqlTables, &out.PostgresqlTables
		*out = make([]PostgresqlSchemasPostgresqlTablesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Schema != nil {
		in, out := &in.Schema, &out.Schema
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExcludeObjectsPostgresqlSchemasParameters.
func (in *ExcludeObjectsPostgresqlSchemasParameters) DeepCopy() *ExcludeObjectsPostgresqlSchemasParameters {
	if in == nil {
		return nil
	}
	out := new(ExcludeObjectsPostgresqlSchemasParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExcludeObjectsSchemasInitParameters) DeepCopyInto(out *ExcludeObjectsSchemasInitParameters) {
	*out = *in
	if in.Schema != nil {
		in, out := &in.Schema, &out.Schema
		*out = new(string)
		**out = **in
	}
	if in.Tables != nil {
		in, out := &in.Tables, &out.Tables
		*out = make([]SchemasTablesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExcludeObjectsSchemasInitParameters.
func (in *ExcludeObjectsSchemasInitParameters) DeepCopy() *ExcludeObjectsSchemasInitParameters {
	if in == nil {
		return nil
	}
	out := new(ExcludeObjectsSchemasInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExcludeObjectsSchemasObservation) DeepCopyInto(out *ExcludeObjectsSchemasObservation) {
	*out = *in
	if in.Schema != nil {
		in, out := &in.Schema, &out.Schema
		*out = new(string)
		**out = **in
	}
	if in.Tables != nil {
		in, out := &in.Tables, &out.Tables
		*out = make([]SchemasTablesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExcludeObjectsSchemasObservation.
func (in *ExcludeObjectsSchemasObservation) DeepCopy() *ExcludeObjectsSchemasObservation {
	if in == nil {
		return nil
	}
	out := new(ExcludeObjectsSchemasObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExcludeObjectsSchemasParameters) DeepCopyInto(out *ExcludeObjectsSchemasParameters) {
	*out = *in
	if in.Schema != nil {
		in, out := &in.Schema, &out.Schema
		*out = new(string)
		**out = **in
	}
	if in.Tables != nil {
		in, out := &in.Tables, &out.Tables
		*out = make([]SchemasTablesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExcludeObjectsSchemasParameters.
func (in *ExcludeObjectsSchemasParameters) DeepCopy() *ExcludeObjectsSchemasParameters {
	if in == nil {
		return nil
	}
	out := new(ExcludeObjectsSchemasParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FieldsInitParameters) DeepCopyInto(out *FieldsInitParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FieldsInitParameters.
func (in *FieldsInitParameters) DeepCopy() *FieldsInitParameters {
	if in == nil {
		return nil
	}
	out := new(FieldsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FieldsObservation) DeepCopyInto(out *FieldsObservation) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FieldsObservation.
func (in *FieldsObservation) DeepCopy() *FieldsObservation {
	if in == nil {
		return nil
	}
	out := new(FieldsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FieldsParameters) DeepCopyInto(out *FieldsParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FieldsParameters.
func (in *FieldsParameters) DeepCopy() *FieldsParameters {
	if in == nil {
		return nil
	}
	out := new(FieldsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ForwardSSHConnectivityInitParameters) DeepCopyInto(out *ForwardSSHConnectivityInitParameters) {
	*out = *in
	if in.Hostname != nil {
		in, out := &in.Hostname, &out.Hostname
		*out = new(string)
		**out = **in
	}
	if in.PasswordSecretRef != nil {
		in, out := &in.PasswordSecretRef, &out.PasswordSecretRef
		*out = new(v1.LocalSecretKeySelector)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
	if in.PrivateKeySecretRef != nil {
		in, out := &in.PrivateKeySecretRef, &out.PrivateKeySecretRef
		*out = new(v1.LocalSecretKeySelector)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ForwardSSHConnectivityInitParameters.
func (in *ForwardSSHConnectivityInitParameters) DeepCopy() *ForwardSSHConnectivityInitParameters {
	if in == nil {
		return nil
	}
	out := new(ForwardSSHConnectivityInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ForwardSSHConnectivityObservation) DeepCopyInto(out *ForwardSSHConnectivityObservation) {
	*out = *in
	if in.Hostname != nil {
		in, out := &in.Hostname, &out.Hostname
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ForwardSSHConnectivityObservation.
func (in *ForwardSSHConnectivityObservation) DeepCopy() *ForwardSSHConnectivityObservation {
	if in == nil {
		return nil
	}
	out := new(ForwardSSHConnectivityObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ForwardSSHConnectivityParameters) DeepCopyInto(out *ForwardSSHConnectivityParameters) {
	*out = *in
	if in.Hostname != nil {
		in, out := &in.Hostname, &out.Hostname
		*out = new(string)
		**out = **in
	}
	if in.PasswordSecretRef != nil {
		in, out := &in.PasswordSecretRef, &out.PasswordSecretRef
		*out = new(v1.LocalSecretKeySelector)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
	if in.PrivateKeySecretRef != nil {
		in, out := &in.PrivateKeySecretRef, &out.PrivateKeySecretRef
		*out = new(v1.LocalSecretKeySelector)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ForwardSSHConnectivityParameters.
func (in *ForwardSSHConnectivityParameters) DeepCopy() *ForwardSSHConnectivityParameters {
	if in == nil {
		return nil
	}
	out := new(ForwardSSHConnectivityParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GcsDestinationConfigInitParameters) DeepCopyInto(out *GcsDestinationConfigInitParameters) {
	*out = *in
	if in.AvroFileFormat != nil {
		in, out := &in.AvroFileFormat, &out.AvroFileFormat
		*out = new(AvroFileFormatInitParameters)
		**out = **in
	}
	if in.FileRotationInterval != nil {
		in, out := &in.FileRotationInterval, &out.FileRotationInterval
		*out = new(string)
		**out = **in
	}
	if in.FileRotationMb != nil {
		in, out := &in.FileRotationMb, &out.FileRotationMb
		*out = new(float64)
		**out = **in
	}
	if in.JSONFileFormat != nil {
		in, out := &in.JSONFileFormat, &out.JSONFileFormat
		*out = new(JSONFileFormatInitParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GcsDestinationConfigInitParameters.
func (in *GcsDestinationConfigInitParameters) DeepCopy() *GcsDestinationConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(GcsDestinationConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GcsDestinationConfigObservation) DeepCopyInto(out *GcsDestinationConfigObservation) {
	*out = *in
	if in.AvroFileFormat != nil {
		in, out := &in.AvroFileFormat, &out.AvroFileFormat
		*out = new(AvroFileFormatParameters)
		**out = **in
	}
	if in.FileRotationInterval != nil {
		in, out := &in.FileRotationInterval, &out.FileRotationInterval
		*out = new(string)
		**out = **in
	}
	if in.FileRotationMb != nil {
		in, out := &in.FileRotationMb, &out.FileRotationMb
		*out = new(float64)
		**out = **in
	}
	if in.JSONFileFormat != nil {
		in, out := &in.JSONFileFormat, &out.JSONFileFormat
		*out = new(JSONFileFormatObservation)
		(*in).DeepCopyInto(*out)
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GcsDestinationConfigObservation.
func (in *GcsDestinationConfigObservation) DeepCopy() *GcsDestinationConfigObservation {
	if in == nil {
		return nil
	}
	out := new(GcsDestinationConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GcsDestinationConfigParameters) DeepCopyInto(out *GcsDestinationConfigParameters) {
	*out = *in
	if in.AvroFileFormat != nil {
		in, out := &in.AvroFileFormat, &out.AvroFileFormat
		*out = new(AvroFileFormatParameters)
		**out = **in
	}
	if in.FileRotationInterval != nil {
		in, out := &in.FileRotationInterval, &out.FileRotationInterval
		*out = new(string)
		**out = **in
	}
	if in.FileRotationMb != nil {
		in, out := &in.FileRotationMb, &out.FileRotationMb
		*out = new(float64)
		**out = **in
	}
	if in.JSONFileFormat != nil {
		in, out := &in.JSONFileFormat, &out.JSONFileFormat
		*out = new(JSONFileFormatParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GcsDestinationConfigParameters.
func (in *GcsDestinationConfigParameters) DeepCopy() *GcsDestinationConfigParameters {
	if in == nil {
		return nil
	}
	out := new(GcsDestinationConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GcsProfileInitParameters) DeepCopyInto(out *GcsProfileInitParameters) {
	*out = *in
	if in.Bucket != nil {
		in, out := &in.Bucket, &out.Bucket
		*out = new(string)
		**out = **in
	}
	if in.RootPath != nil {
		in, out := &in.RootPath, &out.RootPath
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GcsProfileInitParameters.
func (in *GcsProfileInitParameters) DeepCopy() *GcsProfileInitParameters {
	if in == nil {
		return nil
	}
	out := new(GcsProfileInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GcsProfileObservation) DeepCopyInto(out *GcsProfileObservation) {
	*out = *in
	if in.Bucket != nil {
		in, out := &in.Bucket, &out.Bucket
		*out = new(string)
		**out = **in
	}
	if in.RootPath != nil {
		in, out := &in.RootPath, &out.RootPath
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GcsProfileObservation.
func (in *GcsProfileObservation) DeepCopy() *GcsProfileObservation {
	if in == nil {
		return nil
	}
	out := new(GcsProfileObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GcsProfileParameters) DeepCopyInto(out *GcsProfileParameters) {
	*out = *in
	if in.Bucket != nil {
		in, out := &in.Bucket, &out.Bucket
		*out = new(string)
		**out = **in
	}
	if in.RootPath != nil {
		in, out := &in.RootPath, &out.RootPath
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GcsProfileParameters.
func (in *GcsProfileParameters) DeepCopy() *GcsProfileParameters {
	if in == nil {
		return nil
	}
	out := new(GcsProfileParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GtidInitParameters) DeepCopyInto(out *GtidInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GtidInitParameters.
func (in *GtidInitParameters) DeepCopy() *GtidInitParameters {
	if in == nil {
		return nil
	}
	out := new(GtidInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GtidObservation) DeepCopyInto(out *GtidObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GtidObservation.
func (in *GtidObservation) DeepCopy() *GtidObservation {
	if in == nil {
		return nil
	}
	out := new(GtidObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GtidParameters) DeepCopyInto(out *GtidParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GtidParameters.
func (in *GtidParameters) DeepCopy() *GtidParameters {
	if in == nil {
		return nil
	}
	out := new(GtidParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IncludeObjectsInitParameters) DeepCopyInto(out *IncludeObjectsInitParameters) {
	*out = *in
	if in.MySQLDatabases != nil {
		in, out := &in.MySQLDatabases, &out.MySQLDatabases
		*out = make([]IncludeObjectsMySQLDatabasesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IncludeObjectsInitParameters.
func (in *IncludeObjectsInitParameters) DeepCopy() *IncludeObjectsInitParameters {
	if in == nil {
		return nil
	}
	out := new(IncludeObjectsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IncludeObjectsMySQLDatabasesInitParameters) DeepCopyInto(out *IncludeObjectsMySQLDatabasesInitParameters) {
	*out = *in
	if in.Database != nil {
		in, out := &in.Database, &out.Database
		*out = new(string)
		**out = **in
	}
	if in.MySQLTables != nil {
		in, out := &in.MySQLTables, &out.MySQLTables
		*out = make([]IncludeObjectsMySQLDatabasesMySQLTablesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IncludeObjectsMySQLDatabasesInitParameters.
func (in *IncludeObjectsMySQLDatabasesInitParameters) DeepCopy() *IncludeObjectsMySQLDatabasesInitParameters {
	if in == nil {
		return nil
	}
	out := new(IncludeObjectsMySQLDatabasesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IncludeObjectsMySQLDatabasesMySQLTablesInitParameters) DeepCopyInto(out *IncludeObjectsMySQLDatabasesMySQLTablesInitParameters) {
	*out = *in
	if in.MySQLColumns != nil {
		in, out := &in.MySQLColumns, &out.MySQLColumns
		*out = make([]MySQLDatabasesMySQLTablesMySQLColumnsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Table != nil {
		in, out := &in.Table, &out.Table
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IncludeObjectsMySQLDatabasesMySQLTablesInitParameters.
func (in *IncludeObjectsMySQLDatabasesMySQLTablesInitParameters) DeepCopy() *IncludeObjectsMySQLDatabasesMySQLTablesInitParameters {
	if in == nil {
		return nil
	}
	out := new(IncludeObjectsMySQLDatabasesMySQLTablesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IncludeObjectsMySQLDatabasesMySQLTablesObservation) DeepCopyInto(out *IncludeObjectsMySQLDatabasesMySQLTablesObservation) {
	*out = *in
	if in.MySQLColumns != nil {
		in, out := &in.MySQLColumns, &out.MySQLColumns
		*out = make([]MySQLDatabasesMySQLTablesMySQLColumnsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Table != nil {
		in, out := &in.Table, &out.Table
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IncludeObjectsMySQLDatabasesMySQLTablesObservation.
func (in *IncludeObjectsMySQLDatabasesMySQLTablesObservation) DeepCopy() *IncludeObjectsMySQLDatabasesMySQLTablesObservation {
	if in == nil {
		return nil
	}
	out := new(IncludeObjectsMySQLDatabasesMySQLTablesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IncludeObjectsMySQLDatabasesMySQLTablesParameters) DeepCopyInto(out *IncludeObjectsMySQLDatabasesMySQLTablesParameters) {
	*out = *in
	if in.MySQLColumns != nil {
		in, out := &in.MySQLColumns, &out.MySQLColumns
		*out = make([]MySQLDatabasesMySQLTablesMySQLColumnsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Table != nil {
		in, out := &in.Table, &out.Table
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IncludeObjectsMySQLDatabasesMySQLTablesParameters.
func (in *IncludeObjectsMySQLDatabasesMySQLTablesParameters) DeepCopy() *IncludeObjectsMySQLDatabasesMySQLTablesParameters {
	if in == nil {
		return nil
	}
	out := new(IncludeObjectsMySQLDatabasesMySQLTablesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IncludeObjectsMySQLDatabasesObservation) DeepCopyInto(out *IncludeObjectsMySQLDatabasesObservation) {
	*out = *in
	if in.Database != nil {
		in, out := &in.Database, &out.Database
		*out = new(string)
		**out = **in
	}
	if in.MySQLTables != nil {
		in, out := &in.MySQLTables, &out.MySQLTables
		*out = make([]IncludeObjectsMySQLDatabasesMySQLTablesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IncludeObjectsMySQLDatabasesObservation.
func (in *IncludeObjectsMySQLDatabasesObservation) DeepCopy() *IncludeObjectsMySQLDatabasesObservation {
	if in == nil {
		return nil
	}
	out := new(IncludeObjectsMySQLDatabasesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IncludeObjectsMySQLDatabasesParameters) DeepCopyInto(out *IncludeObjectsMySQLDatabasesParameters) {
	*out = *in
	if in.Database != nil {
		in, out := &in.Database, &out.Database
		*out = new(string)
		**out = **in
	}
	if in.MySQLTables != nil {
		in, out := &in.MySQLTables, &out.MySQLTables
		*out = make([]IncludeObjectsMySQLDatabasesMySQLTablesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IncludeObjectsMySQLDatabasesParameters.
func (in *IncludeObjectsMySQLDatabasesParameters) DeepCopy() *IncludeObjectsMySQLDatabasesParameters {
	if in == nil {
		return nil
	}
	out := new(IncludeObjectsMySQLDatabasesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IncludeObjectsObjectsFieldsInitParameters) DeepCopyInto(out *IncludeObjectsObjectsFieldsInitParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IncludeObjectsObjectsFieldsInitParameters.
func (in *IncludeObjectsObjectsFieldsInitParameters) DeepCopy() *IncludeObjectsObjectsFieldsInitParameters {
	if in == nil {
		return nil
	}
	out := new(IncludeObjectsObjectsFieldsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IncludeObjectsObjectsFieldsObservation) DeepCopyInto(out *IncludeObjectsObjectsFieldsObservation) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IncludeObjectsObjectsFieldsObservation.
func (in *IncludeObjectsObjectsFieldsObservation) DeepCopy() *IncludeObjectsObjectsFieldsObservation {
	if in == nil {
		return nil
	}
	out := new(IncludeObjectsObjectsFieldsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IncludeObjectsObjectsFieldsParameters) DeepCopyInto(out *IncludeObjectsObjectsFieldsParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IncludeObjectsObjectsFieldsParameters.
func (in *IncludeObjectsObjectsFieldsParameters) DeepCopy() *IncludeObjectsObjectsFieldsParameters {
	if in == nil {
		return nil
	}
	out := new(IncludeObjectsObjectsFieldsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IncludeObjectsObjectsInitParameters) DeepCopyInto(out *IncludeObjectsObjectsInitParameters) {
	*out = *in
	if in.Fields != nil {
		in, out := &in.Fields, &out.Fields
		*out = make([]IncludeObjectsObjectsFieldsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ObjectName != nil {
		in, out := &in.ObjectName, &out.ObjectName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IncludeObjectsObjectsInitParameters.
func (in *IncludeObjectsObjectsInitParameters) DeepCopy() *IncludeObjectsObjectsInitParameters {
	if in == nil {
		return nil
	}
	out := new(IncludeObjectsObjectsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IncludeObjectsObjectsObservation) DeepCopyInto(out *IncludeObjectsObjectsObservation) {
	*out = *in
	if in.Fields != nil {
		in, out := &in.Fields, &out.Fields
		*out = make([]IncludeObjectsObjectsFieldsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ObjectName != nil {
		in, out := &in.ObjectName, &out.ObjectName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IncludeObjectsObjectsObservation.
func (in *IncludeObjectsObjectsObservation) DeepCopy() *IncludeObjectsObjectsObservation {
	if in == nil {
		return nil
	}
	out := new(IncludeObjectsObjectsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IncludeObjectsObjectsParameters) DeepCopyInto(out *IncludeObjectsObjectsParameters) {
	*out = *in
	if in.Fields != nil {
		in, out := &in.Fields, &out.Fields
		*out = make([]IncludeObjectsObjectsFieldsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ObjectName != nil {
		in, out := &in.ObjectName, &out.ObjectName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IncludeObjectsObjectsParameters.
func (in *IncludeObjectsObjectsParameters) DeepCopy() *IncludeObjectsObjectsParameters {
	if in == nil {
		return nil
	}
	out := new(IncludeObjectsObjectsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IncludeObjectsObservation) DeepCopyInto(out *IncludeObjectsObservation) {
	*out = *in
	if in.MySQLDatabases != nil {
		in, out := &in.MySQLDatabases, &out.MySQLDatabases
		*out = make([]IncludeObjectsMySQLDatabasesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IncludeObjectsObservation.
func (in *IncludeObjectsObservation) DeepCopy() *IncludeObjectsObservation {
	if in == nil {
		return nil
	}
	out := new(IncludeObjectsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IncludeObjectsOracleSchemasInitParameters) DeepCopyInto(out *IncludeObjectsOracleSchemasInitParameters) {
	*out = *in
	if in.OracleTables != nil {
		in, out := &in.OracleTables, &out.OracleTables
		*out = make([]IncludeObjectsOracleSchemasOracleTablesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Schema != nil {
		in, out := &in.Schema, &out.Schema
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IncludeObjectsOracleSchemasInitParameters.
func (in *IncludeObjectsOracleSchemasInitParameters) DeepCopy() *IncludeObjectsOracleSchemasInitParameters {
	if in == nil {
		return nil
	}
	out := new(IncludeObjectsOracleSchemasInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IncludeObjectsOracleSchemasObservation) DeepCopyInto(out *IncludeObjectsOracleSchemasObservation) {
	*out = *in
	if in.OracleTables != nil {
		in, out := &in.OracleTables, &out.OracleTables
		*out = make([]IncludeObjectsOracleSchemasOracleTablesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Schema != nil {
		in, out := &in.Schema, &out.Schema
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IncludeObjectsOracleSchemasObservation.
func (in *IncludeObjectsOracleSchemasObservation) DeepCopy() *IncludeObjectsOracleSchemasObservation {
	if in == nil {
		return nil
	}
	out := new(IncludeObjectsOracleSchemasObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IncludeObjectsOracleSchemasOracleTablesInitParameters) DeepCopyInto(out *IncludeObjectsOracleSchemasOracleTablesInitParameters) {
	*out = *in
	if in.OracleColumns != nil {
		in, out := &in.OracleColumns, &out.OracleColumns
		*out = make([]OracleSchemasOracleTablesOracleColumnsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Table != nil {
		in, out := &in.Table, &out.Table
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IncludeObjectsOracleSchemasOracleTablesInitParameters.
func (in *IncludeObjectsOracleSchemasOracleTablesInitParameters) DeepCopy() *IncludeObjectsOracleSchemasOracleTablesInitParameters {
	if in == nil {
		return nil
	}
	out := new(IncludeObjectsOracleSchemasOracleTablesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IncludeObjectsOracleSchemasOracleTablesObservation) DeepCopyInto(out *IncludeObjectsOracleSchemasOracleTablesObservation) {
	*out = *in
	if in.OracleColumns != nil {
		in, out := &in.OracleColumns, &out.OracleColumns
		*out = make([]OracleSchemasOracleTablesOracleColumnsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Table != nil {
		in, out := &in.Table, &out.Table
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IncludeObjectsOracleSchemasOracleTablesObservation.
func (in *IncludeObjectsOracleSchemasOracleTablesObservation) DeepCopy() *IncludeObjectsOracleSchemasOracleTablesObservation {
	if in == nil {
		return nil
	}
	out := new(IncludeObjectsOracleSchemasOracleTablesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IncludeObjectsOracleSchemasOracleTablesParameters) DeepCopyInto(out *IncludeObjectsOracleSchemasOracleTablesParameters) {
	*out = *in
	if in.OracleColumns != nil {
		in, out := &in.OracleColumns, &out.OracleColumns
		*out = make([]OracleSchemasOracleTablesOracleColumnsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Table != nil {
		in, out := &in.Table, &out.Table
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IncludeObjectsOracleSchemasOracleTablesParameters.
func (in *IncludeObjectsOracleSchemasOracleTablesParameters) DeepCopy() *IncludeObjectsOracleSchemasOracleTablesParameters {
	if in == nil {
		return nil
	}
	out := new(IncludeObjectsOracleSchemasOracleTablesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IncludeObjectsOracleSchemasParameters) DeepCopyInto(out *IncludeObjectsOracleSchemasParameters) {
	*out = *in
	if in.OracleTables != nil {
		in, out := &in.OracleTables, &out.OracleTables
		*out = make([]IncludeObjectsOracleSchemasOracleTablesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Schema != nil {
		in, out := &in.Schema, &out.Schema
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IncludeObjectsOracleSchemasParameters.
func (in *IncludeObjectsOracleSchemasParameters) DeepCopy() *IncludeObjectsOracleSchemasParameters {
	if in == nil {
		return nil
	}
	out := new(IncludeObjectsOracleSchemasParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IncludeObjectsParameters) DeepCopyInto(out *IncludeObjectsParameters) {
	*out = *in
	if in.MySQLDatabases != nil {
		in, out := &in.MySQLDatabases, &out.MySQLDatabases
		*out = make([]IncludeObjectsMySQLDatabasesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IncludeObjectsParameters.
func (in *IncludeObjectsParameters) DeepCopy() *IncludeObjectsParameters {
	if in == nil {
		return nil
	}
	out := new(IncludeObjectsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IncludeObjectsPostgresqlSchemasInitParameters) DeepCopyInto(out *IncludeObjectsPostgresqlSchemasInitParameters) {
	*out = *in
	if in.PostgresqlTables != nil {
		in, out := &in.PostgresqlTables, &out.PostgresqlTables
		*out = make([]IncludeObjectsPostgresqlSchemasPostgresqlTablesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Schema != nil {
		in, out := &in.Schema, &out.Schema
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IncludeObjectsPostgresqlSchemasInitParameters.
func (in *IncludeObjectsPostgresqlSchemasInitParameters) DeepCopy() *IncludeObjectsPostgresqlSchemasInitParameters {
	if in == nil {
		return nil
	}
	out := new(IncludeObjectsPostgresqlSchemasInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IncludeObjectsPostgresqlSchemasObservation) DeepCopyInto(out *IncludeObjectsPostgresqlSchemasObservation) {
	*out = *in
	if in.PostgresqlTables != nil {
		in, out := &in.PostgresqlTables, &out.PostgresqlTables
		*out = make([]IncludeObjectsPostgresqlSchemasPostgresqlTablesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Schema != nil {
		in, out := &in.Schema, &out.Schema
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IncludeObjectsPostgresqlSchemasObservation.
func (in *IncludeObjectsPostgresqlSchemasObservation) DeepCopy() *IncludeObjectsPostgresqlSchemasObservation {
	if in == nil {
		return nil
	}
	out := new(IncludeObjectsPostgresqlSchemasObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IncludeObjectsPostgresqlSchemasParameters) DeepCopyInto(out *IncludeObjectsPostgresqlSchemasParameters) {
	*out = *in
	if in.PostgresqlTables != nil {
		in, out := &in.PostgresqlTables, &out.PostgresqlTables
		*out = make([]IncludeObjectsPostgresqlSchemasPostgresqlTablesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Schema != nil {
		in, out := &in.Schema, &out.Schema
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IncludeObjectsPostgresqlSchemasParameters.
func (in *IncludeObjectsPostgresqlSchemasParameters) DeepCopy() *IncludeObjectsPostgresqlSchemasParameters {
	if in == nil {
		return nil
	}
	out := new(IncludeObjectsPostgresqlSchemasParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IncludeObjectsPostgresqlSchemasPostgresqlTablesInitParameters) DeepCopyInto(out *IncludeObjectsPostgresqlSchemasPostgresqlTablesInitParameters) {
	*out = *in
	if in.PostgresqlColumns != nil {
		in, out := &in.PostgresqlColumns, &out.PostgresqlColumns
		*out = make([]PostgresqlSchemasPostgresqlTablesPostgresqlColumnsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Table != nil {
		in, out := &in.Table, &out.Table
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IncludeObjectsPostgresqlSchemasPostgresqlTablesInitParameters.
func (in *IncludeObjectsPostgresqlSchemasPostgresqlTablesInitParameters) DeepCopy() *IncludeObjectsPostgresqlSchemasPostgresqlTablesInitParameters {
	if in == nil {
		return nil
	}
	out := new(IncludeObjectsPostgresqlSchemasPostgresqlTablesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IncludeObjectsPostgresqlSchemasPostgresqlTablesObservation) DeepCopyInto(out *IncludeObjectsPostgresqlSchemasPostgresqlTablesObservation) {
	*out = *in
	if in.PostgresqlColumns != nil {
		in, out := &in.PostgresqlColumns, &out.PostgresqlColumns
		*out = make([]PostgresqlSchemasPostgresqlTablesPostgresqlColumnsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Table != nil {
		in, out := &in.Table, &out.Table
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IncludeObjectsPostgresqlSchemasPostgresqlTablesObservation.
func (in *IncludeObjectsPostgresqlSchemasPostgresqlTablesObservation) DeepCopy() *IncludeObjectsPostgresqlSchemasPostgresqlTablesObservation {
	if in == nil {
		return nil
	}
	out := new(IncludeObjectsPostgresqlSchemasPostgresqlTablesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IncludeObjectsPostgresqlSchemasPostgresqlTablesParameters) DeepCopyInto(out *IncludeObjectsPostgresqlSchemasPostgresqlTablesParameters) {
	*out = *in
	if in.PostgresqlColumns != nil {
		in, out := &in.PostgresqlColumns, &out.PostgresqlColumns
		*out = make([]PostgresqlSchemasPostgresqlTablesPostgresqlColumnsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Table != nil {
		in, out := &in.Table, &out.Table
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IncludeObjectsPostgresqlSchemasPostgresqlTablesParameters.
func (in *IncludeObjectsPostgresqlSchemasPostgresqlTablesParameters) DeepCopy() *IncludeObjectsPostgresqlSchemasPostgresqlTablesParameters {
	if in == nil {
		return nil
	}
	out := new(IncludeObjectsPostgresqlSchemasPostgresqlTablesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IncludeObjectsSchemasInitParameters) DeepCopyInto(out *IncludeObjectsSchemasInitParameters) {
	*out = *in
	if in.Schema != nil {
		in, out := &in.Schema, &out.Schema
		*out = new(string)
		**out = **in
	}
	if in.Tables != nil {
		in, out := &in.Tables, &out.Tables
		*out = make([]IncludeObjectsSchemasTablesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IncludeObjectsSchemasInitParameters.
func (in *IncludeObjectsSchemasInitParameters) DeepCopy() *IncludeObjectsSchemasInitParameters {
	if in == nil {
		return nil
	}
	out := new(IncludeObjectsSchemasInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IncludeObjectsSchemasObservation) DeepCopyInto(out *IncludeObjectsSchemasObservation) {
	*out = *in
	if in.Schema != nil {
		in, out := &in.Schema, &out.Schema
		*out = new(string)
		**out = **in
	}
	if in.Tables != nil {
		in, out := &in.Tables, &out.Tables
		*out = make([]IncludeObjectsSchemasTablesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IncludeObjectsSchemasObservation.
func (in *IncludeObjectsSchemasObservation) DeepCopy() *IncludeObjectsSchemasObservation {
	if in == nil {
		return nil
	}
	out := new(IncludeObjectsSchemasObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IncludeObjectsSchemasParameters) DeepCopyInto(out *IncludeObjectsSchemasParameters) {
	*out = *in
	if in.Schema != nil {
		in, out := &in.Schema, &out.Schema
		*out = new(string)
		**out = **in
	}
	if in.Tables != nil {
		in, out := &in.Tables, &out.Tables
		*out = make([]IncludeObjectsSchemasTablesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IncludeObjectsSchemasParameters.
func (in *IncludeObjectsSchemasParameters) DeepCopy() *IncludeObjectsSchemasParameters {
	if in == nil {
		return nil
	}
	out := new(IncludeObjectsSchemasParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IncludeObjectsSchemasTablesInitParameters) DeepCopyInto(out *IncludeObjectsSchemasTablesInitParameters) {
	*out = *in
	if in.Columns != nil {
		in, out := &in.Columns, &out.Columns
		*out = make([]SchemasTablesColumnsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Table != nil {
		in, out := &in.Table, &out.Table
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IncludeObjectsSchemasTablesInitParameters.
func (in *IncludeObjectsSchemasTablesInitParameters) DeepCopy() *IncludeObjectsSchemasTablesInitParameters {
	if in == nil {
		return nil
	}
	out := new(IncludeObjectsSchemasTablesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IncludeObjectsSchemasTablesObservation) DeepCopyInto(out *IncludeObjectsSchemasTablesObservation) {
	*out = *in
	if in.Columns != nil {
		in, out := &in.Columns, &out.Columns
		*out = make([]SchemasTablesColumnsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Table != nil {
		in, out := &in.Table, &out.Table
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IncludeObjectsSchemasTablesObservation.
func (in *IncludeObjectsSchemasTablesObservation) DeepCopy() *IncludeObjectsSchemasTablesObservation {
	if in == nil {
		return nil
	}
	out := new(IncludeObjectsSchemasTablesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IncludeObjectsSchemasTablesParameters) DeepCopyInto(out *IncludeObjectsSchemasTablesParameters) {
	*out = *in
	if in.Columns != nil {
		in, out := &in.Columns, &out.Columns
		*out = make([]SchemasTablesColumnsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Table != nil {
		in, out := &in.Table, &out.Table
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IncludeObjectsSchemasTablesParameters.
func (in *IncludeObjectsSchemasTablesParameters) DeepCopy() *IncludeObjectsSchemasTablesParameters {
	if in == nil {
		return nil
	}
	out := new(IncludeObjectsSchemasTablesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JSONFileFormatInitParameters) DeepCopyInto(out *JSONFileFormatInitParameters) {
	*out = *in
	if in.Compression != nil {
		in, out := &in.Compression, &out.Compression
		*out = new(string)
		**out = **in
	}
	if in.SchemaFileFormat != nil {
		in, out := &in.SchemaFileFormat, &out.SchemaFileFormat
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JSONFileFormatInitParameters.
func (in *JSONFileFormatInitParameters) DeepCopy() *JSONFileFormatInitParameters {
	if in == nil {
		return nil
	}
	out := new(JSONFileFormatInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JSONFileFormatObservation) DeepCopyInto(out *JSONFileFormatObservation) {
	*out = *in
	if in.Compression != nil {
		in, out := &in.Compression, &out.Compression
		*out = new(string)
		**out = **in
	}
	if in.SchemaFileFormat != nil {
		in, out := &in.SchemaFileFormat, &out.SchemaFileFormat
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JSONFileFormatObservation.
func (in *JSONFileFormatObservation) DeepCopy() *JSONFileFormatObservation {
	if in == nil {
		return nil
	}
	out := new(JSONFileFormatObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JSONFileFormatParameters) DeepCopyInto(out *JSONFileFormatParameters) {
	*out = *in
	if in.Compression != nil {
		in, out := &in.Compression, &out.Compression
		*out = new(string)
		**out = **in
	}
	if in.SchemaFileFormat != nil {
		in, out := &in.SchemaFileFormat, &out.SchemaFileFormat
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JSONFileFormatParameters.
func (in *JSONFileFormatParameters) DeepCopy() *JSONFileFormatParameters {
	if in == nil {
		return nil
	}
	out := new(JSONFileFormatParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MergeInitParameters) DeepCopyInto(out *MergeInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MergeInitParameters.
func (in *MergeInitParameters) DeepCopy() *MergeInitParameters {
	if in == nil {
		return nil
	}
	out := new(MergeInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MergeObservation) DeepCopyInto(out *MergeObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MergeObservation.
func (in *MergeObservation) DeepCopy() *MergeObservation {
	if in == nil {
		return nil
	}
	out := new(MergeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MergeParameters) DeepCopyInto(out *MergeParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MergeParameters.
func (in *MergeParameters) DeepCopy() *MergeParameters {
	if in == nil {
		return nil
	}
	out := new(MergeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MySQLColumnsInitParameters) DeepCopyInto(out *MySQLColumnsInitParameters) {
	*out = *in
	if in.Collation != nil {
		in, out := &in.Collation, &out.Collation
		*out = new(string)
		**out = **in
	}
	if in.Column != nil {
		in, out := &in.Column, &out.Column
		*out = new(string)
		**out = **in
	}
	if in.DataType != nil {
		in, out := &in.DataType, &out.DataType
		*out = new(string)
		**out = **in
	}
	if in.Nullable != nil {
		in, out := &in.Nullable, &out.Nullable
		*out = new(bool)
		**out = **in
	}
	if in.OrdinalPosition != nil {
		in, out := &in.OrdinalPosition, &out.OrdinalPosition
		*out = new(float64)
		**out = **in
	}
	if in.PrimaryKey != nil {
		in, out := &in.PrimaryKey, &out.PrimaryKey
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MySQLColumnsInitParameters.
func (in *MySQLColumnsInitParameters) DeepCopy() *MySQLColumnsInitParameters {
	if in == nil {
		return nil
	}
	out := new(MySQLColumnsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MySQLColumnsObservation) DeepCopyInto(out *MySQLColumnsObservation) {
	*out = *in
	if in.Collation != nil {
		in, out := &in.Collation, &out.Collation
		*out = new(string)
		**out = **in
	}
	if in.Column != nil {
		in, out := &in.Column, &out.Column
		*out = new(string)
		**out = **in
	}
	if in.DataType != nil {
		in, out := &in.DataType, &out.DataType
		*out = new(string)
		**out = **in
	}
	if in.Length != nil {
		in, out := &in.Length, &out.Length
		*out = new(float64)
		**out = **in
	}
	if in.Nullable != nil {
		in, out := &in.Nullable, &out.Nullable
		*out = new(bool)
		**out = **in
	}
	if in.OrdinalPosition != nil {
		in, out := &in.OrdinalPosition, &out.OrdinalPosition
		*out = new(float64)
		**out = **in
	}
	if in.PrimaryKey != nil {
		in, out := &in.PrimaryKey, &out.PrimaryKey
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MySQLColumnsObservation.
func (in *MySQLColumnsObservation) DeepCopy() *MySQLColumnsObservation {
	if in == nil {
		return nil
	}
	out := new(MySQLColumnsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MySQLColumnsParameters) DeepCopyInto(out *MySQLColumnsParameters) {
	*out = *in
	if in.Collation != nil {
		in, out := &in.Collation, &out.Collation
		*out = new(string)
		**out = **in
	}
	if in.Column != nil {
		in, out := &in.Column, &out.Column
		*out = new(string)
		**out = **in
	}
	if in.DataType != nil {
		in, out := &in.DataType, &out.DataType
		*out = new(string)
		**out = **in
	}
	if in.Nullable != nil {
		in, out := &in.Nullable, &out.Nullable
		*out = new(bool)
		**out = **in
	}
	if in.OrdinalPosition != nil {
		in, out := &in.OrdinalPosition, &out.OrdinalPosition
		*out = new(float64)
		**out = **in
	}
	if in.PrimaryKey != nil {
		in, out := &in.PrimaryKey, &out.PrimaryKey
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MySQLColumnsParameters.
func (in *MySQLColumnsParameters) DeepCopy() *MySQLColumnsParameters {
	if in == nil {
		return nil
	}
	out := new(MySQLColumnsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MySQLDatabasesInitParameters) DeepCopyInto(out *MySQLDatabasesInitParameters) {
	*out = *in
	if in.Database != nil {
		in, out := &in.Database, &out.Database
		*out = new(string)
		**out = **in
	}
	if in.MySQLTables != nil {
		in, out := &in.MySQLTables, &out.MySQLTables
		*out = make([]MySQLTablesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MySQLDatabasesInitParameters.
func (in *MySQLDatabasesInitParameters) DeepCopy() *MySQLDatabasesInitParameters {
	if in == nil {
		return nil
	}
	out := new(MySQLDatabasesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MySQLDatabasesMySQLTablesInitParameters) DeepCopyInto(out *MySQLDatabasesMySQLTablesInitParameters) {
	*out = *in
	if in.MySQLColumns != nil {
		in, out := &in.MySQLColumns, &out.MySQLColumns
		*out = make([]MySQLTablesMySQLColumnsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Table != nil {
		in, out := &in.Table, &out.Table
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MySQLDatabasesMySQLTablesInitParameters.
func (in *MySQLDatabasesMySQLTablesInitParameters) DeepCopy() *MySQLDatabasesMySQLTablesInitParameters {
	if in == nil {
		return nil
	}
	out := new(MySQLDatabasesMySQLTablesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MySQLDatabasesMySQLTablesMySQLColumnsInitParameters) DeepCopyInto(out *MySQLDatabasesMySQLTablesMySQLColumnsInitParameters) {
	*out = *in
	if in.Collation != nil {
		in, out := &in.Collation, &out.Collation
		*out = new(string)
		**out = **in
	}
	if in.Column != nil {
		in, out := &in.Column, &out.Column
		*out = new(string)
		**out = **in
	}
	if in.DataType != nil {
		in, out := &in.DataType, &out.DataType
		*out = new(string)
		**out = **in
	}
	if in.Nullable != nil {
		in, out := &in.Nullable, &out.Nullable
		*out = new(bool)
		**out = **in
	}
	if in.OrdinalPosition != nil {
		in, out := &in.OrdinalPosition, &out.OrdinalPosition
		*out = new(float64)
		**out = **in
	}
	if in.PrimaryKey != nil {
		in, out := &in.PrimaryKey, &out.PrimaryKey
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MySQLDatabasesMySQLTablesMySQLColumnsInitParameters.
func (in *MySQLDatabasesMySQLTablesMySQLColumnsInitParameters) DeepCopy() *MySQLDatabasesMySQLTablesMySQLColumnsInitParameters {
	if in == nil {
		return nil
	}
	out := new(MySQLDatabasesMySQLTablesMySQLColumnsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MySQLDatabasesMySQLTablesMySQLColumnsObservation) DeepCopyInto(out *MySQLDatabasesMySQLTablesMySQLColumnsObservation) {
	*out = *in
	if in.Collation != nil {
		in, out := &in.Collation, &out.Collation
		*out = new(string)
		**out = **in
	}
	if in.Column != nil {
		in, out := &in.Column, &out.Column
		*out = new(string)
		**out = **in
	}
	if in.DataType != nil {
		in, out := &in.DataType, &out.DataType
		*out = new(string)
		**out = **in
	}
	if in.Length != nil {
		in, out := &in.Length, &out.Length
		*out = new(float64)
		**out = **in
	}
	if in.Nullable != nil {
		in, out := &in.Nullable, &out.Nullable
		*out = new(bool)
		**out = **in
	}
	if in.OrdinalPosition != nil {
		in, out := &in.OrdinalPosition, &out.OrdinalPosition
		*out = new(float64)
		**out = **in
	}
	if in.PrimaryKey != nil {
		in, out := &in.PrimaryKey, &out.PrimaryKey
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MySQLDatabasesMySQLTablesMySQLColumnsObservation.
func (in *MySQLDatabasesMySQLTablesMySQLColumnsObservation) DeepCopy() *MySQLDatabasesMySQLTablesMySQLColumnsObservation {
	if in == nil {
		return nil
	}
	out := new(MySQLDatabasesMySQLTablesMySQLColumnsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MySQLDatabasesMySQLTablesMySQLColumnsParameters) DeepCopyInto(out *MySQLDatabasesMySQLTablesMySQLColumnsParameters) {
	*out = *in
	if in.Collation != nil {
		in, out := &in.Collation, &out.Collation
		*out = new(string)
		**out = **in
	}
	if in.Column != nil {
		in, out := &in.Column, &out.Column
		*out = new(string)
		**out = **in
	}
	if in.DataType != nil {
		in, out := &in.DataType, &out.DataType
		*out = new(string)
		**out = **in
	}
	if in.Nullable != nil {
		in, out := &in.Nullable, &out.Nullable
		*out = new(bool)
		**out = **in
	}
	if in.OrdinalPosition != nil {
		in, out := &in.OrdinalPosition, &out.OrdinalPosition
		*out = new(float64)
		**out = **in
	}
	if in.PrimaryKey != nil {
		in, out := &in.PrimaryKey, &out.PrimaryKey
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MySQLDatabasesMySQLTablesMySQLColumnsParameters.
func (in *MySQLDatabasesMySQLTablesMySQLColumnsParameters) DeepCopy() *MySQLDatabasesMySQLTablesMySQLColumnsParameters {
	if in == nil {
		return nil
	}
	out := new(MySQLDatabasesMySQLTablesMySQLColumnsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MySQLDatabasesMySQLTablesObservation) DeepCopyInto(out *MySQLDatabasesMySQLTablesObservation) {
	*out = *in
	if in.MySQLColumns != nil {
		in, out := &in.MySQLColumns, &out.MySQLColumns
		*out = make([]MySQLTablesMySQLColumnsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Table != nil {
		in, out := &in.Table, &out.Table
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MySQLDatabasesMySQLTablesObservation.
func (in *MySQLDatabasesMySQLTablesObservation) DeepCopy() *MySQLDatabasesMySQLTablesObservation {
	if in == nil {
		return nil
	}
	out := new(MySQLDatabasesMySQLTablesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MySQLDatabasesMySQLTablesParameters) DeepCopyInto(out *MySQLDatabasesMySQLTablesParameters) {
	*out = *in
	if in.MySQLColumns != nil {
		in, out := &in.MySQLColumns, &out.MySQLColumns
		*out = make([]MySQLTablesMySQLColumnsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Table != nil {
		in, out := &in.Table, &out.Table
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MySQLDatabasesMySQLTablesParameters.
func (in *MySQLDatabasesMySQLTablesParameters) DeepCopy() *MySQLDatabasesMySQLTablesParameters {
	if in == nil {
		return nil
	}
	out := new(MySQLDatabasesMySQLTablesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MySQLDatabasesObservation) DeepCopyInto(out *MySQLDatabasesObservation) {
	*out = *in
	if in.Database != nil {
		in, out := &in.Database, &out.Database
		*out = new(string)
		**out = **in
	}
	if in.MySQLTables != nil {
		in, out := &in.MySQLTables, &out.MySQLTables
		*out = make([]MySQLTablesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MySQLDatabasesObservation.
func (in *MySQLDatabasesObservation) DeepCopy() *MySQLDatabasesObservation {
	if in == nil {
		return nil
	}
	out := new(MySQLDatabasesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MySQLDatabasesParameters) DeepCopyInto(out *MySQLDatabasesParameters) {
	*out = *in
	if in.Database != nil {
		in, out := &in.Database, &out.Database
		*out = new(string)
		**out = **in
	}
	if in.MySQLTables != nil {
		in, out := &in.MySQLTables, &out.MySQLTables
		*out = make([]MySQLTablesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MySQLDatabasesParameters.
func (in *MySQLDatabasesParameters) DeepCopy() *MySQLDatabasesParameters {
	if in == nil {
		return nil
	}
	out := new(MySQLDatabasesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MySQLExcludedObjectsInitParameters) DeepCopyInto(out *MySQLExcludedObjectsInitParameters) {
	*out = *in
	if in.MySQLDatabases != nil {
		in, out := &in.MySQLDatabases, &out.MySQLDatabases
		*out = make([]MySQLDatabasesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MySQLExcludedObjectsInitParameters.
func (in *MySQLExcludedObjectsInitParameters) DeepCopy() *MySQLExcludedObjectsInitParameters {
	if in == nil {
		return nil
	}
	out := new(MySQLExcludedObjectsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MySQLExcludedObjectsObservation) DeepCopyInto(out *MySQLExcludedObjectsObservation) {
	*out = *in
	if in.MySQLDatabases != nil {
		in, out := &in.MySQLDatabases, &out.MySQLDatabases
		*out = make([]MySQLDatabasesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MySQLExcludedObjectsObservation.
func (in *MySQLExcludedObjectsObservation) DeepCopy() *MySQLExcludedObjectsObservation {
	if in == nil {
		return nil
	}
	out := new(MySQLExcludedObjectsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MySQLExcludedObjectsParameters) DeepCopyInto(out *MySQLExcludedObjectsParameters) {
	*out = *in
	if in.MySQLDatabases != nil {
		in, out := &in.MySQLDatabases, &out.MySQLDatabases
		*out = make([]MySQLDatabasesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MySQLExcludedObjectsParameters.
func (in *MySQLExcludedObjectsParameters) DeepCopy() *MySQLExcludedObjectsParameters {
	if in == nil {
		return nil
	}
	out := new(MySQLExcludedObjectsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MySQLProfileInitParameters) DeepCopyInto(out *MySQLProfileInitParameters) {
	*out = *in
	if in.Hostname != nil {
		in, out := &in.Hostname, &out.Hostname
		*out = new(string)
		**out = **in
	}
	if in.PasswordSecretRef != nil {
		in, out := &in.PasswordSecretRef, &out.PasswordSecretRef
		*out = new(v1.LocalSecretKeySelector)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
	if in.SSLConfig != nil {
		in, out := &in.SSLConfig, &out.SSLConfig
		*out = new(SSLConfigInitParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.SecretManagerStoredPassword != nil {
		in, out := &in.SecretManagerStoredPassword, &out.SecretManagerStoredPassword
		*out = new(string)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MySQLProfileInitParameters.
func (in *MySQLProfileInitParameters) DeepCopy() *MySQLProfileInitParameters {
	if in == nil {
		return nil
	}
	out := new(MySQLProfileInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MySQLProfileObservation) DeepCopyInto(out *MySQLProfileObservation) {
	*out = *in
	if in.Hostname != nil {
		in, out := &in.Hostname, &out.Hostname
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
	if in.SSLConfig != nil {
		in, out := &in.SSLConfig, &out.SSLConfig
		*out = new(SSLConfigObservation)
		(*in).DeepCopyInto(*out)
	}
	if in.SecretManagerStoredPassword != nil {
		in, out := &in.SecretManagerStoredPassword, &out.SecretManagerStoredPassword
		*out = new(string)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MySQLProfileObservation.
func (in *MySQLProfileObservation) DeepCopy() *MySQLProfileObservation {
	if in == nil {
		return nil
	}
	out := new(MySQLProfileObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MySQLProfileParameters) DeepCopyInto(out *MySQLProfileParameters) {
	*out = *in
	if in.Hostname != nil {
		in, out := &in.Hostname, &out.Hostname
		*out = new(string)
		**out = **in
	}
	if in.PasswordSecretRef != nil {
		in, out := &in.PasswordSecretRef, &out.PasswordSecretRef
		*out = new(v1.LocalSecretKeySelector)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
	if in.SSLConfig != nil {
		in, out := &in.SSLConfig, &out.SSLConfig
		*out = new(SSLConfigParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.SecretManagerStoredPassword != nil {
		in, out := &in.SecretManagerStoredPassword, &out.SecretManagerStoredPassword
		*out = new(string)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MySQLProfileParameters.
func (in *MySQLProfileParameters) DeepCopy() *MySQLProfileParameters {
	if in == nil {
		return nil
	}
	out := new(MySQLProfileParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MySQLSourceConfigInitParameters) DeepCopyInto(out *MySQLSourceConfigInitParameters) {
	*out = *in
	if in.BinaryLogPosition != nil {
		in, out := &in.BinaryLogPosition, &out.BinaryLogPosition
		*out = new(BinaryLogPositionInitParameters)
		**out = **in
	}
	if in.ExcludeObjects != nil {
		in, out := &in.ExcludeObjects, &out.ExcludeObjects
		*out = new(ExcludeObjectsInitParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.Gtid != nil {
		in, out := &in.Gtid, &out.Gtid
		*out = new(GtidInitParameters)
		**out = **in
	}
	if in.IncludeObjects != nil {
		in, out := &in.IncludeObjects, &out.IncludeObjects
		*out = new(IncludeObjectsInitParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.MaxConcurrentBackfillTasks != nil {
		in, out := &in.MaxConcurrentBackfillTasks, &out.MaxConcurrentBackfillTasks
		*out = new(float64)
		**out = **in
	}
	if in.MaxConcurrentCdcTasks != nil {
		in, out := &in.MaxConcurrentCdcTasks, &out.MaxConcurrentCdcTasks
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MySQLSourceConfigInitParameters.
func (in *MySQLSourceConfigInitParameters) DeepCopy() *MySQLSourceConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(MySQLSourceConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MySQLSourceConfigObservation) DeepCopyInto(out *MySQLSourceConfigObservation) {
	*out = *in
	if in.BinaryLogPosition != nil {
		in, out := &in.BinaryLogPosition, &out.BinaryLogPosition
		*out = new(BinaryLogPositionParameters)
		**out = **in
	}
	if in.ExcludeObjects != nil {
		in, out := &in.ExcludeObjects, &out.ExcludeObjects
		*out = new(ExcludeObjectsObservation)
		(*in).DeepCopyInto(*out)
	}
	if in.Gtid != nil {
		in, out := &in.Gtid, &out.Gtid
		*out = new(GtidParameters)
		**out = **in
	}
	if in.IncludeObjects != nil {
		in, out := &in.IncludeObjects, &out.IncludeObjects
		*out = new(IncludeObjectsObservation)
		(*in).DeepCopyInto(*out)
	}
	if in.MaxConcurrentBackfillTasks != nil {
		in, out := &in.MaxConcurrentBackfillTasks, &out.MaxConcurrentBackfillTasks
		*out = new(float64)
		**out = **in
	}
	if in.MaxConcurrentCdcTasks != nil {
		in, out := &in.MaxConcurrentCdcTasks, &out.MaxConcurrentCdcTasks
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MySQLSourceConfigObservation.
func (in *MySQLSourceConfigObservation) DeepCopy() *MySQLSourceConfigObservation {
	if in == nil {
		return nil
	}
	out := new(MySQLSourceConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MySQLSourceConfigParameters) DeepCopyInto(out *MySQLSourceConfigParameters) {
	*out = *in
	if in.BinaryLogPosition != nil {
		in, out := &in.BinaryLogPosition, &out.BinaryLogPosition
		*out = new(BinaryLogPositionParameters)
		**out = **in
	}
	if in.ExcludeObjects != nil {
		in, out := &in.ExcludeObjects, &out.ExcludeObjects
		*out = new(ExcludeObjectsParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.Gtid != nil {
		in, out := &in.Gtid, &out.Gtid
		*out = new(GtidParameters)
		**out = **in
	}
	if in.IncludeObjects != nil {
		in, out := &in.IncludeObjects, &out.IncludeObjects
		*out = new(IncludeObjectsParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.MaxConcurrentBackfillTasks != nil {
		in, out := &in.MaxConcurrentBackfillTasks, &out.MaxConcurrentBackfillTasks
		*out = new(float64)
		**out = **in
	}
	if in.MaxConcurrentCdcTasks != nil {
		in, out := &in.MaxConcurrentCdcTasks, &out.MaxConcurrentCdcTasks
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MySQLSourceConfigParameters.
func (in *MySQLSourceConfigParameters) DeepCopy() *MySQLSourceConfigParameters {
	if in == nil {
		return nil
	}
	out := new(MySQLSourceConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MySQLTablesInitParameters) DeepCopyInto(out *MySQLTablesInitParameters) {
	*out = *in
	if in.MySQLColumns != nil {
		in, out := &in.MySQLColumns, &out.MySQLColumns
		*out = make([]MySQLColumnsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Table != nil {
		in, out := &in.Table, &out.Table
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MySQLTablesInitParameters.
func (in *MySQLTablesInitParameters) DeepCopy() *MySQLTablesInitParameters {
	if in == nil {
		return nil
	}
	out := new(MySQLTablesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MySQLTablesMySQLColumnsInitParameters) DeepCopyInto(out *MySQLTablesMySQLColumnsInitParameters) {
	*out = *in
	if in.Collation != nil {
		in, out := &in.Collation, &out.Collation
		*out = new(string)
		**out = **in
	}
	if in.Column != nil {
		in, out := &in.Column, &out.Column
		*out = new(string)
		**out = **in
	}
	if in.DataType != nil {
		in, out := &in.DataType, &out.DataType
		*out = new(string)
		**out = **in
	}
	if in.Nullable != nil {
		in, out := &in.Nullable, &out.Nullable
		*out = new(bool)
		**out = **in
	}
	if in.OrdinalPosition != nil {
		in, out := &in.OrdinalPosition, &out.OrdinalPosition
		*out = new(float64)
		**out = **in
	}
	if in.PrimaryKey != nil {
		in, out := &in.PrimaryKey, &out.PrimaryKey
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MySQLTablesMySQLColumnsInitParameters.
func (in *MySQLTablesMySQLColumnsInitParameters) DeepCopy() *MySQLTablesMySQLColumnsInitParameters {
	if in == nil {
		return nil
	}
	out := new(MySQLTablesMySQLColumnsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MySQLTablesMySQLColumnsObservation) DeepCopyInto(out *MySQLTablesMySQLColumnsObservation) {
	*out = *in
	if in.Collation != nil {
		in, out := &in.Collation, &out.Collation
		*out = new(string)
		**out = **in
	}
	if in.Column != nil {
		in, out := &in.Column, &out.Column
		*out = new(string)
		**out = **in
	}
	if in.DataType != nil {
		in, out := &in.DataType, &out.DataType
		*out = new(string)
		**out = **in
	}
	if in.Length != nil {
		in, out := &in.Length, &out.Length
		*out = new(float64)
		**out = **in
	}
	if in.Nullable != nil {
		in, out := &in.Nullable, &out.Nullable
		*out = new(bool)
		**out = **in
	}
	if in.OrdinalPosition != nil {
		in, out := &in.OrdinalPosition, &out.OrdinalPosition
		*out = new(float64)
		**out = **in
	}
	if in.PrimaryKey != nil {
		in, out := &in.PrimaryKey, &out.PrimaryKey
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MySQLTablesMySQLColumnsObservation.
func (in *MySQLTablesMySQLColumnsObservation) DeepCopy() *MySQLTablesMySQLColumnsObservation {
	if in == nil {
		return nil
	}
	out := new(MySQLTablesMySQLColumnsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MySQLTablesMySQLColumnsParameters) DeepCopyInto(out *MySQLTablesMySQLColumnsParameters) {
	*out = *in
	if in.Collation != nil {
		in, out := &in.Collation, &out.Collation
		*out = new(string)
		**out = **in
	}
	if in.Column != nil {
		in, out := &in.Column, &out.Column
		*out = new(string)
		**out = **in
	}
	if in.DataType != nil {
		in, out := &in.DataType, &out.DataType
		*out = new(string)
		**out = **in
	}
	if in.Nullable != nil {
		in, out := &in.Nullable, &out.Nullable
		*out = new(bool)
		**out = **in
	}
	if in.OrdinalPosition != nil {
		in, out := &in.OrdinalPosition, &out.OrdinalPosition
		*out = new(float64)
		**out = **in
	}
	if in.PrimaryKey != nil {
		in, out := &in.PrimaryKey, &out.PrimaryKey
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MySQLTablesMySQLColumnsParameters.
func (in *MySQLTablesMySQLColumnsParameters) DeepCopy() *MySQLTablesMySQLColumnsParameters {
	if in == nil {
		return nil
	}
	out := new(MySQLTablesMySQLColumnsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MySQLTablesObservation) DeepCopyInto(out *MySQLTablesObservation) {
	*out = *in
	if in.MySQLColumns != nil {
		in, out := &in.MySQLColumns, &out.MySQLColumns
		*out = make([]MySQLColumnsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Table != nil {
		in, out := &in.Table, &out.Table
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MySQLTablesObservation.
func (in *MySQLTablesObservation) DeepCopy() *MySQLTablesObservation {
	if in == nil {
		return nil
	}
	out := new(MySQLTablesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MySQLTablesParameters) DeepCopyInto(out *MySQLTablesParameters) {
	*out = *in
	if in.MySQLColumns != nil {
		in, out := &in.MySQLColumns, &out.MySQLColumns
		*out = make([]MySQLColumnsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Table != nil {
		in, out := &in.Table, &out.Table
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MySQLTablesParameters.
func (in *MySQLTablesParameters) DeepCopy() *MySQLTablesParameters {
	if in == nil {
		return nil
	}
	out := new(MySQLTablesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ObjectsFieldsInitParameters) DeepCopyInto(out *ObjectsFieldsInitParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ObjectsFieldsInitParameters.
func (in *ObjectsFieldsInitParameters) DeepCopy() *ObjectsFieldsInitParameters {
	if in == nil {
		return nil
	}
	out := new(ObjectsFieldsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ObjectsFieldsObservation) DeepCopyInto(out *ObjectsFieldsObservation) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ObjectsFieldsObservation.
func (in *ObjectsFieldsObservation) DeepCopy() *ObjectsFieldsObservation {
	if in == nil {
		return nil
	}
	out := new(ObjectsFieldsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ObjectsFieldsParameters) DeepCopyInto(out *ObjectsFieldsParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ObjectsFieldsParameters.
func (in *ObjectsFieldsParameters) DeepCopy() *ObjectsFieldsParameters {
	if in == nil {
		return nil
	}
	out := new(ObjectsFieldsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ObjectsInitParameters) DeepCopyInto(out *ObjectsInitParameters) {
	*out = *in
	if in.Fields != nil {
		in, out := &in.Fields, &out.Fields
		*out = make([]FieldsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ObjectName != nil {
		in, out := &in.ObjectName, &out.ObjectName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ObjectsInitParameters.
func (in *ObjectsInitParameters) DeepCopy() *ObjectsInitParameters {
	if in == nil {
		return nil
	}
	out := new(ObjectsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ObjectsObservation) DeepCopyInto(out *ObjectsObservation) {
	*out = *in
	if in.Fields != nil {
		in, out := &in.Fields, &out.Fields
		*out = make([]FieldsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ObjectName != nil {
		in, out := &in.ObjectName, &out.ObjectName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ObjectsObservation.
func (in *ObjectsObservation) DeepCopy() *ObjectsObservation {
	if in == nil {
		return nil
	}
	out := new(ObjectsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ObjectsParameters) DeepCopyInto(out *ObjectsParameters) {
	*out = *in
	if in.Fields != nil {
		in, out := &in.Fields, &out.Fields
		*out = make([]FieldsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ObjectName != nil {
		in, out := &in.ObjectName, &out.ObjectName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ObjectsParameters.
func (in *ObjectsParameters) DeepCopy() *ObjectsParameters {
	if in == nil {
		return nil
	}
	out := new(ObjectsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OracleColumnsInitParameters) DeepCopyInto(out *OracleColumnsInitParameters) {
	*out = *in
	if in.Column != nil {
		in, out := &in.Column, &out.Column
		*out = new(string)
		**out = **in
	}
	if in.DataType != nil {
		in, out := &in.DataType, &out.DataType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OracleColumnsInitParameters.
func (in *OracleColumnsInitParameters) DeepCopy() *OracleColumnsInitParameters {
	if in == nil {
		return nil
	}
	out := new(OracleColumnsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OracleColumnsObservation) DeepCopyInto(out *OracleColumnsObservation) {
	*out = *in
	if in.Column != nil {
		in, out := &in.Column, &out.Column
		*out = new(string)
		**out = **in
	}
	if in.DataType != nil {
		in, out := &in.DataType, &out.DataType
		*out = new(string)
		**out = **in
	}
	if in.Encoding != nil {
		in, out := &in.Encoding, &out.Encoding
		*out = new(string)
		**out = **in
	}
	if in.Length != nil {
		in, out := &in.Length, &out.Length
		*out = new(float64)
		**out = **in
	}
	if in.Nullable != nil {
		in, out := &in.Nullable, &out.Nullable
		*out = new(bool)
		**out = **in
	}
	if in.OrdinalPosition != nil {
		in, out := &in.OrdinalPosition, &out.OrdinalPosition
		*out = new(float64)
		**out = **in
	}
	if in.Precision != nil {
		in, out := &in.Precision, &out.Precision
		*out = new(float64)
		**out = **in
	}
	if in.PrimaryKey != nil {
		in, out := &in.PrimaryKey, &out.PrimaryKey
		*out = new(bool)
		**out = **in
	}
	if in.Scale != nil {
		in, out := &in.Scale, &out.Scale
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OracleColumnsObservation.
func (in *OracleColumnsObservation) DeepCopy() *OracleColumnsObservation {
	if in == nil {
		return nil
	}
	out := new(OracleColumnsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OracleColumnsParameters) DeepCopyInto(out *OracleColumnsParameters) {
	*out = *in
	if in.Column != nil {
		in, out := &in.Column, &out.Column
		*out = new(string)
		**out = **in
	}
	if in.DataType != nil {
		in, out := &in.DataType, &out.DataType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OracleColumnsParameters.
func (in *OracleColumnsParameters) DeepCopy() *OracleColumnsParameters {
	if in == nil {
		return nil
	}
	out := new(OracleColumnsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OracleExcludedObjectsInitParameters) DeepCopyInto(out *OracleExcludedObjectsInitParameters) {
	*out = *in
	if in.OracleSchemas != nil {
		in, out := &in.OracleSchemas, &out.OracleSchemas
		*out = make([]OracleSchemasInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OracleExcludedObjectsInitParameters.
func (in *OracleExcludedObjectsInitParameters) DeepCopy() *OracleExcludedObjectsInitParameters {
	if in == nil {
		return nil
	}
	out := new(OracleExcludedObjectsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OracleExcludedObjectsObservation) DeepCopyInto(out *OracleExcludedObjectsObservation) {
	*out = *in
	if in.OracleSchemas != nil {
		in, out := &in.OracleSchemas, &out.OracleSchemas
		*out = make([]OracleSchemasObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OracleExcludedObjectsObservation.
func (in *OracleExcludedObjectsObservation) DeepCopy() *OracleExcludedObjectsObservation {
	if in == nil {
		return nil
	}
	out := new(OracleExcludedObjectsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OracleExcludedObjectsParameters) DeepCopyInto(out *OracleExcludedObjectsParameters) {
	*out = *in
	if in.OracleSchemas != nil {
		in, out := &in.OracleSchemas, &out.OracleSchemas
		*out = make([]OracleSchemasParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OracleExcludedObjectsParameters.
func (in *OracleExcludedObjectsParameters) DeepCopy() *OracleExcludedObjectsParameters {
	if in == nil {
		return nil
	}
	out := new(OracleExcludedObjectsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OracleProfileInitParameters) DeepCopyInto(out *OracleProfileInitParameters) {
	*out = *in
	if in.ConnectionAttributes != nil {
		in, out := &in.ConnectionAttributes, &out.ConnectionAttributes
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DatabaseService != nil {
		in, out := &in.DatabaseService, &out.DatabaseService
		*out = new(string)
		**out = **in
	}
	if in.Hostname != nil {
		in, out := &in.Hostname, &out.Hostname
		*out = new(string)
		**out = **in
	}
	if in.PasswordSecretRef != nil {
		in, out := &in.PasswordSecretRef, &out.PasswordSecretRef
		*out = new(v1.LocalSecretKeySelector)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
	if in.SecretManagerStoredPassword != nil {
		in, out := &in.SecretManagerStoredPassword, &out.SecretManagerStoredPassword
		*out = new(string)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OracleProfileInitParameters.
func (in *OracleProfileInitParameters) DeepCopy() *OracleProfileInitParameters {
	if in == nil {
		return nil
	}
	out := new(OracleProfileInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OracleProfileObservation) DeepCopyInto(out *OracleProfileObservation) {
	*out = *in
	if in.ConnectionAttributes != nil {
		in, out := &in.ConnectionAttributes, &out.ConnectionAttributes
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DatabaseService != nil {
		in, out := &in.DatabaseService, &out.DatabaseService
		*out = new(string)
		**out = **in
	}
	if in.Hostname != nil {
		in, out := &in.Hostname, &out.Hostname
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
	if in.SecretManagerStoredPassword != nil {
		in, out := &in.SecretManagerStoredPassword, &out.SecretManagerStoredPassword
		*out = new(string)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OracleProfileObservation.
func (in *OracleProfileObservation) DeepCopy() *OracleProfileObservation {
	if in == nil {
		return nil
	}
	out := new(OracleProfileObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OracleProfileParameters) DeepCopyInto(out *OracleProfileParameters) {
	*out = *in
	if in.ConnectionAttributes != nil {
		in, out := &in.ConnectionAttributes, &out.ConnectionAttributes
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DatabaseService != nil {
		in, out := &in.DatabaseService, &out.DatabaseService
		*out = new(string)
		**out = **in
	}
	if in.Hostname != nil {
		in, out := &in.Hostname, &out.Hostname
		*out = new(string)
		**out = **in
	}
	if in.PasswordSecretRef != nil {
		in, out := &in.PasswordSecretRef, &out.PasswordSecretRef
		*out = new(v1.LocalSecretKeySelector)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
	if in.SecretManagerStoredPassword != nil {
		in, out := &in.SecretManagerStoredPassword, &out.SecretManagerStoredPassword
		*out = new(string)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OracleProfileParameters.
func (in *OracleProfileParameters) DeepCopy() *OracleProfileParameters {
	if in == nil {
		return nil
	}
	out := new(OracleProfileParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OracleSchemasInitParameters) DeepCopyInto(out *OracleSchemasInitParameters) {
	*out = *in
	if in.OracleTables != nil {
		in, out := &in.OracleTables, &out.OracleTables
		*out = make([]OracleTablesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Schema != nil {
		in, out := &in.Schema, &out.Schema
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OracleSchemasInitParameters.
func (in *OracleSchemasInitParameters) DeepCopy() *OracleSchemasInitParameters {
	if in == nil {
		return nil
	}
	out := new(OracleSchemasInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OracleSchemasObservation) DeepCopyInto(out *OracleSchemasObservation) {
	*out = *in
	if in.OracleTables != nil {
		in, out := &in.OracleTables, &out.OracleTables
		*out = make([]OracleTablesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Schema != nil {
		in, out := &in.Schema, &out.Schema
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OracleSchemasObservation.
func (in *OracleSchemasObservation) DeepCopy() *OracleSchemasObservation {
	if in == nil {
		return nil
	}
	out := new(OracleSchemasObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OracleSchemasOracleTablesInitParameters) DeepCopyInto(out *OracleSchemasOracleTablesInitParameters) {
	*out = *in
	if in.OracleColumns != nil {
		in, out := &in.OracleColumns, &out.OracleColumns
		*out = make([]OracleTablesOracleColumnsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Table != nil {
		in, out := &in.Table, &out.Table
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OracleSchemasOracleTablesInitParameters.
func (in *OracleSchemasOracleTablesInitParameters) DeepCopy() *OracleSchemasOracleTablesInitParameters {
	if in == nil {
		return nil
	}
	out := new(OracleSchemasOracleTablesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OracleSchemasOracleTablesObservation) DeepCopyInto(out *OracleSchemasOracleTablesObservation) {
	*out = *in
	if in.OracleColumns != nil {
		in, out := &in.OracleColumns, &out.OracleColumns
		*out = make([]OracleTablesOracleColumnsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Table != nil {
		in, out := &in.Table, &out.Table
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OracleSchemasOracleTablesObservation.
func (in *OracleSchemasOracleTablesObservation) DeepCopy() *OracleSchemasOracleTablesObservation {
	if in == nil {
		return nil
	}
	out := new(OracleSchemasOracleTablesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OracleSchemasOracleTablesOracleColumnsInitParameters) DeepCopyInto(out *OracleSchemasOracleTablesOracleColumnsInitParameters) {
	*out = *in
	if in.Column != nil {
		in, out := &in.Column, &out.Column
		*out = new(string)
		**out = **in
	}
	if in.DataType != nil {
		in, out := &in.DataType, &out.DataType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OracleSchemasOracleTablesOracleColumnsInitParameters.
func (in *OracleSchemasOracleTablesOracleColumnsInitParameters) DeepCopy() *OracleSchemasOracleTablesOracleColumnsInitParameters {
	if in == nil {
		return nil
	}
	out := new(OracleSchemasOracleTablesOracleColumnsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OracleSchemasOracleTablesOracleColumnsObservation) DeepCopyInto(out *OracleSchemasOracleTablesOracleColumnsObservation) {
	*out = *in
	if in.Column != nil {
		in, out := &in.Column, &out.Column
		*out = new(string)
		**out = **in
	}
	if in.DataType != nil {
		in, out := &in.DataType, &out.DataType
		*out = new(string)
		**out = **in
	}
	if in.Encoding != nil {
		in, out := &in.Encoding, &out.Encoding
		*out = new(string)
		**out = **in
	}
	if in.Length != nil {
		in, out := &in.Length, &out.Length
		*out = new(float64)
		**out = **in
	}
	if in.Nullable != nil {
		in, out := &in.Nullable, &out.Nullable
		*out = new(bool)
		**out = **in
	}
	if in.OrdinalPosition != nil {
		in, out := &in.OrdinalPosition, &out.OrdinalPosition
		*out = new(float64)
		**out = **in
	}
	if in.Precision != nil {
		in, out := &in.Precision, &out.Precision
		*out = new(float64)
		**out = **in
	}
	if in.PrimaryKey != nil {
		in, out := &in.PrimaryKey, &out.PrimaryKey
		*out = new(bool)
		**out = **in
	}
	if in.Scale != nil {
		in, out := &in.Scale, &out.Scale
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OracleSchemasOracleTablesOracleColumnsObservation.
func (in *OracleSchemasOracleTablesOracleColumnsObservation) DeepCopy() *OracleSchemasOracleTablesOracleColumnsObservation {
	if in == nil {
		return nil
	}
	out := new(OracleSchemasOracleTablesOracleColumnsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OracleSchemasOracleTablesOracleColumnsParameters) DeepCopyInto(out *OracleSchemasOracleTablesOracleColumnsParameters) {
	*out = *in
	if in.Column != nil {
		in, out := &in.Column, &out.Column
		*out = new(string)
		**out = **in
	}
	if in.DataType != nil {
		in, out := &in.DataType, &out.DataType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OracleSchemasOracleTablesOracleColumnsParameters.
func (in *OracleSchemasOracleTablesOracleColumnsParameters) DeepCopy() *OracleSchemasOracleTablesOracleColumnsParameters {
	if in == nil {
		return nil
	}
	out := new(OracleSchemasOracleTablesOracleColumnsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OracleSchemasOracleTablesParameters) DeepCopyInto(out *OracleSchemasOracleTablesParameters) {
	*out = *in
	if in.OracleColumns != nil {
		in, out := &in.OracleColumns, &out.OracleColumns
		*out = make([]OracleTablesOracleColumnsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Table != nil {
		in, out := &in.Table, &out.Table
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OracleSchemasOracleTablesParameters.
func (in *OracleSchemasOracleTablesParameters) DeepCopy() *OracleSchemasOracleTablesParameters {
	if in == nil {
		return nil
	}
	out := new(OracleSchemasOracleTablesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OracleSchemasParameters) DeepCopyInto(out *OracleSchemasParameters) {
	*out = *in
	if in.OracleTables != nil {
		in, out := &in.OracleTables, &out.OracleTables
		*out = make([]OracleTablesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Schema != nil {
		in, out := &in.Schema, &out.Schema
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OracleSchemasParameters.
func (in *OracleSchemasParameters) DeepCopy() *OracleSchemasParameters {
	if in == nil {
		return nil
	}
	out := new(OracleSchemasParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OracleSourceConfigExcludeObjectsInitParameters) DeepCopyInto(out *OracleSourceConfigExcludeObjectsInitParameters) {
	*out = *in
	if in.OracleSchemas != nil {
		in, out := &in.OracleSchemas, &out.OracleSchemas
		*out = make([]ExcludeObjectsOracleSchemasInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OracleSourceConfigExcludeObjectsInitParameters.
func (in *OracleSourceConfigExcludeObjectsInitParameters) DeepCopy() *OracleSourceConfigExcludeObjectsInitParameters {
	if in == nil {
		return nil
	}
	out := new(OracleSourceConfigExcludeObjectsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OracleSourceConfigExcludeObjectsObservation) DeepCopyInto(out *OracleSourceConfigExcludeObjectsObservation) {
	*out = *in
	if in.OracleSchemas != nil {
		in, out := &in.OracleSchemas, &out.OracleSchemas
		*out = make([]ExcludeObjectsOracleSchemasObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OracleSourceConfigExcludeObjectsObservation.
func (in *OracleSourceConfigExcludeObjectsObservation) DeepCopy() *OracleSourceConfigExcludeObjectsObservation {
	if in == nil {
		return nil
	}
	out := new(OracleSourceConfigExcludeObjectsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OracleSourceConfigExcludeObjectsParameters) DeepCopyInto(out *OracleSourceConfigExcludeObjectsParameters) {
	*out = *in
	if in.OracleSchemas != nil {
		in, out := &in.OracleSchemas, &out.OracleSchemas
		*out = make([]ExcludeObjectsOracleSchemasParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OracleSourceConfigExcludeObjectsParameters.
func (in *OracleSourceConfigExcludeObjectsParameters) DeepCopy() *OracleSourceConfigExcludeObjectsParameters {
	if in == nil {
		return nil
	}
	out := new(OracleSourceConfigExcludeObjectsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OracleSourceConfigIncludeObjectsInitParameters) DeepCopyInto(out *OracleSourceConfigIncludeObjectsInitParameters) {
	*out = *in
	if in.OracleSchemas != nil {
		in, out := &in.OracleSchemas, &out.OracleSchemas
		*out = make([]IncludeObjectsOracleSchemasInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OracleSourceConfigIncludeObjectsInitParameters.
func (in *OracleSourceConfigIncludeObjectsInitParameters) DeepCopy() *OracleSourceConfigIncludeObjectsInitParameters {
	if in == nil {
		return nil
	}
	out := new(OracleSourceConfigIncludeObjectsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OracleSourceConfigIncludeObjectsObservation) DeepCopyInto(out *OracleSourceConfigIncludeObjectsObservation) {
	*out = *in
	if in.OracleSchemas != nil {
		in, out := &in.OracleSchemas, &out.OracleSchemas
		*out = make([]IncludeObjectsOracleSchemasObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OracleSourceConfigIncludeObjectsObservation.
func (in *OracleSourceConfigIncludeObjectsObservation) DeepCopy() *OracleSourceConfigIncludeObjectsObservation {
	if in == nil {
		return nil
	}
	out := new(OracleSourceConfigIncludeObjectsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OracleSourceConfigIncludeObjectsParameters) DeepCopyInto(out *OracleSourceConfigIncludeObjectsParameters) {
	*out = *in
	if in.OracleSchemas != nil {
		in, out := &in.OracleSchemas, &out.OracleSchemas
		*out = make([]IncludeObjectsOracleSchemasParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OracleSourceConfigIncludeObjectsParameters.
func (in *OracleSourceConfigIncludeObjectsParameters) DeepCopy() *OracleSourceConfigIncludeObjectsParameters {
	if in == nil {
		return nil
	}
	out := new(OracleSourceConfigIncludeObjectsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OracleSourceConfigInitParameters) DeepCopyInto(out *OracleSourceConfigInitParameters) {
	*out = *in
	if in.DropLargeObjects != nil {
		in, out := &in.DropLargeObjects, &out.DropLargeObjects
		*out = new(DropLargeObjectsInitParameters)
		**out = **in
	}
	if in.ExcludeObjects != nil {
		in, out := &in.ExcludeObjects, &out.ExcludeObjects
		*out = new(OracleSourceConfigExcludeObjectsInitParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.IncludeObjects != nil {
		in, out := &in.IncludeObjects, &out.IncludeObjects
		*out = new(OracleSourceConfigIncludeObjectsInitParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.MaxConcurrentBackfillTasks != nil {
		in, out := &in.MaxConcurrentBackfillTasks, &out.MaxConcurrentBackfillTasks
		*out = new(float64)
		**out = **in
	}
	if in.MaxConcurrentCdcTasks != nil {
		in, out := &in.MaxConcurrentCdcTasks, &out.MaxConcurrentCdcTasks
		*out = new(float64)
		**out = **in
	}
	if in.StreamLargeObjects != nil {
		in, out := &in.StreamLargeObjects, &out.StreamLargeObjects
		*out = new(StreamLargeObjectsInitParameters)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OracleSourceConfigInitParameters.
func (in *OracleSourceConfigInitParameters) DeepCopy() *OracleSourceConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(OracleSourceConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OracleSourceConfigObservation) DeepCopyInto(out *OracleSourceConfigObservation) {
	*out = *in
	if in.DropLargeObjects != nil {
		in, out := &in.DropLargeObjects, &out.DropLargeObjects
		*out = new(DropLargeObjectsParameters)
		**out = **in
	}
	if in.ExcludeObjects != nil {
		in, out := &in.ExcludeObjects, &out.ExcludeObjects
		*out = new(OracleSourceConfigExcludeObjectsObservation)
		(*in).DeepCopyInto(*out)
	}
	if in.IncludeObjects != nil {
		in, out := &in.IncludeObjects, &out.IncludeObjects
		*out = new(OracleSourceConfigIncludeObjectsObservation)
		(*in).DeepCopyInto(*out)
	}
	if in.MaxConcurrentBackfillTasks != nil {
		in, out := &in.MaxConcurrentBackfillTasks, &out.MaxConcurrentBackfillTasks
		*out = new(float64)
		**out = **in
	}
	if in.MaxConcurrentCdcTasks != nil {
		in, out := &in.MaxConcurrentCdcTasks, &out.MaxConcurrentCdcTasks
		*out = new(float64)
		**out = **in
	}
	if in.StreamLargeObjects != nil {
		in, out := &in.StreamLargeObjects, &out.StreamLargeObjects
		*out = new(StreamLargeObjectsParameters)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OracleSourceConfigObservation.
func (in *OracleSourceConfigObservation) DeepCopy() *OracleSourceConfigObservation {
	if in == nil {
		return nil
	}
	out := new(OracleSourceConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OracleSourceConfigParameters) DeepCopyInto(out *OracleSourceConfigParameters) {
	*out = *in
	if in.DropLargeObjects != nil {
		in, out := &in.DropLargeObjects, &out.DropLargeObjects
		*out = new(DropLargeObjectsParameters)
		**out = **in
	}
	if in.ExcludeObjects != nil {
		in, out := &in.ExcludeObjects, &out.ExcludeObjects
		*out = new(OracleSourceConfigExcludeObjectsParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.IncludeObjects != nil {
		in, out := &in.IncludeObjects, &out.IncludeObjects
		*out = new(OracleSourceConfigIncludeObjectsParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.MaxConcurrentBackfillTasks != nil {
		in, out := &in.MaxConcurrentBackfillTasks, &out.MaxConcurrentBackfillTasks
		*out = new(float64)
		**out = **in
	}
	if in.MaxConcurrentCdcTasks != nil {
		in, out := &in.MaxConcurrentCdcTasks, &out.MaxConcurrentCdcTasks
		*out = new(float64)
		**out = **in
	}
	if in.StreamLargeObjects != nil {
		in, out := &in.StreamLargeObjects, &out.StreamLargeObjects
		*out = new(StreamLargeObjectsParameters)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OracleSourceConfigParameters.
func (in *OracleSourceConfigParameters) DeepCopy() *OracleSourceConfigParameters {
	if in == nil {
		return nil
	}
	out := new(OracleSourceConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OracleTablesInitParameters) DeepCopyInto(out *OracleTablesInitParameters) {
	*out = *in
	if in.OracleColumns != nil {
		in, out := &in.OracleColumns, &out.OracleColumns
		*out = make([]OracleColumnsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Table != nil {
		in, out := &in.Table, &out.Table
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OracleTablesInitParameters.
func (in *OracleTablesInitParameters) DeepCopy() *OracleTablesInitParameters {
	if in == nil {
		return nil
	}
	out := new(OracleTablesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OracleTablesObservation) DeepCopyInto(out *OracleTablesObservation) {
	*out = *in
	if in.OracleColumns != nil {
		in, out := &in.OracleColumns, &out.OracleColumns
		*out = make([]OracleColumnsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Table != nil {
		in, out := &in.Table, &out.Table
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OracleTablesObservation.
func (in *OracleTablesObservation) DeepCopy() *OracleTablesObservation {
	if in == nil {
		return nil
	}
	out := new(OracleTablesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OracleTablesOracleColumnsInitParameters) DeepCopyInto(out *OracleTablesOracleColumnsInitParameters) {
	*out = *in
	if in.Column != nil {
		in, out := &in.Column, &out.Column
		*out = new(string)
		**out = **in
	}
	if in.DataType != nil {
		in, out := &in.DataType, &out.DataType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OracleTablesOracleColumnsInitParameters.
func (in *OracleTablesOracleColumnsInitParameters) DeepCopy() *OracleTablesOracleColumnsInitParameters {
	if in == nil {
		return nil
	}
	out := new(OracleTablesOracleColumnsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OracleTablesOracleColumnsObservation) DeepCopyInto(out *OracleTablesOracleColumnsObservation) {
	*out = *in
	if in.Column != nil {
		in, out := &in.Column, &out.Column
		*out = new(string)
		**out = **in
	}
	if in.DataType != nil {
		in, out := &in.DataType, &out.DataType
		*out = new(string)
		**out = **in
	}
	if in.Encoding != nil {
		in, out := &in.Encoding, &out.Encoding
		*out = new(string)
		**out = **in
	}
	if in.Length != nil {
		in, out := &in.Length, &out.Length
		*out = new(float64)
		**out = **in
	}
	if in.Nullable != nil {
		in, out := &in.Nullable, &out.Nullable
		*out = new(bool)
		**out = **in
	}
	if in.OrdinalPosition != nil {
		in, out := &in.OrdinalPosition, &out.OrdinalPosition
		*out = new(float64)
		**out = **in
	}
	if in.Precision != nil {
		in, out := &in.Precision, &out.Precision
		*out = new(float64)
		**out = **in
	}
	if in.PrimaryKey != nil {
		in, out := &in.PrimaryKey, &out.PrimaryKey
		*out = new(bool)
		**out = **in
	}
	if in.Scale != nil {
		in, out := &in.Scale, &out.Scale
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OracleTablesOracleColumnsObservation.
func (in *OracleTablesOracleColumnsObservation) DeepCopy() *OracleTablesOracleColumnsObservation {
	if in == nil {
		return nil
	}
	out := new(OracleTablesOracleColumnsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OracleTablesOracleColumnsParameters) DeepCopyInto(out *OracleTablesOracleColumnsParameters) {
	*out = *in
	if in.Column != nil {
		in, out := &in.Column, &out.Column
		*out = new(string)
		**out = **in
	}
	if in.DataType != nil {
		in, out := &in.DataType, &out.DataType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OracleTablesOracleColumnsParameters.
func (in *OracleTablesOracleColumnsParameters) DeepCopy() *OracleTablesOracleColumnsParameters {
	if in == nil {
		return nil
	}
	out := new(OracleTablesOracleColumnsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OracleTablesParameters) DeepCopyInto(out *OracleTablesParameters) {
	*out = *in
	if in.OracleColumns != nil {
		in, out := &in.OracleColumns, &out.OracleColumns
		*out = make([]OracleColumnsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Table != nil {
		in, out := &in.Table, &out.Table
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OracleTablesParameters.
func (in *OracleTablesParameters) DeepCopy() *OracleTablesParameters {
	if in == nil {
		return nil
	}
	out := new(OracleTablesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PostgresqlColumnsInitParameters) DeepCopyInto(out *PostgresqlColumnsInitParameters) {
	*out = *in
	if in.Column != nil {
		in, out := &in.Column, &out.Column
		*out = new(string)
		**out = **in
	}
	if in.DataType != nil {
		in, out := &in.DataType, &out.DataType
		*out = new(string)
		**out = **in
	}
	if in.Nullable != nil {
		in, out := &in.Nullable, &out.Nullable
		*out = new(bool)
		**out = **in
	}
	if in.OrdinalPosition != nil {
		in, out := &in.OrdinalPosition, &out.OrdinalPosition
		*out = new(float64)
		**out = **in
	}
	if in.PrimaryKey != nil {
		in, out := &in.PrimaryKey, &out.PrimaryKey
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PostgresqlColumnsInitParameters.
func (in *PostgresqlColumnsInitParameters) DeepCopy() *PostgresqlColumnsInitParameters {
	if in == nil {
		return nil
	}
	out := new(PostgresqlColumnsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PostgresqlColumnsObservation) DeepCopyInto(out *PostgresqlColumnsObservation) {
	*out = *in
	if in.Column != nil {
		in, out := &in.Column, &out.Column
		*out = new(string)
		**out = **in
	}
	if in.DataType != nil {
		in, out := &in.DataType, &out.DataType
		*out = new(string)
		**out = **in
	}
	if in.Length != nil {
		in, out := &in.Length, &out.Length
		*out = new(float64)
		**out = **in
	}
	if in.Nullable != nil {
		in, out := &in.Nullable, &out.Nullable
		*out = new(bool)
		**out = **in
	}
	if in.OrdinalPosition != nil {
		in, out := &in.OrdinalPosition, &out.OrdinalPosition
		*out = new(float64)
		**out = **in
	}
	if in.Precision != nil {
		in, out := &in.Precision, &out.Precision
		*out = new(float64)
		**out = **in
	}
	if in.PrimaryKey != nil {
		in, out := &in.PrimaryKey, &out.PrimaryKey
		*out = new(bool)
		**out = **in
	}
	if in.Scale != nil {
		in, out := &in.Scale, &out.Scale
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PostgresqlColumnsObservation.
func (in *PostgresqlColumnsObservation) DeepCopy() *PostgresqlColumnsObservation {
	if in == nil {
		return nil
	}
	out := new(PostgresqlColumnsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PostgresqlColumnsParameters) DeepCopyInto(out *PostgresqlColumnsParameters) {
	*out = *in
	if in.Column != nil {
		in, out := &in.Column, &out.Column
		*out = new(string)
		**out = **in
	}
	if in.DataType != nil {
		in, out := &in.DataType, &out.DataType
		*out = new(string)
		**out = **in
	}
	if in.Nullable != nil {
		in, out := &in.Nullable, &out.Nullable
		*out = new(bool)
		**out = **in
	}
	if in.OrdinalPosition != nil {
		in, out := &in.OrdinalPosition, &out.OrdinalPosition
		*out = new(float64)
		**out = **in
	}
	if in.PrimaryKey != nil {
		in, out := &in.PrimaryKey, &out.PrimaryKey
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PostgresqlColumnsParameters.
func (in *PostgresqlColumnsParameters) DeepCopy() *PostgresqlColumnsParameters {
	if in == nil {
		return nil
	}
	out := new(PostgresqlColumnsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PostgresqlExcludedObjectsInitParameters) DeepCopyInto(out *PostgresqlExcludedObjectsInitParameters) {
	*out = *in
	if in.PostgresqlSchemas != nil {
		in, out := &in.PostgresqlSchemas, &out.PostgresqlSchemas
		*out = make([]PostgresqlSchemasInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PostgresqlExcludedObjectsInitParameters.
func (in *PostgresqlExcludedObjectsInitParameters) DeepCopy() *PostgresqlExcludedObjectsInitParameters {
	if in == nil {
		return nil
	}
	out := new(PostgresqlExcludedObjectsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PostgresqlExcludedObjectsObservation) DeepCopyInto(out *PostgresqlExcludedObjectsObservation) {
	*out = *in
	if in.PostgresqlSchemas != nil {
		in, out := &in.PostgresqlSchemas, &out.PostgresqlSchemas
		*out = make([]PostgresqlSchemasObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PostgresqlExcludedObjectsObservation.
func (in *PostgresqlExcludedObjectsObservation) DeepCopy() *PostgresqlExcludedObjectsObservation {
	if in == nil {
		return nil
	}
	out := new(PostgresqlExcludedObjectsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PostgresqlExcludedObjectsParameters) DeepCopyInto(out *PostgresqlExcludedObjectsParameters) {
	*out = *in
	if in.PostgresqlSchemas != nil {
		in, out := &in.PostgresqlSchemas, &out.PostgresqlSchemas
		*out = make([]PostgresqlSchemasParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PostgresqlExcludedObjectsParameters.
func (in *PostgresqlExcludedObjectsParameters) DeepCopy() *PostgresqlExcludedObjectsParameters {
	if in == nil {
		return nil
	}
	out := new(PostgresqlExcludedObjectsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PostgresqlProfileInitParameters) DeepCopyInto(out *PostgresqlProfileInitParameters) {
	*out = *in
	if in.Database != nil {
		in, out := &in.Database, &out.Database
		*out = new(string)
		**out = **in
	}
	if in.DatabaseRef != nil {
		in, out := &in.DatabaseRef, &out.DatabaseRef
		*out = new(v1.NamespacedReference)
		(*in).DeepCopyInto(*out)
	}
	if in.DatabaseSelector != nil {
		in, out := &in.DatabaseSelector, &out.DatabaseSelector
		*out = new(v1.NamespacedSelector)
		(*in).DeepCopyInto(*out)
	}
	if in.Hostname != nil {
		in, out := &in.Hostname, &out.Hostname
		*out = new(string)
		**out = **in
	}
	if in.HostnameRef != nil {
		in, out := &in.HostnameRef, &out.HostnameRef
		*out = new(v1.NamespacedReference)
		(*in).DeepCopyInto(*out)
	}
	if in.HostnameSelector != nil {
		in, out := &in.HostnameSelector, &out.HostnameSelector
		*out = new(v1.NamespacedSelector)
		(*in).DeepCopyInto(*out)
	}
	if in.PasswordSecretRef != nil {
		in, out := &in.PasswordSecretRef, &out.PasswordSecretRef
		*out = new(v1.LocalSecretKeySelector)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
	if in.SecretManagerStoredPassword != nil {
		in, out := &in.SecretManagerStoredPassword, &out.SecretManagerStoredPassword
		*out = new(string)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
	if in.UsernameRef != nil {
		in, out := &in.UsernameRef, &out.UsernameRef
		*out = new(v1.NamespacedReference)
		(*in).DeepCopyInto(*out)
	}
	if in.UsernameSelector != nil {
		in, out := &in.UsernameSelector, &out.UsernameSelector
		*out = new(v1.NamespacedSelector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PostgresqlProfileInitParameters.
func (in *PostgresqlProfileInitParameters) DeepCopy() *PostgresqlProfileInitParameters {
	if in == nil {
		return nil
	}
	out := new(PostgresqlProfileInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PostgresqlProfileObservation) DeepCopyInto(out *PostgresqlProfileObservation) {
	*out = *in
	if in.Database != nil {
		in, out := &in.Database, &out.Database
		*out = new(string)
		**out = **in
	}
	if in.Hostname != nil {
		in, out := &in.Hostname, &out.Hostname
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
	if in.SecretManagerStoredPassword != nil {
		in, out := &in.SecretManagerStoredPassword, &out.SecretManagerStoredPassword
		*out = new(string)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PostgresqlProfileObservation.
func (in *PostgresqlProfileObservation) DeepCopy() *PostgresqlProfileObservation {
	if in == nil {
		return nil
	}
	out := new(PostgresqlProfileObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PostgresqlProfileParameters) DeepCopyInto(out *PostgresqlProfileParameters) {
	*out = *in
	if in.Database != nil {
		in, out := &in.Database, &out.Database
		*out = new(string)
		**out = **in
	}
	if in.DatabaseRef != nil {
		in, out := &in.DatabaseRef, &out.DatabaseRef
		*out = new(v1.NamespacedReference)
		(*in).DeepCopyInto(*out)
	}
	if in.DatabaseSelector != nil {
		in, out := &in.DatabaseSelector, &out.DatabaseSelector
		*out = new(v1.NamespacedSelector)
		(*in).DeepCopyInto(*out)
	}
	if in.Hostname != nil {
		in, out := &in.Hostname, &out.Hostname
		*out = new(string)
		**out = **in
	}
	if in.HostnameRef != nil {
		in, out := &in.HostnameRef, &out.HostnameRef
		*out = new(v1.NamespacedReference)
		(*in).DeepCopyInto(*out)
	}
	if in.HostnameSelector != nil {
		in, out := &in.HostnameSelector, &out.HostnameSelector
		*out = new(v1.NamespacedSelector)
		(*in).DeepCopyInto(*out)
	}
	if in.PasswordSecretRef != nil {
		in, out := &in.PasswordSecretRef, &out.PasswordSecretRef
		*out = new(v1.LocalSecretKeySelector)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
	if in.SecretManagerStoredPassword != nil {
		in, out := &in.SecretManagerStoredPassword, &out.SecretManagerStoredPassword
		*out = new(string)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
	if in.UsernameRef != nil {
		in, out := &in.UsernameRef, &out.UsernameRef
		*out = new(v1.NamespacedReference)
		(*in).DeepCopyInto(*out)
	}
	if in.UsernameSelector != nil {
		in, out := &in.UsernameSelector, &out.UsernameSelector
		*out = new(v1.NamespacedSelector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PostgresqlProfileParameters.
func (in *PostgresqlProfileParameters) DeepCopy() *PostgresqlProfileParameters {
	if in == nil {
		return nil
	}
	out := new(PostgresqlProfileParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PostgresqlSchemasInitParameters) DeepCopyInto(out *PostgresqlSchemasInitParameters) {
	*out = *in
	if in.PostgresqlTables != nil {
		in, out := &in.PostgresqlTables, &out.PostgresqlTables
		*out = make([]PostgresqlTablesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Schema != nil {
		in, out := &in.Schema, &out.Schema
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PostgresqlSchemasInitParameters.
func (in *PostgresqlSchemasInitParameters) DeepCopy() *PostgresqlSchemasInitParameters {
	if in == nil {
		return nil
	}
	out := new(PostgresqlSchemasInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PostgresqlSchemasObservation) DeepCopyInto(out *PostgresqlSchemasObservation) {
	*out = *in
	if in.PostgresqlTables != nil {
		in, out := &in.PostgresqlTables, &out.PostgresqlTables
		*out = make([]PostgresqlTablesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Schema != nil {
		in, out := &in.Schema, &out.Schema
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PostgresqlSchemasObservation.
func (in *PostgresqlSchemasObservation) DeepCopy() *PostgresqlSchemasObservation {
	if in == nil {
		return nil
	}
	out := new(PostgresqlSchemasObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PostgresqlSchemasParameters) DeepCopyInto(out *PostgresqlSchemasParameters) {
	*out = *in
	if in.PostgresqlTables != nil {
		in, out := &in.PostgresqlTables, &out.PostgresqlTables
		*out = make([]PostgresqlTablesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Schema != nil {
		in, out := &in.Schema, &out.Schema
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PostgresqlSchemasParameters.
func (in *PostgresqlSchemasParameters) DeepCopy() *PostgresqlSchemasParameters {
	if in == nil {
		return nil
	}
	out := new(PostgresqlSchemasParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PostgresqlSchemasPostgresqlTablesInitParameters) DeepCopyInto(out *PostgresqlSchemasPostgresqlTablesInitParameters) {
	*out = *in
	if in.PostgresqlColumns != nil {
		in, out := &in.PostgresqlColumns, &out.PostgresqlColumns
		*out = make([]PostgresqlTablesPostgresqlColumnsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Table != nil {
		in, out := &in.Table, &out.Table
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PostgresqlSchemasPostgresqlTablesInitParameters.
func (in *PostgresqlSchemasPostgresqlTablesInitParameters) DeepCopy() *PostgresqlSchemasPostgresqlTablesInitParameters {
	if in == nil {
		return nil
	}
	out := new(PostgresqlSchemasPostgresqlTablesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PostgresqlSchemasPostgresqlTablesObservation) DeepCopyInto(out *PostgresqlSchemasPostgresqlTablesObservation) {
	*out = *in
	if in.PostgresqlColumns != nil {
		in, out := &in.PostgresqlColumns, &out.PostgresqlColumns
		*out = make([]PostgresqlTablesPostgresqlColumnsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Table != nil {
		in, out := &in.Table, &out.Table
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PostgresqlSchemasPostgresqlTablesObservation.
func (in *PostgresqlSchemasPostgresqlTablesObservation) DeepCopy() *PostgresqlSchemasPostgresqlTablesObservation {
	if in == nil {
		return nil
	}
	out := new(PostgresqlSchemasPostgresqlTablesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PostgresqlSchemasPostgresqlTablesParameters) DeepCopyInto(out *PostgresqlSchemasPostgresqlTablesParameters) {
	*out = *in
	if in.PostgresqlColumns != nil {
		in, out := &in.PostgresqlColumns, &out.PostgresqlColumns
		*out = make([]PostgresqlTablesPostgresqlColumnsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Table != nil {
		in, out := &in.Table, &out.Table
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PostgresqlSchemasPostgresqlTablesParameters.
func (in *PostgresqlSchemasPostgresqlTablesParameters) DeepCopy() *PostgresqlSchemasPostgresqlTablesParameters {
	if in == nil {
		return nil
	}
	out := new(PostgresqlSchemasPostgresqlTablesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PostgresqlSchemasPostgresqlTablesPostgresqlColumnsInitParameters) DeepCopyInto(out *PostgresqlSchemasPostgresqlTablesPostgresqlColumnsInitParameters) {
	*out = *in
	if in.Column != nil {
		in, out := &in.Column, &out.Column
		*out = new(string)
		**out = **in
	}
	if in.DataType != nil {
		in, out := &in.DataType, &out.DataType
		*out = new(string)
		**out = **in
	}
	if in.Nullable != nil {
		in, out := &in.Nullable, &out.Nullable
		*out = new(bool)
		**out = **in
	}
	if in.OrdinalPosition != nil {
		in, out := &in.OrdinalPosition, &out.OrdinalPosition
		*out = new(float64)
		**out = **in
	}
	if in.PrimaryKey != nil {
		in, out := &in.PrimaryKey, &out.PrimaryKey
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PostgresqlSchemasPostgresqlTablesPostgresqlColumnsInitParameters.
func (in *PostgresqlSchemasPostgresqlTablesPostgresqlColumnsInitParameters) DeepCopy() *PostgresqlSchemasPostgresqlTablesPostgresqlColumnsInitParameters {
	if in == nil {
		return nil
	}
	out := new(PostgresqlSchemasPostgresqlTablesPostgresqlColumnsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PostgresqlSchemasPostgresqlTablesPostgresqlColumnsObservation) DeepCopyInto(out *PostgresqlSchemasPostgresqlTablesPostgresqlColumnsObservation) {
	*out = *in
	if in.Column != nil {
		in, out := &in.Column, &out.Column
		*out = new(string)
		**out = **in
	}
	if in.DataType != nil {
		in, out := &in.DataType, &out.DataType
		*out = new(string)
		**out = **in
	}
	if in.Length != nil {
		in, out := &in.Length, &out.Length
		*out = new(float64)
		**out = **in
	}
	if in.Nullable != nil {
		in, out := &in.Nullable, &out.Nullable
		*out = new(bool)
		**out = **in
	}
	if in.OrdinalPosition != nil {
		in, out := &in.OrdinalPosition, &out.OrdinalPosition
		*out = new(float64)
		**out = **in
	}
	if in.Precision != nil {
		in, out := &in.Precision, &out.Precision
		*out = new(float64)
		**out = **in
	}
	if in.PrimaryKey != nil {
		in, out := &in.PrimaryKey, &out.PrimaryKey
		*out = new(bool)
		**out = **in
	}
	if in.Scale != nil {
		in, out := &in.Scale, &out.Scale
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PostgresqlSchemasPostgresqlTablesPostgresqlColumnsObservation.
func (in *PostgresqlSchemasPostgresqlTablesPostgresqlColumnsObservation) DeepCopy() *PostgresqlSchemasPostgresqlTablesPostgresqlColumnsObservation {
	if in == nil {
		return nil
	}
	out := new(PostgresqlSchemasPostgresqlTablesPostgresqlColumnsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PostgresqlSchemasPostgresqlTablesPostgresqlColumnsParameters) DeepCopyInto(out *PostgresqlSchemasPostgresqlTablesPostgresqlColumnsParameters) {
	*out = *in
	if in.Column != nil {
		in, out := &in.Column, &out.Column
		*out = new(string)
		**out = **in
	}
	if in.DataType != nil {
		in, out := &in.DataType, &out.DataType
		*out = new(string)
		**out = **in
	}
	if in.Nullable != nil {
		in, out := &in.Nullable, &out.Nullable
		*out = new(bool)
		**out = **in
	}
	if in.OrdinalPosition != nil {
		in, out := &in.OrdinalPosition, &out.OrdinalPosition
		*out = new(float64)
		**out = **in
	}
	if in.PrimaryKey != nil {
		in, out := &in.PrimaryKey, &out.PrimaryKey
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PostgresqlSchemasPostgresqlTablesPostgresqlColumnsParameters.
func (in *PostgresqlSchemasPostgresqlTablesPostgresqlColumnsParameters) DeepCopy() *PostgresqlSchemasPostgresqlTablesPostgresqlColumnsParameters {
	if in == nil {
		return nil
	}
	out := new(PostgresqlSchemasPostgresqlTablesPostgresqlColumnsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PostgresqlSourceConfigExcludeObjectsInitParameters) DeepCopyInto(out *PostgresqlSourceConfigExcludeObjectsInitParameters) {
	*out = *in
	if in.PostgresqlSchemas != nil {
		in, out := &in.PostgresqlSchemas, &out.PostgresqlSchemas
		*out = make([]ExcludeObjectsPostgresqlSchemasInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PostgresqlSourceConfigExcludeObjectsInitParameters.
func (in *PostgresqlSourceConfigExcludeObjectsInitParameters) DeepCopy() *PostgresqlSourceConfigExcludeObjectsInitParameters {
	if in == nil {
		return nil
	}
	out := new(PostgresqlSourceConfigExcludeObjectsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PostgresqlSourceConfigExcludeObjectsObservation) DeepCopyInto(out *PostgresqlSourceConfigExcludeObjectsObservation) {
	*out = *in
	if in.PostgresqlSchemas != nil {
		in, out := &in.PostgresqlSchemas, &out.PostgresqlSchemas
		*out = make([]ExcludeObjectsPostgresqlSchemasObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PostgresqlSourceConfigExcludeObjectsObservation.
func (in *PostgresqlSourceConfigExcludeObjectsObservation) DeepCopy() *PostgresqlSourceConfigExcludeObjectsObservation {
	if in == nil {
		return nil
	}
	out := new(PostgresqlSourceConfigExcludeObjectsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PostgresqlSourceConfigExcludeObjectsParameters) DeepCopyInto(out *PostgresqlSourceConfigExcludeObjectsParameters) {
	*out = *in
	if in.PostgresqlSchemas != nil {
		in, out := &in.PostgresqlSchemas, &out.PostgresqlSchemas
		*out = make([]ExcludeObjectsPostgresqlSchemasParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PostgresqlSourceConfigExcludeObjectsParameters.
func (in *PostgresqlSourceConfigExcludeObjectsParameters) DeepCopy() *PostgresqlSourceConfigExcludeObjectsParameters {
	if in == nil {
		return nil
	}
	out := new(PostgresqlSourceConfigExcludeObjectsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PostgresqlSourceConfigIncludeObjectsInitParameters) DeepCopyInto(out *PostgresqlSourceConfigIncludeObjectsInitParameters) {
	*out = *in
	if in.PostgresqlSchemas != nil {
		in, out := &in.PostgresqlSchemas, &out.PostgresqlSchemas
		*out = make([]IncludeObjectsPostgresqlSchemasInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PostgresqlSourceConfigIncludeObjectsInitParameters.
func (in *PostgresqlSourceConfigIncludeObjectsInitParameters) DeepCopy() *PostgresqlSourceConfigIncludeObjectsInitParameters {
	if in == nil {
		return nil
	}
	out := new(PostgresqlSourceConfigIncludeObjectsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PostgresqlSourceConfigIncludeObjectsObservation) DeepCopyInto(out *PostgresqlSourceConfigIncludeObjectsObservation) {
	*out = *in
	if in.PostgresqlSchemas != nil {
		in, out := &in.PostgresqlSchemas, &out.PostgresqlSchemas
		*out = make([]IncludeObjectsPostgresqlSchemasObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PostgresqlSourceConfigIncludeObjectsObservation.
func (in *PostgresqlSourceConfigIncludeObjectsObservation) DeepCopy() *PostgresqlSourceConfigIncludeObjectsObservation {
	if in == nil {
		return nil
	}
	out := new(PostgresqlSourceConfigIncludeObjectsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PostgresqlSourceConfigIncludeObjectsParameters) DeepCopyInto(out *PostgresqlSourceConfigIncludeObjectsParameters) {
	*out = *in
	if in.PostgresqlSchemas != nil {
		in, out := &in.PostgresqlSchemas, &out.PostgresqlSchemas
		*out = make([]IncludeObjectsPostgresqlSchemasParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PostgresqlSourceConfigIncludeObjectsParameters.
func (in *PostgresqlSourceConfigIncludeObjectsParameters) DeepCopy() *PostgresqlSourceConfigIncludeObjectsParameters {
	if in == nil {
		return nil
	}
	out := new(PostgresqlSourceConfigIncludeObjectsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PostgresqlSourceConfigInitParameters) DeepCopyInto(out *PostgresqlSourceConfigInitParameters) {
	*out = *in
	if in.ExcludeObjects != nil {
		in, out := &in.ExcludeObjects, &out.ExcludeObjects
		*out = new(PostgresqlSourceConfigExcludeObjectsInitParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.IncludeObjects != nil {
		in, out := &in.IncludeObjects, &out.IncludeObjects
		*out = new(PostgresqlSourceConfigIncludeObjectsInitParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.MaxConcurrentBackfillTasks != nil {
		in, out := &in.MaxConcurrentBackfillTasks, &out.MaxConcurrentBackfillTasks
		*out = new(float64)
		**out = **in
	}
	if in.Publication != nil {
		in, out := &in.Publication, &out.Publication
		*out = new(string)
		**out = **in
	}
	if in.ReplicationSlot != nil {
		in, out := &in.ReplicationSlot, &out.ReplicationSlot
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PostgresqlSourceConfigInitParameters.
func (in *PostgresqlSourceConfigInitParameters) DeepCopy() *PostgresqlSourceConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(PostgresqlSourceConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PostgresqlSourceConfigObservation) DeepCopyInto(out *PostgresqlSourceConfigObservation) {
	*out = *in
	if in.ExcludeObjects != nil {
		in, out := &in.ExcludeObjects, &out.ExcludeObjects
		*out = new(PostgresqlSourceConfigExcludeObjectsObservation)
		(*in).DeepCopyInto(*out)
	}
	if in.IncludeObjects != nil {
		in, out := &in.IncludeObjects, &out.IncludeObjects
		*out = new(PostgresqlSourceConfigIncludeObjectsObservation)
		(*in).DeepCopyInto(*out)
	}
	if in.MaxConcurrentBackfillTasks != nil {
		in, out := &in.MaxConcurrentBackfillTasks, &out.MaxConcurrentBackfillTasks
		*out = new(float64)
		**out = **in
	}
	if in.Publication != nil {
		in, out := &in.Publication, &out.Publication
		*out = new(string)
		**out = **in
	}
	if in.ReplicationSlot != nil {
		in, out := &in.ReplicationSlot, &out.ReplicationSlot
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PostgresqlSourceConfigObservation.
func (in *PostgresqlSourceConfigObservation) DeepCopy() *PostgresqlSourceConfigObservation {
	if in == nil {
		return nil
	}
	out := new(PostgresqlSourceConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PostgresqlSourceConfigParameters) DeepCopyInto(out *PostgresqlSourceConfigParameters) {
	*out = *in
	if in.ExcludeObjects != nil {
		in, out := &in.ExcludeObjects, &out.ExcludeObjects
		*out = new(PostgresqlSourceConfigExcludeObjectsParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.IncludeObjects != nil {
		in, out := &in.IncludeObjects, &out.IncludeObjects
		*out = new(PostgresqlSourceConfigIncludeObjectsParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.MaxConcurrentBackfillTasks != nil {
		in, out := &in.MaxConcurrentBackfillTasks, &out.MaxConcurrentBackfillTasks
		*out = new(float64)
		**out = **in
	}
	if in.Publication != nil {
		in, out := &in.Publication, &out.Publication
		*out = new(string)
		**out = **in
	}
	if in.ReplicationSlot != nil {
		in, out := &in.ReplicationSlot, &out.ReplicationSlot
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PostgresqlSourceConfigParameters.
func (in *PostgresqlSourceConfigParameters) DeepCopy() *PostgresqlSourceConfigParameters {
	if in == nil {
		return nil
	}
	out := new(PostgresqlSourceConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PostgresqlTablesInitParameters) DeepCopyInto(out *PostgresqlTablesInitParameters) {
	*out = *in
	if in.PostgresqlColumns != nil {
		in, out := &in.PostgresqlColumns, &out.PostgresqlColumns
		*out = make([]PostgresqlColumnsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Table != nil {
		in, out := &in.Table, &out.Table
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PostgresqlTablesInitParameters.
func (in *PostgresqlTablesInitParameters) DeepCopy() *PostgresqlTablesInitParameters {
	if in == nil {
		return nil
	}
	out := new(PostgresqlTablesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PostgresqlTablesObservation) DeepCopyInto(out *PostgresqlTablesObservation) {
	*out = *in
	if in.PostgresqlColumns != nil {
		in, out := &in.PostgresqlColumns, &out.PostgresqlColumns
		*out = make([]PostgresqlColumnsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Table != nil {
		in, out := &in.Table, &out.Table
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PostgresqlTablesObservation.
func (in *PostgresqlTablesObservation) DeepCopy() *PostgresqlTablesObservation {
	if in == nil {
		return nil
	}
	out := new(PostgresqlTablesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PostgresqlTablesParameters) DeepCopyInto(out *PostgresqlTablesParameters) {
	*out = *in
	if in.PostgresqlColumns != nil {
		in, out := &in.PostgresqlColumns, &out.PostgresqlColumns
		*out = make([]PostgresqlColumnsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Table != nil {
		in, out := &in.Table, &out.Table
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PostgresqlTablesParameters.
func (in *PostgresqlTablesParameters) DeepCopy() *PostgresqlTablesParameters {
	if in == nil {
		return nil
	}
	out := new(PostgresqlTablesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PostgresqlTablesPostgresqlColumnsInitParameters) DeepCopyInto(out *PostgresqlTablesPostgresqlColumnsInitParameters) {
	*out = *in
	if in.Column != nil {
		in, out := &in.Column, &out.Column
		*out = new(string)
		**out = **in
	}
	if in.DataType != nil {
		in, out := &in.DataType, &out.DataType
		*out = new(string)
		**out = **in
	}
	if in.Nullable != nil {
		in, out := &in.Nullable, &out.Nullable
		*out = new(bool)
		**out = **in
	}
	if in.OrdinalPosition != nil {
		in, out := &in.OrdinalPosition, &out.OrdinalPosition
		*out = new(float64)
		**out = **in
	}
	if in.PrimaryKey != nil {
		in, out := &in.PrimaryKey, &out.PrimaryKey
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PostgresqlTablesPostgresqlColumnsInitParameters.
func (in *PostgresqlTablesPostgresqlColumnsInitParameters) DeepCopy() *PostgresqlTablesPostgresqlColumnsInitParameters {
	if in == nil {
		return nil
	}
	out := new(PostgresqlTablesPostgresqlColumnsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PostgresqlTablesPostgresqlColumnsObservation) DeepCopyInto(out *PostgresqlTablesPostgresqlColumnsObservation) {
	*out = *in
	if in.Column != nil {
		in, out := &in.Column, &out.Column
		*out = new(string)
		**out = **in
	}
	if in.DataType != nil {
		in, out := &in.DataType, &out.DataType
		*out = new(string)
		**out = **in
	}
	if in.Length != nil {
		in, out := &in.Length, &out.Length
		*out = new(float64)
		**out = **in
	}
	if in.Nullable != nil {
		in, out := &in.Nullable, &out.Nullable
		*out = new(bool)
		**out = **in
	}
	if in.OrdinalPosition != nil {
		in, out := &in.OrdinalPosition, &out.OrdinalPosition
		*out = new(float64)
		**out = **in
	}
	if in.Precision != nil {
		in, out := &in.Precision, &out.Precision
		*out = new(float64)
		**out = **in
	}
	if in.PrimaryKey != nil {
		in, out := &in.PrimaryKey, &out.PrimaryKey
		*out = new(bool)
		**out = **in
	}
	if in.Scale != nil {
		in, out := &in.Scale, &out.Scale
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PostgresqlTablesPostgresqlColumnsObservation.
func (in *PostgresqlTablesPostgresqlColumnsObservation) DeepCopy() *PostgresqlTablesPostgresqlColumnsObservation {
	if in == nil {
		return nil
	}
	out := new(PostgresqlTablesPostgresqlColumnsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PostgresqlTablesPostgresqlColumnsParameters) DeepCopyInto(out *PostgresqlTablesPostgresqlColumnsParameters) {
	*out = *in
	if in.Column != nil {
		in, out := &in.Column, &out.Column
		*out = new(string)
		**out = **in
	}
	if in.DataType != nil {
		in, out := &in.DataType, &out.DataType
		*out = new(string)
		**out = **in
	}
	if in.Nullable != nil {
		in, out := &in.Nullable, &out.Nullable
		*out = new(bool)
		**out = **in
	}
	if in.OrdinalPosition != nil {
		in, out := &in.OrdinalPosition, &out.OrdinalPosition
		*out = new(float64)
		**out = **in
	}
	if in.PrimaryKey != nil {
		in, out := &in.PrimaryKey, &out.PrimaryKey
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PostgresqlTablesPostgresqlColumnsParameters.
func (in *PostgresqlTablesPostgresqlColumnsParameters) DeepCopy() *PostgresqlTablesPostgresqlColumnsParameters {
	if in == nil {
		return nil
	}
	out := new(PostgresqlTablesPostgresqlColumnsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateConnection) DeepCopyInto(out *PrivateConnection) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateConnection.
func (in *PrivateConnection) DeepCopy() *PrivateConnection {
	if in == nil {
		return nil
	}
	out := new(PrivateConnection)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *PrivateConnection) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateConnectionInitParameters) DeepCopyInto(out *PrivateConnectionInitParameters) {
	*out = *in
	if in.CreateWithoutValidation != nil {
		in, out := &in.CreateWithoutValidation, &out.CreateWithoutValidation
		*out = new(bool)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.PscInterfaceConfig != nil {
		in, out := &in.PscInterfaceConfig, &out.PscInterfaceConfig
		*out = new(PscInterfaceConfigInitParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.VPCPeeringConfig != nil {
		in, out := &in.VPCPeeringConfig, &out.VPCPeeringConfig
		*out = new(VPCPeeringConfigInitParameters)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateConnectionInitParameters.
func (in *PrivateConnectionInitParameters) DeepCopy() *PrivateConnectionInitParameters {
	if in == nil {
		return nil
	}
	out := new(PrivateConnectionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateConnectionList) DeepCopyInto(out *PrivateConnectionList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]PrivateConnection, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateConnectionList.
func (in *PrivateConnectionList) DeepCopy() *PrivateConnectionList {
	if in == nil {
		return nil
	}
	out := new(PrivateConnectionList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *PrivateConnectionList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateConnectionObservation) DeepCopyInto(out *PrivateConnectionObservation) {
	*out = *in
	if in.CreateWithoutValidation != nil {
		in, out := &in.CreateWithoutValidation, &out.CreateWithoutValidation
		*out = new(bool)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.EffectiveLabels != nil {
		in, out := &in.EffectiveLabels, &out.EffectiveLabels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Error != nil {
		in, out := &in.Error, &out.Error
		*out = make([]ErrorObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.PscInterfaceConfig != nil {
		in, out := &in.PscInterfaceConfig, &out.PscInterfaceConfig
		*out = new(PscInterfaceConfigObservation)
		(*in).DeepCopyInto(*out)
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.TerraformLabels != nil {
		in, out := &in.TerraformLabels, &out.TerraformLabels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.VPCPeeringConfig != nil {
		in, out := &in.VPCPeeringConfig, &out.VPCPeeringConfig
		*out = new(VPCPeeringConfigObservation)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateConnectionObservation.
func (in *PrivateConnectionObservation) DeepCopy() *PrivateConnectionObservation {
	if in == nil {
		return nil
	}
	out := new(PrivateConnectionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateConnectionParameters) DeepCopyInto(out *PrivateConnectionParameters) {
	*out = *in
	if in.CreateWithoutValidation != nil {
		in, out := &in.CreateWithoutValidation, &out.CreateWithoutValidation
		*out = new(bool)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.PscInterfaceConfig != nil {
		in, out := &in.PscInterfaceConfig, &out.PscInterfaceConfig
		*out = new(PscInterfaceConfigParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.VPCPeeringConfig != nil {
		in, out := &in.VPCPeeringConfig, &out.VPCPeeringConfig
		*out = new(VPCPeeringConfigParameters)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateConnectionParameters.
func (in *PrivateConnectionParameters) DeepCopy() *PrivateConnectionParameters {
	if in == nil {
		return nil
	}
	out := new(PrivateConnectionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateConnectionSpec) DeepCopyInto(out *PrivateConnectionSpec) {
	*out = *in
	in.ManagedResourceSpec.DeepCopyInto(&out.ManagedResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateConnectionSpec.
func (in *PrivateConnectionSpec) DeepCopy() *PrivateConnectionSpec {
	if in == nil {
		return nil
	}
	out := new(PrivateConnectionSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateConnectionStatus) DeepCopyInto(out *PrivateConnectionStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateConnectionStatus.
func (in *PrivateConnectionStatus) DeepCopy() *PrivateConnectionStatus {
	if in == nil {
		return nil
	}
	out := new(PrivateConnectionStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateConnectivityInitParameters) DeepCopyInto(out *PrivateConnectivityInitParameters) {
	*out = *in
	if in.PrivateConnection != nil {
		in, out := &in.PrivateConnection, &out.PrivateConnection
		*out = new(string)
		**out = **in
	}
	if in.PrivateConnectionRef != nil {
		in, out := &in.PrivateConnectionRef, &out.PrivateConnectionRef
		*out = new(v1.NamespacedReference)
		(*in).DeepCopyInto(*out)
	}
	if in.PrivateConnectionSelector != nil {
		in, out := &in.PrivateConnectionSelector, &out.PrivateConnectionSelector
		*out = new(v1.NamespacedSelector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateConnectivityInitParameters.
func (in *PrivateConnectivityInitParameters) DeepCopy() *PrivateConnectivityInitParameters {
	if in == nil {
		return nil
	}
	out := new(PrivateConnectivityInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateConnectivityObservation) DeepCopyInto(out *PrivateConnectivityObservation) {
	*out = *in
	if in.PrivateConnection != nil {
		in, out := &in.PrivateConnection, &out.PrivateConnection
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateConnectivityObservation.
func (in *PrivateConnectivityObservation) DeepCopy() *PrivateConnectivityObservation {
	if in == nil {
		return nil
	}
	out := new(PrivateConnectivityObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateConnectivityParameters) DeepCopyInto(out *PrivateConnectivityParameters) {
	*out = *in
	if in.PrivateConnection != nil {
		in, out := &in.PrivateConnection, &out.PrivateConnection
		*out = new(string)
		**out = **in
	}
	if in.PrivateConnectionRef != nil {
		in, out := &in.PrivateConnectionRef, &out.PrivateConnectionRef
		*out = new(v1.NamespacedReference)
		(*in).DeepCopyInto(*out)
	}
	if in.PrivateConnectionSelector != nil {
		in, out := &in.PrivateConnectionSelector, &out.PrivateConnectionSelector
		*out = new(v1.NamespacedSelector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateConnectivityParameters.
func (in *PrivateConnectivityParameters) DeepCopy() *PrivateConnectivityParameters {
	if in == nil {
		return nil
	}
	out := new(PrivateConnectivityParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PscInterfaceConfigInitParameters) DeepCopyInto(out *PscInterfaceConfigInitParameters) {
	*out = *in
	if in.NetworkAttachment != nil {
		in, out := &in.NetworkAttachment, &out.NetworkAttachment
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PscInterfaceConfigInitParameters.
func (in *PscInterfaceConfigInitParameters) DeepCopy() *PscInterfaceConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(PscInterfaceConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PscInterfaceConfigObservation) DeepCopyInto(out *PscInterfaceConfigObservation) {
	*out = *in
	if in.NetworkAttachment != nil {
		in, out := &in.NetworkAttachment, &out.NetworkAttachment
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PscInterfaceConfigObservation.
func (in *PscInterfaceConfigObservation) DeepCopy() *PscInterfaceConfigObservation {
	if in == nil {
		return nil
	}
	out := new(PscInterfaceConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PscInterfaceConfigParameters) DeepCopyInto(out *PscInterfaceConfigParameters) {
	*out = *in
	if in.NetworkAttachment != nil {
		in, out := &in.NetworkAttachment, &out.NetworkAttachment
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PscInterfaceConfigParameters.
func (in *PscInterfaceConfigParameters) DeepCopy() *PscInterfaceConfigParameters {
	if in == nil {
		return nil
	}
	out := new(PscInterfaceConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLServerExcludedObjectsInitParameters) DeepCopyInto(out *SQLServerExcludedObjectsInitParameters) {
	*out = *in
	if in.Schemas != nil {
		in, out := &in.Schemas, &out.Schemas
		*out = make([]SchemasInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLServerExcludedObjectsInitParameters.
func (in *SQLServerExcludedObjectsInitParameters) DeepCopy() *SQLServerExcludedObjectsInitParameters {
	if in == nil {
		return nil
	}
	out := new(SQLServerExcludedObjectsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLServerExcludedObjectsObservation) DeepCopyInto(out *SQLServerExcludedObjectsObservation) {
	*out = *in
	if in.Schemas != nil {
		in, out := &in.Schemas, &out.Schemas
		*out = make([]SchemasObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLServerExcludedObjectsObservation.
func (in *SQLServerExcludedObjectsObservation) DeepCopy() *SQLServerExcludedObjectsObservation {
	if in == nil {
		return nil
	}
	out := new(SQLServerExcludedObjectsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLServerExcludedObjectsParameters) DeepCopyInto(out *SQLServerExcludedObjectsParameters) {
	*out = *in
	if in.Schemas != nil {
		in, out := &in.Schemas, &out.Schemas
		*out = make([]SchemasParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLServerExcludedObjectsParameters.
func (in *SQLServerExcludedObjectsParameters) DeepCopy() *SQLServerExcludedObjectsParameters {
	if in == nil {
		return nil
	}
	out := new(SQLServerExcludedObjectsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLServerProfileInitParameters) DeepCopyInto(out *SQLServerProfileInitParameters) {
	*out = *in
	if in.Database != nil {
		in, out := &in.Database, &out.Database
		*out = new(string)
		**out = **in
	}
	if in.DatabaseRef != nil {
		in, out := &in.DatabaseRef, &out.DatabaseRef
		*out = new(v1.NamespacedReference)
		(*in).DeepCopyInto(*out)
	}
	if in.DatabaseSelector != nil {
		in, out := &in.DatabaseSelector, &out.DatabaseSelector
		*out = new(v1.NamespacedSelector)
		(*in).DeepCopyInto(*out)
	}
	if in.Hostname != nil {
		in, out := &in.Hostname, &out.Hostname
		*out = new(string)
		**out = **in
	}
	if in.HostnameRef != nil {
		in, out := &in.HostnameRef, &out.HostnameRef
		*out = new(v1.NamespacedReference)
		(*in).DeepCopyInto(*out)
	}
	if in.HostnameSelector != nil {
		in, out := &in.HostnameSelector, &out.HostnameSelector
		*out = new(v1.NamespacedSelector)
		(*in).DeepCopyInto(*out)
	}
	if in.PasswordSecretRef != nil {
		in, out := &in.PasswordSecretRef, &out.PasswordSecretRef
		*out = new(v1.LocalSecretKeySelector)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
	if in.SecretManagerStoredPassword != nil {
		in, out := &in.SecretManagerStoredPassword, &out.SecretManagerStoredPassword
		*out = new(string)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
	if in.UsernameRef != nil {
		in, out := &in.UsernameRef, &out.UsernameRef
		*out = new(v1.NamespacedReference)
		(*in).DeepCopyInto(*out)
	}
	if in.UsernameSelector != nil {
		in, out := &in.UsernameSelector, &out.UsernameSelector
		*out = new(v1.NamespacedSelector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLServerProfileInitParameters.
func (in *SQLServerProfileInitParameters) DeepCopy() *SQLServerProfileInitParameters {
	if in == nil {
		return nil
	}
	out := new(SQLServerProfileInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLServerProfileObservation) DeepCopyInto(out *SQLServerProfileObservation) {
	*out = *in
	if in.Database != nil {
		in, out := &in.Database, &out.Database
		*out = new(string)
		**out = **in
	}
	if in.Hostname != nil {
		in, out := &in.Hostname, &out.Hostname
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
	if in.SecretManagerStoredPassword != nil {
		in, out := &in.SecretManagerStoredPassword, &out.SecretManagerStoredPassword
		*out = new(string)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLServerProfileObservation.
func (in *SQLServerProfileObservation) DeepCopy() *SQLServerProfileObservation {
	if in == nil {
		return nil
	}
	out := new(SQLServerProfileObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLServerProfileParameters) DeepCopyInto(out *SQLServerProfileParameters) {
	*out = *in
	if in.Database != nil {
		in, out := &in.Database, &out.Database
		*out = new(string)
		**out = **in
	}
	if in.DatabaseRef != nil {
		in, out := &in.DatabaseRef, &out.DatabaseRef
		*out = new(v1.NamespacedReference)
		(*in).DeepCopyInto(*out)
	}
	if in.DatabaseSelector != nil {
		in, out := &in.DatabaseSelector, &out.DatabaseSelector
		*out = new(v1.NamespacedSelector)
		(*in).DeepCopyInto(*out)
	}
	if in.Hostname != nil {
		in, out := &in.Hostname, &out.Hostname
		*out = new(string)
		**out = **in
	}
	if in.HostnameRef != nil {
		in, out := &in.HostnameRef, &out.HostnameRef
		*out = new(v1.NamespacedReference)
		(*in).DeepCopyInto(*out)
	}
	if in.HostnameSelector != nil {
		in, out := &in.HostnameSelector, &out.HostnameSelector
		*out = new(v1.NamespacedSelector)
		(*in).DeepCopyInto(*out)
	}
	if in.PasswordSecretRef != nil {
		in, out := &in.PasswordSecretRef, &out.PasswordSecretRef
		*out = new(v1.LocalSecretKeySelector)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
	if in.SecretManagerStoredPassword != nil {
		in, out := &in.SecretManagerStoredPassword, &out.SecretManagerStoredPassword
		*out = new(string)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
	if in.UsernameRef != nil {
		in, out := &in.UsernameRef, &out.UsernameRef
		*out = new(v1.NamespacedReference)
		(*in).DeepCopyInto(*out)
	}
	if in.UsernameSelector != nil {
		in, out := &in.UsernameSelector, &out.UsernameSelector
		*out = new(v1.NamespacedSelector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLServerProfileParameters.
func (in *SQLServerProfileParameters) DeepCopy() *SQLServerProfileParameters {
	if in == nil {
		return nil
	}
	out := new(SQLServerProfileParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLServerSourceConfigExcludeObjectsInitParameters) DeepCopyInto(out *SQLServerSourceConfigExcludeObjectsInitParameters) {
	*out = *in
	if in.Schemas != nil {
		in, out := &in.Schemas, &out.Schemas
		*out = make([]ExcludeObjectsSchemasInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLServerSourceConfigExcludeObjectsInitParameters.
func (in *SQLServerSourceConfigExcludeObjectsInitParameters) DeepCopy() *SQLServerSourceConfigExcludeObjectsInitParameters {
	if in == nil {
		return nil
	}
	out := new(SQLServerSourceConfigExcludeObjectsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLServerSourceConfigExcludeObjectsObservation) DeepCopyInto(out *SQLServerSourceConfigExcludeObjectsObservation) {
	*out = *in
	if in.Schemas != nil {
		in, out := &in.Schemas, &out.Schemas
		*out = make([]ExcludeObjectsSchemasObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLServerSourceConfigExcludeObjectsObservation.
func (in *SQLServerSourceConfigExcludeObjectsObservation) DeepCopy() *SQLServerSourceConfigExcludeObjectsObservation {
	if in == nil {
		return nil
	}
	out := new(SQLServerSourceConfigExcludeObjectsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLServerSourceConfigExcludeObjectsParameters) DeepCopyInto(out *SQLServerSourceConfigExcludeObjectsParameters) {
	*out = *in
	if in.Schemas != nil {
		in, out := &in.Schemas, &out.Schemas
		*out = make([]ExcludeObjectsSchemasParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLServerSourceConfigExcludeObjectsParameters.
func (in *SQLServerSourceConfigExcludeObjectsParameters) DeepCopy() *SQLServerSourceConfigExcludeObjectsParameters {
	if in == nil {
		return nil
	}
	out := new(SQLServerSourceConfigExcludeObjectsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLServerSourceConfigIncludeObjectsInitParameters) DeepCopyInto(out *SQLServerSourceConfigIncludeObjectsInitParameters) {
	*out = *in
	if in.Schemas != nil {
		in, out := &in.Schemas, &out.Schemas
		*out = make([]IncludeObjectsSchemasInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLServerSourceConfigIncludeObjectsInitParameters.
func (in *SQLServerSourceConfigIncludeObjectsInitParameters) DeepCopy() *SQLServerSourceConfigIncludeObjectsInitParameters {
	if in == nil {
		return nil
	}
	out := new(SQLServerSourceConfigIncludeObjectsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLServerSourceConfigIncludeObjectsObservation) DeepCopyInto(out *SQLServerSourceConfigIncludeObjectsObservation) {
	*out = *in
	if in.Schemas != nil {
		in, out := &in.Schemas, &out.Schemas
		*out = make([]IncludeObjectsSchemasObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLServerSourceConfigIncludeObjectsObservation.
func (in *SQLServerSourceConfigIncludeObjectsObservation) DeepCopy() *SQLServerSourceConfigIncludeObjectsObservation {
	if in == nil {
		return nil
	}
	out := new(SQLServerSourceConfigIncludeObjectsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLServerSourceConfigIncludeObjectsParameters) DeepCopyInto(out *SQLServerSourceConfigIncludeObjectsParameters) {
	*out = *in
	if in.Schemas != nil {
		in, out := &in.Schemas, &out.Schemas
		*out = make([]IncludeObjectsSchemasParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLServerSourceConfigIncludeObjectsParameters.
func (in *SQLServerSourceConfigIncludeObjectsParameters) DeepCopy() *SQLServerSourceConfigIncludeObjectsParameters {
	if in == nil {
		return nil
	}
	out := new(SQLServerSourceConfigIncludeObjectsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLServerSourceConfigInitParameters) DeepCopyInto(out *SQLServerSourceConfigInitParameters) {
	*out = *in
	if in.ChangeTables != nil {
		in, out := &in.ChangeTables, &out.ChangeTables
		*out = new(ChangeTablesInitParameters)
		**out = **in
	}
	if in.ExcludeObjects != nil {
		in, out := &in.ExcludeObjects, &out.ExcludeObjects
		*out = new(SQLServerSourceConfigExcludeObjectsInitParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.IncludeObjects != nil {
		in, out := &in.IncludeObjects, &out.IncludeObjects
		*out = new(SQLServerSourceConfigIncludeObjectsInitParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.MaxConcurrentBackfillTasks != nil {
		in, out := &in.MaxConcurrentBackfillTasks, &out.MaxConcurrentBackfillTasks
		*out = new(float64)
		**out = **in
	}
	if in.MaxConcurrentCdcTasks != nil {
		in, out := &in.MaxConcurrentCdcTasks, &out.MaxConcurrentCdcTasks
		*out = new(float64)
		**out = **in
	}
	if in.TransactionLogs != nil {
		in, out := &in.TransactionLogs, &out.TransactionLogs
		*out = new(TransactionLogsInitParameters)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLServerSourceConfigInitParameters.
func (in *SQLServerSourceConfigInitParameters) DeepCopy() *SQLServerSourceConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(SQLServerSourceConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLServerSourceConfigObservation) DeepCopyInto(out *SQLServerSourceConfigObservation) {
	*out = *in
	if in.ChangeTables != nil {
		in, out := &in.ChangeTables, &out.ChangeTables
		*out = new(ChangeTablesParameters)
		**out = **in
	}
	if in.ExcludeObjects != nil {
		in, out := &in.ExcludeObjects, &out.ExcludeObjects
		*out = new(SQLServerSourceConfigExcludeObjectsObservation)
		(*in).DeepCopyInto(*out)
	}
	if in.IncludeObjects != nil {
		in, out := &in.IncludeObjects, &out.IncludeObjects
		*out = new(SQLServerSourceConfigIncludeObjectsObservation)
		(*in).DeepCopyInto(*out)
	}
	if in.MaxConcurrentBackfillTasks != nil {
		in, out := &in.MaxConcurrentBackfillTasks, &out.MaxConcurrentBackfillTasks
		*out = new(float64)
		**out = **in
	}
	if in.MaxConcurrentCdcTasks != nil {
		in, out := &in.MaxConcurrentCdcTasks, &out.MaxConcurrentCdcTasks
		*out = new(float64)
		**out = **in
	}
	if in.TransactionLogs != nil {
		in, out := &in.TransactionLogs, &out.TransactionLogs
		*out = new(TransactionLogsParameters)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLServerSourceConfigObservation.
func (in *SQLServerSourceConfigObservation) DeepCopy() *SQLServerSourceConfigObservation {
	if in == nil {
		return nil
	}
	out := new(SQLServerSourceConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLServerSourceConfigParameters) DeepCopyInto(out *SQLServerSourceConfigParameters) {
	*out = *in
	if in.ChangeTables != nil {
		in, out := &in.ChangeTables, &out.ChangeTables
		*out = new(ChangeTablesParameters)
		**out = **in
	}
	if in.ExcludeObjects != nil {
		in, out := &in.ExcludeObjects, &out.ExcludeObjects
		*out = new(SQLServerSourceConfigExcludeObjectsParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.IncludeObjects != nil {
		in, out := &in.IncludeObjects, &out.IncludeObjects
		*out = new(SQLServerSourceConfigIncludeObjectsParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.MaxConcurrentBackfillTasks != nil {
		in, out := &in.MaxConcurrentBackfillTasks, &out.MaxConcurrentBackfillTasks
		*out = new(float64)
		**out = **in
	}
	if in.MaxConcurrentCdcTasks != nil {
		in, out := &in.MaxConcurrentCdcTasks, &out.MaxConcurrentCdcTasks
		*out = new(float64)
		**out = **in
	}
	if in.TransactionLogs != nil {
		in, out := &in.TransactionLogs, &out.TransactionLogs
		*out = new(TransactionLogsParameters)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLServerSourceConfigParameters.
func (in *SQLServerSourceConfigParameters) DeepCopy() *SQLServerSourceConfigParameters {
	if in == nil {
		return nil
	}
	out := new(SQLServerSourceConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SSLConfigInitParameters) DeepCopyInto(out *SSLConfigInitParameters) {
	*out = *in
	if in.CACertificateSecretRef != nil {
		in, out := &in.CACertificateSecretRef, &out.CACertificateSecretRef
		*out = new(v1.LocalSecretKeySelector)
		**out = **in
	}
	if in.ClientCertificateSecretRef != nil {
		in, out := &in.ClientCertificateSecretRef, &out.ClientCertificateSecretRef
		*out = new(v1.LocalSecretKeySelector)
		**out = **in
	}
	if in.ClientKeySecretRef != nil {
		in, out := &in.ClientKeySecretRef, &out.ClientKeySecretRef
		*out = new(v1.LocalSecretKeySelector)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SSLConfigInitParameters.
func (in *SSLConfigInitParameters) DeepCopy() *SSLConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(SSLConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SSLConfigObservation) DeepCopyInto(out *SSLConfigObservation) {
	*out = *in
	if in.CACertificateSet != nil {
		in, out := &in.CACertificateSet, &out.CACertificateSet
		*out = new(bool)
		**out = **in
	}
	if in.ClientCertificateSet != nil {
		in, out := &in.ClientCertificateSet, &out.ClientCertificateSet
		*out = new(bool)
		**out = **in
	}
	if in.ClientKeySet != nil {
		in, out := &in.ClientKeySet, &out.ClientKeySet
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SSLConfigObservation.
func (in *SSLConfigObservation) DeepCopy() *SSLConfigObservation {
	if in == nil {
		return nil
	}
	out := new(SSLConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SSLConfigParameters) DeepCopyInto(out *SSLConfigParameters) {
	*out = *in
	if in.CACertificateSecretRef != nil {
		in, out := &in.CACertificateSecretRef, &out.CACertificateSecretRef
		*out = new(v1.LocalSecretKeySelector)
		**out = **in
	}
	if in.ClientCertificateSecretRef != nil {
		in, out := &in.ClientCertificateSecretRef, &out.ClientCertificateSecretRef
		*out = new(v1.LocalSecretKeySelector)
		**out = **in
	}
	if in.ClientKeySecretRef != nil {
		in, out := &in.ClientKeySecretRef, &out.ClientKeySecretRef
		*out = new(v1.LocalSecretKeySelector)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SSLConfigParameters.
func (in *SSLConfigParameters) DeepCopy() *SSLConfigParameters {
	if in == nil {
		return nil
	}
	out := new(SSLConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SalesforceExcludedObjectsInitParameters) DeepCopyInto(out *SalesforceExcludedObjectsInitParameters) {
	*out = *in
	if in.Objects != nil {
		in, out := &in.Objects, &out.Objects
		*out = make([]ObjectsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SalesforceExcludedObjectsInitParameters.
func (in *SalesforceExcludedObjectsInitParameters) DeepCopy() *SalesforceExcludedObjectsInitParameters {
	if in == nil {
		return nil
	}
	out := new(SalesforceExcludedObjectsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SalesforceExcludedObjectsObservation) DeepCopyInto(out *SalesforceExcludedObjectsObservation) {
	*out = *in
	if in.Objects != nil {
		in, out := &in.Objects, &out.Objects
		*out = make([]ObjectsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SalesforceExcludedObjectsObservation.
func (in *SalesforceExcludedObjectsObservation) DeepCopy() *SalesforceExcludedObjectsObservation {
	if in == nil {
		return nil
	}
	out := new(SalesforceExcludedObjectsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SalesforceExcludedObjectsParameters) DeepCopyInto(out *SalesforceExcludedObjectsParameters) {
	*out = *in
	if in.Objects != nil {
		in, out := &in.Objects, &out.Objects
		*out = make([]ObjectsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SalesforceExcludedObjectsParameters.
func (in *SalesforceExcludedObjectsParameters) DeepCopy() *SalesforceExcludedObjectsParameters {
	if in == nil {
		return nil
	}
	out := new(SalesforceExcludedObjectsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SalesforceSourceConfigExcludeObjectsInitParameters) DeepCopyInto(out *SalesforceSourceConfigExcludeObjectsInitParameters) {
	*out = *in
	if in.Objects != nil {
		in, out := &in.Objects, &out.Objects
		*out = make([]ExcludeObjectsObjectsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SalesforceSourceConfigExcludeObjectsInitParameters.
func (in *SalesforceSourceConfigExcludeObjectsInitParameters) DeepCopy() *SalesforceSourceConfigExcludeObjectsInitParameters {
	if in == nil {
		return nil
	}
	out := new(SalesforceSourceConfigExcludeObjectsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SalesforceSourceConfigExcludeObjectsObservation) DeepCopyInto(out *SalesforceSourceConfigExcludeObjectsObservation) {
	*out = *in
	if in.Objects != nil {
		in, out := &in.Objects, &out.Objects
		*out = make([]ExcludeObjectsObjectsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SalesforceSourceConfigExcludeObjectsObservation.
func (in *SalesforceSourceConfigExcludeObjectsObservation) DeepCopy() *SalesforceSourceConfigExcludeObjectsObservation {
	if in == nil {
		return nil
	}
	out := new(SalesforceSourceConfigExcludeObjectsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SalesforceSourceConfigExcludeObjectsParameters) DeepCopyInto(out *SalesforceSourceConfigExcludeObjectsParameters) {
	*out = *in
	if in.Objects != nil {
		in, out := &in.Objects, &out.Objects
		*out = make([]ExcludeObjectsObjectsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SalesforceSourceConfigExcludeObjectsParameters.
func (in *SalesforceSourceConfigExcludeObjectsParameters) DeepCopy() *SalesforceSourceConfigExcludeObjectsParameters {
	if in == nil {
		return nil
	}
	out := new(SalesforceSourceConfigExcludeObjectsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SalesforceSourceConfigIncludeObjectsInitParameters) DeepCopyInto(out *SalesforceSourceConfigIncludeObjectsInitParameters) {
	*out = *in
	if in.Objects != nil {
		in, out := &in.Objects, &out.Objects
		*out = make([]IncludeObjectsObjectsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SalesforceSourceConfigIncludeObjectsInitParameters.
func (in *SalesforceSourceConfigIncludeObjectsInitParameters) DeepCopy() *SalesforceSourceConfigIncludeObjectsInitParameters {
	if in == nil {
		return nil
	}
	out := new(SalesforceSourceConfigIncludeObjectsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SalesforceSourceConfigIncludeObjectsObservation) DeepCopyInto(out *SalesforceSourceConfigIncludeObjectsObservation) {
	*out = *in
	if in.Objects != nil {
		in, out := &in.Objects, &out.Objects
		*out = make([]IncludeObjectsObjectsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SalesforceSourceConfigIncludeObjectsObservation.
func (in *SalesforceSourceConfigIncludeObjectsObservation) DeepCopy() *SalesforceSourceConfigIncludeObjectsObservation {
	if in == nil {
		return nil
	}
	out := new(SalesforceSourceConfigIncludeObjectsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SalesforceSourceConfigIncludeObjectsParameters) DeepCopyInto(out *SalesforceSourceConfigIncludeObjectsParameters) {
	*out = *in
	if in.Objects != nil {
		in, out := &in.Objects, &out.Objects
		*out = make([]IncludeObjectsObjectsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SalesforceSourceConfigIncludeObjectsParameters.
func (in *SalesforceSourceConfigIncludeObjectsParameters) DeepCopy() *SalesforceSourceConfigIncludeObjectsParameters {
	if in == nil {
		return nil
	}
	out := new(SalesforceSourceConfigIncludeObjectsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SalesforceSourceConfigInitParameters) DeepCopyInto(out *SalesforceSourceConfigInitParameters) {
	*out = *in
	if in.ExcludeObjects != nil {
		in, out := &in.ExcludeObjects, &out.ExcludeObjects
		*out = new(SalesforceSourceConfigExcludeObjectsInitParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.IncludeObjects != nil {
		in, out := &in.IncludeObjects, &out.IncludeObjects
		*out = new(SalesforceSourceConfigIncludeObjectsInitParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.PollingInterval != nil {
		in, out := &in.PollingInterval, &out.PollingInterval
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SalesforceSourceConfigInitParameters.
func (in *SalesforceSourceConfigInitParameters) DeepCopy() *SalesforceSourceConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(SalesforceSourceConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SalesforceSourceConfigObservation) DeepCopyInto(out *SalesforceSourceConfigObservation) {
	*out = *in
	if in.ExcludeObjects != nil {
		in, out := &in.ExcludeObjects, &out.ExcludeObjects
		*out = new(SalesforceSourceConfigExcludeObjectsObservation)
		(*in).DeepCopyInto(*out)
	}
	if in.IncludeObjects != nil {
		in, out := &in.IncludeObjects, &out.IncludeObjects
		*out = new(SalesforceSourceConfigIncludeObjectsObservation)
		(*in).DeepCopyInto(*out)
	}
	if in.PollingInterval != nil {
		in, out := &in.PollingInterval, &out.PollingInterval
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SalesforceSourceConfigObservation.
func (in *SalesforceSourceConfigObservation) DeepCopy() *SalesforceSourceConfigObservation {
	if in == nil {
		return nil
	}
	out := new(SalesforceSourceConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SalesforceSourceConfigParameters) DeepCopyInto(out *SalesforceSourceConfigParameters) {
	*out = *in
	if in.ExcludeObjects != nil {
		in, out := &in.ExcludeObjects, &out.ExcludeObjects
		*out = new(SalesforceSourceConfigExcludeObjectsParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.IncludeObjects != nil {
		in, out := &in.IncludeObjects, &out.IncludeObjects
		*out = new(SalesforceSourceConfigIncludeObjectsParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.PollingInterval != nil {
		in, out := &in.PollingInterval, &out.PollingInterval
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SalesforceSourceConfigParameters.
func (in *SalesforceSourceConfigParameters) DeepCopy() *SalesforceSourceConfigParameters {
	if in == nil {
		return nil
	}
	out := new(SalesforceSourceConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SchemasInitParameters) DeepCopyInto(out *SchemasInitParameters) {
	*out = *in
	if in.Schema != nil {
		in, out := &in.Schema, &out.Schema
		*out = new(string)
		**out = **in
	}
	if in.Tables != nil {
		in, out := &in.Tables, &out.Tables
		*out = make([]TablesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SchemasInitParameters.
func (in *SchemasInitParameters) DeepCopy() *SchemasInitParameters {
	if in == nil {
		return nil
	}
	out := new(SchemasInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SchemasObservation) DeepCopyInto(out *SchemasObservation) {
	*out = *in
	if in.Schema != nil {
		in, out := &in.Schema, &out.Schema
		*out = new(string)
		**out = **in
	}
	if in.Tables != nil {
		in, out := &in.Tables, &out.Tables
		*out = make([]TablesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SchemasObservation.
func (in *SchemasObservation) DeepCopy() *SchemasObservation {
	if in == nil {
		return nil
	}
	out := new(SchemasObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SchemasParameters) DeepCopyInto(out *SchemasParameters) {
	*out = *in
	if in.Schema != nil {
		in, out := &in.Schema, &out.Schema
		*out = new(string)
		**out = **in
	}
	if in.Tables != nil {
		in, out := &in.Tables, &out.Tables
		*out = make([]TablesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SchemasParameters.
func (in *SchemasParameters) DeepCopy() *SchemasParameters {
	if in == nil {
		return nil
	}
	out := new(SchemasParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SchemasTablesColumnsInitParameters) DeepCopyInto(out *SchemasTablesColumnsInitParameters) {
	*out = *in
	if in.Column != nil {
		in, out := &in.Column, &out.Column
		*out = new(string)
		**out = **in
	}
	if in.DataType != nil {
		in, out := &in.DataType, &out.DataType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SchemasTablesColumnsInitParameters.
func (in *SchemasTablesColumnsInitParameters) DeepCopy() *SchemasTablesColumnsInitParameters {
	if in == nil {
		return nil
	}
	out := new(SchemasTablesColumnsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SchemasTablesColumnsObservation) DeepCopyInto(out *SchemasTablesColumnsObservation) {
	*out = *in
	if in.Column != nil {
		in, out := &in.Column, &out.Column
		*out = new(string)
		**out = **in
	}
	if in.DataType != nil {
		in, out := &in.DataType, &out.DataType
		*out = new(string)
		**out = **in
	}
	if in.Length != nil {
		in, out := &in.Length, &out.Length
		*out = new(float64)
		**out = **in
	}
	if in.Nullable != nil {
		in, out := &in.Nullable, &out.Nullable
		*out = new(bool)
		**out = **in
	}
	if in.OrdinalPosition != nil {
		in, out := &in.OrdinalPosition, &out.OrdinalPosition
		*out = new(float64)
		**out = **in
	}
	if in.Precision != nil {
		in, out := &in.Precision, &out.Precision
		*out = new(float64)
		**out = **in
	}
	if in.PrimaryKey != nil {
		in, out := &in.PrimaryKey, &out.PrimaryKey
		*out = new(bool)
		**out = **in
	}
	if in.Scale != nil {
		in, out := &in.Scale, &out.Scale
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SchemasTablesColumnsObservation.
func (in *SchemasTablesColumnsObservation) DeepCopy() *SchemasTablesColumnsObservation {
	if in == nil {
		return nil
	}
	out := new(SchemasTablesColumnsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SchemasTablesColumnsParameters) DeepCopyInto(out *SchemasTablesColumnsParameters) {
	*out = *in
	if in.Column != nil {
		in, out := &in.Column, &out.Column
		*out = new(string)
		**out = **in
	}
	if in.DataType != nil {
		in, out := &in.DataType, &out.DataType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SchemasTablesColumnsParameters.
func (in *SchemasTablesColumnsParameters) DeepCopy() *SchemasTablesColumnsParameters {
	if in == nil {
		return nil
	}
	out := new(SchemasTablesColumnsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SchemasTablesInitParameters) DeepCopyInto(out *SchemasTablesInitParameters) {
	*out = *in
	if in.Columns != nil {
		in, out := &in.Columns, &out.Columns
		*out = make([]TablesColumnsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Table != nil {
		in, out := &in.Table, &out.Table
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SchemasTablesInitParameters.
func (in *SchemasTablesInitParameters) DeepCopy() *SchemasTablesInitParameters {
	if in == nil {
		return nil
	}
	out := new(SchemasTablesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SchemasTablesObservation) DeepCopyInto(out *SchemasTablesObservation) {
	*out = *in
	if in.Columns != nil {
		in, out := &in.Columns, &out.Columns
		*out = make([]TablesColumnsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Table != nil {
		in, out := &in.Table, &out.Table
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SchemasTablesObservation.
func (in *SchemasTablesObservation) DeepCopy() *SchemasTablesObservation {
	if in == nil {
		return nil
	}
	out := new(SchemasTablesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SchemasTablesParameters) DeepCopyInto(out *SchemasTablesParameters) {
	*out = *in
	if in.Columns != nil {
		in, out := &in.Columns, &out.Columns
		*out = make([]TablesColumnsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Table != nil {
		in, out := &in.Table, &out.Table
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SchemasTablesParameters.
func (in *SchemasTablesParameters) DeepCopy() *SchemasTablesParameters {
	if in == nil {
		return nil
	}
	out := new(SchemasTablesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SingleTargetDatasetInitParameters) DeepCopyInto(out *SingleTargetDatasetInitParameters) {
	*out = *in
	if in.DatasetID != nil {
		in, out := &in.DatasetID, &out.DatasetID
		*out = new(string)
		**out = **in
	}
	if in.DatasetIDRef != nil {
		in, out := &in.DatasetIDRef, &out.DatasetIDRef
		*out = new(v1.NamespacedReference)
		(*in).DeepCopyInto(*out)
	}
	if in.DatasetIDSelector != nil {
		in, out := &in.DatasetIDSelector, &out.DatasetIDSelector
		*out = new(v1.NamespacedSelector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SingleTargetDatasetInitParameters.
func (in *SingleTargetDatasetInitParameters) DeepCopy() *SingleTargetDatasetInitParameters {
	if in == nil {
		return nil
	}
	out := new(SingleTargetDatasetInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SingleTargetDatasetObservation) DeepCopyInto(out *SingleTargetDatasetObservation) {
	*out = *in
	if in.DatasetID != nil {
		in, out := &in.DatasetID, &out.DatasetID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SingleTargetDatasetObservation.
func (in *SingleTargetDatasetObservation) DeepCopy() *SingleTargetDatasetObservation {
	if in == nil {
		return nil
	}
	out := new(SingleTargetDatasetObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SingleTargetDatasetParameters) DeepCopyInto(out *SingleTargetDatasetParameters) {
	*out = *in
	if in.DatasetID != nil {
		in, out := &in.DatasetID, &out.DatasetID
		*out = new(string)
		**out = **in
	}
	if in.DatasetIDRef != nil {
		in, out := &in.DatasetIDRef, &out.DatasetIDRef
		*out = new(v1.NamespacedReference)
		(*in).DeepCopyInto(*out)
	}
	if in.DatasetIDSelector != nil {
		in, out := &in.DatasetIDSelector, &out.DatasetIDSelector
		*out = new(v1.NamespacedSelector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SingleTargetDatasetParameters.
func (in *SingleTargetDatasetParameters) DeepCopy() *SingleTargetDatasetParameters {
	if in == nil {
		return nil
	}
	out := new(SingleTargetDatasetParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SourceConfigInitParameters) DeepCopyInto(out *SourceConfigInitParameters) {
	*out = *in
	if in.MySQLSourceConfig != nil {
		in, out := &in.MySQLSourceConfig, &out.MySQLSourceConfig
		*out = new(MySQLSourceConfigInitParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.OracleSourceConfig != nil {
		in, out := &in.OracleSourceConfig, &out.OracleSourceConfig
		*out = new(OracleSourceConfigInitParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.PostgresqlSourceConfig != nil {
		in, out := &in.PostgresqlSourceConfig, &out.PostgresqlSourceConfig
		*out = new(PostgresqlSourceConfigInitParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.SQLServerSourceConfig != nil {
		in, out := &in.SQLServerSourceConfig, &out.SQLServerSourceConfig
		*out = new(SQLServerSourceConfigInitParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.SalesforceSourceConfig != nil {
		in, out := &in.SalesforceSourceConfig, &out.SalesforceSourceConfig
		*out = new(SalesforceSourceConfigInitParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.SourceConnectionProfile != nil {
		in, out := &in.SourceConnectionProfile, &out.SourceConnectionProfile
		*out = new(string)
		**out = **in
	}
	if in.SourceConnectionProfileRef != nil {
		in, out := &in.SourceConnectionProfileRef, &out.SourceConnectionProfileRef
		*out = new(v1.NamespacedReference)
		(*in).DeepCopyInto(*out)
	}
	if in.SourceConnectionProfileSelector != nil {
		in, out := &in.SourceConnectionProfileSelector, &out.SourceConnectionProfileSelector
		*out = new(v1.NamespacedSelector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SourceConfigInitParameters.
func (in *SourceConfigInitParameters) DeepCopy() *SourceConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(SourceConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SourceConfigObservation) DeepCopyInto(out *SourceConfigObservation) {
	*out = *in
	if in.MySQLSourceConfig != nil {
		in, out := &in.MySQLSourceConfig, &out.MySQLSourceConfig
		*out = new(MySQLSourceConfigObservation)
		(*in).DeepCopyInto(*out)
	}
	if in.OracleSourceConfig != nil {
		in, out := &in.OracleSourceConfig, &out.OracleSourceConfig
		*out = new(OracleSourceConfigObservation)
		(*in).DeepCopyInto(*out)
	}
	if in.PostgresqlSourceConfig != nil {
		in, out := &in.PostgresqlSourceConfig, &out.PostgresqlSourceConfig
		*out = new(PostgresqlSourceConfigObservation)
		(*in).DeepCopyInto(*out)
	}
	if in.SQLServerSourceConfig != nil {
		in, out := &in.SQLServerSourceConfig, &out.SQLServerSourceConfig
		*out = new(SQLServerSourceConfigObservation)
		(*in).DeepCopyInto(*out)
	}
	if in.SalesforceSourceConfig != nil {
		in, out := &in.SalesforceSourceConfig, &out.SalesforceSourceConfig
		*out = new(SalesforceSourceConfigObservation)
		(*in).DeepCopyInto(*out)
	}
	if in.SourceConnectionProfile != nil {
		in, out := &in.SourceConnectionProfile, &out.SourceConnectionProfile
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SourceConfigObservation.
func (in *SourceConfigObservation) DeepCopy() *SourceConfigObservation {
	if in == nil {
		return nil
	}
	out := new(SourceConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SourceConfigParameters) DeepCopyInto(out *SourceConfigParameters) {
	*out = *in
	if in.MySQLSourceConfig != nil {
		in, out := &in.MySQLSourceConfig, &out.MySQLSourceConfig
		*out = new(MySQLSourceConfigParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.OracleSourceConfig != nil {
		in, out := &in.OracleSourceConfig, &out.OracleSourceConfig
		*out = new(OracleSourceConfigParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.PostgresqlSourceConfig != nil {
		in, out := &in.PostgresqlSourceConfig, &out.PostgresqlSourceConfig
		*out = new(PostgresqlSourceConfigParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.SQLServerSourceConfig != nil {
		in, out := &in.SQLServerSourceConfig, &out.SQLServerSourceConfig
		*out = new(SQLServerSourceConfigParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.SalesforceSourceConfig != nil {
		in, out := &in.SalesforceSourceConfig, &out.SalesforceSourceConfig
		*out = new(SalesforceSourceConfigParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.SourceConnectionProfile != nil {
		in, out := &in.SourceConnectionProfile, &out.SourceConnectionProfile
		*out = new(string)
		**out = **in
	}
	if in.SourceConnectionProfileRef != nil {
		in, out := &in.SourceConnectionProfileRef, &out.SourceConnectionProfileRef
		*out = new(v1.NamespacedReference)
		(*in).DeepCopyInto(*out)
	}
	if in.SourceConnectionProfileSelector != nil {
		in, out := &in.SourceConnectionProfileSelector, &out.SourceConnectionProfileSelector
		*out = new(v1.NamespacedSelector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SourceConfigParameters.
func (in *SourceConfigParameters) DeepCopy() *SourceConfigParameters {
	if in == nil {
		return nil
	}
	out := new(SourceConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SourceHierarchyDatasetsInitParameters) DeepCopyInto(out *SourceHierarchyDatasetsInitParameters) {
	*out = *in
	if in.DatasetTemplate != nil {
		in, out := &in.DatasetTemplate, &out.DatasetTemplate
		*out = new(DatasetTemplateInitParameters)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SourceHierarchyDatasetsInitParameters.
func (in *SourceHierarchyDatasetsInitParameters) DeepCopy() *SourceHierarchyDatasetsInitParameters {
	if in == nil {
		return nil
	}
	out := new(SourceHierarchyDatasetsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SourceHierarchyDatasetsObservation) DeepCopyInto(out *SourceHierarchyDatasetsObservation) {
	*out = *in
	if in.DatasetTemplate != nil {
		in, out := &in.DatasetTemplate, &out.DatasetTemplate
		*out = new(DatasetTemplateObservation)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SourceHierarchyDatasetsObservation.
func (in *SourceHierarchyDatasetsObservation) DeepCopy() *SourceHierarchyDatasetsObservation {
	if in == nil {
		return nil
	}
	out := new(SourceHierarchyDatasetsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SourceHierarchyDatasetsParameters) DeepCopyInto(out *SourceHierarchyDatasetsParameters) {
	*out = *in
	if in.DatasetTemplate != nil {
		in, out := &in.DatasetTemplate, &out.DatasetTemplate
		*out = new(DatasetTemplateParameters)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SourceHierarchyDatasetsParameters.
func (in *SourceHierarchyDatasetsParameters) DeepCopy() *SourceHierarchyDatasetsParameters {
	if in == nil {
		return nil
	}
	out := new(SourceHierarchyDatasetsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Stream) DeepCopyInto(out *Stream) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Stream.
func (in *Stream) DeepCopy() *Stream {
	if in == nil {
		return nil
	}
	out := new(Stream)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Stream) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StreamInitParameters) DeepCopyInto(out *StreamInitParameters) {
	*out = *in
	if in.BackfillAll != nil {
		in, out := &in.BackfillAll, &out.BackfillAll
		*out = new(BackfillAllInitParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.BackfillNone != nil {
		in, out := &in.BackfillNone, &out.BackfillNone
		*out = new(BackfillNoneInitParameters)
		**out = **in
	}
	if in.CreateWithoutValidation != nil {
		in, out := &in.CreateWithoutValidation, &out.CreateWithoutValidation
		*out = new(bool)
		**out = **in
	}
	if in.CustomerManagedEncryptionKey != nil {
		in, out := &in.CustomerManagedEncryptionKey, &out.CustomerManagedEncryptionKey
		*out = new(string)
		**out = **in
	}
	if in.DesiredState != nil {
		in, out := &in.DesiredState, &out.DesiredState
		*out = new(string)
		**out = **in
	}
	if in.DestinationConfig != nil {
		in, out := &in.DestinationConfig, &out.DestinationConfig
		*out = new(DestinationConfigInitParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.SourceConfig != nil {
		in, out := &in.SourceConfig, &out.SourceConfig
		*out = new(SourceConfigInitParameters)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StreamInitParameters.
func (in *StreamInitParameters) DeepCopy() *StreamInitParameters {
	if in == nil {
		return nil
	}
	out := new(StreamInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StreamLargeObjectsInitParameters) DeepCopyInto(out *StreamLargeObjectsInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StreamLargeObjectsInitParameters.
func (in *StreamLargeObjectsInitParameters) DeepCopy() *StreamLargeObjectsInitParameters {
	if in == nil {
		return nil
	}
	out := new(StreamLargeObjectsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StreamLargeObjectsObservation) DeepCopyInto(out *StreamLargeObjectsObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StreamLargeObjectsObservation.
func (in *StreamLargeObjectsObservation) DeepCopy() *StreamLargeObjectsObservation {
	if in == nil {
		return nil
	}
	out := new(StreamLargeObjectsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StreamLargeObjectsParameters) DeepCopyInto(out *StreamLargeObjectsParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StreamLargeObjectsParameters.
func (in *StreamLargeObjectsParameters) DeepCopy() *StreamLargeObjectsParameters {
	if in == nil {
		return nil
	}
	out := new(StreamLargeObjectsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StreamList) DeepCopyInto(out *StreamList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Stream, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StreamList.
func (in *StreamList) DeepCopy() *StreamList {
	if in == nil {
		return nil
	}
	out := new(StreamList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *StreamList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StreamObservation) DeepCopyInto(out *StreamObservation) {
	*out = *in
	if in.BackfillAll != nil {
		in, out := &in.BackfillAll, &out.BackfillAll
		*out = new(BackfillAllObservation)
		(*in).DeepCopyInto(*out)
	}
	if in.BackfillNone != nil {
		in, out := &in.BackfillNone, &out.BackfillNone
		*out = new(BackfillNoneParameters)
		**out = **in
	}
	if in.CreateWithoutValidation != nil {
		in, out := &in.CreateWithoutValidation, &out.CreateWithoutValidation
		*out = new(bool)
		**out = **in
	}
	if in.CustomerManagedEncryptionKey != nil {
		in, out := &in.CustomerManagedEncryptionKey, &out.CustomerManagedEncryptionKey
		*out = new(string)
		**out = **in
	}
	if in.DesiredState != nil {
		in, out := &in.DesiredState, &out.DesiredState
		*out = new(string)
		**out = **in
	}
	if in.DestinationConfig != nil {
		in, out := &in.DestinationConfig, &out.DestinationConfig
		*out = new(DestinationConfigObservation)
		(*in).DeepCopyInto(*out)
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.EffectiveLabels != nil {
		in, out := &in.EffectiveLabels, &out.EffectiveLabels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.SourceConfig != nil {
		in, out := &in.SourceConfig, &out.SourceConfig
		*out = new(SourceConfigObservation)
		(*in).DeepCopyInto(*out)
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.TerraformLabels != nil {
		in, out := &in.TerraformLabels, &out.TerraformLabels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StreamObservation.
func (in *StreamObservation) DeepCopy() *StreamObservation {
	if in == nil {
		return nil
	}
	out := new(StreamObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StreamParameters) DeepCopyInto(out *StreamParameters) {
	*out = *in
	if in.BackfillAll != nil {
		in, out := &in.BackfillAll, &out.BackfillAll
		*out = new(BackfillAllParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.BackfillNone != nil {
		in, out := &in.BackfillNone, &out.BackfillNone
		*out = new(BackfillNoneParameters)
		**out = **in
	}
	if in.CreateWithoutValidation != nil {
		in, out := &in.CreateWithoutValidation, &out.CreateWithoutValidation
		*out = new(bool)
		**out = **in
	}
	if in.CustomerManagedEncryptionKey != nil {
		in, out := &in.CustomerManagedEncryptionKey, &out.CustomerManagedEncryptionKey
		*out = new(string)
		**out = **in
	}
	if in.DesiredState != nil {
		in, out := &in.DesiredState, &out.DesiredState
		*out = new(string)
		**out = **in
	}
	if in.DestinationConfig != nil {
		in, out := &in.DestinationConfig, &out.DestinationConfig
		*out = new(DestinationConfigParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.SourceConfig != nil {
		in, out := &in.SourceConfig, &out.SourceConfig
		*out = new(SourceConfigParameters)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StreamParameters.
func (in *StreamParameters) DeepCopy() *StreamParameters {
	if in == nil {
		return nil
	}
	out := new(StreamParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StreamSpec) DeepCopyInto(out *StreamSpec) {
	*out = *in
	in.ManagedResourceSpec.DeepCopyInto(&out.ManagedResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StreamSpec.
func (in *StreamSpec) DeepCopy() *StreamSpec {
	if in == nil {
		return nil
	}
	out := new(StreamSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StreamStatus) DeepCopyInto(out *StreamStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StreamStatus.
func (in *StreamStatus) DeepCopy() *StreamStatus {
	if in == nil {
		return nil
	}
	out := new(StreamStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TablesColumnsInitParameters) DeepCopyInto(out *TablesColumnsInitParameters) {
	*out = *in
	if in.Column != nil {
		in, out := &in.Column, &out.Column
		*out = new(string)
		**out = **in
	}
	if in.DataType != nil {
		in, out := &in.DataType, &out.DataType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TablesColumnsInitParameters.
func (in *TablesColumnsInitParameters) DeepCopy() *TablesColumnsInitParameters {
	if in == nil {
		return nil
	}
	out := new(TablesColumnsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TablesColumnsObservation) DeepCopyInto(out *TablesColumnsObservation) {
	*out = *in
	if in.Column != nil {
		in, out := &in.Column, &out.Column
		*out = new(string)
		**out = **in
	}
	if in.DataType != nil {
		in, out := &in.DataType, &out.DataType
		*out = new(string)
		**out = **in
	}
	if in.Length != nil {
		in, out := &in.Length, &out.Length
		*out = new(float64)
		**out = **in
	}
	if in.Nullable != nil {
		in, out := &in.Nullable, &out.Nullable
		*out = new(bool)
		**out = **in
	}
	if in.OrdinalPosition != nil {
		in, out := &in.OrdinalPosition, &out.OrdinalPosition
		*out = new(float64)
		**out = **in
	}
	if in.Precision != nil {
		in, out := &in.Precision, &out.Precision
		*out = new(float64)
		**out = **in
	}
	if in.PrimaryKey != nil {
		in, out := &in.PrimaryKey, &out.PrimaryKey
		*out = new(bool)
		**out = **in
	}
	if in.Scale != nil {
		in, out := &in.Scale, &out.Scale
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TablesColumnsObservation.
func (in *TablesColumnsObservation) DeepCopy() *TablesColumnsObservation {
	if in == nil {
		return nil
	}
	out := new(TablesColumnsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TablesColumnsParameters) DeepCopyInto(out *TablesColumnsParameters) {
	*out = *in
	if in.Column != nil {
		in, out := &in.Column, &out.Column
		*out = new(string)
		**out = **in
	}
	if in.DataType != nil {
		in, out := &in.DataType, &out.DataType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TablesColumnsParameters.
func (in *TablesColumnsParameters) DeepCopy() *TablesColumnsParameters {
	if in == nil {
		return nil
	}
	out := new(TablesColumnsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TablesInitParameters) DeepCopyInto(out *TablesInitParameters) {
	*out = *in
	if in.Columns != nil {
		in, out := &in.Columns, &out.Columns
		*out = make([]ColumnsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Table != nil {
		in, out := &in.Table, &out.Table
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TablesInitParameters.
func (in *TablesInitParameters) DeepCopy() *TablesInitParameters {
	if in == nil {
		return nil
	}
	out := new(TablesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TablesObservation) DeepCopyInto(out *TablesObservation) {
	*out = *in
	if in.Columns != nil {
		in, out := &in.Columns, &out.Columns
		*out = make([]ColumnsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Table != nil {
		in, out := &in.Table, &out.Table
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TablesObservation.
func (in *TablesObservation) DeepCopy() *TablesObservation {
	if in == nil {
		return nil
	}
	out := new(TablesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TablesParameters) DeepCopyInto(out *TablesParameters) {
	*out = *in
	if in.Columns != nil {
		in, out := &in.Columns, &out.Columns
		*out = make([]ColumnsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Table != nil {
		in, out := &in.Table, &out.Table
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TablesParameters.
func (in *TablesParameters) DeepCopy() *TablesParameters {
	if in == nil {
		return nil
	}
	out := new(TablesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TransactionLogsInitParameters) DeepCopyInto(out *TransactionLogsInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TransactionLogsInitParameters.
func (in *TransactionLogsInitParameters) DeepCopy() *TransactionLogsInitParameters {
	if in == nil {
		return nil
	}
	out := new(TransactionLogsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TransactionLogsObservation) DeepCopyInto(out *TransactionLogsObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TransactionLogsObservation.
func (in *TransactionLogsObservation) DeepCopy() *TransactionLogsObservation {
	if in == nil {
		return nil
	}
	out := new(TransactionLogsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TransactionLogsParameters) DeepCopyInto(out *TransactionLogsParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TransactionLogsParameters.
func (in *TransactionLogsParameters) DeepCopy() *TransactionLogsParameters {
	if in == nil {
		return nil
	}
	out := new(TransactionLogsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCPeeringConfigInitParameters) DeepCopyInto(out *VPCPeeringConfigInitParameters) {
	*out = *in
	if in.Subnet != nil {
		in, out := &in.Subnet, &out.Subnet
		*out = new(string)
		**out = **in
	}
	if in.VPC != nil {
		in, out := &in.VPC, &out.VPC
		*out = new(string)
		**out = **in
	}
	if in.VPCRef != nil {
		in, out := &in.VPCRef, &out.VPCRef
		*out = new(v1.NamespacedReference)
		(*in).DeepCopyInto(*out)
	}
	if in.VPCSelector != nil {
		in, out := &in.VPCSelector, &out.VPCSelector
		*out = new(v1.NamespacedSelector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCPeeringConfigInitParameters.
func (in *VPCPeeringConfigInitParameters) DeepCopy() *VPCPeeringConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(VPCPeeringConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCPeeringConfigObservation) DeepCopyInto(out *VPCPeeringConfigObservation) {
	*out = *in
	if in.Subnet != nil {
		in, out := &in.Subnet, &out.Subnet
		*out = new(string)
		**out = **in
	}
	if in.VPC != nil {
		in, out := &in.VPC, &out.VPC
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCPeeringConfigObservation.
func (in *VPCPeeringConfigObservation) DeepCopy() *VPCPeeringConfigObservation {
	if in == nil {
		return nil
	}
	out := new(VPCPeeringConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCPeeringConfigParameters) DeepCopyInto(out *VPCPeeringConfigParameters) {
	*out = *in
	if in.Subnet != nil {
		in, out := &in.Subnet, &out.Subnet
		*out = new(string)
		**out = **in
	}
	if in.VPC != nil {
		in, out := &in.VPC, &out.VPC
		*out = new(string)
		**out = **in
	}
	if in.VPCRef != nil {
		in, out := &in.VPCRef, &out.VPCRef
		*out = new(v1.NamespacedReference)
		(*in).DeepCopyInto(*out)
	}
	if in.VPCSelector != nil {
		in, out := &in.VPCSelector, &out.VPCSelector
		*out = new(v1.NamespacedSelector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCPeeringConfigParameters.
func (in *VPCPeeringConfigParameters) DeepCopy() *VPCPeeringConfigParameters {
	if in == nil {
		return nil
	}
	out := new(VPCPeeringConfigParameters)
	in.DeepCopyInto(out)
	return out
}
