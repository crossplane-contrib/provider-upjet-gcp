// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1beta1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/v2/apis/common/v1"
	v2 "github.com/crossplane/crossplane-runtime/v2/apis/common/v2"
)

type AnalyticsHubListingSubscriptionCommercialInfoInitParameters struct {
}

type AnalyticsHubListingSubscriptionCommercialInfoObservation struct {

	// (Output)
	// Cloud Marketplace commercial metadata for this subscription.
	// Structure is documented below.
	CloudMarketplace []CommercialInfoCloudMarketplaceObservation `json:"cloudMarketplace,omitempty" tf:"cloud_marketplace,omitempty"`
}

type AnalyticsHubListingSubscriptionCommercialInfoParameters struct {
}

type AnalyticsHubListingSubscriptionInitParameters struct {

	// The ID of the data exchange. Must contain only Unicode letters, numbers (0-9), underscores (_). Should not use characters that require URL-escaping, or characters outside of ASCII, spaces.
	// +crossplane:generate:reference:type=github.com/upbound/provider-gcp/apis/namespaced/bigquery/v1beta1.AnalyticsHubDataExchange
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/v2/pkg/resource.ExtractParamPath("data_exchange_id",false)
	DataExchangeID *string `json:"dataExchangeId,omitempty" tf:"data_exchange_id,omitempty"`

	// Reference to a AnalyticsHubDataExchange in bigquery to populate dataExchangeId.
	// +kubebuilder:validation:Optional
	DataExchangeIDRef *v1.NamespacedReference `json:"dataExchangeIdRef,omitempty" tf:"-"`

	// Selector for a AnalyticsHubDataExchange in bigquery to populate dataExchangeId.
	// +kubebuilder:validation:Optional
	DataExchangeIDSelector *v1.NamespacedSelector `json:"dataExchangeIdSelector,omitempty" tf:"-"`

	// The destination dataset for this subscription.
	// Structure is documented below.
	DestinationDataset *DestinationDatasetInitParameters `json:"destinationDataset,omitempty" tf:"destination_dataset,omitempty"`

	// The ID of the listing. Must contain only Unicode letters, numbers (0-9), underscores (_). Should not use characters that require URL-escaping, or characters outside of ASCII, spaces.
	// +crossplane:generate:reference:type=github.com/upbound/provider-gcp/apis/namespaced/bigquery/v1beta1.AnalyticsHubListing
	ListingID *string `json:"listingId,omitempty" tf:"listing_id,omitempty"`

	// Reference to a AnalyticsHubListing in bigquery to populate listingId.
	// +kubebuilder:validation:Optional
	ListingIDRef *v1.NamespacedReference `json:"listingIdRef,omitempty" tf:"-"`

	// Selector for a AnalyticsHubListing in bigquery to populate listingId.
	// +kubebuilder:validation:Optional
	ListingIDSelector *v1.NamespacedSelector `json:"listingIdSelector,omitempty" tf:"-"`

	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project *string `json:"project,omitempty" tf:"project,omitempty"`
}

type AnalyticsHubListingSubscriptionObservation struct {

	// Commercial info metadata for this subscription. This is set if this is a commercial subscription i.e. if this subscription was created from subscribing to a commercial listing.
	// Structure is documented below.
	CommercialInfo []AnalyticsHubListingSubscriptionCommercialInfoObservation `json:"commercialInfo,omitempty" tf:"commercial_info,omitempty"`

	// Timestamp when the subscription was created.
	CreationTime *string `json:"creationTime,omitempty" tf:"creation_time,omitempty"`

	// The ID of the data exchange. Must contain only Unicode letters, numbers (0-9), underscores (_). Should not use characters that require URL-escaping, or characters outside of ASCII, spaces.
	DataExchangeID *string `json:"dataExchangeId,omitempty" tf:"data_exchange_id,omitempty"`

	// The destination dataset for this subscription.
	// Structure is documented below.
	DestinationDataset *DestinationDatasetObservation `json:"destinationDataset,omitempty" tf:"destination_dataset,omitempty"`

	// an identifier for the resource with format projects/{{project}}/locations/{{location}}/subscriptions/{{subscription_id}}
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// Timestamp when the subscription was last modified.
	LastModifyTime *string `json:"lastModifyTime,omitempty" tf:"last_modify_time,omitempty"`

	// Output only. Map of listing resource names to associated linked resource,
	// e.g. projects/123/locations/US/dataExchanges/456/listings/789 -> projects/123/datasets/my_dataset
	// Structure is documented below.
	LinkedDatasetMap []LinkedDatasetMapObservation `json:"linkedDatasetMap,omitempty" tf:"linked_dataset_map,omitempty"`

	// Output only. Linked resources created in the subscription. Only contains values if state = STATE_ACTIVE.
	// Structure is documented below.
	LinkedResources []LinkedResourcesObservation `json:"linkedResources,omitempty" tf:"linked_resources,omitempty"`

	// The ID of the listing. Must contain only Unicode letters, numbers (0-9), underscores (_). Should not use characters that require URL-escaping, or characters outside of ASCII, spaces.
	ListingID *string `json:"listingId,omitempty" tf:"listing_id,omitempty"`

	// The name of the location of the data exchange. Distinct from the location of the destination data set.
	Location *string `json:"location,omitempty" tf:"location,omitempty"`

	// Output only. By default, false. If true, the Subscriber agreed to the email sharing mandate that is enabled for Listing.
	LogLinkedDatasetQueryUserEmail *bool `json:"logLinkedDatasetQueryUserEmail,omitempty" tf:"log_linked_dataset_query_user_email,omitempty"`

	// The resource name of the subscription. e.g. "projects/myproject/locations/US/subscriptions/123"
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Display name of the project of this subscription.
	OrganizationDisplayName *string `json:"organizationDisplayName,omitempty" tf:"organization_display_name,omitempty"`

	// Organization of the project this subscription belongs to.
	OrganizationID *string `json:"organizationId,omitempty" tf:"organization_id,omitempty"`

	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project *string `json:"project,omitempty" tf:"project,omitempty"`

	// Listing shared asset type.
	ResourceType *string `json:"resourceType,omitempty" tf:"resource_type,omitempty"`

	// Current state of the subscription.
	State *string `json:"state,omitempty" tf:"state,omitempty"`

	// Email of the subscriber.
	SubscriberContact *string `json:"subscriberContact,omitempty" tf:"subscriber_contact,omitempty"`
}

type AnalyticsHubListingSubscriptionParameters struct {

	// The ID of the data exchange. Must contain only Unicode letters, numbers (0-9), underscores (_). Should not use characters that require URL-escaping, or characters outside of ASCII, spaces.
	// +crossplane:generate:reference:type=github.com/upbound/provider-gcp/apis/namespaced/bigquery/v1beta1.AnalyticsHubDataExchange
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/v2/pkg/resource.ExtractParamPath("data_exchange_id",false)
	// +kubebuilder:validation:Optional
	DataExchangeID *string `json:"dataExchangeId,omitempty" tf:"data_exchange_id,omitempty"`

	// Reference to a AnalyticsHubDataExchange in bigquery to populate dataExchangeId.
	// +kubebuilder:validation:Optional
	DataExchangeIDRef *v1.NamespacedReference `json:"dataExchangeIdRef,omitempty" tf:"-"`

	// Selector for a AnalyticsHubDataExchange in bigquery to populate dataExchangeId.
	// +kubebuilder:validation:Optional
	DataExchangeIDSelector *v1.NamespacedSelector `json:"dataExchangeIdSelector,omitempty" tf:"-"`

	// The destination dataset for this subscription.
	// Structure is documented below.
	// +kubebuilder:validation:Optional
	DestinationDataset *DestinationDatasetParameters `json:"destinationDataset,omitempty" tf:"destination_dataset,omitempty"`

	// The ID of the listing. Must contain only Unicode letters, numbers (0-9), underscores (_). Should not use characters that require URL-escaping, or characters outside of ASCII, spaces.
	// +crossplane:generate:reference:type=github.com/upbound/provider-gcp/apis/namespaced/bigquery/v1beta1.AnalyticsHubListing
	// +kubebuilder:validation:Optional
	ListingID *string `json:"listingId,omitempty" tf:"listing_id,omitempty"`

	// Reference to a AnalyticsHubListing in bigquery to populate listingId.
	// +kubebuilder:validation:Optional
	ListingIDRef *v1.NamespacedReference `json:"listingIdRef,omitempty" tf:"-"`

	// Selector for a AnalyticsHubListing in bigquery to populate listingId.
	// +kubebuilder:validation:Optional
	ListingIDSelector *v1.NamespacedSelector `json:"listingIdSelector,omitempty" tf:"-"`

	// The name of the location of the data exchange. Distinct from the location of the destination data set.
	// +kubebuilder:validation:Required
	Location *string `json:"location" tf:"location,omitempty"`

	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	// +kubebuilder:validation:Optional
	Project *string `json:"project,omitempty" tf:"project,omitempty"`
}

type CommercialInfoCloudMarketplaceInitParameters struct {
}

type CommercialInfoCloudMarketplaceObservation struct {

	// (Output)
	// Resource name of the Marketplace Order.
	Order *string `json:"order,omitempty" tf:"order,omitempty"`
}

type CommercialInfoCloudMarketplaceParameters struct {
}

type DatasetReferenceInitParameters struct {

	// A unique ID for this dataset, without the project name. The ID must contain only letters (a-z, A-Z), numbers (0-9), or underscores (_). The maximum length is 1,024 characters.
	DatasetID *string `json:"datasetId,omitempty" tf:"dataset_id,omitempty"`

	// The ID of the project containing this dataset.
	// +crossplane:generate:reference:type=github.com/upbound/provider-gcp/apis/namespaced/bigquery/v1beta1.Dataset
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/v2/pkg/resource.ExtractParamPath("project",false)
	ProjectID *string `json:"projectId,omitempty" tf:"project_id,omitempty"`

	// Reference to a Dataset in bigquery to populate projectId.
	// +kubebuilder:validation:Optional
	ProjectIDRef *v1.NamespacedReference `json:"projectIdRef,omitempty" tf:"-"`

	// Selector for a Dataset in bigquery to populate projectId.
	// +kubebuilder:validation:Optional
	ProjectIDSelector *v1.NamespacedSelector `json:"projectIdSelector,omitempty" tf:"-"`
}

type DatasetReferenceObservation struct {

	// A unique ID for this dataset, without the project name. The ID must contain only letters (a-z, A-Z), numbers (0-9), or underscores (_). The maximum length is 1,024 characters.
	DatasetID *string `json:"datasetId,omitempty" tf:"dataset_id,omitempty"`

	// The ID of the project containing this dataset.
	ProjectID *string `json:"projectId,omitempty" tf:"project_id,omitempty"`
}

type DatasetReferenceParameters struct {

	// A unique ID for this dataset, without the project name. The ID must contain only letters (a-z, A-Z), numbers (0-9), or underscores (_). The maximum length is 1,024 characters.
	// +kubebuilder:validation:Optional
	DatasetID *string `json:"datasetId" tf:"dataset_id,omitempty"`

	// The ID of the project containing this dataset.
	// +crossplane:generate:reference:type=github.com/upbound/provider-gcp/apis/namespaced/bigquery/v1beta1.Dataset
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/v2/pkg/resource.ExtractParamPath("project",false)
	// +kubebuilder:validation:Optional
	ProjectID *string `json:"projectId,omitempty" tf:"project_id,omitempty"`

	// Reference to a Dataset in bigquery to populate projectId.
	// +kubebuilder:validation:Optional
	ProjectIDRef *v1.NamespacedReference `json:"projectIdRef,omitempty" tf:"-"`

	// Selector for a Dataset in bigquery to populate projectId.
	// +kubebuilder:validation:Optional
	ProjectIDSelector *v1.NamespacedSelector `json:"projectIdSelector,omitempty" tf:"-"`
}

type DestinationDatasetInitParameters struct {

	// A reference that identifies the destination dataset.
	// Structure is documented below.
	DatasetReference *DatasetReferenceInitParameters `json:"datasetReference,omitempty" tf:"dataset_reference,omitempty"`

	// A user-friendly description of the dataset.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// A descriptive name for the dataset.
	FriendlyName *string `json:"friendlyName,omitempty" tf:"friendly_name,omitempty"`

	// The labels associated with this dataset. You can use these to
	// organize and group your datasets.
	// +mapType=granular
	Labels map[string]*string `json:"labels,omitempty" tf:"labels,omitempty"`
}

type DestinationDatasetObservation struct {

	// A reference that identifies the destination dataset.
	// Structure is documented below.
	DatasetReference *DatasetReferenceObservation `json:"datasetReference,omitempty" tf:"dataset_reference,omitempty"`

	// A user-friendly description of the dataset.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// A descriptive name for the dataset.
	FriendlyName *string `json:"friendlyName,omitempty" tf:"friendly_name,omitempty"`

	// The labels associated with this dataset. You can use these to
	// organize and group your datasets.
	// +mapType=granular
	Labels map[string]*string `json:"labels,omitempty" tf:"labels,omitempty"`

	// The geographic location where the dataset should reside.
	// See https://cloud.google.com/bigquery/docs/locations for supported locations.
	Location *string `json:"location,omitempty" tf:"location,omitempty"`
}

type DestinationDatasetParameters struct {

	// A reference that identifies the destination dataset.
	// Structure is documented below.
	// +kubebuilder:validation:Optional
	DatasetReference *DatasetReferenceParameters `json:"datasetReference" tf:"dataset_reference,omitempty"`

	// A user-friendly description of the dataset.
	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// A descriptive name for the dataset.
	// +kubebuilder:validation:Optional
	FriendlyName *string `json:"friendlyName,omitempty" tf:"friendly_name,omitempty"`

	// The labels associated with this dataset. You can use these to
	// organize and group your datasets.
	// +kubebuilder:validation:Optional
	// +mapType=granular
	Labels map[string]*string `json:"labels,omitempty" tf:"labels,omitempty"`

	// The geographic location where the dataset should reside.
	// See https://cloud.google.com/bigquery/docs/locations for supported locations.
	// +kubebuilder:validation:Required
	Location *string `json:"location" tf:"location,omitempty"`
}

type LinkedDatasetMapInitParameters struct {
}

type LinkedDatasetMapObservation struct {

	// (Output)
	// Output only. Name of the linked dataset, e.g. projects/subscriberproject/datasets/linkedDataset
	LinkedDataset *string `json:"linkedDataset,omitempty" tf:"linked_dataset,omitempty"`

	// (Output)
	// Output only. Listing for which linked resource is created.
	Listing *string `json:"listing,omitempty" tf:"listing,omitempty"`

	// The identifier for this object. Format specified above.
	ResourceName *string `json:"resourceName,omitempty" tf:"resource_name,omitempty"`
}

type LinkedDatasetMapParameters struct {
}

type LinkedResourcesInitParameters struct {
}

type LinkedResourcesObservation struct {

	// (Output)
	// Output only. Name of the linked dataset, e.g. projects/subscriberproject/datasets/linkedDataset
	LinkedDataset *string `json:"linkedDataset,omitempty" tf:"linked_dataset,omitempty"`

	// (Output)
	// Output only. Listing for which linked resource is created.
	Listing *string `json:"listing,omitempty" tf:"listing,omitempty"`
}

type LinkedResourcesParameters struct {
}

// AnalyticsHubListingSubscriptionSpec defines the desired state of AnalyticsHubListingSubscription
type AnalyticsHubListingSubscriptionSpec struct {
	v2.ManagedResourceSpec `json:",inline"`
	ForProvider            AnalyticsHubListingSubscriptionParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider AnalyticsHubListingSubscriptionInitParameters `json:"initProvider,omitempty"`
}

// AnalyticsHubListingSubscriptionStatus defines the observed state of AnalyticsHubListingSubscription.
type AnalyticsHubListingSubscriptionStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        AnalyticsHubListingSubscriptionObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// AnalyticsHubListingSubscription is the Schema for the AnalyticsHubListingSubscriptions API. A Bigquery Analytics Hub listing subscription
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Namespaced,categories={crossplane,managed,gcp}
type AnalyticsHubListingSubscription struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.destinationDataset) || (has(self.initProvider) && has(self.initProvider.destinationDataset))",message="spec.forProvider.destinationDataset is a required parameter"
	Spec   AnalyticsHubListingSubscriptionSpec   `json:"spec"`
	Status AnalyticsHubListingSubscriptionStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// AnalyticsHubListingSubscriptionList contains a list of AnalyticsHubListingSubscriptions
type AnalyticsHubListingSubscriptionList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []AnalyticsHubListingSubscription `json:"items"`
}

// Repository type metadata.
var (
	AnalyticsHubListingSubscription_Kind             = "AnalyticsHubListingSubscription"
	AnalyticsHubListingSubscription_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: AnalyticsHubListingSubscription_Kind}.String()
	AnalyticsHubListingSubscription_KindAPIVersion   = AnalyticsHubListingSubscription_Kind + "." + CRDGroupVersion.String()
	AnalyticsHubListingSubscription_GroupVersionKind = CRDGroupVersion.WithKind(AnalyticsHubListingSubscription_Kind)
)

func init() {
	SchemeBuilder.Register(&AnalyticsHubListingSubscription{}, &AnalyticsHubListingSubscriptionList{})
}
