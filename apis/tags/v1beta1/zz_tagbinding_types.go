/*
Copyright 2021 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by upjet. DO NOT EDIT.

package v1beta1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type TagBindingInitParameters struct {

	// The full resource name of the resource the TagValue is bound to. E.g. //cloudresourcemanager.googleapis.com/projects/123
	Parent *string `json:"parent,omitempty" tf:"parent,omitempty"`

	// The TagValue of the TagBinding. Must be of the form tagValues/456.
	TagValue *string `json:"tagValue,omitempty" tf:"tag_value,omitempty"`
}

type TagBindingObservation struct {

	// an identifier for the resource with format tagBindings/{{name}}
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// The generated id for the TagBinding. This is a string of the form: tagBindings/{full-resource-name}/{tag-value-name}
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// The full resource name of the resource the TagValue is bound to. E.g. //cloudresourcemanager.googleapis.com/projects/123
	Parent *string `json:"parent,omitempty" tf:"parent,omitempty"`

	// The TagValue of the TagBinding. Must be of the form tagValues/456.
	TagValue *string `json:"tagValue,omitempty" tf:"tag_value,omitempty"`
}

type TagBindingParameters struct {

	// The full resource name of the resource the TagValue is bound to. E.g. //cloudresourcemanager.googleapis.com/projects/123
	// +kubebuilder:validation:Optional
	Parent *string `json:"parent,omitempty" tf:"parent,omitempty"`

	// The TagValue of the TagBinding. Must be of the form tagValues/456.
	// +kubebuilder:validation:Optional
	TagValue *string `json:"tagValue,omitempty" tf:"tag_value,omitempty"`
}

// TagBindingSpec defines the desired state of TagBinding
type TagBindingSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     TagBindingParameters `json:"forProvider"`
	// THIS IS AN ALPHA FIELD. Do not use it in production. It is not honored
	// unless the relevant Crossplane feature flag is enabled, and may be
	// changed or removed without notice.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider TagBindingInitParameters `json:"initProvider,omitempty"`
}

// TagBindingStatus defines the observed state of TagBinding.
type TagBindingStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        TagBindingObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// TagBinding is the Schema for the TagBindings API. A TagBinding represents a connection between a TagValue and a cloud resource (currently project, folder, or organization).
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,gcp}
type TagBinding struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.parent) || has(self.initProvider.parent)",message="parent is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.tagValue) || has(self.initProvider.tagValue)",message="tagValue is a required parameter"
	Spec   TagBindingSpec   `json:"spec"`
	Status TagBindingStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// TagBindingList contains a list of TagBindings
type TagBindingList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []TagBinding `json:"items"`
}

// Repository type metadata.
var (
	TagBinding_Kind             = "TagBinding"
	TagBinding_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: TagBinding_Kind}.String()
	TagBinding_KindAPIVersion   = TagBinding_Kind + "." + CRDGroupVersion.String()
	TagBinding_GroupVersionKind = CRDGroupVersion.WithKind(TagBinding_Kind)
)

func init() {
	SchemeBuilder.Register(&TagBinding{}, &TagBindingList{})
}
