//go:build !ignore_autogenerated

// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by controller-gen. DO NOT EDIT.

package v1beta1

import (
	"github.com/crossplane/crossplane-runtime/apis/common/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AccessDatasetInitParameters) DeepCopyInto(out *AccessDatasetInitParameters) {
	*out = *in
	if in.Dataset != nil {
		in, out := &in.Dataset, &out.Dataset
		*out = make([]DatasetDatasetInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TargetTypes != nil {
		in, out := &in.TargetTypes, &out.TargetTypes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AccessDatasetInitParameters.
func (in *AccessDatasetInitParameters) DeepCopy() *AccessDatasetInitParameters {
	if in == nil {
		return nil
	}
	out := new(AccessDatasetInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AccessDatasetObservation) DeepCopyInto(out *AccessDatasetObservation) {
	*out = *in
	if in.Dataset != nil {
		in, out := &in.Dataset, &out.Dataset
		*out = make([]DatasetDatasetObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TargetTypes != nil {
		in, out := &in.TargetTypes, &out.TargetTypes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AccessDatasetObservation.
func (in *AccessDatasetObservation) DeepCopy() *AccessDatasetObservation {
	if in == nil {
		return nil
	}
	out := new(AccessDatasetObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AccessDatasetParameters) DeepCopyInto(out *AccessDatasetParameters) {
	*out = *in
	if in.Dataset != nil {
		in, out := &in.Dataset, &out.Dataset
		*out = make([]DatasetDatasetParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TargetTypes != nil {
		in, out := &in.TargetTypes, &out.TargetTypes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AccessDatasetParameters.
func (in *AccessDatasetParameters) DeepCopy() *AccessDatasetParameters {
	if in == nil {
		return nil
	}
	out := new(AccessDatasetParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AccessInitParameters) DeepCopyInto(out *AccessInitParameters) {
	*out = *in
	if in.Dataset != nil {
		in, out := &in.Dataset, &out.Dataset
		*out = make([]AccessDatasetInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Domain != nil {
		in, out := &in.Domain, &out.Domain
		*out = new(string)
		**out = **in
	}
	if in.GroupByEmail != nil {
		in, out := &in.GroupByEmail, &out.GroupByEmail
		*out = new(string)
		**out = **in
	}
	if in.IAMMember != nil {
		in, out := &in.IAMMember, &out.IAMMember
		*out = new(string)
		**out = **in
	}
	if in.Role != nil {
		in, out := &in.Role, &out.Role
		*out = new(string)
		**out = **in
	}
	if in.Routine != nil {
		in, out := &in.Routine, &out.Routine
		*out = make([]RoutineInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SpecialGroup != nil {
		in, out := &in.SpecialGroup, &out.SpecialGroup
		*out = new(string)
		**out = **in
	}
	if in.UserByEmail != nil {
		in, out := &in.UserByEmail, &out.UserByEmail
		*out = new(string)
		**out = **in
	}
	if in.UserByEmailRef != nil {
		in, out := &in.UserByEmailRef, &out.UserByEmailRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.UserByEmailSelector != nil {
		in, out := &in.UserByEmailSelector, &out.UserByEmailSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.View != nil {
		in, out := &in.View, &out.View
		*out = make([]ViewInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AccessInitParameters.
func (in *AccessInitParameters) DeepCopy() *AccessInitParameters {
	if in == nil {
		return nil
	}
	out := new(AccessInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AccessObservation) DeepCopyInto(out *AccessObservation) {
	*out = *in
	if in.Dataset != nil {
		in, out := &in.Dataset, &out.Dataset
		*out = make([]AccessDatasetObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Domain != nil {
		in, out := &in.Domain, &out.Domain
		*out = new(string)
		**out = **in
	}
	if in.GroupByEmail != nil {
		in, out := &in.GroupByEmail, &out.GroupByEmail
		*out = new(string)
		**out = **in
	}
	if in.IAMMember != nil {
		in, out := &in.IAMMember, &out.IAMMember
		*out = new(string)
		**out = **in
	}
	if in.Role != nil {
		in, out := &in.Role, &out.Role
		*out = new(string)
		**out = **in
	}
	if in.Routine != nil {
		in, out := &in.Routine, &out.Routine
		*out = make([]RoutineObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SpecialGroup != nil {
		in, out := &in.SpecialGroup, &out.SpecialGroup
		*out = new(string)
		**out = **in
	}
	if in.UserByEmail != nil {
		in, out := &in.UserByEmail, &out.UserByEmail
		*out = new(string)
		**out = **in
	}
	if in.View != nil {
		in, out := &in.View, &out.View
		*out = make([]ViewObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AccessObservation.
func (in *AccessObservation) DeepCopy() *AccessObservation {
	if in == nil {
		return nil
	}
	out := new(AccessObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AccessParameters) DeepCopyInto(out *AccessParameters) {
	*out = *in
	if in.Dataset != nil {
		in, out := &in.Dataset, &out.Dataset
		*out = make([]AccessDatasetParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Domain != nil {
		in, out := &in.Domain, &out.Domain
		*out = new(string)
		**out = **in
	}
	if in.GroupByEmail != nil {
		in, out := &in.GroupByEmail, &out.GroupByEmail
		*out = new(string)
		**out = **in
	}
	if in.IAMMember != nil {
		in, out := &in.IAMMember, &out.IAMMember
		*out = new(string)
		**out = **in
	}
	if in.Role != nil {
		in, out := &in.Role, &out.Role
		*out = new(string)
		**out = **in
	}
	if in.Routine != nil {
		in, out := &in.Routine, &out.Routine
		*out = make([]RoutineParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SpecialGroup != nil {
		in, out := &in.SpecialGroup, &out.SpecialGroup
		*out = new(string)
		**out = **in
	}
	if in.UserByEmail != nil {
		in, out := &in.UserByEmail, &out.UserByEmail
		*out = new(string)
		**out = **in
	}
	if in.UserByEmailRef != nil {
		in, out := &in.UserByEmailRef, &out.UserByEmailRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.UserByEmailSelector != nil {
		in, out := &in.UserByEmailSelector, &out.UserByEmailSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.View != nil {
		in, out := &in.View, &out.View
		*out = make([]ViewParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AccessParameters.
func (in *AccessParameters) DeepCopy() *AccessParameters {
	if in == nil {
		return nil
	}
	out := new(AccessParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AccessRoleInitParameters) DeepCopyInto(out *AccessRoleInitParameters) {
	*out = *in
	if in.IAMRoleID != nil {
		in, out := &in.IAMRoleID, &out.IAMRoleID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AccessRoleInitParameters.
func (in *AccessRoleInitParameters) DeepCopy() *AccessRoleInitParameters {
	if in == nil {
		return nil
	}
	out := new(AccessRoleInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AccessRoleObservation) DeepCopyInto(out *AccessRoleObservation) {
	*out = *in
	if in.IAMRoleID != nil {
		in, out := &in.IAMRoleID, &out.IAMRoleID
		*out = new(string)
		**out = **in
	}
	if in.Identity != nil {
		in, out := &in.Identity, &out.Identity
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AccessRoleObservation.
func (in *AccessRoleObservation) DeepCopy() *AccessRoleObservation {
	if in == nil {
		return nil
	}
	out := new(AccessRoleObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AccessRoleParameters) DeepCopyInto(out *AccessRoleParameters) {
	*out = *in
	if in.IAMRoleID != nil {
		in, out := &in.IAMRoleID, &out.IAMRoleID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AccessRoleParameters.
func (in *AccessRoleParameters) DeepCopy() *AccessRoleParameters {
	if in == nil {
		return nil
	}
	out := new(AccessRoleParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AnalyticsHubDataExchange) DeepCopyInto(out *AnalyticsHubDataExchange) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AnalyticsHubDataExchange.
func (in *AnalyticsHubDataExchange) DeepCopy() *AnalyticsHubDataExchange {
	if in == nil {
		return nil
	}
	out := new(AnalyticsHubDataExchange)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AnalyticsHubDataExchange) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AnalyticsHubDataExchangeIAMMember) DeepCopyInto(out *AnalyticsHubDataExchangeIAMMember) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AnalyticsHubDataExchangeIAMMember.
func (in *AnalyticsHubDataExchangeIAMMember) DeepCopy() *AnalyticsHubDataExchangeIAMMember {
	if in == nil {
		return nil
	}
	out := new(AnalyticsHubDataExchangeIAMMember)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AnalyticsHubDataExchangeIAMMember) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AnalyticsHubDataExchangeIAMMemberInitParameters) DeepCopyInto(out *AnalyticsHubDataExchangeIAMMemberInitParameters) {
	*out = *in
	if in.Condition != nil {
		in, out := &in.Condition, &out.Condition
		*out = make([]ConditionInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DataExchangeID != nil {
		in, out := &in.DataExchangeID, &out.DataExchangeID
		*out = new(string)
		**out = **in
	}
	if in.DataExchangeIDRef != nil {
		in, out := &in.DataExchangeIDRef, &out.DataExchangeIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.DataExchangeIDSelector != nil {
		in, out := &in.DataExchangeIDSelector, &out.DataExchangeIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.Member != nil {
		in, out := &in.Member, &out.Member
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Role != nil {
		in, out := &in.Role, &out.Role
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AnalyticsHubDataExchangeIAMMemberInitParameters.
func (in *AnalyticsHubDataExchangeIAMMemberInitParameters) DeepCopy() *AnalyticsHubDataExchangeIAMMemberInitParameters {
	if in == nil {
		return nil
	}
	out := new(AnalyticsHubDataExchangeIAMMemberInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AnalyticsHubDataExchangeIAMMemberList) DeepCopyInto(out *AnalyticsHubDataExchangeIAMMemberList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]AnalyticsHubDataExchangeIAMMember, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AnalyticsHubDataExchangeIAMMemberList.
func (in *AnalyticsHubDataExchangeIAMMemberList) DeepCopy() *AnalyticsHubDataExchangeIAMMemberList {
	if in == nil {
		return nil
	}
	out := new(AnalyticsHubDataExchangeIAMMemberList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AnalyticsHubDataExchangeIAMMemberList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AnalyticsHubDataExchangeIAMMemberObservation) DeepCopyInto(out *AnalyticsHubDataExchangeIAMMemberObservation) {
	*out = *in
	if in.Condition != nil {
		in, out := &in.Condition, &out.Condition
		*out = make([]ConditionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DataExchangeID != nil {
		in, out := &in.DataExchangeID, &out.DataExchangeID
		*out = new(string)
		**out = **in
	}
	if in.Etag != nil {
		in, out := &in.Etag, &out.Etag
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.Member != nil {
		in, out := &in.Member, &out.Member
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Role != nil {
		in, out := &in.Role, &out.Role
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AnalyticsHubDataExchangeIAMMemberObservation.
func (in *AnalyticsHubDataExchangeIAMMemberObservation) DeepCopy() *AnalyticsHubDataExchangeIAMMemberObservation {
	if in == nil {
		return nil
	}
	out := new(AnalyticsHubDataExchangeIAMMemberObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AnalyticsHubDataExchangeIAMMemberParameters) DeepCopyInto(out *AnalyticsHubDataExchangeIAMMemberParameters) {
	*out = *in
	if in.Condition != nil {
		in, out := &in.Condition, &out.Condition
		*out = make([]ConditionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DataExchangeID != nil {
		in, out := &in.DataExchangeID, &out.DataExchangeID
		*out = new(string)
		**out = **in
	}
	if in.DataExchangeIDRef != nil {
		in, out := &in.DataExchangeIDRef, &out.DataExchangeIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.DataExchangeIDSelector != nil {
		in, out := &in.DataExchangeIDSelector, &out.DataExchangeIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.Member != nil {
		in, out := &in.Member, &out.Member
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Role != nil {
		in, out := &in.Role, &out.Role
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AnalyticsHubDataExchangeIAMMemberParameters.
func (in *AnalyticsHubDataExchangeIAMMemberParameters) DeepCopy() *AnalyticsHubDataExchangeIAMMemberParameters {
	if in == nil {
		return nil
	}
	out := new(AnalyticsHubDataExchangeIAMMemberParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AnalyticsHubDataExchangeIAMMemberSpec) DeepCopyInto(out *AnalyticsHubDataExchangeIAMMemberSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AnalyticsHubDataExchangeIAMMemberSpec.
func (in *AnalyticsHubDataExchangeIAMMemberSpec) DeepCopy() *AnalyticsHubDataExchangeIAMMemberSpec {
	if in == nil {
		return nil
	}
	out := new(AnalyticsHubDataExchangeIAMMemberSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AnalyticsHubDataExchangeIAMMemberStatus) DeepCopyInto(out *AnalyticsHubDataExchangeIAMMemberStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AnalyticsHubDataExchangeIAMMemberStatus.
func (in *AnalyticsHubDataExchangeIAMMemberStatus) DeepCopy() *AnalyticsHubDataExchangeIAMMemberStatus {
	if in == nil {
		return nil
	}
	out := new(AnalyticsHubDataExchangeIAMMemberStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AnalyticsHubDataExchangeInitParameters) DeepCopyInto(out *AnalyticsHubDataExchangeInitParameters) {
	*out = *in
	if in.DataExchangeID != nil {
		in, out := &in.DataExchangeID, &out.DataExchangeID
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.Documentation != nil {
		in, out := &in.Documentation, &out.Documentation
		*out = new(string)
		**out = **in
	}
	if in.Icon != nil {
		in, out := &in.Icon, &out.Icon
		*out = new(string)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.PrimaryContact != nil {
		in, out := &in.PrimaryContact, &out.PrimaryContact
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AnalyticsHubDataExchangeInitParameters.
func (in *AnalyticsHubDataExchangeInitParameters) DeepCopy() *AnalyticsHubDataExchangeInitParameters {
	if in == nil {
		return nil
	}
	out := new(AnalyticsHubDataExchangeInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AnalyticsHubDataExchangeList) DeepCopyInto(out *AnalyticsHubDataExchangeList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]AnalyticsHubDataExchange, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AnalyticsHubDataExchangeList.
func (in *AnalyticsHubDataExchangeList) DeepCopy() *AnalyticsHubDataExchangeList {
	if in == nil {
		return nil
	}
	out := new(AnalyticsHubDataExchangeList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AnalyticsHubDataExchangeList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AnalyticsHubDataExchangeObservation) DeepCopyInto(out *AnalyticsHubDataExchangeObservation) {
	*out = *in
	if in.DataExchangeID != nil {
		in, out := &in.DataExchangeID, &out.DataExchangeID
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.Documentation != nil {
		in, out := &in.Documentation, &out.Documentation
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Icon != nil {
		in, out := &in.Icon, &out.Icon
		*out = new(string)
		**out = **in
	}
	if in.ListingCount != nil {
		in, out := &in.ListingCount, &out.ListingCount
		*out = new(float64)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PrimaryContact != nil {
		in, out := &in.PrimaryContact, &out.PrimaryContact
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AnalyticsHubDataExchangeObservation.
func (in *AnalyticsHubDataExchangeObservation) DeepCopy() *AnalyticsHubDataExchangeObservation {
	if in == nil {
		return nil
	}
	out := new(AnalyticsHubDataExchangeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AnalyticsHubDataExchangeParameters) DeepCopyInto(out *AnalyticsHubDataExchangeParameters) {
	*out = *in
	if in.DataExchangeID != nil {
		in, out := &in.DataExchangeID, &out.DataExchangeID
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.Documentation != nil {
		in, out := &in.Documentation, &out.Documentation
		*out = new(string)
		**out = **in
	}
	if in.Icon != nil {
		in, out := &in.Icon, &out.Icon
		*out = new(string)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.PrimaryContact != nil {
		in, out := &in.PrimaryContact, &out.PrimaryContact
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AnalyticsHubDataExchangeParameters.
func (in *AnalyticsHubDataExchangeParameters) DeepCopy() *AnalyticsHubDataExchangeParameters {
	if in == nil {
		return nil
	}
	out := new(AnalyticsHubDataExchangeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AnalyticsHubDataExchangeSpec) DeepCopyInto(out *AnalyticsHubDataExchangeSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AnalyticsHubDataExchangeSpec.
func (in *AnalyticsHubDataExchangeSpec) DeepCopy() *AnalyticsHubDataExchangeSpec {
	if in == nil {
		return nil
	}
	out := new(AnalyticsHubDataExchangeSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AnalyticsHubDataExchangeStatus) DeepCopyInto(out *AnalyticsHubDataExchangeStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AnalyticsHubDataExchangeStatus.
func (in *AnalyticsHubDataExchangeStatus) DeepCopy() *AnalyticsHubDataExchangeStatus {
	if in == nil {
		return nil
	}
	out := new(AnalyticsHubDataExchangeStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AnalyticsHubListing) DeepCopyInto(out *AnalyticsHubListing) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AnalyticsHubListing.
func (in *AnalyticsHubListing) DeepCopy() *AnalyticsHubListing {
	if in == nil {
		return nil
	}
	out := new(AnalyticsHubListing)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AnalyticsHubListing) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AnalyticsHubListingInitParameters) DeepCopyInto(out *AnalyticsHubListingInitParameters) {
	*out = *in
	if in.BigqueryDataset != nil {
		in, out := &in.BigqueryDataset, &out.BigqueryDataset
		*out = make([]BigqueryDatasetInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Categories != nil {
		in, out := &in.Categories, &out.Categories
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.DataProvider != nil {
		in, out := &in.DataProvider, &out.DataProvider
		*out = make([]DataProviderInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.Documentation != nil {
		in, out := &in.Documentation, &out.Documentation
		*out = new(string)
		**out = **in
	}
	if in.Icon != nil {
		in, out := &in.Icon, &out.Icon
		*out = new(string)
		**out = **in
	}
	if in.PrimaryContact != nil {
		in, out := &in.PrimaryContact, &out.PrimaryContact
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Publisher != nil {
		in, out := &in.Publisher, &out.Publisher
		*out = make([]PublisherInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RequestAccess != nil {
		in, out := &in.RequestAccess, &out.RequestAccess
		*out = new(string)
		**out = **in
	}
	if in.RestrictedExportConfig != nil {
		in, out := &in.RestrictedExportConfig, &out.RestrictedExportConfig
		*out = make([]RestrictedExportConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AnalyticsHubListingInitParameters.
func (in *AnalyticsHubListingInitParameters) DeepCopy() *AnalyticsHubListingInitParameters {
	if in == nil {
		return nil
	}
	out := new(AnalyticsHubListingInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AnalyticsHubListingList) DeepCopyInto(out *AnalyticsHubListingList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]AnalyticsHubListing, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AnalyticsHubListingList.
func (in *AnalyticsHubListingList) DeepCopy() *AnalyticsHubListingList {
	if in == nil {
		return nil
	}
	out := new(AnalyticsHubListingList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AnalyticsHubListingList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AnalyticsHubListingObservation) DeepCopyInto(out *AnalyticsHubListingObservation) {
	*out = *in
	if in.BigqueryDataset != nil {
		in, out := &in.BigqueryDataset, &out.BigqueryDataset
		*out = make([]BigqueryDatasetObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Categories != nil {
		in, out := &in.Categories, &out.Categories
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.DataExchangeID != nil {
		in, out := &in.DataExchangeID, &out.DataExchangeID
		*out = new(string)
		**out = **in
	}
	if in.DataProvider != nil {
		in, out := &in.DataProvider, &out.DataProvider
		*out = make([]DataProviderObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.Documentation != nil {
		in, out := &in.Documentation, &out.Documentation
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Icon != nil {
		in, out := &in.Icon, &out.Icon
		*out = new(string)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PrimaryContact != nil {
		in, out := &in.PrimaryContact, &out.PrimaryContact
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Publisher != nil {
		in, out := &in.Publisher, &out.Publisher
		*out = make([]PublisherObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RequestAccess != nil {
		in, out := &in.RequestAccess, &out.RequestAccess
		*out = new(string)
		**out = **in
	}
	if in.RestrictedExportConfig != nil {
		in, out := &in.RestrictedExportConfig, &out.RestrictedExportConfig
		*out = make([]RestrictedExportConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AnalyticsHubListingObservation.
func (in *AnalyticsHubListingObservation) DeepCopy() *AnalyticsHubListingObservation {
	if in == nil {
		return nil
	}
	out := new(AnalyticsHubListingObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AnalyticsHubListingParameters) DeepCopyInto(out *AnalyticsHubListingParameters) {
	*out = *in
	if in.BigqueryDataset != nil {
		in, out := &in.BigqueryDataset, &out.BigqueryDataset
		*out = make([]BigqueryDatasetParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Categories != nil {
		in, out := &in.Categories, &out.Categories
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.DataExchangeID != nil {
		in, out := &in.DataExchangeID, &out.DataExchangeID
		*out = new(string)
		**out = **in
	}
	if in.DataExchangeIDRef != nil {
		in, out := &in.DataExchangeIDRef, &out.DataExchangeIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.DataExchangeIDSelector != nil {
		in, out := &in.DataExchangeIDSelector, &out.DataExchangeIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.DataProvider != nil {
		in, out := &in.DataProvider, &out.DataProvider
		*out = make([]DataProviderParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.Documentation != nil {
		in, out := &in.Documentation, &out.Documentation
		*out = new(string)
		**out = **in
	}
	if in.Icon != nil {
		in, out := &in.Icon, &out.Icon
		*out = new(string)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.PrimaryContact != nil {
		in, out := &in.PrimaryContact, &out.PrimaryContact
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Publisher != nil {
		in, out := &in.Publisher, &out.Publisher
		*out = make([]PublisherParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RequestAccess != nil {
		in, out := &in.RequestAccess, &out.RequestAccess
		*out = new(string)
		**out = **in
	}
	if in.RestrictedExportConfig != nil {
		in, out := &in.RestrictedExportConfig, &out.RestrictedExportConfig
		*out = make([]RestrictedExportConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AnalyticsHubListingParameters.
func (in *AnalyticsHubListingParameters) DeepCopy() *AnalyticsHubListingParameters {
	if in == nil {
		return nil
	}
	out := new(AnalyticsHubListingParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AnalyticsHubListingSpec) DeepCopyInto(out *AnalyticsHubListingSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AnalyticsHubListingSpec.
func (in *AnalyticsHubListingSpec) DeepCopy() *AnalyticsHubListingSpec {
	if in == nil {
		return nil
	}
	out := new(AnalyticsHubListingSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AnalyticsHubListingStatus) DeepCopyInto(out *AnalyticsHubListingStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AnalyticsHubListingStatus.
func (in *AnalyticsHubListingStatus) DeepCopy() *AnalyticsHubListingStatus {
	if in == nil {
		return nil
	}
	out := new(AnalyticsHubListingStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ArgumentsInitParameters) DeepCopyInto(out *ArgumentsInitParameters) {
	*out = *in
	if in.ArgumentKind != nil {
		in, out := &in.ArgumentKind, &out.ArgumentKind
		*out = new(string)
		**out = **in
	}
	if in.DataType != nil {
		in, out := &in.DataType, &out.DataType
		*out = new(string)
		**out = **in
	}
	if in.Mode != nil {
		in, out := &in.Mode, &out.Mode
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ArgumentsInitParameters.
func (in *ArgumentsInitParameters) DeepCopy() *ArgumentsInitParameters {
	if in == nil {
		return nil
	}
	out := new(ArgumentsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ArgumentsObservation) DeepCopyInto(out *ArgumentsObservation) {
	*out = *in
	if in.ArgumentKind != nil {
		in, out := &in.ArgumentKind, &out.ArgumentKind
		*out = new(string)
		**out = **in
	}
	if in.DataType != nil {
		in, out := &in.DataType, &out.DataType
		*out = new(string)
		**out = **in
	}
	if in.Mode != nil {
		in, out := &in.Mode, &out.Mode
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ArgumentsObservation.
func (in *ArgumentsObservation) DeepCopy() *ArgumentsObservation {
	if in == nil {
		return nil
	}
	out := new(ArgumentsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ArgumentsParameters) DeepCopyInto(out *ArgumentsParameters) {
	*out = *in
	if in.ArgumentKind != nil {
		in, out := &in.ArgumentKind, &out.ArgumentKind
		*out = new(string)
		**out = **in
	}
	if in.DataType != nil {
		in, out := &in.DataType, &out.DataType
		*out = new(string)
		**out = **in
	}
	if in.Mode != nil {
		in, out := &in.Mode, &out.Mode
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ArgumentsParameters.
func (in *ArgumentsParameters) DeepCopy() *ArgumentsParameters {
	if in == nil {
		return nil
	}
	out := new(ArgumentsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoscaleInitParameters) DeepCopyInto(out *AutoscaleInitParameters) {
	*out = *in
	if in.MaxSlots != nil {
		in, out := &in.MaxSlots, &out.MaxSlots
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoscaleInitParameters.
func (in *AutoscaleInitParameters) DeepCopy() *AutoscaleInitParameters {
	if in == nil {
		return nil
	}
	out := new(AutoscaleInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoscaleObservation) DeepCopyInto(out *AutoscaleObservation) {
	*out = *in
	if in.CurrentSlots != nil {
		in, out := &in.CurrentSlots, &out.CurrentSlots
		*out = new(float64)
		**out = **in
	}
	if in.MaxSlots != nil {
		in, out := &in.MaxSlots, &out.MaxSlots
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoscaleObservation.
func (in *AutoscaleObservation) DeepCopy() *AutoscaleObservation {
	if in == nil {
		return nil
	}
	out := new(AutoscaleObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoscaleParameters) DeepCopyInto(out *AutoscaleParameters) {
	*out = *in
	if in.MaxSlots != nil {
		in, out := &in.MaxSlots, &out.MaxSlots
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoscaleParameters.
func (in *AutoscaleParameters) DeepCopy() *AutoscaleParameters {
	if in == nil {
		return nil
	}
	out := new(AutoscaleParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AvroOptionsInitParameters) DeepCopyInto(out *AvroOptionsInitParameters) {
	*out = *in
	if in.UseAvroLogicalTypes != nil {
		in, out := &in.UseAvroLogicalTypes, &out.UseAvroLogicalTypes
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AvroOptionsInitParameters.
func (in *AvroOptionsInitParameters) DeepCopy() *AvroOptionsInitParameters {
	if in == nil {
		return nil
	}
	out := new(AvroOptionsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AvroOptionsObservation) DeepCopyInto(out *AvroOptionsObservation) {
	*out = *in
	if in.UseAvroLogicalTypes != nil {
		in, out := &in.UseAvroLogicalTypes, &out.UseAvroLogicalTypes
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AvroOptionsObservation.
func (in *AvroOptionsObservation) DeepCopy() *AvroOptionsObservation {
	if in == nil {
		return nil
	}
	out := new(AvroOptionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AvroOptionsParameters) DeepCopyInto(out *AvroOptionsParameters) {
	*out = *in
	if in.UseAvroLogicalTypes != nil {
		in, out := &in.UseAvroLogicalTypes, &out.UseAvroLogicalTypes
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AvroOptionsParameters.
func (in *AvroOptionsParameters) DeepCopy() *AvroOptionsParameters {
	if in == nil {
		return nil
	}
	out := new(AvroOptionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AwsInitParameters) DeepCopyInto(out *AwsInitParameters) {
	*out = *in
	if in.AccessRole != nil {
		in, out := &in.AccessRole, &out.AccessRole
		*out = make([]AccessRoleInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AwsInitParameters.
func (in *AwsInitParameters) DeepCopy() *AwsInitParameters {
	if in == nil {
		return nil
	}
	out := new(AwsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AwsObservation) DeepCopyInto(out *AwsObservation) {
	*out = *in
	if in.AccessRole != nil {
		in, out := &in.AccessRole, &out.AccessRole
		*out = make([]AccessRoleObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AwsObservation.
func (in *AwsObservation) DeepCopy() *AwsObservation {
	if in == nil {
		return nil
	}
	out := new(AwsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AwsParameters) DeepCopyInto(out *AwsParameters) {
	*out = *in
	if in.AccessRole != nil {
		in, out := &in.AccessRole, &out.AccessRole
		*out = make([]AccessRoleParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AwsParameters.
func (in *AwsParameters) DeepCopy() *AwsParameters {
	if in == nil {
		return nil
	}
	out := new(AwsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AzureInitParameters) DeepCopyInto(out *AzureInitParameters) {
	*out = *in
	if in.CustomerTenantID != nil {
		in, out := &in.CustomerTenantID, &out.CustomerTenantID
		*out = new(string)
		**out = **in
	}
	if in.FederatedApplicationClientID != nil {
		in, out := &in.FederatedApplicationClientID, &out.FederatedApplicationClientID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AzureInitParameters.
func (in *AzureInitParameters) DeepCopy() *AzureInitParameters {
	if in == nil {
		return nil
	}
	out := new(AzureInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AzureObservation) DeepCopyInto(out *AzureObservation) {
	*out = *in
	if in.Application != nil {
		in, out := &in.Application, &out.Application
		*out = new(string)
		**out = **in
	}
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.CustomerTenantID != nil {
		in, out := &in.CustomerTenantID, &out.CustomerTenantID
		*out = new(string)
		**out = **in
	}
	if in.FederatedApplicationClientID != nil {
		in, out := &in.FederatedApplicationClientID, &out.FederatedApplicationClientID
		*out = new(string)
		**out = **in
	}
	if in.Identity != nil {
		in, out := &in.Identity, &out.Identity
		*out = new(string)
		**out = **in
	}
	if in.ObjectID != nil {
		in, out := &in.ObjectID, &out.ObjectID
		*out = new(string)
		**out = **in
	}
	if in.RedirectURI != nil {
		in, out := &in.RedirectURI, &out.RedirectURI
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AzureObservation.
func (in *AzureObservation) DeepCopy() *AzureObservation {
	if in == nil {
		return nil
	}
	out := new(AzureObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AzureParameters) DeepCopyInto(out *AzureParameters) {
	*out = *in
	if in.CustomerTenantID != nil {
		in, out := &in.CustomerTenantID, &out.CustomerTenantID
		*out = new(string)
		**out = **in
	}
	if in.FederatedApplicationClientID != nil {
		in, out := &in.FederatedApplicationClientID, &out.FederatedApplicationClientID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AzureParameters.
func (in *AzureParameters) DeepCopy() *AzureParameters {
	if in == nil {
		return nil
	}
	out := new(AzureParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BigqueryDatasetInitParameters) DeepCopyInto(out *BigqueryDatasetInitParameters) {
	*out = *in
	if in.Dataset != nil {
		in, out := &in.Dataset, &out.Dataset
		*out = new(string)
		**out = **in
	}
	if in.DatasetRef != nil {
		in, out := &in.DatasetRef, &out.DatasetRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.DatasetSelector != nil {
		in, out := &in.DatasetSelector, &out.DatasetSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BigqueryDatasetInitParameters.
func (in *BigqueryDatasetInitParameters) DeepCopy() *BigqueryDatasetInitParameters {
	if in == nil {
		return nil
	}
	out := new(BigqueryDatasetInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BigqueryDatasetObservation) DeepCopyInto(out *BigqueryDatasetObservation) {
	*out = *in
	if in.Dataset != nil {
		in, out := &in.Dataset, &out.Dataset
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BigqueryDatasetObservation.
func (in *BigqueryDatasetObservation) DeepCopy() *BigqueryDatasetObservation {
	if in == nil {
		return nil
	}
	out := new(BigqueryDatasetObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BigqueryDatasetParameters) DeepCopyInto(out *BigqueryDatasetParameters) {
	*out = *in
	if in.Dataset != nil {
		in, out := &in.Dataset, &out.Dataset
		*out = new(string)
		**out = **in
	}
	if in.DatasetRef != nil {
		in, out := &in.DatasetRef, &out.DatasetRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.DatasetSelector != nil {
		in, out := &in.DatasetSelector, &out.DatasetSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BigqueryDatasetParameters.
func (in *BigqueryDatasetParameters) DeepCopy() *BigqueryDatasetParameters {
	if in == nil {
		return nil
	}
	out := new(BigqueryDatasetParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CloudResourceInitParameters) DeepCopyInto(out *CloudResourceInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CloudResourceInitParameters.
func (in *CloudResourceInitParameters) DeepCopy() *CloudResourceInitParameters {
	if in == nil {
		return nil
	}
	out := new(CloudResourceInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CloudResourceObservation) DeepCopyInto(out *CloudResourceObservation) {
	*out = *in
	if in.ServiceAccountID != nil {
		in, out := &in.ServiceAccountID, &out.ServiceAccountID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CloudResourceObservation.
func (in *CloudResourceObservation) DeepCopy() *CloudResourceObservation {
	if in == nil {
		return nil
	}
	out := new(CloudResourceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CloudResourceParameters) DeepCopyInto(out *CloudResourceParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CloudResourceParameters.
func (in *CloudResourceParameters) DeepCopy() *CloudResourceParameters {
	if in == nil {
		return nil
	}
	out := new(CloudResourceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CloudSQLInitParameters) DeepCopyInto(out *CloudSQLInitParameters) {
	*out = *in
	if in.Credential != nil {
		in, out := &in.Credential, &out.Credential
		*out = make([]CredentialInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Database != nil {
		in, out := &in.Database, &out.Database
		*out = new(string)
		**out = **in
	}
	if in.DatabaseRef != nil {
		in, out := &in.DatabaseRef, &out.DatabaseRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.DatabaseSelector != nil {
		in, out := &in.DatabaseSelector, &out.DatabaseSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.InstanceID != nil {
		in, out := &in.InstanceID, &out.InstanceID
		*out = new(string)
		**out = **in
	}
	if in.InstanceIDRef != nil {
		in, out := &in.InstanceIDRef, &out.InstanceIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.InstanceIDSelector != nil {
		in, out := &in.InstanceIDSelector, &out.InstanceIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CloudSQLInitParameters.
func (in *CloudSQLInitParameters) DeepCopy() *CloudSQLInitParameters {
	if in == nil {
		return nil
	}
	out := new(CloudSQLInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CloudSQLObservation) DeepCopyInto(out *CloudSQLObservation) {
	*out = *in
	if in.Credential != nil {
		in, out := &in.Credential, &out.Credential
		*out = make([]CredentialObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Database != nil {
		in, out := &in.Database, &out.Database
		*out = new(string)
		**out = **in
	}
	if in.InstanceID != nil {
		in, out := &in.InstanceID, &out.InstanceID
		*out = new(string)
		**out = **in
	}
	if in.ServiceAccountID != nil {
		in, out := &in.ServiceAccountID, &out.ServiceAccountID
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CloudSQLObservation.
func (in *CloudSQLObservation) DeepCopy() *CloudSQLObservation {
	if in == nil {
		return nil
	}
	out := new(CloudSQLObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CloudSQLParameters) DeepCopyInto(out *CloudSQLParameters) {
	*out = *in
	if in.Credential != nil {
		in, out := &in.Credential, &out.Credential
		*out = make([]CredentialParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Database != nil {
		in, out := &in.Database, &out.Database
		*out = new(string)
		**out = **in
	}
	if in.DatabaseRef != nil {
		in, out := &in.DatabaseRef, &out.DatabaseRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.DatabaseSelector != nil {
		in, out := &in.DatabaseSelector, &out.DatabaseSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.InstanceID != nil {
		in, out := &in.InstanceID, &out.InstanceID
		*out = new(string)
		**out = **in
	}
	if in.InstanceIDRef != nil {
		in, out := &in.InstanceIDRef, &out.InstanceIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.InstanceIDSelector != nil {
		in, out := &in.InstanceIDSelector, &out.InstanceIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CloudSQLParameters.
func (in *CloudSQLParameters) DeepCopy() *CloudSQLParameters {
	if in == nil {
		return nil
	}
	out := new(CloudSQLParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CloudSpannerInitParameters) DeepCopyInto(out *CloudSpannerInitParameters) {
	*out = *in
	if in.Database != nil {
		in, out := &in.Database, &out.Database
		*out = new(string)
		**out = **in
	}
	if in.DatabaseRole != nil {
		in, out := &in.DatabaseRole, &out.DatabaseRole
		*out = new(string)
		**out = **in
	}
	if in.MaxParallelism != nil {
		in, out := &in.MaxParallelism, &out.MaxParallelism
		*out = new(float64)
		**out = **in
	}
	if in.UseDataBoost != nil {
		in, out := &in.UseDataBoost, &out.UseDataBoost
		*out = new(bool)
		**out = **in
	}
	if in.UseParallelism != nil {
		in, out := &in.UseParallelism, &out.UseParallelism
		*out = new(bool)
		**out = **in
	}
	if in.UseServerlessAnalytics != nil {
		in, out := &in.UseServerlessAnalytics, &out.UseServerlessAnalytics
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CloudSpannerInitParameters.
func (in *CloudSpannerInitParameters) DeepCopy() *CloudSpannerInitParameters {
	if in == nil {
		return nil
	}
	out := new(CloudSpannerInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CloudSpannerObservation) DeepCopyInto(out *CloudSpannerObservation) {
	*out = *in
	if in.Database != nil {
		in, out := &in.Database, &out.Database
		*out = new(string)
		**out = **in
	}
	if in.DatabaseRole != nil {
		in, out := &in.DatabaseRole, &out.DatabaseRole
		*out = new(string)
		**out = **in
	}
	if in.MaxParallelism != nil {
		in, out := &in.MaxParallelism, &out.MaxParallelism
		*out = new(float64)
		**out = **in
	}
	if in.UseDataBoost != nil {
		in, out := &in.UseDataBoost, &out.UseDataBoost
		*out = new(bool)
		**out = **in
	}
	if in.UseParallelism != nil {
		in, out := &in.UseParallelism, &out.UseParallelism
		*out = new(bool)
		**out = **in
	}
	if in.UseServerlessAnalytics != nil {
		in, out := &in.UseServerlessAnalytics, &out.UseServerlessAnalytics
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CloudSpannerObservation.
func (in *CloudSpannerObservation) DeepCopy() *CloudSpannerObservation {
	if in == nil {
		return nil
	}
	out := new(CloudSpannerObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CloudSpannerParameters) DeepCopyInto(out *CloudSpannerParameters) {
	*out = *in
	if in.Database != nil {
		in, out := &in.Database, &out.Database
		*out = new(string)
		**out = **in
	}
	if in.DatabaseRole != nil {
		in, out := &in.DatabaseRole, &out.DatabaseRole
		*out = new(string)
		**out = **in
	}
	if in.MaxParallelism != nil {
		in, out := &in.MaxParallelism, &out.MaxParallelism
		*out = new(float64)
		**out = **in
	}
	if in.UseDataBoost != nil {
		in, out := &in.UseDataBoost, &out.UseDataBoost
		*out = new(bool)
		**out = **in
	}
	if in.UseParallelism != nil {
		in, out := &in.UseParallelism, &out.UseParallelism
		*out = new(bool)
		**out = **in
	}
	if in.UseServerlessAnalytics != nil {
		in, out := &in.UseServerlessAnalytics, &out.UseServerlessAnalytics
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CloudSpannerParameters.
func (in *CloudSpannerParameters) DeepCopy() *CloudSpannerParameters {
	if in == nil {
		return nil
	}
	out := new(CloudSpannerParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ColumnReferencesInitParameters) DeepCopyInto(out *ColumnReferencesInitParameters) {
	*out = *in
	if in.ReferencedColumn != nil {
		in, out := &in.ReferencedColumn, &out.ReferencedColumn
		*out = new(string)
		**out = **in
	}
	if in.ReferencingColumn != nil {
		in, out := &in.ReferencingColumn, &out.ReferencingColumn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ColumnReferencesInitParameters.
func (in *ColumnReferencesInitParameters) DeepCopy() *ColumnReferencesInitParameters {
	if in == nil {
		return nil
	}
	out := new(ColumnReferencesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ColumnReferencesObservation) DeepCopyInto(out *ColumnReferencesObservation) {
	*out = *in
	if in.ReferencedColumn != nil {
		in, out := &in.ReferencedColumn, &out.ReferencedColumn
		*out = new(string)
		**out = **in
	}
	if in.ReferencingColumn != nil {
		in, out := &in.ReferencingColumn, &out.ReferencingColumn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ColumnReferencesObservation.
func (in *ColumnReferencesObservation) DeepCopy() *ColumnReferencesObservation {
	if in == nil {
		return nil
	}
	out := new(ColumnReferencesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ColumnReferencesParameters) DeepCopyInto(out *ColumnReferencesParameters) {
	*out = *in
	if in.ReferencedColumn != nil {
		in, out := &in.ReferencedColumn, &out.ReferencedColumn
		*out = new(string)
		**out = **in
	}
	if in.ReferencingColumn != nil {
		in, out := &in.ReferencingColumn, &out.ReferencingColumn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ColumnReferencesParameters.
func (in *ColumnReferencesParameters) DeepCopy() *ColumnReferencesParameters {
	if in == nil {
		return nil
	}
	out := new(ColumnReferencesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConditionInitParameters) DeepCopyInto(out *ConditionInitParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Expression != nil {
		in, out := &in.Expression, &out.Expression
		*out = new(string)
		**out = **in
	}
	if in.Title != nil {
		in, out := &in.Title, &out.Title
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConditionInitParameters.
func (in *ConditionInitParameters) DeepCopy() *ConditionInitParameters {
	if in == nil {
		return nil
	}
	out := new(ConditionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConditionObservation) DeepCopyInto(out *ConditionObservation) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Expression != nil {
		in, out := &in.Expression, &out.Expression
		*out = new(string)
		**out = **in
	}
	if in.Title != nil {
		in, out := &in.Title, &out.Title
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConditionObservation.
func (in *ConditionObservation) DeepCopy() *ConditionObservation {
	if in == nil {
		return nil
	}
	out := new(ConditionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConditionParameters) DeepCopyInto(out *ConditionParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Expression != nil {
		in, out := &in.Expression, &out.Expression
		*out = new(string)
		**out = **in
	}
	if in.Title != nil {
		in, out := &in.Title, &out.Title
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConditionParameters.
func (in *ConditionParameters) DeepCopy() *ConditionParameters {
	if in == nil {
		return nil
	}
	out := new(ConditionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Connection) DeepCopyInto(out *Connection) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Connection.
func (in *Connection) DeepCopy() *Connection {
	if in == nil {
		return nil
	}
	out := new(Connection)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Connection) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectionInitParameters) DeepCopyInto(out *ConnectionInitParameters) {
	*out = *in
	if in.Aws != nil {
		in, out := &in.Aws, &out.Aws
		*out = make([]AwsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Azure != nil {
		in, out := &in.Azure, &out.Azure
		*out = make([]AzureInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CloudResource != nil {
		in, out := &in.CloudResource, &out.CloudResource
		*out = make([]CloudResourceInitParameters, len(*in))
		copy(*out, *in)
	}
	if in.CloudSQL != nil {
		in, out := &in.CloudSQL, &out.CloudSQL
		*out = make([]CloudSQLInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CloudSpanner != nil {
		in, out := &in.CloudSpanner, &out.CloudSpanner
		*out = make([]CloudSpannerInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ConnectionID != nil {
		in, out := &in.ConnectionID, &out.ConnectionID
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.FriendlyName != nil {
		in, out := &in.FriendlyName, &out.FriendlyName
		*out = new(string)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Spark != nil {
		in, out := &in.Spark, &out.Spark
		*out = make([]SparkInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectionInitParameters.
func (in *ConnectionInitParameters) DeepCopy() *ConnectionInitParameters {
	if in == nil {
		return nil
	}
	out := new(ConnectionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectionList) DeepCopyInto(out *ConnectionList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Connection, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectionList.
func (in *ConnectionList) DeepCopy() *ConnectionList {
	if in == nil {
		return nil
	}
	out := new(ConnectionList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ConnectionList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectionObservation) DeepCopyInto(out *ConnectionObservation) {
	*out = *in
	if in.Aws != nil {
		in, out := &in.Aws, &out.Aws
		*out = make([]AwsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Azure != nil {
		in, out := &in.Azure, &out.Azure
		*out = make([]AzureObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CloudResource != nil {
		in, out := &in.CloudResource, &out.CloudResource
		*out = make([]CloudResourceObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CloudSQL != nil {
		in, out := &in.CloudSQL, &out.CloudSQL
		*out = make([]CloudSQLObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CloudSpanner != nil {
		in, out := &in.CloudSpanner, &out.CloudSpanner
		*out = make([]CloudSpannerObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ConnectionID != nil {
		in, out := &in.ConnectionID, &out.ConnectionID
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.FriendlyName != nil {
		in, out := &in.FriendlyName, &out.FriendlyName
		*out = new(string)
		**out = **in
	}
	if in.HasCredential != nil {
		in, out := &in.HasCredential, &out.HasCredential
		*out = new(bool)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Spark != nil {
		in, out := &in.Spark, &out.Spark
		*out = make([]SparkObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectionObservation.
func (in *ConnectionObservation) DeepCopy() *ConnectionObservation {
	if in == nil {
		return nil
	}
	out := new(ConnectionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectionParameters) DeepCopyInto(out *ConnectionParameters) {
	*out = *in
	if in.Aws != nil {
		in, out := &in.Aws, &out.Aws
		*out = make([]AwsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Azure != nil {
		in, out := &in.Azure, &out.Azure
		*out = make([]AzureParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CloudResource != nil {
		in, out := &in.CloudResource, &out.CloudResource
		*out = make([]CloudResourceParameters, len(*in))
		copy(*out, *in)
	}
	if in.CloudSQL != nil {
		in, out := &in.CloudSQL, &out.CloudSQL
		*out = make([]CloudSQLParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CloudSpanner != nil {
		in, out := &in.CloudSpanner, &out.CloudSpanner
		*out = make([]CloudSpannerParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ConnectionID != nil {
		in, out := &in.ConnectionID, &out.ConnectionID
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.FriendlyName != nil {
		in, out := &in.FriendlyName, &out.FriendlyName
		*out = new(string)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Spark != nil {
		in, out := &in.Spark, &out.Spark
		*out = make([]SparkParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectionParameters.
func (in *ConnectionParameters) DeepCopy() *ConnectionParameters {
	if in == nil {
		return nil
	}
	out := new(ConnectionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectionSpec) DeepCopyInto(out *ConnectionSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectionSpec.
func (in *ConnectionSpec) DeepCopy() *ConnectionSpec {
	if in == nil {
		return nil
	}
	out := new(ConnectionSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectionStatus) DeepCopyInto(out *ConnectionStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectionStatus.
func (in *ConnectionStatus) DeepCopy() *ConnectionStatus {
	if in == nil {
		return nil
	}
	out := new(ConnectionStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CopyInitParameters) DeepCopyInto(out *CopyInitParameters) {
	*out = *in
	if in.CreateDisposition != nil {
		in, out := &in.CreateDisposition, &out.CreateDisposition
		*out = new(string)
		**out = **in
	}
	if in.DestinationEncryptionConfiguration != nil {
		in, out := &in.DestinationEncryptionConfiguration, &out.DestinationEncryptionConfiguration
		*out = make([]DestinationEncryptionConfigurationInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DestinationTable != nil {
		in, out := &in.DestinationTable, &out.DestinationTable
		*out = make([]DestinationTableInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SourceTables != nil {
		in, out := &in.SourceTables, &out.SourceTables
		*out = make([]SourceTablesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.WriteDisposition != nil {
		in, out := &in.WriteDisposition, &out.WriteDisposition
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CopyInitParameters.
func (in *CopyInitParameters) DeepCopy() *CopyInitParameters {
	if in == nil {
		return nil
	}
	out := new(CopyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CopyObservation) DeepCopyInto(out *CopyObservation) {
	*out = *in
	if in.CreateDisposition != nil {
		in, out := &in.CreateDisposition, &out.CreateDisposition
		*out = new(string)
		**out = **in
	}
	if in.DestinationEncryptionConfiguration != nil {
		in, out := &in.DestinationEncryptionConfiguration, &out.DestinationEncryptionConfiguration
		*out = make([]DestinationEncryptionConfigurationObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DestinationTable != nil {
		in, out := &in.DestinationTable, &out.DestinationTable
		*out = make([]DestinationTableObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SourceTables != nil {
		in, out := &in.SourceTables, &out.SourceTables
		*out = make([]SourceTablesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.WriteDisposition != nil {
		in, out := &in.WriteDisposition, &out.WriteDisposition
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CopyObservation.
func (in *CopyObservation) DeepCopy() *CopyObservation {
	if in == nil {
		return nil
	}
	out := new(CopyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CopyParameters) DeepCopyInto(out *CopyParameters) {
	*out = *in
	if in.CreateDisposition != nil {
		in, out := &in.CreateDisposition, &out.CreateDisposition
		*out = new(string)
		**out = **in
	}
	if in.DestinationEncryptionConfiguration != nil {
		in, out := &in.DestinationEncryptionConfiguration, &out.DestinationEncryptionConfiguration
		*out = make([]DestinationEncryptionConfigurationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DestinationTable != nil {
		in, out := &in.DestinationTable, &out.DestinationTable
		*out = make([]DestinationTableParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SourceTables != nil {
		in, out := &in.SourceTables, &out.SourceTables
		*out = make([]SourceTablesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.WriteDisposition != nil {
		in, out := &in.WriteDisposition, &out.WriteDisposition
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CopyParameters.
func (in *CopyParameters) DeepCopy() *CopyParameters {
	if in == nil {
		return nil
	}
	out := new(CopyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CredentialInitParameters) DeepCopyInto(out *CredentialInitParameters) {
	*out = *in
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
	if in.UsernameRef != nil {
		in, out := &in.UsernameRef, &out.UsernameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.UsernameSelector != nil {
		in, out := &in.UsernameSelector, &out.UsernameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CredentialInitParameters.
func (in *CredentialInitParameters) DeepCopy() *CredentialInitParameters {
	if in == nil {
		return nil
	}
	out := new(CredentialInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CredentialObservation) DeepCopyInto(out *CredentialObservation) {
	*out = *in
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CredentialObservation.
func (in *CredentialObservation) DeepCopy() *CredentialObservation {
	if in == nil {
		return nil
	}
	out := new(CredentialObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CredentialParameters) DeepCopyInto(out *CredentialParameters) {
	*out = *in
	out.PasswordSecretRef = in.PasswordSecretRef
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
	if in.UsernameRef != nil {
		in, out := &in.UsernameRef, &out.UsernameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.UsernameSelector != nil {
		in, out := &in.UsernameSelector, &out.UsernameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CredentialParameters.
func (in *CredentialParameters) DeepCopy() *CredentialParameters {
	if in == nil {
		return nil
	}
	out := new(CredentialParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CsvOptionsInitParameters) DeepCopyInto(out *CsvOptionsInitParameters) {
	*out = *in
	if in.AllowJaggedRows != nil {
		in, out := &in.AllowJaggedRows, &out.AllowJaggedRows
		*out = new(bool)
		**out = **in
	}
	if in.AllowQuotedNewlines != nil {
		in, out := &in.AllowQuotedNewlines, &out.AllowQuotedNewlines
		*out = new(bool)
		**out = **in
	}
	if in.Encoding != nil {
		in, out := &in.Encoding, &out.Encoding
		*out = new(string)
		**out = **in
	}
	if in.FieldDelimiter != nil {
		in, out := &in.FieldDelimiter, &out.FieldDelimiter
		*out = new(string)
		**out = **in
	}
	if in.Quote != nil {
		in, out := &in.Quote, &out.Quote
		*out = new(string)
		**out = **in
	}
	if in.SkipLeadingRows != nil {
		in, out := &in.SkipLeadingRows, &out.SkipLeadingRows
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CsvOptionsInitParameters.
func (in *CsvOptionsInitParameters) DeepCopy() *CsvOptionsInitParameters {
	if in == nil {
		return nil
	}
	out := new(CsvOptionsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CsvOptionsObservation) DeepCopyInto(out *CsvOptionsObservation) {
	*out = *in
	if in.AllowJaggedRows != nil {
		in, out := &in.AllowJaggedRows, &out.AllowJaggedRows
		*out = new(bool)
		**out = **in
	}
	if in.AllowQuotedNewlines != nil {
		in, out := &in.AllowQuotedNewlines, &out.AllowQuotedNewlines
		*out = new(bool)
		**out = **in
	}
	if in.Encoding != nil {
		in, out := &in.Encoding, &out.Encoding
		*out = new(string)
		**out = **in
	}
	if in.FieldDelimiter != nil {
		in, out := &in.FieldDelimiter, &out.FieldDelimiter
		*out = new(string)
		**out = **in
	}
	if in.Quote != nil {
		in, out := &in.Quote, &out.Quote
		*out = new(string)
		**out = **in
	}
	if in.SkipLeadingRows != nil {
		in, out := &in.SkipLeadingRows, &out.SkipLeadingRows
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CsvOptionsObservation.
func (in *CsvOptionsObservation) DeepCopy() *CsvOptionsObservation {
	if in == nil {
		return nil
	}
	out := new(CsvOptionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CsvOptionsParameters) DeepCopyInto(out *CsvOptionsParameters) {
	*out = *in
	if in.AllowJaggedRows != nil {
		in, out := &in.AllowJaggedRows, &out.AllowJaggedRows
		*out = new(bool)
		**out = **in
	}
	if in.AllowQuotedNewlines != nil {
		in, out := &in.AllowQuotedNewlines, &out.AllowQuotedNewlines
		*out = new(bool)
		**out = **in
	}
	if in.Encoding != nil {
		in, out := &in.Encoding, &out.Encoding
		*out = new(string)
		**out = **in
	}
	if in.FieldDelimiter != nil {
		in, out := &in.FieldDelimiter, &out.FieldDelimiter
		*out = new(string)
		**out = **in
	}
	if in.Quote != nil {
		in, out := &in.Quote, &out.Quote
		*out = new(string)
		**out = **in
	}
	if in.SkipLeadingRows != nil {
		in, out := &in.SkipLeadingRows, &out.SkipLeadingRows
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CsvOptionsParameters.
func (in *CsvOptionsParameters) DeepCopy() *CsvOptionsParameters {
	if in == nil {
		return nil
	}
	out := new(CsvOptionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataProviderInitParameters) DeepCopyInto(out *DataProviderInitParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PrimaryContact != nil {
		in, out := &in.PrimaryContact, &out.PrimaryContact
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataProviderInitParameters.
func (in *DataProviderInitParameters) DeepCopy() *DataProviderInitParameters {
	if in == nil {
		return nil
	}
	out := new(DataProviderInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataProviderObservation) DeepCopyInto(out *DataProviderObservation) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PrimaryContact != nil {
		in, out := &in.PrimaryContact, &out.PrimaryContact
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataProviderObservation.
func (in *DataProviderObservation) DeepCopy() *DataProviderObservation {
	if in == nil {
		return nil
	}
	out := new(DataProviderObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataProviderParameters) DeepCopyInto(out *DataProviderParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PrimaryContact != nil {
		in, out := &in.PrimaryContact, &out.PrimaryContact
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataProviderParameters.
func (in *DataProviderParameters) DeepCopy() *DataProviderParameters {
	if in == nil {
		return nil
	}
	out := new(DataProviderParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataTransferConfig) DeepCopyInto(out *DataTransferConfig) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataTransferConfig.
func (in *DataTransferConfig) DeepCopy() *DataTransferConfig {
	if in == nil {
		return nil
	}
	out := new(DataTransferConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DataTransferConfig) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataTransferConfigInitParameters) DeepCopyInto(out *DataTransferConfigInitParameters) {
	*out = *in
	if in.DataRefreshWindowDays != nil {
		in, out := &in.DataRefreshWindowDays, &out.DataRefreshWindowDays
		*out = new(float64)
		**out = **in
	}
	if in.DataSourceID != nil {
		in, out := &in.DataSourceID, &out.DataSourceID
		*out = new(string)
		**out = **in
	}
	if in.DestinationDatasetID != nil {
		in, out := &in.DestinationDatasetID, &out.DestinationDatasetID
		*out = new(string)
		**out = **in
	}
	if in.DestinationDatasetIDRef != nil {
		in, out := &in.DestinationDatasetIDRef, &out.DestinationDatasetIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.DestinationDatasetIDSelector != nil {
		in, out := &in.DestinationDatasetIDSelector, &out.DestinationDatasetIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Disabled != nil {
		in, out := &in.Disabled, &out.Disabled
		*out = new(bool)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.EmailPreferences != nil {
		in, out := &in.EmailPreferences, &out.EmailPreferences
		*out = make([]EmailPreferencesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.NotificationPubsubTopic != nil {
		in, out := &in.NotificationPubsubTopic, &out.NotificationPubsubTopic
		*out = new(string)
		**out = **in
	}
	if in.Params != nil {
		in, out := &in.Params, &out.Params
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Schedule != nil {
		in, out := &in.Schedule, &out.Schedule
		*out = new(string)
		**out = **in
	}
	if in.ScheduleOptions != nil {
		in, out := &in.ScheduleOptions, &out.ScheduleOptions
		*out = make([]ScheduleOptionsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SensitiveParams != nil {
		in, out := &in.SensitiveParams, &out.SensitiveParams
		*out = make([]SensitiveParamsInitParameters, len(*in))
		copy(*out, *in)
	}
	if in.ServiceAccountName != nil {
		in, out := &in.ServiceAccountName, &out.ServiceAccountName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataTransferConfigInitParameters.
func (in *DataTransferConfigInitParameters) DeepCopy() *DataTransferConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(DataTransferConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataTransferConfigList) DeepCopyInto(out *DataTransferConfigList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]DataTransferConfig, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataTransferConfigList.
func (in *DataTransferConfigList) DeepCopy() *DataTransferConfigList {
	if in == nil {
		return nil
	}
	out := new(DataTransferConfigList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DataTransferConfigList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataTransferConfigObservation) DeepCopyInto(out *DataTransferConfigObservation) {
	*out = *in
	if in.DataRefreshWindowDays != nil {
		in, out := &in.DataRefreshWindowDays, &out.DataRefreshWindowDays
		*out = new(float64)
		**out = **in
	}
	if in.DataSourceID != nil {
		in, out := &in.DataSourceID, &out.DataSourceID
		*out = new(string)
		**out = **in
	}
	if in.DestinationDatasetID != nil {
		in, out := &in.DestinationDatasetID, &out.DestinationDatasetID
		*out = new(string)
		**out = **in
	}
	if in.Disabled != nil {
		in, out := &in.Disabled, &out.Disabled
		*out = new(bool)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.EmailPreferences != nil {
		in, out := &in.EmailPreferences, &out.EmailPreferences
		*out = make([]EmailPreferencesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NotificationPubsubTopic != nil {
		in, out := &in.NotificationPubsubTopic, &out.NotificationPubsubTopic
		*out = new(string)
		**out = **in
	}
	if in.Params != nil {
		in, out := &in.Params, &out.Params
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Schedule != nil {
		in, out := &in.Schedule, &out.Schedule
		*out = new(string)
		**out = **in
	}
	if in.ScheduleOptions != nil {
		in, out := &in.ScheduleOptions, &out.ScheduleOptions
		*out = make([]ScheduleOptionsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SensitiveParams != nil {
		in, out := &in.SensitiveParams, &out.SensitiveParams
		*out = make([]SensitiveParamsParameters, len(*in))
		copy(*out, *in)
	}
	if in.ServiceAccountName != nil {
		in, out := &in.ServiceAccountName, &out.ServiceAccountName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataTransferConfigObservation.
func (in *DataTransferConfigObservation) DeepCopy() *DataTransferConfigObservation {
	if in == nil {
		return nil
	}
	out := new(DataTransferConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataTransferConfigParameters) DeepCopyInto(out *DataTransferConfigParameters) {
	*out = *in
	if in.DataRefreshWindowDays != nil {
		in, out := &in.DataRefreshWindowDays, &out.DataRefreshWindowDays
		*out = new(float64)
		**out = **in
	}
	if in.DataSourceID != nil {
		in, out := &in.DataSourceID, &out.DataSourceID
		*out = new(string)
		**out = **in
	}
	if in.DestinationDatasetID != nil {
		in, out := &in.DestinationDatasetID, &out.DestinationDatasetID
		*out = new(string)
		**out = **in
	}
	if in.DestinationDatasetIDRef != nil {
		in, out := &in.DestinationDatasetIDRef, &out.DestinationDatasetIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.DestinationDatasetIDSelector != nil {
		in, out := &in.DestinationDatasetIDSelector, &out.DestinationDatasetIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Disabled != nil {
		in, out := &in.Disabled, &out.Disabled
		*out = new(bool)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.EmailPreferences != nil {
		in, out := &in.EmailPreferences, &out.EmailPreferences
		*out = make([]EmailPreferencesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.NotificationPubsubTopic != nil {
		in, out := &in.NotificationPubsubTopic, &out.NotificationPubsubTopic
		*out = new(string)
		**out = **in
	}
	if in.Params != nil {
		in, out := &in.Params, &out.Params
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Schedule != nil {
		in, out := &in.Schedule, &out.Schedule
		*out = new(string)
		**out = **in
	}
	if in.ScheduleOptions != nil {
		in, out := &in.ScheduleOptions, &out.ScheduleOptions
		*out = make([]ScheduleOptionsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SensitiveParams != nil {
		in, out := &in.SensitiveParams, &out.SensitiveParams
		*out = make([]SensitiveParamsParameters, len(*in))
		copy(*out, *in)
	}
	if in.ServiceAccountName != nil {
		in, out := &in.ServiceAccountName, &out.ServiceAccountName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataTransferConfigParameters.
func (in *DataTransferConfigParameters) DeepCopy() *DataTransferConfigParameters {
	if in == nil {
		return nil
	}
	out := new(DataTransferConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataTransferConfigSpec) DeepCopyInto(out *DataTransferConfigSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataTransferConfigSpec.
func (in *DataTransferConfigSpec) DeepCopy() *DataTransferConfigSpec {
	if in == nil {
		return nil
	}
	out := new(DataTransferConfigSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataTransferConfigStatus) DeepCopyInto(out *DataTransferConfigStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataTransferConfigStatus.
func (in *DataTransferConfigStatus) DeepCopy() *DataTransferConfigStatus {
	if in == nil {
		return nil
	}
	out := new(DataTransferConfigStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Dataset) DeepCopyInto(out *Dataset) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Dataset.
func (in *Dataset) DeepCopy() *Dataset {
	if in == nil {
		return nil
	}
	out := new(Dataset)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Dataset) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatasetAccess) DeepCopyInto(out *DatasetAccess) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatasetAccess.
func (in *DatasetAccess) DeepCopy() *DatasetAccess {
	if in == nil {
		return nil
	}
	out := new(DatasetAccess)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DatasetAccess) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatasetAccessDatasetDatasetInitParameters) DeepCopyInto(out *DatasetAccessDatasetDatasetInitParameters) {
	*out = *in
	if in.DatasetID != nil {
		in, out := &in.DatasetID, &out.DatasetID
		*out = new(string)
		**out = **in
	}
	if in.DatasetIDRef != nil {
		in, out := &in.DatasetIDRef, &out.DatasetIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.DatasetIDSelector != nil {
		in, out := &in.DatasetIDSelector, &out.DatasetIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.ProjectID != nil {
		in, out := &in.ProjectID, &out.ProjectID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatasetAccessDatasetDatasetInitParameters.
func (in *DatasetAccessDatasetDatasetInitParameters) DeepCopy() *DatasetAccessDatasetDatasetInitParameters {
	if in == nil {
		return nil
	}
	out := new(DatasetAccessDatasetDatasetInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatasetAccessDatasetDatasetObservation) DeepCopyInto(out *DatasetAccessDatasetDatasetObservation) {
	*out = *in
	if in.DatasetID != nil {
		in, out := &in.DatasetID, &out.DatasetID
		*out = new(string)
		**out = **in
	}
	if in.ProjectID != nil {
		in, out := &in.ProjectID, &out.ProjectID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatasetAccessDatasetDatasetObservation.
func (in *DatasetAccessDatasetDatasetObservation) DeepCopy() *DatasetAccessDatasetDatasetObservation {
	if in == nil {
		return nil
	}
	out := new(DatasetAccessDatasetDatasetObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatasetAccessDatasetDatasetParameters) DeepCopyInto(out *DatasetAccessDatasetDatasetParameters) {
	*out = *in
	if in.DatasetID != nil {
		in, out := &in.DatasetID, &out.DatasetID
		*out = new(string)
		**out = **in
	}
	if in.DatasetIDRef != nil {
		in, out := &in.DatasetIDRef, &out.DatasetIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.DatasetIDSelector != nil {
		in, out := &in.DatasetIDSelector, &out.DatasetIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.ProjectID != nil {
		in, out := &in.ProjectID, &out.ProjectID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatasetAccessDatasetDatasetParameters.
func (in *DatasetAccessDatasetDatasetParameters) DeepCopy() *DatasetAccessDatasetDatasetParameters {
	if in == nil {
		return nil
	}
	out := new(DatasetAccessDatasetDatasetParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatasetAccessDatasetInitParameters) DeepCopyInto(out *DatasetAccessDatasetInitParameters) {
	*out = *in
	if in.Dataset != nil {
		in, out := &in.Dataset, &out.Dataset
		*out = make([]DatasetAccessDatasetDatasetInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TargetTypes != nil {
		in, out := &in.TargetTypes, &out.TargetTypes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatasetAccessDatasetInitParameters.
func (in *DatasetAccessDatasetInitParameters) DeepCopy() *DatasetAccessDatasetInitParameters {
	if in == nil {
		return nil
	}
	out := new(DatasetAccessDatasetInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatasetAccessDatasetObservation) DeepCopyInto(out *DatasetAccessDatasetObservation) {
	*out = *in
	if in.Dataset != nil {
		in, out := &in.Dataset, &out.Dataset
		*out = make([]DatasetAccessDatasetDatasetObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TargetTypes != nil {
		in, out := &in.TargetTypes, &out.TargetTypes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatasetAccessDatasetObservation.
func (in *DatasetAccessDatasetObservation) DeepCopy() *DatasetAccessDatasetObservation {
	if in == nil {
		return nil
	}
	out := new(DatasetAccessDatasetObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatasetAccessDatasetParameters) DeepCopyInto(out *DatasetAccessDatasetParameters) {
	*out = *in
	if in.Dataset != nil {
		in, out := &in.Dataset, &out.Dataset
		*out = make([]DatasetAccessDatasetDatasetParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TargetTypes != nil {
		in, out := &in.TargetTypes, &out.TargetTypes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatasetAccessDatasetParameters.
func (in *DatasetAccessDatasetParameters) DeepCopy() *DatasetAccessDatasetParameters {
	if in == nil {
		return nil
	}
	out := new(DatasetAccessDatasetParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatasetAccessInitParameters) DeepCopyInto(out *DatasetAccessInitParameters) {
	*out = *in
	if in.Dataset != nil {
		in, out := &in.Dataset, &out.Dataset
		*out = make([]DatasetAccessDatasetInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DatasetID != nil {
		in, out := &in.DatasetID, &out.DatasetID
		*out = new(string)
		**out = **in
	}
	if in.DatasetIDRef != nil {
		in, out := &in.DatasetIDRef, &out.DatasetIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.DatasetIDSelector != nil {
		in, out := &in.DatasetIDSelector, &out.DatasetIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Domain != nil {
		in, out := &in.Domain, &out.Domain
		*out = new(string)
		**out = **in
	}
	if in.GroupByEmail != nil {
		in, out := &in.GroupByEmail, &out.GroupByEmail
		*out = new(string)
		**out = **in
	}
	if in.IAMMember != nil {
		in, out := &in.IAMMember, &out.IAMMember
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Role != nil {
		in, out := &in.Role, &out.Role
		*out = new(string)
		**out = **in
	}
	if in.Routine != nil {
		in, out := &in.Routine, &out.Routine
		*out = make([]DatasetAccessRoutineInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SpecialGroup != nil {
		in, out := &in.SpecialGroup, &out.SpecialGroup
		*out = new(string)
		**out = **in
	}
	if in.UserByEmail != nil {
		in, out := &in.UserByEmail, &out.UserByEmail
		*out = new(string)
		**out = **in
	}
	if in.UserByEmailRef != nil {
		in, out := &in.UserByEmailRef, &out.UserByEmailRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.UserByEmailSelector != nil {
		in, out := &in.UserByEmailSelector, &out.UserByEmailSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.View != nil {
		in, out := &in.View, &out.View
		*out = make([]DatasetAccessViewInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatasetAccessInitParameters.
func (in *DatasetAccessInitParameters) DeepCopy() *DatasetAccessInitParameters {
	if in == nil {
		return nil
	}
	out := new(DatasetAccessInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatasetAccessList) DeepCopyInto(out *DatasetAccessList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]DatasetAccess, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatasetAccessList.
func (in *DatasetAccessList) DeepCopy() *DatasetAccessList {
	if in == nil {
		return nil
	}
	out := new(DatasetAccessList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DatasetAccessList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatasetAccessObservation) DeepCopyInto(out *DatasetAccessObservation) {
	*out = *in
	if in.APIUpdatedMember != nil {
		in, out := &in.APIUpdatedMember, &out.APIUpdatedMember
		*out = new(bool)
		**out = **in
	}
	if in.Dataset != nil {
		in, out := &in.Dataset, &out.Dataset
		*out = make([]DatasetAccessDatasetObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DatasetID != nil {
		in, out := &in.DatasetID, &out.DatasetID
		*out = new(string)
		**out = **in
	}
	if in.Domain != nil {
		in, out := &in.Domain, &out.Domain
		*out = new(string)
		**out = **in
	}
	if in.GroupByEmail != nil {
		in, out := &in.GroupByEmail, &out.GroupByEmail
		*out = new(string)
		**out = **in
	}
	if in.IAMMember != nil {
		in, out := &in.IAMMember, &out.IAMMember
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Role != nil {
		in, out := &in.Role, &out.Role
		*out = new(string)
		**out = **in
	}
	if in.Routine != nil {
		in, out := &in.Routine, &out.Routine
		*out = make([]DatasetAccessRoutineObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SpecialGroup != nil {
		in, out := &in.SpecialGroup, &out.SpecialGroup
		*out = new(string)
		**out = **in
	}
	if in.UserByEmail != nil {
		in, out := &in.UserByEmail, &out.UserByEmail
		*out = new(string)
		**out = **in
	}
	if in.View != nil {
		in, out := &in.View, &out.View
		*out = make([]DatasetAccessViewObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatasetAccessObservation.
func (in *DatasetAccessObservation) DeepCopy() *DatasetAccessObservation {
	if in == nil {
		return nil
	}
	out := new(DatasetAccessObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatasetAccessParameters) DeepCopyInto(out *DatasetAccessParameters) {
	*out = *in
	if in.Dataset != nil {
		in, out := &in.Dataset, &out.Dataset
		*out = make([]DatasetAccessDatasetParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DatasetID != nil {
		in, out := &in.DatasetID, &out.DatasetID
		*out = new(string)
		**out = **in
	}
	if in.DatasetIDRef != nil {
		in, out := &in.DatasetIDRef, &out.DatasetIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.DatasetIDSelector != nil {
		in, out := &in.DatasetIDSelector, &out.DatasetIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Domain != nil {
		in, out := &in.Domain, &out.Domain
		*out = new(string)
		**out = **in
	}
	if in.GroupByEmail != nil {
		in, out := &in.GroupByEmail, &out.GroupByEmail
		*out = new(string)
		**out = **in
	}
	if in.IAMMember != nil {
		in, out := &in.IAMMember, &out.IAMMember
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Role != nil {
		in, out := &in.Role, &out.Role
		*out = new(string)
		**out = **in
	}
	if in.Routine != nil {
		in, out := &in.Routine, &out.Routine
		*out = make([]DatasetAccessRoutineParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SpecialGroup != nil {
		in, out := &in.SpecialGroup, &out.SpecialGroup
		*out = new(string)
		**out = **in
	}
	if in.UserByEmail != nil {
		in, out := &in.UserByEmail, &out.UserByEmail
		*out = new(string)
		**out = **in
	}
	if in.UserByEmailRef != nil {
		in, out := &in.UserByEmailRef, &out.UserByEmailRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.UserByEmailSelector != nil {
		in, out := &in.UserByEmailSelector, &out.UserByEmailSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.View != nil {
		in, out := &in.View, &out.View
		*out = make([]DatasetAccessViewParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatasetAccessParameters.
func (in *DatasetAccessParameters) DeepCopy() *DatasetAccessParameters {
	if in == nil {
		return nil
	}
	out := new(DatasetAccessParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatasetAccessRoutineInitParameters) DeepCopyInto(out *DatasetAccessRoutineInitParameters) {
	*out = *in
	if in.DatasetID != nil {
		in, out := &in.DatasetID, &out.DatasetID
		*out = new(string)
		**out = **in
	}
	if in.DatasetIDRef != nil {
		in, out := &in.DatasetIDRef, &out.DatasetIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.DatasetIDSelector != nil {
		in, out := &in.DatasetIDSelector, &out.DatasetIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.ProjectID != nil {
		in, out := &in.ProjectID, &out.ProjectID
		*out = new(string)
		**out = **in
	}
	if in.ProjectIDRef != nil {
		in, out := &in.ProjectIDRef, &out.ProjectIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ProjectIDSelector != nil {
		in, out := &in.ProjectIDSelector, &out.ProjectIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.RoutineID != nil {
		in, out := &in.RoutineID, &out.RoutineID
		*out = new(string)
		**out = **in
	}
	if in.RoutineIDRef != nil {
		in, out := &in.RoutineIDRef, &out.RoutineIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.RoutineIDSelector != nil {
		in, out := &in.RoutineIDSelector, &out.RoutineIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatasetAccessRoutineInitParameters.
func (in *DatasetAccessRoutineInitParameters) DeepCopy() *DatasetAccessRoutineInitParameters {
	if in == nil {
		return nil
	}
	out := new(DatasetAccessRoutineInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatasetAccessRoutineObservation) DeepCopyInto(out *DatasetAccessRoutineObservation) {
	*out = *in
	if in.DatasetID != nil {
		in, out := &in.DatasetID, &out.DatasetID
		*out = new(string)
		**out = **in
	}
	if in.ProjectID != nil {
		in, out := &in.ProjectID, &out.ProjectID
		*out = new(string)
		**out = **in
	}
	if in.RoutineID != nil {
		in, out := &in.RoutineID, &out.RoutineID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatasetAccessRoutineObservation.
func (in *DatasetAccessRoutineObservation) DeepCopy() *DatasetAccessRoutineObservation {
	if in == nil {
		return nil
	}
	out := new(DatasetAccessRoutineObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatasetAccessRoutineParameters) DeepCopyInto(out *DatasetAccessRoutineParameters) {
	*out = *in
	if in.DatasetID != nil {
		in, out := &in.DatasetID, &out.DatasetID
		*out = new(string)
		**out = **in
	}
	if in.DatasetIDRef != nil {
		in, out := &in.DatasetIDRef, &out.DatasetIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.DatasetIDSelector != nil {
		in, out := &in.DatasetIDSelector, &out.DatasetIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.ProjectID != nil {
		in, out := &in.ProjectID, &out.ProjectID
		*out = new(string)
		**out = **in
	}
	if in.ProjectIDRef != nil {
		in, out := &in.ProjectIDRef, &out.ProjectIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ProjectIDSelector != nil {
		in, out := &in.ProjectIDSelector, &out.ProjectIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.RoutineID != nil {
		in, out := &in.RoutineID, &out.RoutineID
		*out = new(string)
		**out = **in
	}
	if in.RoutineIDRef != nil {
		in, out := &in.RoutineIDRef, &out.RoutineIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.RoutineIDSelector != nil {
		in, out := &in.RoutineIDSelector, &out.RoutineIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatasetAccessRoutineParameters.
func (in *DatasetAccessRoutineParameters) DeepCopy() *DatasetAccessRoutineParameters {
	if in == nil {
		return nil
	}
	out := new(DatasetAccessRoutineParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatasetAccessSpec) DeepCopyInto(out *DatasetAccessSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatasetAccessSpec.
func (in *DatasetAccessSpec) DeepCopy() *DatasetAccessSpec {
	if in == nil {
		return nil
	}
	out := new(DatasetAccessSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatasetAccessStatus) DeepCopyInto(out *DatasetAccessStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatasetAccessStatus.
func (in *DatasetAccessStatus) DeepCopy() *DatasetAccessStatus {
	if in == nil {
		return nil
	}
	out := new(DatasetAccessStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatasetAccessViewInitParameters) DeepCopyInto(out *DatasetAccessViewInitParameters) {
	*out = *in
	if in.DatasetID != nil {
		in, out := &in.DatasetID, &out.DatasetID
		*out = new(string)
		**out = **in
	}
	if in.DatasetIDRef != nil {
		in, out := &in.DatasetIDRef, &out.DatasetIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.DatasetIDSelector != nil {
		in, out := &in.DatasetIDSelector, &out.DatasetIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.ProjectID != nil {
		in, out := &in.ProjectID, &out.ProjectID
		*out = new(string)
		**out = **in
	}
	if in.TableID != nil {
		in, out := &in.TableID, &out.TableID
		*out = new(string)
		**out = **in
	}
	if in.TableIDRef != nil {
		in, out := &in.TableIDRef, &out.TableIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.TableIDSelector != nil {
		in, out := &in.TableIDSelector, &out.TableIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatasetAccessViewInitParameters.
func (in *DatasetAccessViewInitParameters) DeepCopy() *DatasetAccessViewInitParameters {
	if in == nil {
		return nil
	}
	out := new(DatasetAccessViewInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatasetAccessViewObservation) DeepCopyInto(out *DatasetAccessViewObservation) {
	*out = *in
	if in.DatasetID != nil {
		in, out := &in.DatasetID, &out.DatasetID
		*out = new(string)
		**out = **in
	}
	if in.ProjectID != nil {
		in, out := &in.ProjectID, &out.ProjectID
		*out = new(string)
		**out = **in
	}
	if in.TableID != nil {
		in, out := &in.TableID, &out.TableID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatasetAccessViewObservation.
func (in *DatasetAccessViewObservation) DeepCopy() *DatasetAccessViewObservation {
	if in == nil {
		return nil
	}
	out := new(DatasetAccessViewObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatasetAccessViewParameters) DeepCopyInto(out *DatasetAccessViewParameters) {
	*out = *in
	if in.DatasetID != nil {
		in, out := &in.DatasetID, &out.DatasetID
		*out = new(string)
		**out = **in
	}
	if in.DatasetIDRef != nil {
		in, out := &in.DatasetIDRef, &out.DatasetIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.DatasetIDSelector != nil {
		in, out := &in.DatasetIDSelector, &out.DatasetIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.ProjectID != nil {
		in, out := &in.ProjectID, &out.ProjectID
		*out = new(string)
		**out = **in
	}
	if in.TableID != nil {
		in, out := &in.TableID, &out.TableID
		*out = new(string)
		**out = **in
	}
	if in.TableIDRef != nil {
		in, out := &in.TableIDRef, &out.TableIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.TableIDSelector != nil {
		in, out := &in.TableIDSelector, &out.TableIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatasetAccessViewParameters.
func (in *DatasetAccessViewParameters) DeepCopy() *DatasetAccessViewParameters {
	if in == nil {
		return nil
	}
	out := new(DatasetAccessViewParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatasetDatasetInitParameters) DeepCopyInto(out *DatasetDatasetInitParameters) {
	*out = *in
	if in.DatasetID != nil {
		in, out := &in.DatasetID, &out.DatasetID
		*out = new(string)
		**out = **in
	}
	if in.DatasetIDRef != nil {
		in, out := &in.DatasetIDRef, &out.DatasetIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.DatasetIDSelector != nil {
		in, out := &in.DatasetIDSelector, &out.DatasetIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.ProjectID != nil {
		in, out := &in.ProjectID, &out.ProjectID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatasetDatasetInitParameters.
func (in *DatasetDatasetInitParameters) DeepCopy() *DatasetDatasetInitParameters {
	if in == nil {
		return nil
	}
	out := new(DatasetDatasetInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatasetDatasetObservation) DeepCopyInto(out *DatasetDatasetObservation) {
	*out = *in
	if in.DatasetID != nil {
		in, out := &in.DatasetID, &out.DatasetID
		*out = new(string)
		**out = **in
	}
	if in.ProjectID != nil {
		in, out := &in.ProjectID, &out.ProjectID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatasetDatasetObservation.
func (in *DatasetDatasetObservation) DeepCopy() *DatasetDatasetObservation {
	if in == nil {
		return nil
	}
	out := new(DatasetDatasetObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatasetDatasetParameters) DeepCopyInto(out *DatasetDatasetParameters) {
	*out = *in
	if in.DatasetID != nil {
		in, out := &in.DatasetID, &out.DatasetID
		*out = new(string)
		**out = **in
	}
	if in.DatasetIDRef != nil {
		in, out := &in.DatasetIDRef, &out.DatasetIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.DatasetIDSelector != nil {
		in, out := &in.DatasetIDSelector, &out.DatasetIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.ProjectID != nil {
		in, out := &in.ProjectID, &out.ProjectID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatasetDatasetParameters.
func (in *DatasetDatasetParameters) DeepCopy() *DatasetDatasetParameters {
	if in == nil {
		return nil
	}
	out := new(DatasetDatasetParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatasetIAMBinding) DeepCopyInto(out *DatasetIAMBinding) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatasetIAMBinding.
func (in *DatasetIAMBinding) DeepCopy() *DatasetIAMBinding {
	if in == nil {
		return nil
	}
	out := new(DatasetIAMBinding)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DatasetIAMBinding) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatasetIAMBindingConditionInitParameters) DeepCopyInto(out *DatasetIAMBindingConditionInitParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Expression != nil {
		in, out := &in.Expression, &out.Expression
		*out = new(string)
		**out = **in
	}
	if in.Title != nil {
		in, out := &in.Title, &out.Title
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatasetIAMBindingConditionInitParameters.
func (in *DatasetIAMBindingConditionInitParameters) DeepCopy() *DatasetIAMBindingConditionInitParameters {
	if in == nil {
		return nil
	}
	out := new(DatasetIAMBindingConditionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatasetIAMBindingConditionObservation) DeepCopyInto(out *DatasetIAMBindingConditionObservation) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Expression != nil {
		in, out := &in.Expression, &out.Expression
		*out = new(string)
		**out = **in
	}
	if in.Title != nil {
		in, out := &in.Title, &out.Title
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatasetIAMBindingConditionObservation.
func (in *DatasetIAMBindingConditionObservation) DeepCopy() *DatasetIAMBindingConditionObservation {
	if in == nil {
		return nil
	}
	out := new(DatasetIAMBindingConditionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatasetIAMBindingConditionParameters) DeepCopyInto(out *DatasetIAMBindingConditionParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Expression != nil {
		in, out := &in.Expression, &out.Expression
		*out = new(string)
		**out = **in
	}
	if in.Title != nil {
		in, out := &in.Title, &out.Title
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatasetIAMBindingConditionParameters.
func (in *DatasetIAMBindingConditionParameters) DeepCopy() *DatasetIAMBindingConditionParameters {
	if in == nil {
		return nil
	}
	out := new(DatasetIAMBindingConditionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatasetIAMBindingInitParameters) DeepCopyInto(out *DatasetIAMBindingInitParameters) {
	*out = *in
	if in.Condition != nil {
		in, out := &in.Condition, &out.Condition
		*out = make([]DatasetIAMBindingConditionInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Members != nil {
		in, out := &in.Members, &out.Members
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatasetIAMBindingInitParameters.
func (in *DatasetIAMBindingInitParameters) DeepCopy() *DatasetIAMBindingInitParameters {
	if in == nil {
		return nil
	}
	out := new(DatasetIAMBindingInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatasetIAMBindingList) DeepCopyInto(out *DatasetIAMBindingList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]DatasetIAMBinding, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatasetIAMBindingList.
func (in *DatasetIAMBindingList) DeepCopy() *DatasetIAMBindingList {
	if in == nil {
		return nil
	}
	out := new(DatasetIAMBindingList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DatasetIAMBindingList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatasetIAMBindingObservation) DeepCopyInto(out *DatasetIAMBindingObservation) {
	*out = *in
	if in.Condition != nil {
		in, out := &in.Condition, &out.Condition
		*out = make([]DatasetIAMBindingConditionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DatasetID != nil {
		in, out := &in.DatasetID, &out.DatasetID
		*out = new(string)
		**out = **in
	}
	if in.Etag != nil {
		in, out := &in.Etag, &out.Etag
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Members != nil {
		in, out := &in.Members, &out.Members
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Role != nil {
		in, out := &in.Role, &out.Role
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatasetIAMBindingObservation.
func (in *DatasetIAMBindingObservation) DeepCopy() *DatasetIAMBindingObservation {
	if in == nil {
		return nil
	}
	out := new(DatasetIAMBindingObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatasetIAMBindingParameters) DeepCopyInto(out *DatasetIAMBindingParameters) {
	*out = *in
	if in.Condition != nil {
		in, out := &in.Condition, &out.Condition
		*out = make([]DatasetIAMBindingConditionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DatasetID != nil {
		in, out := &in.DatasetID, &out.DatasetID
		*out = new(string)
		**out = **in
	}
	if in.DatasetIDRef != nil {
		in, out := &in.DatasetIDRef, &out.DatasetIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.DatasetIDSelector != nil {
		in, out := &in.DatasetIDSelector, &out.DatasetIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Members != nil {
		in, out := &in.Members, &out.Members
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Role != nil {
		in, out := &in.Role, &out.Role
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatasetIAMBindingParameters.
func (in *DatasetIAMBindingParameters) DeepCopy() *DatasetIAMBindingParameters {
	if in == nil {
		return nil
	}
	out := new(DatasetIAMBindingParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatasetIAMBindingSpec) DeepCopyInto(out *DatasetIAMBindingSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatasetIAMBindingSpec.
func (in *DatasetIAMBindingSpec) DeepCopy() *DatasetIAMBindingSpec {
	if in == nil {
		return nil
	}
	out := new(DatasetIAMBindingSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatasetIAMBindingStatus) DeepCopyInto(out *DatasetIAMBindingStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatasetIAMBindingStatus.
func (in *DatasetIAMBindingStatus) DeepCopy() *DatasetIAMBindingStatus {
	if in == nil {
		return nil
	}
	out := new(DatasetIAMBindingStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatasetIAMMember) DeepCopyInto(out *DatasetIAMMember) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatasetIAMMember.
func (in *DatasetIAMMember) DeepCopy() *DatasetIAMMember {
	if in == nil {
		return nil
	}
	out := new(DatasetIAMMember)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DatasetIAMMember) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatasetIAMMemberConditionInitParameters) DeepCopyInto(out *DatasetIAMMemberConditionInitParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Expression != nil {
		in, out := &in.Expression, &out.Expression
		*out = new(string)
		**out = **in
	}
	if in.Title != nil {
		in, out := &in.Title, &out.Title
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatasetIAMMemberConditionInitParameters.
func (in *DatasetIAMMemberConditionInitParameters) DeepCopy() *DatasetIAMMemberConditionInitParameters {
	if in == nil {
		return nil
	}
	out := new(DatasetIAMMemberConditionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatasetIAMMemberConditionObservation) DeepCopyInto(out *DatasetIAMMemberConditionObservation) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Expression != nil {
		in, out := &in.Expression, &out.Expression
		*out = new(string)
		**out = **in
	}
	if in.Title != nil {
		in, out := &in.Title, &out.Title
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatasetIAMMemberConditionObservation.
func (in *DatasetIAMMemberConditionObservation) DeepCopy() *DatasetIAMMemberConditionObservation {
	if in == nil {
		return nil
	}
	out := new(DatasetIAMMemberConditionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatasetIAMMemberConditionParameters) DeepCopyInto(out *DatasetIAMMemberConditionParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Expression != nil {
		in, out := &in.Expression, &out.Expression
		*out = new(string)
		**out = **in
	}
	if in.Title != nil {
		in, out := &in.Title, &out.Title
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatasetIAMMemberConditionParameters.
func (in *DatasetIAMMemberConditionParameters) DeepCopy() *DatasetIAMMemberConditionParameters {
	if in == nil {
		return nil
	}
	out := new(DatasetIAMMemberConditionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatasetIAMMemberInitParameters) DeepCopyInto(out *DatasetIAMMemberInitParameters) {
	*out = *in
	if in.Condition != nil {
		in, out := &in.Condition, &out.Condition
		*out = make([]DatasetIAMMemberConditionInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatasetIAMMemberInitParameters.
func (in *DatasetIAMMemberInitParameters) DeepCopy() *DatasetIAMMemberInitParameters {
	if in == nil {
		return nil
	}
	out := new(DatasetIAMMemberInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatasetIAMMemberList) DeepCopyInto(out *DatasetIAMMemberList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]DatasetIAMMember, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatasetIAMMemberList.
func (in *DatasetIAMMemberList) DeepCopy() *DatasetIAMMemberList {
	if in == nil {
		return nil
	}
	out := new(DatasetIAMMemberList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DatasetIAMMemberList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatasetIAMMemberObservation) DeepCopyInto(out *DatasetIAMMemberObservation) {
	*out = *in
	if in.Condition != nil {
		in, out := &in.Condition, &out.Condition
		*out = make([]DatasetIAMMemberConditionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DatasetID != nil {
		in, out := &in.DatasetID, &out.DatasetID
		*out = new(string)
		**out = **in
	}
	if in.Etag != nil {
		in, out := &in.Etag, &out.Etag
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Member != nil {
		in, out := &in.Member, &out.Member
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Role != nil {
		in, out := &in.Role, &out.Role
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatasetIAMMemberObservation.
func (in *DatasetIAMMemberObservation) DeepCopy() *DatasetIAMMemberObservation {
	if in == nil {
		return nil
	}
	out := new(DatasetIAMMemberObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatasetIAMMemberParameters) DeepCopyInto(out *DatasetIAMMemberParameters) {
	*out = *in
	if in.Condition != nil {
		in, out := &in.Condition, &out.Condition
		*out = make([]DatasetIAMMemberConditionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DatasetID != nil {
		in, out := &in.DatasetID, &out.DatasetID
		*out = new(string)
		**out = **in
	}
	if in.DatasetIDRef != nil {
		in, out := &in.DatasetIDRef, &out.DatasetIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.DatasetIDSelector != nil {
		in, out := &in.DatasetIDSelector, &out.DatasetIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Member != nil {
		in, out := &in.Member, &out.Member
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Role != nil {
		in, out := &in.Role, &out.Role
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatasetIAMMemberParameters.
func (in *DatasetIAMMemberParameters) DeepCopy() *DatasetIAMMemberParameters {
	if in == nil {
		return nil
	}
	out := new(DatasetIAMMemberParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatasetIAMMemberSpec) DeepCopyInto(out *DatasetIAMMemberSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatasetIAMMemberSpec.
func (in *DatasetIAMMemberSpec) DeepCopy() *DatasetIAMMemberSpec {
	if in == nil {
		return nil
	}
	out := new(DatasetIAMMemberSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatasetIAMMemberStatus) DeepCopyInto(out *DatasetIAMMemberStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatasetIAMMemberStatus.
func (in *DatasetIAMMemberStatus) DeepCopy() *DatasetIAMMemberStatus {
	if in == nil {
		return nil
	}
	out := new(DatasetIAMMemberStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatasetIAMPolicy) DeepCopyInto(out *DatasetIAMPolicy) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatasetIAMPolicy.
func (in *DatasetIAMPolicy) DeepCopy() *DatasetIAMPolicy {
	if in == nil {
		return nil
	}
	out := new(DatasetIAMPolicy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DatasetIAMPolicy) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatasetIAMPolicyInitParameters) DeepCopyInto(out *DatasetIAMPolicyInitParameters) {
	*out = *in
	if in.PolicyData != nil {
		in, out := &in.PolicyData, &out.PolicyData
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatasetIAMPolicyInitParameters.
func (in *DatasetIAMPolicyInitParameters) DeepCopy() *DatasetIAMPolicyInitParameters {
	if in == nil {
		return nil
	}
	out := new(DatasetIAMPolicyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatasetIAMPolicyList) DeepCopyInto(out *DatasetIAMPolicyList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]DatasetIAMPolicy, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatasetIAMPolicyList.
func (in *DatasetIAMPolicyList) DeepCopy() *DatasetIAMPolicyList {
	if in == nil {
		return nil
	}
	out := new(DatasetIAMPolicyList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DatasetIAMPolicyList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatasetIAMPolicyObservation) DeepCopyInto(out *DatasetIAMPolicyObservation) {
	*out = *in
	if in.DatasetID != nil {
		in, out := &in.DatasetID, &out.DatasetID
		*out = new(string)
		**out = **in
	}
	if in.Etag != nil {
		in, out := &in.Etag, &out.Etag
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.PolicyData != nil {
		in, out := &in.PolicyData, &out.PolicyData
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatasetIAMPolicyObservation.
func (in *DatasetIAMPolicyObservation) DeepCopy() *DatasetIAMPolicyObservation {
	if in == nil {
		return nil
	}
	out := new(DatasetIAMPolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatasetIAMPolicyParameters) DeepCopyInto(out *DatasetIAMPolicyParameters) {
	*out = *in
	if in.DatasetID != nil {
		in, out := &in.DatasetID, &out.DatasetID
		*out = new(string)
		**out = **in
	}
	if in.DatasetIDRef != nil {
		in, out := &in.DatasetIDRef, &out.DatasetIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.DatasetIDSelector != nil {
		in, out := &in.DatasetIDSelector, &out.DatasetIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.PolicyData != nil {
		in, out := &in.PolicyData, &out.PolicyData
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatasetIAMPolicyParameters.
func (in *DatasetIAMPolicyParameters) DeepCopy() *DatasetIAMPolicyParameters {
	if in == nil {
		return nil
	}
	out := new(DatasetIAMPolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatasetIAMPolicySpec) DeepCopyInto(out *DatasetIAMPolicySpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatasetIAMPolicySpec.
func (in *DatasetIAMPolicySpec) DeepCopy() *DatasetIAMPolicySpec {
	if in == nil {
		return nil
	}
	out := new(DatasetIAMPolicySpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatasetIAMPolicyStatus) DeepCopyInto(out *DatasetIAMPolicyStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatasetIAMPolicyStatus.
func (in *DatasetIAMPolicyStatus) DeepCopy() *DatasetIAMPolicyStatus {
	if in == nil {
		return nil
	}
	out := new(DatasetIAMPolicyStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatasetInitParameters) DeepCopyInto(out *DatasetInitParameters) {
	*out = *in
	if in.Access != nil {
		in, out := &in.Access, &out.Access
		*out = make([]AccessInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DefaultCollation != nil {
		in, out := &in.DefaultCollation, &out.DefaultCollation
		*out = new(string)
		**out = **in
	}
	if in.DefaultEncryptionConfiguration != nil {
		in, out := &in.DefaultEncryptionConfiguration, &out.DefaultEncryptionConfiguration
		*out = make([]DefaultEncryptionConfigurationInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DefaultPartitionExpirationMs != nil {
		in, out := &in.DefaultPartitionExpirationMs, &out.DefaultPartitionExpirationMs
		*out = new(float64)
		**out = **in
	}
	if in.DefaultTableExpirationMs != nil {
		in, out := &in.DefaultTableExpirationMs, &out.DefaultTableExpirationMs
		*out = new(float64)
		**out = **in
	}
	if in.DeleteContentsOnDestroy != nil {
		in, out := &in.DeleteContentsOnDestroy, &out.DeleteContentsOnDestroy
		*out = new(bool)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.FriendlyName != nil {
		in, out := &in.FriendlyName, &out.FriendlyName
		*out = new(string)
		**out = **in
	}
	if in.IsCaseInsensitive != nil {
		in, out := &in.IsCaseInsensitive, &out.IsCaseInsensitive
		*out = new(bool)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.MaxTimeTravelHours != nil {
		in, out := &in.MaxTimeTravelHours, &out.MaxTimeTravelHours
		*out = new(string)
		**out = **in
	}
	if in.StorageBillingModel != nil {
		in, out := &in.StorageBillingModel, &out.StorageBillingModel
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatasetInitParameters.
func (in *DatasetInitParameters) DeepCopy() *DatasetInitParameters {
	if in == nil {
		return nil
	}
	out := new(DatasetInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatasetList) DeepCopyInto(out *DatasetList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Dataset, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatasetList.
func (in *DatasetList) DeepCopy() *DatasetList {
	if in == nil {
		return nil
	}
	out := new(DatasetList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DatasetList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatasetObservation) DeepCopyInto(out *DatasetObservation) {
	*out = *in
	if in.Access != nil {
		in, out := &in.Access, &out.Access
		*out = make([]AccessObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CreationTime != nil {
		in, out := &in.CreationTime, &out.CreationTime
		*out = new(float64)
		**out = **in
	}
	if in.DefaultCollation != nil {
		in, out := &in.DefaultCollation, &out.DefaultCollation
		*out = new(string)
		**out = **in
	}
	if in.DefaultEncryptionConfiguration != nil {
		in, out := &in.DefaultEncryptionConfiguration, &out.DefaultEncryptionConfiguration
		*out = make([]DefaultEncryptionConfigurationObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DefaultPartitionExpirationMs != nil {
		in, out := &in.DefaultPartitionExpirationMs, &out.DefaultPartitionExpirationMs
		*out = new(float64)
		**out = **in
	}
	if in.DefaultTableExpirationMs != nil {
		in, out := &in.DefaultTableExpirationMs, &out.DefaultTableExpirationMs
		*out = new(float64)
		**out = **in
	}
	if in.DeleteContentsOnDestroy != nil {
		in, out := &in.DeleteContentsOnDestroy, &out.DeleteContentsOnDestroy
		*out = new(bool)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.EffectiveLabels != nil {
		in, out := &in.EffectiveLabels, &out.EffectiveLabels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Etag != nil {
		in, out := &in.Etag, &out.Etag
		*out = new(string)
		**out = **in
	}
	if in.FriendlyName != nil {
		in, out := &in.FriendlyName, &out.FriendlyName
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IsCaseInsensitive != nil {
		in, out := &in.IsCaseInsensitive, &out.IsCaseInsensitive
		*out = new(bool)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.LastModifiedTime != nil {
		in, out := &in.LastModifiedTime, &out.LastModifiedTime
		*out = new(float64)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.MaxTimeTravelHours != nil {
		in, out := &in.MaxTimeTravelHours, &out.MaxTimeTravelHours
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.SelfLink != nil {
		in, out := &in.SelfLink, &out.SelfLink
		*out = new(string)
		**out = **in
	}
	if in.StorageBillingModel != nil {
		in, out := &in.StorageBillingModel, &out.StorageBillingModel
		*out = new(string)
		**out = **in
	}
	if in.TerraformLabels != nil {
		in, out := &in.TerraformLabels, &out.TerraformLabels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatasetObservation.
func (in *DatasetObservation) DeepCopy() *DatasetObservation {
	if in == nil {
		return nil
	}
	out := new(DatasetObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatasetParameters) DeepCopyInto(out *DatasetParameters) {
	*out = *in
	if in.Access != nil {
		in, out := &in.Access, &out.Access
		*out = make([]AccessParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DefaultCollation != nil {
		in, out := &in.DefaultCollation, &out.DefaultCollation
		*out = new(string)
		**out = **in
	}
	if in.DefaultEncryptionConfiguration != nil {
		in, out := &in.DefaultEncryptionConfiguration, &out.DefaultEncryptionConfiguration
		*out = make([]DefaultEncryptionConfigurationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DefaultPartitionExpirationMs != nil {
		in, out := &in.DefaultPartitionExpirationMs, &out.DefaultPartitionExpirationMs
		*out = new(float64)
		**out = **in
	}
	if in.DefaultTableExpirationMs != nil {
		in, out := &in.DefaultTableExpirationMs, &out.DefaultTableExpirationMs
		*out = new(float64)
		**out = **in
	}
	if in.DeleteContentsOnDestroy != nil {
		in, out := &in.DeleteContentsOnDestroy, &out.DeleteContentsOnDestroy
		*out = new(bool)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.FriendlyName != nil {
		in, out := &in.FriendlyName, &out.FriendlyName
		*out = new(string)
		**out = **in
	}
	if in.IsCaseInsensitive != nil {
		in, out := &in.IsCaseInsensitive, &out.IsCaseInsensitive
		*out = new(bool)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.MaxTimeTravelHours != nil {
		in, out := &in.MaxTimeTravelHours, &out.MaxTimeTravelHours
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.StorageBillingModel != nil {
		in, out := &in.StorageBillingModel, &out.StorageBillingModel
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatasetParameters.
func (in *DatasetParameters) DeepCopy() *DatasetParameters {
	if in == nil {
		return nil
	}
	out := new(DatasetParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatasetSpec) DeepCopyInto(out *DatasetSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatasetSpec.
func (in *DatasetSpec) DeepCopy() *DatasetSpec {
	if in == nil {
		return nil
	}
	out := new(DatasetSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatasetStatus) DeepCopyInto(out *DatasetStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatasetStatus.
func (in *DatasetStatus) DeepCopy() *DatasetStatus {
	if in == nil {
		return nil
	}
	out := new(DatasetStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DefaultDatasetInitParameters) DeepCopyInto(out *DefaultDatasetInitParameters) {
	*out = *in
	if in.DatasetID != nil {
		in, out := &in.DatasetID, &out.DatasetID
		*out = new(string)
		**out = **in
	}
	if in.DatasetIDRef != nil {
		in, out := &in.DatasetIDRef, &out.DatasetIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.DatasetIDSelector != nil {
		in, out := &in.DatasetIDSelector, &out.DatasetIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.ProjectID != nil {
		in, out := &in.ProjectID, &out.ProjectID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DefaultDatasetInitParameters.
func (in *DefaultDatasetInitParameters) DeepCopy() *DefaultDatasetInitParameters {
	if in == nil {
		return nil
	}
	out := new(DefaultDatasetInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DefaultDatasetObservation) DeepCopyInto(out *DefaultDatasetObservation) {
	*out = *in
	if in.DatasetID != nil {
		in, out := &in.DatasetID, &out.DatasetID
		*out = new(string)
		**out = **in
	}
	if in.ProjectID != nil {
		in, out := &in.ProjectID, &out.ProjectID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DefaultDatasetObservation.
func (in *DefaultDatasetObservation) DeepCopy() *DefaultDatasetObservation {
	if in == nil {
		return nil
	}
	out := new(DefaultDatasetObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DefaultDatasetParameters) DeepCopyInto(out *DefaultDatasetParameters) {
	*out = *in
	if in.DatasetID != nil {
		in, out := &in.DatasetID, &out.DatasetID
		*out = new(string)
		**out = **in
	}
	if in.DatasetIDRef != nil {
		in, out := &in.DatasetIDRef, &out.DatasetIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.DatasetIDSelector != nil {
		in, out := &in.DatasetIDSelector, &out.DatasetIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.ProjectID != nil {
		in, out := &in.ProjectID, &out.ProjectID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DefaultDatasetParameters.
func (in *DefaultDatasetParameters) DeepCopy() *DefaultDatasetParameters {
	if in == nil {
		return nil
	}
	out := new(DefaultDatasetParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DefaultEncryptionConfigurationInitParameters) DeepCopyInto(out *DefaultEncryptionConfigurationInitParameters) {
	*out = *in
	if in.KMSKeyName != nil {
		in, out := &in.KMSKeyName, &out.KMSKeyName
		*out = new(string)
		**out = **in
	}
	if in.KMSKeyNameRef != nil {
		in, out := &in.KMSKeyNameRef, &out.KMSKeyNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.KMSKeyNameSelector != nil {
		in, out := &in.KMSKeyNameSelector, &out.KMSKeyNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DefaultEncryptionConfigurationInitParameters.
func (in *DefaultEncryptionConfigurationInitParameters) DeepCopy() *DefaultEncryptionConfigurationInitParameters {
	if in == nil {
		return nil
	}
	out := new(DefaultEncryptionConfigurationInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DefaultEncryptionConfigurationObservation) DeepCopyInto(out *DefaultEncryptionConfigurationObservation) {
	*out = *in
	if in.KMSKeyName != nil {
		in, out := &in.KMSKeyName, &out.KMSKeyName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DefaultEncryptionConfigurationObservation.
func (in *DefaultEncryptionConfigurationObservation) DeepCopy() *DefaultEncryptionConfigurationObservation {
	if in == nil {
		return nil
	}
	out := new(DefaultEncryptionConfigurationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DefaultEncryptionConfigurationParameters) DeepCopyInto(out *DefaultEncryptionConfigurationParameters) {
	*out = *in
	if in.KMSKeyName != nil {
		in, out := &in.KMSKeyName, &out.KMSKeyName
		*out = new(string)
		**out = **in
	}
	if in.KMSKeyNameRef != nil {
		in, out := &in.KMSKeyNameRef, &out.KMSKeyNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.KMSKeyNameSelector != nil {
		in, out := &in.KMSKeyNameSelector, &out.KMSKeyNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DefaultEncryptionConfigurationParameters.
func (in *DefaultEncryptionConfigurationParameters) DeepCopy() *DefaultEncryptionConfigurationParameters {
	if in == nil {
		return nil
	}
	out := new(DefaultEncryptionConfigurationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DestinationEncryptionConfigurationInitParameters) DeepCopyInto(out *DestinationEncryptionConfigurationInitParameters) {
	*out = *in
	if in.KMSKeyName != nil {
		in, out := &in.KMSKeyName, &out.KMSKeyName
		*out = new(string)
		**out = **in
	}
	if in.KMSKeyNameRef != nil {
		in, out := &in.KMSKeyNameRef, &out.KMSKeyNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.KMSKeyNameSelector != nil {
		in, out := &in.KMSKeyNameSelector, &out.KMSKeyNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DestinationEncryptionConfigurationInitParameters.
func (in *DestinationEncryptionConfigurationInitParameters) DeepCopy() *DestinationEncryptionConfigurationInitParameters {
	if in == nil {
		return nil
	}
	out := new(DestinationEncryptionConfigurationInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DestinationEncryptionConfigurationObservation) DeepCopyInto(out *DestinationEncryptionConfigurationObservation) {
	*out = *in
	if in.KMSKeyName != nil {
		in, out := &in.KMSKeyName, &out.KMSKeyName
		*out = new(string)
		**out = **in
	}
	if in.KMSKeyVersion != nil {
		in, out := &in.KMSKeyVersion, &out.KMSKeyVersion
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DestinationEncryptionConfigurationObservation.
func (in *DestinationEncryptionConfigurationObservation) DeepCopy() *DestinationEncryptionConfigurationObservation {
	if in == nil {
		return nil
	}
	out := new(DestinationEncryptionConfigurationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DestinationEncryptionConfigurationParameters) DeepCopyInto(out *DestinationEncryptionConfigurationParameters) {
	*out = *in
	if in.KMSKeyName != nil {
		in, out := &in.KMSKeyName, &out.KMSKeyName
		*out = new(string)
		**out = **in
	}
	if in.KMSKeyNameRef != nil {
		in, out := &in.KMSKeyNameRef, &out.KMSKeyNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.KMSKeyNameSelector != nil {
		in, out := &in.KMSKeyNameSelector, &out.KMSKeyNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DestinationEncryptionConfigurationParameters.
func (in *DestinationEncryptionConfigurationParameters) DeepCopy() *DestinationEncryptionConfigurationParameters {
	if in == nil {
		return nil
	}
	out := new(DestinationEncryptionConfigurationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DestinationTableInitParameters) DeepCopyInto(out *DestinationTableInitParameters) {
	*out = *in
	if in.DatasetID != nil {
		in, out := &in.DatasetID, &out.DatasetID
		*out = new(string)
		**out = **in
	}
	if in.DatasetIDRef != nil {
		in, out := &in.DatasetIDRef, &out.DatasetIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.DatasetIDSelector != nil {
		in, out := &in.DatasetIDSelector, &out.DatasetIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.ProjectID != nil {
		in, out := &in.ProjectID, &out.ProjectID
		*out = new(string)
		**out = **in
	}
	if in.TableID != nil {
		in, out := &in.TableID, &out.TableID
		*out = new(string)
		**out = **in
	}
	if in.TableIDRef != nil {
		in, out := &in.TableIDRef, &out.TableIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.TableIDSelector != nil {
		in, out := &in.TableIDSelector, &out.TableIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DestinationTableInitParameters.
func (in *DestinationTableInitParameters) DeepCopy() *DestinationTableInitParameters {
	if in == nil {
		return nil
	}
	out := new(DestinationTableInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DestinationTableObservation) DeepCopyInto(out *DestinationTableObservation) {
	*out = *in
	if in.DatasetID != nil {
		in, out := &in.DatasetID, &out.DatasetID
		*out = new(string)
		**out = **in
	}
	if in.ProjectID != nil {
		in, out := &in.ProjectID, &out.ProjectID
		*out = new(string)
		**out = **in
	}
	if in.TableID != nil {
		in, out := &in.TableID, &out.TableID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DestinationTableObservation.
func (in *DestinationTableObservation) DeepCopy() *DestinationTableObservation {
	if in == nil {
		return nil
	}
	out := new(DestinationTableObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DestinationTableParameters) DeepCopyInto(out *DestinationTableParameters) {
	*out = *in
	if in.DatasetID != nil {
		in, out := &in.DatasetID, &out.DatasetID
		*out = new(string)
		**out = **in
	}
	if in.DatasetIDRef != nil {
		in, out := &in.DatasetIDRef, &out.DatasetIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.DatasetIDSelector != nil {
		in, out := &in.DatasetIDSelector, &out.DatasetIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.ProjectID != nil {
		in, out := &in.ProjectID, &out.ProjectID
		*out = new(string)
		**out = **in
	}
	if in.TableID != nil {
		in, out := &in.TableID, &out.TableID
		*out = new(string)
		**out = **in
	}
	if in.TableIDRef != nil {
		in, out := &in.TableIDRef, &out.TableIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.TableIDSelector != nil {
		in, out := &in.TableIDSelector, &out.TableIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DestinationTableParameters.
func (in *DestinationTableParameters) DeepCopy() *DestinationTableParameters {
	if in == nil {
		return nil
	}
	out := new(DestinationTableParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EmailPreferencesInitParameters) DeepCopyInto(out *EmailPreferencesInitParameters) {
	*out = *in
	if in.EnableFailureEmail != nil {
		in, out := &in.EnableFailureEmail, &out.EnableFailureEmail
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EmailPreferencesInitParameters.
func (in *EmailPreferencesInitParameters) DeepCopy() *EmailPreferencesInitParameters {
	if in == nil {
		return nil
	}
	out := new(EmailPreferencesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EmailPreferencesObservation) DeepCopyInto(out *EmailPreferencesObservation) {
	*out = *in
	if in.EnableFailureEmail != nil {
		in, out := &in.EnableFailureEmail, &out.EnableFailureEmail
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EmailPreferencesObservation.
func (in *EmailPreferencesObservation) DeepCopy() *EmailPreferencesObservation {
	if in == nil {
		return nil
	}
	out := new(EmailPreferencesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EmailPreferencesParameters) DeepCopyInto(out *EmailPreferencesParameters) {
	*out = *in
	if in.EnableFailureEmail != nil {
		in, out := &in.EnableFailureEmail, &out.EnableFailureEmail
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EmailPreferencesParameters.
func (in *EmailPreferencesParameters) DeepCopy() *EmailPreferencesParameters {
	if in == nil {
		return nil
	}
	out := new(EmailPreferencesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EncryptionConfigurationInitParameters) DeepCopyInto(out *EncryptionConfigurationInitParameters) {
	*out = *in
	if in.KMSKeyName != nil {
		in, out := &in.KMSKeyName, &out.KMSKeyName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EncryptionConfigurationInitParameters.
func (in *EncryptionConfigurationInitParameters) DeepCopy() *EncryptionConfigurationInitParameters {
	if in == nil {
		return nil
	}
	out := new(EncryptionConfigurationInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EncryptionConfigurationObservation) DeepCopyInto(out *EncryptionConfigurationObservation) {
	*out = *in
	if in.KMSKeyName != nil {
		in, out := &in.KMSKeyName, &out.KMSKeyName
		*out = new(string)
		**out = **in
	}
	if in.KMSKeyVersion != nil {
		in, out := &in.KMSKeyVersion, &out.KMSKeyVersion
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EncryptionConfigurationObservation.
func (in *EncryptionConfigurationObservation) DeepCopy() *EncryptionConfigurationObservation {
	if in == nil {
		return nil
	}
	out := new(EncryptionConfigurationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EncryptionConfigurationParameters) DeepCopyInto(out *EncryptionConfigurationParameters) {
	*out = *in
	if in.KMSKeyName != nil {
		in, out := &in.KMSKeyName, &out.KMSKeyName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EncryptionConfigurationParameters.
func (in *EncryptionConfigurationParameters) DeepCopy() *EncryptionConfigurationParameters {
	if in == nil {
		return nil
	}
	out := new(EncryptionConfigurationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ErrorResultInitParameters) DeepCopyInto(out *ErrorResultInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ErrorResultInitParameters.
func (in *ErrorResultInitParameters) DeepCopy() *ErrorResultInitParameters {
	if in == nil {
		return nil
	}
	out := new(ErrorResultInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ErrorResultObservation) DeepCopyInto(out *ErrorResultObservation) {
	*out = *in
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.Message != nil {
		in, out := &in.Message, &out.Message
		*out = new(string)
		**out = **in
	}
	if in.Reason != nil {
		in, out := &in.Reason, &out.Reason
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ErrorResultObservation.
func (in *ErrorResultObservation) DeepCopy() *ErrorResultObservation {
	if in == nil {
		return nil
	}
	out := new(ErrorResultObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ErrorResultParameters) DeepCopyInto(out *ErrorResultParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ErrorResultParameters.
func (in *ErrorResultParameters) DeepCopy() *ErrorResultParameters {
	if in == nil {
		return nil
	}
	out := new(ErrorResultParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ErrorsInitParameters) DeepCopyInto(out *ErrorsInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ErrorsInitParameters.
func (in *ErrorsInitParameters) DeepCopy() *ErrorsInitParameters {
	if in == nil {
		return nil
	}
	out := new(ErrorsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ErrorsObservation) DeepCopyInto(out *ErrorsObservation) {
	*out = *in
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.Message != nil {
		in, out := &in.Message, &out.Message
		*out = new(string)
		**out = **in
	}
	if in.Reason != nil {
		in, out := &in.Reason, &out.Reason
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ErrorsObservation.
func (in *ErrorsObservation) DeepCopy() *ErrorsObservation {
	if in == nil {
		return nil
	}
	out := new(ErrorsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ErrorsParameters) DeepCopyInto(out *ErrorsParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ErrorsParameters.
func (in *ErrorsParameters) DeepCopy() *ErrorsParameters {
	if in == nil {
		return nil
	}
	out := new(ErrorsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExternalDataConfigurationInitParameters) DeepCopyInto(out *ExternalDataConfigurationInitParameters) {
	*out = *in
	if in.Autodetect != nil {
		in, out := &in.Autodetect, &out.Autodetect
		*out = new(bool)
		**out = **in
	}
	if in.AvroOptions != nil {
		in, out := &in.AvroOptions, &out.AvroOptions
		*out = make([]AvroOptionsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Compression != nil {
		in, out := &in.Compression, &out.Compression
		*out = new(string)
		**out = **in
	}
	if in.ConnectionID != nil {
		in, out := &in.ConnectionID, &out.ConnectionID
		*out = new(string)
		**out = **in
	}
	if in.CsvOptions != nil {
		in, out := &in.CsvOptions, &out.CsvOptions
		*out = make([]CsvOptionsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.FileSetSpecType != nil {
		in, out := &in.FileSetSpecType, &out.FileSetSpecType
		*out = new(string)
		**out = **in
	}
	if in.GoogleSheetsOptions != nil {
		in, out := &in.GoogleSheetsOptions, &out.GoogleSheetsOptions
		*out = make([]GoogleSheetsOptionsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HivePartitioningOptions != nil {
		in, out := &in.HivePartitioningOptions, &out.HivePartitioningOptions
		*out = make([]HivePartitioningOptionsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IgnoreUnknownValues != nil {
		in, out := &in.IgnoreUnknownValues, &out.IgnoreUnknownValues
		*out = new(bool)
		**out = **in
	}
	if in.JSONOptions != nil {
		in, out := &in.JSONOptions, &out.JSONOptions
		*out = make([]JSONOptionsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MaxBadRecords != nil {
		in, out := &in.MaxBadRecords, &out.MaxBadRecords
		*out = new(float64)
		**out = **in
	}
	if in.MetadataCacheMode != nil {
		in, out := &in.MetadataCacheMode, &out.MetadataCacheMode
		*out = new(string)
		**out = **in
	}
	if in.ObjectMetadata != nil {
		in, out := &in.ObjectMetadata, &out.ObjectMetadata
		*out = new(string)
		**out = **in
	}
	if in.ParquetOptions != nil {
		in, out := &in.ParquetOptions, &out.ParquetOptions
		*out = make([]ExternalDataConfigurationParquetOptionsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ReferenceFileSchemaURI != nil {
		in, out := &in.ReferenceFileSchemaURI, &out.ReferenceFileSchemaURI
		*out = new(string)
		**out = **in
	}
	if in.Schema != nil {
		in, out := &in.Schema, &out.Schema
		*out = new(string)
		**out = **in
	}
	if in.SourceFormat != nil {
		in, out := &in.SourceFormat, &out.SourceFormat
		*out = new(string)
		**out = **in
	}
	if in.SourceUris != nil {
		in, out := &in.SourceUris, &out.SourceUris
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExternalDataConfigurationInitParameters.
func (in *ExternalDataConfigurationInitParameters) DeepCopy() *ExternalDataConfigurationInitParameters {
	if in == nil {
		return nil
	}
	out := new(ExternalDataConfigurationInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExternalDataConfigurationObservation) DeepCopyInto(out *ExternalDataConfigurationObservation) {
	*out = *in
	if in.Autodetect != nil {
		in, out := &in.Autodetect, &out.Autodetect
		*out = new(bool)
		**out = **in
	}
	if in.AvroOptions != nil {
		in, out := &in.AvroOptions, &out.AvroOptions
		*out = make([]AvroOptionsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Compression != nil {
		in, out := &in.Compression, &out.Compression
		*out = new(string)
		**out = **in
	}
	if in.ConnectionID != nil {
		in, out := &in.ConnectionID, &out.ConnectionID
		*out = new(string)
		**out = **in
	}
	if in.CsvOptions != nil {
		in, out := &in.CsvOptions, &out.CsvOptions
		*out = make([]CsvOptionsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.FileSetSpecType != nil {
		in, out := &in.FileSetSpecType, &out.FileSetSpecType
		*out = new(string)
		**out = **in
	}
	if in.GoogleSheetsOptions != nil {
		in, out := &in.GoogleSheetsOptions, &out.GoogleSheetsOptions
		*out = make([]GoogleSheetsOptionsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HivePartitioningOptions != nil {
		in, out := &in.HivePartitioningOptions, &out.HivePartitioningOptions
		*out = make([]HivePartitioningOptionsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IgnoreUnknownValues != nil {
		in, out := &in.IgnoreUnknownValues, &out.IgnoreUnknownValues
		*out = new(bool)
		**out = **in
	}
	if in.JSONOptions != nil {
		in, out := &in.JSONOptions, &out.JSONOptions
		*out = make([]JSONOptionsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MaxBadRecords != nil {
		in, out := &in.MaxBadRecords, &out.MaxBadRecords
		*out = new(float64)
		**out = **in
	}
	if in.MetadataCacheMode != nil {
		in, out := &in.MetadataCacheMode, &out.MetadataCacheMode
		*out = new(string)
		**out = **in
	}
	if in.ObjectMetadata != nil {
		in, out := &in.ObjectMetadata, &out.ObjectMetadata
		*out = new(string)
		**out = **in
	}
	if in.ParquetOptions != nil {
		in, out := &in.ParquetOptions, &out.ParquetOptions
		*out = make([]ExternalDataConfigurationParquetOptionsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ReferenceFileSchemaURI != nil {
		in, out := &in.ReferenceFileSchemaURI, &out.ReferenceFileSchemaURI
		*out = new(string)
		**out = **in
	}
	if in.Schema != nil {
		in, out := &in.Schema, &out.Schema
		*out = new(string)
		**out = **in
	}
	if in.SourceFormat != nil {
		in, out := &in.SourceFormat, &out.SourceFormat
		*out = new(string)
		**out = **in
	}
	if in.SourceUris != nil {
		in, out := &in.SourceUris, &out.SourceUris
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExternalDataConfigurationObservation.
func (in *ExternalDataConfigurationObservation) DeepCopy() *ExternalDataConfigurationObservation {
	if in == nil {
		return nil
	}
	out := new(ExternalDataConfigurationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExternalDataConfigurationParameters) DeepCopyInto(out *ExternalDataConfigurationParameters) {
	*out = *in
	if in.Autodetect != nil {
		in, out := &in.Autodetect, &out.Autodetect
		*out = new(bool)
		**out = **in
	}
	if in.AvroOptions != nil {
		in, out := &in.AvroOptions, &out.AvroOptions
		*out = make([]AvroOptionsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Compression != nil {
		in, out := &in.Compression, &out.Compression
		*out = new(string)
		**out = **in
	}
	if in.ConnectionID != nil {
		in, out := &in.ConnectionID, &out.ConnectionID
		*out = new(string)
		**out = **in
	}
	if in.CsvOptions != nil {
		in, out := &in.CsvOptions, &out.CsvOptions
		*out = make([]CsvOptionsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.FileSetSpecType != nil {
		in, out := &in.FileSetSpecType, &out.FileSetSpecType
		*out = new(string)
		**out = **in
	}
	if in.GoogleSheetsOptions != nil {
		in, out := &in.GoogleSheetsOptions, &out.GoogleSheetsOptions
		*out = make([]GoogleSheetsOptionsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HivePartitioningOptions != nil {
		in, out := &in.HivePartitioningOptions, &out.HivePartitioningOptions
		*out = make([]HivePartitioningOptionsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IgnoreUnknownValues != nil {
		in, out := &in.IgnoreUnknownValues, &out.IgnoreUnknownValues
		*out = new(bool)
		**out = **in
	}
	if in.JSONOptions != nil {
		in, out := &in.JSONOptions, &out.JSONOptions
		*out = make([]JSONOptionsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MaxBadRecords != nil {
		in, out := &in.MaxBadRecords, &out.MaxBadRecords
		*out = new(float64)
		**out = **in
	}
	if in.MetadataCacheMode != nil {
		in, out := &in.MetadataCacheMode, &out.MetadataCacheMode
		*out = new(string)
		**out = **in
	}
	if in.ObjectMetadata != nil {
		in, out := &in.ObjectMetadata, &out.ObjectMetadata
		*out = new(string)
		**out = **in
	}
	if in.ParquetOptions != nil {
		in, out := &in.ParquetOptions, &out.ParquetOptions
		*out = make([]ExternalDataConfigurationParquetOptionsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ReferenceFileSchemaURI != nil {
		in, out := &in.ReferenceFileSchemaURI, &out.ReferenceFileSchemaURI
		*out = new(string)
		**out = **in
	}
	if in.Schema != nil {
		in, out := &in.Schema, &out.Schema
		*out = new(string)
		**out = **in
	}
	if in.SourceFormat != nil {
		in, out := &in.SourceFormat, &out.SourceFormat
		*out = new(string)
		**out = **in
	}
	if in.SourceUris != nil {
		in, out := &in.SourceUris, &out.SourceUris
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExternalDataConfigurationParameters.
func (in *ExternalDataConfigurationParameters) DeepCopy() *ExternalDataConfigurationParameters {
	if in == nil {
		return nil
	}
	out := new(ExternalDataConfigurationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExternalDataConfigurationParquetOptionsInitParameters) DeepCopyInto(out *ExternalDataConfigurationParquetOptionsInitParameters) {
	*out = *in
	if in.EnableListInference != nil {
		in, out := &in.EnableListInference, &out.EnableListInference
		*out = new(bool)
		**out = **in
	}
	if in.EnumAsString != nil {
		in, out := &in.EnumAsString, &out.EnumAsString
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExternalDataConfigurationParquetOptionsInitParameters.
func (in *ExternalDataConfigurationParquetOptionsInitParameters) DeepCopy() *ExternalDataConfigurationParquetOptionsInitParameters {
	if in == nil {
		return nil
	}
	out := new(ExternalDataConfigurationParquetOptionsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExternalDataConfigurationParquetOptionsObservation) DeepCopyInto(out *ExternalDataConfigurationParquetOptionsObservation) {
	*out = *in
	if in.EnableListInference != nil {
		in, out := &in.EnableListInference, &out.EnableListInference
		*out = new(bool)
		**out = **in
	}
	if in.EnumAsString != nil {
		in, out := &in.EnumAsString, &out.EnumAsString
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExternalDataConfigurationParquetOptionsObservation.
func (in *ExternalDataConfigurationParquetOptionsObservation) DeepCopy() *ExternalDataConfigurationParquetOptionsObservation {
	if in == nil {
		return nil
	}
	out := new(ExternalDataConfigurationParquetOptionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExternalDataConfigurationParquetOptionsParameters) DeepCopyInto(out *ExternalDataConfigurationParquetOptionsParameters) {
	*out = *in
	if in.EnableListInference != nil {
		in, out := &in.EnableListInference, &out.EnableListInference
		*out = new(bool)
		**out = **in
	}
	if in.EnumAsString != nil {
		in, out := &in.EnumAsString, &out.EnumAsString
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExternalDataConfigurationParquetOptionsParameters.
func (in *ExternalDataConfigurationParquetOptionsParameters) DeepCopy() *ExternalDataConfigurationParquetOptionsParameters {
	if in == nil {
		return nil
	}
	out := new(ExternalDataConfigurationParquetOptionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExtractInitParameters) DeepCopyInto(out *ExtractInitParameters) {
	*out = *in
	if in.Compression != nil {
		in, out := &in.Compression, &out.Compression
		*out = new(string)
		**out = **in
	}
	if in.DestinationFormat != nil {
		in, out := &in.DestinationFormat, &out.DestinationFormat
		*out = new(string)
		**out = **in
	}
	if in.DestinationUris != nil {
		in, out := &in.DestinationUris, &out.DestinationUris
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.FieldDelimiter != nil {
		in, out := &in.FieldDelimiter, &out.FieldDelimiter
		*out = new(string)
		**out = **in
	}
	if in.PrintHeader != nil {
		in, out := &in.PrintHeader, &out.PrintHeader
		*out = new(bool)
		**out = **in
	}
	if in.SourceModel != nil {
		in, out := &in.SourceModel, &out.SourceModel
		*out = make([]SourceModelInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SourceTable != nil {
		in, out := &in.SourceTable, &out.SourceTable
		*out = make([]SourceTableInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.UseAvroLogicalTypes != nil {
		in, out := &in.UseAvroLogicalTypes, &out.UseAvroLogicalTypes
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExtractInitParameters.
func (in *ExtractInitParameters) DeepCopy() *ExtractInitParameters {
	if in == nil {
		return nil
	}
	out := new(ExtractInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExtractObservation) DeepCopyInto(out *ExtractObservation) {
	*out = *in
	if in.Compression != nil {
		in, out := &in.Compression, &out.Compression
		*out = new(string)
		**out = **in
	}
	if in.DestinationFormat != nil {
		in, out := &in.DestinationFormat, &out.DestinationFormat
		*out = new(string)
		**out = **in
	}
	if in.DestinationUris != nil {
		in, out := &in.DestinationUris, &out.DestinationUris
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.FieldDelimiter != nil {
		in, out := &in.FieldDelimiter, &out.FieldDelimiter
		*out = new(string)
		**out = **in
	}
	if in.PrintHeader != nil {
		in, out := &in.PrintHeader, &out.PrintHeader
		*out = new(bool)
		**out = **in
	}
	if in.SourceModel != nil {
		in, out := &in.SourceModel, &out.SourceModel
		*out = make([]SourceModelObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SourceTable != nil {
		in, out := &in.SourceTable, &out.SourceTable
		*out = make([]SourceTableObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.UseAvroLogicalTypes != nil {
		in, out := &in.UseAvroLogicalTypes, &out.UseAvroLogicalTypes
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExtractObservation.
func (in *ExtractObservation) DeepCopy() *ExtractObservation {
	if in == nil {
		return nil
	}
	out := new(ExtractObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExtractParameters) DeepCopyInto(out *ExtractParameters) {
	*out = *in
	if in.Compression != nil {
		in, out := &in.Compression, &out.Compression
		*out = new(string)
		**out = **in
	}
	if in.DestinationFormat != nil {
		in, out := &in.DestinationFormat, &out.DestinationFormat
		*out = new(string)
		**out = **in
	}
	if in.DestinationUris != nil {
		in, out := &in.DestinationUris, &out.DestinationUris
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.FieldDelimiter != nil {
		in, out := &in.FieldDelimiter, &out.FieldDelimiter
		*out = new(string)
		**out = **in
	}
	if in.PrintHeader != nil {
		in, out := &in.PrintHeader, &out.PrintHeader
		*out = new(bool)
		**out = **in
	}
	if in.SourceModel != nil {
		in, out := &in.SourceModel, &out.SourceModel
		*out = make([]SourceModelParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SourceTable != nil {
		in, out := &in.SourceTable, &out.SourceTable
		*out = make([]SourceTableParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.UseAvroLogicalTypes != nil {
		in, out := &in.UseAvroLogicalTypes, &out.UseAvroLogicalTypes
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExtractParameters.
func (in *ExtractParameters) DeepCopy() *ExtractParameters {
	if in == nil {
		return nil
	}
	out := new(ExtractParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ForeignKeysInitParameters) DeepCopyInto(out *ForeignKeysInitParameters) {
	*out = *in
	if in.ColumnReferences != nil {
		in, out := &in.ColumnReferences, &out.ColumnReferences
		*out = make([]ColumnReferencesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ReferencedTable != nil {
		in, out := &in.ReferencedTable, &out.ReferencedTable
		*out = make([]ReferencedTableInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ForeignKeysInitParameters.
func (in *ForeignKeysInitParameters) DeepCopy() *ForeignKeysInitParameters {
	if in == nil {
		return nil
	}
	out := new(ForeignKeysInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ForeignKeysObservation) DeepCopyInto(out *ForeignKeysObservation) {
	*out = *in
	if in.ColumnReferences != nil {
		in, out := &in.ColumnReferences, &out.ColumnReferences
		*out = make([]ColumnReferencesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ReferencedTable != nil {
		in, out := &in.ReferencedTable, &out.ReferencedTable
		*out = make([]ReferencedTableObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ForeignKeysObservation.
func (in *ForeignKeysObservation) DeepCopy() *ForeignKeysObservation {
	if in == nil {
		return nil
	}
	out := new(ForeignKeysObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ForeignKeysParameters) DeepCopyInto(out *ForeignKeysParameters) {
	*out = *in
	if in.ColumnReferences != nil {
		in, out := &in.ColumnReferences, &out.ColumnReferences
		*out = make([]ColumnReferencesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ReferencedTable != nil {
		in, out := &in.ReferencedTable, &out.ReferencedTable
		*out = make([]ReferencedTableParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ForeignKeysParameters.
func (in *ForeignKeysParameters) DeepCopy() *ForeignKeysParameters {
	if in == nil {
		return nil
	}
	out := new(ForeignKeysParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GoogleSheetsOptionsInitParameters) DeepCopyInto(out *GoogleSheetsOptionsInitParameters) {
	*out = *in
	if in.Range != nil {
		in, out := &in.Range, &out.Range
		*out = new(string)
		**out = **in
	}
	if in.SkipLeadingRows != nil {
		in, out := &in.SkipLeadingRows, &out.SkipLeadingRows
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GoogleSheetsOptionsInitParameters.
func (in *GoogleSheetsOptionsInitParameters) DeepCopy() *GoogleSheetsOptionsInitParameters {
	if in == nil {
		return nil
	}
	out := new(GoogleSheetsOptionsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GoogleSheetsOptionsObservation) DeepCopyInto(out *GoogleSheetsOptionsObservation) {
	*out = *in
	if in.Range != nil {
		in, out := &in.Range, &out.Range
		*out = new(string)
		**out = **in
	}
	if in.SkipLeadingRows != nil {
		in, out := &in.SkipLeadingRows, &out.SkipLeadingRows
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GoogleSheetsOptionsObservation.
func (in *GoogleSheetsOptionsObservation) DeepCopy() *GoogleSheetsOptionsObservation {
	if in == nil {
		return nil
	}
	out := new(GoogleSheetsOptionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GoogleSheetsOptionsParameters) DeepCopyInto(out *GoogleSheetsOptionsParameters) {
	*out = *in
	if in.Range != nil {
		in, out := &in.Range, &out.Range
		*out = new(string)
		**out = **in
	}
	if in.SkipLeadingRows != nil {
		in, out := &in.SkipLeadingRows, &out.SkipLeadingRows
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GoogleSheetsOptionsParameters.
func (in *GoogleSheetsOptionsParameters) DeepCopy() *GoogleSheetsOptionsParameters {
	if in == nil {
		return nil
	}
	out := new(GoogleSheetsOptionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HivePartitioningOptionsInitParameters) DeepCopyInto(out *HivePartitioningOptionsInitParameters) {
	*out = *in
	if in.Mode != nil {
		in, out := &in.Mode, &out.Mode
		*out = new(string)
		**out = **in
	}
	if in.RequirePartitionFilter != nil {
		in, out := &in.RequirePartitionFilter, &out.RequirePartitionFilter
		*out = new(bool)
		**out = **in
	}
	if in.SourceURIPrefix != nil {
		in, out := &in.SourceURIPrefix, &out.SourceURIPrefix
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HivePartitioningOptionsInitParameters.
func (in *HivePartitioningOptionsInitParameters) DeepCopy() *HivePartitioningOptionsInitParameters {
	if in == nil {
		return nil
	}
	out := new(HivePartitioningOptionsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HivePartitioningOptionsObservation) DeepCopyInto(out *HivePartitioningOptionsObservation) {
	*out = *in
	if in.Mode != nil {
		in, out := &in.Mode, &out.Mode
		*out = new(string)
		**out = **in
	}
	if in.RequirePartitionFilter != nil {
		in, out := &in.RequirePartitionFilter, &out.RequirePartitionFilter
		*out = new(bool)
		**out = **in
	}
	if in.SourceURIPrefix != nil {
		in, out := &in.SourceURIPrefix, &out.SourceURIPrefix
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HivePartitioningOptionsObservation.
func (in *HivePartitioningOptionsObservation) DeepCopy() *HivePartitioningOptionsObservation {
	if in == nil {
		return nil
	}
	out := new(HivePartitioningOptionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HivePartitioningOptionsParameters) DeepCopyInto(out *HivePartitioningOptionsParameters) {
	*out = *in
	if in.Mode != nil {
		in, out := &in.Mode, &out.Mode
		*out = new(string)
		**out = **in
	}
	if in.RequirePartitionFilter != nil {
		in, out := &in.RequirePartitionFilter, &out.RequirePartitionFilter
		*out = new(bool)
		**out = **in
	}
	if in.SourceURIPrefix != nil {
		in, out := &in.SourceURIPrefix, &out.SourceURIPrefix
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HivePartitioningOptionsParameters.
func (in *HivePartitioningOptionsParameters) DeepCopy() *HivePartitioningOptionsParameters {
	if in == nil {
		return nil
	}
	out := new(HivePartitioningOptionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JSONOptionsInitParameters) DeepCopyInto(out *JSONOptionsInitParameters) {
	*out = *in
	if in.Encoding != nil {
		in, out := &in.Encoding, &out.Encoding
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JSONOptionsInitParameters.
func (in *JSONOptionsInitParameters) DeepCopy() *JSONOptionsInitParameters {
	if in == nil {
		return nil
	}
	out := new(JSONOptionsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JSONOptionsObservation) DeepCopyInto(out *JSONOptionsObservation) {
	*out = *in
	if in.Encoding != nil {
		in, out := &in.Encoding, &out.Encoding
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JSONOptionsObservation.
func (in *JSONOptionsObservation) DeepCopy() *JSONOptionsObservation {
	if in == nil {
		return nil
	}
	out := new(JSONOptionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JSONOptionsParameters) DeepCopyInto(out *JSONOptionsParameters) {
	*out = *in
	if in.Encoding != nil {
		in, out := &in.Encoding, &out.Encoding
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JSONOptionsParameters.
func (in *JSONOptionsParameters) DeepCopy() *JSONOptionsParameters {
	if in == nil {
		return nil
	}
	out := new(JSONOptionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Job) DeepCopyInto(out *Job) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Job.
func (in *Job) DeepCopy() *Job {
	if in == nil {
		return nil
	}
	out := new(Job)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Job) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobInitParameters) DeepCopyInto(out *JobInitParameters) {
	*out = *in
	if in.Copy != nil {
		in, out := &in.Copy, &out.Copy
		*out = make([]CopyInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Extract != nil {
		in, out := &in.Extract, &out.Extract
		*out = make([]ExtractInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.JobID != nil {
		in, out := &in.JobID, &out.JobID
		*out = new(string)
		**out = **in
	}
	if in.JobTimeoutMs != nil {
		in, out := &in.JobTimeoutMs, &out.JobTimeoutMs
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Load != nil {
		in, out := &in.Load, &out.Load
		*out = make([]LoadInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Query != nil {
		in, out := &in.Query, &out.Query
		*out = make([]QueryInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobInitParameters.
func (in *JobInitParameters) DeepCopy() *JobInitParameters {
	if in == nil {
		return nil
	}
	out := new(JobInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobList) DeepCopyInto(out *JobList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Job, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobList.
func (in *JobList) DeepCopy() *JobList {
	if in == nil {
		return nil
	}
	out := new(JobList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *JobList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobObservation) DeepCopyInto(out *JobObservation) {
	*out = *in
	if in.Copy != nil {
		in, out := &in.Copy, &out.Copy
		*out = make([]CopyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EffectiveLabels != nil {
		in, out := &in.EffectiveLabels, &out.EffectiveLabels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Extract != nil {
		in, out := &in.Extract, &out.Extract
		*out = make([]ExtractObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.JobID != nil {
		in, out := &in.JobID, &out.JobID
		*out = new(string)
		**out = **in
	}
	if in.JobTimeoutMs != nil {
		in, out := &in.JobTimeoutMs, &out.JobTimeoutMs
		*out = new(string)
		**out = **in
	}
	if in.JobType != nil {
		in, out := &in.JobType, &out.JobType
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Load != nil {
		in, out := &in.Load, &out.Load
		*out = make([]LoadObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Query != nil {
		in, out := &in.Query, &out.Query
		*out = make([]QueryObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = make([]StatusObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TerraformLabels != nil {
		in, out := &in.TerraformLabels, &out.TerraformLabels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.UserEmail != nil {
		in, out := &in.UserEmail, &out.UserEmail
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobObservation.
func (in *JobObservation) DeepCopy() *JobObservation {
	if in == nil {
		return nil
	}
	out := new(JobObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobParameters) DeepCopyInto(out *JobParameters) {
	*out = *in
	if in.Copy != nil {
		in, out := &in.Copy, &out.Copy
		*out = make([]CopyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Extract != nil {
		in, out := &in.Extract, &out.Extract
		*out = make([]ExtractParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.JobID != nil {
		in, out := &in.JobID, &out.JobID
		*out = new(string)
		**out = **in
	}
	if in.JobTimeoutMs != nil {
		in, out := &in.JobTimeoutMs, &out.JobTimeoutMs
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Load != nil {
		in, out := &in.Load, &out.Load
		*out = make([]LoadParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Query != nil {
		in, out := &in.Query, &out.Query
		*out = make([]QueryParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobParameters.
func (in *JobParameters) DeepCopy() *JobParameters {
	if in == nil {
		return nil
	}
	out := new(JobParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobSpec) DeepCopyInto(out *JobSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobSpec.
func (in *JobSpec) DeepCopy() *JobSpec {
	if in == nil {
		return nil
	}
	out := new(JobSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobStatus) DeepCopyInto(out *JobStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobStatus.
func (in *JobStatus) DeepCopy() *JobStatus {
	if in == nil {
		return nil
	}
	out := new(JobStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoadDestinationEncryptionConfigurationInitParameters) DeepCopyInto(out *LoadDestinationEncryptionConfigurationInitParameters) {
	*out = *in
	if in.KMSKeyName != nil {
		in, out := &in.KMSKeyName, &out.KMSKeyName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoadDestinationEncryptionConfigurationInitParameters.
func (in *LoadDestinationEncryptionConfigurationInitParameters) DeepCopy() *LoadDestinationEncryptionConfigurationInitParameters {
	if in == nil {
		return nil
	}
	out := new(LoadDestinationEncryptionConfigurationInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoadDestinationEncryptionConfigurationObservation) DeepCopyInto(out *LoadDestinationEncryptionConfigurationObservation) {
	*out = *in
	if in.KMSKeyName != nil {
		in, out := &in.KMSKeyName, &out.KMSKeyName
		*out = new(string)
		**out = **in
	}
	if in.KMSKeyVersion != nil {
		in, out := &in.KMSKeyVersion, &out.KMSKeyVersion
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoadDestinationEncryptionConfigurationObservation.
func (in *LoadDestinationEncryptionConfigurationObservation) DeepCopy() *LoadDestinationEncryptionConfigurationObservation {
	if in == nil {
		return nil
	}
	out := new(LoadDestinationEncryptionConfigurationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoadDestinationEncryptionConfigurationParameters) DeepCopyInto(out *LoadDestinationEncryptionConfigurationParameters) {
	*out = *in
	if in.KMSKeyName != nil {
		in, out := &in.KMSKeyName, &out.KMSKeyName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoadDestinationEncryptionConfigurationParameters.
func (in *LoadDestinationEncryptionConfigurationParameters) DeepCopy() *LoadDestinationEncryptionConfigurationParameters {
	if in == nil {
		return nil
	}
	out := new(LoadDestinationEncryptionConfigurationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoadDestinationTableInitParameters) DeepCopyInto(out *LoadDestinationTableInitParameters) {
	*out = *in
	if in.DatasetID != nil {
		in, out := &in.DatasetID, &out.DatasetID
		*out = new(string)
		**out = **in
	}
	if in.DatasetIDRef != nil {
		in, out := &in.DatasetIDRef, &out.DatasetIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.DatasetIDSelector != nil {
		in, out := &in.DatasetIDSelector, &out.DatasetIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.ProjectID != nil {
		in, out := &in.ProjectID, &out.ProjectID
		*out = new(string)
		**out = **in
	}
	if in.TableID != nil {
		in, out := &in.TableID, &out.TableID
		*out = new(string)
		**out = **in
	}
	if in.TableIDRef != nil {
		in, out := &in.TableIDRef, &out.TableIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.TableIDSelector != nil {
		in, out := &in.TableIDSelector, &out.TableIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoadDestinationTableInitParameters.
func (in *LoadDestinationTableInitParameters) DeepCopy() *LoadDestinationTableInitParameters {
	if in == nil {
		return nil
	}
	out := new(LoadDestinationTableInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoadDestinationTableObservation) DeepCopyInto(out *LoadDestinationTableObservation) {
	*out = *in
	if in.DatasetID != nil {
		in, out := &in.DatasetID, &out.DatasetID
		*out = new(string)
		**out = **in
	}
	if in.ProjectID != nil {
		in, out := &in.ProjectID, &out.ProjectID
		*out = new(string)
		**out = **in
	}
	if in.TableID != nil {
		in, out := &in.TableID, &out.TableID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoadDestinationTableObservation.
func (in *LoadDestinationTableObservation) DeepCopy() *LoadDestinationTableObservation {
	if in == nil {
		return nil
	}
	out := new(LoadDestinationTableObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoadDestinationTableParameters) DeepCopyInto(out *LoadDestinationTableParameters) {
	*out = *in
	if in.DatasetID != nil {
		in, out := &in.DatasetID, &out.DatasetID
		*out = new(string)
		**out = **in
	}
	if in.DatasetIDRef != nil {
		in, out := &in.DatasetIDRef, &out.DatasetIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.DatasetIDSelector != nil {
		in, out := &in.DatasetIDSelector, &out.DatasetIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.ProjectID != nil {
		in, out := &in.ProjectID, &out.ProjectID
		*out = new(string)
		**out = **in
	}
	if in.TableID != nil {
		in, out := &in.TableID, &out.TableID
		*out = new(string)
		**out = **in
	}
	if in.TableIDRef != nil {
		in, out := &in.TableIDRef, &out.TableIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.TableIDSelector != nil {
		in, out := &in.TableIDSelector, &out.TableIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoadDestinationTableParameters.
func (in *LoadDestinationTableParameters) DeepCopy() *LoadDestinationTableParameters {
	if in == nil {
		return nil
	}
	out := new(LoadDestinationTableParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoadInitParameters) DeepCopyInto(out *LoadInitParameters) {
	*out = *in
	if in.AllowJaggedRows != nil {
		in, out := &in.AllowJaggedRows, &out.AllowJaggedRows
		*out = new(bool)
		**out = **in
	}
	if in.AllowQuotedNewlines != nil {
		in, out := &in.AllowQuotedNewlines, &out.AllowQuotedNewlines
		*out = new(bool)
		**out = **in
	}
	if in.Autodetect != nil {
		in, out := &in.Autodetect, &out.Autodetect
		*out = new(bool)
		**out = **in
	}
	if in.CreateDisposition != nil {
		in, out := &in.CreateDisposition, &out.CreateDisposition
		*out = new(string)
		**out = **in
	}
	if in.DestinationEncryptionConfiguration != nil {
		in, out := &in.DestinationEncryptionConfiguration, &out.DestinationEncryptionConfiguration
		*out = make([]LoadDestinationEncryptionConfigurationInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DestinationTable != nil {
		in, out := &in.DestinationTable, &out.DestinationTable
		*out = make([]LoadDestinationTableInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Encoding != nil {
		in, out := &in.Encoding, &out.Encoding
		*out = new(string)
		**out = **in
	}
	if in.FieldDelimiter != nil {
		in, out := &in.FieldDelimiter, &out.FieldDelimiter
		*out = new(string)
		**out = **in
	}
	if in.IgnoreUnknownValues != nil {
		in, out := &in.IgnoreUnknownValues, &out.IgnoreUnknownValues
		*out = new(bool)
		**out = **in
	}
	if in.JSONExtension != nil {
		in, out := &in.JSONExtension, &out.JSONExtension
		*out = new(string)
		**out = **in
	}
	if in.MaxBadRecords != nil {
		in, out := &in.MaxBadRecords, &out.MaxBadRecords
		*out = new(float64)
		**out = **in
	}
	if in.NullMarker != nil {
		in, out := &in.NullMarker, &out.NullMarker
		*out = new(string)
		**out = **in
	}
	if in.ParquetOptions != nil {
		in, out := &in.ParquetOptions, &out.ParquetOptions
		*out = make([]ParquetOptionsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ProjectionFields != nil {
		in, out := &in.ProjectionFields, &out.ProjectionFields
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Quote != nil {
		in, out := &in.Quote, &out.Quote
		*out = new(string)
		**out = **in
	}
	if in.SchemaUpdateOptions != nil {
		in, out := &in.SchemaUpdateOptions, &out.SchemaUpdateOptions
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SkipLeadingRows != nil {
		in, out := &in.SkipLeadingRows, &out.SkipLeadingRows
		*out = new(float64)
		**out = **in
	}
	if in.SourceFormat != nil {
		in, out := &in.SourceFormat, &out.SourceFormat
		*out = new(string)
		**out = **in
	}
	if in.SourceUris != nil {
		in, out := &in.SourceUris, &out.SourceUris
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.TimePartitioning != nil {
		in, out := &in.TimePartitioning, &out.TimePartitioning
		*out = make([]TimePartitioningInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.WriteDisposition != nil {
		in, out := &in.WriteDisposition, &out.WriteDisposition
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoadInitParameters.
func (in *LoadInitParameters) DeepCopy() *LoadInitParameters {
	if in == nil {
		return nil
	}
	out := new(LoadInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoadObservation) DeepCopyInto(out *LoadObservation) {
	*out = *in
	if in.AllowJaggedRows != nil {
		in, out := &in.AllowJaggedRows, &out.AllowJaggedRows
		*out = new(bool)
		**out = **in
	}
	if in.AllowQuotedNewlines != nil {
		in, out := &in.AllowQuotedNewlines, &out.AllowQuotedNewlines
		*out = new(bool)
		**out = **in
	}
	if in.Autodetect != nil {
		in, out := &in.Autodetect, &out.Autodetect
		*out = new(bool)
		**out = **in
	}
	if in.CreateDisposition != nil {
		in, out := &in.CreateDisposition, &out.CreateDisposition
		*out = new(string)
		**out = **in
	}
	if in.DestinationEncryptionConfiguration != nil {
		in, out := &in.DestinationEncryptionConfiguration, &out.DestinationEncryptionConfiguration
		*out = make([]LoadDestinationEncryptionConfigurationObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DestinationTable != nil {
		in, out := &in.DestinationTable, &out.DestinationTable
		*out = make([]LoadDestinationTableObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Encoding != nil {
		in, out := &in.Encoding, &out.Encoding
		*out = new(string)
		**out = **in
	}
	if in.FieldDelimiter != nil {
		in, out := &in.FieldDelimiter, &out.FieldDelimiter
		*out = new(string)
		**out = **in
	}
	if in.IgnoreUnknownValues != nil {
		in, out := &in.IgnoreUnknownValues, &out.IgnoreUnknownValues
		*out = new(bool)
		**out = **in
	}
	if in.JSONExtension != nil {
		in, out := &in.JSONExtension, &out.JSONExtension
		*out = new(string)
		**out = **in
	}
	if in.MaxBadRecords != nil {
		in, out := &in.MaxBadRecords, &out.MaxBadRecords
		*out = new(float64)
		**out = **in
	}
	if in.NullMarker != nil {
		in, out := &in.NullMarker, &out.NullMarker
		*out = new(string)
		**out = **in
	}
	if in.ParquetOptions != nil {
		in, out := &in.ParquetOptions, &out.ParquetOptions
		*out = make([]ParquetOptionsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ProjectionFields != nil {
		in, out := &in.ProjectionFields, &out.ProjectionFields
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Quote != nil {
		in, out := &in.Quote, &out.Quote
		*out = new(string)
		**out = **in
	}
	if in.SchemaUpdateOptions != nil {
		in, out := &in.SchemaUpdateOptions, &out.SchemaUpdateOptions
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SkipLeadingRows != nil {
		in, out := &in.SkipLeadingRows, &out.SkipLeadingRows
		*out = new(float64)
		**out = **in
	}
	if in.SourceFormat != nil {
		in, out := &in.SourceFormat, &out.SourceFormat
		*out = new(string)
		**out = **in
	}
	if in.SourceUris != nil {
		in, out := &in.SourceUris, &out.SourceUris
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.TimePartitioning != nil {
		in, out := &in.TimePartitioning, &out.TimePartitioning
		*out = make([]TimePartitioningObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.WriteDisposition != nil {
		in, out := &in.WriteDisposition, &out.WriteDisposition
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoadObservation.
func (in *LoadObservation) DeepCopy() *LoadObservation {
	if in == nil {
		return nil
	}
	out := new(LoadObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoadParameters) DeepCopyInto(out *LoadParameters) {
	*out = *in
	if in.AllowJaggedRows != nil {
		in, out := &in.AllowJaggedRows, &out.AllowJaggedRows
		*out = new(bool)
		**out = **in
	}
	if in.AllowQuotedNewlines != nil {
		in, out := &in.AllowQuotedNewlines, &out.AllowQuotedNewlines
		*out = new(bool)
		**out = **in
	}
	if in.Autodetect != nil {
		in, out := &in.Autodetect, &out.Autodetect
		*out = new(bool)
		**out = **in
	}
	if in.CreateDisposition != nil {
		in, out := &in.CreateDisposition, &out.CreateDisposition
		*out = new(string)
		**out = **in
	}
	if in.DestinationEncryptionConfiguration != nil {
		in, out := &in.DestinationEncryptionConfiguration, &out.DestinationEncryptionConfiguration
		*out = make([]LoadDestinationEncryptionConfigurationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DestinationTable != nil {
		in, out := &in.DestinationTable, &out.DestinationTable
		*out = make([]LoadDestinationTableParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Encoding != nil {
		in, out := &in.Encoding, &out.Encoding
		*out = new(string)
		**out = **in
	}
	if in.FieldDelimiter != nil {
		in, out := &in.FieldDelimiter, &out.FieldDelimiter
		*out = new(string)
		**out = **in
	}
	if in.IgnoreUnknownValues != nil {
		in, out := &in.IgnoreUnknownValues, &out.IgnoreUnknownValues
		*out = new(bool)
		**out = **in
	}
	if in.JSONExtension != nil {
		in, out := &in.JSONExtension, &out.JSONExtension
		*out = new(string)
		**out = **in
	}
	if in.MaxBadRecords != nil {
		in, out := &in.MaxBadRecords, &out.MaxBadRecords
		*out = new(float64)
		**out = **in
	}
	if in.NullMarker != nil {
		in, out := &in.NullMarker, &out.NullMarker
		*out = new(string)
		**out = **in
	}
	if in.ParquetOptions != nil {
		in, out := &in.ParquetOptions, &out.ParquetOptions
		*out = make([]ParquetOptionsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ProjectionFields != nil {
		in, out := &in.ProjectionFields, &out.ProjectionFields
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Quote != nil {
		in, out := &in.Quote, &out.Quote
		*out = new(string)
		**out = **in
	}
	if in.SchemaUpdateOptions != nil {
		in, out := &in.SchemaUpdateOptions, &out.SchemaUpdateOptions
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SkipLeadingRows != nil {
		in, out := &in.SkipLeadingRows, &out.SkipLeadingRows
		*out = new(float64)
		**out = **in
	}
	if in.SourceFormat != nil {
		in, out := &in.SourceFormat, &out.SourceFormat
		*out = new(string)
		**out = **in
	}
	if in.SourceUris != nil {
		in, out := &in.SourceUris, &out.SourceUris
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.TimePartitioning != nil {
		in, out := &in.TimePartitioning, &out.TimePartitioning
		*out = make([]TimePartitioningParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.WriteDisposition != nil {
		in, out := &in.WriteDisposition, &out.WriteDisposition
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoadParameters.
func (in *LoadParameters) DeepCopy() *LoadParameters {
	if in == nil {
		return nil
	}
	out := new(LoadParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MaterializedViewInitParameters) DeepCopyInto(out *MaterializedViewInitParameters) {
	*out = *in
	if in.AllowNonIncrementalDefinition != nil {
		in, out := &in.AllowNonIncrementalDefinition, &out.AllowNonIncrementalDefinition
		*out = new(bool)
		**out = **in
	}
	if in.EnableRefresh != nil {
		in, out := &in.EnableRefresh, &out.EnableRefresh
		*out = new(bool)
		**out = **in
	}
	if in.Query != nil {
		in, out := &in.Query, &out.Query
		*out = new(string)
		**out = **in
	}
	if in.RefreshIntervalMs != nil {
		in, out := &in.RefreshIntervalMs, &out.RefreshIntervalMs
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MaterializedViewInitParameters.
func (in *MaterializedViewInitParameters) DeepCopy() *MaterializedViewInitParameters {
	if in == nil {
		return nil
	}
	out := new(MaterializedViewInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MaterializedViewObservation) DeepCopyInto(out *MaterializedViewObservation) {
	*out = *in
	if in.AllowNonIncrementalDefinition != nil {
		in, out := &in.AllowNonIncrementalDefinition, &out.AllowNonIncrementalDefinition
		*out = new(bool)
		**out = **in
	}
	if in.EnableRefresh != nil {
		in, out := &in.EnableRefresh, &out.EnableRefresh
		*out = new(bool)
		**out = **in
	}
	if in.Query != nil {
		in, out := &in.Query, &out.Query
		*out = new(string)
		**out = **in
	}
	if in.RefreshIntervalMs != nil {
		in, out := &in.RefreshIntervalMs, &out.RefreshIntervalMs
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MaterializedViewObservation.
func (in *MaterializedViewObservation) DeepCopy() *MaterializedViewObservation {
	if in == nil {
		return nil
	}
	out := new(MaterializedViewObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MaterializedViewParameters) DeepCopyInto(out *MaterializedViewParameters) {
	*out = *in
	if in.AllowNonIncrementalDefinition != nil {
		in, out := &in.AllowNonIncrementalDefinition, &out.AllowNonIncrementalDefinition
		*out = new(bool)
		**out = **in
	}
	if in.EnableRefresh != nil {
		in, out := &in.EnableRefresh, &out.EnableRefresh
		*out = new(bool)
		**out = **in
	}
	if in.Query != nil {
		in, out := &in.Query, &out.Query
		*out = new(string)
		**out = **in
	}
	if in.RefreshIntervalMs != nil {
		in, out := &in.RefreshIntervalMs, &out.RefreshIntervalMs
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MaterializedViewParameters.
func (in *MaterializedViewParameters) DeepCopy() *MaterializedViewParameters {
	if in == nil {
		return nil
	}
	out := new(MaterializedViewParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MetastoreServiceConfigInitParameters) DeepCopyInto(out *MetastoreServiceConfigInitParameters) {
	*out = *in
	if in.MetastoreService != nil {
		in, out := &in.MetastoreService, &out.MetastoreService
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MetastoreServiceConfigInitParameters.
func (in *MetastoreServiceConfigInitParameters) DeepCopy() *MetastoreServiceConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(MetastoreServiceConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MetastoreServiceConfigObservation) DeepCopyInto(out *MetastoreServiceConfigObservation) {
	*out = *in
	if in.MetastoreService != nil {
		in, out := &in.MetastoreService, &out.MetastoreService
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MetastoreServiceConfigObservation.
func (in *MetastoreServiceConfigObservation) DeepCopy() *MetastoreServiceConfigObservation {
	if in == nil {
		return nil
	}
	out := new(MetastoreServiceConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MetastoreServiceConfigParameters) DeepCopyInto(out *MetastoreServiceConfigParameters) {
	*out = *in
	if in.MetastoreService != nil {
		in, out := &in.MetastoreService, &out.MetastoreService
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MetastoreServiceConfigParameters.
func (in *MetastoreServiceConfigParameters) DeepCopy() *MetastoreServiceConfigParameters {
	if in == nil {
		return nil
	}
	out := new(MetastoreServiceConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ParquetOptionsInitParameters) DeepCopyInto(out *ParquetOptionsInitParameters) {
	*out = *in
	if in.EnableListInference != nil {
		in, out := &in.EnableListInference, &out.EnableListInference
		*out = new(bool)
		**out = **in
	}
	if in.EnumAsString != nil {
		in, out := &in.EnumAsString, &out.EnumAsString
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ParquetOptionsInitParameters.
func (in *ParquetOptionsInitParameters) DeepCopy() *ParquetOptionsInitParameters {
	if in == nil {
		return nil
	}
	out := new(ParquetOptionsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ParquetOptionsObservation) DeepCopyInto(out *ParquetOptionsObservation) {
	*out = *in
	if in.EnableListInference != nil {
		in, out := &in.EnableListInference, &out.EnableListInference
		*out = new(bool)
		**out = **in
	}
	if in.EnumAsString != nil {
		in, out := &in.EnumAsString, &out.EnumAsString
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ParquetOptionsObservation.
func (in *ParquetOptionsObservation) DeepCopy() *ParquetOptionsObservation {
	if in == nil {
		return nil
	}
	out := new(ParquetOptionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ParquetOptionsParameters) DeepCopyInto(out *ParquetOptionsParameters) {
	*out = *in
	if in.EnableListInference != nil {
		in, out := &in.EnableListInference, &out.EnableListInference
		*out = new(bool)
		**out = **in
	}
	if in.EnumAsString != nil {
		in, out := &in.EnumAsString, &out.EnumAsString
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ParquetOptionsParameters.
func (in *ParquetOptionsParameters) DeepCopy() *ParquetOptionsParameters {
	if in == nil {
		return nil
	}
	out := new(ParquetOptionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrimaryKeyInitParameters) DeepCopyInto(out *PrimaryKeyInitParameters) {
	*out = *in
	if in.Columns != nil {
		in, out := &in.Columns, &out.Columns
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrimaryKeyInitParameters.
func (in *PrimaryKeyInitParameters) DeepCopy() *PrimaryKeyInitParameters {
	if in == nil {
		return nil
	}
	out := new(PrimaryKeyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrimaryKeyObservation) DeepCopyInto(out *PrimaryKeyObservation) {
	*out = *in
	if in.Columns != nil {
		in, out := &in.Columns, &out.Columns
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrimaryKeyObservation.
func (in *PrimaryKeyObservation) DeepCopy() *PrimaryKeyObservation {
	if in == nil {
		return nil
	}
	out := new(PrimaryKeyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrimaryKeyParameters) DeepCopyInto(out *PrimaryKeyParameters) {
	*out = *in
	if in.Columns != nil {
		in, out := &in.Columns, &out.Columns
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrimaryKeyParameters.
func (in *PrimaryKeyParameters) DeepCopy() *PrimaryKeyParameters {
	if in == nil {
		return nil
	}
	out := new(PrimaryKeyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PublisherInitParameters) DeepCopyInto(out *PublisherInitParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PrimaryContact != nil {
		in, out := &in.PrimaryContact, &out.PrimaryContact
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PublisherInitParameters.
func (in *PublisherInitParameters) DeepCopy() *PublisherInitParameters {
	if in == nil {
		return nil
	}
	out := new(PublisherInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PublisherObservation) DeepCopyInto(out *PublisherObservation) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PrimaryContact != nil {
		in, out := &in.PrimaryContact, &out.PrimaryContact
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PublisherObservation.
func (in *PublisherObservation) DeepCopy() *PublisherObservation {
	if in == nil {
		return nil
	}
	out := new(PublisherObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PublisherParameters) DeepCopyInto(out *PublisherParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PrimaryContact != nil {
		in, out := &in.PrimaryContact, &out.PrimaryContact
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PublisherParameters.
func (in *PublisherParameters) DeepCopy() *PublisherParameters {
	if in == nil {
		return nil
	}
	out := new(PublisherParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *QueryDestinationEncryptionConfigurationInitParameters) DeepCopyInto(out *QueryDestinationEncryptionConfigurationInitParameters) {
	*out = *in
	if in.KMSKeyName != nil {
		in, out := &in.KMSKeyName, &out.KMSKeyName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new QueryDestinationEncryptionConfigurationInitParameters.
func (in *QueryDestinationEncryptionConfigurationInitParameters) DeepCopy() *QueryDestinationEncryptionConfigurationInitParameters {
	if in == nil {
		return nil
	}
	out := new(QueryDestinationEncryptionConfigurationInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *QueryDestinationEncryptionConfigurationObservation) DeepCopyInto(out *QueryDestinationEncryptionConfigurationObservation) {
	*out = *in
	if in.KMSKeyName != nil {
		in, out := &in.KMSKeyName, &out.KMSKeyName
		*out = new(string)
		**out = **in
	}
	if in.KMSKeyVersion != nil {
		in, out := &in.KMSKeyVersion, &out.KMSKeyVersion
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new QueryDestinationEncryptionConfigurationObservation.
func (in *QueryDestinationEncryptionConfigurationObservation) DeepCopy() *QueryDestinationEncryptionConfigurationObservation {
	if in == nil {
		return nil
	}
	out := new(QueryDestinationEncryptionConfigurationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *QueryDestinationEncryptionConfigurationParameters) DeepCopyInto(out *QueryDestinationEncryptionConfigurationParameters) {
	*out = *in
	if in.KMSKeyName != nil {
		in, out := &in.KMSKeyName, &out.KMSKeyName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new QueryDestinationEncryptionConfigurationParameters.
func (in *QueryDestinationEncryptionConfigurationParameters) DeepCopy() *QueryDestinationEncryptionConfigurationParameters {
	if in == nil {
		return nil
	}
	out := new(QueryDestinationEncryptionConfigurationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *QueryDestinationTableInitParameters) DeepCopyInto(out *QueryDestinationTableInitParameters) {
	*out = *in
	if in.DatasetID != nil {
		in, out := &in.DatasetID, &out.DatasetID
		*out = new(string)
		**out = **in
	}
	if in.DatasetIDRef != nil {
		in, out := &in.DatasetIDRef, &out.DatasetIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.DatasetIDSelector != nil {
		in, out := &in.DatasetIDSelector, &out.DatasetIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.ProjectID != nil {
		in, out := &in.ProjectID, &out.ProjectID
		*out = new(string)
		**out = **in
	}
	if in.TableID != nil {
		in, out := &in.TableID, &out.TableID
		*out = new(string)
		**out = **in
	}
	if in.TableIDRef != nil {
		in, out := &in.TableIDRef, &out.TableIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.TableIDSelector != nil {
		in, out := &in.TableIDSelector, &out.TableIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new QueryDestinationTableInitParameters.
func (in *QueryDestinationTableInitParameters) DeepCopy() *QueryDestinationTableInitParameters {
	if in == nil {
		return nil
	}
	out := new(QueryDestinationTableInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *QueryDestinationTableObservation) DeepCopyInto(out *QueryDestinationTableObservation) {
	*out = *in
	if in.DatasetID != nil {
		in, out := &in.DatasetID, &out.DatasetID
		*out = new(string)
		**out = **in
	}
	if in.ProjectID != nil {
		in, out := &in.ProjectID, &out.ProjectID
		*out = new(string)
		**out = **in
	}
	if in.TableID != nil {
		in, out := &in.TableID, &out.TableID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new QueryDestinationTableObservation.
func (in *QueryDestinationTableObservation) DeepCopy() *QueryDestinationTableObservation {
	if in == nil {
		return nil
	}
	out := new(QueryDestinationTableObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *QueryDestinationTableParameters) DeepCopyInto(out *QueryDestinationTableParameters) {
	*out = *in
	if in.DatasetID != nil {
		in, out := &in.DatasetID, &out.DatasetID
		*out = new(string)
		**out = **in
	}
	if in.DatasetIDRef != nil {
		in, out := &in.DatasetIDRef, &out.DatasetIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.DatasetIDSelector != nil {
		in, out := &in.DatasetIDSelector, &out.DatasetIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.ProjectID != nil {
		in, out := &in.ProjectID, &out.ProjectID
		*out = new(string)
		**out = **in
	}
	if in.TableID != nil {
		in, out := &in.TableID, &out.TableID
		*out = new(string)
		**out = **in
	}
	if in.TableIDRef != nil {
		in, out := &in.TableIDRef, &out.TableIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.TableIDSelector != nil {
		in, out := &in.TableIDSelector, &out.TableIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new QueryDestinationTableParameters.
func (in *QueryDestinationTableParameters) DeepCopy() *QueryDestinationTableParameters {
	if in == nil {
		return nil
	}
	out := new(QueryDestinationTableParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *QueryInitParameters) DeepCopyInto(out *QueryInitParameters) {
	*out = *in
	if in.AllowLargeResults != nil {
		in, out := &in.AllowLargeResults, &out.AllowLargeResults
		*out = new(bool)
		**out = **in
	}
	if in.CreateDisposition != nil {
		in, out := &in.CreateDisposition, &out.CreateDisposition
		*out = new(string)
		**out = **in
	}
	if in.DefaultDataset != nil {
		in, out := &in.DefaultDataset, &out.DefaultDataset
		*out = make([]DefaultDatasetInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DestinationEncryptionConfiguration != nil {
		in, out := &in.DestinationEncryptionConfiguration, &out.DestinationEncryptionConfiguration
		*out = make([]QueryDestinationEncryptionConfigurationInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DestinationTable != nil {
		in, out := &in.DestinationTable, &out.DestinationTable
		*out = make([]QueryDestinationTableInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.FlattenResults != nil {
		in, out := &in.FlattenResults, &out.FlattenResults
		*out = new(bool)
		**out = **in
	}
	if in.MaximumBillingTier != nil {
		in, out := &in.MaximumBillingTier, &out.MaximumBillingTier
		*out = new(float64)
		**out = **in
	}
	if in.MaximumBytesBilled != nil {
		in, out := &in.MaximumBytesBilled, &out.MaximumBytesBilled
		*out = new(string)
		**out = **in
	}
	if in.ParameterMode != nil {
		in, out := &in.ParameterMode, &out.ParameterMode
		*out = new(string)
		**out = **in
	}
	if in.Priority != nil {
		in, out := &in.Priority, &out.Priority
		*out = new(string)
		**out = **in
	}
	if in.Query != nil {
		in, out := &in.Query, &out.Query
		*out = new(string)
		**out = **in
	}
	if in.SchemaUpdateOptions != nil {
		in, out := &in.SchemaUpdateOptions, &out.SchemaUpdateOptions
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ScriptOptions != nil {
		in, out := &in.ScriptOptions, &out.ScriptOptions
		*out = make([]ScriptOptionsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.UseLegacySQL != nil {
		in, out := &in.UseLegacySQL, &out.UseLegacySQL
		*out = new(bool)
		**out = **in
	}
	if in.UseQueryCache != nil {
		in, out := &in.UseQueryCache, &out.UseQueryCache
		*out = new(bool)
		**out = **in
	}
	if in.UserDefinedFunctionResources != nil {
		in, out := &in.UserDefinedFunctionResources, &out.UserDefinedFunctionResources
		*out = make([]UserDefinedFunctionResourcesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.WriteDisposition != nil {
		in, out := &in.WriteDisposition, &out.WriteDisposition
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new QueryInitParameters.
func (in *QueryInitParameters) DeepCopy() *QueryInitParameters {
	if in == nil {
		return nil
	}
	out := new(QueryInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *QueryObservation) DeepCopyInto(out *QueryObservation) {
	*out = *in
	if in.AllowLargeResults != nil {
		in, out := &in.AllowLargeResults, &out.AllowLargeResults
		*out = new(bool)
		**out = **in
	}
	if in.CreateDisposition != nil {
		in, out := &in.CreateDisposition, &out.CreateDisposition
		*out = new(string)
		**out = **in
	}
	if in.DefaultDataset != nil {
		in, out := &in.DefaultDataset, &out.DefaultDataset
		*out = make([]DefaultDatasetObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DestinationEncryptionConfiguration != nil {
		in, out := &in.DestinationEncryptionConfiguration, &out.DestinationEncryptionConfiguration
		*out = make([]QueryDestinationEncryptionConfigurationObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DestinationTable != nil {
		in, out := &in.DestinationTable, &out.DestinationTable
		*out = make([]QueryDestinationTableObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.FlattenResults != nil {
		in, out := &in.FlattenResults, &out.FlattenResults
		*out = new(bool)
		**out = **in
	}
	if in.MaximumBillingTier != nil {
		in, out := &in.MaximumBillingTier, &out.MaximumBillingTier
		*out = new(float64)
		**out = **in
	}
	if in.MaximumBytesBilled != nil {
		in, out := &in.MaximumBytesBilled, &out.MaximumBytesBilled
		*out = new(string)
		**out = **in
	}
	if in.ParameterMode != nil {
		in, out := &in.ParameterMode, &out.ParameterMode
		*out = new(string)
		**out = **in
	}
	if in.Priority != nil {
		in, out := &in.Priority, &out.Priority
		*out = new(string)
		**out = **in
	}
	if in.Query != nil {
		in, out := &in.Query, &out.Query
		*out = new(string)
		**out = **in
	}
	if in.SchemaUpdateOptions != nil {
		in, out := &in.SchemaUpdateOptions, &out.SchemaUpdateOptions
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ScriptOptions != nil {
		in, out := &in.ScriptOptions, &out.ScriptOptions
		*out = make([]ScriptOptionsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.UseLegacySQL != nil {
		in, out := &in.UseLegacySQL, &out.UseLegacySQL
		*out = new(bool)
		**out = **in
	}
	if in.UseQueryCache != nil {
		in, out := &in.UseQueryCache, &out.UseQueryCache
		*out = new(bool)
		**out = **in
	}
	if in.UserDefinedFunctionResources != nil {
		in, out := &in.UserDefinedFunctionResources, &out.UserDefinedFunctionResources
		*out = make([]UserDefinedFunctionResourcesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.WriteDisposition != nil {
		in, out := &in.WriteDisposition, &out.WriteDisposition
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new QueryObservation.
func (in *QueryObservation) DeepCopy() *QueryObservation {
	if in == nil {
		return nil
	}
	out := new(QueryObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *QueryParameters) DeepCopyInto(out *QueryParameters) {
	*out = *in
	if in.AllowLargeResults != nil {
		in, out := &in.AllowLargeResults, &out.AllowLargeResults
		*out = new(bool)
		**out = **in
	}
	if in.CreateDisposition != nil {
		in, out := &in.CreateDisposition, &out.CreateDisposition
		*out = new(string)
		**out = **in
	}
	if in.DefaultDataset != nil {
		in, out := &in.DefaultDataset, &out.DefaultDataset
		*out = make([]DefaultDatasetParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DestinationEncryptionConfiguration != nil {
		in, out := &in.DestinationEncryptionConfiguration, &out.DestinationEncryptionConfiguration
		*out = make([]QueryDestinationEncryptionConfigurationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DestinationTable != nil {
		in, out := &in.DestinationTable, &out.DestinationTable
		*out = make([]QueryDestinationTableParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.FlattenResults != nil {
		in, out := &in.FlattenResults, &out.FlattenResults
		*out = new(bool)
		**out = **in
	}
	if in.MaximumBillingTier != nil {
		in, out := &in.MaximumBillingTier, &out.MaximumBillingTier
		*out = new(float64)
		**out = **in
	}
	if in.MaximumBytesBilled != nil {
		in, out := &in.MaximumBytesBilled, &out.MaximumBytesBilled
		*out = new(string)
		**out = **in
	}
	if in.ParameterMode != nil {
		in, out := &in.ParameterMode, &out.ParameterMode
		*out = new(string)
		**out = **in
	}
	if in.Priority != nil {
		in, out := &in.Priority, &out.Priority
		*out = new(string)
		**out = **in
	}
	if in.Query != nil {
		in, out := &in.Query, &out.Query
		*out = new(string)
		**out = **in
	}
	if in.SchemaUpdateOptions != nil {
		in, out := &in.SchemaUpdateOptions, &out.SchemaUpdateOptions
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ScriptOptions != nil {
		in, out := &in.ScriptOptions, &out.ScriptOptions
		*out = make([]ScriptOptionsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.UseLegacySQL != nil {
		in, out := &in.UseLegacySQL, &out.UseLegacySQL
		*out = new(bool)
		**out = **in
	}
	if in.UseQueryCache != nil {
		in, out := &in.UseQueryCache, &out.UseQueryCache
		*out = new(bool)
		**out = **in
	}
	if in.UserDefinedFunctionResources != nil {
		in, out := &in.UserDefinedFunctionResources, &out.UserDefinedFunctionResources
		*out = make([]UserDefinedFunctionResourcesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.WriteDisposition != nil {
		in, out := &in.WriteDisposition, &out.WriteDisposition
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new QueryParameters.
func (in *QueryParameters) DeepCopy() *QueryParameters {
	if in == nil {
		return nil
	}
	out := new(QueryParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RangeInitParameters) DeepCopyInto(out *RangeInitParameters) {
	*out = *in
	if in.End != nil {
		in, out := &in.End, &out.End
		*out = new(float64)
		**out = **in
	}
	if in.Interval != nil {
		in, out := &in.Interval, &out.Interval
		*out = new(float64)
		**out = **in
	}
	if in.Start != nil {
		in, out := &in.Start, &out.Start
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RangeInitParameters.
func (in *RangeInitParameters) DeepCopy() *RangeInitParameters {
	if in == nil {
		return nil
	}
	out := new(RangeInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RangeObservation) DeepCopyInto(out *RangeObservation) {
	*out = *in
	if in.End != nil {
		in, out := &in.End, &out.End
		*out = new(float64)
		**out = **in
	}
	if in.Interval != nil {
		in, out := &in.Interval, &out.Interval
		*out = new(float64)
		**out = **in
	}
	if in.Start != nil {
		in, out := &in.Start, &out.Start
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RangeObservation.
func (in *RangeObservation) DeepCopy() *RangeObservation {
	if in == nil {
		return nil
	}
	out := new(RangeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RangeParameters) DeepCopyInto(out *RangeParameters) {
	*out = *in
	if in.End != nil {
		in, out := &in.End, &out.End
		*out = new(float64)
		**out = **in
	}
	if in.Interval != nil {
		in, out := &in.Interval, &out.Interval
		*out = new(float64)
		**out = **in
	}
	if in.Start != nil {
		in, out := &in.Start, &out.Start
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RangeParameters.
func (in *RangeParameters) DeepCopy() *RangeParameters {
	if in == nil {
		return nil
	}
	out := new(RangeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RangePartitioningInitParameters) DeepCopyInto(out *RangePartitioningInitParameters) {
	*out = *in
	if in.Field != nil {
		in, out := &in.Field, &out.Field
		*out = new(string)
		**out = **in
	}
	if in.Range != nil {
		in, out := &in.Range, &out.Range
		*out = make([]RangeInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RangePartitioningInitParameters.
func (in *RangePartitioningInitParameters) DeepCopy() *RangePartitioningInitParameters {
	if in == nil {
		return nil
	}
	out := new(RangePartitioningInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RangePartitioningObservation) DeepCopyInto(out *RangePartitioningObservation) {
	*out = *in
	if in.Field != nil {
		in, out := &in.Field, &out.Field
		*out = new(string)
		**out = **in
	}
	if in.Range != nil {
		in, out := &in.Range, &out.Range
		*out = make([]RangeObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RangePartitioningObservation.
func (in *RangePartitioningObservation) DeepCopy() *RangePartitioningObservation {
	if in == nil {
		return nil
	}
	out := new(RangePartitioningObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RangePartitioningParameters) DeepCopyInto(out *RangePartitioningParameters) {
	*out = *in
	if in.Field != nil {
		in, out := &in.Field, &out.Field
		*out = new(string)
		**out = **in
	}
	if in.Range != nil {
		in, out := &in.Range, &out.Range
		*out = make([]RangeParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RangePartitioningParameters.
func (in *RangePartitioningParameters) DeepCopy() *RangePartitioningParameters {
	if in == nil {
		return nil
	}
	out := new(RangePartitioningParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReferencedTableInitParameters) DeepCopyInto(out *ReferencedTableInitParameters) {
	*out = *in
	if in.ProjectID != nil {
		in, out := &in.ProjectID, &out.ProjectID
		*out = new(string)
		**out = **in
	}
	if in.TableID != nil {
		in, out := &in.TableID, &out.TableID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReferencedTableInitParameters.
func (in *ReferencedTableInitParameters) DeepCopy() *ReferencedTableInitParameters {
	if in == nil {
		return nil
	}
	out := new(ReferencedTableInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReferencedTableObservation) DeepCopyInto(out *ReferencedTableObservation) {
	*out = *in
	if in.DatasetID != nil {
		in, out := &in.DatasetID, &out.DatasetID
		*out = new(string)
		**out = **in
	}
	if in.ProjectID != nil {
		in, out := &in.ProjectID, &out.ProjectID
		*out = new(string)
		**out = **in
	}
	if in.TableID != nil {
		in, out := &in.TableID, &out.TableID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReferencedTableObservation.
func (in *ReferencedTableObservation) DeepCopy() *ReferencedTableObservation {
	if in == nil {
		return nil
	}
	out := new(ReferencedTableObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReferencedTableParameters) DeepCopyInto(out *ReferencedTableParameters) {
	*out = *in
	if in.DatasetID != nil {
		in, out := &in.DatasetID, &out.DatasetID
		*out = new(string)
		**out = **in
	}
	if in.ProjectID != nil {
		in, out := &in.ProjectID, &out.ProjectID
		*out = new(string)
		**out = **in
	}
	if in.TableID != nil {
		in, out := &in.TableID, &out.TableID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReferencedTableParameters.
func (in *ReferencedTableParameters) DeepCopy() *ReferencedTableParameters {
	if in == nil {
		return nil
	}
	out := new(ReferencedTableParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RemoteFunctionOptionsInitParameters) DeepCopyInto(out *RemoteFunctionOptionsInitParameters) {
	*out = *in
	if in.Connection != nil {
		in, out := &in.Connection, &out.Connection
		*out = new(string)
		**out = **in
	}
	if in.ConnectionRef != nil {
		in, out := &in.ConnectionRef, &out.ConnectionRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ConnectionSelector != nil {
		in, out := &in.ConnectionSelector, &out.ConnectionSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Endpoint != nil {
		in, out := &in.Endpoint, &out.Endpoint
		*out = new(string)
		**out = **in
	}
	if in.MaxBatchingRows != nil {
		in, out := &in.MaxBatchingRows, &out.MaxBatchingRows
		*out = new(string)
		**out = **in
	}
	if in.UserDefinedContext != nil {
		in, out := &in.UserDefinedContext, &out.UserDefinedContext
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RemoteFunctionOptionsInitParameters.
func (in *RemoteFunctionOptionsInitParameters) DeepCopy() *RemoteFunctionOptionsInitParameters {
	if in == nil {
		return nil
	}
	out := new(RemoteFunctionOptionsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RemoteFunctionOptionsObservation) DeepCopyInto(out *RemoteFunctionOptionsObservation) {
	*out = *in
	if in.Connection != nil {
		in, out := &in.Connection, &out.Connection
		*out = new(string)
		**out = **in
	}
	if in.Endpoint != nil {
		in, out := &in.Endpoint, &out.Endpoint
		*out = new(string)
		**out = **in
	}
	if in.MaxBatchingRows != nil {
		in, out := &in.MaxBatchingRows, &out.MaxBatchingRows
		*out = new(string)
		**out = **in
	}
	if in.UserDefinedContext != nil {
		in, out := &in.UserDefinedContext, &out.UserDefinedContext
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RemoteFunctionOptionsObservation.
func (in *RemoteFunctionOptionsObservation) DeepCopy() *RemoteFunctionOptionsObservation {
	if in == nil {
		return nil
	}
	out := new(RemoteFunctionOptionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RemoteFunctionOptionsParameters) DeepCopyInto(out *RemoteFunctionOptionsParameters) {
	*out = *in
	if in.Connection != nil {
		in, out := &in.Connection, &out.Connection
		*out = new(string)
		**out = **in
	}
	if in.ConnectionRef != nil {
		in, out := &in.ConnectionRef, &out.ConnectionRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ConnectionSelector != nil {
		in, out := &in.ConnectionSelector, &out.ConnectionSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Endpoint != nil {
		in, out := &in.Endpoint, &out.Endpoint
		*out = new(string)
		**out = **in
	}
	if in.MaxBatchingRows != nil {
		in, out := &in.MaxBatchingRows, &out.MaxBatchingRows
		*out = new(string)
		**out = **in
	}
	if in.UserDefinedContext != nil {
		in, out := &in.UserDefinedContext, &out.UserDefinedContext
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RemoteFunctionOptionsParameters.
func (in *RemoteFunctionOptionsParameters) DeepCopy() *RemoteFunctionOptionsParameters {
	if in == nil {
		return nil
	}
	out := new(RemoteFunctionOptionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Reservation) DeepCopyInto(out *Reservation) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Reservation.
func (in *Reservation) DeepCopy() *Reservation {
	if in == nil {
		return nil
	}
	out := new(Reservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Reservation) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReservationAssignment) DeepCopyInto(out *ReservationAssignment) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReservationAssignment.
func (in *ReservationAssignment) DeepCopy() *ReservationAssignment {
	if in == nil {
		return nil
	}
	out := new(ReservationAssignment)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ReservationAssignment) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReservationAssignmentInitParameters) DeepCopyInto(out *ReservationAssignmentInitParameters) {
	*out = *in
	if in.Assignee != nil {
		in, out := &in.Assignee, &out.Assignee
		*out = new(string)
		**out = **in
	}
	if in.JobType != nil {
		in, out := &in.JobType, &out.JobType
		*out = new(string)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReservationAssignmentInitParameters.
func (in *ReservationAssignmentInitParameters) DeepCopy() *ReservationAssignmentInitParameters {
	if in == nil {
		return nil
	}
	out := new(ReservationAssignmentInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReservationAssignmentList) DeepCopyInto(out *ReservationAssignmentList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ReservationAssignment, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReservationAssignmentList.
func (in *ReservationAssignmentList) DeepCopy() *ReservationAssignmentList {
	if in == nil {
		return nil
	}
	out := new(ReservationAssignmentList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ReservationAssignmentList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReservationAssignmentObservation) DeepCopyInto(out *ReservationAssignmentObservation) {
	*out = *in
	if in.Assignee != nil {
		in, out := &in.Assignee, &out.Assignee
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.JobType != nil {
		in, out := &in.JobType, &out.JobType
		*out = new(string)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Reservation != nil {
		in, out := &in.Reservation, &out.Reservation
		*out = new(string)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReservationAssignmentObservation.
func (in *ReservationAssignmentObservation) DeepCopy() *ReservationAssignmentObservation {
	if in == nil {
		return nil
	}
	out := new(ReservationAssignmentObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReservationAssignmentParameters) DeepCopyInto(out *ReservationAssignmentParameters) {
	*out = *in
	if in.Assignee != nil {
		in, out := &in.Assignee, &out.Assignee
		*out = new(string)
		**out = **in
	}
	if in.JobType != nil {
		in, out := &in.JobType, &out.JobType
		*out = new(string)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Reservation != nil {
		in, out := &in.Reservation, &out.Reservation
		*out = new(string)
		**out = **in
	}
	if in.ReservationRef != nil {
		in, out := &in.ReservationRef, &out.ReservationRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ReservationSelector != nil {
		in, out := &in.ReservationSelector, &out.ReservationSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReservationAssignmentParameters.
func (in *ReservationAssignmentParameters) DeepCopy() *ReservationAssignmentParameters {
	if in == nil {
		return nil
	}
	out := new(ReservationAssignmentParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReservationAssignmentSpec) DeepCopyInto(out *ReservationAssignmentSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReservationAssignmentSpec.
func (in *ReservationAssignmentSpec) DeepCopy() *ReservationAssignmentSpec {
	if in == nil {
		return nil
	}
	out := new(ReservationAssignmentSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReservationAssignmentStatus) DeepCopyInto(out *ReservationAssignmentStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReservationAssignmentStatus.
func (in *ReservationAssignmentStatus) DeepCopy() *ReservationAssignmentStatus {
	if in == nil {
		return nil
	}
	out := new(ReservationAssignmentStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReservationInitParameters) DeepCopyInto(out *ReservationInitParameters) {
	*out = *in
	if in.Autoscale != nil {
		in, out := &in.Autoscale, &out.Autoscale
		*out = make([]AutoscaleInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Concurrency != nil {
		in, out := &in.Concurrency, &out.Concurrency
		*out = new(float64)
		**out = **in
	}
	if in.Edition != nil {
		in, out := &in.Edition, &out.Edition
		*out = new(string)
		**out = **in
	}
	if in.IgnoreIdleSlots != nil {
		in, out := &in.IgnoreIdleSlots, &out.IgnoreIdleSlots
		*out = new(bool)
		**out = **in
	}
	if in.MultiRegionAuxiliary != nil {
		in, out := &in.MultiRegionAuxiliary, &out.MultiRegionAuxiliary
		*out = new(bool)
		**out = **in
	}
	if in.SlotCapacity != nil {
		in, out := &in.SlotCapacity, &out.SlotCapacity
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReservationInitParameters.
func (in *ReservationInitParameters) DeepCopy() *ReservationInitParameters {
	if in == nil {
		return nil
	}
	out := new(ReservationInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReservationList) DeepCopyInto(out *ReservationList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Reservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReservationList.
func (in *ReservationList) DeepCopy() *ReservationList {
	if in == nil {
		return nil
	}
	out := new(ReservationList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ReservationList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReservationObservation) DeepCopyInto(out *ReservationObservation) {
	*out = *in
	if in.Autoscale != nil {
		in, out := &in.Autoscale, &out.Autoscale
		*out = make([]AutoscaleObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Concurrency != nil {
		in, out := &in.Concurrency, &out.Concurrency
		*out = new(float64)
		**out = **in
	}
	if in.Edition != nil {
		in, out := &in.Edition, &out.Edition
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IgnoreIdleSlots != nil {
		in, out := &in.IgnoreIdleSlots, &out.IgnoreIdleSlots
		*out = new(bool)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.MultiRegionAuxiliary != nil {
		in, out := &in.MultiRegionAuxiliary, &out.MultiRegionAuxiliary
		*out = new(bool)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.SlotCapacity != nil {
		in, out := &in.SlotCapacity, &out.SlotCapacity
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReservationObservation.
func (in *ReservationObservation) DeepCopy() *ReservationObservation {
	if in == nil {
		return nil
	}
	out := new(ReservationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReservationParameters) DeepCopyInto(out *ReservationParameters) {
	*out = *in
	if in.Autoscale != nil {
		in, out := &in.Autoscale, &out.Autoscale
		*out = make([]AutoscaleParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Concurrency != nil {
		in, out := &in.Concurrency, &out.Concurrency
		*out = new(float64)
		**out = **in
	}
	if in.Edition != nil {
		in, out := &in.Edition, &out.Edition
		*out = new(string)
		**out = **in
	}
	if in.IgnoreIdleSlots != nil {
		in, out := &in.IgnoreIdleSlots, &out.IgnoreIdleSlots
		*out = new(bool)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.MultiRegionAuxiliary != nil {
		in, out := &in.MultiRegionAuxiliary, &out.MultiRegionAuxiliary
		*out = new(bool)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.SlotCapacity != nil {
		in, out := &in.SlotCapacity, &out.SlotCapacity
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReservationParameters.
func (in *ReservationParameters) DeepCopy() *ReservationParameters {
	if in == nil {
		return nil
	}
	out := new(ReservationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReservationSpec) DeepCopyInto(out *ReservationSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReservationSpec.
func (in *ReservationSpec) DeepCopy() *ReservationSpec {
	if in == nil {
		return nil
	}
	out := new(ReservationSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReservationStatus) DeepCopyInto(out *ReservationStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReservationStatus.
func (in *ReservationStatus) DeepCopy() *ReservationStatus {
	if in == nil {
		return nil
	}
	out := new(ReservationStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RestrictedExportConfigInitParameters) DeepCopyInto(out *RestrictedExportConfigInitParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.RestrictQueryResult != nil {
		in, out := &in.RestrictQueryResult, &out.RestrictQueryResult
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RestrictedExportConfigInitParameters.
func (in *RestrictedExportConfigInitParameters) DeepCopy() *RestrictedExportConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(RestrictedExportConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RestrictedExportConfigObservation) DeepCopyInto(out *RestrictedExportConfigObservation) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.RestrictQueryResult != nil {
		in, out := &in.RestrictQueryResult, &out.RestrictQueryResult
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RestrictedExportConfigObservation.
func (in *RestrictedExportConfigObservation) DeepCopy() *RestrictedExportConfigObservation {
	if in == nil {
		return nil
	}
	out := new(RestrictedExportConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RestrictedExportConfigParameters) DeepCopyInto(out *RestrictedExportConfigParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.RestrictQueryResult != nil {
		in, out := &in.RestrictQueryResult, &out.RestrictQueryResult
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RestrictedExportConfigParameters.
func (in *RestrictedExportConfigParameters) DeepCopy() *RestrictedExportConfigParameters {
	if in == nil {
		return nil
	}
	out := new(RestrictedExportConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Routine) DeepCopyInto(out *Routine) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Routine.
func (in *Routine) DeepCopy() *Routine {
	if in == nil {
		return nil
	}
	out := new(Routine)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Routine) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RoutineInitParameters) DeepCopyInto(out *RoutineInitParameters) {
	*out = *in
	if in.DatasetID != nil {
		in, out := &in.DatasetID, &out.DatasetID
		*out = new(string)
		**out = **in
	}
	if in.DatasetIDRef != nil {
		in, out := &in.DatasetIDRef, &out.DatasetIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.DatasetIDSelector != nil {
		in, out := &in.DatasetIDSelector, &out.DatasetIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.ProjectID != nil {
		in, out := &in.ProjectID, &out.ProjectID
		*out = new(string)
		**out = **in
	}
	if in.ProjectIDRef != nil {
		in, out := &in.ProjectIDRef, &out.ProjectIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ProjectIDSelector != nil {
		in, out := &in.ProjectIDSelector, &out.ProjectIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.RoutineID != nil {
		in, out := &in.RoutineID, &out.RoutineID
		*out = new(string)
		**out = **in
	}
	if in.RoutineIDRef != nil {
		in, out := &in.RoutineIDRef, &out.RoutineIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.RoutineIDSelector != nil {
		in, out := &in.RoutineIDSelector, &out.RoutineIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RoutineInitParameters.
func (in *RoutineInitParameters) DeepCopy() *RoutineInitParameters {
	if in == nil {
		return nil
	}
	out := new(RoutineInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RoutineInitParameters_2) DeepCopyInto(out *RoutineInitParameters_2) {
	*out = *in
	if in.Arguments != nil {
		in, out := &in.Arguments, &out.Arguments
		*out = make([]ArgumentsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DefinitionBody != nil {
		in, out := &in.DefinitionBody, &out.DefinitionBody
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DeterminismLevel != nil {
		in, out := &in.DeterminismLevel, &out.DeterminismLevel
		*out = new(string)
		**out = **in
	}
	if in.ImportedLibraries != nil {
		in, out := &in.ImportedLibraries, &out.ImportedLibraries
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Language != nil {
		in, out := &in.Language, &out.Language
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.RemoteFunctionOptions != nil {
		in, out := &in.RemoteFunctionOptions, &out.RemoteFunctionOptions
		*out = make([]RemoteFunctionOptionsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ReturnTableType != nil {
		in, out := &in.ReturnTableType, &out.ReturnTableType
		*out = new(string)
		**out = **in
	}
	if in.ReturnType != nil {
		in, out := &in.ReturnType, &out.ReturnType
		*out = new(string)
		**out = **in
	}
	if in.RoutineType != nil {
		in, out := &in.RoutineType, &out.RoutineType
		*out = new(string)
		**out = **in
	}
	if in.SparkOptions != nil {
		in, out := &in.SparkOptions, &out.SparkOptions
		*out = make([]SparkOptionsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RoutineInitParameters_2.
func (in *RoutineInitParameters_2) DeepCopy() *RoutineInitParameters_2 {
	if in == nil {
		return nil
	}
	out := new(RoutineInitParameters_2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RoutineList) DeepCopyInto(out *RoutineList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Routine, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RoutineList.
func (in *RoutineList) DeepCopy() *RoutineList {
	if in == nil {
		return nil
	}
	out := new(RoutineList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RoutineList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RoutineObservation) DeepCopyInto(out *RoutineObservation) {
	*out = *in
	if in.DatasetID != nil {
		in, out := &in.DatasetID, &out.DatasetID
		*out = new(string)
		**out = **in
	}
	if in.ProjectID != nil {
		in, out := &in.ProjectID, &out.ProjectID
		*out = new(string)
		**out = **in
	}
	if in.RoutineID != nil {
		in, out := &in.RoutineID, &out.RoutineID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RoutineObservation.
func (in *RoutineObservation) DeepCopy() *RoutineObservation {
	if in == nil {
		return nil
	}
	out := new(RoutineObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RoutineObservation_2) DeepCopyInto(out *RoutineObservation_2) {
	*out = *in
	if in.Arguments != nil {
		in, out := &in.Arguments, &out.Arguments
		*out = make([]ArgumentsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CreationTime != nil {
		in, out := &in.CreationTime, &out.CreationTime
		*out = new(float64)
		**out = **in
	}
	if in.DatasetID != nil {
		in, out := &in.DatasetID, &out.DatasetID
		*out = new(string)
		**out = **in
	}
	if in.DefinitionBody != nil {
		in, out := &in.DefinitionBody, &out.DefinitionBody
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DeterminismLevel != nil {
		in, out := &in.DeterminismLevel, &out.DeterminismLevel
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.ImportedLibraries != nil {
		in, out := &in.ImportedLibraries, &out.ImportedLibraries
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Language != nil {
		in, out := &in.Language, &out.Language
		*out = new(string)
		**out = **in
	}
	if in.LastModifiedTime != nil {
		in, out := &in.LastModifiedTime, &out.LastModifiedTime
		*out = new(float64)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.RemoteFunctionOptions != nil {
		in, out := &in.RemoteFunctionOptions, &out.RemoteFunctionOptions
		*out = make([]RemoteFunctionOptionsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ReturnTableType != nil {
		in, out := &in.ReturnTableType, &out.ReturnTableType
		*out = new(string)
		**out = **in
	}
	if in.ReturnType != nil {
		in, out := &in.ReturnType, &out.ReturnType
		*out = new(string)
		**out = **in
	}
	if in.RoutineType != nil {
		in, out := &in.RoutineType, &out.RoutineType
		*out = new(string)
		**out = **in
	}
	if in.SparkOptions != nil {
		in, out := &in.SparkOptions, &out.SparkOptions
		*out = make([]SparkOptionsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RoutineObservation_2.
func (in *RoutineObservation_2) DeepCopy() *RoutineObservation_2 {
	if in == nil {
		return nil
	}
	out := new(RoutineObservation_2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RoutineParameters) DeepCopyInto(out *RoutineParameters) {
	*out = *in
	if in.DatasetID != nil {
		in, out := &in.DatasetID, &out.DatasetID
		*out = new(string)
		**out = **in
	}
	if in.DatasetIDRef != nil {
		in, out := &in.DatasetIDRef, &out.DatasetIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.DatasetIDSelector != nil {
		in, out := &in.DatasetIDSelector, &out.DatasetIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.ProjectID != nil {
		in, out := &in.ProjectID, &out.ProjectID
		*out = new(string)
		**out = **in
	}
	if in.ProjectIDRef != nil {
		in, out := &in.ProjectIDRef, &out.ProjectIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ProjectIDSelector != nil {
		in, out := &in.ProjectIDSelector, &out.ProjectIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.RoutineID != nil {
		in, out := &in.RoutineID, &out.RoutineID
		*out = new(string)
		**out = **in
	}
	if in.RoutineIDRef != nil {
		in, out := &in.RoutineIDRef, &out.RoutineIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.RoutineIDSelector != nil {
		in, out := &in.RoutineIDSelector, &out.RoutineIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RoutineParameters.
func (in *RoutineParameters) DeepCopy() *RoutineParameters {
	if in == nil {
		return nil
	}
	out := new(RoutineParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RoutineParameters_2) DeepCopyInto(out *RoutineParameters_2) {
	*out = *in
	if in.Arguments != nil {
		in, out := &in.Arguments, &out.Arguments
		*out = make([]ArgumentsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DatasetID != nil {
		in, out := &in.DatasetID, &out.DatasetID
		*out = new(string)
		**out = **in
	}
	if in.DatasetIDRef != nil {
		in, out := &in.DatasetIDRef, &out.DatasetIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.DatasetIDSelector != nil {
		in, out := &in.DatasetIDSelector, &out.DatasetIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.DefinitionBody != nil {
		in, out := &in.DefinitionBody, &out.DefinitionBody
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DeterminismLevel != nil {
		in, out := &in.DeterminismLevel, &out.DeterminismLevel
		*out = new(string)
		**out = **in
	}
	if in.ImportedLibraries != nil {
		in, out := &in.ImportedLibraries, &out.ImportedLibraries
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Language != nil {
		in, out := &in.Language, &out.Language
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.RemoteFunctionOptions != nil {
		in, out := &in.RemoteFunctionOptions, &out.RemoteFunctionOptions
		*out = make([]RemoteFunctionOptionsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ReturnTableType != nil {
		in, out := &in.ReturnTableType, &out.ReturnTableType
		*out = new(string)
		**out = **in
	}
	if in.ReturnType != nil {
		in, out := &in.ReturnType, &out.ReturnType
		*out = new(string)
		**out = **in
	}
	if in.RoutineType != nil {
		in, out := &in.RoutineType, &out.RoutineType
		*out = new(string)
		**out = **in
	}
	if in.SparkOptions != nil {
		in, out := &in.SparkOptions, &out.SparkOptions
		*out = make([]SparkOptionsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RoutineParameters_2.
func (in *RoutineParameters_2) DeepCopy() *RoutineParameters_2 {
	if in == nil {
		return nil
	}
	out := new(RoutineParameters_2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RoutineSpec) DeepCopyInto(out *RoutineSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RoutineSpec.
func (in *RoutineSpec) DeepCopy() *RoutineSpec {
	if in == nil {
		return nil
	}
	out := new(RoutineSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RoutineStatus) DeepCopyInto(out *RoutineStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RoutineStatus.
func (in *RoutineStatus) DeepCopy() *RoutineStatus {
	if in == nil {
		return nil
	}
	out := new(RoutineStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScheduleOptionsInitParameters) DeepCopyInto(out *ScheduleOptionsInitParameters) {
	*out = *in
	if in.DisableAutoScheduling != nil {
		in, out := &in.DisableAutoScheduling, &out.DisableAutoScheduling
		*out = new(bool)
		**out = **in
	}
	if in.EndTime != nil {
		in, out := &in.EndTime, &out.EndTime
		*out = new(string)
		**out = **in
	}
	if in.StartTime != nil {
		in, out := &in.StartTime, &out.StartTime
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScheduleOptionsInitParameters.
func (in *ScheduleOptionsInitParameters) DeepCopy() *ScheduleOptionsInitParameters {
	if in == nil {
		return nil
	}
	out := new(ScheduleOptionsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScheduleOptionsObservation) DeepCopyInto(out *ScheduleOptionsObservation) {
	*out = *in
	if in.DisableAutoScheduling != nil {
		in, out := &in.DisableAutoScheduling, &out.DisableAutoScheduling
		*out = new(bool)
		**out = **in
	}
	if in.EndTime != nil {
		in, out := &in.EndTime, &out.EndTime
		*out = new(string)
		**out = **in
	}
	if in.StartTime != nil {
		in, out := &in.StartTime, &out.StartTime
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScheduleOptionsObservation.
func (in *ScheduleOptionsObservation) DeepCopy() *ScheduleOptionsObservation {
	if in == nil {
		return nil
	}
	out := new(ScheduleOptionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScheduleOptionsParameters) DeepCopyInto(out *ScheduleOptionsParameters) {
	*out = *in
	if in.DisableAutoScheduling != nil {
		in, out := &in.DisableAutoScheduling, &out.DisableAutoScheduling
		*out = new(bool)
		**out = **in
	}
	if in.EndTime != nil {
		in, out := &in.EndTime, &out.EndTime
		*out = new(string)
		**out = **in
	}
	if in.StartTime != nil {
		in, out := &in.StartTime, &out.StartTime
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScheduleOptionsParameters.
func (in *ScheduleOptionsParameters) DeepCopy() *ScheduleOptionsParameters {
	if in == nil {
		return nil
	}
	out := new(ScheduleOptionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScriptOptionsInitParameters) DeepCopyInto(out *ScriptOptionsInitParameters) {
	*out = *in
	if in.KeyResultStatement != nil {
		in, out := &in.KeyResultStatement, &out.KeyResultStatement
		*out = new(string)
		**out = **in
	}
	if in.StatementByteBudget != nil {
		in, out := &in.StatementByteBudget, &out.StatementByteBudget
		*out = new(string)
		**out = **in
	}
	if in.StatementTimeoutMs != nil {
		in, out := &in.StatementTimeoutMs, &out.StatementTimeoutMs
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScriptOptionsInitParameters.
func (in *ScriptOptionsInitParameters) DeepCopy() *ScriptOptionsInitParameters {
	if in == nil {
		return nil
	}
	out := new(ScriptOptionsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScriptOptionsObservation) DeepCopyInto(out *ScriptOptionsObservation) {
	*out = *in
	if in.KeyResultStatement != nil {
		in, out := &in.KeyResultStatement, &out.KeyResultStatement
		*out = new(string)
		**out = **in
	}
	if in.StatementByteBudget != nil {
		in, out := &in.StatementByteBudget, &out.StatementByteBudget
		*out = new(string)
		**out = **in
	}
	if in.StatementTimeoutMs != nil {
		in, out := &in.StatementTimeoutMs, &out.StatementTimeoutMs
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScriptOptionsObservation.
func (in *ScriptOptionsObservation) DeepCopy() *ScriptOptionsObservation {
	if in == nil {
		return nil
	}
	out := new(ScriptOptionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScriptOptionsParameters) DeepCopyInto(out *ScriptOptionsParameters) {
	*out = *in
	if in.KeyResultStatement != nil {
		in, out := &in.KeyResultStatement, &out.KeyResultStatement
		*out = new(string)
		**out = **in
	}
	if in.StatementByteBudget != nil {
		in, out := &in.StatementByteBudget, &out.StatementByteBudget
		*out = new(string)
		**out = **in
	}
	if in.StatementTimeoutMs != nil {
		in, out := &in.StatementTimeoutMs, &out.StatementTimeoutMs
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScriptOptionsParameters.
func (in *ScriptOptionsParameters) DeepCopy() *ScriptOptionsParameters {
	if in == nil {
		return nil
	}
	out := new(ScriptOptionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SensitiveParamsInitParameters) DeepCopyInto(out *SensitiveParamsInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SensitiveParamsInitParameters.
func (in *SensitiveParamsInitParameters) DeepCopy() *SensitiveParamsInitParameters {
	if in == nil {
		return nil
	}
	out := new(SensitiveParamsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SensitiveParamsObservation) DeepCopyInto(out *SensitiveParamsObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SensitiveParamsObservation.
func (in *SensitiveParamsObservation) DeepCopy() *SensitiveParamsObservation {
	if in == nil {
		return nil
	}
	out := new(SensitiveParamsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SensitiveParamsParameters) DeepCopyInto(out *SensitiveParamsParameters) {
	*out = *in
	out.SecretAccessKeySecretRef = in.SecretAccessKeySecretRef
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SensitiveParamsParameters.
func (in *SensitiveParamsParameters) DeepCopy() *SensitiveParamsParameters {
	if in == nil {
		return nil
	}
	out := new(SensitiveParamsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SourceModelInitParameters) DeepCopyInto(out *SourceModelInitParameters) {
	*out = *in
	if in.DatasetID != nil {
		in, out := &in.DatasetID, &out.DatasetID
		*out = new(string)
		**out = **in
	}
	if in.ModelID != nil {
		in, out := &in.ModelID, &out.ModelID
		*out = new(string)
		**out = **in
	}
	if in.ProjectID != nil {
		in, out := &in.ProjectID, &out.ProjectID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SourceModelInitParameters.
func (in *SourceModelInitParameters) DeepCopy() *SourceModelInitParameters {
	if in == nil {
		return nil
	}
	out := new(SourceModelInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SourceModelObservation) DeepCopyInto(out *SourceModelObservation) {
	*out = *in
	if in.DatasetID != nil {
		in, out := &in.DatasetID, &out.DatasetID
		*out = new(string)
		**out = **in
	}
	if in.ModelID != nil {
		in, out := &in.ModelID, &out.ModelID
		*out = new(string)
		**out = **in
	}
	if in.ProjectID != nil {
		in, out := &in.ProjectID, &out.ProjectID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SourceModelObservation.
func (in *SourceModelObservation) DeepCopy() *SourceModelObservation {
	if in == nil {
		return nil
	}
	out := new(SourceModelObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SourceModelParameters) DeepCopyInto(out *SourceModelParameters) {
	*out = *in
	if in.DatasetID != nil {
		in, out := &in.DatasetID, &out.DatasetID
		*out = new(string)
		**out = **in
	}
	if in.ModelID != nil {
		in, out := &in.ModelID, &out.ModelID
		*out = new(string)
		**out = **in
	}
	if in.ProjectID != nil {
		in, out := &in.ProjectID, &out.ProjectID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SourceModelParameters.
func (in *SourceModelParameters) DeepCopy() *SourceModelParameters {
	if in == nil {
		return nil
	}
	out := new(SourceModelParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SourceTableInitParameters) DeepCopyInto(out *SourceTableInitParameters) {
	*out = *in
	if in.DatasetID != nil {
		in, out := &in.DatasetID, &out.DatasetID
		*out = new(string)
		**out = **in
	}
	if in.DatasetIDRef != nil {
		in, out := &in.DatasetIDRef, &out.DatasetIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.DatasetIDSelector != nil {
		in, out := &in.DatasetIDSelector, &out.DatasetIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.ProjectID != nil {
		in, out := &in.ProjectID, &out.ProjectID
		*out = new(string)
		**out = **in
	}
	if in.TableID != nil {
		in, out := &in.TableID, &out.TableID
		*out = new(string)
		**out = **in
	}
	if in.TableIDRef != nil {
		in, out := &in.TableIDRef, &out.TableIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.TableIDSelector != nil {
		in, out := &in.TableIDSelector, &out.TableIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SourceTableInitParameters.
func (in *SourceTableInitParameters) DeepCopy() *SourceTableInitParameters {
	if in == nil {
		return nil
	}
	out := new(SourceTableInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SourceTableObservation) DeepCopyInto(out *SourceTableObservation) {
	*out = *in
	if in.DatasetID != nil {
		in, out := &in.DatasetID, &out.DatasetID
		*out = new(string)
		**out = **in
	}
	if in.ProjectID != nil {
		in, out := &in.ProjectID, &out.ProjectID
		*out = new(string)
		**out = **in
	}
	if in.TableID != nil {
		in, out := &in.TableID, &out.TableID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SourceTableObservation.
func (in *SourceTableObservation) DeepCopy() *SourceTableObservation {
	if in == nil {
		return nil
	}
	out := new(SourceTableObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SourceTableParameters) DeepCopyInto(out *SourceTableParameters) {
	*out = *in
	if in.DatasetID != nil {
		in, out := &in.DatasetID, &out.DatasetID
		*out = new(string)
		**out = **in
	}
	if in.DatasetIDRef != nil {
		in, out := &in.DatasetIDRef, &out.DatasetIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.DatasetIDSelector != nil {
		in, out := &in.DatasetIDSelector, &out.DatasetIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.ProjectID != nil {
		in, out := &in.ProjectID, &out.ProjectID
		*out = new(string)
		**out = **in
	}
	if in.TableID != nil {
		in, out := &in.TableID, &out.TableID
		*out = new(string)
		**out = **in
	}
	if in.TableIDRef != nil {
		in, out := &in.TableIDRef, &out.TableIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.TableIDSelector != nil {
		in, out := &in.TableIDSelector, &out.TableIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SourceTableParameters.
func (in *SourceTableParameters) DeepCopy() *SourceTableParameters {
	if in == nil {
		return nil
	}
	out := new(SourceTableParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SourceTablesInitParameters) DeepCopyInto(out *SourceTablesInitParameters) {
	*out = *in
	if in.DatasetID != nil {
		in, out := &in.DatasetID, &out.DatasetID
		*out = new(string)
		**out = **in
	}
	if in.ProjectID != nil {
		in, out := &in.ProjectID, &out.ProjectID
		*out = new(string)
		**out = **in
	}
	if in.TableID != nil {
		in, out := &in.TableID, &out.TableID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SourceTablesInitParameters.
func (in *SourceTablesInitParameters) DeepCopy() *SourceTablesInitParameters {
	if in == nil {
		return nil
	}
	out := new(SourceTablesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SourceTablesObservation) DeepCopyInto(out *SourceTablesObservation) {
	*out = *in
	if in.DatasetID != nil {
		in, out := &in.DatasetID, &out.DatasetID
		*out = new(string)
		**out = **in
	}
	if in.ProjectID != nil {
		in, out := &in.ProjectID, &out.ProjectID
		*out = new(string)
		**out = **in
	}
	if in.TableID != nil {
		in, out := &in.TableID, &out.TableID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SourceTablesObservation.
func (in *SourceTablesObservation) DeepCopy() *SourceTablesObservation {
	if in == nil {
		return nil
	}
	out := new(SourceTablesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SourceTablesParameters) DeepCopyInto(out *SourceTablesParameters) {
	*out = *in
	if in.DatasetID != nil {
		in, out := &in.DatasetID, &out.DatasetID
		*out = new(string)
		**out = **in
	}
	if in.ProjectID != nil {
		in, out := &in.ProjectID, &out.ProjectID
		*out = new(string)
		**out = **in
	}
	if in.TableID != nil {
		in, out := &in.TableID, &out.TableID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SourceTablesParameters.
func (in *SourceTablesParameters) DeepCopy() *SourceTablesParameters {
	if in == nil {
		return nil
	}
	out := new(SourceTablesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SparkHistoryServerConfigInitParameters) DeepCopyInto(out *SparkHistoryServerConfigInitParameters) {
	*out = *in
	if in.DataprocCluster != nil {
		in, out := &in.DataprocCluster, &out.DataprocCluster
		*out = new(string)
		**out = **in
	}
	if in.DataprocClusterRef != nil {
		in, out := &in.DataprocClusterRef, &out.DataprocClusterRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.DataprocClusterSelector != nil {
		in, out := &in.DataprocClusterSelector, &out.DataprocClusterSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SparkHistoryServerConfigInitParameters.
func (in *SparkHistoryServerConfigInitParameters) DeepCopy() *SparkHistoryServerConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(SparkHistoryServerConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SparkHistoryServerConfigObservation) DeepCopyInto(out *SparkHistoryServerConfigObservation) {
	*out = *in
	if in.DataprocCluster != nil {
		in, out := &in.DataprocCluster, &out.DataprocCluster
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SparkHistoryServerConfigObservation.
func (in *SparkHistoryServerConfigObservation) DeepCopy() *SparkHistoryServerConfigObservation {
	if in == nil {
		return nil
	}
	out := new(SparkHistoryServerConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SparkHistoryServerConfigParameters) DeepCopyInto(out *SparkHistoryServerConfigParameters) {
	*out = *in
	if in.DataprocCluster != nil {
		in, out := &in.DataprocCluster, &out.DataprocCluster
		*out = new(string)
		**out = **in
	}
	if in.DataprocClusterRef != nil {
		in, out := &in.DataprocClusterRef, &out.DataprocClusterRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.DataprocClusterSelector != nil {
		in, out := &in.DataprocClusterSelector, &out.DataprocClusterSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SparkHistoryServerConfigParameters.
func (in *SparkHistoryServerConfigParameters) DeepCopy() *SparkHistoryServerConfigParameters {
	if in == nil {
		return nil
	}
	out := new(SparkHistoryServerConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SparkInitParameters) DeepCopyInto(out *SparkInitParameters) {
	*out = *in
	if in.MetastoreServiceConfig != nil {
		in, out := &in.MetastoreServiceConfig, &out.MetastoreServiceConfig
		*out = make([]MetastoreServiceConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SparkHistoryServerConfig != nil {
		in, out := &in.SparkHistoryServerConfig, &out.SparkHistoryServerConfig
		*out = make([]SparkHistoryServerConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SparkInitParameters.
func (in *SparkInitParameters) DeepCopy() *SparkInitParameters {
	if in == nil {
		return nil
	}
	out := new(SparkInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SparkObservation) DeepCopyInto(out *SparkObservation) {
	*out = *in
	if in.MetastoreServiceConfig != nil {
		in, out := &in.MetastoreServiceConfig, &out.MetastoreServiceConfig
		*out = make([]MetastoreServiceConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ServiceAccountID != nil {
		in, out := &in.ServiceAccountID, &out.ServiceAccountID
		*out = new(string)
		**out = **in
	}
	if in.SparkHistoryServerConfig != nil {
		in, out := &in.SparkHistoryServerConfig, &out.SparkHistoryServerConfig
		*out = make([]SparkHistoryServerConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SparkObservation.
func (in *SparkObservation) DeepCopy() *SparkObservation {
	if in == nil {
		return nil
	}
	out := new(SparkObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SparkOptionsInitParameters) DeepCopyInto(out *SparkOptionsInitParameters) {
	*out = *in
	if in.ArchiveUris != nil {
		in, out := &in.ArchiveUris, &out.ArchiveUris
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Connection != nil {
		in, out := &in.Connection, &out.Connection
		*out = new(string)
		**out = **in
	}
	if in.ConnectionRef != nil {
		in, out := &in.ConnectionRef, &out.ConnectionRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ConnectionSelector != nil {
		in, out := &in.ConnectionSelector, &out.ConnectionSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.ContainerImage != nil {
		in, out := &in.ContainerImage, &out.ContainerImage
		*out = new(string)
		**out = **in
	}
	if in.FileUris != nil {
		in, out := &in.FileUris, &out.FileUris
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.JarUris != nil {
		in, out := &in.JarUris, &out.JarUris
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.MainClass != nil {
		in, out := &in.MainClass, &out.MainClass
		*out = new(string)
		**out = **in
	}
	if in.MainFileURI != nil {
		in, out := &in.MainFileURI, &out.MainFileURI
		*out = new(string)
		**out = **in
	}
	if in.Properties != nil {
		in, out := &in.Properties, &out.Properties
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.PyFileUris != nil {
		in, out := &in.PyFileUris, &out.PyFileUris
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.RuntimeVersion != nil {
		in, out := &in.RuntimeVersion, &out.RuntimeVersion
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SparkOptionsInitParameters.
func (in *SparkOptionsInitParameters) DeepCopy() *SparkOptionsInitParameters {
	if in == nil {
		return nil
	}
	out := new(SparkOptionsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SparkOptionsObservation) DeepCopyInto(out *SparkOptionsObservation) {
	*out = *in
	if in.ArchiveUris != nil {
		in, out := &in.ArchiveUris, &out.ArchiveUris
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Connection != nil {
		in, out := &in.Connection, &out.Connection
		*out = new(string)
		**out = **in
	}
	if in.ContainerImage != nil {
		in, out := &in.ContainerImage, &out.ContainerImage
		*out = new(string)
		**out = **in
	}
	if in.FileUris != nil {
		in, out := &in.FileUris, &out.FileUris
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.JarUris != nil {
		in, out := &in.JarUris, &out.JarUris
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.MainClass != nil {
		in, out := &in.MainClass, &out.MainClass
		*out = new(string)
		**out = **in
	}
	if in.MainFileURI != nil {
		in, out := &in.MainFileURI, &out.MainFileURI
		*out = new(string)
		**out = **in
	}
	if in.Properties != nil {
		in, out := &in.Properties, &out.Properties
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.PyFileUris != nil {
		in, out := &in.PyFileUris, &out.PyFileUris
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.RuntimeVersion != nil {
		in, out := &in.RuntimeVersion, &out.RuntimeVersion
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SparkOptionsObservation.
func (in *SparkOptionsObservation) DeepCopy() *SparkOptionsObservation {
	if in == nil {
		return nil
	}
	out := new(SparkOptionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SparkOptionsParameters) DeepCopyInto(out *SparkOptionsParameters) {
	*out = *in
	if in.ArchiveUris != nil {
		in, out := &in.ArchiveUris, &out.ArchiveUris
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Connection != nil {
		in, out := &in.Connection, &out.Connection
		*out = new(string)
		**out = **in
	}
	if in.ConnectionRef != nil {
		in, out := &in.ConnectionRef, &out.ConnectionRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ConnectionSelector != nil {
		in, out := &in.ConnectionSelector, &out.ConnectionSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.ContainerImage != nil {
		in, out := &in.ContainerImage, &out.ContainerImage
		*out = new(string)
		**out = **in
	}
	if in.FileUris != nil {
		in, out := &in.FileUris, &out.FileUris
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.JarUris != nil {
		in, out := &in.JarUris, &out.JarUris
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.MainClass != nil {
		in, out := &in.MainClass, &out.MainClass
		*out = new(string)
		**out = **in
	}
	if in.MainFileURI != nil {
		in, out := &in.MainFileURI, &out.MainFileURI
		*out = new(string)
		**out = **in
	}
	if in.Properties != nil {
		in, out := &in.Properties, &out.Properties
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.PyFileUris != nil {
		in, out := &in.PyFileUris, &out.PyFileUris
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.RuntimeVersion != nil {
		in, out := &in.RuntimeVersion, &out.RuntimeVersion
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SparkOptionsParameters.
func (in *SparkOptionsParameters) DeepCopy() *SparkOptionsParameters {
	if in == nil {
		return nil
	}
	out := new(SparkOptionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SparkParameters) DeepCopyInto(out *SparkParameters) {
	*out = *in
	if in.MetastoreServiceConfig != nil {
		in, out := &in.MetastoreServiceConfig, &out.MetastoreServiceConfig
		*out = make([]MetastoreServiceConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SparkHistoryServerConfig != nil {
		in, out := &in.SparkHistoryServerConfig, &out.SparkHistoryServerConfig
		*out = make([]SparkHistoryServerConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SparkParameters.
func (in *SparkParameters) DeepCopy() *SparkParameters {
	if in == nil {
		return nil
	}
	out := new(SparkParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StatusInitParameters) DeepCopyInto(out *StatusInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StatusInitParameters.
func (in *StatusInitParameters) DeepCopy() *StatusInitParameters {
	if in == nil {
		return nil
	}
	out := new(StatusInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StatusObservation) DeepCopyInto(out *StatusObservation) {
	*out = *in
	if in.ErrorResult != nil {
		in, out := &in.ErrorResult, &out.ErrorResult
		*out = make([]ErrorResultObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Errors != nil {
		in, out := &in.Errors, &out.Errors
		*out = make([]ErrorsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StatusObservation.
func (in *StatusObservation) DeepCopy() *StatusObservation {
	if in == nil {
		return nil
	}
	out := new(StatusObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StatusParameters) DeepCopyInto(out *StatusParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StatusParameters.
func (in *StatusParameters) DeepCopy() *StatusParameters {
	if in == nil {
		return nil
	}
	out := new(StatusParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Table) DeepCopyInto(out *Table) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Table.
func (in *Table) DeepCopy() *Table {
	if in == nil {
		return nil
	}
	out := new(Table)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Table) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TableConstraintsInitParameters) DeepCopyInto(out *TableConstraintsInitParameters) {
	*out = *in
	if in.ForeignKeys != nil {
		in, out := &in.ForeignKeys, &out.ForeignKeys
		*out = make([]ForeignKeysInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PrimaryKey != nil {
		in, out := &in.PrimaryKey, &out.PrimaryKey
		*out = make([]PrimaryKeyInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TableConstraintsInitParameters.
func (in *TableConstraintsInitParameters) DeepCopy() *TableConstraintsInitParameters {
	if in == nil {
		return nil
	}
	out := new(TableConstraintsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TableConstraintsObservation) DeepCopyInto(out *TableConstraintsObservation) {
	*out = *in
	if in.ForeignKeys != nil {
		in, out := &in.ForeignKeys, &out.ForeignKeys
		*out = make([]ForeignKeysObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PrimaryKey != nil {
		in, out := &in.PrimaryKey, &out.PrimaryKey
		*out = make([]PrimaryKeyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TableConstraintsObservation.
func (in *TableConstraintsObservation) DeepCopy() *TableConstraintsObservation {
	if in == nil {
		return nil
	}
	out := new(TableConstraintsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TableConstraintsParameters) DeepCopyInto(out *TableConstraintsParameters) {
	*out = *in
	if in.ForeignKeys != nil {
		in, out := &in.ForeignKeys, &out.ForeignKeys
		*out = make([]ForeignKeysParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PrimaryKey != nil {
		in, out := &in.PrimaryKey, &out.PrimaryKey
		*out = make([]PrimaryKeyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TableConstraintsParameters.
func (in *TableConstraintsParameters) DeepCopy() *TableConstraintsParameters {
	if in == nil {
		return nil
	}
	out := new(TableConstraintsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TableIAMBinding) DeepCopyInto(out *TableIAMBinding) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TableIAMBinding.
func (in *TableIAMBinding) DeepCopy() *TableIAMBinding {
	if in == nil {
		return nil
	}
	out := new(TableIAMBinding)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *TableIAMBinding) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TableIAMBindingConditionInitParameters) DeepCopyInto(out *TableIAMBindingConditionInitParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Expression != nil {
		in, out := &in.Expression, &out.Expression
		*out = new(string)
		**out = **in
	}
	if in.Title != nil {
		in, out := &in.Title, &out.Title
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TableIAMBindingConditionInitParameters.
func (in *TableIAMBindingConditionInitParameters) DeepCopy() *TableIAMBindingConditionInitParameters {
	if in == nil {
		return nil
	}
	out := new(TableIAMBindingConditionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TableIAMBindingConditionObservation) DeepCopyInto(out *TableIAMBindingConditionObservation) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Expression != nil {
		in, out := &in.Expression, &out.Expression
		*out = new(string)
		**out = **in
	}
	if in.Title != nil {
		in, out := &in.Title, &out.Title
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TableIAMBindingConditionObservation.
func (in *TableIAMBindingConditionObservation) DeepCopy() *TableIAMBindingConditionObservation {
	if in == nil {
		return nil
	}
	out := new(TableIAMBindingConditionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TableIAMBindingConditionParameters) DeepCopyInto(out *TableIAMBindingConditionParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Expression != nil {
		in, out := &in.Expression, &out.Expression
		*out = new(string)
		**out = **in
	}
	if in.Title != nil {
		in, out := &in.Title, &out.Title
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TableIAMBindingConditionParameters.
func (in *TableIAMBindingConditionParameters) DeepCopy() *TableIAMBindingConditionParameters {
	if in == nil {
		return nil
	}
	out := new(TableIAMBindingConditionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TableIAMBindingInitParameters) DeepCopyInto(out *TableIAMBindingInitParameters) {
	*out = *in
	if in.Condition != nil {
		in, out := &in.Condition, &out.Condition
		*out = make([]TableIAMBindingConditionInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DatasetID != nil {
		in, out := &in.DatasetID, &out.DatasetID
		*out = new(string)
		**out = **in
	}
	if in.DatasetIDRef != nil {
		in, out := &in.DatasetIDRef, &out.DatasetIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.DatasetIDSelector != nil {
		in, out := &in.DatasetIDSelector, &out.DatasetIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Members != nil {
		in, out := &in.Members, &out.Members
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Role != nil {
		in, out := &in.Role, &out.Role
		*out = new(string)
		**out = **in
	}
	if in.TableID != nil {
		in, out := &in.TableID, &out.TableID
		*out = new(string)
		**out = **in
	}
	if in.TableIDRef != nil {
		in, out := &in.TableIDRef, &out.TableIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.TableIDSelector != nil {
		in, out := &in.TableIDSelector, &out.TableIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TableIAMBindingInitParameters.
func (in *TableIAMBindingInitParameters) DeepCopy() *TableIAMBindingInitParameters {
	if in == nil {
		return nil
	}
	out := new(TableIAMBindingInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TableIAMBindingList) DeepCopyInto(out *TableIAMBindingList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]TableIAMBinding, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TableIAMBindingList.
func (in *TableIAMBindingList) DeepCopy() *TableIAMBindingList {
	if in == nil {
		return nil
	}
	out := new(TableIAMBindingList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *TableIAMBindingList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TableIAMBindingObservation) DeepCopyInto(out *TableIAMBindingObservation) {
	*out = *in
	if in.Condition != nil {
		in, out := &in.Condition, &out.Condition
		*out = make([]TableIAMBindingConditionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DatasetID != nil {
		in, out := &in.DatasetID, &out.DatasetID
		*out = new(string)
		**out = **in
	}
	if in.Etag != nil {
		in, out := &in.Etag, &out.Etag
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Members != nil {
		in, out := &in.Members, &out.Members
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Role != nil {
		in, out := &in.Role, &out.Role
		*out = new(string)
		**out = **in
	}
	if in.TableID != nil {
		in, out := &in.TableID, &out.TableID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TableIAMBindingObservation.
func (in *TableIAMBindingObservation) DeepCopy() *TableIAMBindingObservation {
	if in == nil {
		return nil
	}
	out := new(TableIAMBindingObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TableIAMBindingParameters) DeepCopyInto(out *TableIAMBindingParameters) {
	*out = *in
	if in.Condition != nil {
		in, out := &in.Condition, &out.Condition
		*out = make([]TableIAMBindingConditionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DatasetID != nil {
		in, out := &in.DatasetID, &out.DatasetID
		*out = new(string)
		**out = **in
	}
	if in.DatasetIDRef != nil {
		in, out := &in.DatasetIDRef, &out.DatasetIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.DatasetIDSelector != nil {
		in, out := &in.DatasetIDSelector, &out.DatasetIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Members != nil {
		in, out := &in.Members, &out.Members
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Role != nil {
		in, out := &in.Role, &out.Role
		*out = new(string)
		**out = **in
	}
	if in.TableID != nil {
		in, out := &in.TableID, &out.TableID
		*out = new(string)
		**out = **in
	}
	if in.TableIDRef != nil {
		in, out := &in.TableIDRef, &out.TableIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.TableIDSelector != nil {
		in, out := &in.TableIDSelector, &out.TableIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TableIAMBindingParameters.
func (in *TableIAMBindingParameters) DeepCopy() *TableIAMBindingParameters {
	if in == nil {
		return nil
	}
	out := new(TableIAMBindingParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TableIAMBindingSpec) DeepCopyInto(out *TableIAMBindingSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TableIAMBindingSpec.
func (in *TableIAMBindingSpec) DeepCopy() *TableIAMBindingSpec {
	if in == nil {
		return nil
	}
	out := new(TableIAMBindingSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TableIAMBindingStatus) DeepCopyInto(out *TableIAMBindingStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TableIAMBindingStatus.
func (in *TableIAMBindingStatus) DeepCopy() *TableIAMBindingStatus {
	if in == nil {
		return nil
	}
	out := new(TableIAMBindingStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TableIAMMember) DeepCopyInto(out *TableIAMMember) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TableIAMMember.
func (in *TableIAMMember) DeepCopy() *TableIAMMember {
	if in == nil {
		return nil
	}
	out := new(TableIAMMember)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *TableIAMMember) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TableIAMMemberConditionInitParameters) DeepCopyInto(out *TableIAMMemberConditionInitParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Expression != nil {
		in, out := &in.Expression, &out.Expression
		*out = new(string)
		**out = **in
	}
	if in.Title != nil {
		in, out := &in.Title, &out.Title
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TableIAMMemberConditionInitParameters.
func (in *TableIAMMemberConditionInitParameters) DeepCopy() *TableIAMMemberConditionInitParameters {
	if in == nil {
		return nil
	}
	out := new(TableIAMMemberConditionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TableIAMMemberConditionObservation) DeepCopyInto(out *TableIAMMemberConditionObservation) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Expression != nil {
		in, out := &in.Expression, &out.Expression
		*out = new(string)
		**out = **in
	}
	if in.Title != nil {
		in, out := &in.Title, &out.Title
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TableIAMMemberConditionObservation.
func (in *TableIAMMemberConditionObservation) DeepCopy() *TableIAMMemberConditionObservation {
	if in == nil {
		return nil
	}
	out := new(TableIAMMemberConditionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TableIAMMemberConditionParameters) DeepCopyInto(out *TableIAMMemberConditionParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Expression != nil {
		in, out := &in.Expression, &out.Expression
		*out = new(string)
		**out = **in
	}
	if in.Title != nil {
		in, out := &in.Title, &out.Title
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TableIAMMemberConditionParameters.
func (in *TableIAMMemberConditionParameters) DeepCopy() *TableIAMMemberConditionParameters {
	if in == nil {
		return nil
	}
	out := new(TableIAMMemberConditionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TableIAMMemberInitParameters) DeepCopyInto(out *TableIAMMemberInitParameters) {
	*out = *in
	if in.Condition != nil {
		in, out := &in.Condition, &out.Condition
		*out = make([]TableIAMMemberConditionInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Role != nil {
		in, out := &in.Role, &out.Role
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TableIAMMemberInitParameters.
func (in *TableIAMMemberInitParameters) DeepCopy() *TableIAMMemberInitParameters {
	if in == nil {
		return nil
	}
	out := new(TableIAMMemberInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TableIAMMemberList) DeepCopyInto(out *TableIAMMemberList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]TableIAMMember, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TableIAMMemberList.
func (in *TableIAMMemberList) DeepCopy() *TableIAMMemberList {
	if in == nil {
		return nil
	}
	out := new(TableIAMMemberList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *TableIAMMemberList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TableIAMMemberObservation) DeepCopyInto(out *TableIAMMemberObservation) {
	*out = *in
	if in.Condition != nil {
		in, out := &in.Condition, &out.Condition
		*out = make([]TableIAMMemberConditionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DatasetID != nil {
		in, out := &in.DatasetID, &out.DatasetID
		*out = new(string)
		**out = **in
	}
	if in.Etag != nil {
		in, out := &in.Etag, &out.Etag
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Member != nil {
		in, out := &in.Member, &out.Member
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Role != nil {
		in, out := &in.Role, &out.Role
		*out = new(string)
		**out = **in
	}
	if in.TableID != nil {
		in, out := &in.TableID, &out.TableID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TableIAMMemberObservation.
func (in *TableIAMMemberObservation) DeepCopy() *TableIAMMemberObservation {
	if in == nil {
		return nil
	}
	out := new(TableIAMMemberObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TableIAMMemberParameters) DeepCopyInto(out *TableIAMMemberParameters) {
	*out = *in
	if in.Condition != nil {
		in, out := &in.Condition, &out.Condition
		*out = make([]TableIAMMemberConditionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DatasetID != nil {
		in, out := &in.DatasetID, &out.DatasetID
		*out = new(string)
		**out = **in
	}
	if in.DatasetIDRef != nil {
		in, out := &in.DatasetIDRef, &out.DatasetIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.DatasetIDSelector != nil {
		in, out := &in.DatasetIDSelector, &out.DatasetIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Member != nil {
		in, out := &in.Member, &out.Member
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Role != nil {
		in, out := &in.Role, &out.Role
		*out = new(string)
		**out = **in
	}
	if in.TableID != nil {
		in, out := &in.TableID, &out.TableID
		*out = new(string)
		**out = **in
	}
	if in.TableIDRef != nil {
		in, out := &in.TableIDRef, &out.TableIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.TableIDSelector != nil {
		in, out := &in.TableIDSelector, &out.TableIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TableIAMMemberParameters.
func (in *TableIAMMemberParameters) DeepCopy() *TableIAMMemberParameters {
	if in == nil {
		return nil
	}
	out := new(TableIAMMemberParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TableIAMMemberSpec) DeepCopyInto(out *TableIAMMemberSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TableIAMMemberSpec.
func (in *TableIAMMemberSpec) DeepCopy() *TableIAMMemberSpec {
	if in == nil {
		return nil
	}
	out := new(TableIAMMemberSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TableIAMMemberStatus) DeepCopyInto(out *TableIAMMemberStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TableIAMMemberStatus.
func (in *TableIAMMemberStatus) DeepCopy() *TableIAMMemberStatus {
	if in == nil {
		return nil
	}
	out := new(TableIAMMemberStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TableIAMPolicy) DeepCopyInto(out *TableIAMPolicy) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TableIAMPolicy.
func (in *TableIAMPolicy) DeepCopy() *TableIAMPolicy {
	if in == nil {
		return nil
	}
	out := new(TableIAMPolicy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *TableIAMPolicy) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TableIAMPolicyInitParameters) DeepCopyInto(out *TableIAMPolicyInitParameters) {
	*out = *in
	if in.DatasetID != nil {
		in, out := &in.DatasetID, &out.DatasetID
		*out = new(string)
		**out = **in
	}
	if in.DatasetIDRef != nil {
		in, out := &in.DatasetIDRef, &out.DatasetIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.DatasetIDSelector != nil {
		in, out := &in.DatasetIDSelector, &out.DatasetIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.PolicyData != nil {
		in, out := &in.PolicyData, &out.PolicyData
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.TableID != nil {
		in, out := &in.TableID, &out.TableID
		*out = new(string)
		**out = **in
	}
	if in.TableIDRef != nil {
		in, out := &in.TableIDRef, &out.TableIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.TableIDSelector != nil {
		in, out := &in.TableIDSelector, &out.TableIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TableIAMPolicyInitParameters.
func (in *TableIAMPolicyInitParameters) DeepCopy() *TableIAMPolicyInitParameters {
	if in == nil {
		return nil
	}
	out := new(TableIAMPolicyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TableIAMPolicyList) DeepCopyInto(out *TableIAMPolicyList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]TableIAMPolicy, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TableIAMPolicyList.
func (in *TableIAMPolicyList) DeepCopy() *TableIAMPolicyList {
	if in == nil {
		return nil
	}
	out := new(TableIAMPolicyList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *TableIAMPolicyList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TableIAMPolicyObservation) DeepCopyInto(out *TableIAMPolicyObservation) {
	*out = *in
	if in.DatasetID != nil {
		in, out := &in.DatasetID, &out.DatasetID
		*out = new(string)
		**out = **in
	}
	if in.Etag != nil {
		in, out := &in.Etag, &out.Etag
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.PolicyData != nil {
		in, out := &in.PolicyData, &out.PolicyData
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.TableID != nil {
		in, out := &in.TableID, &out.TableID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TableIAMPolicyObservation.
func (in *TableIAMPolicyObservation) DeepCopy() *TableIAMPolicyObservation {
	if in == nil {
		return nil
	}
	out := new(TableIAMPolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TableIAMPolicyParameters) DeepCopyInto(out *TableIAMPolicyParameters) {
	*out = *in
	if in.DatasetID != nil {
		in, out := &in.DatasetID, &out.DatasetID
		*out = new(string)
		**out = **in
	}
	if in.DatasetIDRef != nil {
		in, out := &in.DatasetIDRef, &out.DatasetIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.DatasetIDSelector != nil {
		in, out := &in.DatasetIDSelector, &out.DatasetIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.PolicyData != nil {
		in, out := &in.PolicyData, &out.PolicyData
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.TableID != nil {
		in, out := &in.TableID, &out.TableID
		*out = new(string)
		**out = **in
	}
	if in.TableIDRef != nil {
		in, out := &in.TableIDRef, &out.TableIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.TableIDSelector != nil {
		in, out := &in.TableIDSelector, &out.TableIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TableIAMPolicyParameters.
func (in *TableIAMPolicyParameters) DeepCopy() *TableIAMPolicyParameters {
	if in == nil {
		return nil
	}
	out := new(TableIAMPolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TableIAMPolicySpec) DeepCopyInto(out *TableIAMPolicySpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TableIAMPolicySpec.
func (in *TableIAMPolicySpec) DeepCopy() *TableIAMPolicySpec {
	if in == nil {
		return nil
	}
	out := new(TableIAMPolicySpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TableIAMPolicyStatus) DeepCopyInto(out *TableIAMPolicyStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TableIAMPolicyStatus.
func (in *TableIAMPolicyStatus) DeepCopy() *TableIAMPolicyStatus {
	if in == nil {
		return nil
	}
	out := new(TableIAMPolicyStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TableInitParameters) DeepCopyInto(out *TableInitParameters) {
	*out = *in
	if in.Clustering != nil {
		in, out := &in.Clustering, &out.Clustering
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.DeletionProtection != nil {
		in, out := &in.DeletionProtection, &out.DeletionProtection
		*out = new(bool)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.EncryptionConfiguration != nil {
		in, out := &in.EncryptionConfiguration, &out.EncryptionConfiguration
		*out = make([]EncryptionConfigurationInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ExpirationTime != nil {
		in, out := &in.ExpirationTime, &out.ExpirationTime
		*out = new(float64)
		**out = **in
	}
	if in.ExternalDataConfiguration != nil {
		in, out := &in.ExternalDataConfiguration, &out.ExternalDataConfiguration
		*out = make([]ExternalDataConfigurationInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.FriendlyName != nil {
		in, out := &in.FriendlyName, &out.FriendlyName
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.MaterializedView != nil {
		in, out := &in.MaterializedView, &out.MaterializedView
		*out = make([]MaterializedViewInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MaxStaleness != nil {
		in, out := &in.MaxStaleness, &out.MaxStaleness
		*out = new(string)
		**out = **in
	}
	if in.RangePartitioning != nil {
		in, out := &in.RangePartitioning, &out.RangePartitioning
		*out = make([]RangePartitioningInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RequirePartitionFilter != nil {
		in, out := &in.RequirePartitionFilter, &out.RequirePartitionFilter
		*out = new(bool)
		**out = **in
	}
	if in.Schema != nil {
		in, out := &in.Schema, &out.Schema
		*out = new(string)
		**out = **in
	}
	if in.TableConstraints != nil {
		in, out := &in.TableConstraints, &out.TableConstraints
		*out = make([]TableConstraintsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TableReplicationInfo != nil {
		in, out := &in.TableReplicationInfo, &out.TableReplicationInfo
		*out = make([]TableReplicationInfoInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TimePartitioning != nil {
		in, out := &in.TimePartitioning, &out.TimePartitioning
		*out = make([]TableTimePartitioningInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.View != nil {
		in, out := &in.View, &out.View
		*out = make([]TableViewInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TableInitParameters.
func (in *TableInitParameters) DeepCopy() *TableInitParameters {
	if in == nil {
		return nil
	}
	out := new(TableInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TableList) DeepCopyInto(out *TableList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Table, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TableList.
func (in *TableList) DeepCopy() *TableList {
	if in == nil {
		return nil
	}
	out := new(TableList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *TableList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TableObservation) DeepCopyInto(out *TableObservation) {
	*out = *in
	if in.Clustering != nil {
		in, out := &in.Clustering, &out.Clustering
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CreationTime != nil {
		in, out := &in.CreationTime, &out.CreationTime
		*out = new(float64)
		**out = **in
	}
	if in.DatasetID != nil {
		in, out := &in.DatasetID, &out.DatasetID
		*out = new(string)
		**out = **in
	}
	if in.DeletionProtection != nil {
		in, out := &in.DeletionProtection, &out.DeletionProtection
		*out = new(bool)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.EffectiveLabels != nil {
		in, out := &in.EffectiveLabels, &out.EffectiveLabels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.EncryptionConfiguration != nil {
		in, out := &in.EncryptionConfiguration, &out.EncryptionConfiguration
		*out = make([]EncryptionConfigurationObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Etag != nil {
		in, out := &in.Etag, &out.Etag
		*out = new(string)
		**out = **in
	}
	if in.ExpirationTime != nil {
		in, out := &in.ExpirationTime, &out.ExpirationTime
		*out = new(float64)
		**out = **in
	}
	if in.ExternalDataConfiguration != nil {
		in, out := &in.ExternalDataConfiguration, &out.ExternalDataConfiguration
		*out = make([]ExternalDataConfigurationObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.FriendlyName != nil {
		in, out := &in.FriendlyName, &out.FriendlyName
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.LastModifiedTime != nil {
		in, out := &in.LastModifiedTime, &out.LastModifiedTime
		*out = new(float64)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.MaterializedView != nil {
		in, out := &in.MaterializedView, &out.MaterializedView
		*out = make([]MaterializedViewObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MaxStaleness != nil {
		in, out := &in.MaxStaleness, &out.MaxStaleness
		*out = new(string)
		**out = **in
	}
	if in.NumBytes != nil {
		in, out := &in.NumBytes, &out.NumBytes
		*out = new(float64)
		**out = **in
	}
	if in.NumLongTermBytes != nil {
		in, out := &in.NumLongTermBytes, &out.NumLongTermBytes
		*out = new(float64)
		**out = **in
	}
	if in.NumRows != nil {
		in, out := &in.NumRows, &out.NumRows
		*out = new(float64)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.RangePartitioning != nil {
		in, out := &in.RangePartitioning, &out.RangePartitioning
		*out = make([]RangePartitioningObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RequirePartitionFilter != nil {
		in, out := &in.RequirePartitionFilter, &out.RequirePartitionFilter
		*out = new(bool)
		**out = **in
	}
	if in.Schema != nil {
		in, out := &in.Schema, &out.Schema
		*out = new(string)
		**out = **in
	}
	if in.SelfLink != nil {
		in, out := &in.SelfLink, &out.SelfLink
		*out = new(string)
		**out = **in
	}
	if in.TableConstraints != nil {
		in, out := &in.TableConstraints, &out.TableConstraints
		*out = make([]TableConstraintsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TableReplicationInfo != nil {
		in, out := &in.TableReplicationInfo, &out.TableReplicationInfo
		*out = make([]TableReplicationInfoObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TerraformLabels != nil {
		in, out := &in.TerraformLabels, &out.TerraformLabels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TimePartitioning != nil {
		in, out := &in.TimePartitioning, &out.TimePartitioning
		*out = make([]TableTimePartitioningObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.View != nil {
		in, out := &in.View, &out.View
		*out = make([]TableViewObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TableObservation.
func (in *TableObservation) DeepCopy() *TableObservation {
	if in == nil {
		return nil
	}
	out := new(TableObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TableParameters) DeepCopyInto(out *TableParameters) {
	*out = *in
	if in.Clustering != nil {
		in, out := &in.Clustering, &out.Clustering
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.DatasetID != nil {
		in, out := &in.DatasetID, &out.DatasetID
		*out = new(string)
		**out = **in
	}
	if in.DatasetIDRef != nil {
		in, out := &in.DatasetIDRef, &out.DatasetIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.DatasetIDSelector != nil {
		in, out := &in.DatasetIDSelector, &out.DatasetIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.DeletionProtection != nil {
		in, out := &in.DeletionProtection, &out.DeletionProtection
		*out = new(bool)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.EncryptionConfiguration != nil {
		in, out := &in.EncryptionConfiguration, &out.EncryptionConfiguration
		*out = make([]EncryptionConfigurationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ExpirationTime != nil {
		in, out := &in.ExpirationTime, &out.ExpirationTime
		*out = new(float64)
		**out = **in
	}
	if in.ExternalDataConfiguration != nil {
		in, out := &in.ExternalDataConfiguration, &out.ExternalDataConfiguration
		*out = make([]ExternalDataConfigurationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.FriendlyName != nil {
		in, out := &in.FriendlyName, &out.FriendlyName
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.MaterializedView != nil {
		in, out := &in.MaterializedView, &out.MaterializedView
		*out = make([]MaterializedViewParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MaxStaleness != nil {
		in, out := &in.MaxStaleness, &out.MaxStaleness
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.RangePartitioning != nil {
		in, out := &in.RangePartitioning, &out.RangePartitioning
		*out = make([]RangePartitioningParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RequirePartitionFilter != nil {
		in, out := &in.RequirePartitionFilter, &out.RequirePartitionFilter
		*out = new(bool)
		**out = **in
	}
	if in.Schema != nil {
		in, out := &in.Schema, &out.Schema
		*out = new(string)
		**out = **in
	}
	if in.TableConstraints != nil {
		in, out := &in.TableConstraints, &out.TableConstraints
		*out = make([]TableConstraintsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TableReplicationInfo != nil {
		in, out := &in.TableReplicationInfo, &out.TableReplicationInfo
		*out = make([]TableReplicationInfoParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TimePartitioning != nil {
		in, out := &in.TimePartitioning, &out.TimePartitioning
		*out = make([]TableTimePartitioningParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.View != nil {
		in, out := &in.View, &out.View
		*out = make([]TableViewParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TableParameters.
func (in *TableParameters) DeepCopy() *TableParameters {
	if in == nil {
		return nil
	}
	out := new(TableParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TableReplicationInfoInitParameters) DeepCopyInto(out *TableReplicationInfoInitParameters) {
	*out = *in
	if in.ReplicationIntervalMs != nil {
		in, out := &in.ReplicationIntervalMs, &out.ReplicationIntervalMs
		*out = new(float64)
		**out = **in
	}
	if in.SourceDatasetID != nil {
		in, out := &in.SourceDatasetID, &out.SourceDatasetID
		*out = new(string)
		**out = **in
	}
	if in.SourceProjectID != nil {
		in, out := &in.SourceProjectID, &out.SourceProjectID
		*out = new(string)
		**out = **in
	}
	if in.SourceTableID != nil {
		in, out := &in.SourceTableID, &out.SourceTableID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TableReplicationInfoInitParameters.
func (in *TableReplicationInfoInitParameters) DeepCopy() *TableReplicationInfoInitParameters {
	if in == nil {
		return nil
	}
	out := new(TableReplicationInfoInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TableReplicationInfoObservation) DeepCopyInto(out *TableReplicationInfoObservation) {
	*out = *in
	if in.ReplicationIntervalMs != nil {
		in, out := &in.ReplicationIntervalMs, &out.ReplicationIntervalMs
		*out = new(float64)
		**out = **in
	}
	if in.SourceDatasetID != nil {
		in, out := &in.SourceDatasetID, &out.SourceDatasetID
		*out = new(string)
		**out = **in
	}
	if in.SourceProjectID != nil {
		in, out := &in.SourceProjectID, &out.SourceProjectID
		*out = new(string)
		**out = **in
	}
	if in.SourceTableID != nil {
		in, out := &in.SourceTableID, &out.SourceTableID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TableReplicationInfoObservation.
func (in *TableReplicationInfoObservation) DeepCopy() *TableReplicationInfoObservation {
	if in == nil {
		return nil
	}
	out := new(TableReplicationInfoObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TableReplicationInfoParameters) DeepCopyInto(out *TableReplicationInfoParameters) {
	*out = *in
	if in.ReplicationIntervalMs != nil {
		in, out := &in.ReplicationIntervalMs, &out.ReplicationIntervalMs
		*out = new(float64)
		**out = **in
	}
	if in.SourceDatasetID != nil {
		in, out := &in.SourceDatasetID, &out.SourceDatasetID
		*out = new(string)
		**out = **in
	}
	if in.SourceProjectID != nil {
		in, out := &in.SourceProjectID, &out.SourceProjectID
		*out = new(string)
		**out = **in
	}
	if in.SourceTableID != nil {
		in, out := &in.SourceTableID, &out.SourceTableID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TableReplicationInfoParameters.
func (in *TableReplicationInfoParameters) DeepCopy() *TableReplicationInfoParameters {
	if in == nil {
		return nil
	}
	out := new(TableReplicationInfoParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TableSpec) DeepCopyInto(out *TableSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TableSpec.
func (in *TableSpec) DeepCopy() *TableSpec {
	if in == nil {
		return nil
	}
	out := new(TableSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TableStatus) DeepCopyInto(out *TableStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TableStatus.
func (in *TableStatus) DeepCopy() *TableStatus {
	if in == nil {
		return nil
	}
	out := new(TableStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TableTimePartitioningInitParameters) DeepCopyInto(out *TableTimePartitioningInitParameters) {
	*out = *in
	if in.ExpirationMs != nil {
		in, out := &in.ExpirationMs, &out.ExpirationMs
		*out = new(float64)
		**out = **in
	}
	if in.Field != nil {
		in, out := &in.Field, &out.Field
		*out = new(string)
		**out = **in
	}
	if in.RequirePartitionFilter != nil {
		in, out := &in.RequirePartitionFilter, &out.RequirePartitionFilter
		*out = new(bool)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TableTimePartitioningInitParameters.
func (in *TableTimePartitioningInitParameters) DeepCopy() *TableTimePartitioningInitParameters {
	if in == nil {
		return nil
	}
	out := new(TableTimePartitioningInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TableTimePartitioningObservation) DeepCopyInto(out *TableTimePartitioningObservation) {
	*out = *in
	if in.ExpirationMs != nil {
		in, out := &in.ExpirationMs, &out.ExpirationMs
		*out = new(float64)
		**out = **in
	}
	if in.Field != nil {
		in, out := &in.Field, &out.Field
		*out = new(string)
		**out = **in
	}
	if in.RequirePartitionFilter != nil {
		in, out := &in.RequirePartitionFilter, &out.RequirePartitionFilter
		*out = new(bool)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TableTimePartitioningObservation.
func (in *TableTimePartitioningObservation) DeepCopy() *TableTimePartitioningObservation {
	if in == nil {
		return nil
	}
	out := new(TableTimePartitioningObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TableTimePartitioningParameters) DeepCopyInto(out *TableTimePartitioningParameters) {
	*out = *in
	if in.ExpirationMs != nil {
		in, out := &in.ExpirationMs, &out.ExpirationMs
		*out = new(float64)
		**out = **in
	}
	if in.Field != nil {
		in, out := &in.Field, &out.Field
		*out = new(string)
		**out = **in
	}
	if in.RequirePartitionFilter != nil {
		in, out := &in.RequirePartitionFilter, &out.RequirePartitionFilter
		*out = new(bool)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TableTimePartitioningParameters.
func (in *TableTimePartitioningParameters) DeepCopy() *TableTimePartitioningParameters {
	if in == nil {
		return nil
	}
	out := new(TableTimePartitioningParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TableViewInitParameters) DeepCopyInto(out *TableViewInitParameters) {
	*out = *in
	if in.Query != nil {
		in, out := &in.Query, &out.Query
		*out = new(string)
		**out = **in
	}
	if in.UseLegacySQL != nil {
		in, out := &in.UseLegacySQL, &out.UseLegacySQL
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TableViewInitParameters.
func (in *TableViewInitParameters) DeepCopy() *TableViewInitParameters {
	if in == nil {
		return nil
	}
	out := new(TableViewInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TableViewObservation) DeepCopyInto(out *TableViewObservation) {
	*out = *in
	if in.Query != nil {
		in, out := &in.Query, &out.Query
		*out = new(string)
		**out = **in
	}
	if in.UseLegacySQL != nil {
		in, out := &in.UseLegacySQL, &out.UseLegacySQL
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TableViewObservation.
func (in *TableViewObservation) DeepCopy() *TableViewObservation {
	if in == nil {
		return nil
	}
	out := new(TableViewObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TableViewParameters) DeepCopyInto(out *TableViewParameters) {
	*out = *in
	if in.Query != nil {
		in, out := &in.Query, &out.Query
		*out = new(string)
		**out = **in
	}
	if in.UseLegacySQL != nil {
		in, out := &in.UseLegacySQL, &out.UseLegacySQL
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TableViewParameters.
func (in *TableViewParameters) DeepCopy() *TableViewParameters {
	if in == nil {
		return nil
	}
	out := new(TableViewParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TimePartitioningInitParameters) DeepCopyInto(out *TimePartitioningInitParameters) {
	*out = *in
	if in.ExpirationMs != nil {
		in, out := &in.ExpirationMs, &out.ExpirationMs
		*out = new(string)
		**out = **in
	}
	if in.Field != nil {
		in, out := &in.Field, &out.Field
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TimePartitioningInitParameters.
func (in *TimePartitioningInitParameters) DeepCopy() *TimePartitioningInitParameters {
	if in == nil {
		return nil
	}
	out := new(TimePartitioningInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TimePartitioningObservation) DeepCopyInto(out *TimePartitioningObservation) {
	*out = *in
	if in.ExpirationMs != nil {
		in, out := &in.ExpirationMs, &out.ExpirationMs
		*out = new(string)
		**out = **in
	}
	if in.Field != nil {
		in, out := &in.Field, &out.Field
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TimePartitioningObservation.
func (in *TimePartitioningObservation) DeepCopy() *TimePartitioningObservation {
	if in == nil {
		return nil
	}
	out := new(TimePartitioningObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TimePartitioningParameters) DeepCopyInto(out *TimePartitioningParameters) {
	*out = *in
	if in.ExpirationMs != nil {
		in, out := &in.ExpirationMs, &out.ExpirationMs
		*out = new(string)
		**out = **in
	}
	if in.Field != nil {
		in, out := &in.Field, &out.Field
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TimePartitioningParameters.
func (in *TimePartitioningParameters) DeepCopy() *TimePartitioningParameters {
	if in == nil {
		return nil
	}
	out := new(TimePartitioningParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UserDefinedFunctionResourcesInitParameters) DeepCopyInto(out *UserDefinedFunctionResourcesInitParameters) {
	*out = *in
	if in.InlineCode != nil {
		in, out := &in.InlineCode, &out.InlineCode
		*out = new(string)
		**out = **in
	}
	if in.ResourceURI != nil {
		in, out := &in.ResourceURI, &out.ResourceURI
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UserDefinedFunctionResourcesInitParameters.
func (in *UserDefinedFunctionResourcesInitParameters) DeepCopy() *UserDefinedFunctionResourcesInitParameters {
	if in == nil {
		return nil
	}
	out := new(UserDefinedFunctionResourcesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UserDefinedFunctionResourcesObservation) DeepCopyInto(out *UserDefinedFunctionResourcesObservation) {
	*out = *in
	if in.InlineCode != nil {
		in, out := &in.InlineCode, &out.InlineCode
		*out = new(string)
		**out = **in
	}
	if in.ResourceURI != nil {
		in, out := &in.ResourceURI, &out.ResourceURI
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UserDefinedFunctionResourcesObservation.
func (in *UserDefinedFunctionResourcesObservation) DeepCopy() *UserDefinedFunctionResourcesObservation {
	if in == nil {
		return nil
	}
	out := new(UserDefinedFunctionResourcesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UserDefinedFunctionResourcesParameters) DeepCopyInto(out *UserDefinedFunctionResourcesParameters) {
	*out = *in
	if in.InlineCode != nil {
		in, out := &in.InlineCode, &out.InlineCode
		*out = new(string)
		**out = **in
	}
	if in.ResourceURI != nil {
		in, out := &in.ResourceURI, &out.ResourceURI
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UserDefinedFunctionResourcesParameters.
func (in *UserDefinedFunctionResourcesParameters) DeepCopy() *UserDefinedFunctionResourcesParameters {
	if in == nil {
		return nil
	}
	out := new(UserDefinedFunctionResourcesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ViewInitParameters) DeepCopyInto(out *ViewInitParameters) {
	*out = *in
	if in.DatasetID != nil {
		in, out := &in.DatasetID, &out.DatasetID
		*out = new(string)
		**out = **in
	}
	if in.ProjectID != nil {
		in, out := &in.ProjectID, &out.ProjectID
		*out = new(string)
		**out = **in
	}
	if in.TableID != nil {
		in, out := &in.TableID, &out.TableID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ViewInitParameters.
func (in *ViewInitParameters) DeepCopy() *ViewInitParameters {
	if in == nil {
		return nil
	}
	out := new(ViewInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ViewObservation) DeepCopyInto(out *ViewObservation) {
	*out = *in
	if in.DatasetID != nil {
		in, out := &in.DatasetID, &out.DatasetID
		*out = new(string)
		**out = **in
	}
	if in.ProjectID != nil {
		in, out := &in.ProjectID, &out.ProjectID
		*out = new(string)
		**out = **in
	}
	if in.TableID != nil {
		in, out := &in.TableID, &out.TableID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ViewObservation.
func (in *ViewObservation) DeepCopy() *ViewObservation {
	if in == nil {
		return nil
	}
	out := new(ViewObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ViewParameters) DeepCopyInto(out *ViewParameters) {
	*out = *in
	if in.DatasetID != nil {
		in, out := &in.DatasetID, &out.DatasetID
		*out = new(string)
		**out = **in
	}
	if in.ProjectID != nil {
		in, out := &in.ProjectID, &out.ProjectID
		*out = new(string)
		**out = **in
	}
	if in.TableID != nil {
		in, out := &in.TableID, &out.TableID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ViewParameters.
func (in *ViewParameters) DeepCopy() *ViewParameters {
	if in == nil {
		return nil
	}
	out := new(ViewParameters)
	in.DeepCopyInto(out)
	return out
}
