// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1beta1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type DataMaskingPolicyInitParameters struct {

	// The available masking rules. Learn more here: https://cloud.google.com/bigquery/docs/column-data-masking-intro#masking_options.
	// Possible values are: SHA256, ALWAYS_NULL, DEFAULT_MASKING_VALUE, LAST_FOUR_CHARACTERS, FIRST_FOUR_CHARACTERS, EMAIL_MASK, DATE_YEAR_MASK.
	PredefinedExpression *string `json:"predefinedExpression,omitempty" tf:"predefined_expression,omitempty"`

	// The name of the BigQuery routine that contains the custom masking routine, in the format of projects/{projectNumber}/datasets/{dataset_id}/routines/{routine_id}.
	// +crossplane:generate:reference:type=github.com/upbound/provider-gcp/apis/bigquery/v1beta2.Routine
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractResourceID()
	Routine *string `json:"routine,omitempty" tf:"routine,omitempty"`

	// Reference to a Routine in bigquery to populate routine.
	// +kubebuilder:validation:Optional
	RoutineRef *v1.Reference `json:"routineRef,omitempty" tf:"-"`

	// Selector for a Routine in bigquery to populate routine.
	// +kubebuilder:validation:Optional
	RoutineSelector *v1.Selector `json:"routineSelector,omitempty" tf:"-"`
}

type DataMaskingPolicyObservation struct {

	// The available masking rules. Learn more here: https://cloud.google.com/bigquery/docs/column-data-masking-intro#masking_options.
	// Possible values are: SHA256, ALWAYS_NULL, DEFAULT_MASKING_VALUE, LAST_FOUR_CHARACTERS, FIRST_FOUR_CHARACTERS, EMAIL_MASK, DATE_YEAR_MASK.
	PredefinedExpression *string `json:"predefinedExpression,omitempty" tf:"predefined_expression,omitempty"`

	// The name of the BigQuery routine that contains the custom masking routine, in the format of projects/{projectNumber}/datasets/{dataset_id}/routines/{routine_id}.
	Routine *string `json:"routine,omitempty" tf:"routine,omitempty"`
}

type DataMaskingPolicyParameters struct {

	// The available masking rules. Learn more here: https://cloud.google.com/bigquery/docs/column-data-masking-intro#masking_options.
	// Possible values are: SHA256, ALWAYS_NULL, DEFAULT_MASKING_VALUE, LAST_FOUR_CHARACTERS, FIRST_FOUR_CHARACTERS, EMAIL_MASK, DATE_YEAR_MASK.
	// +kubebuilder:validation:Optional
	PredefinedExpression *string `json:"predefinedExpression,omitempty" tf:"predefined_expression,omitempty"`

	// The name of the BigQuery routine that contains the custom masking routine, in the format of projects/{projectNumber}/datasets/{dataset_id}/routines/{routine_id}.
	// +crossplane:generate:reference:type=github.com/upbound/provider-gcp/apis/bigquery/v1beta2.Routine
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	Routine *string `json:"routine,omitempty" tf:"routine,omitempty"`

	// Reference to a Routine in bigquery to populate routine.
	// +kubebuilder:validation:Optional
	RoutineRef *v1.Reference `json:"routineRef,omitempty" tf:"-"`

	// Selector for a Routine in bigquery to populate routine.
	// +kubebuilder:validation:Optional
	RoutineSelector *v1.Selector `json:"routineSelector,omitempty" tf:"-"`
}

type DatapolicyDataPolicyInitParameters struct {

	// The data masking policy that specifies the data masking rule to use.
	// Structure is documented below.
	DataMaskingPolicy *DataMaskingPolicyInitParameters `json:"dataMaskingPolicy,omitempty" tf:"data_masking_policy,omitempty"`

	// The enrollment level of the service.
	// Possible values are: COLUMN_LEVEL_SECURITY_POLICY, DATA_MASKING_POLICY.
	DataPolicyType *string `json:"dataPolicyType,omitempty" tf:"data_policy_type,omitempty"`

	// Policy tag resource name, in the format of projects/{project_number}/locations/{locationId}/taxonomies/{taxonomyId}/policyTags/{policyTag_id}.
	// +crossplane:generate:reference:type=github.com/upbound/provider-gcp/apis/datacatalog/v1beta1.PolicyTag
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractParamPath("name",true)
	PolicyTag *string `json:"policyTag,omitempty" tf:"policy_tag,omitempty"`

	// Reference to a PolicyTag in datacatalog to populate policyTag.
	// +kubebuilder:validation:Optional
	PolicyTagRef *v1.Reference `json:"policyTagRef,omitempty" tf:"-"`

	// Selector for a PolicyTag in datacatalog to populate policyTag.
	// +kubebuilder:validation:Optional
	PolicyTagSelector *v1.Selector `json:"policyTagSelector,omitempty" tf:"-"`
}

type DatapolicyDataPolicyObservation struct {

	// The data masking policy that specifies the data masking rule to use.
	// Structure is documented below.
	DataMaskingPolicy *DataMaskingPolicyObservation `json:"dataMaskingPolicy,omitempty" tf:"data_masking_policy,omitempty"`

	// The enrollment level of the service.
	// Possible values are: COLUMN_LEVEL_SECURITY_POLICY, DATA_MASKING_POLICY.
	DataPolicyType *string `json:"dataPolicyType,omitempty" tf:"data_policy_type,omitempty"`

	// an identifier for the resource with format projects/{{project}}/locations/{{location}}/dataPolicies/{{data_policy_id}}
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// The name of the location of the data policy.
	Location *string `json:"location,omitempty" tf:"location,omitempty"`

	// Resource name of this data policy, in the format of projects/{project_number}/locations/{locationId}/dataPolicies/{dataPolicyId}.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Policy tag resource name, in the format of projects/{project_number}/locations/{locationId}/taxonomies/{taxonomyId}/policyTags/{policyTag_id}.
	PolicyTag *string `json:"policyTag,omitempty" tf:"policy_tag,omitempty"`

	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project *string `json:"project,omitempty" tf:"project,omitempty"`
}

type DatapolicyDataPolicyParameters struct {

	// The data masking policy that specifies the data masking rule to use.
	// Structure is documented below.
	// +kubebuilder:validation:Optional
	DataMaskingPolicy *DataMaskingPolicyParameters `json:"dataMaskingPolicy,omitempty" tf:"data_masking_policy,omitempty"`

	// The enrollment level of the service.
	// Possible values are: COLUMN_LEVEL_SECURITY_POLICY, DATA_MASKING_POLICY.
	// +kubebuilder:validation:Optional
	DataPolicyType *string `json:"dataPolicyType,omitempty" tf:"data_policy_type,omitempty"`

	// The name of the location of the data policy.
	// +kubebuilder:validation:Required
	Location *string `json:"location" tf:"location,omitempty"`

	// Policy tag resource name, in the format of projects/{project_number}/locations/{locationId}/taxonomies/{taxonomyId}/policyTags/{policyTag_id}.
	// +crossplane:generate:reference:type=github.com/upbound/provider-gcp/apis/datacatalog/v1beta1.PolicyTag
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractParamPath("name",true)
	// +kubebuilder:validation:Optional
	PolicyTag *string `json:"policyTag,omitempty" tf:"policy_tag,omitempty"`

	// Reference to a PolicyTag in datacatalog to populate policyTag.
	// +kubebuilder:validation:Optional
	PolicyTagRef *v1.Reference `json:"policyTagRef,omitempty" tf:"-"`

	// Selector for a PolicyTag in datacatalog to populate policyTag.
	// +kubebuilder:validation:Optional
	PolicyTagSelector *v1.Selector `json:"policyTagSelector,omitempty" tf:"-"`

	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	// +kubebuilder:validation:Optional
	Project *string `json:"project,omitempty" tf:"project,omitempty"`
}

// DatapolicyDataPolicySpec defines the desired state of DatapolicyDataPolicy
type DatapolicyDataPolicySpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     DatapolicyDataPolicyParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider DatapolicyDataPolicyInitParameters `json:"initProvider,omitempty"`
}

// DatapolicyDataPolicyStatus defines the observed state of DatapolicyDataPolicy.
type DatapolicyDataPolicyStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        DatapolicyDataPolicyObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// DatapolicyDataPolicy is the Schema for the DatapolicyDataPolicys API. A BigQuery Data Policy
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,gcp}
type DatapolicyDataPolicy struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.dataPolicyType) || (has(self.initProvider) && has(self.initProvider.dataPolicyType))",message="spec.forProvider.dataPolicyType is a required parameter"
	Spec   DatapolicyDataPolicySpec   `json:"spec"`
	Status DatapolicyDataPolicyStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// DatapolicyDataPolicyList contains a list of DatapolicyDataPolicys
type DatapolicyDataPolicyList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []DatapolicyDataPolicy `json:"items"`
}

// Repository type metadata.
var (
	DatapolicyDataPolicy_Kind             = "DatapolicyDataPolicy"
	DatapolicyDataPolicy_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: DatapolicyDataPolicy_Kind}.String()
	DatapolicyDataPolicy_KindAPIVersion   = DatapolicyDataPolicy_Kind + "." + CRDGroupVersion.String()
	DatapolicyDataPolicy_GroupVersionKind = CRDGroupVersion.WithKind(DatapolicyDataPolicy_Kind)
)

func init() {
	SchemeBuilder.Register(&DatapolicyDataPolicy{}, &DatapolicyDataPolicyList{})
}
