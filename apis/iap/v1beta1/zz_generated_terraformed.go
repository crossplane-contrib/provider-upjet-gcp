/*
Copyright 2021 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by upjet. DO NOT EDIT.

package v1beta1

import (
	"github.com/pkg/errors"

	"github.com/upbound/upjet/pkg/resource"
	"github.com/upbound/upjet/pkg/resource/json"
)

<<<<<<< HEAD
// GetTerraformResourceType returns Terraform resource type for this AppEngineServiceIAMMember
func (mg *AppEngineServiceIAMMember) GetTerraformResourceType() string {
	return "google_iap_app_engine_service_iam_member"
}

// GetConnectionDetailsMapping for this AppEngineServiceIAMMember
func (tr *AppEngineServiceIAMMember) GetConnectionDetailsMapping() map[string]string {
	return nil
}

// GetObservation of this AppEngineServiceIAMMember
func (tr *AppEngineServiceIAMMember) GetObservation() (map[string]any, error) {
	o, err := json.TFParser.Marshal(tr.Status.AtProvider)
	if err != nil {
		return nil, err
	}
	base := map[string]any{}
	return base, json.TFParser.Unmarshal(o, &base)
}

// SetObservation for this AppEngineServiceIAMMember
func (tr *AppEngineServiceIAMMember) SetObservation(obs map[string]any) error {
	p, err := json.TFParser.Marshal(obs)
	if err != nil {
		return err
	}
	return json.TFParser.Unmarshal(p, &tr.Status.AtProvider)
}

// GetID returns ID of underlying Terraform resource of this AppEngineServiceIAMMember
func (tr *AppEngineServiceIAMMember) GetID() string {
	if tr.Status.AtProvider.ID == nil {
		return ""
	}
	return *tr.Status.AtProvider.ID
}

// GetParameters of this AppEngineServiceIAMMember
func (tr *AppEngineServiceIAMMember) GetParameters() (map[string]any, error) {
	p, err := json.TFParser.Marshal(tr.Spec.ForProvider)
	if err != nil {
		return nil, err
	}
	base := map[string]any{}
	return base, json.TFParser.Unmarshal(p, &base)
}

// SetParameters for this AppEngineServiceIAMMember
func (tr *AppEngineServiceIAMMember) SetParameters(params map[string]any) error {
	p, err := json.TFParser.Marshal(params)
	if err != nil {
		return err
	}
	return json.TFParser.Unmarshal(p, &tr.Spec.ForProvider)
}

// GetInitParameters of this AppEngineServiceIAMMember
func (tr *AppEngineServiceIAMMember) GetInitParameters() (map[string]any, error) {
	p, err := json.TFParser.Marshal(tr.Spec.InitProvider)
	if err != nil {
		return nil, err
	}
	base := map[string]any{}
	return base, json.TFParser.Unmarshal(p, &base)
}

// LateInitialize this AppEngineServiceIAMMember using its observed tfState.
// returns True if there are any spec changes for the resource.
func (tr *AppEngineServiceIAMMember) LateInitialize(attrs []byte) (bool, error) {
	params := &AppEngineServiceIAMMemberParameters{}
	if err := json.TFParser.Unmarshal(attrs, params); err != nil {
		return false, errors.Wrap(err, "failed to unmarshal Terraform state parameters for late-initialization")
	}
	opts := []resource.GenericLateInitializerOption{resource.WithZeroValueJSONOmitEmptyFilter(resource.CNameWildcard)}

	li := resource.NewGenericLateInitializer(opts...)
	return li.LateInitialize(&tr.Spec.ForProvider, params)
}

// GetTerraformSchemaVersion returns the associated Terraform schema version
func (tr *AppEngineServiceIAMMember) GetTerraformSchemaVersion() int {
	return 0
}

// GetTerraformResourceType returns Terraform resource type for this AppEngineVersionIAMMember
func (mg *AppEngineVersionIAMMember) GetTerraformResourceType() string {
	return "google_iap_app_engine_version_iam_member"
}

// GetConnectionDetailsMapping for this AppEngineVersionIAMMember
func (tr *AppEngineVersionIAMMember) GetConnectionDetailsMapping() map[string]string {
	return nil
}

// GetObservation of this AppEngineVersionIAMMember
func (tr *AppEngineVersionIAMMember) GetObservation() (map[string]any, error) {
	o, err := json.TFParser.Marshal(tr.Status.AtProvider)
	if err != nil {
		return nil, err
	}
	base := map[string]any{}
	return base, json.TFParser.Unmarshal(o, &base)
}

// SetObservation for this AppEngineVersionIAMMember
func (tr *AppEngineVersionIAMMember) SetObservation(obs map[string]any) error {
	p, err := json.TFParser.Marshal(obs)
	if err != nil {
		return err
	}
	return json.TFParser.Unmarshal(p, &tr.Status.AtProvider)
}

// GetID returns ID of underlying Terraform resource of this AppEngineVersionIAMMember
func (tr *AppEngineVersionIAMMember) GetID() string {
	if tr.Status.AtProvider.ID == nil {
		return ""
	}
	return *tr.Status.AtProvider.ID
}

// GetParameters of this AppEngineVersionIAMMember
func (tr *AppEngineVersionIAMMember) GetParameters() (map[string]any, error) {
	p, err := json.TFParser.Marshal(tr.Spec.ForProvider)
	if err != nil {
		return nil, err
	}
	base := map[string]any{}
	return base, json.TFParser.Unmarshal(p, &base)
}

// SetParameters for this AppEngineVersionIAMMember
func (tr *AppEngineVersionIAMMember) SetParameters(params map[string]any) error {
	p, err := json.TFParser.Marshal(params)
	if err != nil {
		return err
	}
	return json.TFParser.Unmarshal(p, &tr.Spec.ForProvider)
}

// GetInitParameters of this AppEngineVersionIAMMember
func (tr *AppEngineVersionIAMMember) GetInitParameters() (map[string]any, error) {
	p, err := json.TFParser.Marshal(tr.Spec.InitProvider)
	if err != nil {
		return nil, err
	}
	base := map[string]any{}
	return base, json.TFParser.Unmarshal(p, &base)
}

// LateInitialize this AppEngineVersionIAMMember using its observed tfState.
// returns True if there are any spec changes for the resource.
func (tr *AppEngineVersionIAMMember) LateInitialize(attrs []byte) (bool, error) {
	params := &AppEngineVersionIAMMemberParameters{}
	if err := json.TFParser.Unmarshal(attrs, params); err != nil {
		return false, errors.Wrap(err, "failed to unmarshal Terraform state parameters for late-initialization")
	}
	opts := []resource.GenericLateInitializerOption{resource.WithZeroValueJSONOmitEmptyFilter(resource.CNameWildcard)}

	li := resource.NewGenericLateInitializer(opts...)
	return li.LateInitialize(&tr.Spec.ForProvider, params)
}

// GetTerraformSchemaVersion returns the associated Terraform schema version
func (tr *AppEngineVersionIAMMember) GetTerraformSchemaVersion() int {
	return 0
}

// GetTerraformResourceType returns Terraform resource type for this TunnelIAMMember
func (mg *TunnelIAMMember) GetTerraformResourceType() string {
	return "google_iap_tunnel_iam_member"
}

// GetConnectionDetailsMapping for this TunnelIAMMember
func (tr *TunnelIAMMember) GetConnectionDetailsMapping() map[string]string {
	return nil
}

// GetObservation of this TunnelIAMMember
func (tr *TunnelIAMMember) GetObservation() (map[string]any, error) {
	o, err := json.TFParser.Marshal(tr.Status.AtProvider)
	if err != nil {
		return nil, err
	}
	base := map[string]any{}
	return base, json.TFParser.Unmarshal(o, &base)
}

// SetObservation for this TunnelIAMMember
func (tr *TunnelIAMMember) SetObservation(obs map[string]any) error {
	p, err := json.TFParser.Marshal(obs)
	if err != nil {
		return err
	}
	return json.TFParser.Unmarshal(p, &tr.Status.AtProvider)
}

// GetID returns ID of underlying Terraform resource of this TunnelIAMMember
func (tr *TunnelIAMMember) GetID() string {
	if tr.Status.AtProvider.ID == nil {
		return ""
	}
	return *tr.Status.AtProvider.ID
}

// GetParameters of this TunnelIAMMember
func (tr *TunnelIAMMember) GetParameters() (map[string]any, error) {
	p, err := json.TFParser.Marshal(tr.Spec.ForProvider)
	if err != nil {
		return nil, err
	}
	base := map[string]any{}
	return base, json.TFParser.Unmarshal(p, &base)
}

// SetParameters for this TunnelIAMMember
func (tr *TunnelIAMMember) SetParameters(params map[string]any) error {
	p, err := json.TFParser.Marshal(params)
	if err != nil {
		return err
	}
	return json.TFParser.Unmarshal(p, &tr.Spec.ForProvider)
}

// GetInitParameters of this TunnelIAMMember
func (tr *TunnelIAMMember) GetInitParameters() (map[string]any, error) {
	p, err := json.TFParser.Marshal(tr.Spec.InitProvider)
	if err != nil {
		return nil, err
	}
	base := map[string]any{}
	return base, json.TFParser.Unmarshal(p, &base)
}

// LateInitialize this TunnelIAMMember using its observed tfState.
// returns True if there are any spec changes for the resource.
func (tr *TunnelIAMMember) LateInitialize(attrs []byte) (bool, error) {
	params := &TunnelIAMMemberParameters{}
	if err := json.TFParser.Unmarshal(attrs, params); err != nil {
		return false, errors.Wrap(err, "failed to unmarshal Terraform state parameters for late-initialization")
	}
	opts := []resource.GenericLateInitializerOption{resource.WithZeroValueJSONOmitEmptyFilter(resource.CNameWildcard)}

	li := resource.NewGenericLateInitializer(opts...)
	return li.LateInitialize(&tr.Spec.ForProvider, params)
}

// GetTerraformSchemaVersion returns the associated Terraform schema version
func (tr *TunnelIAMMember) GetTerraformSchemaVersion() int {
	return 0
}

=======
>>>>>>> a3be7bc6 (Remove unneeded resources)
// GetTerraformResourceType returns Terraform resource type for this WebBackendServiceIAMMember
func (mg *WebBackendServiceIAMMember) GetTerraformResourceType() string {
	return "google_iap_web_backend_service_iam_member"
}

// GetConnectionDetailsMapping for this WebBackendServiceIAMMember
func (tr *WebBackendServiceIAMMember) GetConnectionDetailsMapping() map[string]string {
	return nil
}

// GetObservation of this WebBackendServiceIAMMember
func (tr *WebBackendServiceIAMMember) GetObservation() (map[string]any, error) {
	o, err := json.TFParser.Marshal(tr.Status.AtProvider)
	if err != nil {
		return nil, err
	}
	base := map[string]any{}
	return base, json.TFParser.Unmarshal(o, &base)
}

// SetObservation for this WebBackendServiceIAMMember
func (tr *WebBackendServiceIAMMember) SetObservation(obs map[string]any) error {
	p, err := json.TFParser.Marshal(obs)
	if err != nil {
		return err
	}
	return json.TFParser.Unmarshal(p, &tr.Status.AtProvider)
}

// GetID returns ID of underlying Terraform resource of this WebBackendServiceIAMMember
func (tr *WebBackendServiceIAMMember) GetID() string {
	if tr.Status.AtProvider.ID == nil {
		return ""
	}
	return *tr.Status.AtProvider.ID
}

// GetParameters of this WebBackendServiceIAMMember
func (tr *WebBackendServiceIAMMember) GetParameters() (map[string]any, error) {
	p, err := json.TFParser.Marshal(tr.Spec.ForProvider)
	if err != nil {
		return nil, err
	}
	base := map[string]any{}
	return base, json.TFParser.Unmarshal(p, &base)
}

// SetParameters for this WebBackendServiceIAMMember
func (tr *WebBackendServiceIAMMember) SetParameters(params map[string]any) error {
	p, err := json.TFParser.Marshal(params)
	if err != nil {
		return err
	}
	return json.TFParser.Unmarshal(p, &tr.Spec.ForProvider)
}

// GetInitParameters of this WebBackendServiceIAMMember
func (tr *WebBackendServiceIAMMember) GetInitParameters() (map[string]any, error) {
	p, err := json.TFParser.Marshal(tr.Spec.InitProvider)
	if err != nil {
		return nil, err
	}
	base := map[string]any{}
	return base, json.TFParser.Unmarshal(p, &base)
}

// LateInitialize this WebBackendServiceIAMMember using its observed tfState.
// returns True if there are any spec changes for the resource.
func (tr *WebBackendServiceIAMMember) LateInitialize(attrs []byte) (bool, error) {
	params := &WebBackendServiceIAMMemberParameters{}
	if err := json.TFParser.Unmarshal(attrs, params); err != nil {
		return false, errors.Wrap(err, "failed to unmarshal Terraform state parameters for late-initialization")
	}
	opts := []resource.GenericLateInitializerOption{resource.WithZeroValueJSONOmitEmptyFilter(resource.CNameWildcard)}

	li := resource.NewGenericLateInitializer(opts...)
	return li.LateInitialize(&tr.Spec.ForProvider, params)
}

// GetTerraformSchemaVersion returns the associated Terraform schema version
func (tr *WebBackendServiceIAMMember) GetTerraformSchemaVersion() int {
	return 0
}
<<<<<<< HEAD

// GetTerraformResourceType returns Terraform resource type for this WebIAMMember
func (mg *WebIAMMember) GetTerraformResourceType() string {
	return "google_iap_web_iam_member"
}

// GetConnectionDetailsMapping for this WebIAMMember
func (tr *WebIAMMember) GetConnectionDetailsMapping() map[string]string {
	return nil
}

// GetObservation of this WebIAMMember
func (tr *WebIAMMember) GetObservation() (map[string]any, error) {
	o, err := json.TFParser.Marshal(tr.Status.AtProvider)
	if err != nil {
		return nil, err
	}
	base := map[string]any{}
	return base, json.TFParser.Unmarshal(o, &base)
}

// SetObservation for this WebIAMMember
func (tr *WebIAMMember) SetObservation(obs map[string]any) error {
	p, err := json.TFParser.Marshal(obs)
	if err != nil {
		return err
	}
	return json.TFParser.Unmarshal(p, &tr.Status.AtProvider)
}

// GetID returns ID of underlying Terraform resource of this WebIAMMember
func (tr *WebIAMMember) GetID() string {
	if tr.Status.AtProvider.ID == nil {
		return ""
	}
	return *tr.Status.AtProvider.ID
}

// GetParameters of this WebIAMMember
func (tr *WebIAMMember) GetParameters() (map[string]any, error) {
	p, err := json.TFParser.Marshal(tr.Spec.ForProvider)
	if err != nil {
		return nil, err
	}
	base := map[string]any{}
	return base, json.TFParser.Unmarshal(p, &base)
}

// SetParameters for this WebIAMMember
func (tr *WebIAMMember) SetParameters(params map[string]any) error {
	p, err := json.TFParser.Marshal(params)
	if err != nil {
		return err
	}
	return json.TFParser.Unmarshal(p, &tr.Spec.ForProvider)
}

// GetInitParameters of this WebIAMMember
func (tr *WebIAMMember) GetInitParameters() (map[string]any, error) {
	p, err := json.TFParser.Marshal(tr.Spec.InitProvider)
	if err != nil {
		return nil, err
	}
	base := map[string]any{}
	return base, json.TFParser.Unmarshal(p, &base)
}

// LateInitialize this WebIAMMember using its observed tfState.
// returns True if there are any spec changes for the resource.
func (tr *WebIAMMember) LateInitialize(attrs []byte) (bool, error) {
	params := &WebIAMMemberParameters{}
	if err := json.TFParser.Unmarshal(attrs, params); err != nil {
		return false, errors.Wrap(err, "failed to unmarshal Terraform state parameters for late-initialization")
	}
	opts := []resource.GenericLateInitializerOption{resource.WithZeroValueJSONOmitEmptyFilter(resource.CNameWildcard)}

	li := resource.NewGenericLateInitializer(opts...)
	return li.LateInitialize(&tr.Spec.ForProvider, params)
}

// GetTerraformSchemaVersion returns the associated Terraform schema version
func (tr *WebIAMMember) GetTerraformSchemaVersion() int {
	return 0
}

// GetTerraformResourceType returns Terraform resource type for this WebTypeAppEngineIAMMember
func (mg *WebTypeAppEngineIAMMember) GetTerraformResourceType() string {
	return "google_iap_web_type_app_engine_iam_member"
}

// GetConnectionDetailsMapping for this WebTypeAppEngineIAMMember
func (tr *WebTypeAppEngineIAMMember) GetConnectionDetailsMapping() map[string]string {
	return nil
}

// GetObservation of this WebTypeAppEngineIAMMember
func (tr *WebTypeAppEngineIAMMember) GetObservation() (map[string]any, error) {
	o, err := json.TFParser.Marshal(tr.Status.AtProvider)
	if err != nil {
		return nil, err
	}
	base := map[string]any{}
	return base, json.TFParser.Unmarshal(o, &base)
}

// SetObservation for this WebTypeAppEngineIAMMember
func (tr *WebTypeAppEngineIAMMember) SetObservation(obs map[string]any) error {
	p, err := json.TFParser.Marshal(obs)
	if err != nil {
		return err
	}
	return json.TFParser.Unmarshal(p, &tr.Status.AtProvider)
}

// GetID returns ID of underlying Terraform resource of this WebTypeAppEngineIAMMember
func (tr *WebTypeAppEngineIAMMember) GetID() string {
	if tr.Status.AtProvider.ID == nil {
		return ""
	}
	return *tr.Status.AtProvider.ID
}

// GetParameters of this WebTypeAppEngineIAMMember
func (tr *WebTypeAppEngineIAMMember) GetParameters() (map[string]any, error) {
	p, err := json.TFParser.Marshal(tr.Spec.ForProvider)
	if err != nil {
		return nil, err
	}
	base := map[string]any{}
	return base, json.TFParser.Unmarshal(p, &base)
}

// SetParameters for this WebTypeAppEngineIAMMember
func (tr *WebTypeAppEngineIAMMember) SetParameters(params map[string]any) error {
	p, err := json.TFParser.Marshal(params)
	if err != nil {
		return err
	}
	return json.TFParser.Unmarshal(p, &tr.Spec.ForProvider)
}

// GetInitParameters of this WebTypeAppEngineIAMMember
func (tr *WebTypeAppEngineIAMMember) GetInitParameters() (map[string]any, error) {
	p, err := json.TFParser.Marshal(tr.Spec.InitProvider)
	if err != nil {
		return nil, err
	}
	base := map[string]any{}
	return base, json.TFParser.Unmarshal(p, &base)
}

// LateInitialize this WebTypeAppEngineIAMMember using its observed tfState.
// returns True if there are any spec changes for the resource.
func (tr *WebTypeAppEngineIAMMember) LateInitialize(attrs []byte) (bool, error) {
	params := &WebTypeAppEngineIAMMemberParameters{}
	if err := json.TFParser.Unmarshal(attrs, params); err != nil {
		return false, errors.Wrap(err, "failed to unmarshal Terraform state parameters for late-initialization")
	}
	opts := []resource.GenericLateInitializerOption{resource.WithZeroValueJSONOmitEmptyFilter(resource.CNameWildcard)}

	li := resource.NewGenericLateInitializer(opts...)
	return li.LateInitialize(&tr.Spec.ForProvider, params)
}

// GetTerraformSchemaVersion returns the associated Terraform schema version
func (tr *WebTypeAppEngineIAMMember) GetTerraformSchemaVersion() int {
	return 0
}

// GetTerraformResourceType returns Terraform resource type for this WebTypeComputeIAMMember
func (mg *WebTypeComputeIAMMember) GetTerraformResourceType() string {
	return "google_iap_web_type_compute_iam_member"
}

// GetConnectionDetailsMapping for this WebTypeComputeIAMMember
func (tr *WebTypeComputeIAMMember) GetConnectionDetailsMapping() map[string]string {
	return nil
}

// GetObservation of this WebTypeComputeIAMMember
func (tr *WebTypeComputeIAMMember) GetObservation() (map[string]any, error) {
	o, err := json.TFParser.Marshal(tr.Status.AtProvider)
	if err != nil {
		return nil, err
	}
	base := map[string]any{}
	return base, json.TFParser.Unmarshal(o, &base)
}

// SetObservation for this WebTypeComputeIAMMember
func (tr *WebTypeComputeIAMMember) SetObservation(obs map[string]any) error {
	p, err := json.TFParser.Marshal(obs)
	if err != nil {
		return err
	}
	return json.TFParser.Unmarshal(p, &tr.Status.AtProvider)
}

// GetID returns ID of underlying Terraform resource of this WebTypeComputeIAMMember
func (tr *WebTypeComputeIAMMember) GetID() string {
	if tr.Status.AtProvider.ID == nil {
		return ""
	}
	return *tr.Status.AtProvider.ID
}

// GetParameters of this WebTypeComputeIAMMember
func (tr *WebTypeComputeIAMMember) GetParameters() (map[string]any, error) {
	p, err := json.TFParser.Marshal(tr.Spec.ForProvider)
	if err != nil {
		return nil, err
	}
	base := map[string]any{}
	return base, json.TFParser.Unmarshal(p, &base)
}

// SetParameters for this WebTypeComputeIAMMember
func (tr *WebTypeComputeIAMMember) SetParameters(params map[string]any) error {
	p, err := json.TFParser.Marshal(params)
	if err != nil {
		return err
	}
	return json.TFParser.Unmarshal(p, &tr.Spec.ForProvider)
}

// GetInitParameters of this WebTypeComputeIAMMember
func (tr *WebTypeComputeIAMMember) GetInitParameters() (map[string]any, error) {
	p, err := json.TFParser.Marshal(tr.Spec.InitProvider)
	if err != nil {
		return nil, err
	}
	base := map[string]any{}
	return base, json.TFParser.Unmarshal(p, &base)
}

// LateInitialize this WebTypeComputeIAMMember using its observed tfState.
// returns True if there are any spec changes for the resource.
func (tr *WebTypeComputeIAMMember) LateInitialize(attrs []byte) (bool, error) {
	params := &WebTypeComputeIAMMemberParameters{}
	if err := json.TFParser.Unmarshal(attrs, params); err != nil {
		return false, errors.Wrap(err, "failed to unmarshal Terraform state parameters for late-initialization")
	}
	opts := []resource.GenericLateInitializerOption{resource.WithZeroValueJSONOmitEmptyFilter(resource.CNameWildcard)}

	li := resource.NewGenericLateInitializer(opts...)
	return li.LateInitialize(&tr.Spec.ForProvider, params)
}

// GetTerraformSchemaVersion returns the associated Terraform schema version
func (tr *WebTypeComputeIAMMember) GetTerraformSchemaVersion() int {
	return 0
}
=======
>>>>>>> a3be7bc6 (Remove unneeded resources)
