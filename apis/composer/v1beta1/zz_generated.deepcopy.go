//go:build !ignore_autogenerated

// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by controller-gen. DO NOT EDIT.

package v1beta1

import (
	"github.com/crossplane/crossplane-runtime/apis/common/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AllowedIPRangeInitParameters) DeepCopyInto(out *AllowedIPRangeInitParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AllowedIPRangeInitParameters.
func (in *AllowedIPRangeInitParameters) DeepCopy() *AllowedIPRangeInitParameters {
	if in == nil {
		return nil
	}
	out := new(AllowedIPRangeInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AllowedIPRangeObservation) DeepCopyInto(out *AllowedIPRangeObservation) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AllowedIPRangeObservation.
func (in *AllowedIPRangeObservation) DeepCopy() *AllowedIPRangeObservation {
	if in == nil {
		return nil
	}
	out := new(AllowedIPRangeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AllowedIPRangeParameters) DeepCopyInto(out *AllowedIPRangeParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AllowedIPRangeParameters.
func (in *AllowedIPRangeParameters) DeepCopy() *AllowedIPRangeParameters {
	if in == nil {
		return nil
	}
	out := new(AllowedIPRangeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CidrBlocksInitParameters) DeepCopyInto(out *CidrBlocksInitParameters) {
	*out = *in
	if in.CidrBlock != nil {
		in, out := &in.CidrBlock, &out.CidrBlock
		*out = new(string)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CidrBlocksInitParameters.
func (in *CidrBlocksInitParameters) DeepCopy() *CidrBlocksInitParameters {
	if in == nil {
		return nil
	}
	out := new(CidrBlocksInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CidrBlocksObservation) DeepCopyInto(out *CidrBlocksObservation) {
	*out = *in
	if in.CidrBlock != nil {
		in, out := &in.CidrBlock, &out.CidrBlock
		*out = new(string)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CidrBlocksObservation.
func (in *CidrBlocksObservation) DeepCopy() *CidrBlocksObservation {
	if in == nil {
		return nil
	}
	out := new(CidrBlocksObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CidrBlocksParameters) DeepCopyInto(out *CidrBlocksParameters) {
	*out = *in
	if in.CidrBlock != nil {
		in, out := &in.CidrBlock, &out.CidrBlock
		*out = new(string)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CidrBlocksParameters.
func (in *CidrBlocksParameters) DeepCopy() *CidrBlocksParameters {
	if in == nil {
		return nil
	}
	out := new(CidrBlocksParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigInitParameters) DeepCopyInto(out *ConfigInitParameters) {
	*out = *in
	if in.DataRetentionConfig != nil {
		in, out := &in.DataRetentionConfig, &out.DataRetentionConfig
		*out = make([]DataRetentionConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DatabaseConfig != nil {
		in, out := &in.DatabaseConfig, &out.DatabaseConfig
		*out = make([]DatabaseConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EncryptionConfig != nil {
		in, out := &in.EncryptionConfig, &out.EncryptionConfig
		*out = make([]EncryptionConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EnvironmentSize != nil {
		in, out := &in.EnvironmentSize, &out.EnvironmentSize
		*out = new(string)
		**out = **in
	}
	if in.MaintenanceWindow != nil {
		in, out := &in.MaintenanceWindow, &out.MaintenanceWindow
		*out = make([]MaintenanceWindowInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MasterAuthorizedNetworksConfig != nil {
		in, out := &in.MasterAuthorizedNetworksConfig, &out.MasterAuthorizedNetworksConfig
		*out = make([]MasterAuthorizedNetworksConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NodeConfig != nil {
		in, out := &in.NodeConfig, &out.NodeConfig
		*out = make([]NodeConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NodeCount != nil {
		in, out := &in.NodeCount, &out.NodeCount
		*out = new(float64)
		**out = **in
	}
	if in.PrivateEnvironmentConfig != nil {
		in, out := &in.PrivateEnvironmentConfig, &out.PrivateEnvironmentConfig
		*out = make([]PrivateEnvironmentConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RecoveryConfig != nil {
		in, out := &in.RecoveryConfig, &out.RecoveryConfig
		*out = make([]RecoveryConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ResilienceMode != nil {
		in, out := &in.ResilienceMode, &out.ResilienceMode
		*out = new(string)
		**out = **in
	}
	if in.SoftwareConfig != nil {
		in, out := &in.SoftwareConfig, &out.SoftwareConfig
		*out = make([]SoftwareConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.WebServerConfig != nil {
		in, out := &in.WebServerConfig, &out.WebServerConfig
		*out = make([]WebServerConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.WebServerNetworkAccessControl != nil {
		in, out := &in.WebServerNetworkAccessControl, &out.WebServerNetworkAccessControl
		*out = make([]WebServerNetworkAccessControlInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.WorkloadsConfig != nil {
		in, out := &in.WorkloadsConfig, &out.WorkloadsConfig
		*out = make([]WorkloadsConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigInitParameters.
func (in *ConfigInitParameters) DeepCopy() *ConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(ConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigObservation) DeepCopyInto(out *ConfigObservation) {
	*out = *in
	if in.AirflowURI != nil {
		in, out := &in.AirflowURI, &out.AirflowURI
		*out = new(string)
		**out = **in
	}
	if in.DagGcsPrefix != nil {
		in, out := &in.DagGcsPrefix, &out.DagGcsPrefix
		*out = new(string)
		**out = **in
	}
	if in.DataRetentionConfig != nil {
		in, out := &in.DataRetentionConfig, &out.DataRetentionConfig
		*out = make([]DataRetentionConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DatabaseConfig != nil {
		in, out := &in.DatabaseConfig, &out.DatabaseConfig
		*out = make([]DatabaseConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EncryptionConfig != nil {
		in, out := &in.EncryptionConfig, &out.EncryptionConfig
		*out = make([]EncryptionConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EnvironmentSize != nil {
		in, out := &in.EnvironmentSize, &out.EnvironmentSize
		*out = new(string)
		**out = **in
	}
	if in.GkeCluster != nil {
		in, out := &in.GkeCluster, &out.GkeCluster
		*out = new(string)
		**out = **in
	}
	if in.MaintenanceWindow != nil {
		in, out := &in.MaintenanceWindow, &out.MaintenanceWindow
		*out = make([]MaintenanceWindowObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MasterAuthorizedNetworksConfig != nil {
		in, out := &in.MasterAuthorizedNetworksConfig, &out.MasterAuthorizedNetworksConfig
		*out = make([]MasterAuthorizedNetworksConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NodeConfig != nil {
		in, out := &in.NodeConfig, &out.NodeConfig
		*out = make([]NodeConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NodeCount != nil {
		in, out := &in.NodeCount, &out.NodeCount
		*out = new(float64)
		**out = **in
	}
	if in.PrivateEnvironmentConfig != nil {
		in, out := &in.PrivateEnvironmentConfig, &out.PrivateEnvironmentConfig
		*out = make([]PrivateEnvironmentConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RecoveryConfig != nil {
		in, out := &in.RecoveryConfig, &out.RecoveryConfig
		*out = make([]RecoveryConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ResilienceMode != nil {
		in, out := &in.ResilienceMode, &out.ResilienceMode
		*out = new(string)
		**out = **in
	}
	if in.SoftwareConfig != nil {
		in, out := &in.SoftwareConfig, &out.SoftwareConfig
		*out = make([]SoftwareConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.WebServerConfig != nil {
		in, out := &in.WebServerConfig, &out.WebServerConfig
		*out = make([]WebServerConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.WebServerNetworkAccessControl != nil {
		in, out := &in.WebServerNetworkAccessControl, &out.WebServerNetworkAccessControl
		*out = make([]WebServerNetworkAccessControlObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.WorkloadsConfig != nil {
		in, out := &in.WorkloadsConfig, &out.WorkloadsConfig
		*out = make([]WorkloadsConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigObservation.
func (in *ConfigObservation) DeepCopy() *ConfigObservation {
	if in == nil {
		return nil
	}
	out := new(ConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigParameters) DeepCopyInto(out *ConfigParameters) {
	*out = *in
	if in.DataRetentionConfig != nil {
		in, out := &in.DataRetentionConfig, &out.DataRetentionConfig
		*out = make([]DataRetentionConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DatabaseConfig != nil {
		in, out := &in.DatabaseConfig, &out.DatabaseConfig
		*out = make([]DatabaseConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EncryptionConfig != nil {
		in, out := &in.EncryptionConfig, &out.EncryptionConfig
		*out = make([]EncryptionConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EnvironmentSize != nil {
		in, out := &in.EnvironmentSize, &out.EnvironmentSize
		*out = new(string)
		**out = **in
	}
	if in.MaintenanceWindow != nil {
		in, out := &in.MaintenanceWindow, &out.MaintenanceWindow
		*out = make([]MaintenanceWindowParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MasterAuthorizedNetworksConfig != nil {
		in, out := &in.MasterAuthorizedNetworksConfig, &out.MasterAuthorizedNetworksConfig
		*out = make([]MasterAuthorizedNetworksConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NodeConfig != nil {
		in, out := &in.NodeConfig, &out.NodeConfig
		*out = make([]NodeConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NodeCount != nil {
		in, out := &in.NodeCount, &out.NodeCount
		*out = new(float64)
		**out = **in
	}
	if in.PrivateEnvironmentConfig != nil {
		in, out := &in.PrivateEnvironmentConfig, &out.PrivateEnvironmentConfig
		*out = make([]PrivateEnvironmentConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RecoveryConfig != nil {
		in, out := &in.RecoveryConfig, &out.RecoveryConfig
		*out = make([]RecoveryConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ResilienceMode != nil {
		in, out := &in.ResilienceMode, &out.ResilienceMode
		*out = new(string)
		**out = **in
	}
	if in.SoftwareConfig != nil {
		in, out := &in.SoftwareConfig, &out.SoftwareConfig
		*out = make([]SoftwareConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.WebServerConfig != nil {
		in, out := &in.WebServerConfig, &out.WebServerConfig
		*out = make([]WebServerConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.WebServerNetworkAccessControl != nil {
		in, out := &in.WebServerNetworkAccessControl, &out.WebServerNetworkAccessControl
		*out = make([]WebServerNetworkAccessControlParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.WorkloadsConfig != nil {
		in, out := &in.WorkloadsConfig, &out.WorkloadsConfig
		*out = make([]WorkloadsConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigParameters.
func (in *ConfigParameters) DeepCopy() *ConfigParameters {
	if in == nil {
		return nil
	}
	out := new(ConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataRetentionConfigInitParameters) DeepCopyInto(out *DataRetentionConfigInitParameters) {
	*out = *in
	if in.TaskLogsRetentionConfig != nil {
		in, out := &in.TaskLogsRetentionConfig, &out.TaskLogsRetentionConfig
		*out = make([]TaskLogsRetentionConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataRetentionConfigInitParameters.
func (in *DataRetentionConfigInitParameters) DeepCopy() *DataRetentionConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(DataRetentionConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataRetentionConfigObservation) DeepCopyInto(out *DataRetentionConfigObservation) {
	*out = *in
	if in.TaskLogsRetentionConfig != nil {
		in, out := &in.TaskLogsRetentionConfig, &out.TaskLogsRetentionConfig
		*out = make([]TaskLogsRetentionConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataRetentionConfigObservation.
func (in *DataRetentionConfigObservation) DeepCopy() *DataRetentionConfigObservation {
	if in == nil {
		return nil
	}
	out := new(DataRetentionConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataRetentionConfigParameters) DeepCopyInto(out *DataRetentionConfigParameters) {
	*out = *in
	if in.TaskLogsRetentionConfig != nil {
		in, out := &in.TaskLogsRetentionConfig, &out.TaskLogsRetentionConfig
		*out = make([]TaskLogsRetentionConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataRetentionConfigParameters.
func (in *DataRetentionConfigParameters) DeepCopy() *DataRetentionConfigParameters {
	if in == nil {
		return nil
	}
	out := new(DataRetentionConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatabaseConfigInitParameters) DeepCopyInto(out *DatabaseConfigInitParameters) {
	*out = *in
	if in.MachineType != nil {
		in, out := &in.MachineType, &out.MachineType
		*out = new(string)
		**out = **in
	}
	if in.Zone != nil {
		in, out := &in.Zone, &out.Zone
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatabaseConfigInitParameters.
func (in *DatabaseConfigInitParameters) DeepCopy() *DatabaseConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(DatabaseConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatabaseConfigObservation) DeepCopyInto(out *DatabaseConfigObservation) {
	*out = *in
	if in.MachineType != nil {
		in, out := &in.MachineType, &out.MachineType
		*out = new(string)
		**out = **in
	}
	if in.Zone != nil {
		in, out := &in.Zone, &out.Zone
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatabaseConfigObservation.
func (in *DatabaseConfigObservation) DeepCopy() *DatabaseConfigObservation {
	if in == nil {
		return nil
	}
	out := new(DatabaseConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatabaseConfigParameters) DeepCopyInto(out *DatabaseConfigParameters) {
	*out = *in
	if in.MachineType != nil {
		in, out := &in.MachineType, &out.MachineType
		*out = new(string)
		**out = **in
	}
	if in.Zone != nil {
		in, out := &in.Zone, &out.Zone
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatabaseConfigParameters.
func (in *DatabaseConfigParameters) DeepCopy() *DatabaseConfigParameters {
	if in == nil {
		return nil
	}
	out := new(DatabaseConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EncryptionConfigInitParameters) DeepCopyInto(out *EncryptionConfigInitParameters) {
	*out = *in
	if in.KMSKeyName != nil {
		in, out := &in.KMSKeyName, &out.KMSKeyName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EncryptionConfigInitParameters.
func (in *EncryptionConfigInitParameters) DeepCopy() *EncryptionConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(EncryptionConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EncryptionConfigObservation) DeepCopyInto(out *EncryptionConfigObservation) {
	*out = *in
	if in.KMSKeyName != nil {
		in, out := &in.KMSKeyName, &out.KMSKeyName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EncryptionConfigObservation.
func (in *EncryptionConfigObservation) DeepCopy() *EncryptionConfigObservation {
	if in == nil {
		return nil
	}
	out := new(EncryptionConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EncryptionConfigParameters) DeepCopyInto(out *EncryptionConfigParameters) {
	*out = *in
	if in.KMSKeyName != nil {
		in, out := &in.KMSKeyName, &out.KMSKeyName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EncryptionConfigParameters.
func (in *EncryptionConfigParameters) DeepCopy() *EncryptionConfigParameters {
	if in == nil {
		return nil
	}
	out := new(EncryptionConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Environment) DeepCopyInto(out *Environment) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Environment.
func (in *Environment) DeepCopy() *Environment {
	if in == nil {
		return nil
	}
	out := new(Environment)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Environment) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EnvironmentInitParameters) DeepCopyInto(out *EnvironmentInitParameters) {
	*out = *in
	if in.Config != nil {
		in, out := &in.Config, &out.Config
		*out = make([]ConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.ProjectRef != nil {
		in, out := &in.ProjectRef, &out.ProjectRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ProjectSelector != nil {
		in, out := &in.ProjectSelector, &out.ProjectSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.StorageConfig != nil {
		in, out := &in.StorageConfig, &out.StorageConfig
		*out = make([]StorageConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EnvironmentInitParameters.
func (in *EnvironmentInitParameters) DeepCopy() *EnvironmentInitParameters {
	if in == nil {
		return nil
	}
	out := new(EnvironmentInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EnvironmentList) DeepCopyInto(out *EnvironmentList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Environment, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EnvironmentList.
func (in *EnvironmentList) DeepCopy() *EnvironmentList {
	if in == nil {
		return nil
	}
	out := new(EnvironmentList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *EnvironmentList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EnvironmentObservation) DeepCopyInto(out *EnvironmentObservation) {
	*out = *in
	if in.Config != nil {
		in, out := &in.Config, &out.Config
		*out = make([]ConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EffectiveLabels != nil {
		in, out := &in.EffectiveLabels, &out.EffectiveLabels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.StorageConfig != nil {
		in, out := &in.StorageConfig, &out.StorageConfig
		*out = make([]StorageConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TerraformLabels != nil {
		in, out := &in.TerraformLabels, &out.TerraformLabels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EnvironmentObservation.
func (in *EnvironmentObservation) DeepCopy() *EnvironmentObservation {
	if in == nil {
		return nil
	}
	out := new(EnvironmentObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EnvironmentParameters) DeepCopyInto(out *EnvironmentParameters) {
	*out = *in
	if in.Config != nil {
		in, out := &in.Config, &out.Config
		*out = make([]ConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.ProjectRef != nil {
		in, out := &in.ProjectRef, &out.ProjectRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ProjectSelector != nil {
		in, out := &in.ProjectSelector, &out.ProjectSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.StorageConfig != nil {
		in, out := &in.StorageConfig, &out.StorageConfig
		*out = make([]StorageConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EnvironmentParameters.
func (in *EnvironmentParameters) DeepCopy() *EnvironmentParameters {
	if in == nil {
		return nil
	}
	out := new(EnvironmentParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EnvironmentSpec) DeepCopyInto(out *EnvironmentSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EnvironmentSpec.
func (in *EnvironmentSpec) DeepCopy() *EnvironmentSpec {
	if in == nil {
		return nil
	}
	out := new(EnvironmentSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EnvironmentStatus) DeepCopyInto(out *EnvironmentStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EnvironmentStatus.
func (in *EnvironmentStatus) DeepCopy() *EnvironmentStatus {
	if in == nil {
		return nil
	}
	out := new(EnvironmentStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IPAllocationPolicyInitParameters) DeepCopyInto(out *IPAllocationPolicyInitParameters) {
	*out = *in
	if in.ClusterIPv4CidrBlock != nil {
		in, out := &in.ClusterIPv4CidrBlock, &out.ClusterIPv4CidrBlock
		*out = new(string)
		**out = **in
	}
	if in.ClusterSecondaryRangeName != nil {
		in, out := &in.ClusterSecondaryRangeName, &out.ClusterSecondaryRangeName
		*out = new(string)
		**out = **in
	}
	if in.ServicesIPv4CidrBlock != nil {
		in, out := &in.ServicesIPv4CidrBlock, &out.ServicesIPv4CidrBlock
		*out = new(string)
		**out = **in
	}
	if in.ServicesSecondaryRangeName != nil {
		in, out := &in.ServicesSecondaryRangeName, &out.ServicesSecondaryRangeName
		*out = new(string)
		**out = **in
	}
	if in.UseIPAliases != nil {
		in, out := &in.UseIPAliases, &out.UseIPAliases
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IPAllocationPolicyInitParameters.
func (in *IPAllocationPolicyInitParameters) DeepCopy() *IPAllocationPolicyInitParameters {
	if in == nil {
		return nil
	}
	out := new(IPAllocationPolicyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IPAllocationPolicyObservation) DeepCopyInto(out *IPAllocationPolicyObservation) {
	*out = *in
	if in.ClusterIPv4CidrBlock != nil {
		in, out := &in.ClusterIPv4CidrBlock, &out.ClusterIPv4CidrBlock
		*out = new(string)
		**out = **in
	}
	if in.ClusterSecondaryRangeName != nil {
		in, out := &in.ClusterSecondaryRangeName, &out.ClusterSecondaryRangeName
		*out = new(string)
		**out = **in
	}
	if in.ServicesIPv4CidrBlock != nil {
		in, out := &in.ServicesIPv4CidrBlock, &out.ServicesIPv4CidrBlock
		*out = new(string)
		**out = **in
	}
	if in.ServicesSecondaryRangeName != nil {
		in, out := &in.ServicesSecondaryRangeName, &out.ServicesSecondaryRangeName
		*out = new(string)
		**out = **in
	}
	if in.UseIPAliases != nil {
		in, out := &in.UseIPAliases, &out.UseIPAliases
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IPAllocationPolicyObservation.
func (in *IPAllocationPolicyObservation) DeepCopy() *IPAllocationPolicyObservation {
	if in == nil {
		return nil
	}
	out := new(IPAllocationPolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IPAllocationPolicyParameters) DeepCopyInto(out *IPAllocationPolicyParameters) {
	*out = *in
	if in.ClusterIPv4CidrBlock != nil {
		in, out := &in.ClusterIPv4CidrBlock, &out.ClusterIPv4CidrBlock
		*out = new(string)
		**out = **in
	}
	if in.ClusterSecondaryRangeName != nil {
		in, out := &in.ClusterSecondaryRangeName, &out.ClusterSecondaryRangeName
		*out = new(string)
		**out = **in
	}
	if in.ServicesIPv4CidrBlock != nil {
		in, out := &in.ServicesIPv4CidrBlock, &out.ServicesIPv4CidrBlock
		*out = new(string)
		**out = **in
	}
	if in.ServicesSecondaryRangeName != nil {
		in, out := &in.ServicesSecondaryRangeName, &out.ServicesSecondaryRangeName
		*out = new(string)
		**out = **in
	}
	if in.UseIPAliases != nil {
		in, out := &in.UseIPAliases, &out.UseIPAliases
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IPAllocationPolicyParameters.
func (in *IPAllocationPolicyParameters) DeepCopy() *IPAllocationPolicyParameters {
	if in == nil {
		return nil
	}
	out := new(IPAllocationPolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MaintenanceWindowInitParameters) DeepCopyInto(out *MaintenanceWindowInitParameters) {
	*out = *in
	if in.EndTime != nil {
		in, out := &in.EndTime, &out.EndTime
		*out = new(string)
		**out = **in
	}
	if in.Recurrence != nil {
		in, out := &in.Recurrence, &out.Recurrence
		*out = new(string)
		**out = **in
	}
	if in.StartTime != nil {
		in, out := &in.StartTime, &out.StartTime
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MaintenanceWindowInitParameters.
func (in *MaintenanceWindowInitParameters) DeepCopy() *MaintenanceWindowInitParameters {
	if in == nil {
		return nil
	}
	out := new(MaintenanceWindowInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MaintenanceWindowObservation) DeepCopyInto(out *MaintenanceWindowObservation) {
	*out = *in
	if in.EndTime != nil {
		in, out := &in.EndTime, &out.EndTime
		*out = new(string)
		**out = **in
	}
	if in.Recurrence != nil {
		in, out := &in.Recurrence, &out.Recurrence
		*out = new(string)
		**out = **in
	}
	if in.StartTime != nil {
		in, out := &in.StartTime, &out.StartTime
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MaintenanceWindowObservation.
func (in *MaintenanceWindowObservation) DeepCopy() *MaintenanceWindowObservation {
	if in == nil {
		return nil
	}
	out := new(MaintenanceWindowObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MaintenanceWindowParameters) DeepCopyInto(out *MaintenanceWindowParameters) {
	*out = *in
	if in.EndTime != nil {
		in, out := &in.EndTime, &out.EndTime
		*out = new(string)
		**out = **in
	}
	if in.Recurrence != nil {
		in, out := &in.Recurrence, &out.Recurrence
		*out = new(string)
		**out = **in
	}
	if in.StartTime != nil {
		in, out := &in.StartTime, &out.StartTime
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MaintenanceWindowParameters.
func (in *MaintenanceWindowParameters) DeepCopy() *MaintenanceWindowParameters {
	if in == nil {
		return nil
	}
	out := new(MaintenanceWindowParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MasterAuthorizedNetworksConfigInitParameters) DeepCopyInto(out *MasterAuthorizedNetworksConfigInitParameters) {
	*out = *in
	if in.CidrBlocks != nil {
		in, out := &in.CidrBlocks, &out.CidrBlocks
		*out = make([]CidrBlocksInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MasterAuthorizedNetworksConfigInitParameters.
func (in *MasterAuthorizedNetworksConfigInitParameters) DeepCopy() *MasterAuthorizedNetworksConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(MasterAuthorizedNetworksConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MasterAuthorizedNetworksConfigObservation) DeepCopyInto(out *MasterAuthorizedNetworksConfigObservation) {
	*out = *in
	if in.CidrBlocks != nil {
		in, out := &in.CidrBlocks, &out.CidrBlocks
		*out = make([]CidrBlocksObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MasterAuthorizedNetworksConfigObservation.
func (in *MasterAuthorizedNetworksConfigObservation) DeepCopy() *MasterAuthorizedNetworksConfigObservation {
	if in == nil {
		return nil
	}
	out := new(MasterAuthorizedNetworksConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MasterAuthorizedNetworksConfigParameters) DeepCopyInto(out *MasterAuthorizedNetworksConfigParameters) {
	*out = *in
	if in.CidrBlocks != nil {
		in, out := &in.CidrBlocks, &out.CidrBlocks
		*out = make([]CidrBlocksParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MasterAuthorizedNetworksConfigParameters.
func (in *MasterAuthorizedNetworksConfigParameters) DeepCopy() *MasterAuthorizedNetworksConfigParameters {
	if in == nil {
		return nil
	}
	out := new(MasterAuthorizedNetworksConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodeConfigInitParameters) DeepCopyInto(out *NodeConfigInitParameters) {
	*out = *in
	if in.DiskSizeGb != nil {
		in, out := &in.DiskSizeGb, &out.DiskSizeGb
		*out = new(float64)
		**out = **in
	}
	if in.EnableIPMasqAgent != nil {
		in, out := &in.EnableIPMasqAgent, &out.EnableIPMasqAgent
		*out = new(bool)
		**out = **in
	}
	if in.IPAllocationPolicy != nil {
		in, out := &in.IPAllocationPolicy, &out.IPAllocationPolicy
		*out = make([]IPAllocationPolicyInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MachineType != nil {
		in, out := &in.MachineType, &out.MachineType
		*out = new(string)
		**out = **in
	}
	if in.Network != nil {
		in, out := &in.Network, &out.Network
		*out = new(string)
		**out = **in
	}
	if in.NetworkRef != nil {
		in, out := &in.NetworkRef, &out.NetworkRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.NetworkSelector != nil {
		in, out := &in.NetworkSelector, &out.NetworkSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.OAuthScopes != nil {
		in, out := &in.OAuthScopes, &out.OAuthScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ServiceAccount != nil {
		in, out := &in.ServiceAccount, &out.ServiceAccount
		*out = new(string)
		**out = **in
	}
	if in.ServiceAccountRef != nil {
		in, out := &in.ServiceAccountRef, &out.ServiceAccountRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ServiceAccountSelector != nil {
		in, out := &in.ServiceAccountSelector, &out.ServiceAccountSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Subnetwork != nil {
		in, out := &in.Subnetwork, &out.Subnetwork
		*out = new(string)
		**out = **in
	}
	if in.SubnetworkRef != nil {
		in, out := &in.SubnetworkRef, &out.SubnetworkRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SubnetworkSelector != nil {
		in, out := &in.SubnetworkSelector, &out.SubnetworkSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Zone != nil {
		in, out := &in.Zone, &out.Zone
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodeConfigInitParameters.
func (in *NodeConfigInitParameters) DeepCopy() *NodeConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(NodeConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodeConfigObservation) DeepCopyInto(out *NodeConfigObservation) {
	*out = *in
	if in.DiskSizeGb != nil {
		in, out := &in.DiskSizeGb, &out.DiskSizeGb
		*out = new(float64)
		**out = **in
	}
	if in.EnableIPMasqAgent != nil {
		in, out := &in.EnableIPMasqAgent, &out.EnableIPMasqAgent
		*out = new(bool)
		**out = **in
	}
	if in.IPAllocationPolicy != nil {
		in, out := &in.IPAllocationPolicy, &out.IPAllocationPolicy
		*out = make([]IPAllocationPolicyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MachineType != nil {
		in, out := &in.MachineType, &out.MachineType
		*out = new(string)
		**out = **in
	}
	if in.Network != nil {
		in, out := &in.Network, &out.Network
		*out = new(string)
		**out = **in
	}
	if in.OAuthScopes != nil {
		in, out := &in.OAuthScopes, &out.OAuthScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ServiceAccount != nil {
		in, out := &in.ServiceAccount, &out.ServiceAccount
		*out = new(string)
		**out = **in
	}
	if in.Subnetwork != nil {
		in, out := &in.Subnetwork, &out.Subnetwork
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Zone != nil {
		in, out := &in.Zone, &out.Zone
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodeConfigObservation.
func (in *NodeConfigObservation) DeepCopy() *NodeConfigObservation {
	if in == nil {
		return nil
	}
	out := new(NodeConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodeConfigParameters) DeepCopyInto(out *NodeConfigParameters) {
	*out = *in
	if in.DiskSizeGb != nil {
		in, out := &in.DiskSizeGb, &out.DiskSizeGb
		*out = new(float64)
		**out = **in
	}
	if in.EnableIPMasqAgent != nil {
		in, out := &in.EnableIPMasqAgent, &out.EnableIPMasqAgent
		*out = new(bool)
		**out = **in
	}
	if in.IPAllocationPolicy != nil {
		in, out := &in.IPAllocationPolicy, &out.IPAllocationPolicy
		*out = make([]IPAllocationPolicyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MachineType != nil {
		in, out := &in.MachineType, &out.MachineType
		*out = new(string)
		**out = **in
	}
	if in.Network != nil {
		in, out := &in.Network, &out.Network
		*out = new(string)
		**out = **in
	}
	if in.NetworkRef != nil {
		in, out := &in.NetworkRef, &out.NetworkRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.NetworkSelector != nil {
		in, out := &in.NetworkSelector, &out.NetworkSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.OAuthScopes != nil {
		in, out := &in.OAuthScopes, &out.OAuthScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ServiceAccount != nil {
		in, out := &in.ServiceAccount, &out.ServiceAccount
		*out = new(string)
		**out = **in
	}
	if in.ServiceAccountRef != nil {
		in, out := &in.ServiceAccountRef, &out.ServiceAccountRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ServiceAccountSelector != nil {
		in, out := &in.ServiceAccountSelector, &out.ServiceAccountSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Subnetwork != nil {
		in, out := &in.Subnetwork, &out.Subnetwork
		*out = new(string)
		**out = **in
	}
	if in.SubnetworkRef != nil {
		in, out := &in.SubnetworkRef, &out.SubnetworkRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SubnetworkSelector != nil {
		in, out := &in.SubnetworkSelector, &out.SubnetworkSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Zone != nil {
		in, out := &in.Zone, &out.Zone
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodeConfigParameters.
func (in *NodeConfigParameters) DeepCopy() *NodeConfigParameters {
	if in == nil {
		return nil
	}
	out := new(NodeConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateEnvironmentConfigInitParameters) DeepCopyInto(out *PrivateEnvironmentConfigInitParameters) {
	*out = *in
	if in.CloudComposerConnectionSubnetwork != nil {
		in, out := &in.CloudComposerConnectionSubnetwork, &out.CloudComposerConnectionSubnetwork
		*out = new(string)
		**out = **in
	}
	if in.CloudComposerNetworkIPv4CidrBlock != nil {
		in, out := &in.CloudComposerNetworkIPv4CidrBlock, &out.CloudComposerNetworkIPv4CidrBlock
		*out = new(string)
		**out = **in
	}
	if in.CloudSQLIPv4CidrBlock != nil {
		in, out := &in.CloudSQLIPv4CidrBlock, &out.CloudSQLIPv4CidrBlock
		*out = new(string)
		**out = **in
	}
	if in.ConnectionType != nil {
		in, out := &in.ConnectionType, &out.ConnectionType
		*out = new(string)
		**out = **in
	}
	if in.EnablePrivateEndpoint != nil {
		in, out := &in.EnablePrivateEndpoint, &out.EnablePrivateEndpoint
		*out = new(bool)
		**out = **in
	}
	if in.EnablePrivatelyUsedPublicIps != nil {
		in, out := &in.EnablePrivatelyUsedPublicIps, &out.EnablePrivatelyUsedPublicIps
		*out = new(bool)
		**out = **in
	}
	if in.MasterIPv4CidrBlock != nil {
		in, out := &in.MasterIPv4CidrBlock, &out.MasterIPv4CidrBlock
		*out = new(string)
		**out = **in
	}
	if in.WebServerIPv4CidrBlock != nil {
		in, out := &in.WebServerIPv4CidrBlock, &out.WebServerIPv4CidrBlock
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateEnvironmentConfigInitParameters.
func (in *PrivateEnvironmentConfigInitParameters) DeepCopy() *PrivateEnvironmentConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(PrivateEnvironmentConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateEnvironmentConfigObservation) DeepCopyInto(out *PrivateEnvironmentConfigObservation) {
	*out = *in
	if in.CloudComposerConnectionSubnetwork != nil {
		in, out := &in.CloudComposerConnectionSubnetwork, &out.CloudComposerConnectionSubnetwork
		*out = new(string)
		**out = **in
	}
	if in.CloudComposerNetworkIPv4CidrBlock != nil {
		in, out := &in.CloudComposerNetworkIPv4CidrBlock, &out.CloudComposerNetworkIPv4CidrBlock
		*out = new(string)
		**out = **in
	}
	if in.CloudSQLIPv4CidrBlock != nil {
		in, out := &in.CloudSQLIPv4CidrBlock, &out.CloudSQLIPv4CidrBlock
		*out = new(string)
		**out = **in
	}
	if in.ConnectionType != nil {
		in, out := &in.ConnectionType, &out.ConnectionType
		*out = new(string)
		**out = **in
	}
	if in.EnablePrivateEndpoint != nil {
		in, out := &in.EnablePrivateEndpoint, &out.EnablePrivateEndpoint
		*out = new(bool)
		**out = **in
	}
	if in.EnablePrivatelyUsedPublicIps != nil {
		in, out := &in.EnablePrivatelyUsedPublicIps, &out.EnablePrivatelyUsedPublicIps
		*out = new(bool)
		**out = **in
	}
	if in.MasterIPv4CidrBlock != nil {
		in, out := &in.MasterIPv4CidrBlock, &out.MasterIPv4CidrBlock
		*out = new(string)
		**out = **in
	}
	if in.WebServerIPv4CidrBlock != nil {
		in, out := &in.WebServerIPv4CidrBlock, &out.WebServerIPv4CidrBlock
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateEnvironmentConfigObservation.
func (in *PrivateEnvironmentConfigObservation) DeepCopy() *PrivateEnvironmentConfigObservation {
	if in == nil {
		return nil
	}
	out := new(PrivateEnvironmentConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateEnvironmentConfigParameters) DeepCopyInto(out *PrivateEnvironmentConfigParameters) {
	*out = *in
	if in.CloudComposerConnectionSubnetwork != nil {
		in, out := &in.CloudComposerConnectionSubnetwork, &out.CloudComposerConnectionSubnetwork
		*out = new(string)
		**out = **in
	}
	if in.CloudComposerNetworkIPv4CidrBlock != nil {
		in, out := &in.CloudComposerNetworkIPv4CidrBlock, &out.CloudComposerNetworkIPv4CidrBlock
		*out = new(string)
		**out = **in
	}
	if in.CloudSQLIPv4CidrBlock != nil {
		in, out := &in.CloudSQLIPv4CidrBlock, &out.CloudSQLIPv4CidrBlock
		*out = new(string)
		**out = **in
	}
	if in.ConnectionType != nil {
		in, out := &in.ConnectionType, &out.ConnectionType
		*out = new(string)
		**out = **in
	}
	if in.EnablePrivateEndpoint != nil {
		in, out := &in.EnablePrivateEndpoint, &out.EnablePrivateEndpoint
		*out = new(bool)
		**out = **in
	}
	if in.EnablePrivatelyUsedPublicIps != nil {
		in, out := &in.EnablePrivatelyUsedPublicIps, &out.EnablePrivatelyUsedPublicIps
		*out = new(bool)
		**out = **in
	}
	if in.MasterIPv4CidrBlock != nil {
		in, out := &in.MasterIPv4CidrBlock, &out.MasterIPv4CidrBlock
		*out = new(string)
		**out = **in
	}
	if in.WebServerIPv4CidrBlock != nil {
		in, out := &in.WebServerIPv4CidrBlock, &out.WebServerIPv4CidrBlock
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateEnvironmentConfigParameters.
func (in *PrivateEnvironmentConfigParameters) DeepCopy() *PrivateEnvironmentConfigParameters {
	if in == nil {
		return nil
	}
	out := new(PrivateEnvironmentConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RecoveryConfigInitParameters) DeepCopyInto(out *RecoveryConfigInitParameters) {
	*out = *in
	if in.ScheduledSnapshotsConfig != nil {
		in, out := &in.ScheduledSnapshotsConfig, &out.ScheduledSnapshotsConfig
		*out = make([]ScheduledSnapshotsConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RecoveryConfigInitParameters.
func (in *RecoveryConfigInitParameters) DeepCopy() *RecoveryConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(RecoveryConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RecoveryConfigObservation) DeepCopyInto(out *RecoveryConfigObservation) {
	*out = *in
	if in.ScheduledSnapshotsConfig != nil {
		in, out := &in.ScheduledSnapshotsConfig, &out.ScheduledSnapshotsConfig
		*out = make([]ScheduledSnapshotsConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RecoveryConfigObservation.
func (in *RecoveryConfigObservation) DeepCopy() *RecoveryConfigObservation {
	if in == nil {
		return nil
	}
	out := new(RecoveryConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RecoveryConfigParameters) DeepCopyInto(out *RecoveryConfigParameters) {
	*out = *in
	if in.ScheduledSnapshotsConfig != nil {
		in, out := &in.ScheduledSnapshotsConfig, &out.ScheduledSnapshotsConfig
		*out = make([]ScheduledSnapshotsConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RecoveryConfigParameters.
func (in *RecoveryConfigParameters) DeepCopy() *RecoveryConfigParameters {
	if in == nil {
		return nil
	}
	out := new(RecoveryConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScheduledSnapshotsConfigInitParameters) DeepCopyInto(out *ScheduledSnapshotsConfigInitParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.SnapshotCreationSchedule != nil {
		in, out := &in.SnapshotCreationSchedule, &out.SnapshotCreationSchedule
		*out = new(string)
		**out = **in
	}
	if in.SnapshotLocation != nil {
		in, out := &in.SnapshotLocation, &out.SnapshotLocation
		*out = new(string)
		**out = **in
	}
	if in.TimeZone != nil {
		in, out := &in.TimeZone, &out.TimeZone
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScheduledSnapshotsConfigInitParameters.
func (in *ScheduledSnapshotsConfigInitParameters) DeepCopy() *ScheduledSnapshotsConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(ScheduledSnapshotsConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScheduledSnapshotsConfigObservation) DeepCopyInto(out *ScheduledSnapshotsConfigObservation) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.SnapshotCreationSchedule != nil {
		in, out := &in.SnapshotCreationSchedule, &out.SnapshotCreationSchedule
		*out = new(string)
		**out = **in
	}
	if in.SnapshotLocation != nil {
		in, out := &in.SnapshotLocation, &out.SnapshotLocation
		*out = new(string)
		**out = **in
	}
	if in.TimeZone != nil {
		in, out := &in.TimeZone, &out.TimeZone
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScheduledSnapshotsConfigObservation.
func (in *ScheduledSnapshotsConfigObservation) DeepCopy() *ScheduledSnapshotsConfigObservation {
	if in == nil {
		return nil
	}
	out := new(ScheduledSnapshotsConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScheduledSnapshotsConfigParameters) DeepCopyInto(out *ScheduledSnapshotsConfigParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.SnapshotCreationSchedule != nil {
		in, out := &in.SnapshotCreationSchedule, &out.SnapshotCreationSchedule
		*out = new(string)
		**out = **in
	}
	if in.SnapshotLocation != nil {
		in, out := &in.SnapshotLocation, &out.SnapshotLocation
		*out = new(string)
		**out = **in
	}
	if in.TimeZone != nil {
		in, out := &in.TimeZone, &out.TimeZone
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScheduledSnapshotsConfigParameters.
func (in *ScheduledSnapshotsConfigParameters) DeepCopy() *ScheduledSnapshotsConfigParameters {
	if in == nil {
		return nil
	}
	out := new(ScheduledSnapshotsConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SchedulerInitParameters) DeepCopyInto(out *SchedulerInitParameters) {
	*out = *in
	if in.CPU != nil {
		in, out := &in.CPU, &out.CPU
		*out = new(float64)
		**out = **in
	}
	if in.Count != nil {
		in, out := &in.Count, &out.Count
		*out = new(float64)
		**out = **in
	}
	if in.MemoryGb != nil {
		in, out := &in.MemoryGb, &out.MemoryGb
		*out = new(float64)
		**out = **in
	}
	if in.StorageGb != nil {
		in, out := &in.StorageGb, &out.StorageGb
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SchedulerInitParameters.
func (in *SchedulerInitParameters) DeepCopy() *SchedulerInitParameters {
	if in == nil {
		return nil
	}
	out := new(SchedulerInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SchedulerObservation) DeepCopyInto(out *SchedulerObservation) {
	*out = *in
	if in.CPU != nil {
		in, out := &in.CPU, &out.CPU
		*out = new(float64)
		**out = **in
	}
	if in.Count != nil {
		in, out := &in.Count, &out.Count
		*out = new(float64)
		**out = **in
	}
	if in.MemoryGb != nil {
		in, out := &in.MemoryGb, &out.MemoryGb
		*out = new(float64)
		**out = **in
	}
	if in.StorageGb != nil {
		in, out := &in.StorageGb, &out.StorageGb
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SchedulerObservation.
func (in *SchedulerObservation) DeepCopy() *SchedulerObservation {
	if in == nil {
		return nil
	}
	out := new(SchedulerObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SchedulerParameters) DeepCopyInto(out *SchedulerParameters) {
	*out = *in
	if in.CPU != nil {
		in, out := &in.CPU, &out.CPU
		*out = new(float64)
		**out = **in
	}
	if in.Count != nil {
		in, out := &in.Count, &out.Count
		*out = new(float64)
		**out = **in
	}
	if in.MemoryGb != nil {
		in, out := &in.MemoryGb, &out.MemoryGb
		*out = new(float64)
		**out = **in
	}
	if in.StorageGb != nil {
		in, out := &in.StorageGb, &out.StorageGb
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SchedulerParameters.
func (in *SchedulerParameters) DeepCopy() *SchedulerParameters {
	if in == nil {
		return nil
	}
	out := new(SchedulerParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SoftwareConfigInitParameters) DeepCopyInto(out *SoftwareConfigInitParameters) {
	*out = *in
	if in.AirflowConfigOverrides != nil {
		in, out := &in.AirflowConfigOverrides, &out.AirflowConfigOverrides
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.EnvVariables != nil {
		in, out := &in.EnvVariables, &out.EnvVariables
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ImageVersion != nil {
		in, out := &in.ImageVersion, &out.ImageVersion
		*out = new(string)
		**out = **in
	}
	if in.PypiPackages != nil {
		in, out := &in.PypiPackages, &out.PypiPackages
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.PythonVersion != nil {
		in, out := &in.PythonVersion, &out.PythonVersion
		*out = new(string)
		**out = **in
	}
	if in.SchedulerCount != nil {
		in, out := &in.SchedulerCount, &out.SchedulerCount
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SoftwareConfigInitParameters.
func (in *SoftwareConfigInitParameters) DeepCopy() *SoftwareConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(SoftwareConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SoftwareConfigObservation) DeepCopyInto(out *SoftwareConfigObservation) {
	*out = *in
	if in.AirflowConfigOverrides != nil {
		in, out := &in.AirflowConfigOverrides, &out.AirflowConfigOverrides
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.EnvVariables != nil {
		in, out := &in.EnvVariables, &out.EnvVariables
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ImageVersion != nil {
		in, out := &in.ImageVersion, &out.ImageVersion
		*out = new(string)
		**out = **in
	}
	if in.PypiPackages != nil {
		in, out := &in.PypiPackages, &out.PypiPackages
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.PythonVersion != nil {
		in, out := &in.PythonVersion, &out.PythonVersion
		*out = new(string)
		**out = **in
	}
	if in.SchedulerCount != nil {
		in, out := &in.SchedulerCount, &out.SchedulerCount
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SoftwareConfigObservation.
func (in *SoftwareConfigObservation) DeepCopy() *SoftwareConfigObservation {
	if in == nil {
		return nil
	}
	out := new(SoftwareConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SoftwareConfigParameters) DeepCopyInto(out *SoftwareConfigParameters) {
	*out = *in
	if in.AirflowConfigOverrides != nil {
		in, out := &in.AirflowConfigOverrides, &out.AirflowConfigOverrides
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.EnvVariables != nil {
		in, out := &in.EnvVariables, &out.EnvVariables
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ImageVersion != nil {
		in, out := &in.ImageVersion, &out.ImageVersion
		*out = new(string)
		**out = **in
	}
	if in.PypiPackages != nil {
		in, out := &in.PypiPackages, &out.PypiPackages
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.PythonVersion != nil {
		in, out := &in.PythonVersion, &out.PythonVersion
		*out = new(string)
		**out = **in
	}
	if in.SchedulerCount != nil {
		in, out := &in.SchedulerCount, &out.SchedulerCount
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SoftwareConfigParameters.
func (in *SoftwareConfigParameters) DeepCopy() *SoftwareConfigParameters {
	if in == nil {
		return nil
	}
	out := new(SoftwareConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StorageConfigInitParameters) DeepCopyInto(out *StorageConfigInitParameters) {
	*out = *in
	if in.Bucket != nil {
		in, out := &in.Bucket, &out.Bucket
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StorageConfigInitParameters.
func (in *StorageConfigInitParameters) DeepCopy() *StorageConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(StorageConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StorageConfigObservation) DeepCopyInto(out *StorageConfigObservation) {
	*out = *in
	if in.Bucket != nil {
		in, out := &in.Bucket, &out.Bucket
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StorageConfigObservation.
func (in *StorageConfigObservation) DeepCopy() *StorageConfigObservation {
	if in == nil {
		return nil
	}
	out := new(StorageConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StorageConfigParameters) DeepCopyInto(out *StorageConfigParameters) {
	*out = *in
	if in.Bucket != nil {
		in, out := &in.Bucket, &out.Bucket
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StorageConfigParameters.
func (in *StorageConfigParameters) DeepCopy() *StorageConfigParameters {
	if in == nil {
		return nil
	}
	out := new(StorageConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskLogsRetentionConfigInitParameters) DeepCopyInto(out *TaskLogsRetentionConfigInitParameters) {
	*out = *in
	if in.StorageMode != nil {
		in, out := &in.StorageMode, &out.StorageMode
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskLogsRetentionConfigInitParameters.
func (in *TaskLogsRetentionConfigInitParameters) DeepCopy() *TaskLogsRetentionConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(TaskLogsRetentionConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskLogsRetentionConfigObservation) DeepCopyInto(out *TaskLogsRetentionConfigObservation) {
	*out = *in
	if in.StorageMode != nil {
		in, out := &in.StorageMode, &out.StorageMode
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskLogsRetentionConfigObservation.
func (in *TaskLogsRetentionConfigObservation) DeepCopy() *TaskLogsRetentionConfigObservation {
	if in == nil {
		return nil
	}
	out := new(TaskLogsRetentionConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskLogsRetentionConfigParameters) DeepCopyInto(out *TaskLogsRetentionConfigParameters) {
	*out = *in
	if in.StorageMode != nil {
		in, out := &in.StorageMode, &out.StorageMode
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskLogsRetentionConfigParameters.
func (in *TaskLogsRetentionConfigParameters) DeepCopy() *TaskLogsRetentionConfigParameters {
	if in == nil {
		return nil
	}
	out := new(TaskLogsRetentionConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TriggererInitParameters) DeepCopyInto(out *TriggererInitParameters) {
	*out = *in
	if in.CPU != nil {
		in, out := &in.CPU, &out.CPU
		*out = new(float64)
		**out = **in
	}
	if in.Count != nil {
		in, out := &in.Count, &out.Count
		*out = new(float64)
		**out = **in
	}
	if in.MemoryGb != nil {
		in, out := &in.MemoryGb, &out.MemoryGb
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TriggererInitParameters.
func (in *TriggererInitParameters) DeepCopy() *TriggererInitParameters {
	if in == nil {
		return nil
	}
	out := new(TriggererInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TriggererObservation) DeepCopyInto(out *TriggererObservation) {
	*out = *in
	if in.CPU != nil {
		in, out := &in.CPU, &out.CPU
		*out = new(float64)
		**out = **in
	}
	if in.Count != nil {
		in, out := &in.Count, &out.Count
		*out = new(float64)
		**out = **in
	}
	if in.MemoryGb != nil {
		in, out := &in.MemoryGb, &out.MemoryGb
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TriggererObservation.
func (in *TriggererObservation) DeepCopy() *TriggererObservation {
	if in == nil {
		return nil
	}
	out := new(TriggererObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TriggererParameters) DeepCopyInto(out *TriggererParameters) {
	*out = *in
	if in.CPU != nil {
		in, out := &in.CPU, &out.CPU
		*out = new(float64)
		**out = **in
	}
	if in.Count != nil {
		in, out := &in.Count, &out.Count
		*out = new(float64)
		**out = **in
	}
	if in.MemoryGb != nil {
		in, out := &in.MemoryGb, &out.MemoryGb
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TriggererParameters.
func (in *TriggererParameters) DeepCopy() *TriggererParameters {
	if in == nil {
		return nil
	}
	out := new(TriggererParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WebServerConfigInitParameters) DeepCopyInto(out *WebServerConfigInitParameters) {
	*out = *in
	if in.MachineType != nil {
		in, out := &in.MachineType, &out.MachineType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WebServerConfigInitParameters.
func (in *WebServerConfigInitParameters) DeepCopy() *WebServerConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(WebServerConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WebServerConfigObservation) DeepCopyInto(out *WebServerConfigObservation) {
	*out = *in
	if in.MachineType != nil {
		in, out := &in.MachineType, &out.MachineType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WebServerConfigObservation.
func (in *WebServerConfigObservation) DeepCopy() *WebServerConfigObservation {
	if in == nil {
		return nil
	}
	out := new(WebServerConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WebServerConfigParameters) DeepCopyInto(out *WebServerConfigParameters) {
	*out = *in
	if in.MachineType != nil {
		in, out := &in.MachineType, &out.MachineType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WebServerConfigParameters.
func (in *WebServerConfigParameters) DeepCopy() *WebServerConfigParameters {
	if in == nil {
		return nil
	}
	out := new(WebServerConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WebServerInitParameters) DeepCopyInto(out *WebServerInitParameters) {
	*out = *in
	if in.CPU != nil {
		in, out := &in.CPU, &out.CPU
		*out = new(float64)
		**out = **in
	}
	if in.MemoryGb != nil {
		in, out := &in.MemoryGb, &out.MemoryGb
		*out = new(float64)
		**out = **in
	}
	if in.StorageGb != nil {
		in, out := &in.StorageGb, &out.StorageGb
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WebServerInitParameters.
func (in *WebServerInitParameters) DeepCopy() *WebServerInitParameters {
	if in == nil {
		return nil
	}
	out := new(WebServerInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WebServerNetworkAccessControlInitParameters) DeepCopyInto(out *WebServerNetworkAccessControlInitParameters) {
	*out = *in
	if in.AllowedIPRange != nil {
		in, out := &in.AllowedIPRange, &out.AllowedIPRange
		*out = make([]AllowedIPRangeInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WebServerNetworkAccessControlInitParameters.
func (in *WebServerNetworkAccessControlInitParameters) DeepCopy() *WebServerNetworkAccessControlInitParameters {
	if in == nil {
		return nil
	}
	out := new(WebServerNetworkAccessControlInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WebServerNetworkAccessControlObservation) DeepCopyInto(out *WebServerNetworkAccessControlObservation) {
	*out = *in
	if in.AllowedIPRange != nil {
		in, out := &in.AllowedIPRange, &out.AllowedIPRange
		*out = make([]AllowedIPRangeObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WebServerNetworkAccessControlObservation.
func (in *WebServerNetworkAccessControlObservation) DeepCopy() *WebServerNetworkAccessControlObservation {
	if in == nil {
		return nil
	}
	out := new(WebServerNetworkAccessControlObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WebServerNetworkAccessControlParameters) DeepCopyInto(out *WebServerNetworkAccessControlParameters) {
	*out = *in
	if in.AllowedIPRange != nil {
		in, out := &in.AllowedIPRange, &out.AllowedIPRange
		*out = make([]AllowedIPRangeParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WebServerNetworkAccessControlParameters.
func (in *WebServerNetworkAccessControlParameters) DeepCopy() *WebServerNetworkAccessControlParameters {
	if in == nil {
		return nil
	}
	out := new(WebServerNetworkAccessControlParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WebServerObservation) DeepCopyInto(out *WebServerObservation) {
	*out = *in
	if in.CPU != nil {
		in, out := &in.CPU, &out.CPU
		*out = new(float64)
		**out = **in
	}
	if in.MemoryGb != nil {
		in, out := &in.MemoryGb, &out.MemoryGb
		*out = new(float64)
		**out = **in
	}
	if in.StorageGb != nil {
		in, out := &in.StorageGb, &out.StorageGb
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WebServerObservation.
func (in *WebServerObservation) DeepCopy() *WebServerObservation {
	if in == nil {
		return nil
	}
	out := new(WebServerObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WebServerParameters) DeepCopyInto(out *WebServerParameters) {
	*out = *in
	if in.CPU != nil {
		in, out := &in.CPU, &out.CPU
		*out = new(float64)
		**out = **in
	}
	if in.MemoryGb != nil {
		in, out := &in.MemoryGb, &out.MemoryGb
		*out = new(float64)
		**out = **in
	}
	if in.StorageGb != nil {
		in, out := &in.StorageGb, &out.StorageGb
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WebServerParameters.
func (in *WebServerParameters) DeepCopy() *WebServerParameters {
	if in == nil {
		return nil
	}
	out := new(WebServerParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkerInitParameters) DeepCopyInto(out *WorkerInitParameters) {
	*out = *in
	if in.CPU != nil {
		in, out := &in.CPU, &out.CPU
		*out = new(float64)
		**out = **in
	}
	if in.MaxCount != nil {
		in, out := &in.MaxCount, &out.MaxCount
		*out = new(float64)
		**out = **in
	}
	if in.MemoryGb != nil {
		in, out := &in.MemoryGb, &out.MemoryGb
		*out = new(float64)
		**out = **in
	}
	if in.MinCount != nil {
		in, out := &in.MinCount, &out.MinCount
		*out = new(float64)
		**out = **in
	}
	if in.StorageGb != nil {
		in, out := &in.StorageGb, &out.StorageGb
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkerInitParameters.
func (in *WorkerInitParameters) DeepCopy() *WorkerInitParameters {
	if in == nil {
		return nil
	}
	out := new(WorkerInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkerObservation) DeepCopyInto(out *WorkerObservation) {
	*out = *in
	if in.CPU != nil {
		in, out := &in.CPU, &out.CPU
		*out = new(float64)
		**out = **in
	}
	if in.MaxCount != nil {
		in, out := &in.MaxCount, &out.MaxCount
		*out = new(float64)
		**out = **in
	}
	if in.MemoryGb != nil {
		in, out := &in.MemoryGb, &out.MemoryGb
		*out = new(float64)
		**out = **in
	}
	if in.MinCount != nil {
		in, out := &in.MinCount, &out.MinCount
		*out = new(float64)
		**out = **in
	}
	if in.StorageGb != nil {
		in, out := &in.StorageGb, &out.StorageGb
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkerObservation.
func (in *WorkerObservation) DeepCopy() *WorkerObservation {
	if in == nil {
		return nil
	}
	out := new(WorkerObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkerParameters) DeepCopyInto(out *WorkerParameters) {
	*out = *in
	if in.CPU != nil {
		in, out := &in.CPU, &out.CPU
		*out = new(float64)
		**out = **in
	}
	if in.MaxCount != nil {
		in, out := &in.MaxCount, &out.MaxCount
		*out = new(float64)
		**out = **in
	}
	if in.MemoryGb != nil {
		in, out := &in.MemoryGb, &out.MemoryGb
		*out = new(float64)
		**out = **in
	}
	if in.MinCount != nil {
		in, out := &in.MinCount, &out.MinCount
		*out = new(float64)
		**out = **in
	}
	if in.StorageGb != nil {
		in, out := &in.StorageGb, &out.StorageGb
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkerParameters.
func (in *WorkerParameters) DeepCopy() *WorkerParameters {
	if in == nil {
		return nil
	}
	out := new(WorkerParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkloadsConfigInitParameters) DeepCopyInto(out *WorkloadsConfigInitParameters) {
	*out = *in
	if in.Scheduler != nil {
		in, out := &in.Scheduler, &out.Scheduler
		*out = make([]SchedulerInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Triggerer != nil {
		in, out := &in.Triggerer, &out.Triggerer
		*out = make([]TriggererInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.WebServer != nil {
		in, out := &in.WebServer, &out.WebServer
		*out = make([]WebServerInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Worker != nil {
		in, out := &in.Worker, &out.Worker
		*out = make([]WorkerInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkloadsConfigInitParameters.
func (in *WorkloadsConfigInitParameters) DeepCopy() *WorkloadsConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(WorkloadsConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkloadsConfigObservation) DeepCopyInto(out *WorkloadsConfigObservation) {
	*out = *in
	if in.Scheduler != nil {
		in, out := &in.Scheduler, &out.Scheduler
		*out = make([]SchedulerObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Triggerer != nil {
		in, out := &in.Triggerer, &out.Triggerer
		*out = make([]TriggererObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.WebServer != nil {
		in, out := &in.WebServer, &out.WebServer
		*out = make([]WebServerObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Worker != nil {
		in, out := &in.Worker, &out.Worker
		*out = make([]WorkerObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkloadsConfigObservation.
func (in *WorkloadsConfigObservation) DeepCopy() *WorkloadsConfigObservation {
	if in == nil {
		return nil
	}
	out := new(WorkloadsConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkloadsConfigParameters) DeepCopyInto(out *WorkloadsConfigParameters) {
	*out = *in
	if in.Scheduler != nil {
		in, out := &in.Scheduler, &out.Scheduler
		*out = make([]SchedulerParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Triggerer != nil {
		in, out := &in.Triggerer, &out.Triggerer
		*out = make([]TriggererParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.WebServer != nil {
		in, out := &in.WebServer, &out.WebServer
		*out = make([]WebServerParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Worker != nil {
		in, out := &in.Worker, &out.Worker
		*out = make([]WorkerParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkloadsConfigParameters.
func (in *WorkloadsConfigParameters) DeepCopy() *WorkloadsConfigParameters {
	if in == nil {
		return nil
	}
	out := new(WorkloadsConfigParameters)
	in.DeepCopyInto(out)
	return out
}
