// SPDX-FileCopyrightText: 2023 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

/*
Copyright 2021 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by upjet. DO NOT EDIT.

package v1beta1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type AllowedIPRangeInitParameters struct {

	// A description of this ip range.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// IP address or range, defined using CIDR notation, of requests that this rule applies to.
	// Examples: 192.168.1.1 or 192.168.0.0/16 or 2001:db8::/32 or 2001:0db8:0000:0042:0000:8a2e:0370:7334.
	// IP range prefixes should be properly truncated. For example,
	// 1.2.3.4/24 should be truncated to 1.2.3.0/24. Similarly, for IPv6, 2001:db8::1/32 should be truncated to 2001:db8::/32.
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type AllowedIPRangeObservation struct {

	// A description of this ip range.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// IP address or range, defined using CIDR notation, of requests that this rule applies to.
	// Examples: 192.168.1.1 or 192.168.0.0/16 or 2001:db8::/32 or 2001:0db8:0000:0042:0000:8a2e:0370:7334.
	// IP range prefixes should be properly truncated. For example,
	// 1.2.3.4/24 should be truncated to 1.2.3.0/24. Similarly, for IPv6, 2001:db8::1/32 should be truncated to 2001:db8::/32.
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type AllowedIPRangeParameters struct {

	// A description of this ip range.
	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// IP address or range, defined using CIDR notation, of requests that this rule applies to.
	// Examples: 192.168.1.1 or 192.168.0.0/16 or 2001:db8::/32 or 2001:0db8:0000:0042:0000:8a2e:0370:7334.
	// IP range prefixes should be properly truncated. For example,
	// 1.2.3.4/24 should be truncated to 1.2.3.0/24. Similarly, for IPv6, 2001:db8::1/32 should be truncated to 2001:db8::/32.
	// +kubebuilder:validation:Optional
	Value *string `json:"value" tf:"value,omitempty"`
}

type CidrBlocksInitParameters struct {

	// `cidr_block< must be specified in CIDR notation.
	CidrBlock *string `json:"cidrBlock,omitempty" tf:"cidr_block,omitempty"`

	// display_name is a field for users to identify CIDR blocks.
	DisplayName *string `json:"displayName,omitempty" tf:"display_name,omitempty"`
}

type CidrBlocksObservation struct {

	// `cidr_block< must be specified in CIDR notation.
	CidrBlock *string `json:"cidrBlock,omitempty" tf:"cidr_block,omitempty"`

	// display_name is a field for users to identify CIDR blocks.
	DisplayName *string `json:"displayName,omitempty" tf:"display_name,omitempty"`
}

type CidrBlocksParameters struct {

	// `cidr_block< must be specified in CIDR notation.
	// +kubebuilder:validation:Optional
	CidrBlock *string `json:"cidrBlock" tf:"cidr_block,omitempty"`

	// display_name is a field for users to identify CIDR blocks.
	// +kubebuilder:validation:Optional
	DisplayName *string `json:"displayName,omitempty" tf:"display_name,omitempty"`
}

type ConfigInitParameters struct {

	// The configuration settings for Cloud SQL instance used internally
	// by Apache Airflow software.
	DatabaseConfig []DatabaseConfigInitParameters `json:"databaseConfig,omitempty" tf:"database_config,omitempty"`

	// The encryption options for the Cloud Composer environment and its
	// dependencies.
	EncryptionConfig []EncryptionConfigInitParameters `json:"encryptionConfig,omitempty" tf:"encryption_config,omitempty"`

	// The environment size controls the performance parameters of the managed
	// Cloud Composer infrastructure that includes the Airflow database. Values for
	// environment size are ENVIRONMENT_SIZE_SMALL, ENVIRONMENT_SIZE_MEDIUM,
	// and ENVIRONMENT_SIZE_LARGE.
	EnvironmentSize *string `json:"environmentSize,omitempty" tf:"environment_size,omitempty"`

	// The configuration settings for Cloud Composer maintenance windows.
	MaintenanceWindow []MaintenanceWindowInitParameters `json:"maintenanceWindow,omitempty" tf:"maintenance_window,omitempty"`

	// Configuration options for the master authorized networks feature. Enabled
	// master authorized networks will disallow all external traffic to access
	// Kubernetes master through HTTPS except traffic from the given CIDR blocks,
	// Google Compute Engine Public IPs and Google Prod IPs. Structure is
	// documented below.
	MasterAuthorizedNetworksConfig []MasterAuthorizedNetworksConfigInitParameters `json:"masterAuthorizedNetworksConfig,omitempty" tf:"master_authorized_networks_config,omitempty"`

	// The configuration used for the Kubernetes Engine cluster.  Structure is documented below.
	NodeConfig []NodeConfigInitParameters `json:"nodeConfig,omitempty" tf:"node_config,omitempty"`

	// The number of nodes in the Kubernetes Engine cluster of the environment.
	NodeCount *float64 `json:"nodeCount,omitempty" tf:"node_count,omitempty"`

	// The configuration used for the Private IP Cloud Composer environment. Structure is documented below.
	PrivateEnvironmentConfig []PrivateEnvironmentConfigInitParameters `json:"privateEnvironmentConfig,omitempty" tf:"private_environment_config,omitempty"`

	// The configuration settings for recovery. Structure is documented below.
	RecoveryConfig []RecoveryConfigInitParameters `json:"recoveryConfig,omitempty" tf:"recovery_config,omitempty"`

	// The resilience mode states whether high resilience is enabled for
	// the environment or not. Values for resilience mode are HIGH_RESILIENCE
	// for high resilience and STANDARD_RESILIENCE for standard
	// resilience.
	ResilienceMode *string `json:"resilienceMode,omitempty" tf:"resilience_mode,omitempty"`

	// The configuration settings for software inside the environment.  Structure is documented below.
	SoftwareConfig []SoftwareConfigInitParameters `json:"softwareConfig,omitempty" tf:"software_config,omitempty"`

	// The configuration settings for the Airflow web server App Engine instance.
	WebServerConfig []WebServerConfigInitParameters `json:"webServerConfig,omitempty" tf:"web_server_config,omitempty"`

	// The network-level access control policy for the Airflow web server.
	// If unspecified, no network-level access restrictions are applied.
	WebServerNetworkAccessControl []WebServerNetworkAccessControlInitParameters `json:"webServerNetworkAccessControl,omitempty" tf:"web_server_network_access_control,omitempty"`

	// The Kubernetes workloads configuration for GKE cluster associated with the
	// Cloud Composer environment.
	WorkloadsConfig []WorkloadsConfigInitParameters `json:"workloadsConfig,omitempty" tf:"workloads_config,omitempty"`
}

type ConfigObservation struct {

	// The URI of the Apache Airflow Web UI hosted within this
	// environment.
	AirflowURI *string `json:"airflowUri,omitempty" tf:"airflow_uri,omitempty"`

	// The Cloud Storage prefix of the DAGs for this environment.
	// Although Cloud Storage objects reside in a flat namespace, a
	// hierarchical file tree can be simulated using '/'-delimited
	// object name prefixes. DAG objects for this environment
	// reside in a simulated directory with this prefix.
	DagGcsPrefix *string `json:"dagGcsPrefix,omitempty" tf:"dag_gcs_prefix,omitempty"`

	// The configuration settings for Cloud SQL instance used internally
	// by Apache Airflow software.
	DatabaseConfig []DatabaseConfigObservation `json:"databaseConfig,omitempty" tf:"database_config,omitempty"`

	// The encryption options for the Cloud Composer environment and its
	// dependencies.
	EncryptionConfig []EncryptionConfigObservation `json:"encryptionConfig,omitempty" tf:"encryption_config,omitempty"`

	// The environment size controls the performance parameters of the managed
	// Cloud Composer infrastructure that includes the Airflow database. Values for
	// environment size are ENVIRONMENT_SIZE_SMALL, ENVIRONMENT_SIZE_MEDIUM,
	// and ENVIRONMENT_SIZE_LARGE.
	EnvironmentSize *string `json:"environmentSize,omitempty" tf:"environment_size,omitempty"`

	// The Kubernetes Engine cluster used to run this environment.
	GkeCluster *string `json:"gkeCluster,omitempty" tf:"gke_cluster,omitempty"`

	// The configuration settings for Cloud Composer maintenance windows.
	MaintenanceWindow []MaintenanceWindowObservation `json:"maintenanceWindow,omitempty" tf:"maintenance_window,omitempty"`

	// Configuration options for the master authorized networks feature. Enabled
	// master authorized networks will disallow all external traffic to access
	// Kubernetes master through HTTPS except traffic from the given CIDR blocks,
	// Google Compute Engine Public IPs and Google Prod IPs. Structure is
	// documented below.
	MasterAuthorizedNetworksConfig []MasterAuthorizedNetworksConfigObservation `json:"masterAuthorizedNetworksConfig,omitempty" tf:"master_authorized_networks_config,omitempty"`

	// The configuration used for the Kubernetes Engine cluster.  Structure is documented below.
	NodeConfig []NodeConfigObservation `json:"nodeConfig,omitempty" tf:"node_config,omitempty"`

	// The number of nodes in the Kubernetes Engine cluster of the environment.
	NodeCount *float64 `json:"nodeCount,omitempty" tf:"node_count,omitempty"`

	// The configuration used for the Private IP Cloud Composer environment. Structure is documented below.
	PrivateEnvironmentConfig []PrivateEnvironmentConfigObservation `json:"privateEnvironmentConfig,omitempty" tf:"private_environment_config,omitempty"`

	// The configuration settings for recovery. Structure is documented below.
	RecoveryConfig []RecoveryConfigObservation `json:"recoveryConfig,omitempty" tf:"recovery_config,omitempty"`

	// The resilience mode states whether high resilience is enabled for
	// the environment or not. Values for resilience mode are HIGH_RESILIENCE
	// for high resilience and STANDARD_RESILIENCE for standard
	// resilience.
	ResilienceMode *string `json:"resilienceMode,omitempty" tf:"resilience_mode,omitempty"`

	// The configuration settings for software inside the environment.  Structure is documented below.
	SoftwareConfig []SoftwareConfigObservation `json:"softwareConfig,omitempty" tf:"software_config,omitempty"`

	// The configuration settings for the Airflow web server App Engine instance.
	WebServerConfig []WebServerConfigObservation `json:"webServerConfig,omitempty" tf:"web_server_config,omitempty"`

	// The network-level access control policy for the Airflow web server.
	// If unspecified, no network-level access restrictions are applied.
	WebServerNetworkAccessControl []WebServerNetworkAccessControlObservation `json:"webServerNetworkAccessControl,omitempty" tf:"web_server_network_access_control,omitempty"`

	// The Kubernetes workloads configuration for GKE cluster associated with the
	// Cloud Composer environment.
	WorkloadsConfig []WorkloadsConfigObservation `json:"workloadsConfig,omitempty" tf:"workloads_config,omitempty"`
}

type ConfigParameters struct {

	// The configuration settings for Cloud SQL instance used internally
	// by Apache Airflow software.
	// +kubebuilder:validation:Optional
	DatabaseConfig []DatabaseConfigParameters `json:"databaseConfig,omitempty" tf:"database_config,omitempty"`

	// The encryption options for the Cloud Composer environment and its
	// dependencies.
	// +kubebuilder:validation:Optional
	EncryptionConfig []EncryptionConfigParameters `json:"encryptionConfig,omitempty" tf:"encryption_config,omitempty"`

	// The environment size controls the performance parameters of the managed
	// Cloud Composer infrastructure that includes the Airflow database. Values for
	// environment size are ENVIRONMENT_SIZE_SMALL, ENVIRONMENT_SIZE_MEDIUM,
	// and ENVIRONMENT_SIZE_LARGE.
	// +kubebuilder:validation:Optional
	EnvironmentSize *string `json:"environmentSize,omitempty" tf:"environment_size,omitempty"`

	// The configuration settings for Cloud Composer maintenance windows.
	// +kubebuilder:validation:Optional
	MaintenanceWindow []MaintenanceWindowParameters `json:"maintenanceWindow,omitempty" tf:"maintenance_window,omitempty"`

	// Configuration options for the master authorized networks feature. Enabled
	// master authorized networks will disallow all external traffic to access
	// Kubernetes master through HTTPS except traffic from the given CIDR blocks,
	// Google Compute Engine Public IPs and Google Prod IPs. Structure is
	// documented below.
	// +kubebuilder:validation:Optional
	MasterAuthorizedNetworksConfig []MasterAuthorizedNetworksConfigParameters `json:"masterAuthorizedNetworksConfig,omitempty" tf:"master_authorized_networks_config,omitempty"`

	// The configuration used for the Kubernetes Engine cluster.  Structure is documented below.
	// +kubebuilder:validation:Optional
	NodeConfig []NodeConfigParameters `json:"nodeConfig,omitempty" tf:"node_config,omitempty"`

	// The number of nodes in the Kubernetes Engine cluster of the environment.
	// +kubebuilder:validation:Optional
	NodeCount *float64 `json:"nodeCount,omitempty" tf:"node_count,omitempty"`

	// The configuration used for the Private IP Cloud Composer environment. Structure is documented below.
	// +kubebuilder:validation:Optional
	PrivateEnvironmentConfig []PrivateEnvironmentConfigParameters `json:"privateEnvironmentConfig,omitempty" tf:"private_environment_config,omitempty"`

	// The configuration settings for recovery. Structure is documented below.
	// +kubebuilder:validation:Optional
	RecoveryConfig []RecoveryConfigParameters `json:"recoveryConfig,omitempty" tf:"recovery_config,omitempty"`

	// The resilience mode states whether high resilience is enabled for
	// the environment or not. Values for resilience mode are HIGH_RESILIENCE
	// for high resilience and STANDARD_RESILIENCE for standard
	// resilience.
	// +kubebuilder:validation:Optional
	ResilienceMode *string `json:"resilienceMode,omitempty" tf:"resilience_mode,omitempty"`

	// The configuration settings for software inside the environment.  Structure is documented below.
	// +kubebuilder:validation:Optional
	SoftwareConfig []SoftwareConfigParameters `json:"softwareConfig,omitempty" tf:"software_config,omitempty"`

	// The configuration settings for the Airflow web server App Engine instance.
	// +kubebuilder:validation:Optional
	WebServerConfig []WebServerConfigParameters `json:"webServerConfig,omitempty" tf:"web_server_config,omitempty"`

	// The network-level access control policy for the Airflow web server.
	// If unspecified, no network-level access restrictions are applied.
	// +kubebuilder:validation:Optional
	WebServerNetworkAccessControl []WebServerNetworkAccessControlParameters `json:"webServerNetworkAccessControl,omitempty" tf:"web_server_network_access_control,omitempty"`

	// The Kubernetes workloads configuration for GKE cluster associated with the
	// Cloud Composer environment.
	// +kubebuilder:validation:Optional
	WorkloadsConfig []WorkloadsConfigParameters `json:"workloadsConfig,omitempty" tf:"workloads_config,omitempty"`
}

type DatabaseConfigInitParameters struct {

	// Machine type on which Airflow web server is running. It has to be one of: composer-n1-webserver-2,
	// composer-n1-webserver-4 or composer-n1-webserver-8.
	// Value custom is returned only in response, if Airflow web server parameters were
	// manually changed to a non-standard values.
	MachineType *string `json:"machineType,omitempty" tf:"machine_type,omitempty"`
}

type DatabaseConfigObservation struct {

	// Machine type on which Airflow web server is running. It has to be one of: composer-n1-webserver-2,
	// composer-n1-webserver-4 or composer-n1-webserver-8.
	// Value custom is returned only in response, if Airflow web server parameters were
	// manually changed to a non-standard values.
	MachineType *string `json:"machineType,omitempty" tf:"machine_type,omitempty"`
}

type DatabaseConfigParameters struct {

	// Machine type on which Airflow web server is running. It has to be one of: composer-n1-webserver-2,
	// composer-n1-webserver-4 or composer-n1-webserver-8.
	// Value custom is returned only in response, if Airflow web server parameters were
	// manually changed to a non-standard values.
	// +kubebuilder:validation:Optional
	MachineType *string `json:"machineType" tf:"machine_type,omitempty"`
}

type EncryptionConfigInitParameters struct {

	// Customer-managed Encryption Key available through Google's Key Management Service. It must
	// be the fully qualified resource name,
	// i.e. projects/project-id/locations/location/keyRings/keyring/cryptoKeys/key. Cannot be updated.
	KMSKeyName *string `json:"kmsKeyName,omitempty" tf:"kms_key_name,omitempty"`
}

type EncryptionConfigObservation struct {

	// Customer-managed Encryption Key available through Google's Key Management Service. It must
	// be the fully qualified resource name,
	// i.e. projects/project-id/locations/location/keyRings/keyring/cryptoKeys/key. Cannot be updated.
	KMSKeyName *string `json:"kmsKeyName,omitempty" tf:"kms_key_name,omitempty"`
}

type EncryptionConfigParameters struct {

	// Customer-managed Encryption Key available through Google's Key Management Service. It must
	// be the fully qualified resource name,
	// i.e. projects/project-id/locations/location/keyRings/keyring/cryptoKeys/key. Cannot be updated.
	// +kubebuilder:validation:Optional
	KMSKeyName *string `json:"kmsKeyName" tf:"kms_key_name,omitempty"`
}

type EnvironmentInitParameters struct {

	// Configuration parameters for this environment  Structure is documented below.
	Config []ConfigInitParameters `json:"config,omitempty" tf:"config,omitempty"`

	// User-defined labels for this environment. The labels map can contain
	// no more than 64 entries. Entries of the labels map are UTF8 strings
	// that comply with the following restrictions:
	// Label keys must be between 1 and 63 characters long and must conform
	// to the following regular expression: [a-z]([-a-z0-9]*[a-z0-9])?.
	// Label values must be between 0 and 63 characters long and must
	// conform to the regular expression ([a-z]([-a-z0-9]*[a-z0-9])?)?.
	// No more than 64 labels can be associated with a given environment.
	// Both keys and values must be <= 128 bytes in size.
	// +mapType=granular
	Labels map[string]*string `json:"labels,omitempty" tf:"labels,omitempty"`

	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	// +crossplane:generate:reference:type=github.com/upbound/provider-gcp/apis/cloudplatform/v1beta1.Project
	Project *string `json:"project,omitempty" tf:"project,omitempty"`

	// Reference to a Project in cloudplatform to populate project.
	// +kubebuilder:validation:Optional
	ProjectRef *v1.Reference `json:"projectRef,omitempty" tf:"-"`

	// Selector for a Project in cloudplatform to populate project.
	// +kubebuilder:validation:Optional
	ProjectSelector *v1.Selector `json:"projectSelector,omitempty" tf:"-"`
}

type EnvironmentObservation struct {

	// Configuration parameters for this environment  Structure is documented below.
	Config []ConfigObservation `json:"config,omitempty" tf:"config,omitempty"`

	// an identifier for the resource with format projects/{{project}}/locations/{{region}}/environments/{{name}}
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// User-defined labels for this environment. The labels map can contain
	// no more than 64 entries. Entries of the labels map are UTF8 strings
	// that comply with the following restrictions:
	// Label keys must be between 1 and 63 characters long and must conform
	// to the following regular expression: [a-z]([-a-z0-9]*[a-z0-9])?.
	// Label values must be between 0 and 63 characters long and must
	// conform to the regular expression ([a-z]([-a-z0-9]*[a-z0-9])?)?.
	// No more than 64 labels can be associated with a given environment.
	// Both keys and values must be <= 128 bytes in size.
	// +mapType=granular
	Labels map[string]*string `json:"labels,omitempty" tf:"labels,omitempty"`

	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project *string `json:"project,omitempty" tf:"project,omitempty"`

	// The location or Compute Engine region for the environment.
	Region *string `json:"region,omitempty" tf:"region,omitempty"`
}

type EnvironmentParameters struct {

	// Configuration parameters for this environment  Structure is documented below.
	// +kubebuilder:validation:Optional
	Config []ConfigParameters `json:"config,omitempty" tf:"config,omitempty"`

	// User-defined labels for this environment. The labels map can contain
	// no more than 64 entries. Entries of the labels map are UTF8 strings
	// that comply with the following restrictions:
	// Label keys must be between 1 and 63 characters long and must conform
	// to the following regular expression: [a-z]([-a-z0-9]*[a-z0-9])?.
	// Label values must be between 0 and 63 characters long and must
	// conform to the regular expression ([a-z]([-a-z0-9]*[a-z0-9])?)?.
	// No more than 64 labels can be associated with a given environment.
	// Both keys and values must be <= 128 bytes in size.
	// +kubebuilder:validation:Optional
	// +mapType=granular
	Labels map[string]*string `json:"labels,omitempty" tf:"labels,omitempty"`

	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	// +crossplane:generate:reference:type=github.com/upbound/provider-gcp/apis/cloudplatform/v1beta1.Project
	// +kubebuilder:validation:Optional
	Project *string `json:"project,omitempty" tf:"project,omitempty"`

	// Reference to a Project in cloudplatform to populate project.
	// +kubebuilder:validation:Optional
	ProjectRef *v1.Reference `json:"projectRef,omitempty" tf:"-"`

	// Selector for a Project in cloudplatform to populate project.
	// +kubebuilder:validation:Optional
	ProjectSelector *v1.Selector `json:"projectSelector,omitempty" tf:"-"`

	// The location or Compute Engine region for the environment.
	// +kubebuilder:validation:Required
	Region *string `json:"region" tf:"region,omitempty"`
}

type IPAllocationPolicyInitParameters struct {

	// The IP address range used to allocate IP addresses to pods in the cluster.
	// For Cloud Composer 1 environments, this field is applicable only when use_ip_aliases is true.
	// Set to blank to have GKE choose a range with the default size.
	// Set to /netmask (e.g. /14) to have GKE choose a range with a specific netmask.
	// Set to a CIDR notation (e.g. 10.96.0.0/14) from the RFC-1918 private networks
	// (e.g. 10.0.0.0/8, 172.16.0.0/12, 192.168.0.0/16) to pick a specific range to use.
	// Specify either cluster_secondary_range_name or cluster_ipv4_cidr_block but not both.
	ClusterIPv4CidrBlock *string `json:"clusterIpv4CidrBlock,omitempty" tf:"cluster_ipv4_cidr_block"`

	// The name of the cluster's secondary range used to allocate IP addresses to pods.
	// Specify either cluster_secondary_range_name or cluster_ipv4_cidr_block but not both.
	// For Cloud Composer 1 environments, this field is applicable only when use_ip_aliases is true.
	ClusterSecondaryRangeName *string `json:"clusterSecondaryRangeName,omitempty" tf:"cluster_secondary_range_name"`

	// The IP address range used to allocate IP addresses in this cluster.
	// For Cloud Composer 1 environments, this field is applicable only when use_ip_aliases is true.
	// Set to blank to have GKE choose a range with the default size.
	// Set to /netmask (e.g. /14) to have GKE choose a range with a specific netmask.
	// Set to a CIDR notation (e.g. 10.96.0.0/14) from the RFC-1918 private networks
	// (e.g. 10.0.0.0/8, 172.16.0.0/12, 192.168.0.0/16) to pick a specific range to use.
	// Specify either services_secondary_range_name or services_ipv4_cidr_block but not both.
	ServicesIPv4CidrBlock *string `json:"servicesIpv4CidrBlock,omitempty" tf:"services_ipv4_cidr_block"`

	// The name of the services' secondary range used to allocate IP addresses to the cluster.
	// Specify either services_secondary_range_name or services_ipv4_cidr_block but not both.
	// For Cloud Composer 1 environments, this field is applicable only when use_ip_aliases is true.
	ServicesSecondaryRangeName *string `json:"servicesSecondaryRangeName,omitempty" tf:"services_secondary_range_name"`

	// Whether or not to enable Alias IPs in the GKE cluster. If true, a VPC-native cluster is created.
	// Defaults to true if the ip_allocation_policy block is present in config.
	UseIPAliases *bool `json:"useIpAliases,omitempty" tf:"use_ip_aliases"`
}

type IPAllocationPolicyObservation struct {

	// The IP address range used to allocate IP addresses to pods in the cluster.
	// For Cloud Composer 1 environments, this field is applicable only when use_ip_aliases is true.
	// Set to blank to have GKE choose a range with the default size.
	// Set to /netmask (e.g. /14) to have GKE choose a range with a specific netmask.
	// Set to a CIDR notation (e.g. 10.96.0.0/14) from the RFC-1918 private networks
	// (e.g. 10.0.0.0/8, 172.16.0.0/12, 192.168.0.0/16) to pick a specific range to use.
	// Specify either cluster_secondary_range_name or cluster_ipv4_cidr_block but not both.
	ClusterIPv4CidrBlock *string `json:"clusterIpv4CidrBlock,omitempty" tf:"cluster_ipv4_cidr_block,omitempty"`

	// The name of the cluster's secondary range used to allocate IP addresses to pods.
	// Specify either cluster_secondary_range_name or cluster_ipv4_cidr_block but not both.
	// For Cloud Composer 1 environments, this field is applicable only when use_ip_aliases is true.
	ClusterSecondaryRangeName *string `json:"clusterSecondaryRangeName,omitempty" tf:"cluster_secondary_range_name,omitempty"`

	// The IP address range used to allocate IP addresses in this cluster.
	// For Cloud Composer 1 environments, this field is applicable only when use_ip_aliases is true.
	// Set to blank to have GKE choose a range with the default size.
	// Set to /netmask (e.g. /14) to have GKE choose a range with a specific netmask.
	// Set to a CIDR notation (e.g. 10.96.0.0/14) from the RFC-1918 private networks
	// (e.g. 10.0.0.0/8, 172.16.0.0/12, 192.168.0.0/16) to pick a specific range to use.
	// Specify either services_secondary_range_name or services_ipv4_cidr_block but not both.
	ServicesIPv4CidrBlock *string `json:"servicesIpv4CidrBlock,omitempty" tf:"services_ipv4_cidr_block,omitempty"`

	// The name of the services' secondary range used to allocate IP addresses to the cluster.
	// Specify either services_secondary_range_name or services_ipv4_cidr_block but not both.
	// For Cloud Composer 1 environments, this field is applicable only when use_ip_aliases is true.
	ServicesSecondaryRangeName *string `json:"servicesSecondaryRangeName,omitempty" tf:"services_secondary_range_name,omitempty"`

	// Whether or not to enable Alias IPs in the GKE cluster. If true, a VPC-native cluster is created.
	// Defaults to true if the ip_allocation_policy block is present in config.
	UseIPAliases *bool `json:"useIpAliases,omitempty" tf:"use_ip_aliases,omitempty"`
}

type IPAllocationPolicyParameters struct {

	// The IP address range used to allocate IP addresses to pods in the cluster.
	// For Cloud Composer 1 environments, this field is applicable only when use_ip_aliases is true.
	// Set to blank to have GKE choose a range with the default size.
	// Set to /netmask (e.g. /14) to have GKE choose a range with a specific netmask.
	// Set to a CIDR notation (e.g. 10.96.0.0/14) from the RFC-1918 private networks
	// (e.g. 10.0.0.0/8, 172.16.0.0/12, 192.168.0.0/16) to pick a specific range to use.
	// Specify either cluster_secondary_range_name or cluster_ipv4_cidr_block but not both.
	// +kubebuilder:validation:Optional
	ClusterIPv4CidrBlock *string `json:"clusterIpv4CidrBlock,omitempty" tf:"cluster_ipv4_cidr_block"`

	// The name of the cluster's secondary range used to allocate IP addresses to pods.
	// Specify either cluster_secondary_range_name or cluster_ipv4_cidr_block but not both.
	// For Cloud Composer 1 environments, this field is applicable only when use_ip_aliases is true.
	// +kubebuilder:validation:Optional
	ClusterSecondaryRangeName *string `json:"clusterSecondaryRangeName,omitempty" tf:"cluster_secondary_range_name"`

	// The IP address range used to allocate IP addresses in this cluster.
	// For Cloud Composer 1 environments, this field is applicable only when use_ip_aliases is true.
	// Set to blank to have GKE choose a range with the default size.
	// Set to /netmask (e.g. /14) to have GKE choose a range with a specific netmask.
	// Set to a CIDR notation (e.g. 10.96.0.0/14) from the RFC-1918 private networks
	// (e.g. 10.0.0.0/8, 172.16.0.0/12, 192.168.0.0/16) to pick a specific range to use.
	// Specify either services_secondary_range_name or services_ipv4_cidr_block but not both.
	// +kubebuilder:validation:Optional
	ServicesIPv4CidrBlock *string `json:"servicesIpv4CidrBlock,omitempty" tf:"services_ipv4_cidr_block"`

	// The name of the services' secondary range used to allocate IP addresses to the cluster.
	// Specify either services_secondary_range_name or services_ipv4_cidr_block but not both.
	// For Cloud Composer 1 environments, this field is applicable only when use_ip_aliases is true.
	// +kubebuilder:validation:Optional
	ServicesSecondaryRangeName *string `json:"servicesSecondaryRangeName,omitempty" tf:"services_secondary_range_name"`

	// Whether or not to enable Alias IPs in the GKE cluster. If true, a VPC-native cluster is created.
	// Defaults to true if the ip_allocation_policy block is present in config.
	// +kubebuilder:validation:Optional
	UseIPAliases *bool `json:"useIpAliases,omitempty" tf:"use_ip_aliases"`
}

type MaintenanceWindowInitParameters struct {

	// Maintenance window end time. It is used only to calculate the duration of the maintenance window.
	// The value for end-time must be in the future, relative to 'start_time'.
	EndTime *string `json:"endTime,omitempty" tf:"end_time,omitempty"`

	// Maintenance window recurrence. Format is a subset of RFC-5545 (https://tools.ietf.org/html/rfc5545) 'RRULE'.
	// The only allowed values for 'FREQ' field are 'FREQ=DAILY' and 'FREQ=WEEKLY;BYDAY=...'.
	// Example values: 'FREQ=WEEKLY;BYDAY=TU,WE', 'FREQ=DAILY'.
	Recurrence *string `json:"recurrence,omitempty" tf:"recurrence,omitempty"`

	// Start time of the first recurrence of the maintenance window.
	StartTime *string `json:"startTime,omitempty" tf:"start_time,omitempty"`
}

type MaintenanceWindowObservation struct {

	// Maintenance window end time. It is used only to calculate the duration of the maintenance window.
	// The value for end-time must be in the future, relative to 'start_time'.
	EndTime *string `json:"endTime,omitempty" tf:"end_time,omitempty"`

	// Maintenance window recurrence. Format is a subset of RFC-5545 (https://tools.ietf.org/html/rfc5545) 'RRULE'.
	// The only allowed values for 'FREQ' field are 'FREQ=DAILY' and 'FREQ=WEEKLY;BYDAY=...'.
	// Example values: 'FREQ=WEEKLY;BYDAY=TU,WE', 'FREQ=DAILY'.
	Recurrence *string `json:"recurrence,omitempty" tf:"recurrence,omitempty"`

	// Start time of the first recurrence of the maintenance window.
	StartTime *string `json:"startTime,omitempty" tf:"start_time,omitempty"`
}

type MaintenanceWindowParameters struct {

	// Maintenance window end time. It is used only to calculate the duration of the maintenance window.
	// The value for end-time must be in the future, relative to 'start_time'.
	// +kubebuilder:validation:Optional
	EndTime *string `json:"endTime" tf:"end_time,omitempty"`

	// Maintenance window recurrence. Format is a subset of RFC-5545 (https://tools.ietf.org/html/rfc5545) 'RRULE'.
	// The only allowed values for 'FREQ' field are 'FREQ=DAILY' and 'FREQ=WEEKLY;BYDAY=...'.
	// Example values: 'FREQ=WEEKLY;BYDAY=TU,WE', 'FREQ=DAILY'.
	// +kubebuilder:validation:Optional
	Recurrence *string `json:"recurrence" tf:"recurrence,omitempty"`

	// Start time of the first recurrence of the maintenance window.
	// +kubebuilder:validation:Optional
	StartTime *string `json:"startTime" tf:"start_time,omitempty"`
}

type MasterAuthorizedNetworksConfigInitParameters struct {

	// cidr_blocks define up to 50 external networks that could access Kubernetes master through HTTPS. Structure is documented below.
	CidrBlocks []CidrBlocksInitParameters `json:"cidrBlocks,omitempty" tf:"cidr_blocks,omitempty"`

	// When enabled, Cloud Composer periodically saves snapshots of your environment to a Cloud Storage bucket.
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`
}

type MasterAuthorizedNetworksConfigObservation struct {

	// cidr_blocks define up to 50 external networks that could access Kubernetes master through HTTPS. Structure is documented below.
	CidrBlocks []CidrBlocksObservation `json:"cidrBlocks,omitempty" tf:"cidr_blocks,omitempty"`

	// When enabled, Cloud Composer periodically saves snapshots of your environment to a Cloud Storage bucket.
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`
}

type MasterAuthorizedNetworksConfigParameters struct {

	// cidr_blocks define up to 50 external networks that could access Kubernetes master through HTTPS. Structure is documented below.
	// +kubebuilder:validation:Optional
	CidrBlocks []CidrBlocksParameters `json:"cidrBlocks,omitempty" tf:"cidr_blocks,omitempty"`

	// When enabled, Cloud Composer periodically saves snapshots of your environment to a Cloud Storage bucket.
	// +kubebuilder:validation:Optional
	Enabled *bool `json:"enabled" tf:"enabled,omitempty"`
}

type NodeConfigInitParameters struct {

	// The disk size in GB used for node VMs. Minimum size is 20GB.
	// If unspecified, defaults to 100GB. Cannot be updated.
	DiskSizeGb *float64 `json:"diskSizeGb,omitempty" tf:"disk_size_gb,omitempty"`

	// Deploys 'ip-masq-agent' daemon set in the GKE cluster and defines
	// nonMasqueradeCIDRs equals to pod IP range so IP masquerading is used for
	// all destination addresses, except between pods traffic.
	// See the documentation.
	EnableIPMasqAgent *bool `json:"enableIpMasqAgent,omitempty" tf:"enable_ip_masq_agent,omitempty"`

	// Configuration for controlling how IPs are allocated in the GKE cluster.
	// Structure is documented below.
	// Cannot be updated.
	IPAllocationPolicy []IPAllocationPolicyInitParameters `json:"ipAllocationPolicy,omitempty" tf:"ip_allocation_policy,omitempty"`

	// Machine type on which Airflow web server is running. It has to be one of: composer-n1-webserver-2,
	// composer-n1-webserver-4 or composer-n1-webserver-8.
	// Value custom is returned only in response, if Airflow web server parameters were
	// manually changed to a non-standard values.
	MachineType *string `json:"machineType,omitempty" tf:"machine_type,omitempty"`

	// The Compute Engine network to be used for machine
	// communications, specified as a self-link, relative resource name
	// (for example "projects/{project}/global/networks/{network}"), by name.
	// +crossplane:generate:reference:type=github.com/upbound/provider-gcp/apis/compute/v1beta1.Network
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractResourceID()
	Network *string `json:"network,omitempty" tf:"network,omitempty"`

	// Reference to a Network in compute to populate network.
	// +kubebuilder:validation:Optional
	NetworkRef *v1.Reference `json:"networkRef,omitempty" tf:"-"`

	// Selector for a Network in compute to populate network.
	// +kubebuilder:validation:Optional
	NetworkSelector *v1.Selector `json:"networkSelector,omitempty" tf:"-"`

	// The set of Google API scopes to be made available on all node
	// VMs. Cannot be updated. If empty, defaults to
	// ["https://www.googleapis.com/auth/cloud-platform"].
	// +listType=set
	OAuthScopes []*string `json:"oauthScopes,omitempty" tf:"oauth_scopes,omitempty"`

	// The Google Cloud Platform Service Account to be used by the
	// node VMs. If a service account is not specified, the "default"
	// Compute Engine service account is used. Cannot be updated. If given,
	// note that the service account must have roles/composer.worker
	// for any GCP resources created under the Cloud Composer Environment.
	// +crossplane:generate:reference:type=github.com/upbound/provider-gcp/apis/cloudplatform/v1beta1.ServiceAccount
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractParamPath("name",true)
	ServiceAccount *string `json:"serviceAccount,omitempty" tf:"service_account,omitempty"`

	// Reference to a ServiceAccount in cloudplatform to populate serviceAccount.
	// +kubebuilder:validation:Optional
	ServiceAccountRef *v1.Reference `json:"serviceAccountRef,omitempty" tf:"-"`

	// Selector for a ServiceAccount in cloudplatform to populate serviceAccount.
	// +kubebuilder:validation:Optional
	ServiceAccountSelector *v1.Selector `json:"serviceAccountSelector,omitempty" tf:"-"`

	// The Compute Engine subnetwork to be used for machine
	// communications, specified as a self-link, relative resource name (for example,
	// "projects/{project}/regions/{region}/subnetworks/{subnetwork}"), or by name. If subnetwork is provided,
	// network must also be provided and the subnetwork must belong to the enclosing environment's project and region.
	// +crossplane:generate:reference:type=github.com/upbound/provider-gcp/apis/compute/v1beta1.Subnetwork
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractResourceID()
	Subnetwork *string `json:"subnetwork,omitempty" tf:"subnetwork,omitempty"`

	// Reference to a Subnetwork in compute to populate subnetwork.
	// +kubebuilder:validation:Optional
	SubnetworkRef *v1.Reference `json:"subnetworkRef,omitempty" tf:"-"`

	// Selector for a Subnetwork in compute to populate subnetwork.
	// +kubebuilder:validation:Optional
	SubnetworkSelector *v1.Selector `json:"subnetworkSelector,omitempty" tf:"-"`

	// The list of instance tags applied to all node VMs. Tags are
	// used to identify valid sources or targets for network
	// firewalls. Each tag within the list must comply with RFC1035.
	// Cannot be updated.
	// +listType=set
	Tags []*string `json:"tags,omitempty" tf:"tags,omitempty"`

	// The Compute Engine zone in which to deploy the VMs running the
	// Apache Airflow software, specified as the zone name or
	// relative resource name (e.g. "projects/{project}/zones/{zone}"). Must
	// belong to the enclosing environment's project and region.
	Zone *string `json:"zone,omitempty" tf:"zone,omitempty"`
}

type NodeConfigObservation struct {

	// The disk size in GB used for node VMs. Minimum size is 20GB.
	// If unspecified, defaults to 100GB. Cannot be updated.
	DiskSizeGb *float64 `json:"diskSizeGb,omitempty" tf:"disk_size_gb,omitempty"`

	// Deploys 'ip-masq-agent' daemon set in the GKE cluster and defines
	// nonMasqueradeCIDRs equals to pod IP range so IP masquerading is used for
	// all destination addresses, except between pods traffic.
	// See the documentation.
	EnableIPMasqAgent *bool `json:"enableIpMasqAgent,omitempty" tf:"enable_ip_masq_agent,omitempty"`

	// Configuration for controlling how IPs are allocated in the GKE cluster.
	// Structure is documented below.
	// Cannot be updated.
	IPAllocationPolicy []IPAllocationPolicyObservation `json:"ipAllocationPolicy,omitempty" tf:"ip_allocation_policy,omitempty"`

	// Machine type on which Airflow web server is running. It has to be one of: composer-n1-webserver-2,
	// composer-n1-webserver-4 or composer-n1-webserver-8.
	// Value custom is returned only in response, if Airflow web server parameters were
	// manually changed to a non-standard values.
	MachineType *string `json:"machineType,omitempty" tf:"machine_type,omitempty"`

	// The Compute Engine network to be used for machine
	// communications, specified as a self-link, relative resource name
	// (for example "projects/{project}/global/networks/{network}"), by name.
	Network *string `json:"network,omitempty" tf:"network,omitempty"`

	// The set of Google API scopes to be made available on all node
	// VMs. Cannot be updated. If empty, defaults to
	// ["https://www.googleapis.com/auth/cloud-platform"].
	// +listType=set
	OAuthScopes []*string `json:"oauthScopes,omitempty" tf:"oauth_scopes,omitempty"`

	// The Google Cloud Platform Service Account to be used by the
	// node VMs. If a service account is not specified, the "default"
	// Compute Engine service account is used. Cannot be updated. If given,
	// note that the service account must have roles/composer.worker
	// for any GCP resources created under the Cloud Composer Environment.
	ServiceAccount *string `json:"serviceAccount,omitempty" tf:"service_account,omitempty"`

	// The Compute Engine subnetwork to be used for machine
	// communications, specified as a self-link, relative resource name (for example,
	// "projects/{project}/regions/{region}/subnetworks/{subnetwork}"), or by name. If subnetwork is provided,
	// network must also be provided and the subnetwork must belong to the enclosing environment's project and region.
	Subnetwork *string `json:"subnetwork,omitempty" tf:"subnetwork,omitempty"`

	// The list of instance tags applied to all node VMs. Tags are
	// used to identify valid sources or targets for network
	// firewalls. Each tag within the list must comply with RFC1035.
	// Cannot be updated.
	// +listType=set
	Tags []*string `json:"tags,omitempty" tf:"tags,omitempty"`

	// The Compute Engine zone in which to deploy the VMs running the
	// Apache Airflow software, specified as the zone name or
	// relative resource name (e.g. "projects/{project}/zones/{zone}"). Must
	// belong to the enclosing environment's project and region.
	Zone *string `json:"zone,omitempty" tf:"zone,omitempty"`
}

type NodeConfigParameters struct {

	// The disk size in GB used for node VMs. Minimum size is 20GB.
	// If unspecified, defaults to 100GB. Cannot be updated.
	// +kubebuilder:validation:Optional
	DiskSizeGb *float64 `json:"diskSizeGb,omitempty" tf:"disk_size_gb,omitempty"`

	// Deploys 'ip-masq-agent' daemon set in the GKE cluster and defines
	// nonMasqueradeCIDRs equals to pod IP range so IP masquerading is used for
	// all destination addresses, except between pods traffic.
	// See the documentation.
	// +kubebuilder:validation:Optional
	EnableIPMasqAgent *bool `json:"enableIpMasqAgent,omitempty" tf:"enable_ip_masq_agent,omitempty"`

	// Configuration for controlling how IPs are allocated in the GKE cluster.
	// Structure is documented below.
	// Cannot be updated.
	// +kubebuilder:validation:Optional
	IPAllocationPolicy []IPAllocationPolicyParameters `json:"ipAllocationPolicy,omitempty" tf:"ip_allocation_policy,omitempty"`

	// Machine type on which Airflow web server is running. It has to be one of: composer-n1-webserver-2,
	// composer-n1-webserver-4 or composer-n1-webserver-8.
	// Value custom is returned only in response, if Airflow web server parameters were
	// manually changed to a non-standard values.
	// +kubebuilder:validation:Optional
	MachineType *string `json:"machineType,omitempty" tf:"machine_type,omitempty"`

	// The Compute Engine network to be used for machine
	// communications, specified as a self-link, relative resource name
	// (for example "projects/{project}/global/networks/{network}"), by name.
	// +crossplane:generate:reference:type=github.com/upbound/provider-gcp/apis/compute/v1beta1.Network
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	Network *string `json:"network,omitempty" tf:"network,omitempty"`

	// Reference to a Network in compute to populate network.
	// +kubebuilder:validation:Optional
	NetworkRef *v1.Reference `json:"networkRef,omitempty" tf:"-"`

	// Selector for a Network in compute to populate network.
	// +kubebuilder:validation:Optional
	NetworkSelector *v1.Selector `json:"networkSelector,omitempty" tf:"-"`

	// The set of Google API scopes to be made available on all node
	// VMs. Cannot be updated. If empty, defaults to
	// ["https://www.googleapis.com/auth/cloud-platform"].
	// +kubebuilder:validation:Optional
	// +listType=set
	OAuthScopes []*string `json:"oauthScopes,omitempty" tf:"oauth_scopes,omitempty"`

	// The Google Cloud Platform Service Account to be used by the
	// node VMs. If a service account is not specified, the "default"
	// Compute Engine service account is used. Cannot be updated. If given,
	// note that the service account must have roles/composer.worker
	// for any GCP resources created under the Cloud Composer Environment.
	// +crossplane:generate:reference:type=github.com/upbound/provider-gcp/apis/cloudplatform/v1beta1.ServiceAccount
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractParamPath("name",true)
	// +kubebuilder:validation:Optional
	ServiceAccount *string `json:"serviceAccount,omitempty" tf:"service_account,omitempty"`

	// Reference to a ServiceAccount in cloudplatform to populate serviceAccount.
	// +kubebuilder:validation:Optional
	ServiceAccountRef *v1.Reference `json:"serviceAccountRef,omitempty" tf:"-"`

	// Selector for a ServiceAccount in cloudplatform to populate serviceAccount.
	// +kubebuilder:validation:Optional
	ServiceAccountSelector *v1.Selector `json:"serviceAccountSelector,omitempty" tf:"-"`

	// The Compute Engine subnetwork to be used for machine
	// communications, specified as a self-link, relative resource name (for example,
	// "projects/{project}/regions/{region}/subnetworks/{subnetwork}"), or by name. If subnetwork is provided,
	// network must also be provided and the subnetwork must belong to the enclosing environment's project and region.
	// +crossplane:generate:reference:type=github.com/upbound/provider-gcp/apis/compute/v1beta1.Subnetwork
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	Subnetwork *string `json:"subnetwork,omitempty" tf:"subnetwork,omitempty"`

	// Reference to a Subnetwork in compute to populate subnetwork.
	// +kubebuilder:validation:Optional
	SubnetworkRef *v1.Reference `json:"subnetworkRef,omitempty" tf:"-"`

	// Selector for a Subnetwork in compute to populate subnetwork.
	// +kubebuilder:validation:Optional
	SubnetworkSelector *v1.Selector `json:"subnetworkSelector,omitempty" tf:"-"`

	// The list of instance tags applied to all node VMs. Tags are
	// used to identify valid sources or targets for network
	// firewalls. Each tag within the list must comply with RFC1035.
	// Cannot be updated.
	// +kubebuilder:validation:Optional
	// +listType=set
	Tags []*string `json:"tags,omitempty" tf:"tags,omitempty"`

	// The Compute Engine zone in which to deploy the VMs running the
	// Apache Airflow software, specified as the zone name or
	// relative resource name (e.g. "projects/{project}/zones/{zone}"). Must
	// belong to the enclosing environment's project and region.
	// +kubebuilder:validation:Optional
	Zone *string `json:"zone,omitempty" tf:"zone,omitempty"`
}

type PrivateEnvironmentConfigInitParameters struct {

	// When specified, the environment will use Private Service Connect instead of VPC peerings to connect
	// to Cloud SQL in the Tenant Project, and the PSC endpoint in the Customer Project will use an IP
	// address from this subnetwork. This field is supported for Cloud Composer environments in
	// versions composer-2.*.*-airflow-*.*.* and newer.
	CloudComposerConnectionSubnetwork *string `json:"cloudComposerConnectionSubnetwork,omitempty" tf:"cloud_composer_connection_subnetwork,omitempty"`

	CloudComposerNetworkIPv4CidrBlock *string `json:"cloudComposerNetworkIpv4CidrBlock,omitempty" tf:"cloud_composer_network_ipv4_cidr_block,omitempty"`

	// The CIDR block from which IP range in tenant project will be reserved for Cloud SQL. Needs to be disjoint from web_server_ipv4_cidr_block
	CloudSQLIPv4CidrBlock *string `json:"cloudSqlIpv4CidrBlock,omitempty" tf:"cloud_sql_ipv4_cidr_block,omitempty"`

	// If true, access to the public endpoint of the GKE cluster is denied.
	// If this field is set to true, the ip_allocation_policy.use_ip_aliases field must
	// also be set to true for Cloud Composer 1 environments.
	EnablePrivateEndpoint *bool `json:"enablePrivateEndpoint,omitempty" tf:"enable_private_endpoint,omitempty"`

	// When enabled, IPs from public (non-RFC1918) ranges can be used for
	// ip_allocation_policy.cluster_ipv4_cidr_block and ip_allocation_policy.service_ipv4_cidr_block.
	EnablePrivatelyUsedPublicIps *bool `json:"enablePrivatelyUsedPublicIps,omitempty" tf:"enable_privately_used_public_ips,omitempty"`

	// The IP range in CIDR notation to use for the hosted master network. This range is used
	// for assigning internal IP addresses to the cluster master or set of masters and to the
	// internal load balancer virtual IP. This range must not overlap with any other ranges
	// in use within the cluster's network.
	// If left blank, the default value of is used. See documentation for default values per region.
	MasterIPv4CidrBlock *string `json:"masterIpv4CidrBlock,omitempty" tf:"master_ipv4_cidr_block,omitempty"`

	// The CIDR block from which IP range for web server will be reserved. Needs to be disjoint from master_ipv4_cidr_block and cloud_sql_ipv4_cidr_block.
	WebServerIPv4CidrBlock *string `json:"webServerIpv4CidrBlock,omitempty" tf:"web_server_ipv4_cidr_block,omitempty"`
}

type PrivateEnvironmentConfigObservation struct {

	// When specified, the environment will use Private Service Connect instead of VPC peerings to connect
	// to Cloud SQL in the Tenant Project, and the PSC endpoint in the Customer Project will use an IP
	// address from this subnetwork. This field is supported for Cloud Composer environments in
	// versions composer-2.*.*-airflow-*.*.* and newer.
	CloudComposerConnectionSubnetwork *string `json:"cloudComposerConnectionSubnetwork,omitempty" tf:"cloud_composer_connection_subnetwork,omitempty"`

	CloudComposerNetworkIPv4CidrBlock *string `json:"cloudComposerNetworkIpv4CidrBlock,omitempty" tf:"cloud_composer_network_ipv4_cidr_block,omitempty"`

	// The CIDR block from which IP range in tenant project will be reserved for Cloud SQL. Needs to be disjoint from web_server_ipv4_cidr_block
	CloudSQLIPv4CidrBlock *string `json:"cloudSqlIpv4CidrBlock,omitempty" tf:"cloud_sql_ipv4_cidr_block,omitempty"`

	// If true, access to the public endpoint of the GKE cluster is denied.
	// If this field is set to true, the ip_allocation_policy.use_ip_aliases field must
	// also be set to true for Cloud Composer 1 environments.
	EnablePrivateEndpoint *bool `json:"enablePrivateEndpoint,omitempty" tf:"enable_private_endpoint,omitempty"`

	// When enabled, IPs from public (non-RFC1918) ranges can be used for
	// ip_allocation_policy.cluster_ipv4_cidr_block and ip_allocation_policy.service_ipv4_cidr_block.
	EnablePrivatelyUsedPublicIps *bool `json:"enablePrivatelyUsedPublicIps,omitempty" tf:"enable_privately_used_public_ips,omitempty"`

	// The IP range in CIDR notation to use for the hosted master network. This range is used
	// for assigning internal IP addresses to the cluster master or set of masters and to the
	// internal load balancer virtual IP. This range must not overlap with any other ranges
	// in use within the cluster's network.
	// If left blank, the default value of is used. See documentation for default values per region.
	MasterIPv4CidrBlock *string `json:"masterIpv4CidrBlock,omitempty" tf:"master_ipv4_cidr_block,omitempty"`

	// The CIDR block from which IP range for web server will be reserved. Needs to be disjoint from master_ipv4_cidr_block and cloud_sql_ipv4_cidr_block.
	WebServerIPv4CidrBlock *string `json:"webServerIpv4CidrBlock,omitempty" tf:"web_server_ipv4_cidr_block,omitempty"`
}

type PrivateEnvironmentConfigParameters struct {

	// When specified, the environment will use Private Service Connect instead of VPC peerings to connect
	// to Cloud SQL in the Tenant Project, and the PSC endpoint in the Customer Project will use an IP
	// address from this subnetwork. This field is supported for Cloud Composer environments in
	// versions composer-2.*.*-airflow-*.*.* and newer.
	// +kubebuilder:validation:Optional
	CloudComposerConnectionSubnetwork *string `json:"cloudComposerConnectionSubnetwork,omitempty" tf:"cloud_composer_connection_subnetwork,omitempty"`

	// +kubebuilder:validation:Optional
	CloudComposerNetworkIPv4CidrBlock *string `json:"cloudComposerNetworkIpv4CidrBlock,omitempty" tf:"cloud_composer_network_ipv4_cidr_block,omitempty"`

	// The CIDR block from which IP range in tenant project will be reserved for Cloud SQL. Needs to be disjoint from web_server_ipv4_cidr_block
	// +kubebuilder:validation:Optional
	CloudSQLIPv4CidrBlock *string `json:"cloudSqlIpv4CidrBlock,omitempty" tf:"cloud_sql_ipv4_cidr_block,omitempty"`

	// If true, access to the public endpoint of the GKE cluster is denied.
	// If this field is set to true, the ip_allocation_policy.use_ip_aliases field must
	// also be set to true for Cloud Composer 1 environments.
	// +kubebuilder:validation:Optional
	EnablePrivateEndpoint *bool `json:"enablePrivateEndpoint,omitempty" tf:"enable_private_endpoint,omitempty"`

	// When enabled, IPs from public (non-RFC1918) ranges can be used for
	// ip_allocation_policy.cluster_ipv4_cidr_block and ip_allocation_policy.service_ipv4_cidr_block.
	// +kubebuilder:validation:Optional
	EnablePrivatelyUsedPublicIps *bool `json:"enablePrivatelyUsedPublicIps,omitempty" tf:"enable_privately_used_public_ips,omitempty"`

	// The IP range in CIDR notation to use for the hosted master network. This range is used
	// for assigning internal IP addresses to the cluster master or set of masters and to the
	// internal load balancer virtual IP. This range must not overlap with any other ranges
	// in use within the cluster's network.
	// If left blank, the default value of is used. See documentation for default values per region.
	// +kubebuilder:validation:Optional
	MasterIPv4CidrBlock *string `json:"masterIpv4CidrBlock,omitempty" tf:"master_ipv4_cidr_block,omitempty"`

	// The CIDR block from which IP range for web server will be reserved. Needs to be disjoint from master_ipv4_cidr_block and cloud_sql_ipv4_cidr_block.
	// +kubebuilder:validation:Optional
	WebServerIPv4CidrBlock *string `json:"webServerIpv4CidrBlock,omitempty" tf:"web_server_ipv4_cidr_block,omitempty"`
}

type RecoveryConfigInitParameters struct {

	// The recovery configuration settings for the Cloud Composer environment.
	ScheduledSnapshotsConfig []ScheduledSnapshotsConfigInitParameters `json:"scheduledSnapshotsConfig,omitempty" tf:"scheduled_snapshots_config,omitempty"`
}

type RecoveryConfigObservation struct {

	// The recovery configuration settings for the Cloud Composer environment.
	ScheduledSnapshotsConfig []ScheduledSnapshotsConfigObservation `json:"scheduledSnapshotsConfig,omitempty" tf:"scheduled_snapshots_config,omitempty"`
}

type RecoveryConfigParameters struct {

	// The recovery configuration settings for the Cloud Composer environment.
	// +kubebuilder:validation:Optional
	ScheduledSnapshotsConfig []ScheduledSnapshotsConfigParameters `json:"scheduledSnapshotsConfig,omitempty" tf:"scheduled_snapshots_config,omitempty"`
}

type ScheduledSnapshotsConfigInitParameters struct {

	// When enabled, Cloud Composer periodically saves snapshots of your environment to a Cloud Storage bucket.
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// Snapshot schedule, in the unix-cron format.
	SnapshotCreationSchedule *string `json:"snapshotCreationSchedule,omitempty" tf:"snapshot_creation_schedule,omitempty"`

	// The URI of a bucket folder where to save the snapshot.
	SnapshotLocation *string `json:"snapshotLocation,omitempty" tf:"snapshot_location,omitempty"`

	// A time zone for the schedule. This value is a time offset and does not take into account daylight saving time changes. Valid values are from UTC-12 to UTC+12. Examples: UTC, UTC-01, UTC+03.
	TimeZone *string `json:"timeZone,omitempty" tf:"time_zone,omitempty"`
}

type ScheduledSnapshotsConfigObservation struct {

	// When enabled, Cloud Composer periodically saves snapshots of your environment to a Cloud Storage bucket.
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// Snapshot schedule, in the unix-cron format.
	SnapshotCreationSchedule *string `json:"snapshotCreationSchedule,omitempty" tf:"snapshot_creation_schedule,omitempty"`

	// The URI of a bucket folder where to save the snapshot.
	SnapshotLocation *string `json:"snapshotLocation,omitempty" tf:"snapshot_location,omitempty"`

	// A time zone for the schedule. This value is a time offset and does not take into account daylight saving time changes. Valid values are from UTC-12 to UTC+12. Examples: UTC, UTC-01, UTC+03.
	TimeZone *string `json:"timeZone,omitempty" tf:"time_zone,omitempty"`
}

type ScheduledSnapshotsConfigParameters struct {

	// When enabled, Cloud Composer periodically saves snapshots of your environment to a Cloud Storage bucket.
	// +kubebuilder:validation:Optional
	Enabled *bool `json:"enabled" tf:"enabled,omitempty"`

	// Snapshot schedule, in the unix-cron format.
	// +kubebuilder:validation:Optional
	SnapshotCreationSchedule *string `json:"snapshotCreationSchedule,omitempty" tf:"snapshot_creation_schedule,omitempty"`

	// The URI of a bucket folder where to save the snapshot.
	// +kubebuilder:validation:Optional
	SnapshotLocation *string `json:"snapshotLocation,omitempty" tf:"snapshot_location,omitempty"`

	// A time zone for the schedule. This value is a time offset and does not take into account daylight saving time changes. Valid values are from UTC-12 to UTC+12. Examples: UTC, UTC-01, UTC+03.
	// +kubebuilder:validation:Optional
	TimeZone *string `json:"timeZone,omitempty" tf:"time_zone,omitempty"`
}

type SchedulerInitParameters struct {

	// The number of CPUs for a single Airflow worker.
	CPU *float64 `json:"cpu,omitempty" tf:"cpu,omitempty"`

	// The number of Airflow triggerers.
	Count *float64 `json:"count,omitempty" tf:"count,omitempty"`

	// The amount of memory (GB) for a single Airflow worker.
	MemoryGb *float64 `json:"memoryGb,omitempty" tf:"memory_gb,omitempty"`

	// The amount of storage (GB) for the Airflow web server.
	StorageGb *float64 `json:"storageGb,omitempty" tf:"storage_gb,omitempty"`
}

type SchedulerObservation struct {

	// The number of CPUs for a single Airflow worker.
	CPU *float64 `json:"cpu,omitempty" tf:"cpu,omitempty"`

	// The number of Airflow triggerers.
	Count *float64 `json:"count,omitempty" tf:"count,omitempty"`

	// The amount of memory (GB) for a single Airflow worker.
	MemoryGb *float64 `json:"memoryGb,omitempty" tf:"memory_gb,omitempty"`

	// The amount of storage (GB) for the Airflow web server.
	StorageGb *float64 `json:"storageGb,omitempty" tf:"storage_gb,omitempty"`
}

type SchedulerParameters struct {

	// The number of CPUs for a single Airflow worker.
	// +kubebuilder:validation:Optional
	CPU *float64 `json:"cpu,omitempty" tf:"cpu,omitempty"`

	// The number of Airflow triggerers.
	// +kubebuilder:validation:Optional
	Count *float64 `json:"count,omitempty" tf:"count,omitempty"`

	// The amount of memory (GB) for a single Airflow worker.
	// +kubebuilder:validation:Optional
	MemoryGb *float64 `json:"memoryGb,omitempty" tf:"memory_gb,omitempty"`

	// The amount of storage (GB) for the Airflow web server.
	// +kubebuilder:validation:Optional
	StorageGb *float64 `json:"storageGb,omitempty" tf:"storage_gb,omitempty"`
}

type SoftwareConfigInitParameters struct {

	// Apache Airflow configuration properties to override. Property keys contain the section and property names,
	// separated by a hyphen, for example "core-dags_are_paused_at_creation".
	// +mapType=granular
	AirflowConfigOverrides map[string]*string `json:"airflowConfigOverrides,omitempty" tf:"airflow_config_overrides,omitempty"`

	// Additional environment variables to provide to the Apache Airflow scheduler, worker, and webserver processes.
	// Environment variable names must match the regular expression [a-zA-Z_][a-zA-Z0-9_]*.
	// They cannot specify Apache Airflow software configuration overrides (they cannot match the regular expression
	// AIRFLOW__[A-Z0-9_]+__[A-Z0-9_]+), and they cannot match any of the following reserved names:
	// +mapType=granular
	EnvVariables map[string]*string `json:"envVariables,omitempty" tf:"env_variables,omitempty"`

	ImageVersion *string `json:"imageVersion,omitempty" tf:"image_version,omitempty"`

	// Custom Python Package Index (PyPI) packages to be installed
	// in the environment. Keys refer to the lowercase package name (e.g. "numpy"). Values are the lowercase extras and
	// version specifier (e.g. "==1.12.0", "[devel,gcp_api]", "[devel]>=1.8.2, <1.9.2"). To specify a package without
	// pinning it to a version specifier, use the empty string as the value.
	// +mapType=granular
	PypiPackages map[string]*string `json:"pypiPackages,omitempty" tf:"pypi_packages,omitempty"`

	// The major version of Python used to run the Apache Airflow scheduler, worker, and webserver processes.
	// Can be set to '2' or '3'. If not specified, the default is '3'.
	PythonVersion *string `json:"pythonVersion,omitempty" tf:"python_version,omitempty"`

	// The number of schedulers for Airflow.
	SchedulerCount *float64 `json:"schedulerCount,omitempty" tf:"scheduler_count,omitempty"`
}

type SoftwareConfigObservation struct {

	// Apache Airflow configuration properties to override. Property keys contain the section and property names,
	// separated by a hyphen, for example "core-dags_are_paused_at_creation".
	// +mapType=granular
	AirflowConfigOverrides map[string]*string `json:"airflowConfigOverrides,omitempty" tf:"airflow_config_overrides,omitempty"`

	// Additional environment variables to provide to the Apache Airflow scheduler, worker, and webserver processes.
	// Environment variable names must match the regular expression [a-zA-Z_][a-zA-Z0-9_]*.
	// They cannot specify Apache Airflow software configuration overrides (they cannot match the regular expression
	// AIRFLOW__[A-Z0-9_]+__[A-Z0-9_]+), and they cannot match any of the following reserved names:
	// +mapType=granular
	EnvVariables map[string]*string `json:"envVariables,omitempty" tf:"env_variables,omitempty"`

	ImageVersion *string `json:"imageVersion,omitempty" tf:"image_version,omitempty"`

	// Custom Python Package Index (PyPI) packages to be installed
	// in the environment. Keys refer to the lowercase package name (e.g. "numpy"). Values are the lowercase extras and
	// version specifier (e.g. "==1.12.0", "[devel,gcp_api]", "[devel]>=1.8.2, <1.9.2"). To specify a package without
	// pinning it to a version specifier, use the empty string as the value.
	// +mapType=granular
	PypiPackages map[string]*string `json:"pypiPackages,omitempty" tf:"pypi_packages,omitempty"`

	// The major version of Python used to run the Apache Airflow scheduler, worker, and webserver processes.
	// Can be set to '2' or '3'. If not specified, the default is '3'.
	PythonVersion *string `json:"pythonVersion,omitempty" tf:"python_version,omitempty"`

	// The number of schedulers for Airflow.
	SchedulerCount *float64 `json:"schedulerCount,omitempty" tf:"scheduler_count,omitempty"`
}

type SoftwareConfigParameters struct {

	// Apache Airflow configuration properties to override. Property keys contain the section and property names,
	// separated by a hyphen, for example "core-dags_are_paused_at_creation".
	// +kubebuilder:validation:Optional
	// +mapType=granular
	AirflowConfigOverrides map[string]*string `json:"airflowConfigOverrides,omitempty" tf:"airflow_config_overrides,omitempty"`

	// Additional environment variables to provide to the Apache Airflow scheduler, worker, and webserver processes.
	// Environment variable names must match the regular expression [a-zA-Z_][a-zA-Z0-9_]*.
	// They cannot specify Apache Airflow software configuration overrides (they cannot match the regular expression
	// AIRFLOW__[A-Z0-9_]+__[A-Z0-9_]+), and they cannot match any of the following reserved names:
	// +kubebuilder:validation:Optional
	// +mapType=granular
	EnvVariables map[string]*string `json:"envVariables,omitempty" tf:"env_variables,omitempty"`

	// +kubebuilder:validation:Optional
	ImageVersion *string `json:"imageVersion,omitempty" tf:"image_version,omitempty"`

	// Custom Python Package Index (PyPI) packages to be installed
	// in the environment. Keys refer to the lowercase package name (e.g. "numpy"). Values are the lowercase extras and
	// version specifier (e.g. "==1.12.0", "[devel,gcp_api]", "[devel]>=1.8.2, <1.9.2"). To specify a package without
	// pinning it to a version specifier, use the empty string as the value.
	// +kubebuilder:validation:Optional
	// +mapType=granular
	PypiPackages map[string]*string `json:"pypiPackages,omitempty" tf:"pypi_packages,omitempty"`

	// The major version of Python used to run the Apache Airflow scheduler, worker, and webserver processes.
	// Can be set to '2' or '3'. If not specified, the default is '3'.
	// +kubebuilder:validation:Optional
	PythonVersion *string `json:"pythonVersion,omitempty" tf:"python_version,omitempty"`

	// The number of schedulers for Airflow.
	// +kubebuilder:validation:Optional
	SchedulerCount *float64 `json:"schedulerCount,omitempty" tf:"scheduler_count,omitempty"`
}

type WebServerConfigInitParameters struct {

	// Machine type on which Airflow web server is running. It has to be one of: composer-n1-webserver-2,
	// composer-n1-webserver-4 or composer-n1-webserver-8.
	// Value custom is returned only in response, if Airflow web server parameters were
	// manually changed to a non-standard values.
	MachineType *string `json:"machineType,omitempty" tf:"machine_type,omitempty"`
}

type WebServerConfigObservation struct {

	// Machine type on which Airflow web server is running. It has to be one of: composer-n1-webserver-2,
	// composer-n1-webserver-4 or composer-n1-webserver-8.
	// Value custom is returned only in response, if Airflow web server parameters were
	// manually changed to a non-standard values.
	MachineType *string `json:"machineType,omitempty" tf:"machine_type,omitempty"`
}

type WebServerConfigParameters struct {

	// Machine type on which Airflow web server is running. It has to be one of: composer-n1-webserver-2,
	// composer-n1-webserver-4 or composer-n1-webserver-8.
	// Value custom is returned only in response, if Airflow web server parameters were
	// manually changed to a non-standard values.
	// +kubebuilder:validation:Optional
	MachineType *string `json:"machineType" tf:"machine_type,omitempty"`
}

type WebServerInitParameters struct {

	// The number of CPUs for a single Airflow worker.
	CPU *float64 `json:"cpu,omitempty" tf:"cpu,omitempty"`

	// The amount of memory (GB) for a single Airflow worker.
	MemoryGb *float64 `json:"memoryGb,omitempty" tf:"memory_gb,omitempty"`

	// The amount of storage (GB) for the Airflow web server.
	StorageGb *float64 `json:"storageGb,omitempty" tf:"storage_gb,omitempty"`
}

type WebServerNetworkAccessControlInitParameters struct {

	// A collection of allowed IP ranges with descriptions. Structure is documented below.
	AllowedIPRange []AllowedIPRangeInitParameters `json:"allowedIpRange,omitempty" tf:"allowed_ip_range,omitempty"`
}

type WebServerNetworkAccessControlObservation struct {

	// A collection of allowed IP ranges with descriptions. Structure is documented below.
	AllowedIPRange []AllowedIPRangeObservation `json:"allowedIpRange,omitempty" tf:"allowed_ip_range,omitempty"`
}

type WebServerNetworkAccessControlParameters struct {

	// A collection of allowed IP ranges with descriptions. Structure is documented below.
	// +kubebuilder:validation:Optional
	AllowedIPRange []AllowedIPRangeParameters `json:"allowedIpRange,omitempty" tf:"allowed_ip_range,omitempty"`
}

type WebServerObservation struct {

	// The number of CPUs for a single Airflow worker.
	CPU *float64 `json:"cpu,omitempty" tf:"cpu,omitempty"`

	// The amount of memory (GB) for a single Airflow worker.
	MemoryGb *float64 `json:"memoryGb,omitempty" tf:"memory_gb,omitempty"`

	// The amount of storage (GB) for the Airflow web server.
	StorageGb *float64 `json:"storageGb,omitempty" tf:"storage_gb,omitempty"`
}

type WebServerParameters struct {

	// The number of CPUs for a single Airflow worker.
	// +kubebuilder:validation:Optional
	CPU *float64 `json:"cpu,omitempty" tf:"cpu,omitempty"`

	// The amount of memory (GB) for a single Airflow worker.
	// +kubebuilder:validation:Optional
	MemoryGb *float64 `json:"memoryGb,omitempty" tf:"memory_gb,omitempty"`

	// The amount of storage (GB) for the Airflow web server.
	// +kubebuilder:validation:Optional
	StorageGb *float64 `json:"storageGb,omitempty" tf:"storage_gb,omitempty"`
}

type WorkerInitParameters struct {

	// The number of CPUs for a single Airflow worker.
	CPU *float64 `json:"cpu,omitempty" tf:"cpu,omitempty"`

	// The maximum number of Airflow workers that the environment can run. The number of workers in the
	// environment does not go above this number, even if a higher number of workers is required to
	// handle the load.
	MaxCount *float64 `json:"maxCount,omitempty" tf:"max_count,omitempty"`

	// The amount of memory (GB) for a single Airflow worker.
	MemoryGb *float64 `json:"memoryGb,omitempty" tf:"memory_gb,omitempty"`

	// The minimum number of Airflow workers that the environment can run. The number of workers in the
	// environment does not go above this number, even if a lower number of workers can handle the load.
	MinCount *float64 `json:"minCount,omitempty" tf:"min_count,omitempty"`

	// The amount of storage (GB) for the Airflow web server.
	StorageGb *float64 `json:"storageGb,omitempty" tf:"storage_gb,omitempty"`
}

type WorkerObservation struct {

	// The number of CPUs for a single Airflow worker.
	CPU *float64 `json:"cpu,omitempty" tf:"cpu,omitempty"`

	// The maximum number of Airflow workers that the environment can run. The number of workers in the
	// environment does not go above this number, even if a higher number of workers is required to
	// handle the load.
	MaxCount *float64 `json:"maxCount,omitempty" tf:"max_count,omitempty"`

	// The amount of memory (GB) for a single Airflow worker.
	MemoryGb *float64 `json:"memoryGb,omitempty" tf:"memory_gb,omitempty"`

	// The minimum number of Airflow workers that the environment can run. The number of workers in the
	// environment does not go above this number, even if a lower number of workers can handle the load.
	MinCount *float64 `json:"minCount,omitempty" tf:"min_count,omitempty"`

	// The amount of storage (GB) for the Airflow web server.
	StorageGb *float64 `json:"storageGb,omitempty" tf:"storage_gb,omitempty"`
}

type WorkerParameters struct {

	// The number of CPUs for a single Airflow worker.
	// +kubebuilder:validation:Optional
	CPU *float64 `json:"cpu,omitempty" tf:"cpu,omitempty"`

	// The maximum number of Airflow workers that the environment can run. The number of workers in the
	// environment does not go above this number, even if a higher number of workers is required to
	// handle the load.
	// +kubebuilder:validation:Optional
	MaxCount *float64 `json:"maxCount,omitempty" tf:"max_count,omitempty"`

	// The amount of memory (GB) for a single Airflow worker.
	// +kubebuilder:validation:Optional
	MemoryGb *float64 `json:"memoryGb,omitempty" tf:"memory_gb,omitempty"`

	// The minimum number of Airflow workers that the environment can run. The number of workers in the
	// environment does not go above this number, even if a lower number of workers can handle the load.
	// +kubebuilder:validation:Optional
	MinCount *float64 `json:"minCount,omitempty" tf:"min_count,omitempty"`

	// The amount of storage (GB) for the Airflow web server.
	// +kubebuilder:validation:Optional
	StorageGb *float64 `json:"storageGb,omitempty" tf:"storage_gb,omitempty"`
}

type WorkloadsConfigInitParameters struct {

	// Configuration for resources used by Airflow schedulers.
	Scheduler []SchedulerInitParameters `json:"scheduler,omitempty" tf:"scheduler,omitempty"`

	// Configuration for resources used by Airflow web server.
	WebServer []WebServerInitParameters `json:"webServer,omitempty" tf:"web_server,omitempty"`

	// Configuration for resources used by Airflow workers.
	Worker []WorkerInitParameters `json:"worker,omitempty" tf:"worker,omitempty"`
}

type WorkloadsConfigObservation struct {

	// Configuration for resources used by Airflow schedulers.
	Scheduler []SchedulerObservation `json:"scheduler,omitempty" tf:"scheduler,omitempty"`

	// Configuration for resources used by Airflow web server.
	WebServer []WebServerObservation `json:"webServer,omitempty" tf:"web_server,omitempty"`

	// Configuration for resources used by Airflow workers.
	Worker []WorkerObservation `json:"worker,omitempty" tf:"worker,omitempty"`
}

type WorkloadsConfigParameters struct {

	// Configuration for resources used by Airflow schedulers.
	// +kubebuilder:validation:Optional
	Scheduler []SchedulerParameters `json:"scheduler,omitempty" tf:"scheduler,omitempty"`

	// Configuration for resources used by Airflow web server.
	// +kubebuilder:validation:Optional
	WebServer []WebServerParameters `json:"webServer,omitempty" tf:"web_server,omitempty"`

	// Configuration for resources used by Airflow workers.
	// +kubebuilder:validation:Optional
	Worker []WorkerParameters `json:"worker,omitempty" tf:"worker,omitempty"`
}

// EnvironmentSpec defines the desired state of Environment
type EnvironmentSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     EnvironmentParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider EnvironmentInitParameters `json:"initProvider,omitempty"`
}

// EnvironmentStatus defines the observed state of Environment.
type EnvironmentStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        EnvironmentObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// Environment is the Schema for the Environments API. An environment for running orchestration tasks.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,gcp}
type Environment struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              EnvironmentSpec   `json:"spec"`
	Status            EnvironmentStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// EnvironmentList contains a list of Environments
type EnvironmentList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []Environment `json:"items"`
}

// Repository type metadata.
var (
	Environment_Kind             = "Environment"
	Environment_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: Environment_Kind}.String()
	Environment_KindAPIVersion   = Environment_Kind + "." + CRDGroupVersion.String()
	Environment_GroupVersionKind = CRDGroupVersion.WithKind(Environment_Kind)
)

func init() {
	SchemeBuilder.Register(&Environment{}, &EnvironmentList{})
}
