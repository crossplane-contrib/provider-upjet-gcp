//go:build !ignore_autogenerated

// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by controller-gen. DO NOT EDIT.

package v1beta1

import (
	"github.com/crossplane/crossplane-runtime/apis/common/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AlternativeNameServerConfigInitParameters) DeepCopyInto(out *AlternativeNameServerConfigInitParameters) {
	*out = *in
	if in.TargetNameServers != nil {
		in, out := &in.TargetNameServers, &out.TargetNameServers
		*out = make([]AlternativeNameServerConfigTargetNameServersInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AlternativeNameServerConfigInitParameters.
func (in *AlternativeNameServerConfigInitParameters) DeepCopy() *AlternativeNameServerConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(AlternativeNameServerConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AlternativeNameServerConfigObservation) DeepCopyInto(out *AlternativeNameServerConfigObservation) {
	*out = *in
	if in.TargetNameServers != nil {
		in, out := &in.TargetNameServers, &out.TargetNameServers
		*out = make([]AlternativeNameServerConfigTargetNameServersObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AlternativeNameServerConfigObservation.
func (in *AlternativeNameServerConfigObservation) DeepCopy() *AlternativeNameServerConfigObservation {
	if in == nil {
		return nil
	}
	out := new(AlternativeNameServerConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AlternativeNameServerConfigParameters) DeepCopyInto(out *AlternativeNameServerConfigParameters) {
	*out = *in
	if in.TargetNameServers != nil {
		in, out := &in.TargetNameServers, &out.TargetNameServers
		*out = make([]AlternativeNameServerConfigTargetNameServersParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AlternativeNameServerConfigParameters.
func (in *AlternativeNameServerConfigParameters) DeepCopy() *AlternativeNameServerConfigParameters {
	if in == nil {
		return nil
	}
	out := new(AlternativeNameServerConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AlternativeNameServerConfigTargetNameServersInitParameters) DeepCopyInto(out *AlternativeNameServerConfigTargetNameServersInitParameters) {
	*out = *in
	if in.ForwardingPath != nil {
		in, out := &in.ForwardingPath, &out.ForwardingPath
		*out = new(string)
		**out = **in
	}
	if in.IPv4Address != nil {
		in, out := &in.IPv4Address, &out.IPv4Address
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AlternativeNameServerConfigTargetNameServersInitParameters.
func (in *AlternativeNameServerConfigTargetNameServersInitParameters) DeepCopy() *AlternativeNameServerConfigTargetNameServersInitParameters {
	if in == nil {
		return nil
	}
	out := new(AlternativeNameServerConfigTargetNameServersInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AlternativeNameServerConfigTargetNameServersObservation) DeepCopyInto(out *AlternativeNameServerConfigTargetNameServersObservation) {
	*out = *in
	if in.ForwardingPath != nil {
		in, out := &in.ForwardingPath, &out.ForwardingPath
		*out = new(string)
		**out = **in
	}
	if in.IPv4Address != nil {
		in, out := &in.IPv4Address, &out.IPv4Address
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AlternativeNameServerConfigTargetNameServersObservation.
func (in *AlternativeNameServerConfigTargetNameServersObservation) DeepCopy() *AlternativeNameServerConfigTargetNameServersObservation {
	if in == nil {
		return nil
	}
	out := new(AlternativeNameServerConfigTargetNameServersObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AlternativeNameServerConfigTargetNameServersParameters) DeepCopyInto(out *AlternativeNameServerConfigTargetNameServersParameters) {
	*out = *in
	if in.ForwardingPath != nil {
		in, out := &in.ForwardingPath, &out.ForwardingPath
		*out = new(string)
		**out = **in
	}
	if in.IPv4Address != nil {
		in, out := &in.IPv4Address, &out.IPv4Address
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AlternativeNameServerConfigTargetNameServersParameters.
func (in *AlternativeNameServerConfigTargetNameServersParameters) DeepCopy() *AlternativeNameServerConfigTargetNameServersParameters {
	if in == nil {
		return nil
	}
	out := new(AlternativeNameServerConfigTargetNameServersParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BackupGeoHealthCheckedTargetsInitParameters) DeepCopyInto(out *BackupGeoHealthCheckedTargetsInitParameters) {
	*out = *in
	if in.InternalLoadBalancers != nil {
		in, out := &in.InternalLoadBalancers, &out.InternalLoadBalancers
		*out = make([]HealthCheckedTargetsInternalLoadBalancersInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BackupGeoHealthCheckedTargetsInitParameters.
func (in *BackupGeoHealthCheckedTargetsInitParameters) DeepCopy() *BackupGeoHealthCheckedTargetsInitParameters {
	if in == nil {
		return nil
	}
	out := new(BackupGeoHealthCheckedTargetsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BackupGeoHealthCheckedTargetsObservation) DeepCopyInto(out *BackupGeoHealthCheckedTargetsObservation) {
	*out = *in
	if in.InternalLoadBalancers != nil {
		in, out := &in.InternalLoadBalancers, &out.InternalLoadBalancers
		*out = make([]HealthCheckedTargetsInternalLoadBalancersObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BackupGeoHealthCheckedTargetsObservation.
func (in *BackupGeoHealthCheckedTargetsObservation) DeepCopy() *BackupGeoHealthCheckedTargetsObservation {
	if in == nil {
		return nil
	}
	out := new(BackupGeoHealthCheckedTargetsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BackupGeoHealthCheckedTargetsParameters) DeepCopyInto(out *BackupGeoHealthCheckedTargetsParameters) {
	*out = *in
	if in.InternalLoadBalancers != nil {
		in, out := &in.InternalLoadBalancers, &out.InternalLoadBalancers
		*out = make([]HealthCheckedTargetsInternalLoadBalancersParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BackupGeoHealthCheckedTargetsParameters.
func (in *BackupGeoHealthCheckedTargetsParameters) DeepCopy() *BackupGeoHealthCheckedTargetsParameters {
	if in == nil {
		return nil
	}
	out := new(BackupGeoHealthCheckedTargetsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BackupGeoInitParameters) DeepCopyInto(out *BackupGeoInitParameters) {
	*out = *in
	if in.HealthCheckedTargets != nil {
		in, out := &in.HealthCheckedTargets, &out.HealthCheckedTargets
		*out = make([]BackupGeoHealthCheckedTargetsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.Rrdatas != nil {
		in, out := &in.Rrdatas, &out.Rrdatas
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BackupGeoInitParameters.
func (in *BackupGeoInitParameters) DeepCopy() *BackupGeoInitParameters {
	if in == nil {
		return nil
	}
	out := new(BackupGeoInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BackupGeoObservation) DeepCopyInto(out *BackupGeoObservation) {
	*out = *in
	if in.HealthCheckedTargets != nil {
		in, out := &in.HealthCheckedTargets, &out.HealthCheckedTargets
		*out = make([]BackupGeoHealthCheckedTargetsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.Rrdatas != nil {
		in, out := &in.Rrdatas, &out.Rrdatas
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BackupGeoObservation.
func (in *BackupGeoObservation) DeepCopy() *BackupGeoObservation {
	if in == nil {
		return nil
	}
	out := new(BackupGeoObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BackupGeoParameters) DeepCopyInto(out *BackupGeoParameters) {
	*out = *in
	if in.HealthCheckedTargets != nil {
		in, out := &in.HealthCheckedTargets, &out.HealthCheckedTargets
		*out = make([]BackupGeoHealthCheckedTargetsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.Rrdatas != nil {
		in, out := &in.Rrdatas, &out.Rrdatas
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BackupGeoParameters.
func (in *BackupGeoParameters) DeepCopy() *BackupGeoParameters {
	if in == nil {
		return nil
	}
	out := new(BackupGeoParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CloudLoggingConfigInitParameters) DeepCopyInto(out *CloudLoggingConfigInitParameters) {
	*out = *in
	if in.EnableLogging != nil {
		in, out := &in.EnableLogging, &out.EnableLogging
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CloudLoggingConfigInitParameters.
func (in *CloudLoggingConfigInitParameters) DeepCopy() *CloudLoggingConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(CloudLoggingConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CloudLoggingConfigObservation) DeepCopyInto(out *CloudLoggingConfigObservation) {
	*out = *in
	if in.EnableLogging != nil {
		in, out := &in.EnableLogging, &out.EnableLogging
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CloudLoggingConfigObservation.
func (in *CloudLoggingConfigObservation) DeepCopy() *CloudLoggingConfigObservation {
	if in == nil {
		return nil
	}
	out := new(CloudLoggingConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CloudLoggingConfigParameters) DeepCopyInto(out *CloudLoggingConfigParameters) {
	*out = *in
	if in.EnableLogging != nil {
		in, out := &in.EnableLogging, &out.EnableLogging
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CloudLoggingConfigParameters.
func (in *CloudLoggingConfigParameters) DeepCopy() *CloudLoggingConfigParameters {
	if in == nil {
		return nil
	}
	out := new(CloudLoggingConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConditionInitParameters) DeepCopyInto(out *ConditionInitParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Expression != nil {
		in, out := &in.Expression, &out.Expression
		*out = new(string)
		**out = **in
	}
	if in.Title != nil {
		in, out := &in.Title, &out.Title
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConditionInitParameters.
func (in *ConditionInitParameters) DeepCopy() *ConditionInitParameters {
	if in == nil {
		return nil
	}
	out := new(ConditionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConditionObservation) DeepCopyInto(out *ConditionObservation) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Expression != nil {
		in, out := &in.Expression, &out.Expression
		*out = new(string)
		**out = **in
	}
	if in.Title != nil {
		in, out := &in.Title, &out.Title
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConditionObservation.
func (in *ConditionObservation) DeepCopy() *ConditionObservation {
	if in == nil {
		return nil
	}
	out := new(ConditionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConditionParameters) DeepCopyInto(out *ConditionParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Expression != nil {
		in, out := &in.Expression, &out.Expression
		*out = new(string)
		**out = **in
	}
	if in.Title != nil {
		in, out := &in.Title, &out.Title
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConditionParameters.
func (in *ConditionParameters) DeepCopy() *ConditionParameters {
	if in == nil {
		return nil
	}
	out := new(ConditionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DNSSECConfigInitParameters) DeepCopyInto(out *DNSSECConfigInitParameters) {
	*out = *in
	if in.DefaultKeySpecs != nil {
		in, out := &in.DefaultKeySpecs, &out.DefaultKeySpecs
		*out = make([]DefaultKeySpecsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Kind != nil {
		in, out := &in.Kind, &out.Kind
		*out = new(string)
		**out = **in
	}
	if in.NonExistence != nil {
		in, out := &in.NonExistence, &out.NonExistence
		*out = new(string)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DNSSECConfigInitParameters.
func (in *DNSSECConfigInitParameters) DeepCopy() *DNSSECConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(DNSSECConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DNSSECConfigObservation) DeepCopyInto(out *DNSSECConfigObservation) {
	*out = *in
	if in.DefaultKeySpecs != nil {
		in, out := &in.DefaultKeySpecs, &out.DefaultKeySpecs
		*out = make([]DefaultKeySpecsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Kind != nil {
		in, out := &in.Kind, &out.Kind
		*out = new(string)
		**out = **in
	}
	if in.NonExistence != nil {
		in, out := &in.NonExistence, &out.NonExistence
		*out = new(string)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DNSSECConfigObservation.
func (in *DNSSECConfigObservation) DeepCopy() *DNSSECConfigObservation {
	if in == nil {
		return nil
	}
	out := new(DNSSECConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DNSSECConfigParameters) DeepCopyInto(out *DNSSECConfigParameters) {
	*out = *in
	if in.DefaultKeySpecs != nil {
		in, out := &in.DefaultKeySpecs, &out.DefaultKeySpecs
		*out = make([]DefaultKeySpecsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Kind != nil {
		in, out := &in.Kind, &out.Kind
		*out = new(string)
		**out = **in
	}
	if in.NonExistence != nil {
		in, out := &in.NonExistence, &out.NonExistence
		*out = new(string)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DNSSECConfigParameters.
func (in *DNSSECConfigParameters) DeepCopy() *DNSSECConfigParameters {
	if in == nil {
		return nil
	}
	out := new(DNSSECConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DefaultKeySpecsInitParameters) DeepCopyInto(out *DefaultKeySpecsInitParameters) {
	*out = *in
	if in.Algorithm != nil {
		in, out := &in.Algorithm, &out.Algorithm
		*out = new(string)
		**out = **in
	}
	if in.KeyLength != nil {
		in, out := &in.KeyLength, &out.KeyLength
		*out = new(float64)
		**out = **in
	}
	if in.KeyType != nil {
		in, out := &in.KeyType, &out.KeyType
		*out = new(string)
		**out = **in
	}
	if in.Kind != nil {
		in, out := &in.Kind, &out.Kind
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DefaultKeySpecsInitParameters.
func (in *DefaultKeySpecsInitParameters) DeepCopy() *DefaultKeySpecsInitParameters {
	if in == nil {
		return nil
	}
	out := new(DefaultKeySpecsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DefaultKeySpecsObservation) DeepCopyInto(out *DefaultKeySpecsObservation) {
	*out = *in
	if in.Algorithm != nil {
		in, out := &in.Algorithm, &out.Algorithm
		*out = new(string)
		**out = **in
	}
	if in.KeyLength != nil {
		in, out := &in.KeyLength, &out.KeyLength
		*out = new(float64)
		**out = **in
	}
	if in.KeyType != nil {
		in, out := &in.KeyType, &out.KeyType
		*out = new(string)
		**out = **in
	}
	if in.Kind != nil {
		in, out := &in.Kind, &out.Kind
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DefaultKeySpecsObservation.
func (in *DefaultKeySpecsObservation) DeepCopy() *DefaultKeySpecsObservation {
	if in == nil {
		return nil
	}
	out := new(DefaultKeySpecsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DefaultKeySpecsParameters) DeepCopyInto(out *DefaultKeySpecsParameters) {
	*out = *in
	if in.Algorithm != nil {
		in, out := &in.Algorithm, &out.Algorithm
		*out = new(string)
		**out = **in
	}
	if in.KeyLength != nil {
		in, out := &in.KeyLength, &out.KeyLength
		*out = new(float64)
		**out = **in
	}
	if in.KeyType != nil {
		in, out := &in.KeyType, &out.KeyType
		*out = new(string)
		**out = **in
	}
	if in.Kind != nil {
		in, out := &in.Kind, &out.Kind
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DefaultKeySpecsParameters.
func (in *DefaultKeySpecsParameters) DeepCopy() *DefaultKeySpecsParameters {
	if in == nil {
		return nil
	}
	out := new(DefaultKeySpecsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ForwardingConfigInitParameters) DeepCopyInto(out *ForwardingConfigInitParameters) {
	*out = *in
	if in.TargetNameServers != nil {
		in, out := &in.TargetNameServers, &out.TargetNameServers
		*out = make([]TargetNameServersInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ForwardingConfigInitParameters.
func (in *ForwardingConfigInitParameters) DeepCopy() *ForwardingConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(ForwardingConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ForwardingConfigObservation) DeepCopyInto(out *ForwardingConfigObservation) {
	*out = *in
	if in.TargetNameServers != nil {
		in, out := &in.TargetNameServers, &out.TargetNameServers
		*out = make([]TargetNameServersObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ForwardingConfigObservation.
func (in *ForwardingConfigObservation) DeepCopy() *ForwardingConfigObservation {
	if in == nil {
		return nil
	}
	out := new(ForwardingConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ForwardingConfigParameters) DeepCopyInto(out *ForwardingConfigParameters) {
	*out = *in
	if in.TargetNameServers != nil {
		in, out := &in.TargetNameServers, &out.TargetNameServers
		*out = make([]TargetNameServersParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ForwardingConfigParameters.
func (in *ForwardingConfigParameters) DeepCopy() *ForwardingConfigParameters {
	if in == nil {
		return nil
	}
	out := new(ForwardingConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GeoInitParameters) DeepCopyInto(out *GeoInitParameters) {
	*out = *in
	if in.HealthCheckedTargets != nil {
		in, out := &in.HealthCheckedTargets, &out.HealthCheckedTargets
		*out = make([]HealthCheckedTargetsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.Rrdatas != nil {
		in, out := &in.Rrdatas, &out.Rrdatas
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GeoInitParameters.
func (in *GeoInitParameters) DeepCopy() *GeoInitParameters {
	if in == nil {
		return nil
	}
	out := new(GeoInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GeoObservation) DeepCopyInto(out *GeoObservation) {
	*out = *in
	if in.HealthCheckedTargets != nil {
		in, out := &in.HealthCheckedTargets, &out.HealthCheckedTargets
		*out = make([]HealthCheckedTargetsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.Rrdatas != nil {
		in, out := &in.Rrdatas, &out.Rrdatas
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GeoObservation.
func (in *GeoObservation) DeepCopy() *GeoObservation {
	if in == nil {
		return nil
	}
	out := new(GeoObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GeoParameters) DeepCopyInto(out *GeoParameters) {
	*out = *in
	if in.HealthCheckedTargets != nil {
		in, out := &in.HealthCheckedTargets, &out.HealthCheckedTargets
		*out = make([]HealthCheckedTargetsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.Rrdatas != nil {
		in, out := &in.Rrdatas, &out.Rrdatas
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GeoParameters.
func (in *GeoParameters) DeepCopy() *GeoParameters {
	if in == nil {
		return nil
	}
	out := new(GeoParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GkeClustersInitParameters) DeepCopyInto(out *GkeClustersInitParameters) {
	*out = *in
	if in.GkeClusterName != nil {
		in, out := &in.GkeClusterName, &out.GkeClusterName
		*out = new(string)
		**out = **in
	}
	if in.GkeClusterNameRef != nil {
		in, out := &in.GkeClusterNameRef, &out.GkeClusterNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.GkeClusterNameSelector != nil {
		in, out := &in.GkeClusterNameSelector, &out.GkeClusterNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GkeClustersInitParameters.
func (in *GkeClustersInitParameters) DeepCopy() *GkeClustersInitParameters {
	if in == nil {
		return nil
	}
	out := new(GkeClustersInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GkeClustersObservation) DeepCopyInto(out *GkeClustersObservation) {
	*out = *in
	if in.GkeClusterName != nil {
		in, out := &in.GkeClusterName, &out.GkeClusterName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GkeClustersObservation.
func (in *GkeClustersObservation) DeepCopy() *GkeClustersObservation {
	if in == nil {
		return nil
	}
	out := new(GkeClustersObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GkeClustersParameters) DeepCopyInto(out *GkeClustersParameters) {
	*out = *in
	if in.GkeClusterName != nil {
		in, out := &in.GkeClusterName, &out.GkeClusterName
		*out = new(string)
		**out = **in
	}
	if in.GkeClusterNameRef != nil {
		in, out := &in.GkeClusterNameRef, &out.GkeClusterNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.GkeClusterNameSelector != nil {
		in, out := &in.GkeClusterNameSelector, &out.GkeClusterNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GkeClustersParameters.
func (in *GkeClustersParameters) DeepCopy() *GkeClustersParameters {
	if in == nil {
		return nil
	}
	out := new(GkeClustersParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HealthCheckedTargetsInitParameters) DeepCopyInto(out *HealthCheckedTargetsInitParameters) {
	*out = *in
	if in.InternalLoadBalancers != nil {
		in, out := &in.InternalLoadBalancers, &out.InternalLoadBalancers
		*out = make([]InternalLoadBalancersInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HealthCheckedTargetsInitParameters.
func (in *HealthCheckedTargetsInitParameters) DeepCopy() *HealthCheckedTargetsInitParameters {
	if in == nil {
		return nil
	}
	out := new(HealthCheckedTargetsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HealthCheckedTargetsInternalLoadBalancersInitParameters) DeepCopyInto(out *HealthCheckedTargetsInternalLoadBalancersInitParameters) {
	*out = *in
	if in.IPAddress != nil {
		in, out := &in.IPAddress, &out.IPAddress
		*out = new(string)
		**out = **in
	}
	if in.IPProtocol != nil {
		in, out := &in.IPProtocol, &out.IPProtocol
		*out = new(string)
		**out = **in
	}
	if in.LoadBalancerType != nil {
		in, out := &in.LoadBalancerType, &out.LoadBalancerType
		*out = new(string)
		**out = **in
	}
	if in.NetworkURL != nil {
		in, out := &in.NetworkURL, &out.NetworkURL
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HealthCheckedTargetsInternalLoadBalancersInitParameters.
func (in *HealthCheckedTargetsInternalLoadBalancersInitParameters) DeepCopy() *HealthCheckedTargetsInternalLoadBalancersInitParameters {
	if in == nil {
		return nil
	}
	out := new(HealthCheckedTargetsInternalLoadBalancersInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HealthCheckedTargetsInternalLoadBalancersObservation) DeepCopyInto(out *HealthCheckedTargetsInternalLoadBalancersObservation) {
	*out = *in
	if in.IPAddress != nil {
		in, out := &in.IPAddress, &out.IPAddress
		*out = new(string)
		**out = **in
	}
	if in.IPProtocol != nil {
		in, out := &in.IPProtocol, &out.IPProtocol
		*out = new(string)
		**out = **in
	}
	if in.LoadBalancerType != nil {
		in, out := &in.LoadBalancerType, &out.LoadBalancerType
		*out = new(string)
		**out = **in
	}
	if in.NetworkURL != nil {
		in, out := &in.NetworkURL, &out.NetworkURL
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HealthCheckedTargetsInternalLoadBalancersObservation.
func (in *HealthCheckedTargetsInternalLoadBalancersObservation) DeepCopy() *HealthCheckedTargetsInternalLoadBalancersObservation {
	if in == nil {
		return nil
	}
	out := new(HealthCheckedTargetsInternalLoadBalancersObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HealthCheckedTargetsInternalLoadBalancersParameters) DeepCopyInto(out *HealthCheckedTargetsInternalLoadBalancersParameters) {
	*out = *in
	if in.IPAddress != nil {
		in, out := &in.IPAddress, &out.IPAddress
		*out = new(string)
		**out = **in
	}
	if in.IPProtocol != nil {
		in, out := &in.IPProtocol, &out.IPProtocol
		*out = new(string)
		**out = **in
	}
	if in.LoadBalancerType != nil {
		in, out := &in.LoadBalancerType, &out.LoadBalancerType
		*out = new(string)
		**out = **in
	}
	if in.NetworkURL != nil {
		in, out := &in.NetworkURL, &out.NetworkURL
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HealthCheckedTargetsInternalLoadBalancersParameters.
func (in *HealthCheckedTargetsInternalLoadBalancersParameters) DeepCopy() *HealthCheckedTargetsInternalLoadBalancersParameters {
	if in == nil {
		return nil
	}
	out := new(HealthCheckedTargetsInternalLoadBalancersParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HealthCheckedTargetsObservation) DeepCopyInto(out *HealthCheckedTargetsObservation) {
	*out = *in
	if in.InternalLoadBalancers != nil {
		in, out := &in.InternalLoadBalancers, &out.InternalLoadBalancers
		*out = make([]InternalLoadBalancersObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HealthCheckedTargetsObservation.
func (in *HealthCheckedTargetsObservation) DeepCopy() *HealthCheckedTargetsObservation {
	if in == nil {
		return nil
	}
	out := new(HealthCheckedTargetsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HealthCheckedTargetsParameters) DeepCopyInto(out *HealthCheckedTargetsParameters) {
	*out = *in
	if in.InternalLoadBalancers != nil {
		in, out := &in.InternalLoadBalancers, &out.InternalLoadBalancers
		*out = make([]InternalLoadBalancersParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HealthCheckedTargetsParameters.
func (in *HealthCheckedTargetsParameters) DeepCopy() *HealthCheckedTargetsParameters {
	if in == nil {
		return nil
	}
	out := new(HealthCheckedTargetsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InternalLoadBalancersInitParameters) DeepCopyInto(out *InternalLoadBalancersInitParameters) {
	*out = *in
	if in.IPAddress != nil {
		in, out := &in.IPAddress, &out.IPAddress
		*out = new(string)
		**out = **in
	}
	if in.IPProtocol != nil {
		in, out := &in.IPProtocol, &out.IPProtocol
		*out = new(string)
		**out = **in
	}
	if in.LoadBalancerType != nil {
		in, out := &in.LoadBalancerType, &out.LoadBalancerType
		*out = new(string)
		**out = **in
	}
	if in.NetworkURL != nil {
		in, out := &in.NetworkURL, &out.NetworkURL
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InternalLoadBalancersInitParameters.
func (in *InternalLoadBalancersInitParameters) DeepCopy() *InternalLoadBalancersInitParameters {
	if in == nil {
		return nil
	}
	out := new(InternalLoadBalancersInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InternalLoadBalancersObservation) DeepCopyInto(out *InternalLoadBalancersObservation) {
	*out = *in
	if in.IPAddress != nil {
		in, out := &in.IPAddress, &out.IPAddress
		*out = new(string)
		**out = **in
	}
	if in.IPProtocol != nil {
		in, out := &in.IPProtocol, &out.IPProtocol
		*out = new(string)
		**out = **in
	}
	if in.LoadBalancerType != nil {
		in, out := &in.LoadBalancerType, &out.LoadBalancerType
		*out = new(string)
		**out = **in
	}
	if in.NetworkURL != nil {
		in, out := &in.NetworkURL, &out.NetworkURL
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InternalLoadBalancersObservation.
func (in *InternalLoadBalancersObservation) DeepCopy() *InternalLoadBalancersObservation {
	if in == nil {
		return nil
	}
	out := new(InternalLoadBalancersObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InternalLoadBalancersParameters) DeepCopyInto(out *InternalLoadBalancersParameters) {
	*out = *in
	if in.IPAddress != nil {
		in, out := &in.IPAddress, &out.IPAddress
		*out = new(string)
		**out = **in
	}
	if in.IPProtocol != nil {
		in, out := &in.IPProtocol, &out.IPProtocol
		*out = new(string)
		**out = **in
	}
	if in.LoadBalancerType != nil {
		in, out := &in.LoadBalancerType, &out.LoadBalancerType
		*out = new(string)
		**out = **in
	}
	if in.NetworkURL != nil {
		in, out := &in.NetworkURL, &out.NetworkURL
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InternalLoadBalancersParameters.
func (in *InternalLoadBalancersParameters) DeepCopy() *InternalLoadBalancersParameters {
	if in == nil {
		return nil
	}
	out := new(InternalLoadBalancersParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagedZone) DeepCopyInto(out *ManagedZone) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagedZone.
func (in *ManagedZone) DeepCopy() *ManagedZone {
	if in == nil {
		return nil
	}
	out := new(ManagedZone)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ManagedZone) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagedZoneIAMMember) DeepCopyInto(out *ManagedZoneIAMMember) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagedZoneIAMMember.
func (in *ManagedZoneIAMMember) DeepCopy() *ManagedZoneIAMMember {
	if in == nil {
		return nil
	}
	out := new(ManagedZoneIAMMember)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ManagedZoneIAMMember) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagedZoneIAMMemberInitParameters) DeepCopyInto(out *ManagedZoneIAMMemberInitParameters) {
	*out = *in
	if in.Condition != nil {
		in, out := &in.Condition, &out.Condition
		*out = make([]ConditionInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ManagedZone != nil {
		in, out := &in.ManagedZone, &out.ManagedZone
		*out = new(string)
		**out = **in
	}
	if in.Member != nil {
		in, out := &in.Member, &out.Member
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Role != nil {
		in, out := &in.Role, &out.Role
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagedZoneIAMMemberInitParameters.
func (in *ManagedZoneIAMMemberInitParameters) DeepCopy() *ManagedZoneIAMMemberInitParameters {
	if in == nil {
		return nil
	}
	out := new(ManagedZoneIAMMemberInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagedZoneIAMMemberList) DeepCopyInto(out *ManagedZoneIAMMemberList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ManagedZoneIAMMember, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagedZoneIAMMemberList.
func (in *ManagedZoneIAMMemberList) DeepCopy() *ManagedZoneIAMMemberList {
	if in == nil {
		return nil
	}
	out := new(ManagedZoneIAMMemberList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ManagedZoneIAMMemberList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagedZoneIAMMemberObservation) DeepCopyInto(out *ManagedZoneIAMMemberObservation) {
	*out = *in
	if in.Condition != nil {
		in, out := &in.Condition, &out.Condition
		*out = make([]ConditionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Etag != nil {
		in, out := &in.Etag, &out.Etag
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.ManagedZone != nil {
		in, out := &in.ManagedZone, &out.ManagedZone
		*out = new(string)
		**out = **in
	}
	if in.Member != nil {
		in, out := &in.Member, &out.Member
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Role != nil {
		in, out := &in.Role, &out.Role
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagedZoneIAMMemberObservation.
func (in *ManagedZoneIAMMemberObservation) DeepCopy() *ManagedZoneIAMMemberObservation {
	if in == nil {
		return nil
	}
	out := new(ManagedZoneIAMMemberObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagedZoneIAMMemberParameters) DeepCopyInto(out *ManagedZoneIAMMemberParameters) {
	*out = *in
	if in.Condition != nil {
		in, out := &in.Condition, &out.Condition
		*out = make([]ConditionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ManagedZone != nil {
		in, out := &in.ManagedZone, &out.ManagedZone
		*out = new(string)
		**out = **in
	}
	if in.Member != nil {
		in, out := &in.Member, &out.Member
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Role != nil {
		in, out := &in.Role, &out.Role
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagedZoneIAMMemberParameters.
func (in *ManagedZoneIAMMemberParameters) DeepCopy() *ManagedZoneIAMMemberParameters {
	if in == nil {
		return nil
	}
	out := new(ManagedZoneIAMMemberParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagedZoneIAMMemberSpec) DeepCopyInto(out *ManagedZoneIAMMemberSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagedZoneIAMMemberSpec.
func (in *ManagedZoneIAMMemberSpec) DeepCopy() *ManagedZoneIAMMemberSpec {
	if in == nil {
		return nil
	}
	out := new(ManagedZoneIAMMemberSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagedZoneIAMMemberStatus) DeepCopyInto(out *ManagedZoneIAMMemberStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagedZoneIAMMemberStatus.
func (in *ManagedZoneIAMMemberStatus) DeepCopy() *ManagedZoneIAMMemberStatus {
	if in == nil {
		return nil
	}
	out := new(ManagedZoneIAMMemberStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagedZoneInitParameters) DeepCopyInto(out *ManagedZoneInitParameters) {
	*out = *in
	if in.CloudLoggingConfig != nil {
		in, out := &in.CloudLoggingConfig, &out.CloudLoggingConfig
		*out = make([]CloudLoggingConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DNSName != nil {
		in, out := &in.DNSName, &out.DNSName
		*out = new(string)
		**out = **in
	}
	if in.DNSSECConfig != nil {
		in, out := &in.DNSSECConfig, &out.DNSSECConfig
		*out = make([]DNSSECConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.ForceDestroy != nil {
		in, out := &in.ForceDestroy, &out.ForceDestroy
		*out = new(bool)
		**out = **in
	}
	if in.ForwardingConfig != nil {
		in, out := &in.ForwardingConfig, &out.ForwardingConfig
		*out = make([]ForwardingConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.PeeringConfig != nil {
		in, out := &in.PeeringConfig, &out.PeeringConfig
		*out = make([]PeeringConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PrivateVisibilityConfig != nil {
		in, out := &in.PrivateVisibilityConfig, &out.PrivateVisibilityConfig
		*out = make([]PrivateVisibilityConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Visibility != nil {
		in, out := &in.Visibility, &out.Visibility
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagedZoneInitParameters.
func (in *ManagedZoneInitParameters) DeepCopy() *ManagedZoneInitParameters {
	if in == nil {
		return nil
	}
	out := new(ManagedZoneInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagedZoneList) DeepCopyInto(out *ManagedZoneList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ManagedZone, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagedZoneList.
func (in *ManagedZoneList) DeepCopy() *ManagedZoneList {
	if in == nil {
		return nil
	}
	out := new(ManagedZoneList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ManagedZoneList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagedZoneObservation) DeepCopyInto(out *ManagedZoneObservation) {
	*out = *in
	if in.CloudLoggingConfig != nil {
		in, out := &in.CloudLoggingConfig, &out.CloudLoggingConfig
		*out = make([]CloudLoggingConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CreationTime != nil {
		in, out := &in.CreationTime, &out.CreationTime
		*out = new(string)
		**out = **in
	}
	if in.DNSName != nil {
		in, out := &in.DNSName, &out.DNSName
		*out = new(string)
		**out = **in
	}
	if in.DNSSECConfig != nil {
		in, out := &in.DNSSECConfig, &out.DNSSECConfig
		*out = make([]DNSSECConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.EffectiveLabels != nil {
		in, out := &in.EffectiveLabels, &out.EffectiveLabels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ForceDestroy != nil {
		in, out := &in.ForceDestroy, &out.ForceDestroy
		*out = new(bool)
		**out = **in
	}
	if in.ForwardingConfig != nil {
		in, out := &in.ForwardingConfig, &out.ForwardingConfig
		*out = make([]ForwardingConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ManagedZoneID != nil {
		in, out := &in.ManagedZoneID, &out.ManagedZoneID
		*out = new(float64)
		**out = **in
	}
	if in.NameServers != nil {
		in, out := &in.NameServers, &out.NameServers
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.PeeringConfig != nil {
		in, out := &in.PeeringConfig, &out.PeeringConfig
		*out = make([]PeeringConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PrivateVisibilityConfig != nil {
		in, out := &in.PrivateVisibilityConfig, &out.PrivateVisibilityConfig
		*out = make([]PrivateVisibilityConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.TerraformLabels != nil {
		in, out := &in.TerraformLabels, &out.TerraformLabels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Visibility != nil {
		in, out := &in.Visibility, &out.Visibility
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagedZoneObservation.
func (in *ManagedZoneObservation) DeepCopy() *ManagedZoneObservation {
	if in == nil {
		return nil
	}
	out := new(ManagedZoneObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagedZoneParameters) DeepCopyInto(out *ManagedZoneParameters) {
	*out = *in
	if in.CloudLoggingConfig != nil {
		in, out := &in.CloudLoggingConfig, &out.CloudLoggingConfig
		*out = make([]CloudLoggingConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DNSName != nil {
		in, out := &in.DNSName, &out.DNSName
		*out = new(string)
		**out = **in
	}
	if in.DNSSECConfig != nil {
		in, out := &in.DNSSECConfig, &out.DNSSECConfig
		*out = make([]DNSSECConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.ForceDestroy != nil {
		in, out := &in.ForceDestroy, &out.ForceDestroy
		*out = new(bool)
		**out = **in
	}
	if in.ForwardingConfig != nil {
		in, out := &in.ForwardingConfig, &out.ForwardingConfig
		*out = make([]ForwardingConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.PeeringConfig != nil {
		in, out := &in.PeeringConfig, &out.PeeringConfig
		*out = make([]PeeringConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PrivateVisibilityConfig != nil {
		in, out := &in.PrivateVisibilityConfig, &out.PrivateVisibilityConfig
		*out = make([]PrivateVisibilityConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Visibility != nil {
		in, out := &in.Visibility, &out.Visibility
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagedZoneParameters.
func (in *ManagedZoneParameters) DeepCopy() *ManagedZoneParameters {
	if in == nil {
		return nil
	}
	out := new(ManagedZoneParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagedZoneSpec) DeepCopyInto(out *ManagedZoneSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagedZoneSpec.
func (in *ManagedZoneSpec) DeepCopy() *ManagedZoneSpec {
	if in == nil {
		return nil
	}
	out := new(ManagedZoneSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagedZoneStatus) DeepCopyInto(out *ManagedZoneStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagedZoneStatus.
func (in *ManagedZoneStatus) DeepCopy() *ManagedZoneStatus {
	if in == nil {
		return nil
	}
	out := new(ManagedZoneStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworksInitParameters) DeepCopyInto(out *NetworksInitParameters) {
	*out = *in
	if in.NetworkURL != nil {
		in, out := &in.NetworkURL, &out.NetworkURL
		*out = new(string)
		**out = **in
	}
	if in.NetworkURLRef != nil {
		in, out := &in.NetworkURLRef, &out.NetworkURLRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.NetworkURLSelector != nil {
		in, out := &in.NetworkURLSelector, &out.NetworkURLSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworksInitParameters.
func (in *NetworksInitParameters) DeepCopy() *NetworksInitParameters {
	if in == nil {
		return nil
	}
	out := new(NetworksInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworksObservation) DeepCopyInto(out *NetworksObservation) {
	*out = *in
	if in.NetworkURL != nil {
		in, out := &in.NetworkURL, &out.NetworkURL
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworksObservation.
func (in *NetworksObservation) DeepCopy() *NetworksObservation {
	if in == nil {
		return nil
	}
	out := new(NetworksObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworksParameters) DeepCopyInto(out *NetworksParameters) {
	*out = *in
	if in.NetworkURL != nil {
		in, out := &in.NetworkURL, &out.NetworkURL
		*out = new(string)
		**out = **in
	}
	if in.NetworkURLRef != nil {
		in, out := &in.NetworkURLRef, &out.NetworkURLRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.NetworkURLSelector != nil {
		in, out := &in.NetworkURLSelector, &out.NetworkURLSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworksParameters.
func (in *NetworksParameters) DeepCopy() *NetworksParameters {
	if in == nil {
		return nil
	}
	out := new(NetworksParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PeeringConfigInitParameters) DeepCopyInto(out *PeeringConfigInitParameters) {
	*out = *in
	if in.TargetNetwork != nil {
		in, out := &in.TargetNetwork, &out.TargetNetwork
		*out = make([]TargetNetworkInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PeeringConfigInitParameters.
func (in *PeeringConfigInitParameters) DeepCopy() *PeeringConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(PeeringConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PeeringConfigObservation) DeepCopyInto(out *PeeringConfigObservation) {
	*out = *in
	if in.TargetNetwork != nil {
		in, out := &in.TargetNetwork, &out.TargetNetwork
		*out = make([]TargetNetworkObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PeeringConfigObservation.
func (in *PeeringConfigObservation) DeepCopy() *PeeringConfigObservation {
	if in == nil {
		return nil
	}
	out := new(PeeringConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PeeringConfigParameters) DeepCopyInto(out *PeeringConfigParameters) {
	*out = *in
	if in.TargetNetwork != nil {
		in, out := &in.TargetNetwork, &out.TargetNetwork
		*out = make([]TargetNetworkParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PeeringConfigParameters.
func (in *PeeringConfigParameters) DeepCopy() *PeeringConfigParameters {
	if in == nil {
		return nil
	}
	out := new(PeeringConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Policy) DeepCopyInto(out *Policy) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Policy.
func (in *Policy) DeepCopy() *Policy {
	if in == nil {
		return nil
	}
	out := new(Policy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Policy) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PolicyInitParameters) DeepCopyInto(out *PolicyInitParameters) {
	*out = *in
	if in.AlternativeNameServerConfig != nil {
		in, out := &in.AlternativeNameServerConfig, &out.AlternativeNameServerConfig
		*out = make([]AlternativeNameServerConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.EnableInboundForwarding != nil {
		in, out := &in.EnableInboundForwarding, &out.EnableInboundForwarding
		*out = new(bool)
		**out = **in
	}
	if in.EnableLogging != nil {
		in, out := &in.EnableLogging, &out.EnableLogging
		*out = new(bool)
		**out = **in
	}
	if in.Networks != nil {
		in, out := &in.Networks, &out.Networks
		*out = make([]PolicyNetworksInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PolicyInitParameters.
func (in *PolicyInitParameters) DeepCopy() *PolicyInitParameters {
	if in == nil {
		return nil
	}
	out := new(PolicyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PolicyList) DeepCopyInto(out *PolicyList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Policy, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PolicyList.
func (in *PolicyList) DeepCopy() *PolicyList {
	if in == nil {
		return nil
	}
	out := new(PolicyList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *PolicyList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PolicyNetworksInitParameters) DeepCopyInto(out *PolicyNetworksInitParameters) {
	*out = *in
	if in.NetworkRef != nil {
		in, out := &in.NetworkRef, &out.NetworkRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.NetworkSelector != nil {
		in, out := &in.NetworkSelector, &out.NetworkSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.NetworkURL != nil {
		in, out := &in.NetworkURL, &out.NetworkURL
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PolicyNetworksInitParameters.
func (in *PolicyNetworksInitParameters) DeepCopy() *PolicyNetworksInitParameters {
	if in == nil {
		return nil
	}
	out := new(PolicyNetworksInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PolicyNetworksObservation) DeepCopyInto(out *PolicyNetworksObservation) {
	*out = *in
	if in.NetworkURL != nil {
		in, out := &in.NetworkURL, &out.NetworkURL
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PolicyNetworksObservation.
func (in *PolicyNetworksObservation) DeepCopy() *PolicyNetworksObservation {
	if in == nil {
		return nil
	}
	out := new(PolicyNetworksObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PolicyNetworksParameters) DeepCopyInto(out *PolicyNetworksParameters) {
	*out = *in
	if in.NetworkRef != nil {
		in, out := &in.NetworkRef, &out.NetworkRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.NetworkSelector != nil {
		in, out := &in.NetworkSelector, &out.NetworkSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.NetworkURL != nil {
		in, out := &in.NetworkURL, &out.NetworkURL
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PolicyNetworksParameters.
func (in *PolicyNetworksParameters) DeepCopy() *PolicyNetworksParameters {
	if in == nil {
		return nil
	}
	out := new(PolicyNetworksParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PolicyObservation) DeepCopyInto(out *PolicyObservation) {
	*out = *in
	if in.AlternativeNameServerConfig != nil {
		in, out := &in.AlternativeNameServerConfig, &out.AlternativeNameServerConfig
		*out = make([]AlternativeNameServerConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.EnableInboundForwarding != nil {
		in, out := &in.EnableInboundForwarding, &out.EnableInboundForwarding
		*out = new(bool)
		**out = **in
	}
	if in.EnableLogging != nil {
		in, out := &in.EnableLogging, &out.EnableLogging
		*out = new(bool)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Networks != nil {
		in, out := &in.Networks, &out.Networks
		*out = make([]PolicyNetworksObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PolicyObservation.
func (in *PolicyObservation) DeepCopy() *PolicyObservation {
	if in == nil {
		return nil
	}
	out := new(PolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PolicyParameters) DeepCopyInto(out *PolicyParameters) {
	*out = *in
	if in.AlternativeNameServerConfig != nil {
		in, out := &in.AlternativeNameServerConfig, &out.AlternativeNameServerConfig
		*out = make([]AlternativeNameServerConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.EnableInboundForwarding != nil {
		in, out := &in.EnableInboundForwarding, &out.EnableInboundForwarding
		*out = new(bool)
		**out = **in
	}
	if in.EnableLogging != nil {
		in, out := &in.EnableLogging, &out.EnableLogging
		*out = new(bool)
		**out = **in
	}
	if in.Networks != nil {
		in, out := &in.Networks, &out.Networks
		*out = make([]PolicyNetworksParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PolicyParameters.
func (in *PolicyParameters) DeepCopy() *PolicyParameters {
	if in == nil {
		return nil
	}
	out := new(PolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PolicySpec) DeepCopyInto(out *PolicySpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PolicySpec.
func (in *PolicySpec) DeepCopy() *PolicySpec {
	if in == nil {
		return nil
	}
	out := new(PolicySpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PolicyStatus) DeepCopyInto(out *PolicyStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PolicyStatus.
func (in *PolicyStatus) DeepCopy() *PolicyStatus {
	if in == nil {
		return nil
	}
	out := new(PolicyStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrimaryBackupInitParameters) DeepCopyInto(out *PrimaryBackupInitParameters) {
	*out = *in
	if in.BackupGeo != nil {
		in, out := &in.BackupGeo, &out.BackupGeo
		*out = make([]BackupGeoInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EnableGeoFencingForBackups != nil {
		in, out := &in.EnableGeoFencingForBackups, &out.EnableGeoFencingForBackups
		*out = new(bool)
		**out = **in
	}
	if in.Primary != nil {
		in, out := &in.Primary, &out.Primary
		*out = make([]PrimaryInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TrickleRatio != nil {
		in, out := &in.TrickleRatio, &out.TrickleRatio
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrimaryBackupInitParameters.
func (in *PrimaryBackupInitParameters) DeepCopy() *PrimaryBackupInitParameters {
	if in == nil {
		return nil
	}
	out := new(PrimaryBackupInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrimaryBackupObservation) DeepCopyInto(out *PrimaryBackupObservation) {
	*out = *in
	if in.BackupGeo != nil {
		in, out := &in.BackupGeo, &out.BackupGeo
		*out = make([]BackupGeoObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EnableGeoFencingForBackups != nil {
		in, out := &in.EnableGeoFencingForBackups, &out.EnableGeoFencingForBackups
		*out = new(bool)
		**out = **in
	}
	if in.Primary != nil {
		in, out := &in.Primary, &out.Primary
		*out = make([]PrimaryObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TrickleRatio != nil {
		in, out := &in.TrickleRatio, &out.TrickleRatio
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrimaryBackupObservation.
func (in *PrimaryBackupObservation) DeepCopy() *PrimaryBackupObservation {
	if in == nil {
		return nil
	}
	out := new(PrimaryBackupObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrimaryBackupParameters) DeepCopyInto(out *PrimaryBackupParameters) {
	*out = *in
	if in.BackupGeo != nil {
		in, out := &in.BackupGeo, &out.BackupGeo
		*out = make([]BackupGeoParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EnableGeoFencingForBackups != nil {
		in, out := &in.EnableGeoFencingForBackups, &out.EnableGeoFencingForBackups
		*out = new(bool)
		**out = **in
	}
	if in.Primary != nil {
		in, out := &in.Primary, &out.Primary
		*out = make([]PrimaryParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TrickleRatio != nil {
		in, out := &in.TrickleRatio, &out.TrickleRatio
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrimaryBackupParameters.
func (in *PrimaryBackupParameters) DeepCopy() *PrimaryBackupParameters {
	if in == nil {
		return nil
	}
	out := new(PrimaryBackupParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrimaryInitParameters) DeepCopyInto(out *PrimaryInitParameters) {
	*out = *in
	if in.InternalLoadBalancers != nil {
		in, out := &in.InternalLoadBalancers, &out.InternalLoadBalancers
		*out = make([]PrimaryInternalLoadBalancersInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrimaryInitParameters.
func (in *PrimaryInitParameters) DeepCopy() *PrimaryInitParameters {
	if in == nil {
		return nil
	}
	out := new(PrimaryInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrimaryInternalLoadBalancersInitParameters) DeepCopyInto(out *PrimaryInternalLoadBalancersInitParameters) {
	*out = *in
	if in.IPAddress != nil {
		in, out := &in.IPAddress, &out.IPAddress
		*out = new(string)
		**out = **in
	}
	if in.IPAddressRef != nil {
		in, out := &in.IPAddressRef, &out.IPAddressRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.IPAddressSelector != nil {
		in, out := &in.IPAddressSelector, &out.IPAddressSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.IPProtocol != nil {
		in, out := &in.IPProtocol, &out.IPProtocol
		*out = new(string)
		**out = **in
	}
	if in.LoadBalancerType != nil {
		in, out := &in.LoadBalancerType, &out.LoadBalancerType
		*out = new(string)
		**out = **in
	}
	if in.NetworkURL != nil {
		in, out := &in.NetworkURL, &out.NetworkURL
		*out = new(string)
		**out = **in
	}
	if in.NetworkURLRef != nil {
		in, out := &in.NetworkURLRef, &out.NetworkURLRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.NetworkURLSelector != nil {
		in, out := &in.NetworkURLSelector, &out.NetworkURLSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.ProjectRef != nil {
		in, out := &in.ProjectRef, &out.ProjectRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ProjectSelector != nil {
		in, out := &in.ProjectSelector, &out.ProjectSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.RegionRef != nil {
		in, out := &in.RegionRef, &out.RegionRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.RegionSelector != nil {
		in, out := &in.RegionSelector, &out.RegionSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrimaryInternalLoadBalancersInitParameters.
func (in *PrimaryInternalLoadBalancersInitParameters) DeepCopy() *PrimaryInternalLoadBalancersInitParameters {
	if in == nil {
		return nil
	}
	out := new(PrimaryInternalLoadBalancersInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrimaryInternalLoadBalancersObservation) DeepCopyInto(out *PrimaryInternalLoadBalancersObservation) {
	*out = *in
	if in.IPAddress != nil {
		in, out := &in.IPAddress, &out.IPAddress
		*out = new(string)
		**out = **in
	}
	if in.IPProtocol != nil {
		in, out := &in.IPProtocol, &out.IPProtocol
		*out = new(string)
		**out = **in
	}
	if in.LoadBalancerType != nil {
		in, out := &in.LoadBalancerType, &out.LoadBalancerType
		*out = new(string)
		**out = **in
	}
	if in.NetworkURL != nil {
		in, out := &in.NetworkURL, &out.NetworkURL
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrimaryInternalLoadBalancersObservation.
func (in *PrimaryInternalLoadBalancersObservation) DeepCopy() *PrimaryInternalLoadBalancersObservation {
	if in == nil {
		return nil
	}
	out := new(PrimaryInternalLoadBalancersObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrimaryInternalLoadBalancersParameters) DeepCopyInto(out *PrimaryInternalLoadBalancersParameters) {
	*out = *in
	if in.IPAddress != nil {
		in, out := &in.IPAddress, &out.IPAddress
		*out = new(string)
		**out = **in
	}
	if in.IPAddressRef != nil {
		in, out := &in.IPAddressRef, &out.IPAddressRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.IPAddressSelector != nil {
		in, out := &in.IPAddressSelector, &out.IPAddressSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.IPProtocol != nil {
		in, out := &in.IPProtocol, &out.IPProtocol
		*out = new(string)
		**out = **in
	}
	if in.LoadBalancerType != nil {
		in, out := &in.LoadBalancerType, &out.LoadBalancerType
		*out = new(string)
		**out = **in
	}
	if in.NetworkURL != nil {
		in, out := &in.NetworkURL, &out.NetworkURL
		*out = new(string)
		**out = **in
	}
	if in.NetworkURLRef != nil {
		in, out := &in.NetworkURLRef, &out.NetworkURLRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.NetworkURLSelector != nil {
		in, out := &in.NetworkURLSelector, &out.NetworkURLSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.ProjectRef != nil {
		in, out := &in.ProjectRef, &out.ProjectRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ProjectSelector != nil {
		in, out := &in.ProjectSelector, &out.ProjectSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.RegionRef != nil {
		in, out := &in.RegionRef, &out.RegionRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.RegionSelector != nil {
		in, out := &in.RegionSelector, &out.RegionSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrimaryInternalLoadBalancersParameters.
func (in *PrimaryInternalLoadBalancersParameters) DeepCopy() *PrimaryInternalLoadBalancersParameters {
	if in == nil {
		return nil
	}
	out := new(PrimaryInternalLoadBalancersParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrimaryObservation) DeepCopyInto(out *PrimaryObservation) {
	*out = *in
	if in.InternalLoadBalancers != nil {
		in, out := &in.InternalLoadBalancers, &out.InternalLoadBalancers
		*out = make([]PrimaryInternalLoadBalancersObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrimaryObservation.
func (in *PrimaryObservation) DeepCopy() *PrimaryObservation {
	if in == nil {
		return nil
	}
	out := new(PrimaryObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrimaryParameters) DeepCopyInto(out *PrimaryParameters) {
	*out = *in
	if in.InternalLoadBalancers != nil {
		in, out := &in.InternalLoadBalancers, &out.InternalLoadBalancers
		*out = make([]PrimaryInternalLoadBalancersParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrimaryParameters.
func (in *PrimaryParameters) DeepCopy() *PrimaryParameters {
	if in == nil {
		return nil
	}
	out := new(PrimaryParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateVisibilityConfigInitParameters) DeepCopyInto(out *PrivateVisibilityConfigInitParameters) {
	*out = *in
	if in.GkeClusters != nil {
		in, out := &in.GkeClusters, &out.GkeClusters
		*out = make([]GkeClustersInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Networks != nil {
		in, out := &in.Networks, &out.Networks
		*out = make([]NetworksInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateVisibilityConfigInitParameters.
func (in *PrivateVisibilityConfigInitParameters) DeepCopy() *PrivateVisibilityConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(PrivateVisibilityConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateVisibilityConfigObservation) DeepCopyInto(out *PrivateVisibilityConfigObservation) {
	*out = *in
	if in.GkeClusters != nil {
		in, out := &in.GkeClusters, &out.GkeClusters
		*out = make([]GkeClustersObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Networks != nil {
		in, out := &in.Networks, &out.Networks
		*out = make([]NetworksObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateVisibilityConfigObservation.
func (in *PrivateVisibilityConfigObservation) DeepCopy() *PrivateVisibilityConfigObservation {
	if in == nil {
		return nil
	}
	out := new(PrivateVisibilityConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateVisibilityConfigParameters) DeepCopyInto(out *PrivateVisibilityConfigParameters) {
	*out = *in
	if in.GkeClusters != nil {
		in, out := &in.GkeClusters, &out.GkeClusters
		*out = make([]GkeClustersParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Networks != nil {
		in, out := &in.Networks, &out.Networks
		*out = make([]NetworksParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateVisibilityConfigParameters.
func (in *PrivateVisibilityConfigParameters) DeepCopy() *PrivateVisibilityConfigParameters {
	if in == nil {
		return nil
	}
	out := new(PrivateVisibilityConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RecordSet) DeepCopyInto(out *RecordSet) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RecordSet.
func (in *RecordSet) DeepCopy() *RecordSet {
	if in == nil {
		return nil
	}
	out := new(RecordSet)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RecordSet) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RecordSetInitParameters) DeepCopyInto(out *RecordSetInitParameters) {
	*out = *in
	if in.ManagedZone != nil {
		in, out := &in.ManagedZone, &out.ManagedZone
		*out = new(string)
		**out = **in
	}
	if in.ManagedZoneRef != nil {
		in, out := &in.ManagedZoneRef, &out.ManagedZoneRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ManagedZoneSelector != nil {
		in, out := &in.ManagedZoneSelector, &out.ManagedZoneSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.RoutingPolicy != nil {
		in, out := &in.RoutingPolicy, &out.RoutingPolicy
		*out = make([]RoutingPolicyInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Rrdatas != nil {
		in, out := &in.Rrdatas, &out.Rrdatas
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.TTL != nil {
		in, out := &in.TTL, &out.TTL
		*out = new(float64)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RecordSetInitParameters.
func (in *RecordSetInitParameters) DeepCopy() *RecordSetInitParameters {
	if in == nil {
		return nil
	}
	out := new(RecordSetInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RecordSetList) DeepCopyInto(out *RecordSetList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]RecordSet, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RecordSetList.
func (in *RecordSetList) DeepCopy() *RecordSetList {
	if in == nil {
		return nil
	}
	out := new(RecordSetList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RecordSetList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RecordSetObservation) DeepCopyInto(out *RecordSetObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.ManagedZone != nil {
		in, out := &in.ManagedZone, &out.ManagedZone
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.RoutingPolicy != nil {
		in, out := &in.RoutingPolicy, &out.RoutingPolicy
		*out = make([]RoutingPolicyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Rrdatas != nil {
		in, out := &in.Rrdatas, &out.Rrdatas
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.TTL != nil {
		in, out := &in.TTL, &out.TTL
		*out = new(float64)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RecordSetObservation.
func (in *RecordSetObservation) DeepCopy() *RecordSetObservation {
	if in == nil {
		return nil
	}
	out := new(RecordSetObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RecordSetParameters) DeepCopyInto(out *RecordSetParameters) {
	*out = *in
	if in.ManagedZone != nil {
		in, out := &in.ManagedZone, &out.ManagedZone
		*out = new(string)
		**out = **in
	}
	if in.ManagedZoneRef != nil {
		in, out := &in.ManagedZoneRef, &out.ManagedZoneRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ManagedZoneSelector != nil {
		in, out := &in.ManagedZoneSelector, &out.ManagedZoneSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.RoutingPolicy != nil {
		in, out := &in.RoutingPolicy, &out.RoutingPolicy
		*out = make([]RoutingPolicyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Rrdatas != nil {
		in, out := &in.Rrdatas, &out.Rrdatas
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.TTL != nil {
		in, out := &in.TTL, &out.TTL
		*out = new(float64)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RecordSetParameters.
func (in *RecordSetParameters) DeepCopy() *RecordSetParameters {
	if in == nil {
		return nil
	}
	out := new(RecordSetParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RecordSetSpec) DeepCopyInto(out *RecordSetSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RecordSetSpec.
func (in *RecordSetSpec) DeepCopy() *RecordSetSpec {
	if in == nil {
		return nil
	}
	out := new(RecordSetSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RecordSetStatus) DeepCopyInto(out *RecordSetStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RecordSetStatus.
func (in *RecordSetStatus) DeepCopy() *RecordSetStatus {
	if in == nil {
		return nil
	}
	out := new(RecordSetStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RoutingPolicyInitParameters) DeepCopyInto(out *RoutingPolicyInitParameters) {
	*out = *in
	if in.EnableGeoFencing != nil {
		in, out := &in.EnableGeoFencing, &out.EnableGeoFencing
		*out = new(bool)
		**out = **in
	}
	if in.Geo != nil {
		in, out := &in.Geo, &out.Geo
		*out = make([]GeoInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PrimaryBackup != nil {
		in, out := &in.PrimaryBackup, &out.PrimaryBackup
		*out = make([]PrimaryBackupInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Wrr != nil {
		in, out := &in.Wrr, &out.Wrr
		*out = make([]WrrInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RoutingPolicyInitParameters.
func (in *RoutingPolicyInitParameters) DeepCopy() *RoutingPolicyInitParameters {
	if in == nil {
		return nil
	}
	out := new(RoutingPolicyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RoutingPolicyObservation) DeepCopyInto(out *RoutingPolicyObservation) {
	*out = *in
	if in.EnableGeoFencing != nil {
		in, out := &in.EnableGeoFencing, &out.EnableGeoFencing
		*out = new(bool)
		**out = **in
	}
	if in.Geo != nil {
		in, out := &in.Geo, &out.Geo
		*out = make([]GeoObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PrimaryBackup != nil {
		in, out := &in.PrimaryBackup, &out.PrimaryBackup
		*out = make([]PrimaryBackupObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Wrr != nil {
		in, out := &in.Wrr, &out.Wrr
		*out = make([]WrrObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RoutingPolicyObservation.
func (in *RoutingPolicyObservation) DeepCopy() *RoutingPolicyObservation {
	if in == nil {
		return nil
	}
	out := new(RoutingPolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RoutingPolicyParameters) DeepCopyInto(out *RoutingPolicyParameters) {
	*out = *in
	if in.EnableGeoFencing != nil {
		in, out := &in.EnableGeoFencing, &out.EnableGeoFencing
		*out = new(bool)
		**out = **in
	}
	if in.Geo != nil {
		in, out := &in.Geo, &out.Geo
		*out = make([]GeoParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PrimaryBackup != nil {
		in, out := &in.PrimaryBackup, &out.PrimaryBackup
		*out = make([]PrimaryBackupParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Wrr != nil {
		in, out := &in.Wrr, &out.Wrr
		*out = make([]WrrParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RoutingPolicyParameters.
func (in *RoutingPolicyParameters) DeepCopy() *RoutingPolicyParameters {
	if in == nil {
		return nil
	}
	out := new(RoutingPolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TargetNameServersInitParameters) DeepCopyInto(out *TargetNameServersInitParameters) {
	*out = *in
	if in.ForwardingPath != nil {
		in, out := &in.ForwardingPath, &out.ForwardingPath
		*out = new(string)
		**out = **in
	}
	if in.IPv4Address != nil {
		in, out := &in.IPv4Address, &out.IPv4Address
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TargetNameServersInitParameters.
func (in *TargetNameServersInitParameters) DeepCopy() *TargetNameServersInitParameters {
	if in == nil {
		return nil
	}
	out := new(TargetNameServersInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TargetNameServersObservation) DeepCopyInto(out *TargetNameServersObservation) {
	*out = *in
	if in.ForwardingPath != nil {
		in, out := &in.ForwardingPath, &out.ForwardingPath
		*out = new(string)
		**out = **in
	}
	if in.IPv4Address != nil {
		in, out := &in.IPv4Address, &out.IPv4Address
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TargetNameServersObservation.
func (in *TargetNameServersObservation) DeepCopy() *TargetNameServersObservation {
	if in == nil {
		return nil
	}
	out := new(TargetNameServersObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TargetNameServersParameters) DeepCopyInto(out *TargetNameServersParameters) {
	*out = *in
	if in.ForwardingPath != nil {
		in, out := &in.ForwardingPath, &out.ForwardingPath
		*out = new(string)
		**out = **in
	}
	if in.IPv4Address != nil {
		in, out := &in.IPv4Address, &out.IPv4Address
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TargetNameServersParameters.
func (in *TargetNameServersParameters) DeepCopy() *TargetNameServersParameters {
	if in == nil {
		return nil
	}
	out := new(TargetNameServersParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TargetNetworkInitParameters) DeepCopyInto(out *TargetNetworkInitParameters) {
	*out = *in
	if in.NetworkURL != nil {
		in, out := &in.NetworkURL, &out.NetworkURL
		*out = new(string)
		**out = **in
	}
	if in.NetworkURLRef != nil {
		in, out := &in.NetworkURLRef, &out.NetworkURLRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.NetworkURLSelector != nil {
		in, out := &in.NetworkURLSelector, &out.NetworkURLSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TargetNetworkInitParameters.
func (in *TargetNetworkInitParameters) DeepCopy() *TargetNetworkInitParameters {
	if in == nil {
		return nil
	}
	out := new(TargetNetworkInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TargetNetworkObservation) DeepCopyInto(out *TargetNetworkObservation) {
	*out = *in
	if in.NetworkURL != nil {
		in, out := &in.NetworkURL, &out.NetworkURL
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TargetNetworkObservation.
func (in *TargetNetworkObservation) DeepCopy() *TargetNetworkObservation {
	if in == nil {
		return nil
	}
	out := new(TargetNetworkObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TargetNetworkParameters) DeepCopyInto(out *TargetNetworkParameters) {
	*out = *in
	if in.NetworkURL != nil {
		in, out := &in.NetworkURL, &out.NetworkURL
		*out = new(string)
		**out = **in
	}
	if in.NetworkURLRef != nil {
		in, out := &in.NetworkURLRef, &out.NetworkURLRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.NetworkURLSelector != nil {
		in, out := &in.NetworkURLSelector, &out.NetworkURLSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TargetNetworkParameters.
func (in *TargetNetworkParameters) DeepCopy() *TargetNetworkParameters {
	if in == nil {
		return nil
	}
	out := new(TargetNetworkParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WrrHealthCheckedTargetsInitParameters) DeepCopyInto(out *WrrHealthCheckedTargetsInitParameters) {
	*out = *in
	if in.InternalLoadBalancers != nil {
		in, out := &in.InternalLoadBalancers, &out.InternalLoadBalancers
		*out = make([]WrrHealthCheckedTargetsInternalLoadBalancersInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WrrHealthCheckedTargetsInitParameters.
func (in *WrrHealthCheckedTargetsInitParameters) DeepCopy() *WrrHealthCheckedTargetsInitParameters {
	if in == nil {
		return nil
	}
	out := new(WrrHealthCheckedTargetsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WrrHealthCheckedTargetsInternalLoadBalancersInitParameters) DeepCopyInto(out *WrrHealthCheckedTargetsInternalLoadBalancersInitParameters) {
	*out = *in
	if in.IPAddress != nil {
		in, out := &in.IPAddress, &out.IPAddress
		*out = new(string)
		**out = **in
	}
	if in.IPProtocol != nil {
		in, out := &in.IPProtocol, &out.IPProtocol
		*out = new(string)
		**out = **in
	}
	if in.LoadBalancerType != nil {
		in, out := &in.LoadBalancerType, &out.LoadBalancerType
		*out = new(string)
		**out = **in
	}
	if in.NetworkURL != nil {
		in, out := &in.NetworkURL, &out.NetworkURL
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WrrHealthCheckedTargetsInternalLoadBalancersInitParameters.
func (in *WrrHealthCheckedTargetsInternalLoadBalancersInitParameters) DeepCopy() *WrrHealthCheckedTargetsInternalLoadBalancersInitParameters {
	if in == nil {
		return nil
	}
	out := new(WrrHealthCheckedTargetsInternalLoadBalancersInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WrrHealthCheckedTargetsInternalLoadBalancersObservation) DeepCopyInto(out *WrrHealthCheckedTargetsInternalLoadBalancersObservation) {
	*out = *in
	if in.IPAddress != nil {
		in, out := &in.IPAddress, &out.IPAddress
		*out = new(string)
		**out = **in
	}
	if in.IPProtocol != nil {
		in, out := &in.IPProtocol, &out.IPProtocol
		*out = new(string)
		**out = **in
	}
	if in.LoadBalancerType != nil {
		in, out := &in.LoadBalancerType, &out.LoadBalancerType
		*out = new(string)
		**out = **in
	}
	if in.NetworkURL != nil {
		in, out := &in.NetworkURL, &out.NetworkURL
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WrrHealthCheckedTargetsInternalLoadBalancersObservation.
func (in *WrrHealthCheckedTargetsInternalLoadBalancersObservation) DeepCopy() *WrrHealthCheckedTargetsInternalLoadBalancersObservation {
	if in == nil {
		return nil
	}
	out := new(WrrHealthCheckedTargetsInternalLoadBalancersObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WrrHealthCheckedTargetsInternalLoadBalancersParameters) DeepCopyInto(out *WrrHealthCheckedTargetsInternalLoadBalancersParameters) {
	*out = *in
	if in.IPAddress != nil {
		in, out := &in.IPAddress, &out.IPAddress
		*out = new(string)
		**out = **in
	}
	if in.IPProtocol != nil {
		in, out := &in.IPProtocol, &out.IPProtocol
		*out = new(string)
		**out = **in
	}
	if in.LoadBalancerType != nil {
		in, out := &in.LoadBalancerType, &out.LoadBalancerType
		*out = new(string)
		**out = **in
	}
	if in.NetworkURL != nil {
		in, out := &in.NetworkURL, &out.NetworkURL
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WrrHealthCheckedTargetsInternalLoadBalancersParameters.
func (in *WrrHealthCheckedTargetsInternalLoadBalancersParameters) DeepCopy() *WrrHealthCheckedTargetsInternalLoadBalancersParameters {
	if in == nil {
		return nil
	}
	out := new(WrrHealthCheckedTargetsInternalLoadBalancersParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WrrHealthCheckedTargetsObservation) DeepCopyInto(out *WrrHealthCheckedTargetsObservation) {
	*out = *in
	if in.InternalLoadBalancers != nil {
		in, out := &in.InternalLoadBalancers, &out.InternalLoadBalancers
		*out = make([]WrrHealthCheckedTargetsInternalLoadBalancersObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WrrHealthCheckedTargetsObservation.
func (in *WrrHealthCheckedTargetsObservation) DeepCopy() *WrrHealthCheckedTargetsObservation {
	if in == nil {
		return nil
	}
	out := new(WrrHealthCheckedTargetsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WrrHealthCheckedTargetsParameters) DeepCopyInto(out *WrrHealthCheckedTargetsParameters) {
	*out = *in
	if in.InternalLoadBalancers != nil {
		in, out := &in.InternalLoadBalancers, &out.InternalLoadBalancers
		*out = make([]WrrHealthCheckedTargetsInternalLoadBalancersParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WrrHealthCheckedTargetsParameters.
func (in *WrrHealthCheckedTargetsParameters) DeepCopy() *WrrHealthCheckedTargetsParameters {
	if in == nil {
		return nil
	}
	out := new(WrrHealthCheckedTargetsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WrrInitParameters) DeepCopyInto(out *WrrInitParameters) {
	*out = *in
	if in.HealthCheckedTargets != nil {
		in, out := &in.HealthCheckedTargets, &out.HealthCheckedTargets
		*out = make([]WrrHealthCheckedTargetsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Rrdatas != nil {
		in, out := &in.Rrdatas, &out.Rrdatas
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Weight != nil {
		in, out := &in.Weight, &out.Weight
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WrrInitParameters.
func (in *WrrInitParameters) DeepCopy() *WrrInitParameters {
	if in == nil {
		return nil
	}
	out := new(WrrInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WrrObservation) DeepCopyInto(out *WrrObservation) {
	*out = *in
	if in.HealthCheckedTargets != nil {
		in, out := &in.HealthCheckedTargets, &out.HealthCheckedTargets
		*out = make([]WrrHealthCheckedTargetsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Rrdatas != nil {
		in, out := &in.Rrdatas, &out.Rrdatas
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Weight != nil {
		in, out := &in.Weight, &out.Weight
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WrrObservation.
func (in *WrrObservation) DeepCopy() *WrrObservation {
	if in == nil {
		return nil
	}
	out := new(WrrObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WrrParameters) DeepCopyInto(out *WrrParameters) {
	*out = *in
	if in.HealthCheckedTargets != nil {
		in, out := &in.HealthCheckedTargets, &out.HealthCheckedTargets
		*out = make([]WrrHealthCheckedTargetsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Rrdatas != nil {
		in, out := &in.Rrdatas, &out.Rrdatas
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Weight != nil {
		in, out := &in.Weight, &out.Weight
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WrrParameters.
func (in *WrrParameters) DeepCopy() *WrrParameters {
	if in == nil {
		return nil
	}
	out := new(WrrParameters)
	in.DeepCopyInto(out)
	return out
}
