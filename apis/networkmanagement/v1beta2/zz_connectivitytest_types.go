// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1beta2

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type AppEngineVersionInitParameters struct {

	// A Cloud Run revision URI.
	URI *string `json:"uri,omitempty" tf:"uri,omitempty"`
}

type AppEngineVersionObservation struct {

	// A Cloud Run revision URI.
	URI *string `json:"uri,omitempty" tf:"uri,omitempty"`
}

type AppEngineVersionParameters struct {

	// A Cloud Run revision URI.
	// +kubebuilder:validation:Optional
	URI *string `json:"uri,omitempty" tf:"uri,omitempty"`
}

type CloudFunctionInitParameters struct {

	// A Cloud Run revision URI.
	URI *string `json:"uri,omitempty" tf:"uri,omitempty"`
}

type CloudFunctionObservation struct {

	// A Cloud Run revision URI.
	URI *string `json:"uri,omitempty" tf:"uri,omitempty"`
}

type CloudFunctionParameters struct {

	// A Cloud Run revision URI.
	// +kubebuilder:validation:Optional
	URI *string `json:"uri,omitempty" tf:"uri,omitempty"`
}

type CloudRunRevisionInitParameters struct {

	// A Cloud Run revision URI.
	URI *string `json:"uri,omitempty" tf:"uri,omitempty"`
}

type CloudRunRevisionObservation struct {

	// A Cloud Run revision URI.
	URI *string `json:"uri,omitempty" tf:"uri,omitempty"`
}

type CloudRunRevisionParameters struct {

	// A Cloud Run revision URI.
	// +kubebuilder:validation:Optional
	URI *string `json:"uri,omitempty" tf:"uri,omitempty"`
}

type ConnectivityTestInitParameters struct {

	// Whether the analysis should skip firewall checking. Default value is false.
	BypassFirewallChecks *bool `json:"bypassFirewallChecks,omitempty" tf:"bypass_firewall_checks,omitempty"`

	// The user-supplied description of the Connectivity Test.
	// Maximum of 512 characters.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// Required. Destination specification of the Connectivity Test.
	// You can use a combination of destination IP address, URI of a supported
	// endpoint, project ID, or VPC network to identify the destination location.
	// Reachability analysis proceeds even if the destination location is
	// ambiguous. However, the test result might include endpoints or use a
	// destination that you don't intend to test.
	// Structure is documented below.
	Destination *DestinationInitParameters `json:"destination,omitempty" tf:"destination,omitempty"`

	// Resource labels to represent user-provided metadata.
	// +mapType=granular
	Labels map[string]*string `json:"labels,omitempty" tf:"labels,omitempty"`

	// Unique name for the connectivity test.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project *string `json:"project,omitempty" tf:"project,omitempty"`

	// IP Protocol of the test. When not provided, "TCP" is assumed.
	Protocol *string `json:"protocol,omitempty" tf:"protocol,omitempty"`

	// Other projects that may be relevant for reachability analysis.
	// This is applicable to scenarios where a test can cross project
	// boundaries.
	RelatedProjects []*string `json:"relatedProjects,omitempty" tf:"related_projects,omitempty"`

	// Whether run analysis for the return path from destination to source.
	// Default value is false.
	RoundTrip *bool `json:"roundTrip,omitempty" tf:"round_trip,omitempty"`

	// Required. Source specification of the Connectivity Test.
	// You can use a combination of source IP address, URI of a supported
	// endpoint, project ID, or VPC network to identify the source location.
	// Reachability analysis might proceed even if the source location is
	// ambiguous. However, the test result might include endpoints or use a source
	// that you don't intend to test.
	// Structure is documented below.
	Source *SourceInitParameters `json:"source,omitempty" tf:"source,omitempty"`
}

type ConnectivityTestObservation struct {

	// Whether the analysis should skip firewall checking. Default value is false.
	BypassFirewallChecks *bool `json:"bypassFirewallChecks,omitempty" tf:"bypass_firewall_checks,omitempty"`

	// The user-supplied description of the Connectivity Test.
	// Maximum of 512 characters.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// Required. Destination specification of the Connectivity Test.
	// You can use a combination of destination IP address, URI of a supported
	// endpoint, project ID, or VPC network to identify the destination location.
	// Reachability analysis proceeds even if the destination location is
	// ambiguous. However, the test result might include endpoints or use a
	// destination that you don't intend to test.
	// Structure is documented below.
	Destination *DestinationObservation `json:"destination,omitempty" tf:"destination,omitempty"`

	// for all of the labels present on the resource.
	// +mapType=granular
	EffectiveLabels map[string]*string `json:"effectiveLabels,omitempty" tf:"effective_labels,omitempty"`

	// an identifier for the resource with format projects/{{project}}/locations/global/connectivityTests/{{name}}
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// Resource labels to represent user-provided metadata.
	// +mapType=granular
	Labels map[string]*string `json:"labels,omitempty" tf:"labels,omitempty"`

	// Unique name for the connectivity test.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project *string `json:"project,omitempty" tf:"project,omitempty"`

	// IP Protocol of the test. When not provided, "TCP" is assumed.
	Protocol *string `json:"protocol,omitempty" tf:"protocol,omitempty"`

	// Other projects that may be relevant for reachability analysis.
	// This is applicable to scenarios where a test can cross project
	// boundaries.
	RelatedProjects []*string `json:"relatedProjects,omitempty" tf:"related_projects,omitempty"`

	// Whether run analysis for the return path from destination to source.
	// Default value is false.
	RoundTrip *bool `json:"roundTrip,omitempty" tf:"round_trip,omitempty"`

	// Required. Source specification of the Connectivity Test.
	// You can use a combination of source IP address, URI of a supported
	// endpoint, project ID, or VPC network to identify the source location.
	// Reachability analysis might proceed even if the source location is
	// ambiguous. However, the test result might include endpoints or use a source
	// that you don't intend to test.
	// Structure is documented below.
	Source *SourceObservation `json:"source,omitempty" tf:"source,omitempty"`

	// The combination of labels configured directly on the resource
	// and default labels configured on the provider.
	// +mapType=granular
	TerraformLabels map[string]*string `json:"terraformLabels,omitempty" tf:"terraform_labels,omitempty"`
}

type ConnectivityTestParameters struct {

	// Whether the analysis should skip firewall checking. Default value is false.
	// +kubebuilder:validation:Optional
	BypassFirewallChecks *bool `json:"bypassFirewallChecks,omitempty" tf:"bypass_firewall_checks,omitempty"`

	// The user-supplied description of the Connectivity Test.
	// Maximum of 512 characters.
	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// Required. Destination specification of the Connectivity Test.
	// You can use a combination of destination IP address, URI of a supported
	// endpoint, project ID, or VPC network to identify the destination location.
	// Reachability analysis proceeds even if the destination location is
	// ambiguous. However, the test result might include endpoints or use a
	// destination that you don't intend to test.
	// Structure is documented below.
	// +kubebuilder:validation:Optional
	Destination *DestinationParameters `json:"destination,omitempty" tf:"destination,omitempty"`

	// Resource labels to represent user-provided metadata.
	// +kubebuilder:validation:Optional
	// +mapType=granular
	Labels map[string]*string `json:"labels,omitempty" tf:"labels,omitempty"`

	// Unique name for the connectivity test.
	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	// +kubebuilder:validation:Optional
	Project *string `json:"project,omitempty" tf:"project,omitempty"`

	// IP Protocol of the test. When not provided, "TCP" is assumed.
	// +kubebuilder:validation:Optional
	Protocol *string `json:"protocol,omitempty" tf:"protocol,omitempty"`

	// Other projects that may be relevant for reachability analysis.
	// This is applicable to scenarios where a test can cross project
	// boundaries.
	// +kubebuilder:validation:Optional
	RelatedProjects []*string `json:"relatedProjects,omitempty" tf:"related_projects,omitempty"`

	// Whether run analysis for the return path from destination to source.
	// Default value is false.
	// +kubebuilder:validation:Optional
	RoundTrip *bool `json:"roundTrip,omitempty" tf:"round_trip,omitempty"`

	// Required. Source specification of the Connectivity Test.
	// You can use a combination of source IP address, URI of a supported
	// endpoint, project ID, or VPC network to identify the source location.
	// Reachability analysis might proceed even if the source location is
	// ambiguous. However, the test result might include endpoints or use a source
	// that you don't intend to test.
	// Structure is documented below.
	// +kubebuilder:validation:Optional
	Source *SourceParameters `json:"source,omitempty" tf:"source,omitempty"`
}

type DestinationInitParameters struct {

	// A Cloud SQL instance URI.
	CloudSQLInstance *string `json:"cloudSqlInstance,omitempty" tf:"cloud_sql_instance,omitempty"`

	// Forwarding rule URI. Forwarding rules are frontends for load balancers,
	// PSC endpoints, and Protocol Forwarding.
	ForwardingRule *string `json:"forwardingRule,omitempty" tf:"forwarding_rule,omitempty"`

	// A DNS endpoint of Google Kubernetes Engine cluster control plane.
	// Requires gke_master_cluster to be set, can't be used simultaneoulsly with
	// ip_address or network. Applicable only to destination endpoint.
	Fqdn *string `json:"fqdn,omitempty" tf:"fqdn,omitempty"`

	// A cluster URI for Google Kubernetes Engine cluster control plane.
	GkeMasterCluster *string `json:"gkeMasterCluster,omitempty" tf:"gke_master_cluster,omitempty"`

	// The IP address of the endpoint, which can be an external or internal IP.
	// +crossplane:generate:reference:type=github.com/upbound/provider-gcp/apis/compute/v1beta1.Address
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractParamPath("address",false)
	IPAddress *string `json:"ipAddress,omitempty" tf:"ip_address,omitempty"`

	// Reference to a Address in compute to populate ipAddress.
	// +kubebuilder:validation:Optional
	IPAddressRef *v1.Reference `json:"ipAddressRef,omitempty" tf:"-"`

	// Selector for a Address in compute to populate ipAddress.
	// +kubebuilder:validation:Optional
	IPAddressSelector *v1.Selector `json:"ipAddressSelector,omitempty" tf:"-"`

	// A Compute Engine instance URI.
	// +crossplane:generate:reference:type=github.com/upbound/provider-gcp/apis/compute/v1beta2.Instance
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractResourceID()
	Instance *string `json:"instance,omitempty" tf:"instance,omitempty"`

	// Reference to a Instance in compute to populate instance.
	// +kubebuilder:validation:Optional
	InstanceRef *v1.Reference `json:"instanceRef,omitempty" tf:"-"`

	// Selector for a Instance in compute to populate instance.
	// +kubebuilder:validation:Optional
	InstanceSelector *v1.Selector `json:"instanceSelector,omitempty" tf:"-"`

	// A VPC network URI.
	// +crossplane:generate:reference:type=github.com/upbound/provider-gcp/apis/compute/v1beta1.Network
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractResourceID()
	Network *string `json:"network,omitempty" tf:"network,omitempty"`

	// Reference to a Network in compute to populate network.
	// +kubebuilder:validation:Optional
	NetworkRef *v1.Reference `json:"networkRef,omitempty" tf:"-"`

	// Selector for a Network in compute to populate network.
	// +kubebuilder:validation:Optional
	NetworkSelector *v1.Selector `json:"networkSelector,omitempty" tf:"-"`

	// The IP protocol port of the endpoint. Only applicable when protocol is
	// TCP or UDP.
	Port *float64 `json:"port,omitempty" tf:"port,omitempty"`

	// Project ID where the endpoint is located.
	// The project ID can be derived from the URI if you provide a endpoint or
	// network URI.
	// The following are two cases where you may need to provide the project ID:
	// +crossplane:generate:reference:type=github.com/upbound/provider-gcp/apis/compute/v1beta1.Address
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractParamPath("project",false)
	ProjectID *string `json:"projectId,omitempty" tf:"project_id,omitempty"`

	// Reference to a Address in compute to populate projectId.
	// +kubebuilder:validation:Optional
	ProjectIDRef *v1.Reference `json:"projectIdRef,omitempty" tf:"-"`

	// Selector for a Address in compute to populate projectId.
	// +kubebuilder:validation:Optional
	ProjectIDSelector *v1.Selector `json:"projectIdSelector,omitempty" tf:"-"`

	// A Redis Cluster URI.
	RedisCluster *string `json:"redisCluster,omitempty" tf:"redis_cluster,omitempty"`

	// A Redis Instance URI.
	RedisInstance *string `json:"redisInstance,omitempty" tf:"redis_instance,omitempty"`
}

type DestinationObservation struct {

	// A Cloud SQL instance URI.
	CloudSQLInstance *string `json:"cloudSqlInstance,omitempty" tf:"cloud_sql_instance,omitempty"`

	// Forwarding rule URI. Forwarding rules are frontends for load balancers,
	// PSC endpoints, and Protocol Forwarding.
	ForwardingRule *string `json:"forwardingRule,omitempty" tf:"forwarding_rule,omitempty"`

	// A DNS endpoint of Google Kubernetes Engine cluster control plane.
	// Requires gke_master_cluster to be set, can't be used simultaneoulsly with
	// ip_address or network. Applicable only to destination endpoint.
	Fqdn *string `json:"fqdn,omitempty" tf:"fqdn,omitempty"`

	// A cluster URI for Google Kubernetes Engine cluster control plane.
	GkeMasterCluster *string `json:"gkeMasterCluster,omitempty" tf:"gke_master_cluster,omitempty"`

	// The IP address of the endpoint, which can be an external or internal IP.
	IPAddress *string `json:"ipAddress,omitempty" tf:"ip_address,omitempty"`

	// A Compute Engine instance URI.
	Instance *string `json:"instance,omitempty" tf:"instance,omitempty"`

	// A VPC network URI.
	Network *string `json:"network,omitempty" tf:"network,omitempty"`

	// The IP protocol port of the endpoint. Only applicable when protocol is
	// TCP or UDP.
	Port *float64 `json:"port,omitempty" tf:"port,omitempty"`

	// Project ID where the endpoint is located.
	// The project ID can be derived from the URI if you provide a endpoint or
	// network URI.
	// The following are two cases where you may need to provide the project ID:
	ProjectID *string `json:"projectId,omitempty" tf:"project_id,omitempty"`

	// A Redis Cluster URI.
	RedisCluster *string `json:"redisCluster,omitempty" tf:"redis_cluster,omitempty"`

	// A Redis Instance URI.
	RedisInstance *string `json:"redisInstance,omitempty" tf:"redis_instance,omitempty"`
}

type DestinationParameters struct {

	// A Cloud SQL instance URI.
	// +kubebuilder:validation:Optional
	CloudSQLInstance *string `json:"cloudSqlInstance,omitempty" tf:"cloud_sql_instance,omitempty"`

	// Forwarding rule URI. Forwarding rules are frontends for load balancers,
	// PSC endpoints, and Protocol Forwarding.
	// +kubebuilder:validation:Optional
	ForwardingRule *string `json:"forwardingRule,omitempty" tf:"forwarding_rule,omitempty"`

	// A DNS endpoint of Google Kubernetes Engine cluster control plane.
	// Requires gke_master_cluster to be set, can't be used simultaneoulsly with
	// ip_address or network. Applicable only to destination endpoint.
	// +kubebuilder:validation:Optional
	Fqdn *string `json:"fqdn,omitempty" tf:"fqdn,omitempty"`

	// A cluster URI for Google Kubernetes Engine cluster control plane.
	// +kubebuilder:validation:Optional
	GkeMasterCluster *string `json:"gkeMasterCluster,omitempty" tf:"gke_master_cluster,omitempty"`

	// The IP address of the endpoint, which can be an external or internal IP.
	// +crossplane:generate:reference:type=github.com/upbound/provider-gcp/apis/compute/v1beta1.Address
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractParamPath("address",false)
	// +kubebuilder:validation:Optional
	IPAddress *string `json:"ipAddress,omitempty" tf:"ip_address,omitempty"`

	// Reference to a Address in compute to populate ipAddress.
	// +kubebuilder:validation:Optional
	IPAddressRef *v1.Reference `json:"ipAddressRef,omitempty" tf:"-"`

	// Selector for a Address in compute to populate ipAddress.
	// +kubebuilder:validation:Optional
	IPAddressSelector *v1.Selector `json:"ipAddressSelector,omitempty" tf:"-"`

	// A Compute Engine instance URI.
	// +crossplane:generate:reference:type=github.com/upbound/provider-gcp/apis/compute/v1beta2.Instance
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	Instance *string `json:"instance,omitempty" tf:"instance,omitempty"`

	// Reference to a Instance in compute to populate instance.
	// +kubebuilder:validation:Optional
	InstanceRef *v1.Reference `json:"instanceRef,omitempty" tf:"-"`

	// Selector for a Instance in compute to populate instance.
	// +kubebuilder:validation:Optional
	InstanceSelector *v1.Selector `json:"instanceSelector,omitempty" tf:"-"`

	// A VPC network URI.
	// +crossplane:generate:reference:type=github.com/upbound/provider-gcp/apis/compute/v1beta1.Network
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	Network *string `json:"network,omitempty" tf:"network,omitempty"`

	// Reference to a Network in compute to populate network.
	// +kubebuilder:validation:Optional
	NetworkRef *v1.Reference `json:"networkRef,omitempty" tf:"-"`

	// Selector for a Network in compute to populate network.
	// +kubebuilder:validation:Optional
	NetworkSelector *v1.Selector `json:"networkSelector,omitempty" tf:"-"`

	// The IP protocol port of the endpoint. Only applicable when protocol is
	// TCP or UDP.
	// +kubebuilder:validation:Optional
	Port *float64 `json:"port,omitempty" tf:"port,omitempty"`

	// Project ID where the endpoint is located.
	// The project ID can be derived from the URI if you provide a endpoint or
	// network URI.
	// The following are two cases where you may need to provide the project ID:
	// +crossplane:generate:reference:type=github.com/upbound/provider-gcp/apis/compute/v1beta1.Address
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractParamPath("project",false)
	// +kubebuilder:validation:Optional
	ProjectID *string `json:"projectId,omitempty" tf:"project_id,omitempty"`

	// Reference to a Address in compute to populate projectId.
	// +kubebuilder:validation:Optional
	ProjectIDRef *v1.Reference `json:"projectIdRef,omitempty" tf:"-"`

	// Selector for a Address in compute to populate projectId.
	// +kubebuilder:validation:Optional
	ProjectIDSelector *v1.Selector `json:"projectIdSelector,omitempty" tf:"-"`

	// A Redis Cluster URI.
	// +kubebuilder:validation:Optional
	RedisCluster *string `json:"redisCluster,omitempty" tf:"redis_cluster,omitempty"`

	// A Redis Instance URI.
	// +kubebuilder:validation:Optional
	RedisInstance *string `json:"redisInstance,omitempty" tf:"redis_instance,omitempty"`
}

type SourceInitParameters struct {

	// An App Engine service version.
	// Structure is documented below.
	AppEngineVersion *AppEngineVersionInitParameters `json:"appEngineVersion,omitempty" tf:"app_engine_version,omitempty"`

	// A Cloud Function.
	// Structure is documented below.
	CloudFunction *CloudFunctionInitParameters `json:"cloudFunction,omitempty" tf:"cloud_function,omitempty"`

	// A Cloud Run revision.
	// Structure is documented below.
	CloudRunRevision *CloudRunRevisionInitParameters `json:"cloudRunRevision,omitempty" tf:"cloud_run_revision,omitempty"`

	// A Cloud SQL instance URI.
	CloudSQLInstance *string `json:"cloudSqlInstance,omitempty" tf:"cloud_sql_instance,omitempty"`

	// A cluster URI for Google Kubernetes Engine cluster control plane.
	GkeMasterCluster *string `json:"gkeMasterCluster,omitempty" tf:"gke_master_cluster,omitempty"`

	// The IP address of the endpoint, which can be an external or internal IP.
	// +crossplane:generate:reference:type=github.com/upbound/provider-gcp/apis/compute/v1beta1.Address
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractParamPath("address",false)
	IPAddress *string `json:"ipAddress,omitempty" tf:"ip_address,omitempty"`

	// Reference to a Address in compute to populate ipAddress.
	// +kubebuilder:validation:Optional
	IPAddressRef *v1.Reference `json:"ipAddressRef,omitempty" tf:"-"`

	// Selector for a Address in compute to populate ipAddress.
	// +kubebuilder:validation:Optional
	IPAddressSelector *v1.Selector `json:"ipAddressSelector,omitempty" tf:"-"`

	// A Compute Engine instance URI.
	// +crossplane:generate:reference:type=github.com/upbound/provider-gcp/apis/compute/v1beta2.Instance
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractResourceID()
	Instance *string `json:"instance,omitempty" tf:"instance,omitempty"`

	// Reference to a Instance in compute to populate instance.
	// +kubebuilder:validation:Optional
	InstanceRef *v1.Reference `json:"instanceRef,omitempty" tf:"-"`

	// Selector for a Instance in compute to populate instance.
	// +kubebuilder:validation:Optional
	InstanceSelector *v1.Selector `json:"instanceSelector,omitempty" tf:"-"`

	// A VPC network URI.
	// +crossplane:generate:reference:type=github.com/upbound/provider-gcp/apis/compute/v1beta1.Network
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractResourceID()
	Network *string `json:"network,omitempty" tf:"network,omitempty"`

	// Reference to a Network in compute to populate network.
	// +kubebuilder:validation:Optional
	NetworkRef *v1.Reference `json:"networkRef,omitempty" tf:"-"`

	// Selector for a Network in compute to populate network.
	// +kubebuilder:validation:Optional
	NetworkSelector *v1.Selector `json:"networkSelector,omitempty" tf:"-"`

	// Type of the network where the endpoint is located.
	// Possible values are: GCP_NETWORK, NON_GCP_NETWORK.
	NetworkType *string `json:"networkType,omitempty" tf:"network_type,omitempty"`

	// The IP protocol port of the endpoint. Only applicable when protocol is
	// TCP or UDP.
	Port *float64 `json:"port,omitempty" tf:"port,omitempty"`

	// Project ID where the endpoint is located.
	// The project ID can be derived from the URI if you provide a endpoint or
	// network URI.
	// The following are two cases where you may need to provide the project ID:
	// +crossplane:generate:reference:type=github.com/upbound/provider-gcp/apis/compute/v1beta1.Address
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractParamPath("project",false)
	ProjectID *string `json:"projectId,omitempty" tf:"project_id,omitempty"`

	// Reference to a Address in compute to populate projectId.
	// +kubebuilder:validation:Optional
	ProjectIDRef *v1.Reference `json:"projectIdRef,omitempty" tf:"-"`

	// Selector for a Address in compute to populate projectId.
	// +kubebuilder:validation:Optional
	ProjectIDSelector *v1.Selector `json:"projectIdSelector,omitempty" tf:"-"`
}

type SourceObservation struct {

	// An App Engine service version.
	// Structure is documented below.
	AppEngineVersion *AppEngineVersionObservation `json:"appEngineVersion,omitempty" tf:"app_engine_version,omitempty"`

	// A Cloud Function.
	// Structure is documented below.
	CloudFunction *CloudFunctionObservation `json:"cloudFunction,omitempty" tf:"cloud_function,omitempty"`

	// A Cloud Run revision.
	// Structure is documented below.
	CloudRunRevision *CloudRunRevisionObservation `json:"cloudRunRevision,omitempty" tf:"cloud_run_revision,omitempty"`

	// A Cloud SQL instance URI.
	CloudSQLInstance *string `json:"cloudSqlInstance,omitempty" tf:"cloud_sql_instance,omitempty"`

	// A cluster URI for Google Kubernetes Engine cluster control plane.
	GkeMasterCluster *string `json:"gkeMasterCluster,omitempty" tf:"gke_master_cluster,omitempty"`

	// The IP address of the endpoint, which can be an external or internal IP.
	IPAddress *string `json:"ipAddress,omitempty" tf:"ip_address,omitempty"`

	// A Compute Engine instance URI.
	Instance *string `json:"instance,omitempty" tf:"instance,omitempty"`

	// A VPC network URI.
	Network *string `json:"network,omitempty" tf:"network,omitempty"`

	// Type of the network where the endpoint is located.
	// Possible values are: GCP_NETWORK, NON_GCP_NETWORK.
	NetworkType *string `json:"networkType,omitempty" tf:"network_type,omitempty"`

	// The IP protocol port of the endpoint. Only applicable when protocol is
	// TCP or UDP.
	Port *float64 `json:"port,omitempty" tf:"port,omitempty"`

	// Project ID where the endpoint is located.
	// The project ID can be derived from the URI if you provide a endpoint or
	// network URI.
	// The following are two cases where you may need to provide the project ID:
	ProjectID *string `json:"projectId,omitempty" tf:"project_id,omitempty"`
}

type SourceParameters struct {

	// An App Engine service version.
	// Structure is documented below.
	// +kubebuilder:validation:Optional
	AppEngineVersion *AppEngineVersionParameters `json:"appEngineVersion,omitempty" tf:"app_engine_version,omitempty"`

	// A Cloud Function.
	// Structure is documented below.
	// +kubebuilder:validation:Optional
	CloudFunction *CloudFunctionParameters `json:"cloudFunction,omitempty" tf:"cloud_function,omitempty"`

	// A Cloud Run revision.
	// Structure is documented below.
	// +kubebuilder:validation:Optional
	CloudRunRevision *CloudRunRevisionParameters `json:"cloudRunRevision,omitempty" tf:"cloud_run_revision,omitempty"`

	// A Cloud SQL instance URI.
	// +kubebuilder:validation:Optional
	CloudSQLInstance *string `json:"cloudSqlInstance,omitempty" tf:"cloud_sql_instance,omitempty"`

	// A cluster URI for Google Kubernetes Engine cluster control plane.
	// +kubebuilder:validation:Optional
	GkeMasterCluster *string `json:"gkeMasterCluster,omitempty" tf:"gke_master_cluster,omitempty"`

	// The IP address of the endpoint, which can be an external or internal IP.
	// +crossplane:generate:reference:type=github.com/upbound/provider-gcp/apis/compute/v1beta1.Address
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractParamPath("address",false)
	// +kubebuilder:validation:Optional
	IPAddress *string `json:"ipAddress,omitempty" tf:"ip_address,omitempty"`

	// Reference to a Address in compute to populate ipAddress.
	// +kubebuilder:validation:Optional
	IPAddressRef *v1.Reference `json:"ipAddressRef,omitempty" tf:"-"`

	// Selector for a Address in compute to populate ipAddress.
	// +kubebuilder:validation:Optional
	IPAddressSelector *v1.Selector `json:"ipAddressSelector,omitempty" tf:"-"`

	// A Compute Engine instance URI.
	// +crossplane:generate:reference:type=github.com/upbound/provider-gcp/apis/compute/v1beta2.Instance
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	Instance *string `json:"instance,omitempty" tf:"instance,omitempty"`

	// Reference to a Instance in compute to populate instance.
	// +kubebuilder:validation:Optional
	InstanceRef *v1.Reference `json:"instanceRef,omitempty" tf:"-"`

	// Selector for a Instance in compute to populate instance.
	// +kubebuilder:validation:Optional
	InstanceSelector *v1.Selector `json:"instanceSelector,omitempty" tf:"-"`

	// A VPC network URI.
	// +crossplane:generate:reference:type=github.com/upbound/provider-gcp/apis/compute/v1beta1.Network
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	Network *string `json:"network,omitempty" tf:"network,omitempty"`

	// Reference to a Network in compute to populate network.
	// +kubebuilder:validation:Optional
	NetworkRef *v1.Reference `json:"networkRef,omitempty" tf:"-"`

	// Selector for a Network in compute to populate network.
	// +kubebuilder:validation:Optional
	NetworkSelector *v1.Selector `json:"networkSelector,omitempty" tf:"-"`

	// Type of the network where the endpoint is located.
	// Possible values are: GCP_NETWORK, NON_GCP_NETWORK.
	// +kubebuilder:validation:Optional
	NetworkType *string `json:"networkType,omitempty" tf:"network_type,omitempty"`

	// The IP protocol port of the endpoint. Only applicable when protocol is
	// TCP or UDP.
	// +kubebuilder:validation:Optional
	Port *float64 `json:"port,omitempty" tf:"port,omitempty"`

	// Project ID where the endpoint is located.
	// The project ID can be derived from the URI if you provide a endpoint or
	// network URI.
	// The following are two cases where you may need to provide the project ID:
	// +crossplane:generate:reference:type=github.com/upbound/provider-gcp/apis/compute/v1beta1.Address
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractParamPath("project",false)
	// +kubebuilder:validation:Optional
	ProjectID *string `json:"projectId,omitempty" tf:"project_id,omitempty"`

	// Reference to a Address in compute to populate projectId.
	// +kubebuilder:validation:Optional
	ProjectIDRef *v1.Reference `json:"projectIdRef,omitempty" tf:"-"`

	// Selector for a Address in compute to populate projectId.
	// +kubebuilder:validation:Optional
	ProjectIDSelector *v1.Selector `json:"projectIdSelector,omitempty" tf:"-"`
}

// ConnectivityTestSpec defines the desired state of ConnectivityTest
type ConnectivityTestSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     ConnectivityTestParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider ConnectivityTestInitParameters `json:"initProvider,omitempty"`
}

// ConnectivityTestStatus defines the observed state of ConnectivityTest.
type ConnectivityTestStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        ConnectivityTestObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status

// ConnectivityTest is the Schema for the ConnectivityTests API. A connectivity test are a static analysis of your resource configurations that enables you to evaluate connectivity to and from Google Cloud resources in your Virtual Private Cloud (VPC) network.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,gcp}
type ConnectivityTest struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.destination) || (has(self.initProvider) && has(self.initProvider.destination))",message="spec.forProvider.destination is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.name) || (has(self.initProvider) && has(self.initProvider.name))",message="spec.forProvider.name is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.source) || (has(self.initProvider) && has(self.initProvider.source))",message="spec.forProvider.source is a required parameter"
	Spec   ConnectivityTestSpec   `json:"spec"`
	Status ConnectivityTestStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// ConnectivityTestList contains a list of ConnectivityTests
type ConnectivityTestList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []ConnectivityTest `json:"items"`
}

// Repository type metadata.
var (
	ConnectivityTest_Kind             = "ConnectivityTest"
	ConnectivityTest_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: ConnectivityTest_Kind}.String()
	ConnectivityTest_KindAPIVersion   = ConnectivityTest_Kind + "." + CRDGroupVersion.String()
	ConnectivityTest_GroupVersionKind = CRDGroupVersion.WithKind(ConnectivityTest_Kind)
)

func init() {
	SchemeBuilder.Register(&ConnectivityTest{}, &ConnectivityTestList{})
}
