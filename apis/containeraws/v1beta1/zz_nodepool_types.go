// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1beta1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type AutoscalingInitParameters struct {

	// Maximum number of nodes in the NodePool. Must be >= min_node_count.
	MaxNodeCount *float64 `json:"maxNodeCount,omitempty" tf:"max_node_count,omitempty"`

	// Minimum number of nodes in the NodePool. Must be >= 1 and <= max_node_count.
	MinNodeCount *float64 `json:"minNodeCount,omitempty" tf:"min_node_count,omitempty"`
}

type AutoscalingMetricsCollectionInitParameters struct {

	// The frequency at which EC2 Auto Scaling sends aggregated data to AWS CloudWatch. The only valid value is "1Minute".
	Granularity *string `json:"granularity,omitempty" tf:"granularity,omitempty"`

	// The metrics to enable. For a list of valid metrics, see https://docs.aws.amazon.com/autoscaling/ec2/APIReference/API_EnableMetricsCollection.html. If you specify granularity and don't specify any metrics, all metrics are enabled.
	Metrics []*string `json:"metrics,omitempty" tf:"metrics,omitempty"`
}

type AutoscalingMetricsCollectionObservation struct {

	// The frequency at which EC2 Auto Scaling sends aggregated data to AWS CloudWatch. The only valid value is "1Minute".
	Granularity *string `json:"granularity,omitempty" tf:"granularity,omitempty"`

	// The metrics to enable. For a list of valid metrics, see https://docs.aws.amazon.com/autoscaling/ec2/APIReference/API_EnableMetricsCollection.html. If you specify granularity and don't specify any metrics, all metrics are enabled.
	Metrics []*string `json:"metrics,omitempty" tf:"metrics,omitempty"`
}

type AutoscalingMetricsCollectionParameters struct {

	// The frequency at which EC2 Auto Scaling sends aggregated data to AWS CloudWatch. The only valid value is "1Minute".
	// +kubebuilder:validation:Optional
	Granularity *string `json:"granularity" tf:"granularity,omitempty"`

	// The metrics to enable. For a list of valid metrics, see https://docs.aws.amazon.com/autoscaling/ec2/APIReference/API_EnableMetricsCollection.html. If you specify granularity and don't specify any metrics, all metrics are enabled.
	// +kubebuilder:validation:Optional
	Metrics []*string `json:"metrics,omitempty" tf:"metrics,omitempty"`
}

type AutoscalingObservation struct {

	// Maximum number of nodes in the NodePool. Must be >= min_node_count.
	MaxNodeCount *float64 `json:"maxNodeCount,omitempty" tf:"max_node_count,omitempty"`

	// Minimum number of nodes in the NodePool. Must be >= 1 and <= max_node_count.
	MinNodeCount *float64 `json:"minNodeCount,omitempty" tf:"min_node_count,omitempty"`
}

type AutoscalingParameters struct {

	// Maximum number of nodes in the NodePool. Must be >= min_node_count.
	// +kubebuilder:validation:Optional
	MaxNodeCount *float64 `json:"maxNodeCount" tf:"max_node_count,omitempty"`

	// Minimum number of nodes in the NodePool. Must be >= 1 and <= max_node_count.
	// +kubebuilder:validation:Optional
	MinNodeCount *float64 `json:"minNodeCount" tf:"min_node_count,omitempty"`
}

type ConfigConfigEncryptionInitParameters struct {

	// Optional. The Amazon Resource Name (ARN) of the Customer Managed Key (CMK) used to encrypt AWS EBS volumes. If not specified, the default Amazon managed key associated to the AWS region where this cluster runs will be used.
	KMSKeyArn *string `json:"kmsKeyArn,omitempty" tf:"kms_key_arn,omitempty"`
}

type ConfigConfigEncryptionObservation struct {

	// Optional. The Amazon Resource Name (ARN) of the Customer Managed Key (CMK) used to encrypt AWS EBS volumes. If not specified, the default Amazon managed key associated to the AWS region where this cluster runs will be used.
	KMSKeyArn *string `json:"kmsKeyArn,omitempty" tf:"kms_key_arn,omitempty"`
}

type ConfigConfigEncryptionParameters struct {

	// Optional. The Amazon Resource Name (ARN) of the Customer Managed Key (CMK) used to encrypt AWS EBS volumes. If not specified, the default Amazon managed key associated to the AWS region where this cluster runs will be used.
	// +kubebuilder:validation:Optional
	KMSKeyArn *string `json:"kmsKeyArn" tf:"kms_key_arn,omitempty"`
}

type ConfigInitParameters struct {

	// Optional. Configuration related to CloudWatch metrics collection on the Auto Scaling group of the node pool. When unspecified, metrics collection is disabled.
	AutoscalingMetricsCollection []AutoscalingMetricsCollectionInitParameters `json:"autoscalingMetricsCollection,omitempty" tf:"autoscaling_metrics_collection,omitempty"`

	// The ARN of the AWS KMS key used to encrypt node pool configuration.
	ConfigEncryption []ConfigConfigEncryptionInitParameters `json:"configEncryption,omitempty" tf:"config_encryption,omitempty"`

	// The name of the AWS IAM role assigned to nodes in the pool.
	IAMInstanceProfile *string `json:"iamInstanceProfile,omitempty" tf:"iam_instance_profile,omitempty"`

	// Optional. The AWS instance type. When unspecified, it defaults to m5.large.
	InstanceType *string `json:"instanceType,omitempty" tf:"instance_type,omitempty"`

	// Optional. The initial labels assigned to nodes of this node pool. An object containing a list of "key": value pairs. Example: { "name": "wrench", "mass": "1.3kg", "count": "3" }.
	// +mapType=granular
	Labels map[string]*string `json:"labels,omitempty" tf:"labels,omitempty"`

	// Proxy configuration for outbound HTTP(S) traffic.
	ProxyConfig []ConfigProxyConfigInitParameters `json:"proxyConfig,omitempty" tf:"proxy_config,omitempty"`

	// Optional. Template for the root volume provisioned for node pool nodes. Volumes will be provisioned in the availability zone assigned to the node pool subnet. When unspecified, it defaults to 32 GiB with the GP2 volume type.
	RootVolume []ConfigRootVolumeInitParameters `json:"rootVolume,omitempty" tf:"root_volume,omitempty"`

	// Optional. The SSH configuration.
	SSHConfig []ConfigSSHConfigInitParameters `json:"sshConfig,omitempty" tf:"ssh_config,omitempty"`

	// Optional. The IDs of additional security groups to add to nodes in this pool. The manager will automatically create security groups with minimum rules needed for a functioning cluster.
	SecurityGroupIds []*string `json:"securityGroupIds,omitempty" tf:"security_group_ids,omitempty"`

	// Optional. Key/value metadata to assign to each underlying AWS resource. Specify at most 50 pairs containing alphanumerics, spaces, and symbols (.+-=_:@/). Keys can be up to 127 Unicode characters. Values can be up to 255 Unicode characters.
	// +mapType=granular
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`

	// Optional. The initial taints assigned to nodes of this node pool.
	Taints []TaintsInitParameters `json:"taints,omitempty" tf:"taints,omitempty"`
}

type ConfigObservation struct {

	// Optional. Configuration related to CloudWatch metrics collection on the Auto Scaling group of the node pool. When unspecified, metrics collection is disabled.
	AutoscalingMetricsCollection []AutoscalingMetricsCollectionObservation `json:"autoscalingMetricsCollection,omitempty" tf:"autoscaling_metrics_collection,omitempty"`

	// The ARN of the AWS KMS key used to encrypt node pool configuration.
	ConfigEncryption []ConfigConfigEncryptionObservation `json:"configEncryption,omitempty" tf:"config_encryption,omitempty"`

	// The name of the AWS IAM role assigned to nodes in the pool.
	IAMInstanceProfile *string `json:"iamInstanceProfile,omitempty" tf:"iam_instance_profile,omitempty"`

	// Optional. The AWS instance type. When unspecified, it defaults to m5.large.
	InstanceType *string `json:"instanceType,omitempty" tf:"instance_type,omitempty"`

	// Optional. The initial labels assigned to nodes of this node pool. An object containing a list of "key": value pairs. Example: { "name": "wrench", "mass": "1.3kg", "count": "3" }.
	// +mapType=granular
	Labels map[string]*string `json:"labels,omitempty" tf:"labels,omitempty"`

	// Proxy configuration for outbound HTTP(S) traffic.
	ProxyConfig []ConfigProxyConfigObservation `json:"proxyConfig,omitempty" tf:"proxy_config,omitempty"`

	// Optional. Template for the root volume provisioned for node pool nodes. Volumes will be provisioned in the availability zone assigned to the node pool subnet. When unspecified, it defaults to 32 GiB with the GP2 volume type.
	RootVolume []ConfigRootVolumeObservation `json:"rootVolume,omitempty" tf:"root_volume,omitempty"`

	// Optional. The SSH configuration.
	SSHConfig []ConfigSSHConfigObservation `json:"sshConfig,omitempty" tf:"ssh_config,omitempty"`

	// Optional. The IDs of additional security groups to add to nodes in this pool. The manager will automatically create security groups with minimum rules needed for a functioning cluster.
	SecurityGroupIds []*string `json:"securityGroupIds,omitempty" tf:"security_group_ids,omitempty"`

	// Optional. Key/value metadata to assign to each underlying AWS resource. Specify at most 50 pairs containing alphanumerics, spaces, and symbols (.+-=_:@/). Keys can be up to 127 Unicode characters. Values can be up to 255 Unicode characters.
	// +mapType=granular
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`

	// Optional. The initial taints assigned to nodes of this node pool.
	Taints []TaintsObservation `json:"taints,omitempty" tf:"taints,omitempty"`
}

type ConfigParameters struct {

	// Optional. Configuration related to CloudWatch metrics collection on the Auto Scaling group of the node pool. When unspecified, metrics collection is disabled.
	// +kubebuilder:validation:Optional
	AutoscalingMetricsCollection []AutoscalingMetricsCollectionParameters `json:"autoscalingMetricsCollection,omitempty" tf:"autoscaling_metrics_collection,omitempty"`

	// The ARN of the AWS KMS key used to encrypt node pool configuration.
	// +kubebuilder:validation:Optional
	ConfigEncryption []ConfigConfigEncryptionParameters `json:"configEncryption" tf:"config_encryption,omitempty"`

	// The name of the AWS IAM role assigned to nodes in the pool.
	// +kubebuilder:validation:Optional
	IAMInstanceProfile *string `json:"iamInstanceProfile" tf:"iam_instance_profile,omitempty"`

	// Optional. The AWS instance type. When unspecified, it defaults to m5.large.
	// +kubebuilder:validation:Optional
	InstanceType *string `json:"instanceType,omitempty" tf:"instance_type,omitempty"`

	// Optional. The initial labels assigned to nodes of this node pool. An object containing a list of "key": value pairs. Example: { "name": "wrench", "mass": "1.3kg", "count": "3" }.
	// +kubebuilder:validation:Optional
	// +mapType=granular
	Labels map[string]*string `json:"labels,omitempty" tf:"labels,omitempty"`

	// Proxy configuration for outbound HTTP(S) traffic.
	// +kubebuilder:validation:Optional
	ProxyConfig []ConfigProxyConfigParameters `json:"proxyConfig,omitempty" tf:"proxy_config,omitempty"`

	// Optional. Template for the root volume provisioned for node pool nodes. Volumes will be provisioned in the availability zone assigned to the node pool subnet. When unspecified, it defaults to 32 GiB with the GP2 volume type.
	// +kubebuilder:validation:Optional
	RootVolume []ConfigRootVolumeParameters `json:"rootVolume,omitempty" tf:"root_volume,omitempty"`

	// Optional. The SSH configuration.
	// +kubebuilder:validation:Optional
	SSHConfig []ConfigSSHConfigParameters `json:"sshConfig,omitempty" tf:"ssh_config,omitempty"`

	// Optional. The IDs of additional security groups to add to nodes in this pool. The manager will automatically create security groups with minimum rules needed for a functioning cluster.
	// +kubebuilder:validation:Optional
	SecurityGroupIds []*string `json:"securityGroupIds,omitempty" tf:"security_group_ids,omitempty"`

	// Optional. Key/value metadata to assign to each underlying AWS resource. Specify at most 50 pairs containing alphanumerics, spaces, and symbols (.+-=_:@/). Keys can be up to 127 Unicode characters. Values can be up to 255 Unicode characters.
	// +kubebuilder:validation:Optional
	// +mapType=granular
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`

	// Optional. The initial taints assigned to nodes of this node pool.
	// +kubebuilder:validation:Optional
	Taints []TaintsParameters `json:"taints,omitempty" tf:"taints,omitempty"`
}

type ConfigProxyConfigInitParameters struct {

	// The ARN of the AWS Secret Manager secret that contains the HTTP(S) proxy configuration.
	SecretArn *string `json:"secretArn,omitempty" tf:"secret_arn,omitempty"`

	// The version string of the AWS Secret Manager secret that contains the HTTP(S) proxy configuration.
	SecretVersion *string `json:"secretVersion,omitempty" tf:"secret_version,omitempty"`
}

type ConfigProxyConfigObservation struct {

	// The ARN of the AWS Secret Manager secret that contains the HTTP(S) proxy configuration.
	SecretArn *string `json:"secretArn,omitempty" tf:"secret_arn,omitempty"`

	// The version string of the AWS Secret Manager secret that contains the HTTP(S) proxy configuration.
	SecretVersion *string `json:"secretVersion,omitempty" tf:"secret_version,omitempty"`
}

type ConfigProxyConfigParameters struct {

	// The ARN of the AWS Secret Manager secret that contains the HTTP(S) proxy configuration.
	// +kubebuilder:validation:Optional
	SecretArn *string `json:"secretArn" tf:"secret_arn,omitempty"`

	// The version string of the AWS Secret Manager secret that contains the HTTP(S) proxy configuration.
	// +kubebuilder:validation:Optional
	SecretVersion *string `json:"secretVersion" tf:"secret_version,omitempty"`
}

type ConfigRootVolumeInitParameters struct {

	// Optional. The number of I/O operations per second (IOPS) to provision for GP3 volume.
	Iops *float64 `json:"iops,omitempty" tf:"iops,omitempty"`

	// Optional. The Amazon Resource Name (ARN) of the Customer Managed Key (CMK) used to encrypt AWS EBS volumes. If not specified, the default Amazon managed key associated to the AWS region where this cluster runs will be used.
	KMSKeyArn *string `json:"kmsKeyArn,omitempty" tf:"kms_key_arn,omitempty"`

	// Optional. The size of the volume, in GiBs. When unspecified, a default value is provided. See the specific reference in the parent resource.
	SizeGib *float64 `json:"sizeGib,omitempty" tf:"size_gib,omitempty"`

	// Optional. The throughput to provision for the volume, in MiB/s. Only valid if the volume type is GP3. If volume type is gp3 and throughput is not specified, the throughput will defaults to 125.
	Throughput *float64 `json:"throughput,omitempty" tf:"throughput,omitempty"`

	// Optional. Type of the EBS volume. When unspecified, it defaults to GP2 volume. Possible values: VOLUME_TYPE_UNSPECIFIED, GP2, GP3
	VolumeType *string `json:"volumeType,omitempty" tf:"volume_type,omitempty"`
}

type ConfigRootVolumeObservation struct {

	// Optional. The number of I/O operations per second (IOPS) to provision for GP3 volume.
	Iops *float64 `json:"iops,omitempty" tf:"iops,omitempty"`

	// Optional. The Amazon Resource Name (ARN) of the Customer Managed Key (CMK) used to encrypt AWS EBS volumes. If not specified, the default Amazon managed key associated to the AWS region where this cluster runs will be used.
	KMSKeyArn *string `json:"kmsKeyArn,omitempty" tf:"kms_key_arn,omitempty"`

	// Optional. The size of the volume, in GiBs. When unspecified, a default value is provided. See the specific reference in the parent resource.
	SizeGib *float64 `json:"sizeGib,omitempty" tf:"size_gib,omitempty"`

	// Optional. The throughput to provision for the volume, in MiB/s. Only valid if the volume type is GP3. If volume type is gp3 and throughput is not specified, the throughput will defaults to 125.
	Throughput *float64 `json:"throughput,omitempty" tf:"throughput,omitempty"`

	// Optional. Type of the EBS volume. When unspecified, it defaults to GP2 volume. Possible values: VOLUME_TYPE_UNSPECIFIED, GP2, GP3
	VolumeType *string `json:"volumeType,omitempty" tf:"volume_type,omitempty"`
}

type ConfigRootVolumeParameters struct {

	// Optional. The number of I/O operations per second (IOPS) to provision for GP3 volume.
	// +kubebuilder:validation:Optional
	Iops *float64 `json:"iops,omitempty" tf:"iops,omitempty"`

	// Optional. The Amazon Resource Name (ARN) of the Customer Managed Key (CMK) used to encrypt AWS EBS volumes. If not specified, the default Amazon managed key associated to the AWS region where this cluster runs will be used.
	// +kubebuilder:validation:Optional
	KMSKeyArn *string `json:"kmsKeyArn,omitempty" tf:"kms_key_arn,omitempty"`

	// Optional. The size of the volume, in GiBs. When unspecified, a default value is provided. See the specific reference in the parent resource.
	// +kubebuilder:validation:Optional
	SizeGib *float64 `json:"sizeGib,omitempty" tf:"size_gib,omitempty"`

	// Optional. The throughput to provision for the volume, in MiB/s. Only valid if the volume type is GP3. If volume type is gp3 and throughput is not specified, the throughput will defaults to 125.
	// +kubebuilder:validation:Optional
	Throughput *float64 `json:"throughput,omitempty" tf:"throughput,omitempty"`

	// Optional. Type of the EBS volume. When unspecified, it defaults to GP2 volume. Possible values: VOLUME_TYPE_UNSPECIFIED, GP2, GP3
	// +kubebuilder:validation:Optional
	VolumeType *string `json:"volumeType,omitempty" tf:"volume_type,omitempty"`
}

type ConfigSSHConfigInitParameters struct {

	// The name of the EC2 key pair used to login into cluster machines.
	EC2KeyPair *string `json:"ec2KeyPair,omitempty" tf:"ec2_key_pair,omitempty"`
}

type ConfigSSHConfigObservation struct {

	// The name of the EC2 key pair used to login into cluster machines.
	EC2KeyPair *string `json:"ec2KeyPair,omitempty" tf:"ec2_key_pair,omitempty"`
}

type ConfigSSHConfigParameters struct {

	// The name of the EC2 key pair used to login into cluster machines.
	// +kubebuilder:validation:Optional
	EC2KeyPair *string `json:"ec2KeyPair" tf:"ec2_key_pair,omitempty"`
}

type ManagementInitParameters struct {

	// Optional. Whether or not the nodes will be automatically repaired.
	AutoRepair *bool `json:"autoRepair,omitempty" tf:"auto_repair,omitempty"`
}

type ManagementObservation struct {

	// Optional. Whether or not the nodes will be automatically repaired.
	AutoRepair *bool `json:"autoRepair,omitempty" tf:"auto_repair,omitempty"`
}

type ManagementParameters struct {

	// Optional. Whether or not the nodes will be automatically repaired.
	// +kubebuilder:validation:Optional
	AutoRepair *bool `json:"autoRepair,omitempty" tf:"auto_repair,omitempty"`
}

type MaxPodsConstraintInitParameters struct {

	// The maximum number of pods to schedule on a single node.
	MaxPodsPerNode *float64 `json:"maxPodsPerNode,omitempty" tf:"max_pods_per_node,omitempty"`
}

type MaxPodsConstraintObservation struct {

	// The maximum number of pods to schedule on a single node.
	MaxPodsPerNode *float64 `json:"maxPodsPerNode,omitempty" tf:"max_pods_per_node,omitempty"`
}

type MaxPodsConstraintParameters struct {

	// The maximum number of pods to schedule on a single node.
	// +kubebuilder:validation:Optional
	MaxPodsPerNode *float64 `json:"maxPodsPerNode" tf:"max_pods_per_node,omitempty"`
}

type NodePoolInitParameters struct {

	// Optional. Annotations on the node pool. This field has the same restrictions as Kubernetes annotations. The total size of all keys and values combined is limited to 256k. Key can have 2 segments: prefix  and name , separated by a slash (/). Prefix must be a DNS subdomain. Name must be 63 characters or less, begin and end with alphanumerics, with dashes (-), underscores (_), dots (.), and alphanumerics between.
	// +mapType=granular
	Annotations map[string]*string `json:"annotations,omitempty" tf:"annotations,omitempty"`

	// Autoscaler configuration for this node pool.
	Autoscaling []AutoscalingInitParameters `json:"autoscaling,omitempty" tf:"autoscaling,omitempty"`

	// The configuration of the node pool.
	Config []ConfigInitParameters `json:"config,omitempty" tf:"config,omitempty"`

	// The Management configuration for this node pool.
	Management []ManagementInitParameters `json:"management,omitempty" tf:"management,omitempty"`

	// The constraint on the maximum number of pods that can be run simultaneously on a node in the node pool.
	MaxPodsConstraint []MaxPodsConstraintInitParameters `json:"maxPodsConstraint,omitempty" tf:"max_pods_constraint,omitempty"`

	// The project for the resource
	Project *string `json:"project,omitempty" tf:"project,omitempty"`

	// The subnet where the node pool node run.
	SubnetID *string `json:"subnetId,omitempty" tf:"subnet_id,omitempty"`

	// Optional. Update settings control the speed and disruption of the node pool update.
	UpdateSettings []UpdateSettingsInitParameters `json:"updateSettings,omitempty" tf:"update_settings,omitempty"`

	// The Kubernetes version to run on this node pool (e.g. 1.19.10-gke.1000). You can list all supported versions on a given Google Cloud region by calling GetAwsServerConfig.
	Version *string `json:"version,omitempty" tf:"version,omitempty"`
}

type NodePoolObservation struct {

	// Optional. Annotations on the node pool. This field has the same restrictions as Kubernetes annotations. The total size of all keys and values combined is limited to 256k. Key can have 2 segments: prefix  and name , separated by a slash (/). Prefix must be a DNS subdomain. Name must be 63 characters or less, begin and end with alphanumerics, with dashes (-), underscores (_), dots (.), and alphanumerics between.
	// +mapType=granular
	Annotations map[string]*string `json:"annotations,omitempty" tf:"annotations,omitempty"`

	// Autoscaler configuration for this node pool.
	Autoscaling []AutoscalingObservation `json:"autoscaling,omitempty" tf:"autoscaling,omitempty"`

	// The awsCluster for the resource
	Cluster *string `json:"cluster,omitempty" tf:"cluster,omitempty"`

	// The configuration of the node pool.
	Config []ConfigObservation `json:"config,omitempty" tf:"config,omitempty"`

	// Output only. The time at which this node pool was created.
	CreateTime *string `json:"createTime,omitempty" tf:"create_time,omitempty"`

	// +mapType=granular
	EffectiveAnnotations map[string]*string `json:"effectiveAnnotations,omitempty" tf:"effective_annotations,omitempty"`

	// Allows clients to perform consistent read-modify-writes through optimistic concurrency control. May be sent on update and delete requests to ensure the client has an up-to-date value before proceeding.
	Etag *string `json:"etag,omitempty" tf:"etag,omitempty"`

	// an identifier for the resource with format projects/{{project}}/locations/{{location}}/awsClusters/{{cluster}}/awsNodePools/{{name}}
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// The location for the resource
	Location *string `json:"location,omitempty" tf:"location,omitempty"`

	// The Management configuration for this node pool.
	Management []ManagementObservation `json:"management,omitempty" tf:"management,omitempty"`

	// The constraint on the maximum number of pods that can be run simultaneously on a node in the node pool.
	MaxPodsConstraint []MaxPodsConstraintObservation `json:"maxPodsConstraint,omitempty" tf:"max_pods_constraint,omitempty"`

	// The project for the resource
	Project *string `json:"project,omitempty" tf:"project,omitempty"`

	// Output only. If set, there are currently changes in flight to the node pool.
	Reconciling *bool `json:"reconciling,omitempty" tf:"reconciling,omitempty"`

	// Output only. The lifecycle state of the node pool. Possible values: STATE_UNSPECIFIED, PROVISIONING, RUNNING, RECONCILING, STOPPING, ERROR, DEGRADED
	State *string `json:"state,omitempty" tf:"state,omitempty"`

	// The subnet where the node pool node run.
	SubnetID *string `json:"subnetId,omitempty" tf:"subnet_id,omitempty"`

	// Output only. A globally unique identifier for the node pool.
	UID *string `json:"uid,omitempty" tf:"uid,omitempty"`

	// Optional. Update settings control the speed and disruption of the node pool update.
	UpdateSettings []UpdateSettingsObservation `json:"updateSettings,omitempty" tf:"update_settings,omitempty"`

	// Output only. The time at which this node pool was last updated.
	UpdateTime *string `json:"updateTime,omitempty" tf:"update_time,omitempty"`

	// The Kubernetes version to run on this node pool (e.g. 1.19.10-gke.1000). You can list all supported versions on a given Google Cloud region by calling GetAwsServerConfig.
	Version *string `json:"version,omitempty" tf:"version,omitempty"`
}

type NodePoolParameters struct {

	// Optional. Annotations on the node pool. This field has the same restrictions as Kubernetes annotations. The total size of all keys and values combined is limited to 256k. Key can have 2 segments: prefix  and name , separated by a slash (/). Prefix must be a DNS subdomain. Name must be 63 characters or less, begin and end with alphanumerics, with dashes (-), underscores (_), dots (.), and alphanumerics between.
	// +kubebuilder:validation:Optional
	// +mapType=granular
	Annotations map[string]*string `json:"annotations,omitempty" tf:"annotations,omitempty"`

	// Autoscaler configuration for this node pool.
	// +kubebuilder:validation:Optional
	Autoscaling []AutoscalingParameters `json:"autoscaling,omitempty" tf:"autoscaling,omitempty"`

	// The awsCluster for the resource
	// +crossplane:generate:reference:type=Cluster
	// +kubebuilder:validation:Optional
	Cluster *string `json:"cluster,omitempty" tf:"cluster,omitempty"`

	// Reference to a Cluster to populate cluster.
	// +kubebuilder:validation:Optional
	ClusterRef *v1.Reference `json:"clusterRef,omitempty" tf:"-"`

	// Selector for a Cluster to populate cluster.
	// +kubebuilder:validation:Optional
	ClusterSelector *v1.Selector `json:"clusterSelector,omitempty" tf:"-"`

	// The configuration of the node pool.
	// +kubebuilder:validation:Optional
	Config []ConfigParameters `json:"config,omitempty" tf:"config,omitempty"`

	// The location for the resource
	// +kubebuilder:validation:Required
	Location *string `json:"location" tf:"location,omitempty"`

	// The Management configuration for this node pool.
	// +kubebuilder:validation:Optional
	Management []ManagementParameters `json:"management,omitempty" tf:"management,omitempty"`

	// The constraint on the maximum number of pods that can be run simultaneously on a node in the node pool.
	// +kubebuilder:validation:Optional
	MaxPodsConstraint []MaxPodsConstraintParameters `json:"maxPodsConstraint,omitempty" tf:"max_pods_constraint,omitempty"`

	// The project for the resource
	// +kubebuilder:validation:Optional
	Project *string `json:"project,omitempty" tf:"project,omitempty"`

	// The subnet where the node pool node run.
	// +kubebuilder:validation:Optional
	SubnetID *string `json:"subnetId,omitempty" tf:"subnet_id,omitempty"`

	// Optional. Update settings control the speed and disruption of the node pool update.
	// +kubebuilder:validation:Optional
	UpdateSettings []UpdateSettingsParameters `json:"updateSettings,omitempty" tf:"update_settings,omitempty"`

	// The Kubernetes version to run on this node pool (e.g. 1.19.10-gke.1000). You can list all supported versions on a given Google Cloud region by calling GetAwsServerConfig.
	// +kubebuilder:validation:Optional
	Version *string `json:"version,omitempty" tf:"version,omitempty"`
}

type SurgeSettingsInitParameters struct {

	// Optional. The maximum number of nodes that can be created beyond the current size of the node pool during the update process.
	MaxSurge *float64 `json:"maxSurge,omitempty" tf:"max_surge,omitempty"`

	// Optional. The maximum number of nodes that can be simultaneously unavailable during the update process. A node is considered unavailable if its status is not Ready.
	MaxUnavailable *float64 `json:"maxUnavailable,omitempty" tf:"max_unavailable,omitempty"`
}

type SurgeSettingsObservation struct {

	// Optional. The maximum number of nodes that can be created beyond the current size of the node pool during the update process.
	MaxSurge *float64 `json:"maxSurge,omitempty" tf:"max_surge,omitempty"`

	// Optional. The maximum number of nodes that can be simultaneously unavailable during the update process. A node is considered unavailable if its status is not Ready.
	MaxUnavailable *float64 `json:"maxUnavailable,omitempty" tf:"max_unavailable,omitempty"`
}

type SurgeSettingsParameters struct {

	// Optional. The maximum number of nodes that can be created beyond the current size of the node pool during the update process.
	// +kubebuilder:validation:Optional
	MaxSurge *float64 `json:"maxSurge,omitempty" tf:"max_surge,omitempty"`

	// Optional. The maximum number of nodes that can be simultaneously unavailable during the update process. A node is considered unavailable if its status is not Ready.
	// +kubebuilder:validation:Optional
	MaxUnavailable *float64 `json:"maxUnavailable,omitempty" tf:"max_unavailable,omitempty"`
}

type TaintsInitParameters struct {

	// The taint effect. Possible values: EFFECT_UNSPECIFIED, NO_SCHEDULE, PREFER_NO_SCHEDULE, NO_EXECUTE
	Effect *string `json:"effect,omitempty" tf:"effect,omitempty"`

	// Key for the taint.
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	// Value for the taint.
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type TaintsObservation struct {

	// The taint effect. Possible values: EFFECT_UNSPECIFIED, NO_SCHEDULE, PREFER_NO_SCHEDULE, NO_EXECUTE
	Effect *string `json:"effect,omitempty" tf:"effect,omitempty"`

	// Key for the taint.
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	// Value for the taint.
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type TaintsParameters struct {

	// The taint effect. Possible values: EFFECT_UNSPECIFIED, NO_SCHEDULE, PREFER_NO_SCHEDULE, NO_EXECUTE
	// +kubebuilder:validation:Optional
	Effect *string `json:"effect" tf:"effect,omitempty"`

	// Key for the taint.
	// +kubebuilder:validation:Optional
	Key *string `json:"key" tf:"key,omitempty"`

	// Value for the taint.
	// +kubebuilder:validation:Optional
	Value *string `json:"value" tf:"value,omitempty"`
}

type UpdateSettingsInitParameters struct {

	// Optional. Settings for surge update.
	SurgeSettings []SurgeSettingsInitParameters `json:"surgeSettings,omitempty" tf:"surge_settings,omitempty"`
}

type UpdateSettingsObservation struct {

	// Optional. Settings for surge update.
	SurgeSettings []SurgeSettingsObservation `json:"surgeSettings,omitempty" tf:"surge_settings,omitempty"`
}

type UpdateSettingsParameters struct {

	// Optional. Settings for surge update.
	// +kubebuilder:validation:Optional
	SurgeSettings []SurgeSettingsParameters `json:"surgeSettings,omitempty" tf:"surge_settings,omitempty"`
}

// NodePoolSpec defines the desired state of NodePool
type NodePoolSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     NodePoolParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider NodePoolInitParameters `json:"initProvider,omitempty"`
}

// NodePoolStatus defines the observed state of NodePool.
type NodePoolStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        NodePoolObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// NodePool is the Schema for the NodePools API. An Anthos node pool running on AWS.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,gcp}
type NodePool struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.autoscaling) || (has(self.initProvider) && has(self.initProvider.autoscaling))",message="spec.forProvider.autoscaling is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.config) || (has(self.initProvider) && has(self.initProvider.config))",message="spec.forProvider.config is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.maxPodsConstraint) || (has(self.initProvider) && has(self.initProvider.maxPodsConstraint))",message="spec.forProvider.maxPodsConstraint is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.subnetId) || (has(self.initProvider) && has(self.initProvider.subnetId))",message="spec.forProvider.subnetId is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.version) || (has(self.initProvider) && has(self.initProvider.version))",message="spec.forProvider.version is a required parameter"
	Spec   NodePoolSpec   `json:"spec"`
	Status NodePoolStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// NodePoolList contains a list of NodePools
type NodePoolList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []NodePool `json:"items"`
}

// Repository type metadata.
var (
	NodePool_Kind             = "NodePool"
	NodePool_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: NodePool_Kind}.String()
	NodePool_KindAPIVersion   = NodePool_Kind + "." + CRDGroupVersion.String()
	NodePool_GroupVersionKind = CRDGroupVersion.WithKind(NodePool_Kind)
)

func init() {
	SchemeBuilder.Register(&NodePool{}, &NodePoolList{})
}
