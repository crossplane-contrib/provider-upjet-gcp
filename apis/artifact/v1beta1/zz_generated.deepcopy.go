//go:build !ignore_autogenerated

/*
Copyright 2021 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by controller-gen. DO NOT EDIT.

package v1beta1

import (
	"github.com/crossplane/crossplane-runtime/apis/common/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AptRepositoryInitParameters) DeepCopyInto(out *AptRepositoryInitParameters) {
	*out = *in
	if in.PublicRepository != nil {
		in, out := &in.PublicRepository, &out.PublicRepository
		*out = make([]PublicRepositoryInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AptRepositoryInitParameters.
func (in *AptRepositoryInitParameters) DeepCopy() *AptRepositoryInitParameters {
	if in == nil {
		return nil
	}
	out := new(AptRepositoryInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AptRepositoryObservation) DeepCopyInto(out *AptRepositoryObservation) {
	*out = *in
	if in.PublicRepository != nil {
		in, out := &in.PublicRepository, &out.PublicRepository
		*out = make([]PublicRepositoryObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AptRepositoryObservation.
func (in *AptRepositoryObservation) DeepCopy() *AptRepositoryObservation {
	if in == nil {
		return nil
	}
	out := new(AptRepositoryObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AptRepositoryParameters) DeepCopyInto(out *AptRepositoryParameters) {
	*out = *in
	if in.PublicRepository != nil {
		in, out := &in.PublicRepository, &out.PublicRepository
		*out = make([]PublicRepositoryParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AptRepositoryParameters.
func (in *AptRepositoryParameters) DeepCopy() *AptRepositoryParameters {
	if in == nil {
		return nil
	}
	out := new(AptRepositoryParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConditionInitParameters) DeepCopyInto(out *ConditionInitParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Expression != nil {
		in, out := &in.Expression, &out.Expression
		*out = new(string)
		**out = **in
	}
	if in.Title != nil {
		in, out := &in.Title, &out.Title
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConditionInitParameters.
func (in *ConditionInitParameters) DeepCopy() *ConditionInitParameters {
	if in == nil {
		return nil
	}
	out := new(ConditionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConditionObservation) DeepCopyInto(out *ConditionObservation) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Expression != nil {
		in, out := &in.Expression, &out.Expression
		*out = new(string)
		**out = **in
	}
	if in.Title != nil {
		in, out := &in.Title, &out.Title
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConditionObservation.
func (in *ConditionObservation) DeepCopy() *ConditionObservation {
	if in == nil {
		return nil
	}
	out := new(ConditionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConditionParameters) DeepCopyInto(out *ConditionParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Expression != nil {
		in, out := &in.Expression, &out.Expression
		*out = new(string)
		**out = **in
	}
	if in.Title != nil {
		in, out := &in.Title, &out.Title
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConditionParameters.
func (in *ConditionParameters) DeepCopy() *ConditionParameters {
	if in == nil {
		return nil
	}
	out := new(ConditionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DockerConfigInitParameters) DeepCopyInto(out *DockerConfigInitParameters) {
	*out = *in
	if in.ImmutableTags != nil {
		in, out := &in.ImmutableTags, &out.ImmutableTags
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DockerConfigInitParameters.
func (in *DockerConfigInitParameters) DeepCopy() *DockerConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(DockerConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DockerConfigObservation) DeepCopyInto(out *DockerConfigObservation) {
	*out = *in
	if in.ImmutableTags != nil {
		in, out := &in.ImmutableTags, &out.ImmutableTags
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DockerConfigObservation.
func (in *DockerConfigObservation) DeepCopy() *DockerConfigObservation {
	if in == nil {
		return nil
	}
	out := new(DockerConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DockerConfigParameters) DeepCopyInto(out *DockerConfigParameters) {
	*out = *in
	if in.ImmutableTags != nil {
		in, out := &in.ImmutableTags, &out.ImmutableTags
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DockerConfigParameters.
func (in *DockerConfigParameters) DeepCopy() *DockerConfigParameters {
	if in == nil {
		return nil
	}
	out := new(DockerConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DockerRepositoryInitParameters) DeepCopyInto(out *DockerRepositoryInitParameters) {
	*out = *in
	if in.PublicRepository != nil {
		in, out := &in.PublicRepository, &out.PublicRepository
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DockerRepositoryInitParameters.
func (in *DockerRepositoryInitParameters) DeepCopy() *DockerRepositoryInitParameters {
	if in == nil {
		return nil
	}
	out := new(DockerRepositoryInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DockerRepositoryObservation) DeepCopyInto(out *DockerRepositoryObservation) {
	*out = *in
	if in.PublicRepository != nil {
		in, out := &in.PublicRepository, &out.PublicRepository
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DockerRepositoryObservation.
func (in *DockerRepositoryObservation) DeepCopy() *DockerRepositoryObservation {
	if in == nil {
		return nil
	}
	out := new(DockerRepositoryObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DockerRepositoryParameters) DeepCopyInto(out *DockerRepositoryParameters) {
	*out = *in
	if in.PublicRepository != nil {
		in, out := &in.PublicRepository, &out.PublicRepository
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DockerRepositoryParameters.
func (in *DockerRepositoryParameters) DeepCopy() *DockerRepositoryParameters {
	if in == nil {
		return nil
	}
	out := new(DockerRepositoryParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MavenConfigInitParameters) DeepCopyInto(out *MavenConfigInitParameters) {
	*out = *in
	if in.AllowSnapshotOverwrites != nil {
		in, out := &in.AllowSnapshotOverwrites, &out.AllowSnapshotOverwrites
		*out = new(bool)
		**out = **in
	}
	if in.VersionPolicy != nil {
		in, out := &in.VersionPolicy, &out.VersionPolicy
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MavenConfigInitParameters.
func (in *MavenConfigInitParameters) DeepCopy() *MavenConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(MavenConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MavenConfigObservation) DeepCopyInto(out *MavenConfigObservation) {
	*out = *in
	if in.AllowSnapshotOverwrites != nil {
		in, out := &in.AllowSnapshotOverwrites, &out.AllowSnapshotOverwrites
		*out = new(bool)
		**out = **in
	}
	if in.VersionPolicy != nil {
		in, out := &in.VersionPolicy, &out.VersionPolicy
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MavenConfigObservation.
func (in *MavenConfigObservation) DeepCopy() *MavenConfigObservation {
	if in == nil {
		return nil
	}
	out := new(MavenConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MavenConfigParameters) DeepCopyInto(out *MavenConfigParameters) {
	*out = *in
	if in.AllowSnapshotOverwrites != nil {
		in, out := &in.AllowSnapshotOverwrites, &out.AllowSnapshotOverwrites
		*out = new(bool)
		**out = **in
	}
	if in.VersionPolicy != nil {
		in, out := &in.VersionPolicy, &out.VersionPolicy
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MavenConfigParameters.
func (in *MavenConfigParameters) DeepCopy() *MavenConfigParameters {
	if in == nil {
		return nil
	}
	out := new(MavenConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MavenRepositoryInitParameters) DeepCopyInto(out *MavenRepositoryInitParameters) {
	*out = *in
	if in.PublicRepository != nil {
		in, out := &in.PublicRepository, &out.PublicRepository
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MavenRepositoryInitParameters.
func (in *MavenRepositoryInitParameters) DeepCopy() *MavenRepositoryInitParameters {
	if in == nil {
		return nil
	}
	out := new(MavenRepositoryInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MavenRepositoryObservation) DeepCopyInto(out *MavenRepositoryObservation) {
	*out = *in
	if in.PublicRepository != nil {
		in, out := &in.PublicRepository, &out.PublicRepository
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MavenRepositoryObservation.
func (in *MavenRepositoryObservation) DeepCopy() *MavenRepositoryObservation {
	if in == nil {
		return nil
	}
	out := new(MavenRepositoryObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MavenRepositoryParameters) DeepCopyInto(out *MavenRepositoryParameters) {
	*out = *in
	if in.PublicRepository != nil {
		in, out := &in.PublicRepository, &out.PublicRepository
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MavenRepositoryParameters.
func (in *MavenRepositoryParameters) DeepCopy() *MavenRepositoryParameters {
	if in == nil {
		return nil
	}
	out := new(MavenRepositoryParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NpmRepositoryInitParameters) DeepCopyInto(out *NpmRepositoryInitParameters) {
	*out = *in
	if in.PublicRepository != nil {
		in, out := &in.PublicRepository, &out.PublicRepository
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NpmRepositoryInitParameters.
func (in *NpmRepositoryInitParameters) DeepCopy() *NpmRepositoryInitParameters {
	if in == nil {
		return nil
	}
	out := new(NpmRepositoryInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NpmRepositoryObservation) DeepCopyInto(out *NpmRepositoryObservation) {
	*out = *in
	if in.PublicRepository != nil {
		in, out := &in.PublicRepository, &out.PublicRepository
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NpmRepositoryObservation.
func (in *NpmRepositoryObservation) DeepCopy() *NpmRepositoryObservation {
	if in == nil {
		return nil
	}
	out := new(NpmRepositoryObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NpmRepositoryParameters) DeepCopyInto(out *NpmRepositoryParameters) {
	*out = *in
	if in.PublicRepository != nil {
		in, out := &in.PublicRepository, &out.PublicRepository
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NpmRepositoryParameters.
func (in *NpmRepositoryParameters) DeepCopy() *NpmRepositoryParameters {
	if in == nil {
		return nil
	}
	out := new(NpmRepositoryParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PublicRepositoryInitParameters) DeepCopyInto(out *PublicRepositoryInitParameters) {
	*out = *in
	if in.RepositoryBase != nil {
		in, out := &in.RepositoryBase, &out.RepositoryBase
		*out = new(string)
		**out = **in
	}
	if in.RepositoryPath != nil {
		in, out := &in.RepositoryPath, &out.RepositoryPath
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PublicRepositoryInitParameters.
func (in *PublicRepositoryInitParameters) DeepCopy() *PublicRepositoryInitParameters {
	if in == nil {
		return nil
	}
	out := new(PublicRepositoryInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PublicRepositoryObservation) DeepCopyInto(out *PublicRepositoryObservation) {
	*out = *in
	if in.RepositoryBase != nil {
		in, out := &in.RepositoryBase, &out.RepositoryBase
		*out = new(string)
		**out = **in
	}
	if in.RepositoryPath != nil {
		in, out := &in.RepositoryPath, &out.RepositoryPath
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PublicRepositoryObservation.
func (in *PublicRepositoryObservation) DeepCopy() *PublicRepositoryObservation {
	if in == nil {
		return nil
	}
	out := new(PublicRepositoryObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PublicRepositoryParameters) DeepCopyInto(out *PublicRepositoryParameters) {
	*out = *in
	if in.RepositoryBase != nil {
		in, out := &in.RepositoryBase, &out.RepositoryBase
		*out = new(string)
		**out = **in
	}
	if in.RepositoryPath != nil {
		in, out := &in.RepositoryPath, &out.RepositoryPath
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PublicRepositoryParameters.
func (in *PublicRepositoryParameters) DeepCopy() *PublicRepositoryParameters {
	if in == nil {
		return nil
	}
	out := new(PublicRepositoryParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PythonRepositoryInitParameters) DeepCopyInto(out *PythonRepositoryInitParameters) {
	*out = *in
	if in.PublicRepository != nil {
		in, out := &in.PublicRepository, &out.PublicRepository
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PythonRepositoryInitParameters.
func (in *PythonRepositoryInitParameters) DeepCopy() *PythonRepositoryInitParameters {
	if in == nil {
		return nil
	}
	out := new(PythonRepositoryInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PythonRepositoryObservation) DeepCopyInto(out *PythonRepositoryObservation) {
	*out = *in
	if in.PublicRepository != nil {
		in, out := &in.PublicRepository, &out.PublicRepository
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PythonRepositoryObservation.
func (in *PythonRepositoryObservation) DeepCopy() *PythonRepositoryObservation {
	if in == nil {
		return nil
	}
	out := new(PythonRepositoryObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PythonRepositoryParameters) DeepCopyInto(out *PythonRepositoryParameters) {
	*out = *in
	if in.PublicRepository != nil {
		in, out := &in.PublicRepository, &out.PublicRepository
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PythonRepositoryParameters.
func (in *PythonRepositoryParameters) DeepCopy() *PythonRepositoryParameters {
	if in == nil {
		return nil
	}
	out := new(PythonRepositoryParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegistryRepository) DeepCopyInto(out *RegistryRepository) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegistryRepository.
func (in *RegistryRepository) DeepCopy() *RegistryRepository {
	if in == nil {
		return nil
	}
	out := new(RegistryRepository)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RegistryRepository) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegistryRepositoryIAMMember) DeepCopyInto(out *RegistryRepositoryIAMMember) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegistryRepositoryIAMMember.
func (in *RegistryRepositoryIAMMember) DeepCopy() *RegistryRepositoryIAMMember {
	if in == nil {
		return nil
	}
	out := new(RegistryRepositoryIAMMember)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RegistryRepositoryIAMMember) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegistryRepositoryIAMMemberInitParameters) DeepCopyInto(out *RegistryRepositoryIAMMemberInitParameters) {
	*out = *in
	if in.Condition != nil {
		in, out := &in.Condition, &out.Condition
		*out = make([]ConditionInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.Member != nil {
		in, out := &in.Member, &out.Member
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Repository != nil {
		in, out := &in.Repository, &out.Repository
		*out = new(string)
		**out = **in
	}
	if in.Role != nil {
		in, out := &in.Role, &out.Role
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegistryRepositoryIAMMemberInitParameters.
func (in *RegistryRepositoryIAMMemberInitParameters) DeepCopy() *RegistryRepositoryIAMMemberInitParameters {
	if in == nil {
		return nil
	}
	out := new(RegistryRepositoryIAMMemberInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegistryRepositoryIAMMemberList) DeepCopyInto(out *RegistryRepositoryIAMMemberList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]RegistryRepositoryIAMMember, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegistryRepositoryIAMMemberList.
func (in *RegistryRepositoryIAMMemberList) DeepCopy() *RegistryRepositoryIAMMemberList {
	if in == nil {
		return nil
	}
	out := new(RegistryRepositoryIAMMemberList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RegistryRepositoryIAMMemberList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegistryRepositoryIAMMemberObservation) DeepCopyInto(out *RegistryRepositoryIAMMemberObservation) {
	*out = *in
	if in.Condition != nil {
		in, out := &in.Condition, &out.Condition
		*out = make([]ConditionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Etag != nil {
		in, out := &in.Etag, &out.Etag
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.Member != nil {
		in, out := &in.Member, &out.Member
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Repository != nil {
		in, out := &in.Repository, &out.Repository
		*out = new(string)
		**out = **in
	}
	if in.Role != nil {
		in, out := &in.Role, &out.Role
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegistryRepositoryIAMMemberObservation.
func (in *RegistryRepositoryIAMMemberObservation) DeepCopy() *RegistryRepositoryIAMMemberObservation {
	if in == nil {
		return nil
	}
	out := new(RegistryRepositoryIAMMemberObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegistryRepositoryIAMMemberParameters) DeepCopyInto(out *RegistryRepositoryIAMMemberParameters) {
	*out = *in
	if in.Condition != nil {
		in, out := &in.Condition, &out.Condition
		*out = make([]ConditionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.Member != nil {
		in, out := &in.Member, &out.Member
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Repository != nil {
		in, out := &in.Repository, &out.Repository
		*out = new(string)
		**out = **in
	}
	if in.Role != nil {
		in, out := &in.Role, &out.Role
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegistryRepositoryIAMMemberParameters.
func (in *RegistryRepositoryIAMMemberParameters) DeepCopy() *RegistryRepositoryIAMMemberParameters {
	if in == nil {
		return nil
	}
	out := new(RegistryRepositoryIAMMemberParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegistryRepositoryIAMMemberSpec) DeepCopyInto(out *RegistryRepositoryIAMMemberSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegistryRepositoryIAMMemberSpec.
func (in *RegistryRepositoryIAMMemberSpec) DeepCopy() *RegistryRepositoryIAMMemberSpec {
	if in == nil {
		return nil
	}
	out := new(RegistryRepositoryIAMMemberSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegistryRepositoryIAMMemberStatus) DeepCopyInto(out *RegistryRepositoryIAMMemberStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegistryRepositoryIAMMemberStatus.
func (in *RegistryRepositoryIAMMemberStatus) DeepCopy() *RegistryRepositoryIAMMemberStatus {
	if in == nil {
		return nil
	}
	out := new(RegistryRepositoryIAMMemberStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegistryRepositoryInitParameters) DeepCopyInto(out *RegistryRepositoryInitParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DockerConfig != nil {
		in, out := &in.DockerConfig, &out.DockerConfig
		*out = make([]DockerConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.KMSKeyName != nil {
		in, out := &in.KMSKeyName, &out.KMSKeyName
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.MavenConfig != nil {
		in, out := &in.MavenConfig, &out.MavenConfig
		*out = make([]MavenConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Mode != nil {
		in, out := &in.Mode, &out.Mode
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.RemoteRepositoryConfig != nil {
		in, out := &in.RemoteRepositoryConfig, &out.RemoteRepositoryConfig
		*out = make([]RemoteRepositoryConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VirtualRepositoryConfig != nil {
		in, out := &in.VirtualRepositoryConfig, &out.VirtualRepositoryConfig
		*out = make([]VirtualRepositoryConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegistryRepositoryInitParameters.
func (in *RegistryRepositoryInitParameters) DeepCopy() *RegistryRepositoryInitParameters {
	if in == nil {
		return nil
	}
	out := new(RegistryRepositoryInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegistryRepositoryList) DeepCopyInto(out *RegistryRepositoryList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]RegistryRepository, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegistryRepositoryList.
func (in *RegistryRepositoryList) DeepCopy() *RegistryRepositoryList {
	if in == nil {
		return nil
	}
	out := new(RegistryRepositoryList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RegistryRepositoryList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegistryRepositoryObservation) DeepCopyInto(out *RegistryRepositoryObservation) {
	*out = *in
	if in.CreateTime != nil {
		in, out := &in.CreateTime, &out.CreateTime
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DockerConfig != nil {
		in, out := &in.DockerConfig, &out.DockerConfig
		*out = make([]DockerConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EffectiveLabels != nil {
		in, out := &in.EffectiveLabels, &out.EffectiveLabels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.KMSKeyName != nil {
		in, out := &in.KMSKeyName, &out.KMSKeyName
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.MavenConfig != nil {
		in, out := &in.MavenConfig, &out.MavenConfig
		*out = make([]MavenConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Mode != nil {
		in, out := &in.Mode, &out.Mode
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.RemoteRepositoryConfig != nil {
		in, out := &in.RemoteRepositoryConfig, &out.RemoteRepositoryConfig
		*out = make([]RemoteRepositoryConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TerraformLabels != nil {
		in, out := &in.TerraformLabels, &out.TerraformLabels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.UpdateTime != nil {
		in, out := &in.UpdateTime, &out.UpdateTime
		*out = new(string)
		**out = **in
	}
	if in.VirtualRepositoryConfig != nil {
		in, out := &in.VirtualRepositoryConfig, &out.VirtualRepositoryConfig
		*out = make([]VirtualRepositoryConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegistryRepositoryObservation.
func (in *RegistryRepositoryObservation) DeepCopy() *RegistryRepositoryObservation {
	if in == nil {
		return nil
	}
	out := new(RegistryRepositoryObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegistryRepositoryParameters) DeepCopyInto(out *RegistryRepositoryParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DockerConfig != nil {
		in, out := &in.DockerConfig, &out.DockerConfig
		*out = make([]DockerConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.KMSKeyName != nil {
		in, out := &in.KMSKeyName, &out.KMSKeyName
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.MavenConfig != nil {
		in, out := &in.MavenConfig, &out.MavenConfig
		*out = make([]MavenConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Mode != nil {
		in, out := &in.Mode, &out.Mode
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.RemoteRepositoryConfig != nil {
		in, out := &in.RemoteRepositoryConfig, &out.RemoteRepositoryConfig
		*out = make([]RemoteRepositoryConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VirtualRepositoryConfig != nil {
		in, out := &in.VirtualRepositoryConfig, &out.VirtualRepositoryConfig
		*out = make([]VirtualRepositoryConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegistryRepositoryParameters.
func (in *RegistryRepositoryParameters) DeepCopy() *RegistryRepositoryParameters {
	if in == nil {
		return nil
	}
	out := new(RegistryRepositoryParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegistryRepositorySpec) DeepCopyInto(out *RegistryRepositorySpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegistryRepositorySpec.
func (in *RegistryRepositorySpec) DeepCopy() *RegistryRepositorySpec {
	if in == nil {
		return nil
	}
	out := new(RegistryRepositorySpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegistryRepositoryStatus) DeepCopyInto(out *RegistryRepositoryStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegistryRepositoryStatus.
func (in *RegistryRepositoryStatus) DeepCopy() *RegistryRepositoryStatus {
	if in == nil {
		return nil
	}
	out := new(RegistryRepositoryStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RemoteRepositoryConfigInitParameters) DeepCopyInto(out *RemoteRepositoryConfigInitParameters) {
	*out = *in
	if in.AptRepository != nil {
		in, out := &in.AptRepository, &out.AptRepository
		*out = make([]AptRepositoryInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DockerRepository != nil {
		in, out := &in.DockerRepository, &out.DockerRepository
		*out = make([]DockerRepositoryInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MavenRepository != nil {
		in, out := &in.MavenRepository, &out.MavenRepository
		*out = make([]MavenRepositoryInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NpmRepository != nil {
		in, out := &in.NpmRepository, &out.NpmRepository
		*out = make([]NpmRepositoryInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PythonRepository != nil {
		in, out := &in.PythonRepository, &out.PythonRepository
		*out = make([]PythonRepositoryInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.YumRepository != nil {
		in, out := &in.YumRepository, &out.YumRepository
		*out = make([]YumRepositoryInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RemoteRepositoryConfigInitParameters.
func (in *RemoteRepositoryConfigInitParameters) DeepCopy() *RemoteRepositoryConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(RemoteRepositoryConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RemoteRepositoryConfigObservation) DeepCopyInto(out *RemoteRepositoryConfigObservation) {
	*out = *in
	if in.AptRepository != nil {
		in, out := &in.AptRepository, &out.AptRepository
		*out = make([]AptRepositoryObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DockerRepository != nil {
		in, out := &in.DockerRepository, &out.DockerRepository
		*out = make([]DockerRepositoryObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MavenRepository != nil {
		in, out := &in.MavenRepository, &out.MavenRepository
		*out = make([]MavenRepositoryObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NpmRepository != nil {
		in, out := &in.NpmRepository, &out.NpmRepository
		*out = make([]NpmRepositoryObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PythonRepository != nil {
		in, out := &in.PythonRepository, &out.PythonRepository
		*out = make([]PythonRepositoryObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.YumRepository != nil {
		in, out := &in.YumRepository, &out.YumRepository
		*out = make([]YumRepositoryObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RemoteRepositoryConfigObservation.
func (in *RemoteRepositoryConfigObservation) DeepCopy() *RemoteRepositoryConfigObservation {
	if in == nil {
		return nil
	}
	out := new(RemoteRepositoryConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RemoteRepositoryConfigParameters) DeepCopyInto(out *RemoteRepositoryConfigParameters) {
	*out = *in
	if in.AptRepository != nil {
		in, out := &in.AptRepository, &out.AptRepository
		*out = make([]AptRepositoryParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DockerRepository != nil {
		in, out := &in.DockerRepository, &out.DockerRepository
		*out = make([]DockerRepositoryParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MavenRepository != nil {
		in, out := &in.MavenRepository, &out.MavenRepository
		*out = make([]MavenRepositoryParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NpmRepository != nil {
		in, out := &in.NpmRepository, &out.NpmRepository
		*out = make([]NpmRepositoryParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PythonRepository != nil {
		in, out := &in.PythonRepository, &out.PythonRepository
		*out = make([]PythonRepositoryParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.YumRepository != nil {
		in, out := &in.YumRepository, &out.YumRepository
		*out = make([]YumRepositoryParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RemoteRepositoryConfigParameters.
func (in *RemoteRepositoryConfigParameters) DeepCopy() *RemoteRepositoryConfigParameters {
	if in == nil {
		return nil
	}
	out := new(RemoteRepositoryConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UpstreamPoliciesInitParameters) DeepCopyInto(out *UpstreamPoliciesInitParameters) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Priority != nil {
		in, out := &in.Priority, &out.Priority
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UpstreamPoliciesInitParameters.
func (in *UpstreamPoliciesInitParameters) DeepCopy() *UpstreamPoliciesInitParameters {
	if in == nil {
		return nil
	}
	out := new(UpstreamPoliciesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UpstreamPoliciesObservation) DeepCopyInto(out *UpstreamPoliciesObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Priority != nil {
		in, out := &in.Priority, &out.Priority
		*out = new(float64)
		**out = **in
	}
	if in.Repository != nil {
		in, out := &in.Repository, &out.Repository
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UpstreamPoliciesObservation.
func (in *UpstreamPoliciesObservation) DeepCopy() *UpstreamPoliciesObservation {
	if in == nil {
		return nil
	}
	out := new(UpstreamPoliciesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UpstreamPoliciesParameters) DeepCopyInto(out *UpstreamPoliciesParameters) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Priority != nil {
		in, out := &in.Priority, &out.Priority
		*out = new(float64)
		**out = **in
	}
	if in.Repository != nil {
		in, out := &in.Repository, &out.Repository
		*out = new(string)
		**out = **in
	}
	if in.RepositoryRef != nil {
		in, out := &in.RepositoryRef, &out.RepositoryRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.RepositorySelector != nil {
		in, out := &in.RepositorySelector, &out.RepositorySelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UpstreamPoliciesParameters.
func (in *UpstreamPoliciesParameters) DeepCopy() *UpstreamPoliciesParameters {
	if in == nil {
		return nil
	}
	out := new(UpstreamPoliciesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualRepositoryConfigInitParameters) DeepCopyInto(out *VirtualRepositoryConfigInitParameters) {
	*out = *in
	if in.UpstreamPolicies != nil {
		in, out := &in.UpstreamPolicies, &out.UpstreamPolicies
		*out = make([]UpstreamPoliciesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualRepositoryConfigInitParameters.
func (in *VirtualRepositoryConfigInitParameters) DeepCopy() *VirtualRepositoryConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(VirtualRepositoryConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualRepositoryConfigObservation) DeepCopyInto(out *VirtualRepositoryConfigObservation) {
	*out = *in
	if in.UpstreamPolicies != nil {
		in, out := &in.UpstreamPolicies, &out.UpstreamPolicies
		*out = make([]UpstreamPoliciesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualRepositoryConfigObservation.
func (in *VirtualRepositoryConfigObservation) DeepCopy() *VirtualRepositoryConfigObservation {
	if in == nil {
		return nil
	}
	out := new(VirtualRepositoryConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualRepositoryConfigParameters) DeepCopyInto(out *VirtualRepositoryConfigParameters) {
	*out = *in
	if in.UpstreamPolicies != nil {
		in, out := &in.UpstreamPolicies, &out.UpstreamPolicies
		*out = make([]UpstreamPoliciesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualRepositoryConfigParameters.
func (in *VirtualRepositoryConfigParameters) DeepCopy() *VirtualRepositoryConfigParameters {
	if in == nil {
		return nil
	}
	out := new(VirtualRepositoryConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *YumRepositoryInitParameters) DeepCopyInto(out *YumRepositoryInitParameters) {
	*out = *in
	if in.PublicRepository != nil {
		in, out := &in.PublicRepository, &out.PublicRepository
		*out = make([]YumRepositoryPublicRepositoryInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new YumRepositoryInitParameters.
func (in *YumRepositoryInitParameters) DeepCopy() *YumRepositoryInitParameters {
	if in == nil {
		return nil
	}
	out := new(YumRepositoryInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *YumRepositoryObservation) DeepCopyInto(out *YumRepositoryObservation) {
	*out = *in
	if in.PublicRepository != nil {
		in, out := &in.PublicRepository, &out.PublicRepository
		*out = make([]YumRepositoryPublicRepositoryObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new YumRepositoryObservation.
func (in *YumRepositoryObservation) DeepCopy() *YumRepositoryObservation {
	if in == nil {
		return nil
	}
	out := new(YumRepositoryObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *YumRepositoryParameters) DeepCopyInto(out *YumRepositoryParameters) {
	*out = *in
	if in.PublicRepository != nil {
		in, out := &in.PublicRepository, &out.PublicRepository
		*out = make([]YumRepositoryPublicRepositoryParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new YumRepositoryParameters.
func (in *YumRepositoryParameters) DeepCopy() *YumRepositoryParameters {
	if in == nil {
		return nil
	}
	out := new(YumRepositoryParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *YumRepositoryPublicRepositoryInitParameters) DeepCopyInto(out *YumRepositoryPublicRepositoryInitParameters) {
	*out = *in
	if in.RepositoryBase != nil {
		in, out := &in.RepositoryBase, &out.RepositoryBase
		*out = new(string)
		**out = **in
	}
	if in.RepositoryPath != nil {
		in, out := &in.RepositoryPath, &out.RepositoryPath
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new YumRepositoryPublicRepositoryInitParameters.
func (in *YumRepositoryPublicRepositoryInitParameters) DeepCopy() *YumRepositoryPublicRepositoryInitParameters {
	if in == nil {
		return nil
	}
	out := new(YumRepositoryPublicRepositoryInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *YumRepositoryPublicRepositoryObservation) DeepCopyInto(out *YumRepositoryPublicRepositoryObservation) {
	*out = *in
	if in.RepositoryBase != nil {
		in, out := &in.RepositoryBase, &out.RepositoryBase
		*out = new(string)
		**out = **in
	}
	if in.RepositoryPath != nil {
		in, out := &in.RepositoryPath, &out.RepositoryPath
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new YumRepositoryPublicRepositoryObservation.
func (in *YumRepositoryPublicRepositoryObservation) DeepCopy() *YumRepositoryPublicRepositoryObservation {
	if in == nil {
		return nil
	}
	out := new(YumRepositoryPublicRepositoryObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *YumRepositoryPublicRepositoryParameters) DeepCopyInto(out *YumRepositoryPublicRepositoryParameters) {
	*out = *in
	if in.RepositoryBase != nil {
		in, out := &in.RepositoryBase, &out.RepositoryBase
		*out = new(string)
		**out = **in
	}
	if in.RepositoryPath != nil {
		in, out := &in.RepositoryPath, &out.RepositoryPath
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new YumRepositoryPublicRepositoryParameters.
func (in *YumRepositoryPublicRepositoryParameters) DeepCopy() *YumRepositoryPublicRepositoryParameters {
	if in == nil {
		return nil
	}
	out := new(YumRepositoryPublicRepositoryParameters)
	in.DeepCopyInto(out)
	return out
}
