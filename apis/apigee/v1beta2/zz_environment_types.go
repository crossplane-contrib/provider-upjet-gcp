// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1beta2

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type ClientIPResolutionConfigInitParameters struct {

	// Resolves the client ip based on a custom header.
	// Structure is documented below.
	HeaderIndexAlgorithm *HeaderIndexAlgorithmInitParameters `json:"headerIndexAlgorithm,omitempty" tf:"header_index_algorithm,omitempty"`
}

type ClientIPResolutionConfigObservation struct {

	// Resolves the client ip based on a custom header.
	// Structure is documented below.
	HeaderIndexAlgorithm *HeaderIndexAlgorithmObservation `json:"headerIndexAlgorithm,omitempty" tf:"header_index_algorithm,omitempty"`
}

type ClientIPResolutionConfigParameters struct {

	// Resolves the client ip based on a custom header.
	// Structure is documented below.
	// +kubebuilder:validation:Optional
	HeaderIndexAlgorithm *HeaderIndexAlgorithmParameters `json:"headerIndexAlgorithm,omitempty" tf:"header_index_algorithm,omitempty"`
}

type EnvironmentInitParameters struct {

	// Optional. API Proxy type supported by the environment. The type can be set when creating
	// the Environment and cannot be changed.
	// Possible values are: API_PROXY_TYPE_UNSPECIFIED, PROGRAMMABLE, CONFIGURABLE.
	APIProxyType *string `json:"apiProxyType,omitempty" tf:"api_proxy_type,omitempty"`

	// The algorithm to resolve IP. This will affect Analytics, API Security, and other features that use the client ip. To remove a client ip resolution config, update the field to an empty value. Example: '{ "clientIpResolutionConfig" = {} }' For more information, see: https://cloud.google.com/apigee/docs/api-platform/system-administration/client-ip-resolution
	// Structure is documented below.
	ClientIPResolutionConfig *ClientIPResolutionConfigInitParameters `json:"clientIpResolutionConfig,omitempty" tf:"client_ip_resolution_config,omitempty"`

	// Optional. Deployment type supported by the environment. The deployment type can be
	// set when creating the environment and cannot be changed. When you enable archive
	// deployment, you will be prevented from performing a subset of actions within the
	// environment, including:
	// Managing the deployment of API proxy or shared flow revisions;
	// Creating, updating, or deleting resource files;
	// Creating, updating, or deleting target servers.
	// Possible values are: DEPLOYMENT_TYPE_UNSPECIFIED, PROXY, ARCHIVE.
	DeploymentType *string `json:"deploymentType,omitempty" tf:"deployment_type,omitempty"`

	// Description of the environment.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// Display name of the environment.
	DisplayName *string `json:"displayName,omitempty" tf:"display_name,omitempty"`

	// Optional. URI of the forward proxy to be applied to the runtime instances in this environment. Must be in the format of {scheme}://{hostname}:{port}. Note that the scheme must be one of "http" or "https", and the port must be supplied.
	ForwardProxyURI *string `json:"forwardProxyUri,omitempty" tf:"forward_proxy_uri,omitempty"`

	// NodeConfig for setting the min/max number of nodes associated with the environment.
	// Structure is documented below.
	NodeConfig *NodeConfigInitParameters `json:"nodeConfig,omitempty" tf:"node_config,omitempty"`

	// Key-value pairs that may be used for customizing the environment.
	// Structure is documented below.
	Properties *PropertiesInitParameters `json:"properties,omitempty" tf:"properties,omitempty"`

	// Types that can be selected for an Environment. Each of the types are
	// limited by capability and capacity. Refer to Apigee's public documentation
	// to understand about each of these types in details.
	// An Apigee org can support heterogeneous Environments.
	// Possible values are: ENVIRONMENT_TYPE_UNSPECIFIED, BASE, INTERMEDIATE, COMPREHENSIVE.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type EnvironmentObservation struct {

	// Optional. API Proxy type supported by the environment. The type can be set when creating
	// the Environment and cannot be changed.
	// Possible values are: API_PROXY_TYPE_UNSPECIFIED, PROGRAMMABLE, CONFIGURABLE.
	APIProxyType *string `json:"apiProxyType,omitempty" tf:"api_proxy_type,omitempty"`

	// The algorithm to resolve IP. This will affect Analytics, API Security, and other features that use the client ip. To remove a client ip resolution config, update the field to an empty value. Example: '{ "clientIpResolutionConfig" = {} }' For more information, see: https://cloud.google.com/apigee/docs/api-platform/system-administration/client-ip-resolution
	// Structure is documented below.
	ClientIPResolutionConfig *ClientIPResolutionConfigObservation `json:"clientIpResolutionConfig,omitempty" tf:"client_ip_resolution_config,omitempty"`

	// Optional. Deployment type supported by the environment. The deployment type can be
	// set when creating the environment and cannot be changed. When you enable archive
	// deployment, you will be prevented from performing a subset of actions within the
	// environment, including:
	// Managing the deployment of API proxy or shared flow revisions;
	// Creating, updating, or deleting resource files;
	// Creating, updating, or deleting target servers.
	// Possible values are: DEPLOYMENT_TYPE_UNSPECIFIED, PROXY, ARCHIVE.
	DeploymentType *string `json:"deploymentType,omitempty" tf:"deployment_type,omitempty"`

	// Description of the environment.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// Display name of the environment.
	DisplayName *string `json:"displayName,omitempty" tf:"display_name,omitempty"`

	// Optional. URI of the forward proxy to be applied to the runtime instances in this environment. Must be in the format of {scheme}://{hostname}:{port}. Note that the scheme must be one of "http" or "https", and the port must be supplied.
	ForwardProxyURI *string `json:"forwardProxyUri,omitempty" tf:"forward_proxy_uri,omitempty"`

	// an identifier for the resource with format {{org_id}}/environments/{{name}}
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// NodeConfig for setting the min/max number of nodes associated with the environment.
	// Structure is documented below.
	NodeConfig *NodeConfigObservation `json:"nodeConfig,omitempty" tf:"node_config,omitempty"`

	// The Apigee Organization associated with the Apigee environment,
	// in the format organizations/{{org_name}}.
	OrgID *string `json:"orgId,omitempty" tf:"org_id,omitempty"`

	// Key-value pairs that may be used for customizing the environment.
	// Structure is documented below.
	Properties *PropertiesObservation `json:"properties,omitempty" tf:"properties,omitempty"`

	// Types that can be selected for an Environment. Each of the types are
	// limited by capability and capacity. Refer to Apigee's public documentation
	// to understand about each of these types in details.
	// An Apigee org can support heterogeneous Environments.
	// Possible values are: ENVIRONMENT_TYPE_UNSPECIFIED, BASE, INTERMEDIATE, COMPREHENSIVE.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type EnvironmentParameters struct {

	// Optional. API Proxy type supported by the environment. The type can be set when creating
	// the Environment and cannot be changed.
	// Possible values are: API_PROXY_TYPE_UNSPECIFIED, PROGRAMMABLE, CONFIGURABLE.
	// +kubebuilder:validation:Optional
	APIProxyType *string `json:"apiProxyType,omitempty" tf:"api_proxy_type,omitempty"`

	// The algorithm to resolve IP. This will affect Analytics, API Security, and other features that use the client ip. To remove a client ip resolution config, update the field to an empty value. Example: '{ "clientIpResolutionConfig" = {} }' For more information, see: https://cloud.google.com/apigee/docs/api-platform/system-administration/client-ip-resolution
	// Structure is documented below.
	// +kubebuilder:validation:Optional
	ClientIPResolutionConfig *ClientIPResolutionConfigParameters `json:"clientIpResolutionConfig,omitempty" tf:"client_ip_resolution_config,omitempty"`

	// Optional. Deployment type supported by the environment. The deployment type can be
	// set when creating the environment and cannot be changed. When you enable archive
	// deployment, you will be prevented from performing a subset of actions within the
	// environment, including:
	// Managing the deployment of API proxy or shared flow revisions;
	// Creating, updating, or deleting resource files;
	// Creating, updating, or deleting target servers.
	// Possible values are: DEPLOYMENT_TYPE_UNSPECIFIED, PROXY, ARCHIVE.
	// +kubebuilder:validation:Optional
	DeploymentType *string `json:"deploymentType,omitempty" tf:"deployment_type,omitempty"`

	// Description of the environment.
	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// Display name of the environment.
	// +kubebuilder:validation:Optional
	DisplayName *string `json:"displayName,omitempty" tf:"display_name,omitempty"`

	// Optional. URI of the forward proxy to be applied to the runtime instances in this environment. Must be in the format of {scheme}://{hostname}:{port}. Note that the scheme must be one of "http" or "https", and the port must be supplied.
	// +kubebuilder:validation:Optional
	ForwardProxyURI *string `json:"forwardProxyUri,omitempty" tf:"forward_proxy_uri,omitempty"`

	// NodeConfig for setting the min/max number of nodes associated with the environment.
	// Structure is documented below.
	// +kubebuilder:validation:Optional
	NodeConfig *NodeConfigParameters `json:"nodeConfig,omitempty" tf:"node_config,omitempty"`

	// The Apigee Organization associated with the Apigee environment,
	// in the format organizations/{{org_name}}.
	// +crossplane:generate:reference:type=github.com/upbound/provider-gcp/apis/apigee/v1beta2.Organization
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	OrgID *string `json:"orgId,omitempty" tf:"org_id,omitempty"`

	// Reference to a Organization in apigee to populate orgId.
	// +kubebuilder:validation:Optional
	OrgIDRef *v1.Reference `json:"orgIdRef,omitempty" tf:"-"`

	// Selector for a Organization in apigee to populate orgId.
	// +kubebuilder:validation:Optional
	OrgIDSelector *v1.Selector `json:"orgIdSelector,omitempty" tf:"-"`

	// Key-value pairs that may be used for customizing the environment.
	// Structure is documented below.
	// +kubebuilder:validation:Optional
	Properties *PropertiesParameters `json:"properties,omitempty" tf:"properties,omitempty"`

	// Types that can be selected for an Environment. Each of the types are
	// limited by capability and capacity. Refer to Apigee's public documentation
	// to understand about each of these types in details.
	// An Apigee org can support heterogeneous Environments.
	// Possible values are: ENVIRONMENT_TYPE_UNSPECIFIED, BASE, INTERMEDIATE, COMPREHENSIVE.
	// +kubebuilder:validation:Optional
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type HeaderIndexAlgorithmInitParameters struct {

	// The index of the ip in the header. Positive indices 0, 1, 2, 3 chooses indices from the left (first ips). Negative indices -1, -2, -3 chooses indices from the right (last ips).
	IPHeaderIndex *float64 `json:"ipHeaderIndex,omitempty" tf:"ip_header_index,omitempty"`

	// The name of the header to extract the client ip from. We are currently only supporting the X-Forwarded-For header.
	IPHeaderName *string `json:"ipHeaderName,omitempty" tf:"ip_header_name,omitempty"`
}

type HeaderIndexAlgorithmObservation struct {

	// The index of the ip in the header. Positive indices 0, 1, 2, 3 chooses indices from the left (first ips). Negative indices -1, -2, -3 chooses indices from the right (last ips).
	IPHeaderIndex *float64 `json:"ipHeaderIndex,omitempty" tf:"ip_header_index,omitempty"`

	// The name of the header to extract the client ip from. We are currently only supporting the X-Forwarded-For header.
	IPHeaderName *string `json:"ipHeaderName,omitempty" tf:"ip_header_name,omitempty"`
}

type HeaderIndexAlgorithmParameters struct {

	// The index of the ip in the header. Positive indices 0, 1, 2, 3 chooses indices from the left (first ips). Negative indices -1, -2, -3 chooses indices from the right (last ips).
	// +kubebuilder:validation:Optional
	IPHeaderIndex *float64 `json:"ipHeaderIndex" tf:"ip_header_index,omitempty"`

	// The name of the header to extract the client ip from. We are currently only supporting the X-Forwarded-For header.
	// +kubebuilder:validation:Optional
	IPHeaderName *string `json:"ipHeaderName" tf:"ip_header_name,omitempty"`
}

type NodeConfigInitParameters struct {

	// The maximum total number of gateway nodes that the is reserved for all instances that
	// has the specified environment. If not specified, the default is determined by the
	// recommended maximum number of nodes for that gateway.
	MaxNodeCount *string `json:"maxNodeCount,omitempty" tf:"max_node_count,omitempty"`

	// The minimum total number of gateway nodes that the is reserved for all instances that
	// has the specified environment. If not specified, the default is determined by the
	// recommended minimum number of nodes for that gateway.
	MinNodeCount *string `json:"minNodeCount,omitempty" tf:"min_node_count,omitempty"`
}

type NodeConfigObservation struct {

	// (Output)
	// The current total number of gateway nodes that each environment currently has across
	// all instances.
	CurrentAggregateNodeCount *string `json:"currentAggregateNodeCount,omitempty" tf:"current_aggregate_node_count,omitempty"`

	// The maximum total number of gateway nodes that the is reserved for all instances that
	// has the specified environment. If not specified, the default is determined by the
	// recommended maximum number of nodes for that gateway.
	MaxNodeCount *string `json:"maxNodeCount,omitempty" tf:"max_node_count,omitempty"`

	// The minimum total number of gateway nodes that the is reserved for all instances that
	// has the specified environment. If not specified, the default is determined by the
	// recommended minimum number of nodes for that gateway.
	MinNodeCount *string `json:"minNodeCount,omitempty" tf:"min_node_count,omitempty"`
}

type NodeConfigParameters struct {

	// The maximum total number of gateway nodes that the is reserved for all instances that
	// has the specified environment. If not specified, the default is determined by the
	// recommended maximum number of nodes for that gateway.
	// +kubebuilder:validation:Optional
	MaxNodeCount *string `json:"maxNodeCount,omitempty" tf:"max_node_count,omitempty"`

	// The minimum total number of gateway nodes that the is reserved for all instances that
	// has the specified environment. If not specified, the default is determined by the
	// recommended minimum number of nodes for that gateway.
	// +kubebuilder:validation:Optional
	MinNodeCount *string `json:"minNodeCount,omitempty" tf:"min_node_count,omitempty"`
}

type PropertiesInitParameters struct {

	// List of all properties in the object.
	// Structure is documented below.
	Property []PropertyInitParameters `json:"property,omitempty" tf:"property,omitempty"`
}

type PropertiesObservation struct {

	// List of all properties in the object.
	// Structure is documented below.
	Property []PropertyObservation `json:"property,omitempty" tf:"property,omitempty"`
}

type PropertiesParameters struct {

	// List of all properties in the object.
	// Structure is documented below.
	// +kubebuilder:validation:Optional
	Property []PropertyParameters `json:"property,omitempty" tf:"property,omitempty"`
}

type PropertyInitParameters struct {

	// The property key.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// The property value.
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type PropertyObservation struct {

	// The property key.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// The property value.
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type PropertyParameters struct {

	// The property key.
	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// The property value.
	// +kubebuilder:validation:Optional
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

// EnvironmentSpec defines the desired state of Environment
type EnvironmentSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     EnvironmentParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider EnvironmentInitParameters `json:"initProvider,omitempty"`
}

// EnvironmentStatus defines the observed state of Environment.
type EnvironmentStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        EnvironmentObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status

// Environment is the Schema for the Environments API. An
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,gcp}
type Environment struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              EnvironmentSpec   `json:"spec"`
	Status            EnvironmentStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// EnvironmentList contains a list of Environments
type EnvironmentList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []Environment `json:"items"`
}

// Repository type metadata.
var (
	Environment_Kind             = "Environment"
	Environment_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: Environment_Kind}.String()
	Environment_KindAPIVersion   = Environment_Kind + "." + CRDGroupVersion.String()
	Environment_GroupVersionKind = CRDGroupVersion.WithKind(Environment_Kind)
)

func init() {
	SchemeBuilder.Register(&Environment{}, &EnvironmentList{})
}
