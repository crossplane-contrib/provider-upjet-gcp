//go:build !ignore_autogenerated

// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by controller-gen. DO NOT EDIT.

package v1beta1

import (
	"github.com/crossplane/crossplane-runtime/apis/common/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BigqueryProfileInitParameters) DeepCopyInto(out *BigqueryProfileInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BigqueryProfileInitParameters.
func (in *BigqueryProfileInitParameters) DeepCopy() *BigqueryProfileInitParameters {
	if in == nil {
		return nil
	}
	out := new(BigqueryProfileInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BigqueryProfileObservation) DeepCopyInto(out *BigqueryProfileObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BigqueryProfileObservation.
func (in *BigqueryProfileObservation) DeepCopy() *BigqueryProfileObservation {
	if in == nil {
		return nil
	}
	out := new(BigqueryProfileObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BigqueryProfileParameters) DeepCopyInto(out *BigqueryProfileParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BigqueryProfileParameters.
func (in *BigqueryProfileParameters) DeepCopy() *BigqueryProfileParameters {
	if in == nil {
		return nil
	}
	out := new(BigqueryProfileParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectionProfile) DeepCopyInto(out *ConnectionProfile) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectionProfile.
func (in *ConnectionProfile) DeepCopy() *ConnectionProfile {
	if in == nil {
		return nil
	}
	out := new(ConnectionProfile)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ConnectionProfile) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectionProfileInitParameters) DeepCopyInto(out *ConnectionProfileInitParameters) {
	*out = *in
	if in.BigqueryProfile != nil {
		in, out := &in.BigqueryProfile, &out.BigqueryProfile
		*out = make([]BigqueryProfileInitParameters, len(*in))
		copy(*out, *in)
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.ForwardSSHConnectivity != nil {
		in, out := &in.ForwardSSHConnectivity, &out.ForwardSSHConnectivity
		*out = make([]ForwardSSHConnectivityInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.GcsProfile != nil {
		in, out := &in.GcsProfile, &out.GcsProfile
		*out = make([]GcsProfileInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.MySQLProfile != nil {
		in, out := &in.MySQLProfile, &out.MySQLProfile
		*out = make([]MySQLProfileInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OracleProfile != nil {
		in, out := &in.OracleProfile, &out.OracleProfile
		*out = make([]OracleProfileInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PostgresqlProfile != nil {
		in, out := &in.PostgresqlProfile, &out.PostgresqlProfile
		*out = make([]PostgresqlProfileInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PrivateConnectivity != nil {
		in, out := &in.PrivateConnectivity, &out.PrivateConnectivity
		*out = make([]PrivateConnectivityInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectionProfileInitParameters.
func (in *ConnectionProfileInitParameters) DeepCopy() *ConnectionProfileInitParameters {
	if in == nil {
		return nil
	}
	out := new(ConnectionProfileInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectionProfileList) DeepCopyInto(out *ConnectionProfileList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ConnectionProfile, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectionProfileList.
func (in *ConnectionProfileList) DeepCopy() *ConnectionProfileList {
	if in == nil {
		return nil
	}
	out := new(ConnectionProfileList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ConnectionProfileList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectionProfileObservation) DeepCopyInto(out *ConnectionProfileObservation) {
	*out = *in
	if in.BigqueryProfile != nil {
		in, out := &in.BigqueryProfile, &out.BigqueryProfile
		*out = make([]BigqueryProfileParameters, len(*in))
		copy(*out, *in)
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.EffectiveLabels != nil {
		in, out := &in.EffectiveLabels, &out.EffectiveLabels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ForwardSSHConnectivity != nil {
		in, out := &in.ForwardSSHConnectivity, &out.ForwardSSHConnectivity
		*out = make([]ForwardSSHConnectivityObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.GcsProfile != nil {
		in, out := &in.GcsProfile, &out.GcsProfile
		*out = make([]GcsProfileObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.MySQLProfile != nil {
		in, out := &in.MySQLProfile, &out.MySQLProfile
		*out = make([]MySQLProfileObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.OracleProfile != nil {
		in, out := &in.OracleProfile, &out.OracleProfile
		*out = make([]OracleProfileObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PostgresqlProfile != nil {
		in, out := &in.PostgresqlProfile, &out.PostgresqlProfile
		*out = make([]PostgresqlProfileObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PrivateConnectivity != nil {
		in, out := &in.PrivateConnectivity, &out.PrivateConnectivity
		*out = make([]PrivateConnectivityObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.TerraformLabels != nil {
		in, out := &in.TerraformLabels, &out.TerraformLabels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectionProfileObservation.
func (in *ConnectionProfileObservation) DeepCopy() *ConnectionProfileObservation {
	if in == nil {
		return nil
	}
	out := new(ConnectionProfileObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectionProfileParameters) DeepCopyInto(out *ConnectionProfileParameters) {
	*out = *in
	if in.BigqueryProfile != nil {
		in, out := &in.BigqueryProfile, &out.BigqueryProfile
		*out = make([]BigqueryProfileParameters, len(*in))
		copy(*out, *in)
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.ForwardSSHConnectivity != nil {
		in, out := &in.ForwardSSHConnectivity, &out.ForwardSSHConnectivity
		*out = make([]ForwardSSHConnectivityParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.GcsProfile != nil {
		in, out := &in.GcsProfile, &out.GcsProfile
		*out = make([]GcsProfileParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.MySQLProfile != nil {
		in, out := &in.MySQLProfile, &out.MySQLProfile
		*out = make([]MySQLProfileParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OracleProfile != nil {
		in, out := &in.OracleProfile, &out.OracleProfile
		*out = make([]OracleProfileParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PostgresqlProfile != nil {
		in, out := &in.PostgresqlProfile, &out.PostgresqlProfile
		*out = make([]PostgresqlProfileParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PrivateConnectivity != nil {
		in, out := &in.PrivateConnectivity, &out.PrivateConnectivity
		*out = make([]PrivateConnectivityParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectionProfileParameters.
func (in *ConnectionProfileParameters) DeepCopy() *ConnectionProfileParameters {
	if in == nil {
		return nil
	}
	out := new(ConnectionProfileParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectionProfileSpec) DeepCopyInto(out *ConnectionProfileSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectionProfileSpec.
func (in *ConnectionProfileSpec) DeepCopy() *ConnectionProfileSpec {
	if in == nil {
		return nil
	}
	out := new(ConnectionProfileSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectionProfileStatus) DeepCopyInto(out *ConnectionProfileStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectionProfileStatus.
func (in *ConnectionProfileStatus) DeepCopy() *ConnectionProfileStatus {
	if in == nil {
		return nil
	}
	out := new(ConnectionProfileStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ErrorInitParameters) DeepCopyInto(out *ErrorInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ErrorInitParameters.
func (in *ErrorInitParameters) DeepCopy() *ErrorInitParameters {
	if in == nil {
		return nil
	}
	out := new(ErrorInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ErrorObservation) DeepCopyInto(out *ErrorObservation) {
	*out = *in
	if in.Details != nil {
		in, out := &in.Details, &out.Details
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Message != nil {
		in, out := &in.Message, &out.Message
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ErrorObservation.
func (in *ErrorObservation) DeepCopy() *ErrorObservation {
	if in == nil {
		return nil
	}
	out := new(ErrorObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ErrorParameters) DeepCopyInto(out *ErrorParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ErrorParameters.
func (in *ErrorParameters) DeepCopy() *ErrorParameters {
	if in == nil {
		return nil
	}
	out := new(ErrorParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ForwardSSHConnectivityInitParameters) DeepCopyInto(out *ForwardSSHConnectivityInitParameters) {
	*out = *in
	if in.Hostname != nil {
		in, out := &in.Hostname, &out.Hostname
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ForwardSSHConnectivityInitParameters.
func (in *ForwardSSHConnectivityInitParameters) DeepCopy() *ForwardSSHConnectivityInitParameters {
	if in == nil {
		return nil
	}
	out := new(ForwardSSHConnectivityInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ForwardSSHConnectivityObservation) DeepCopyInto(out *ForwardSSHConnectivityObservation) {
	*out = *in
	if in.Hostname != nil {
		in, out := &in.Hostname, &out.Hostname
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ForwardSSHConnectivityObservation.
func (in *ForwardSSHConnectivityObservation) DeepCopy() *ForwardSSHConnectivityObservation {
	if in == nil {
		return nil
	}
	out := new(ForwardSSHConnectivityObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ForwardSSHConnectivityParameters) DeepCopyInto(out *ForwardSSHConnectivityParameters) {
	*out = *in
	if in.Hostname != nil {
		in, out := &in.Hostname, &out.Hostname
		*out = new(string)
		**out = **in
	}
	if in.PasswordSecretRef != nil {
		in, out := &in.PasswordSecretRef, &out.PasswordSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
	if in.PrivateKeySecretRef != nil {
		in, out := &in.PrivateKeySecretRef, &out.PrivateKeySecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ForwardSSHConnectivityParameters.
func (in *ForwardSSHConnectivityParameters) DeepCopy() *ForwardSSHConnectivityParameters {
	if in == nil {
		return nil
	}
	out := new(ForwardSSHConnectivityParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GcsProfileInitParameters) DeepCopyInto(out *GcsProfileInitParameters) {
	*out = *in
	if in.Bucket != nil {
		in, out := &in.Bucket, &out.Bucket
		*out = new(string)
		**out = **in
	}
	if in.RootPath != nil {
		in, out := &in.RootPath, &out.RootPath
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GcsProfileInitParameters.
func (in *GcsProfileInitParameters) DeepCopy() *GcsProfileInitParameters {
	if in == nil {
		return nil
	}
	out := new(GcsProfileInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GcsProfileObservation) DeepCopyInto(out *GcsProfileObservation) {
	*out = *in
	if in.Bucket != nil {
		in, out := &in.Bucket, &out.Bucket
		*out = new(string)
		**out = **in
	}
	if in.RootPath != nil {
		in, out := &in.RootPath, &out.RootPath
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GcsProfileObservation.
func (in *GcsProfileObservation) DeepCopy() *GcsProfileObservation {
	if in == nil {
		return nil
	}
	out := new(GcsProfileObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GcsProfileParameters) DeepCopyInto(out *GcsProfileParameters) {
	*out = *in
	if in.Bucket != nil {
		in, out := &in.Bucket, &out.Bucket
		*out = new(string)
		**out = **in
	}
	if in.RootPath != nil {
		in, out := &in.RootPath, &out.RootPath
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GcsProfileParameters.
func (in *GcsProfileParameters) DeepCopy() *GcsProfileParameters {
	if in == nil {
		return nil
	}
	out := new(GcsProfileParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MySQLProfileInitParameters) DeepCopyInto(out *MySQLProfileInitParameters) {
	*out = *in
	if in.Hostname != nil {
		in, out := &in.Hostname, &out.Hostname
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
	if in.SSLConfig != nil {
		in, out := &in.SSLConfig, &out.SSLConfig
		*out = make([]SSLConfigInitParameters, len(*in))
		copy(*out, *in)
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MySQLProfileInitParameters.
func (in *MySQLProfileInitParameters) DeepCopy() *MySQLProfileInitParameters {
	if in == nil {
		return nil
	}
	out := new(MySQLProfileInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MySQLProfileObservation) DeepCopyInto(out *MySQLProfileObservation) {
	*out = *in
	if in.Hostname != nil {
		in, out := &in.Hostname, &out.Hostname
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
	if in.SSLConfig != nil {
		in, out := &in.SSLConfig, &out.SSLConfig
		*out = make([]SSLConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MySQLProfileObservation.
func (in *MySQLProfileObservation) DeepCopy() *MySQLProfileObservation {
	if in == nil {
		return nil
	}
	out := new(MySQLProfileObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MySQLProfileParameters) DeepCopyInto(out *MySQLProfileParameters) {
	*out = *in
	if in.Hostname != nil {
		in, out := &in.Hostname, &out.Hostname
		*out = new(string)
		**out = **in
	}
	out.PasswordSecretRef = in.PasswordSecretRef
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
	if in.SSLConfig != nil {
		in, out := &in.SSLConfig, &out.SSLConfig
		*out = make([]SSLConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MySQLProfileParameters.
func (in *MySQLProfileParameters) DeepCopy() *MySQLProfileParameters {
	if in == nil {
		return nil
	}
	out := new(MySQLProfileParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OracleProfileInitParameters) DeepCopyInto(out *OracleProfileInitParameters) {
	*out = *in
	if in.ConnectionAttributes != nil {
		in, out := &in.ConnectionAttributes, &out.ConnectionAttributes
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DatabaseService != nil {
		in, out := &in.DatabaseService, &out.DatabaseService
		*out = new(string)
		**out = **in
	}
	if in.Hostname != nil {
		in, out := &in.Hostname, &out.Hostname
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OracleProfileInitParameters.
func (in *OracleProfileInitParameters) DeepCopy() *OracleProfileInitParameters {
	if in == nil {
		return nil
	}
	out := new(OracleProfileInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OracleProfileObservation) DeepCopyInto(out *OracleProfileObservation) {
	*out = *in
	if in.ConnectionAttributes != nil {
		in, out := &in.ConnectionAttributes, &out.ConnectionAttributes
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DatabaseService != nil {
		in, out := &in.DatabaseService, &out.DatabaseService
		*out = new(string)
		**out = **in
	}
	if in.Hostname != nil {
		in, out := &in.Hostname, &out.Hostname
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OracleProfileObservation.
func (in *OracleProfileObservation) DeepCopy() *OracleProfileObservation {
	if in == nil {
		return nil
	}
	out := new(OracleProfileObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OracleProfileParameters) DeepCopyInto(out *OracleProfileParameters) {
	*out = *in
	if in.ConnectionAttributes != nil {
		in, out := &in.ConnectionAttributes, &out.ConnectionAttributes
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DatabaseService != nil {
		in, out := &in.DatabaseService, &out.DatabaseService
		*out = new(string)
		**out = **in
	}
	if in.Hostname != nil {
		in, out := &in.Hostname, &out.Hostname
		*out = new(string)
		**out = **in
	}
	out.PasswordSecretRef = in.PasswordSecretRef
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OracleProfileParameters.
func (in *OracleProfileParameters) DeepCopy() *OracleProfileParameters {
	if in == nil {
		return nil
	}
	out := new(OracleProfileParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PostgresqlProfileInitParameters) DeepCopyInto(out *PostgresqlProfileInitParameters) {
	*out = *in
	if in.Database != nil {
		in, out := &in.Database, &out.Database
		*out = new(string)
		**out = **in
	}
	if in.DatabaseRef != nil {
		in, out := &in.DatabaseRef, &out.DatabaseRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.DatabaseSelector != nil {
		in, out := &in.DatabaseSelector, &out.DatabaseSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Hostname != nil {
		in, out := &in.Hostname, &out.Hostname
		*out = new(string)
		**out = **in
	}
	if in.HostnameRef != nil {
		in, out := &in.HostnameRef, &out.HostnameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.HostnameSelector != nil {
		in, out := &in.HostnameSelector, &out.HostnameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
	if in.UsernameRef != nil {
		in, out := &in.UsernameRef, &out.UsernameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.UsernameSelector != nil {
		in, out := &in.UsernameSelector, &out.UsernameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PostgresqlProfileInitParameters.
func (in *PostgresqlProfileInitParameters) DeepCopy() *PostgresqlProfileInitParameters {
	if in == nil {
		return nil
	}
	out := new(PostgresqlProfileInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PostgresqlProfileObservation) DeepCopyInto(out *PostgresqlProfileObservation) {
	*out = *in
	if in.Database != nil {
		in, out := &in.Database, &out.Database
		*out = new(string)
		**out = **in
	}
	if in.Hostname != nil {
		in, out := &in.Hostname, &out.Hostname
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PostgresqlProfileObservation.
func (in *PostgresqlProfileObservation) DeepCopy() *PostgresqlProfileObservation {
	if in == nil {
		return nil
	}
	out := new(PostgresqlProfileObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PostgresqlProfileParameters) DeepCopyInto(out *PostgresqlProfileParameters) {
	*out = *in
	if in.Database != nil {
		in, out := &in.Database, &out.Database
		*out = new(string)
		**out = **in
	}
	if in.DatabaseRef != nil {
		in, out := &in.DatabaseRef, &out.DatabaseRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.DatabaseSelector != nil {
		in, out := &in.DatabaseSelector, &out.DatabaseSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Hostname != nil {
		in, out := &in.Hostname, &out.Hostname
		*out = new(string)
		**out = **in
	}
	if in.HostnameRef != nil {
		in, out := &in.HostnameRef, &out.HostnameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.HostnameSelector != nil {
		in, out := &in.HostnameSelector, &out.HostnameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	out.PasswordSecretRef = in.PasswordSecretRef
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
	if in.UsernameRef != nil {
		in, out := &in.UsernameRef, &out.UsernameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.UsernameSelector != nil {
		in, out := &in.UsernameSelector, &out.UsernameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PostgresqlProfileParameters.
func (in *PostgresqlProfileParameters) DeepCopy() *PostgresqlProfileParameters {
	if in == nil {
		return nil
	}
	out := new(PostgresqlProfileParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateConnection) DeepCopyInto(out *PrivateConnection) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateConnection.
func (in *PrivateConnection) DeepCopy() *PrivateConnection {
	if in == nil {
		return nil
	}
	out := new(PrivateConnection)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *PrivateConnection) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateConnectionInitParameters) DeepCopyInto(out *PrivateConnectionInitParameters) {
	*out = *in
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.VPCPeeringConfig != nil {
		in, out := &in.VPCPeeringConfig, &out.VPCPeeringConfig
		*out = make([]VPCPeeringConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateConnectionInitParameters.
func (in *PrivateConnectionInitParameters) DeepCopy() *PrivateConnectionInitParameters {
	if in == nil {
		return nil
	}
	out := new(PrivateConnectionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateConnectionList) DeepCopyInto(out *PrivateConnectionList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]PrivateConnection, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateConnectionList.
func (in *PrivateConnectionList) DeepCopy() *PrivateConnectionList {
	if in == nil {
		return nil
	}
	out := new(PrivateConnectionList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *PrivateConnectionList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateConnectionObservation) DeepCopyInto(out *PrivateConnectionObservation) {
	*out = *in
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.EffectiveLabels != nil {
		in, out := &in.EffectiveLabels, &out.EffectiveLabels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Error != nil {
		in, out := &in.Error, &out.Error
		*out = make([]ErrorObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.TerraformLabels != nil {
		in, out := &in.TerraformLabels, &out.TerraformLabels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.VPCPeeringConfig != nil {
		in, out := &in.VPCPeeringConfig, &out.VPCPeeringConfig
		*out = make([]VPCPeeringConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateConnectionObservation.
func (in *PrivateConnectionObservation) DeepCopy() *PrivateConnectionObservation {
	if in == nil {
		return nil
	}
	out := new(PrivateConnectionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateConnectionParameters) DeepCopyInto(out *PrivateConnectionParameters) {
	*out = *in
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.VPCPeeringConfig != nil {
		in, out := &in.VPCPeeringConfig, &out.VPCPeeringConfig
		*out = make([]VPCPeeringConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateConnectionParameters.
func (in *PrivateConnectionParameters) DeepCopy() *PrivateConnectionParameters {
	if in == nil {
		return nil
	}
	out := new(PrivateConnectionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateConnectionSpec) DeepCopyInto(out *PrivateConnectionSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateConnectionSpec.
func (in *PrivateConnectionSpec) DeepCopy() *PrivateConnectionSpec {
	if in == nil {
		return nil
	}
	out := new(PrivateConnectionSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateConnectionStatus) DeepCopyInto(out *PrivateConnectionStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateConnectionStatus.
func (in *PrivateConnectionStatus) DeepCopy() *PrivateConnectionStatus {
	if in == nil {
		return nil
	}
	out := new(PrivateConnectionStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateConnectivityInitParameters) DeepCopyInto(out *PrivateConnectivityInitParameters) {
	*out = *in
	if in.PrivateConnection != nil {
		in, out := &in.PrivateConnection, &out.PrivateConnection
		*out = new(string)
		**out = **in
	}
	if in.PrivateConnectionRef != nil {
		in, out := &in.PrivateConnectionRef, &out.PrivateConnectionRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.PrivateConnectionSelector != nil {
		in, out := &in.PrivateConnectionSelector, &out.PrivateConnectionSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateConnectivityInitParameters.
func (in *PrivateConnectivityInitParameters) DeepCopy() *PrivateConnectivityInitParameters {
	if in == nil {
		return nil
	}
	out := new(PrivateConnectivityInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateConnectivityObservation) DeepCopyInto(out *PrivateConnectivityObservation) {
	*out = *in
	if in.PrivateConnection != nil {
		in, out := &in.PrivateConnection, &out.PrivateConnection
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateConnectivityObservation.
func (in *PrivateConnectivityObservation) DeepCopy() *PrivateConnectivityObservation {
	if in == nil {
		return nil
	}
	out := new(PrivateConnectivityObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateConnectivityParameters) DeepCopyInto(out *PrivateConnectivityParameters) {
	*out = *in
	if in.PrivateConnection != nil {
		in, out := &in.PrivateConnection, &out.PrivateConnection
		*out = new(string)
		**out = **in
	}
	if in.PrivateConnectionRef != nil {
		in, out := &in.PrivateConnectionRef, &out.PrivateConnectionRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.PrivateConnectionSelector != nil {
		in, out := &in.PrivateConnectionSelector, &out.PrivateConnectionSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateConnectivityParameters.
func (in *PrivateConnectivityParameters) DeepCopy() *PrivateConnectivityParameters {
	if in == nil {
		return nil
	}
	out := new(PrivateConnectivityParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SSLConfigInitParameters) DeepCopyInto(out *SSLConfigInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SSLConfigInitParameters.
func (in *SSLConfigInitParameters) DeepCopy() *SSLConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(SSLConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SSLConfigObservation) DeepCopyInto(out *SSLConfigObservation) {
	*out = *in
	if in.CACertificateSet != nil {
		in, out := &in.CACertificateSet, &out.CACertificateSet
		*out = new(bool)
		**out = **in
	}
	if in.ClientCertificateSet != nil {
		in, out := &in.ClientCertificateSet, &out.ClientCertificateSet
		*out = new(bool)
		**out = **in
	}
	if in.ClientKeySet != nil {
		in, out := &in.ClientKeySet, &out.ClientKeySet
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SSLConfigObservation.
func (in *SSLConfigObservation) DeepCopy() *SSLConfigObservation {
	if in == nil {
		return nil
	}
	out := new(SSLConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SSLConfigParameters) DeepCopyInto(out *SSLConfigParameters) {
	*out = *in
	if in.CACertificateSecretRef != nil {
		in, out := &in.CACertificateSecretRef, &out.CACertificateSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.ClientCertificateSecretRef != nil {
		in, out := &in.ClientCertificateSecretRef, &out.ClientCertificateSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.ClientKeySecretRef != nil {
		in, out := &in.ClientKeySecretRef, &out.ClientKeySecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SSLConfigParameters.
func (in *SSLConfigParameters) DeepCopy() *SSLConfigParameters {
	if in == nil {
		return nil
	}
	out := new(SSLConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCPeeringConfigInitParameters) DeepCopyInto(out *VPCPeeringConfigInitParameters) {
	*out = *in
	if in.Subnet != nil {
		in, out := &in.Subnet, &out.Subnet
		*out = new(string)
		**out = **in
	}
	if in.VPC != nil {
		in, out := &in.VPC, &out.VPC
		*out = new(string)
		**out = **in
	}
	if in.VPCRef != nil {
		in, out := &in.VPCRef, &out.VPCRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.VPCSelector != nil {
		in, out := &in.VPCSelector, &out.VPCSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCPeeringConfigInitParameters.
func (in *VPCPeeringConfigInitParameters) DeepCopy() *VPCPeeringConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(VPCPeeringConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCPeeringConfigObservation) DeepCopyInto(out *VPCPeeringConfigObservation) {
	*out = *in
	if in.Subnet != nil {
		in, out := &in.Subnet, &out.Subnet
		*out = new(string)
		**out = **in
	}
	if in.VPC != nil {
		in, out := &in.VPC, &out.VPC
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCPeeringConfigObservation.
func (in *VPCPeeringConfigObservation) DeepCopy() *VPCPeeringConfigObservation {
	if in == nil {
		return nil
	}
	out := new(VPCPeeringConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCPeeringConfigParameters) DeepCopyInto(out *VPCPeeringConfigParameters) {
	*out = *in
	if in.Subnet != nil {
		in, out := &in.Subnet, &out.Subnet
		*out = new(string)
		**out = **in
	}
	if in.VPC != nil {
		in, out := &in.VPC, &out.VPC
		*out = new(string)
		**out = **in
	}
	if in.VPCRef != nil {
		in, out := &in.VPCRef, &out.VPCRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.VPCSelector != nil {
		in, out := &in.VPCSelector, &out.VPCSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCPeeringConfigParameters.
func (in *VPCPeeringConfigParameters) DeepCopy() *VPCPeeringConfigParameters {
	if in == nil {
		return nil
	}
	out := new(VPCPeeringConfigParameters)
	in.DeepCopyInto(out)
	return out
}
