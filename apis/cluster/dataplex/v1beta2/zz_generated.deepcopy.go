//go:build !ignore_autogenerated

// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by controller-gen. DO NOT EDIT.

package v1beta2

import (
	"github.com/crossplane/crossplane-runtime/apis/common/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Asset) DeepCopyInto(out *Asset) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Asset.
func (in *Asset) DeepCopy() *Asset {
	if in == nil {
		return nil
	}
	out := new(Asset)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Asset) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AssetInitParameters) DeepCopyInto(out *AssetInitParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DiscoverySpec != nil {
		in, out := &in.DiscoverySpec, &out.DiscoverySpec
		*out = new(DiscoverySpecInitParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.ResourceSpec != nil {
		in, out := &in.ResourceSpec, &out.ResourceSpec
		*out = new(ResourceSpecInitParameters)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AssetInitParameters.
func (in *AssetInitParameters) DeepCopy() *AssetInitParameters {
	if in == nil {
		return nil
	}
	out := new(AssetInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AssetList) DeepCopyInto(out *AssetList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Asset, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AssetList.
func (in *AssetList) DeepCopy() *AssetList {
	if in == nil {
		return nil
	}
	out := new(AssetList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AssetList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AssetObservation) DeepCopyInto(out *AssetObservation) {
	*out = *in
	if in.CreateTime != nil {
		in, out := &in.CreateTime, &out.CreateTime
		*out = new(string)
		**out = **in
	}
	if in.DataplexZone != nil {
		in, out := &in.DataplexZone, &out.DataplexZone
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DiscoverySpec != nil {
		in, out := &in.DiscoverySpec, &out.DiscoverySpec
		*out = new(DiscoverySpecObservation)
		(*in).DeepCopyInto(*out)
	}
	if in.DiscoveryStatus != nil {
		in, out := &in.DiscoveryStatus, &out.DiscoveryStatus
		*out = make([]DiscoveryStatusObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.EffectiveLabels != nil {
		in, out := &in.EffectiveLabels, &out.EffectiveLabels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Lake != nil {
		in, out := &in.Lake, &out.Lake
		*out = new(string)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.ResourceSpec != nil {
		in, out := &in.ResourceSpec, &out.ResourceSpec
		*out = new(ResourceSpecObservation)
		(*in).DeepCopyInto(*out)
	}
	if in.ResourceStatus != nil {
		in, out := &in.ResourceStatus, &out.ResourceStatus
		*out = make([]ResourceStatusObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SecurityStatus != nil {
		in, out := &in.SecurityStatus, &out.SecurityStatus
		*out = make([]SecurityStatusObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.TerraformLabels != nil {
		in, out := &in.TerraformLabels, &out.TerraformLabels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.UID != nil {
		in, out := &in.UID, &out.UID
		*out = new(string)
		**out = **in
	}
	if in.UpdateTime != nil {
		in, out := &in.UpdateTime, &out.UpdateTime
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AssetObservation.
func (in *AssetObservation) DeepCopy() *AssetObservation {
	if in == nil {
		return nil
	}
	out := new(AssetObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AssetParameters) DeepCopyInto(out *AssetParameters) {
	*out = *in
	if in.DataplexZone != nil {
		in, out := &in.DataplexZone, &out.DataplexZone
		*out = new(string)
		**out = **in
	}
	if in.DataplexZoneRef != nil {
		in, out := &in.DataplexZoneRef, &out.DataplexZoneRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.DataplexZoneSelector != nil {
		in, out := &in.DataplexZoneSelector, &out.DataplexZoneSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DiscoverySpec != nil {
		in, out := &in.DiscoverySpec, &out.DiscoverySpec
		*out = new(DiscoverySpecParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Lake != nil {
		in, out := &in.Lake, &out.Lake
		*out = new(string)
		**out = **in
	}
	if in.LakeRef != nil {
		in, out := &in.LakeRef, &out.LakeRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.LakeSelector != nil {
		in, out := &in.LakeSelector, &out.LakeSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.ResourceSpec != nil {
		in, out := &in.ResourceSpec, &out.ResourceSpec
		*out = new(ResourceSpecParameters)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AssetParameters.
func (in *AssetParameters) DeepCopy() *AssetParameters {
	if in == nil {
		return nil
	}
	out := new(AssetParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AssetSpec) DeepCopyInto(out *AssetSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AssetSpec.
func (in *AssetSpec) DeepCopy() *AssetSpec {
	if in == nil {
		return nil
	}
	out := new(AssetSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AssetStatus) DeepCopyInto(out *AssetStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AssetStatus.
func (in *AssetStatus) DeepCopy() *AssetStatus {
	if in == nil {
		return nil
	}
	out := new(AssetStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AssetStatusInitParameters) DeepCopyInto(out *AssetStatusInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AssetStatusInitParameters.
func (in *AssetStatusInitParameters) DeepCopy() *AssetStatusInitParameters {
	if in == nil {
		return nil
	}
	out := new(AssetStatusInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AssetStatusObservation) DeepCopyInto(out *AssetStatusObservation) {
	*out = *in
	if in.ActiveAssets != nil {
		in, out := &in.ActiveAssets, &out.ActiveAssets
		*out = new(float64)
		**out = **in
	}
	if in.SecurityPolicyApplyingAssets != nil {
		in, out := &in.SecurityPolicyApplyingAssets, &out.SecurityPolicyApplyingAssets
		*out = new(float64)
		**out = **in
	}
	if in.UpdateTime != nil {
		in, out := &in.UpdateTime, &out.UpdateTime
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AssetStatusObservation.
func (in *AssetStatusObservation) DeepCopy() *AssetStatusObservation {
	if in == nil {
		return nil
	}
	out := new(AssetStatusObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AssetStatusParameters) DeepCopyInto(out *AssetStatusParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AssetStatusParameters.
func (in *AssetStatusParameters) DeepCopy() *AssetStatusParameters {
	if in == nil {
		return nil
	}
	out := new(AssetStatusParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CsvOptionsInitParameters) DeepCopyInto(out *CsvOptionsInitParameters) {
	*out = *in
	if in.Delimiter != nil {
		in, out := &in.Delimiter, &out.Delimiter
		*out = new(string)
		**out = **in
	}
	if in.DisableTypeInference != nil {
		in, out := &in.DisableTypeInference, &out.DisableTypeInference
		*out = new(bool)
		**out = **in
	}
	if in.Encoding != nil {
		in, out := &in.Encoding, &out.Encoding
		*out = new(string)
		**out = **in
	}
	if in.HeaderRows != nil {
		in, out := &in.HeaderRows, &out.HeaderRows
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CsvOptionsInitParameters.
func (in *CsvOptionsInitParameters) DeepCopy() *CsvOptionsInitParameters {
	if in == nil {
		return nil
	}
	out := new(CsvOptionsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CsvOptionsObservation) DeepCopyInto(out *CsvOptionsObservation) {
	*out = *in
	if in.Delimiter != nil {
		in, out := &in.Delimiter, &out.Delimiter
		*out = new(string)
		**out = **in
	}
	if in.DisableTypeInference != nil {
		in, out := &in.DisableTypeInference, &out.DisableTypeInference
		*out = new(bool)
		**out = **in
	}
	if in.Encoding != nil {
		in, out := &in.Encoding, &out.Encoding
		*out = new(string)
		**out = **in
	}
	if in.HeaderRows != nil {
		in, out := &in.HeaderRows, &out.HeaderRows
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CsvOptionsObservation.
func (in *CsvOptionsObservation) DeepCopy() *CsvOptionsObservation {
	if in == nil {
		return nil
	}
	out := new(CsvOptionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CsvOptionsParameters) DeepCopyInto(out *CsvOptionsParameters) {
	*out = *in
	if in.Delimiter != nil {
		in, out := &in.Delimiter, &out.Delimiter
		*out = new(string)
		**out = **in
	}
	if in.DisableTypeInference != nil {
		in, out := &in.DisableTypeInference, &out.DisableTypeInference
		*out = new(bool)
		**out = **in
	}
	if in.Encoding != nil {
		in, out := &in.Encoding, &out.Encoding
		*out = new(string)
		**out = **in
	}
	if in.HeaderRows != nil {
		in, out := &in.HeaderRows, &out.HeaderRows
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CsvOptionsParameters.
func (in *CsvOptionsParameters) DeepCopy() *CsvOptionsParameters {
	if in == nil {
		return nil
	}
	out := new(CsvOptionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DiscoverySpecCsvOptionsInitParameters) DeepCopyInto(out *DiscoverySpecCsvOptionsInitParameters) {
	*out = *in
	if in.Delimiter != nil {
		in, out := &in.Delimiter, &out.Delimiter
		*out = new(string)
		**out = **in
	}
	if in.DisableTypeInference != nil {
		in, out := &in.DisableTypeInference, &out.DisableTypeInference
		*out = new(bool)
		**out = **in
	}
	if in.Encoding != nil {
		in, out := &in.Encoding, &out.Encoding
		*out = new(string)
		**out = **in
	}
	if in.HeaderRows != nil {
		in, out := &in.HeaderRows, &out.HeaderRows
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DiscoverySpecCsvOptionsInitParameters.
func (in *DiscoverySpecCsvOptionsInitParameters) DeepCopy() *DiscoverySpecCsvOptionsInitParameters {
	if in == nil {
		return nil
	}
	out := new(DiscoverySpecCsvOptionsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DiscoverySpecCsvOptionsObservation) DeepCopyInto(out *DiscoverySpecCsvOptionsObservation) {
	*out = *in
	if in.Delimiter != nil {
		in, out := &in.Delimiter, &out.Delimiter
		*out = new(string)
		**out = **in
	}
	if in.DisableTypeInference != nil {
		in, out := &in.DisableTypeInference, &out.DisableTypeInference
		*out = new(bool)
		**out = **in
	}
	if in.Encoding != nil {
		in, out := &in.Encoding, &out.Encoding
		*out = new(string)
		**out = **in
	}
	if in.HeaderRows != nil {
		in, out := &in.HeaderRows, &out.HeaderRows
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DiscoverySpecCsvOptionsObservation.
func (in *DiscoverySpecCsvOptionsObservation) DeepCopy() *DiscoverySpecCsvOptionsObservation {
	if in == nil {
		return nil
	}
	out := new(DiscoverySpecCsvOptionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DiscoverySpecCsvOptionsParameters) DeepCopyInto(out *DiscoverySpecCsvOptionsParameters) {
	*out = *in
	if in.Delimiter != nil {
		in, out := &in.Delimiter, &out.Delimiter
		*out = new(string)
		**out = **in
	}
	if in.DisableTypeInference != nil {
		in, out := &in.DisableTypeInference, &out.DisableTypeInference
		*out = new(bool)
		**out = **in
	}
	if in.Encoding != nil {
		in, out := &in.Encoding, &out.Encoding
		*out = new(string)
		**out = **in
	}
	if in.HeaderRows != nil {
		in, out := &in.HeaderRows, &out.HeaderRows
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DiscoverySpecCsvOptionsParameters.
func (in *DiscoverySpecCsvOptionsParameters) DeepCopy() *DiscoverySpecCsvOptionsParameters {
	if in == nil {
		return nil
	}
	out := new(DiscoverySpecCsvOptionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DiscoverySpecInitParameters) DeepCopyInto(out *DiscoverySpecInitParameters) {
	*out = *in
	if in.CsvOptions != nil {
		in, out := &in.CsvOptions, &out.CsvOptions
		*out = new(CsvOptionsInitParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.ExcludePatterns != nil {
		in, out := &in.ExcludePatterns, &out.ExcludePatterns
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.IncludePatterns != nil {
		in, out := &in.IncludePatterns, &out.IncludePatterns
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.JSONOptions != nil {
		in, out := &in.JSONOptions, &out.JSONOptions
		*out = new(JSONOptionsInitParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.Schedule != nil {
		in, out := &in.Schedule, &out.Schedule
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DiscoverySpecInitParameters.
func (in *DiscoverySpecInitParameters) DeepCopy() *DiscoverySpecInitParameters {
	if in == nil {
		return nil
	}
	out := new(DiscoverySpecInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DiscoverySpecJSONOptionsInitParameters) DeepCopyInto(out *DiscoverySpecJSONOptionsInitParameters) {
	*out = *in
	if in.DisableTypeInference != nil {
		in, out := &in.DisableTypeInference, &out.DisableTypeInference
		*out = new(bool)
		**out = **in
	}
	if in.Encoding != nil {
		in, out := &in.Encoding, &out.Encoding
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DiscoverySpecJSONOptionsInitParameters.
func (in *DiscoverySpecJSONOptionsInitParameters) DeepCopy() *DiscoverySpecJSONOptionsInitParameters {
	if in == nil {
		return nil
	}
	out := new(DiscoverySpecJSONOptionsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DiscoverySpecJSONOptionsObservation) DeepCopyInto(out *DiscoverySpecJSONOptionsObservation) {
	*out = *in
	if in.DisableTypeInference != nil {
		in, out := &in.DisableTypeInference, &out.DisableTypeInference
		*out = new(bool)
		**out = **in
	}
	if in.Encoding != nil {
		in, out := &in.Encoding, &out.Encoding
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DiscoverySpecJSONOptionsObservation.
func (in *DiscoverySpecJSONOptionsObservation) DeepCopy() *DiscoverySpecJSONOptionsObservation {
	if in == nil {
		return nil
	}
	out := new(DiscoverySpecJSONOptionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DiscoverySpecJSONOptionsParameters) DeepCopyInto(out *DiscoverySpecJSONOptionsParameters) {
	*out = *in
	if in.DisableTypeInference != nil {
		in, out := &in.DisableTypeInference, &out.DisableTypeInference
		*out = new(bool)
		**out = **in
	}
	if in.Encoding != nil {
		in, out := &in.Encoding, &out.Encoding
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DiscoverySpecJSONOptionsParameters.
func (in *DiscoverySpecJSONOptionsParameters) DeepCopy() *DiscoverySpecJSONOptionsParameters {
	if in == nil {
		return nil
	}
	out := new(DiscoverySpecJSONOptionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DiscoverySpecObservation) DeepCopyInto(out *DiscoverySpecObservation) {
	*out = *in
	if in.CsvOptions != nil {
		in, out := &in.CsvOptions, &out.CsvOptions
		*out = new(CsvOptionsObservation)
		(*in).DeepCopyInto(*out)
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.ExcludePatterns != nil {
		in, out := &in.ExcludePatterns, &out.ExcludePatterns
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.IncludePatterns != nil {
		in, out := &in.IncludePatterns, &out.IncludePatterns
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.JSONOptions != nil {
		in, out := &in.JSONOptions, &out.JSONOptions
		*out = new(JSONOptionsObservation)
		(*in).DeepCopyInto(*out)
	}
	if in.Schedule != nil {
		in, out := &in.Schedule, &out.Schedule
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DiscoverySpecObservation.
func (in *DiscoverySpecObservation) DeepCopy() *DiscoverySpecObservation {
	if in == nil {
		return nil
	}
	out := new(DiscoverySpecObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DiscoverySpecParameters) DeepCopyInto(out *DiscoverySpecParameters) {
	*out = *in
	if in.CsvOptions != nil {
		in, out := &in.CsvOptions, &out.CsvOptions
		*out = new(CsvOptionsParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.ExcludePatterns != nil {
		in, out := &in.ExcludePatterns, &out.ExcludePatterns
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.IncludePatterns != nil {
		in, out := &in.IncludePatterns, &out.IncludePatterns
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.JSONOptions != nil {
		in, out := &in.JSONOptions, &out.JSONOptions
		*out = new(JSONOptionsParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.Schedule != nil {
		in, out := &in.Schedule, &out.Schedule
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DiscoverySpecParameters.
func (in *DiscoverySpecParameters) DeepCopy() *DiscoverySpecParameters {
	if in == nil {
		return nil
	}
	out := new(DiscoverySpecParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DiscoveryStatusInitParameters) DeepCopyInto(out *DiscoveryStatusInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DiscoveryStatusInitParameters.
func (in *DiscoveryStatusInitParameters) DeepCopy() *DiscoveryStatusInitParameters {
	if in == nil {
		return nil
	}
	out := new(DiscoveryStatusInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DiscoveryStatusObservation) DeepCopyInto(out *DiscoveryStatusObservation) {
	*out = *in
	if in.LastRunDuration != nil {
		in, out := &in.LastRunDuration, &out.LastRunDuration
		*out = new(string)
		**out = **in
	}
	if in.LastRunTime != nil {
		in, out := &in.LastRunTime, &out.LastRunTime
		*out = new(string)
		**out = **in
	}
	if in.Message != nil {
		in, out := &in.Message, &out.Message
		*out = new(string)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.Stats != nil {
		in, out := &in.Stats, &out.Stats
		*out = make([]StatsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.UpdateTime != nil {
		in, out := &in.UpdateTime, &out.UpdateTime
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DiscoveryStatusObservation.
func (in *DiscoveryStatusObservation) DeepCopy() *DiscoveryStatusObservation {
	if in == nil {
		return nil
	}
	out := new(DiscoveryStatusObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DiscoveryStatusParameters) DeepCopyInto(out *DiscoveryStatusParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DiscoveryStatusParameters.
func (in *DiscoveryStatusParameters) DeepCopy() *DiscoveryStatusParameters {
	if in == nil {
		return nil
	}
	out := new(DiscoveryStatusParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JSONOptionsInitParameters) DeepCopyInto(out *JSONOptionsInitParameters) {
	*out = *in
	if in.DisableTypeInference != nil {
		in, out := &in.DisableTypeInference, &out.DisableTypeInference
		*out = new(bool)
		**out = **in
	}
	if in.Encoding != nil {
		in, out := &in.Encoding, &out.Encoding
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JSONOptionsInitParameters.
func (in *JSONOptionsInitParameters) DeepCopy() *JSONOptionsInitParameters {
	if in == nil {
		return nil
	}
	out := new(JSONOptionsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JSONOptionsObservation) DeepCopyInto(out *JSONOptionsObservation) {
	*out = *in
	if in.DisableTypeInference != nil {
		in, out := &in.DisableTypeInference, &out.DisableTypeInference
		*out = new(bool)
		**out = **in
	}
	if in.Encoding != nil {
		in, out := &in.Encoding, &out.Encoding
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JSONOptionsObservation.
func (in *JSONOptionsObservation) DeepCopy() *JSONOptionsObservation {
	if in == nil {
		return nil
	}
	out := new(JSONOptionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JSONOptionsParameters) DeepCopyInto(out *JSONOptionsParameters) {
	*out = *in
	if in.DisableTypeInference != nil {
		in, out := &in.DisableTypeInference, &out.DisableTypeInference
		*out = new(bool)
		**out = **in
	}
	if in.Encoding != nil {
		in, out := &in.Encoding, &out.Encoding
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JSONOptionsParameters.
func (in *JSONOptionsParameters) DeepCopy() *JSONOptionsParameters {
	if in == nil {
		return nil
	}
	out := new(JSONOptionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Lake) DeepCopyInto(out *Lake) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Lake.
func (in *Lake) DeepCopy() *Lake {
	if in == nil {
		return nil
	}
	out := new(Lake)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Lake) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LakeInitParameters) DeepCopyInto(out *LakeInitParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Metastore != nil {
		in, out := &in.Metastore, &out.Metastore
		*out = new(MetastoreInitParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LakeInitParameters.
func (in *LakeInitParameters) DeepCopy() *LakeInitParameters {
	if in == nil {
		return nil
	}
	out := new(LakeInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LakeList) DeepCopyInto(out *LakeList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Lake, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LakeList.
func (in *LakeList) DeepCopy() *LakeList {
	if in == nil {
		return nil
	}
	out := new(LakeList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *LakeList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LakeObservation) DeepCopyInto(out *LakeObservation) {
	*out = *in
	if in.AssetStatus != nil {
		in, out := &in.AssetStatus, &out.AssetStatus
		*out = make([]AssetStatusObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CreateTime != nil {
		in, out := &in.CreateTime, &out.CreateTime
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.EffectiveLabels != nil {
		in, out := &in.EffectiveLabels, &out.EffectiveLabels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.Metastore != nil {
		in, out := &in.Metastore, &out.Metastore
		*out = new(MetastoreObservation)
		(*in).DeepCopyInto(*out)
	}
	if in.MetastoreStatus != nil {
		in, out := &in.MetastoreStatus, &out.MetastoreStatus
		*out = make([]MetastoreStatusObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.ServiceAccount != nil {
		in, out := &in.ServiceAccount, &out.ServiceAccount
		*out = new(string)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.TerraformLabels != nil {
		in, out := &in.TerraformLabels, &out.TerraformLabels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.UID != nil {
		in, out := &in.UID, &out.UID
		*out = new(string)
		**out = **in
	}
	if in.UpdateTime != nil {
		in, out := &in.UpdateTime, &out.UpdateTime
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LakeObservation.
func (in *LakeObservation) DeepCopy() *LakeObservation {
	if in == nil {
		return nil
	}
	out := new(LakeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LakeParameters) DeepCopyInto(out *LakeParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.Metastore != nil {
		in, out := &in.Metastore, &out.Metastore
		*out = new(MetastoreParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LakeParameters.
func (in *LakeParameters) DeepCopy() *LakeParameters {
	if in == nil {
		return nil
	}
	out := new(LakeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LakeSpec) DeepCopyInto(out *LakeSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LakeSpec.
func (in *LakeSpec) DeepCopy() *LakeSpec {
	if in == nil {
		return nil
	}
	out := new(LakeSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LakeStatus) DeepCopyInto(out *LakeStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LakeStatus.
func (in *LakeStatus) DeepCopy() *LakeStatus {
	if in == nil {
		return nil
	}
	out := new(LakeStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MetastoreInitParameters) DeepCopyInto(out *MetastoreInitParameters) {
	*out = *in
	if in.Service != nil {
		in, out := &in.Service, &out.Service
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MetastoreInitParameters.
func (in *MetastoreInitParameters) DeepCopy() *MetastoreInitParameters {
	if in == nil {
		return nil
	}
	out := new(MetastoreInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MetastoreObservation) DeepCopyInto(out *MetastoreObservation) {
	*out = *in
	if in.Service != nil {
		in, out := &in.Service, &out.Service
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MetastoreObservation.
func (in *MetastoreObservation) DeepCopy() *MetastoreObservation {
	if in == nil {
		return nil
	}
	out := new(MetastoreObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MetastoreParameters) DeepCopyInto(out *MetastoreParameters) {
	*out = *in
	if in.Service != nil {
		in, out := &in.Service, &out.Service
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MetastoreParameters.
func (in *MetastoreParameters) DeepCopy() *MetastoreParameters {
	if in == nil {
		return nil
	}
	out := new(MetastoreParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MetastoreStatusInitParameters) DeepCopyInto(out *MetastoreStatusInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MetastoreStatusInitParameters.
func (in *MetastoreStatusInitParameters) DeepCopy() *MetastoreStatusInitParameters {
	if in == nil {
		return nil
	}
	out := new(MetastoreStatusInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MetastoreStatusObservation) DeepCopyInto(out *MetastoreStatusObservation) {
	*out = *in
	if in.Endpoint != nil {
		in, out := &in.Endpoint, &out.Endpoint
		*out = new(string)
		**out = **in
	}
	if in.Message != nil {
		in, out := &in.Message, &out.Message
		*out = new(string)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.UpdateTime != nil {
		in, out := &in.UpdateTime, &out.UpdateTime
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MetastoreStatusObservation.
func (in *MetastoreStatusObservation) DeepCopy() *MetastoreStatusObservation {
	if in == nil {
		return nil
	}
	out := new(MetastoreStatusObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MetastoreStatusParameters) DeepCopyInto(out *MetastoreStatusParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MetastoreStatusParameters.
func (in *MetastoreStatusParameters) DeepCopy() *MetastoreStatusParameters {
	if in == nil {
		return nil
	}
	out := new(MetastoreStatusParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ResourceSpecInitParameters) DeepCopyInto(out *ResourceSpecInitParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ReadAccessMode != nil {
		in, out := &in.ReadAccessMode, &out.ReadAccessMode
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ResourceSpecInitParameters.
func (in *ResourceSpecInitParameters) DeepCopy() *ResourceSpecInitParameters {
	if in == nil {
		return nil
	}
	out := new(ResourceSpecInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ResourceSpecObservation) DeepCopyInto(out *ResourceSpecObservation) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ReadAccessMode != nil {
		in, out := &in.ReadAccessMode, &out.ReadAccessMode
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ResourceSpecObservation.
func (in *ResourceSpecObservation) DeepCopy() *ResourceSpecObservation {
	if in == nil {
		return nil
	}
	out := new(ResourceSpecObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ResourceSpecParameters) DeepCopyInto(out *ResourceSpecParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ReadAccessMode != nil {
		in, out := &in.ReadAccessMode, &out.ReadAccessMode
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ResourceSpecParameters.
func (in *ResourceSpecParameters) DeepCopy() *ResourceSpecParameters {
	if in == nil {
		return nil
	}
	out := new(ResourceSpecParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ResourceStatusInitParameters) DeepCopyInto(out *ResourceStatusInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ResourceStatusInitParameters.
func (in *ResourceStatusInitParameters) DeepCopy() *ResourceStatusInitParameters {
	if in == nil {
		return nil
	}
	out := new(ResourceStatusInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ResourceStatusObservation) DeepCopyInto(out *ResourceStatusObservation) {
	*out = *in
	if in.Message != nil {
		in, out := &in.Message, &out.Message
		*out = new(string)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.UpdateTime != nil {
		in, out := &in.UpdateTime, &out.UpdateTime
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ResourceStatusObservation.
func (in *ResourceStatusObservation) DeepCopy() *ResourceStatusObservation {
	if in == nil {
		return nil
	}
	out := new(ResourceStatusObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ResourceStatusParameters) DeepCopyInto(out *ResourceStatusParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ResourceStatusParameters.
func (in *ResourceStatusParameters) DeepCopy() *ResourceStatusParameters {
	if in == nil {
		return nil
	}
	out := new(ResourceStatusParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecurityStatusInitParameters) DeepCopyInto(out *SecurityStatusInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecurityStatusInitParameters.
func (in *SecurityStatusInitParameters) DeepCopy() *SecurityStatusInitParameters {
	if in == nil {
		return nil
	}
	out := new(SecurityStatusInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecurityStatusObservation) DeepCopyInto(out *SecurityStatusObservation) {
	*out = *in
	if in.Message != nil {
		in, out := &in.Message, &out.Message
		*out = new(string)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.UpdateTime != nil {
		in, out := &in.UpdateTime, &out.UpdateTime
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecurityStatusObservation.
func (in *SecurityStatusObservation) DeepCopy() *SecurityStatusObservation {
	if in == nil {
		return nil
	}
	out := new(SecurityStatusObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecurityStatusParameters) DeepCopyInto(out *SecurityStatusParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecurityStatusParameters.
func (in *SecurityStatusParameters) DeepCopy() *SecurityStatusParameters {
	if in == nil {
		return nil
	}
	out := new(SecurityStatusParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StatsInitParameters) DeepCopyInto(out *StatsInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StatsInitParameters.
func (in *StatsInitParameters) DeepCopy() *StatsInitParameters {
	if in == nil {
		return nil
	}
	out := new(StatsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StatsObservation) DeepCopyInto(out *StatsObservation) {
	*out = *in
	if in.DataItems != nil {
		in, out := &in.DataItems, &out.DataItems
		*out = new(float64)
		**out = **in
	}
	if in.DataSize != nil {
		in, out := &in.DataSize, &out.DataSize
		*out = new(float64)
		**out = **in
	}
	if in.Filesets != nil {
		in, out := &in.Filesets, &out.Filesets
		*out = new(float64)
		**out = **in
	}
	if in.Tables != nil {
		in, out := &in.Tables, &out.Tables
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StatsObservation.
func (in *StatsObservation) DeepCopy() *StatsObservation {
	if in == nil {
		return nil
	}
	out := new(StatsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StatsParameters) DeepCopyInto(out *StatsParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StatsParameters.
func (in *StatsParameters) DeepCopy() *StatsParameters {
	if in == nil {
		return nil
	}
	out := new(StatsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Zone) DeepCopyInto(out *Zone) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Zone.
func (in *Zone) DeepCopy() *Zone {
	if in == nil {
		return nil
	}
	out := new(Zone)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Zone) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ZoneAssetStatusInitParameters) DeepCopyInto(out *ZoneAssetStatusInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ZoneAssetStatusInitParameters.
func (in *ZoneAssetStatusInitParameters) DeepCopy() *ZoneAssetStatusInitParameters {
	if in == nil {
		return nil
	}
	out := new(ZoneAssetStatusInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ZoneAssetStatusObservation) DeepCopyInto(out *ZoneAssetStatusObservation) {
	*out = *in
	if in.ActiveAssets != nil {
		in, out := &in.ActiveAssets, &out.ActiveAssets
		*out = new(float64)
		**out = **in
	}
	if in.SecurityPolicyApplyingAssets != nil {
		in, out := &in.SecurityPolicyApplyingAssets, &out.SecurityPolicyApplyingAssets
		*out = new(float64)
		**out = **in
	}
	if in.UpdateTime != nil {
		in, out := &in.UpdateTime, &out.UpdateTime
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ZoneAssetStatusObservation.
func (in *ZoneAssetStatusObservation) DeepCopy() *ZoneAssetStatusObservation {
	if in == nil {
		return nil
	}
	out := new(ZoneAssetStatusObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ZoneAssetStatusParameters) DeepCopyInto(out *ZoneAssetStatusParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ZoneAssetStatusParameters.
func (in *ZoneAssetStatusParameters) DeepCopy() *ZoneAssetStatusParameters {
	if in == nil {
		return nil
	}
	out := new(ZoneAssetStatusParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ZoneDiscoverySpecInitParameters) DeepCopyInto(out *ZoneDiscoverySpecInitParameters) {
	*out = *in
	if in.CsvOptions != nil {
		in, out := &in.CsvOptions, &out.CsvOptions
		*out = new(DiscoverySpecCsvOptionsInitParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.ExcludePatterns != nil {
		in, out := &in.ExcludePatterns, &out.ExcludePatterns
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.IncludePatterns != nil {
		in, out := &in.IncludePatterns, &out.IncludePatterns
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.JSONOptions != nil {
		in, out := &in.JSONOptions, &out.JSONOptions
		*out = new(DiscoverySpecJSONOptionsInitParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.Schedule != nil {
		in, out := &in.Schedule, &out.Schedule
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ZoneDiscoverySpecInitParameters.
func (in *ZoneDiscoverySpecInitParameters) DeepCopy() *ZoneDiscoverySpecInitParameters {
	if in == nil {
		return nil
	}
	out := new(ZoneDiscoverySpecInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ZoneDiscoverySpecObservation) DeepCopyInto(out *ZoneDiscoverySpecObservation) {
	*out = *in
	if in.CsvOptions != nil {
		in, out := &in.CsvOptions, &out.CsvOptions
		*out = new(DiscoverySpecCsvOptionsObservation)
		(*in).DeepCopyInto(*out)
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.ExcludePatterns != nil {
		in, out := &in.ExcludePatterns, &out.ExcludePatterns
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.IncludePatterns != nil {
		in, out := &in.IncludePatterns, &out.IncludePatterns
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.JSONOptions != nil {
		in, out := &in.JSONOptions, &out.JSONOptions
		*out = new(DiscoverySpecJSONOptionsObservation)
		(*in).DeepCopyInto(*out)
	}
	if in.Schedule != nil {
		in, out := &in.Schedule, &out.Schedule
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ZoneDiscoverySpecObservation.
func (in *ZoneDiscoverySpecObservation) DeepCopy() *ZoneDiscoverySpecObservation {
	if in == nil {
		return nil
	}
	out := new(ZoneDiscoverySpecObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ZoneDiscoverySpecParameters) DeepCopyInto(out *ZoneDiscoverySpecParameters) {
	*out = *in
	if in.CsvOptions != nil {
		in, out := &in.CsvOptions, &out.CsvOptions
		*out = new(DiscoverySpecCsvOptionsParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.ExcludePatterns != nil {
		in, out := &in.ExcludePatterns, &out.ExcludePatterns
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.IncludePatterns != nil {
		in, out := &in.IncludePatterns, &out.IncludePatterns
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.JSONOptions != nil {
		in, out := &in.JSONOptions, &out.JSONOptions
		*out = new(DiscoverySpecJSONOptionsParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.Schedule != nil {
		in, out := &in.Schedule, &out.Schedule
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ZoneDiscoverySpecParameters.
func (in *ZoneDiscoverySpecParameters) DeepCopy() *ZoneDiscoverySpecParameters {
	if in == nil {
		return nil
	}
	out := new(ZoneDiscoverySpecParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ZoneInitParameters) DeepCopyInto(out *ZoneInitParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DiscoverySpec != nil {
		in, out := &in.DiscoverySpec, &out.DiscoverySpec
		*out = new(ZoneDiscoverySpecInitParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.ResourceSpec != nil {
		in, out := &in.ResourceSpec, &out.ResourceSpec
		*out = new(ZoneResourceSpecInitParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ZoneInitParameters.
func (in *ZoneInitParameters) DeepCopy() *ZoneInitParameters {
	if in == nil {
		return nil
	}
	out := new(ZoneInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ZoneList) DeepCopyInto(out *ZoneList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Zone, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ZoneList.
func (in *ZoneList) DeepCopy() *ZoneList {
	if in == nil {
		return nil
	}
	out := new(ZoneList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ZoneList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ZoneObservation) DeepCopyInto(out *ZoneObservation) {
	*out = *in
	if in.AssetStatus != nil {
		in, out := &in.AssetStatus, &out.AssetStatus
		*out = make([]ZoneAssetStatusObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CreateTime != nil {
		in, out := &in.CreateTime, &out.CreateTime
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DiscoverySpec != nil {
		in, out := &in.DiscoverySpec, &out.DiscoverySpec
		*out = new(ZoneDiscoverySpecObservation)
		(*in).DeepCopyInto(*out)
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.EffectiveLabels != nil {
		in, out := &in.EffectiveLabels, &out.EffectiveLabels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Lake != nil {
		in, out := &in.Lake, &out.Lake
		*out = new(string)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.ResourceSpec != nil {
		in, out := &in.ResourceSpec, &out.ResourceSpec
		*out = new(ZoneResourceSpecObservation)
		(*in).DeepCopyInto(*out)
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.TerraformLabels != nil {
		in, out := &in.TerraformLabels, &out.TerraformLabels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.UID != nil {
		in, out := &in.UID, &out.UID
		*out = new(string)
		**out = **in
	}
	if in.UpdateTime != nil {
		in, out := &in.UpdateTime, &out.UpdateTime
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ZoneObservation.
func (in *ZoneObservation) DeepCopy() *ZoneObservation {
	if in == nil {
		return nil
	}
	out := new(ZoneObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ZoneParameters) DeepCopyInto(out *ZoneParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DiscoverySpec != nil {
		in, out := &in.DiscoverySpec, &out.DiscoverySpec
		*out = new(ZoneDiscoverySpecParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Lake != nil {
		in, out := &in.Lake, &out.Lake
		*out = new(string)
		**out = **in
	}
	if in.LakeRef != nil {
		in, out := &in.LakeRef, &out.LakeRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.LakeSelector != nil {
		in, out := &in.LakeSelector, &out.LakeSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.ResourceSpec != nil {
		in, out := &in.ResourceSpec, &out.ResourceSpec
		*out = new(ZoneResourceSpecParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ZoneParameters.
func (in *ZoneParameters) DeepCopy() *ZoneParameters {
	if in == nil {
		return nil
	}
	out := new(ZoneParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ZoneResourceSpecInitParameters) DeepCopyInto(out *ZoneResourceSpecInitParameters) {
	*out = *in
	if in.LocationType != nil {
		in, out := &in.LocationType, &out.LocationType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ZoneResourceSpecInitParameters.
func (in *ZoneResourceSpecInitParameters) DeepCopy() *ZoneResourceSpecInitParameters {
	if in == nil {
		return nil
	}
	out := new(ZoneResourceSpecInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ZoneResourceSpecObservation) DeepCopyInto(out *ZoneResourceSpecObservation) {
	*out = *in
	if in.LocationType != nil {
		in, out := &in.LocationType, &out.LocationType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ZoneResourceSpecObservation.
func (in *ZoneResourceSpecObservation) DeepCopy() *ZoneResourceSpecObservation {
	if in == nil {
		return nil
	}
	out := new(ZoneResourceSpecObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ZoneResourceSpecParameters) DeepCopyInto(out *ZoneResourceSpecParameters) {
	*out = *in
	if in.LocationType != nil {
		in, out := &in.LocationType, &out.LocationType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ZoneResourceSpecParameters.
func (in *ZoneResourceSpecParameters) DeepCopy() *ZoneResourceSpecParameters {
	if in == nil {
		return nil
	}
	out := new(ZoneResourceSpecParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ZoneSpec) DeepCopyInto(out *ZoneSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ZoneSpec.
func (in *ZoneSpec) DeepCopy() *ZoneSpec {
	if in == nil {
		return nil
	}
	out := new(ZoneSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ZoneStatus) DeepCopyInto(out *ZoneStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ZoneStatus.
func (in *ZoneStatus) DeepCopy() *ZoneStatus {
	if in == nil {
		return nil
	}
	out := new(ZoneStatus)
	in.DeepCopyInto(out)
	return out
}
