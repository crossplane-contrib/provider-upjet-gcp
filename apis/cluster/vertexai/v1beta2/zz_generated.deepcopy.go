//go:build !ignore_autogenerated

// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by controller-gen. DO NOT EDIT.

package v1beta2

import (
	"github.com/crossplane/crossplane-runtime/apis/common/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CategoricalThresholdConfigInitParameters) DeepCopyInto(out *CategoricalThresholdConfigInitParameters) {
	*out = *in
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CategoricalThresholdConfigInitParameters.
func (in *CategoricalThresholdConfigInitParameters) DeepCopy() *CategoricalThresholdConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(CategoricalThresholdConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CategoricalThresholdConfigObservation) DeepCopyInto(out *CategoricalThresholdConfigObservation) {
	*out = *in
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CategoricalThresholdConfigObservation.
func (in *CategoricalThresholdConfigObservation) DeepCopy() *CategoricalThresholdConfigObservation {
	if in == nil {
		return nil
	}
	out := new(CategoricalThresholdConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CategoricalThresholdConfigParameters) DeepCopyInto(out *CategoricalThresholdConfigParameters) {
	*out = *in
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CategoricalThresholdConfigParameters.
func (in *CategoricalThresholdConfigParameters) DeepCopy() *CategoricalThresholdConfigParameters {
	if in == nil {
		return nil
	}
	out := new(CategoricalThresholdConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Dataset) DeepCopyInto(out *Dataset) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Dataset.
func (in *Dataset) DeepCopy() *Dataset {
	if in == nil {
		return nil
	}
	out := new(Dataset)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Dataset) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatasetInitParameters) DeepCopyInto(out *DatasetInitParameters) {
	*out = *in
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.EncryptionSpec != nil {
		in, out := &in.EncryptionSpec, &out.EncryptionSpec
		*out = new(EncryptionSpecInitParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.MetadataSchemaURI != nil {
		in, out := &in.MetadataSchemaURI, &out.MetadataSchemaURI
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatasetInitParameters.
func (in *DatasetInitParameters) DeepCopy() *DatasetInitParameters {
	if in == nil {
		return nil
	}
	out := new(DatasetInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatasetList) DeepCopyInto(out *DatasetList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Dataset, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatasetList.
func (in *DatasetList) DeepCopy() *DatasetList {
	if in == nil {
		return nil
	}
	out := new(DatasetList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DatasetList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatasetObservation) DeepCopyInto(out *DatasetObservation) {
	*out = *in
	if in.CreateTime != nil {
		in, out := &in.CreateTime, &out.CreateTime
		*out = new(string)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.EffectiveLabels != nil {
		in, out := &in.EffectiveLabels, &out.EffectiveLabels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.EncryptionSpec != nil {
		in, out := &in.EncryptionSpec, &out.EncryptionSpec
		*out = new(EncryptionSpecObservation)
		(*in).DeepCopyInto(*out)
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.MetadataSchemaURI != nil {
		in, out := &in.MetadataSchemaURI, &out.MetadataSchemaURI
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.TerraformLabels != nil {
		in, out := &in.TerraformLabels, &out.TerraformLabels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.UpdateTime != nil {
		in, out := &in.UpdateTime, &out.UpdateTime
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatasetObservation.
func (in *DatasetObservation) DeepCopy() *DatasetObservation {
	if in == nil {
		return nil
	}
	out := new(DatasetObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatasetParameters) DeepCopyInto(out *DatasetParameters) {
	*out = *in
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.EncryptionSpec != nil {
		in, out := &in.EncryptionSpec, &out.EncryptionSpec
		*out = new(EncryptionSpecParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.MetadataSchemaURI != nil {
		in, out := &in.MetadataSchemaURI, &out.MetadataSchemaURI
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatasetParameters.
func (in *DatasetParameters) DeepCopy() *DatasetParameters {
	if in == nil {
		return nil
	}
	out := new(DatasetParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatasetSpec) DeepCopyInto(out *DatasetSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatasetSpec.
func (in *DatasetSpec) DeepCopy() *DatasetSpec {
	if in == nil {
		return nil
	}
	out := new(DatasetSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatasetStatus) DeepCopyInto(out *DatasetStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatasetStatus.
func (in *DatasetStatus) DeepCopy() *DatasetStatus {
	if in == nil {
		return nil
	}
	out := new(DatasetStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EncryptionSpecInitParameters) DeepCopyInto(out *EncryptionSpecInitParameters) {
	*out = *in
	if in.KMSKeyName != nil {
		in, out := &in.KMSKeyName, &out.KMSKeyName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EncryptionSpecInitParameters.
func (in *EncryptionSpecInitParameters) DeepCopy() *EncryptionSpecInitParameters {
	if in == nil {
		return nil
	}
	out := new(EncryptionSpecInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EncryptionSpecObservation) DeepCopyInto(out *EncryptionSpecObservation) {
	*out = *in
	if in.KMSKeyName != nil {
		in, out := &in.KMSKeyName, &out.KMSKeyName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EncryptionSpecObservation.
func (in *EncryptionSpecObservation) DeepCopy() *EncryptionSpecObservation {
	if in == nil {
		return nil
	}
	out := new(EncryptionSpecObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EncryptionSpecParameters) DeepCopyInto(out *EncryptionSpecParameters) {
	*out = *in
	if in.KMSKeyName != nil {
		in, out := &in.KMSKeyName, &out.KMSKeyName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EncryptionSpecParameters.
func (in *EncryptionSpecParameters) DeepCopy() *EncryptionSpecParameters {
	if in == nil {
		return nil
	}
	out := new(EncryptionSpecParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Featurestore) DeepCopyInto(out *Featurestore) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Featurestore.
func (in *Featurestore) DeepCopy() *Featurestore {
	if in == nil {
		return nil
	}
	out := new(Featurestore)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Featurestore) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FeaturestoreEncryptionSpecInitParameters) DeepCopyInto(out *FeaturestoreEncryptionSpecInitParameters) {
	*out = *in
	if in.KMSKeyName != nil {
		in, out := &in.KMSKeyName, &out.KMSKeyName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FeaturestoreEncryptionSpecInitParameters.
func (in *FeaturestoreEncryptionSpecInitParameters) DeepCopy() *FeaturestoreEncryptionSpecInitParameters {
	if in == nil {
		return nil
	}
	out := new(FeaturestoreEncryptionSpecInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FeaturestoreEncryptionSpecObservation) DeepCopyInto(out *FeaturestoreEncryptionSpecObservation) {
	*out = *in
	if in.KMSKeyName != nil {
		in, out := &in.KMSKeyName, &out.KMSKeyName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FeaturestoreEncryptionSpecObservation.
func (in *FeaturestoreEncryptionSpecObservation) DeepCopy() *FeaturestoreEncryptionSpecObservation {
	if in == nil {
		return nil
	}
	out := new(FeaturestoreEncryptionSpecObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FeaturestoreEncryptionSpecParameters) DeepCopyInto(out *FeaturestoreEncryptionSpecParameters) {
	*out = *in
	if in.KMSKeyName != nil {
		in, out := &in.KMSKeyName, &out.KMSKeyName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FeaturestoreEncryptionSpecParameters.
func (in *FeaturestoreEncryptionSpecParameters) DeepCopy() *FeaturestoreEncryptionSpecParameters {
	if in == nil {
		return nil
	}
	out := new(FeaturestoreEncryptionSpecParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FeaturestoreEntitytype) DeepCopyInto(out *FeaturestoreEntitytype) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FeaturestoreEntitytype.
func (in *FeaturestoreEntitytype) DeepCopy() *FeaturestoreEntitytype {
	if in == nil {
		return nil
	}
	out := new(FeaturestoreEntitytype)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *FeaturestoreEntitytype) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FeaturestoreEntitytypeInitParameters) DeepCopyInto(out *FeaturestoreEntitytypeInitParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Featurestore != nil {
		in, out := &in.Featurestore, &out.Featurestore
		*out = new(string)
		**out = **in
	}
	if in.FeaturestoreRef != nil {
		in, out := &in.FeaturestoreRef, &out.FeaturestoreRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.FeaturestoreSelector != nil {
		in, out := &in.FeaturestoreSelector, &out.FeaturestoreSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.MonitoringConfig != nil {
		in, out := &in.MonitoringConfig, &out.MonitoringConfig
		*out = new(MonitoringConfigInitParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FeaturestoreEntitytypeInitParameters.
func (in *FeaturestoreEntitytypeInitParameters) DeepCopy() *FeaturestoreEntitytypeInitParameters {
	if in == nil {
		return nil
	}
	out := new(FeaturestoreEntitytypeInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FeaturestoreEntitytypeList) DeepCopyInto(out *FeaturestoreEntitytypeList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]FeaturestoreEntitytype, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FeaturestoreEntitytypeList.
func (in *FeaturestoreEntitytypeList) DeepCopy() *FeaturestoreEntitytypeList {
	if in == nil {
		return nil
	}
	out := new(FeaturestoreEntitytypeList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *FeaturestoreEntitytypeList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FeaturestoreEntitytypeObservation) DeepCopyInto(out *FeaturestoreEntitytypeObservation) {
	*out = *in
	if in.CreateTime != nil {
		in, out := &in.CreateTime, &out.CreateTime
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.EffectiveLabels != nil {
		in, out := &in.EffectiveLabels, &out.EffectiveLabels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Etag != nil {
		in, out := &in.Etag, &out.Etag
		*out = new(string)
		**out = **in
	}
	if in.Featurestore != nil {
		in, out := &in.Featurestore, &out.Featurestore
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.MonitoringConfig != nil {
		in, out := &in.MonitoringConfig, &out.MonitoringConfig
		*out = new(MonitoringConfigObservation)
		(*in).DeepCopyInto(*out)
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.TerraformLabels != nil {
		in, out := &in.TerraformLabels, &out.TerraformLabels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.UpdateTime != nil {
		in, out := &in.UpdateTime, &out.UpdateTime
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FeaturestoreEntitytypeObservation.
func (in *FeaturestoreEntitytypeObservation) DeepCopy() *FeaturestoreEntitytypeObservation {
	if in == nil {
		return nil
	}
	out := new(FeaturestoreEntitytypeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FeaturestoreEntitytypeParameters) DeepCopyInto(out *FeaturestoreEntitytypeParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Featurestore != nil {
		in, out := &in.Featurestore, &out.Featurestore
		*out = new(string)
		**out = **in
	}
	if in.FeaturestoreRef != nil {
		in, out := &in.FeaturestoreRef, &out.FeaturestoreRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.FeaturestoreSelector != nil {
		in, out := &in.FeaturestoreSelector, &out.FeaturestoreSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.MonitoringConfig != nil {
		in, out := &in.MonitoringConfig, &out.MonitoringConfig
		*out = new(MonitoringConfigParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FeaturestoreEntitytypeParameters.
func (in *FeaturestoreEntitytypeParameters) DeepCopy() *FeaturestoreEntitytypeParameters {
	if in == nil {
		return nil
	}
	out := new(FeaturestoreEntitytypeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FeaturestoreEntitytypeSpec) DeepCopyInto(out *FeaturestoreEntitytypeSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FeaturestoreEntitytypeSpec.
func (in *FeaturestoreEntitytypeSpec) DeepCopy() *FeaturestoreEntitytypeSpec {
	if in == nil {
		return nil
	}
	out := new(FeaturestoreEntitytypeSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FeaturestoreEntitytypeStatus) DeepCopyInto(out *FeaturestoreEntitytypeStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FeaturestoreEntitytypeStatus.
func (in *FeaturestoreEntitytypeStatus) DeepCopy() *FeaturestoreEntitytypeStatus {
	if in == nil {
		return nil
	}
	out := new(FeaturestoreEntitytypeStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FeaturestoreInitParameters) DeepCopyInto(out *FeaturestoreInitParameters) {
	*out = *in
	if in.EncryptionSpec != nil {
		in, out := &in.EncryptionSpec, &out.EncryptionSpec
		*out = new(FeaturestoreEncryptionSpecInitParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.ForceDestroy != nil {
		in, out := &in.ForceDestroy, &out.ForceDestroy
		*out = new(bool)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.OnlineServingConfig != nil {
		in, out := &in.OnlineServingConfig, &out.OnlineServingConfig
		*out = new(OnlineServingConfigInitParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FeaturestoreInitParameters.
func (in *FeaturestoreInitParameters) DeepCopy() *FeaturestoreInitParameters {
	if in == nil {
		return nil
	}
	out := new(FeaturestoreInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FeaturestoreList) DeepCopyInto(out *FeaturestoreList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Featurestore, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FeaturestoreList.
func (in *FeaturestoreList) DeepCopy() *FeaturestoreList {
	if in == nil {
		return nil
	}
	out := new(FeaturestoreList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *FeaturestoreList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FeaturestoreObservation) DeepCopyInto(out *FeaturestoreObservation) {
	*out = *in
	if in.CreateTime != nil {
		in, out := &in.CreateTime, &out.CreateTime
		*out = new(string)
		**out = **in
	}
	if in.EffectiveLabels != nil {
		in, out := &in.EffectiveLabels, &out.EffectiveLabels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.EncryptionSpec != nil {
		in, out := &in.EncryptionSpec, &out.EncryptionSpec
		*out = new(FeaturestoreEncryptionSpecObservation)
		(*in).DeepCopyInto(*out)
	}
	if in.Etag != nil {
		in, out := &in.Etag, &out.Etag
		*out = new(string)
		**out = **in
	}
	if in.ForceDestroy != nil {
		in, out := &in.ForceDestroy, &out.ForceDestroy
		*out = new(bool)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.OnlineServingConfig != nil {
		in, out := &in.OnlineServingConfig, &out.OnlineServingConfig
		*out = new(OnlineServingConfigObservation)
		(*in).DeepCopyInto(*out)
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.TerraformLabels != nil {
		in, out := &in.TerraformLabels, &out.TerraformLabels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.UpdateTime != nil {
		in, out := &in.UpdateTime, &out.UpdateTime
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FeaturestoreObservation.
func (in *FeaturestoreObservation) DeepCopy() *FeaturestoreObservation {
	if in == nil {
		return nil
	}
	out := new(FeaturestoreObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FeaturestoreParameters) DeepCopyInto(out *FeaturestoreParameters) {
	*out = *in
	if in.EncryptionSpec != nil {
		in, out := &in.EncryptionSpec, &out.EncryptionSpec
		*out = new(FeaturestoreEncryptionSpecParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.ForceDestroy != nil {
		in, out := &in.ForceDestroy, &out.ForceDestroy
		*out = new(bool)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.OnlineServingConfig != nil {
		in, out := &in.OnlineServingConfig, &out.OnlineServingConfig
		*out = new(OnlineServingConfigParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FeaturestoreParameters.
func (in *FeaturestoreParameters) DeepCopy() *FeaturestoreParameters {
	if in == nil {
		return nil
	}
	out := new(FeaturestoreParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FeaturestoreSpec) DeepCopyInto(out *FeaturestoreSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FeaturestoreSpec.
func (in *FeaturestoreSpec) DeepCopy() *FeaturestoreSpec {
	if in == nil {
		return nil
	}
	out := new(FeaturestoreSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FeaturestoreStatus) DeepCopyInto(out *FeaturestoreStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FeaturestoreStatus.
func (in *FeaturestoreStatus) DeepCopy() *FeaturestoreStatus {
	if in == nil {
		return nil
	}
	out := new(FeaturestoreStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ImportFeaturesAnalysisInitParameters) DeepCopyInto(out *ImportFeaturesAnalysisInitParameters) {
	*out = *in
	if in.AnomalyDetectionBaseline != nil {
		in, out := &in.AnomalyDetectionBaseline, &out.AnomalyDetectionBaseline
		*out = new(string)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ImportFeaturesAnalysisInitParameters.
func (in *ImportFeaturesAnalysisInitParameters) DeepCopy() *ImportFeaturesAnalysisInitParameters {
	if in == nil {
		return nil
	}
	out := new(ImportFeaturesAnalysisInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ImportFeaturesAnalysisObservation) DeepCopyInto(out *ImportFeaturesAnalysisObservation) {
	*out = *in
	if in.AnomalyDetectionBaseline != nil {
		in, out := &in.AnomalyDetectionBaseline, &out.AnomalyDetectionBaseline
		*out = new(string)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ImportFeaturesAnalysisObservation.
func (in *ImportFeaturesAnalysisObservation) DeepCopy() *ImportFeaturesAnalysisObservation {
	if in == nil {
		return nil
	}
	out := new(ImportFeaturesAnalysisObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ImportFeaturesAnalysisParameters) DeepCopyInto(out *ImportFeaturesAnalysisParameters) {
	*out = *in
	if in.AnomalyDetectionBaseline != nil {
		in, out := &in.AnomalyDetectionBaseline, &out.AnomalyDetectionBaseline
		*out = new(string)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ImportFeaturesAnalysisParameters.
func (in *ImportFeaturesAnalysisParameters) DeepCopy() *ImportFeaturesAnalysisParameters {
	if in == nil {
		return nil
	}
	out := new(ImportFeaturesAnalysisParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonitoringConfigInitParameters) DeepCopyInto(out *MonitoringConfigInitParameters) {
	*out = *in
	if in.CategoricalThresholdConfig != nil {
		in, out := &in.CategoricalThresholdConfig, &out.CategoricalThresholdConfig
		*out = new(CategoricalThresholdConfigInitParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.ImportFeaturesAnalysis != nil {
		in, out := &in.ImportFeaturesAnalysis, &out.ImportFeaturesAnalysis
		*out = new(ImportFeaturesAnalysisInitParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.NumericalThresholdConfig != nil {
		in, out := &in.NumericalThresholdConfig, &out.NumericalThresholdConfig
		*out = new(NumericalThresholdConfigInitParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.SnapshotAnalysis != nil {
		in, out := &in.SnapshotAnalysis, &out.SnapshotAnalysis
		*out = new(SnapshotAnalysisInitParameters)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonitoringConfigInitParameters.
func (in *MonitoringConfigInitParameters) DeepCopy() *MonitoringConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(MonitoringConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonitoringConfigObservation) DeepCopyInto(out *MonitoringConfigObservation) {
	*out = *in
	if in.CategoricalThresholdConfig != nil {
		in, out := &in.CategoricalThresholdConfig, &out.CategoricalThresholdConfig
		*out = new(CategoricalThresholdConfigObservation)
		(*in).DeepCopyInto(*out)
	}
	if in.ImportFeaturesAnalysis != nil {
		in, out := &in.ImportFeaturesAnalysis, &out.ImportFeaturesAnalysis
		*out = new(ImportFeaturesAnalysisObservation)
		(*in).DeepCopyInto(*out)
	}
	if in.NumericalThresholdConfig != nil {
		in, out := &in.NumericalThresholdConfig, &out.NumericalThresholdConfig
		*out = new(NumericalThresholdConfigObservation)
		(*in).DeepCopyInto(*out)
	}
	if in.SnapshotAnalysis != nil {
		in, out := &in.SnapshotAnalysis, &out.SnapshotAnalysis
		*out = new(SnapshotAnalysisObservation)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonitoringConfigObservation.
func (in *MonitoringConfigObservation) DeepCopy() *MonitoringConfigObservation {
	if in == nil {
		return nil
	}
	out := new(MonitoringConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonitoringConfigParameters) DeepCopyInto(out *MonitoringConfigParameters) {
	*out = *in
	if in.CategoricalThresholdConfig != nil {
		in, out := &in.CategoricalThresholdConfig, &out.CategoricalThresholdConfig
		*out = new(CategoricalThresholdConfigParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.ImportFeaturesAnalysis != nil {
		in, out := &in.ImportFeaturesAnalysis, &out.ImportFeaturesAnalysis
		*out = new(ImportFeaturesAnalysisParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.NumericalThresholdConfig != nil {
		in, out := &in.NumericalThresholdConfig, &out.NumericalThresholdConfig
		*out = new(NumericalThresholdConfigParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.SnapshotAnalysis != nil {
		in, out := &in.SnapshotAnalysis, &out.SnapshotAnalysis
		*out = new(SnapshotAnalysisParameters)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonitoringConfigParameters.
func (in *MonitoringConfigParameters) DeepCopy() *MonitoringConfigParameters {
	if in == nil {
		return nil
	}
	out := new(MonitoringConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NumericalThresholdConfigInitParameters) DeepCopyInto(out *NumericalThresholdConfigInitParameters) {
	*out = *in
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NumericalThresholdConfigInitParameters.
func (in *NumericalThresholdConfigInitParameters) DeepCopy() *NumericalThresholdConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(NumericalThresholdConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NumericalThresholdConfigObservation) DeepCopyInto(out *NumericalThresholdConfigObservation) {
	*out = *in
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NumericalThresholdConfigObservation.
func (in *NumericalThresholdConfigObservation) DeepCopy() *NumericalThresholdConfigObservation {
	if in == nil {
		return nil
	}
	out := new(NumericalThresholdConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NumericalThresholdConfigParameters) DeepCopyInto(out *NumericalThresholdConfigParameters) {
	*out = *in
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NumericalThresholdConfigParameters.
func (in *NumericalThresholdConfigParameters) DeepCopy() *NumericalThresholdConfigParameters {
	if in == nil {
		return nil
	}
	out := new(NumericalThresholdConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OnlineServingConfigInitParameters) DeepCopyInto(out *OnlineServingConfigInitParameters) {
	*out = *in
	if in.FixedNodeCount != nil {
		in, out := &in.FixedNodeCount, &out.FixedNodeCount
		*out = new(float64)
		**out = **in
	}
	if in.Scaling != nil {
		in, out := &in.Scaling, &out.Scaling
		*out = new(ScalingInitParameters)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OnlineServingConfigInitParameters.
func (in *OnlineServingConfigInitParameters) DeepCopy() *OnlineServingConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(OnlineServingConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OnlineServingConfigObservation) DeepCopyInto(out *OnlineServingConfigObservation) {
	*out = *in
	if in.FixedNodeCount != nil {
		in, out := &in.FixedNodeCount, &out.FixedNodeCount
		*out = new(float64)
		**out = **in
	}
	if in.Scaling != nil {
		in, out := &in.Scaling, &out.Scaling
		*out = new(ScalingObservation)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OnlineServingConfigObservation.
func (in *OnlineServingConfigObservation) DeepCopy() *OnlineServingConfigObservation {
	if in == nil {
		return nil
	}
	out := new(OnlineServingConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OnlineServingConfigParameters) DeepCopyInto(out *OnlineServingConfigParameters) {
	*out = *in
	if in.FixedNodeCount != nil {
		in, out := &in.FixedNodeCount, &out.FixedNodeCount
		*out = new(float64)
		**out = **in
	}
	if in.Scaling != nil {
		in, out := &in.Scaling, &out.Scaling
		*out = new(ScalingParameters)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OnlineServingConfigParameters.
func (in *OnlineServingConfigParameters) DeepCopy() *OnlineServingConfigParameters {
	if in == nil {
		return nil
	}
	out := new(OnlineServingConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScalingInitParameters) DeepCopyInto(out *ScalingInitParameters) {
	*out = *in
	if in.MaxNodeCount != nil {
		in, out := &in.MaxNodeCount, &out.MaxNodeCount
		*out = new(float64)
		**out = **in
	}
	if in.MinNodeCount != nil {
		in, out := &in.MinNodeCount, &out.MinNodeCount
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScalingInitParameters.
func (in *ScalingInitParameters) DeepCopy() *ScalingInitParameters {
	if in == nil {
		return nil
	}
	out := new(ScalingInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScalingObservation) DeepCopyInto(out *ScalingObservation) {
	*out = *in
	if in.MaxNodeCount != nil {
		in, out := &in.MaxNodeCount, &out.MaxNodeCount
		*out = new(float64)
		**out = **in
	}
	if in.MinNodeCount != nil {
		in, out := &in.MinNodeCount, &out.MinNodeCount
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScalingObservation.
func (in *ScalingObservation) DeepCopy() *ScalingObservation {
	if in == nil {
		return nil
	}
	out := new(ScalingObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScalingParameters) DeepCopyInto(out *ScalingParameters) {
	*out = *in
	if in.MaxNodeCount != nil {
		in, out := &in.MaxNodeCount, &out.MaxNodeCount
		*out = new(float64)
		**out = **in
	}
	if in.MinNodeCount != nil {
		in, out := &in.MinNodeCount, &out.MinNodeCount
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScalingParameters.
func (in *ScalingParameters) DeepCopy() *ScalingParameters {
	if in == nil {
		return nil
	}
	out := new(ScalingParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SnapshotAnalysisInitParameters) DeepCopyInto(out *SnapshotAnalysisInitParameters) {
	*out = *in
	if in.Disabled != nil {
		in, out := &in.Disabled, &out.Disabled
		*out = new(bool)
		**out = **in
	}
	if in.MonitoringIntervalDays != nil {
		in, out := &in.MonitoringIntervalDays, &out.MonitoringIntervalDays
		*out = new(float64)
		**out = **in
	}
	if in.StalenessDays != nil {
		in, out := &in.StalenessDays, &out.StalenessDays
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SnapshotAnalysisInitParameters.
func (in *SnapshotAnalysisInitParameters) DeepCopy() *SnapshotAnalysisInitParameters {
	if in == nil {
		return nil
	}
	out := new(SnapshotAnalysisInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SnapshotAnalysisObservation) DeepCopyInto(out *SnapshotAnalysisObservation) {
	*out = *in
	if in.Disabled != nil {
		in, out := &in.Disabled, &out.Disabled
		*out = new(bool)
		**out = **in
	}
	if in.MonitoringIntervalDays != nil {
		in, out := &in.MonitoringIntervalDays, &out.MonitoringIntervalDays
		*out = new(float64)
		**out = **in
	}
	if in.StalenessDays != nil {
		in, out := &in.StalenessDays, &out.StalenessDays
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SnapshotAnalysisObservation.
func (in *SnapshotAnalysisObservation) DeepCopy() *SnapshotAnalysisObservation {
	if in == nil {
		return nil
	}
	out := new(SnapshotAnalysisObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SnapshotAnalysisParameters) DeepCopyInto(out *SnapshotAnalysisParameters) {
	*out = *in
	if in.Disabled != nil {
		in, out := &in.Disabled, &out.Disabled
		*out = new(bool)
		**out = **in
	}
	if in.MonitoringIntervalDays != nil {
		in, out := &in.MonitoringIntervalDays, &out.MonitoringIntervalDays
		*out = new(float64)
		**out = **in
	}
	if in.StalenessDays != nil {
		in, out := &in.StalenessDays, &out.StalenessDays
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SnapshotAnalysisParameters.
func (in *SnapshotAnalysisParameters) DeepCopy() *SnapshotAnalysisParameters {
	if in == nil {
		return nil
	}
	out := new(SnapshotAnalysisParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Tensorboard) DeepCopyInto(out *Tensorboard) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Tensorboard.
func (in *Tensorboard) DeepCopy() *Tensorboard {
	if in == nil {
		return nil
	}
	out := new(Tensorboard)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Tensorboard) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TensorboardEncryptionSpecInitParameters) DeepCopyInto(out *TensorboardEncryptionSpecInitParameters) {
	*out = *in
	if in.KMSKeyName != nil {
		in, out := &in.KMSKeyName, &out.KMSKeyName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TensorboardEncryptionSpecInitParameters.
func (in *TensorboardEncryptionSpecInitParameters) DeepCopy() *TensorboardEncryptionSpecInitParameters {
	if in == nil {
		return nil
	}
	out := new(TensorboardEncryptionSpecInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TensorboardEncryptionSpecObservation) DeepCopyInto(out *TensorboardEncryptionSpecObservation) {
	*out = *in
	if in.KMSKeyName != nil {
		in, out := &in.KMSKeyName, &out.KMSKeyName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TensorboardEncryptionSpecObservation.
func (in *TensorboardEncryptionSpecObservation) DeepCopy() *TensorboardEncryptionSpecObservation {
	if in == nil {
		return nil
	}
	out := new(TensorboardEncryptionSpecObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TensorboardEncryptionSpecParameters) DeepCopyInto(out *TensorboardEncryptionSpecParameters) {
	*out = *in
	if in.KMSKeyName != nil {
		in, out := &in.KMSKeyName, &out.KMSKeyName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TensorboardEncryptionSpecParameters.
func (in *TensorboardEncryptionSpecParameters) DeepCopy() *TensorboardEncryptionSpecParameters {
	if in == nil {
		return nil
	}
	out := new(TensorboardEncryptionSpecParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TensorboardInitParameters) DeepCopyInto(out *TensorboardInitParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.EncryptionSpec != nil {
		in, out := &in.EncryptionSpec, &out.EncryptionSpec
		*out = new(TensorboardEncryptionSpecInitParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TensorboardInitParameters.
func (in *TensorboardInitParameters) DeepCopy() *TensorboardInitParameters {
	if in == nil {
		return nil
	}
	out := new(TensorboardInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TensorboardList) DeepCopyInto(out *TensorboardList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Tensorboard, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TensorboardList.
func (in *TensorboardList) DeepCopy() *TensorboardList {
	if in == nil {
		return nil
	}
	out := new(TensorboardList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *TensorboardList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TensorboardObservation) DeepCopyInto(out *TensorboardObservation) {
	*out = *in
	if in.BlobStoragePathPrefix != nil {
		in, out := &in.BlobStoragePathPrefix, &out.BlobStoragePathPrefix
		*out = new(string)
		**out = **in
	}
	if in.CreateTime != nil {
		in, out := &in.CreateTime, &out.CreateTime
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.EffectiveLabels != nil {
		in, out := &in.EffectiveLabels, &out.EffectiveLabels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.EncryptionSpec != nil {
		in, out := &in.EncryptionSpec, &out.EncryptionSpec
		*out = new(TensorboardEncryptionSpecObservation)
		(*in).DeepCopyInto(*out)
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.RunCount != nil {
		in, out := &in.RunCount, &out.RunCount
		*out = new(string)
		**out = **in
	}
	if in.TerraformLabels != nil {
		in, out := &in.TerraformLabels, &out.TerraformLabels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.UpdateTime != nil {
		in, out := &in.UpdateTime, &out.UpdateTime
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TensorboardObservation.
func (in *TensorboardObservation) DeepCopy() *TensorboardObservation {
	if in == nil {
		return nil
	}
	out := new(TensorboardObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TensorboardParameters) DeepCopyInto(out *TensorboardParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.EncryptionSpec != nil {
		in, out := &in.EncryptionSpec, &out.EncryptionSpec
		*out = new(TensorboardEncryptionSpecParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TensorboardParameters.
func (in *TensorboardParameters) DeepCopy() *TensorboardParameters {
	if in == nil {
		return nil
	}
	out := new(TensorboardParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TensorboardSpec) DeepCopyInto(out *TensorboardSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TensorboardSpec.
func (in *TensorboardSpec) DeepCopy() *TensorboardSpec {
	if in == nil {
		return nil
	}
	out := new(TensorboardSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TensorboardStatus) DeepCopyInto(out *TensorboardStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TensorboardStatus.
func (in *TensorboardStatus) DeepCopy() *TensorboardStatus {
	if in == nil {
		return nil
	}
	out := new(TensorboardStatus)
	in.DeepCopyInto(out)
	return out
}
