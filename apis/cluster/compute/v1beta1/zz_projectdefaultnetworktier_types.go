// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1beta1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type ProjectDefaultNetworkTierInitParameters struct {

	// The default network tier to be configured for the project.
	// This field can take the following values: PREMIUM or STANDARD.
	NetworkTier *string `json:"networkTier,omitempty" tf:"network_tier,omitempty"`

	// The ID of the project in which the resource belongs. If it
	// is not provided, the provider project is used.
	Project *string `json:"project,omitempty" tf:"project,omitempty"`
}

type ProjectDefaultNetworkTierObservation struct {

	// an identifier for the resource with format {{project}}
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// The default network tier to be configured for the project.
	// This field can take the following values: PREMIUM or STANDARD.
	NetworkTier *string `json:"networkTier,omitempty" tf:"network_tier,omitempty"`

	// The ID of the project in which the resource belongs. If it
	// is not provided, the provider project is used.
	Project *string `json:"project,omitempty" tf:"project,omitempty"`
}

type ProjectDefaultNetworkTierParameters struct {

	// The default network tier to be configured for the project.
	// This field can take the following values: PREMIUM or STANDARD.
	// +kubebuilder:validation:Optional
	NetworkTier *string `json:"networkTier,omitempty" tf:"network_tier,omitempty"`

	// The ID of the project in which the resource belongs. If it
	// is not provided, the provider project is used.
	// +kubebuilder:validation:Optional
	Project *string `json:"project,omitempty" tf:"project,omitempty"`
}

// ProjectDefaultNetworkTierSpec defines the desired state of ProjectDefaultNetworkTier
type ProjectDefaultNetworkTierSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     ProjectDefaultNetworkTierParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider ProjectDefaultNetworkTierInitParameters `json:"initProvider,omitempty"`
}

// ProjectDefaultNetworkTierStatus defines the observed state of ProjectDefaultNetworkTier.
type ProjectDefaultNetworkTierStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        ProjectDefaultNetworkTierObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// ProjectDefaultNetworkTier is the Schema for the ProjectDefaultNetworkTiers API. Configures the default network tier for a project.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,gcp}
type ProjectDefaultNetworkTier struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.networkTier) || (has(self.initProvider) && has(self.initProvider.networkTier))",message="spec.forProvider.networkTier is a required parameter"
	Spec   ProjectDefaultNetworkTierSpec   `json:"spec"`
	Status ProjectDefaultNetworkTierStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// ProjectDefaultNetworkTierList contains a list of ProjectDefaultNetworkTiers
type ProjectDefaultNetworkTierList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []ProjectDefaultNetworkTier `json:"items"`
}

// Repository type metadata.
var (
	ProjectDefaultNetworkTier_Kind             = "ProjectDefaultNetworkTier"
	ProjectDefaultNetworkTier_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: ProjectDefaultNetworkTier_Kind}.String()
	ProjectDefaultNetworkTier_KindAPIVersion   = ProjectDefaultNetworkTier_Kind + "." + CRDGroupVersion.String()
	ProjectDefaultNetworkTier_GroupVersionKind = CRDGroupVersion.WithKind(ProjectDefaultNetworkTier_Kind)
)

func init() {
	SchemeBuilder.Register(&ProjectDefaultNetworkTier{}, &ProjectDefaultNetworkTierList{})
}
