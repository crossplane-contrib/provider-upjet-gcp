// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1beta1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type InstanceGroupNamedPortInitParameters struct {

	// The name of the instance group.
	Group *string `json:"group,omitempty" tf:"group,omitempty"`

	// The name for this named port. The name must be 1-63 characters
	// long, and comply with RFC1035.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// The port number, which can be a value between 1 and 65535.
	Port *float64 `json:"port,omitempty" tf:"port,omitempty"`

	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project *string `json:"project,omitempty" tf:"project,omitempty"`

	// The zone of the instance group.
	Zone *string `json:"zone,omitempty" tf:"zone,omitempty"`
}

type InstanceGroupNamedPortObservation struct {

	// The name of the instance group.
	Group *string `json:"group,omitempty" tf:"group,omitempty"`

	// an identifier for the resource with format projects/{{project}}/zones/{{zone}}/instanceGroups/{{group}}/{{port}}/{{name}}
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// The name for this named port. The name must be 1-63 characters
	// long, and comply with RFC1035.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// The port number, which can be a value between 1 and 65535.
	Port *float64 `json:"port,omitempty" tf:"port,omitempty"`

	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project *string `json:"project,omitempty" tf:"project,omitempty"`

	// The zone of the instance group.
	Zone *string `json:"zone,omitempty" tf:"zone,omitempty"`
}

type InstanceGroupNamedPortParameters struct {

	// The name of the instance group.
	// +kubebuilder:validation:Optional
	Group *string `json:"group,omitempty" tf:"group,omitempty"`

	// The name for this named port. The name must be 1-63 characters
	// long, and comply with RFC1035.
	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// The port number, which can be a value between 1 and 65535.
	// +kubebuilder:validation:Optional
	Port *float64 `json:"port,omitempty" tf:"port,omitempty"`

	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	// +kubebuilder:validation:Optional
	Project *string `json:"project,omitempty" tf:"project,omitempty"`

	// The zone of the instance group.
	// +kubebuilder:validation:Optional
	Zone *string `json:"zone,omitempty" tf:"zone,omitempty"`
}

// InstanceGroupNamedPortSpec defines the desired state of InstanceGroupNamedPort
type InstanceGroupNamedPortSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     InstanceGroupNamedPortParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider InstanceGroupNamedPortInitParameters `json:"initProvider,omitempty"`
}

// InstanceGroupNamedPortStatus defines the observed state of InstanceGroupNamedPort.
type InstanceGroupNamedPortStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        InstanceGroupNamedPortObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// InstanceGroupNamedPort is the Schema for the InstanceGroupNamedPorts API. Mange the named ports setting for a managed instance group without managing the group as whole.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,gcp}
type InstanceGroupNamedPort struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.group) || (has(self.initProvider) && has(self.initProvider.group))",message="spec.forProvider.group is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.name) || (has(self.initProvider) && has(self.initProvider.name))",message="spec.forProvider.name is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.port) || (has(self.initProvider) && has(self.initProvider.port))",message="spec.forProvider.port is a required parameter"
	Spec   InstanceGroupNamedPortSpec   `json:"spec"`
	Status InstanceGroupNamedPortStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// InstanceGroupNamedPortList contains a list of InstanceGroupNamedPorts
type InstanceGroupNamedPortList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []InstanceGroupNamedPort `json:"items"`
}

// Repository type metadata.
var (
	InstanceGroupNamedPort_Kind             = "InstanceGroupNamedPort"
	InstanceGroupNamedPort_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: InstanceGroupNamedPort_Kind}.String()
	InstanceGroupNamedPort_KindAPIVersion   = InstanceGroupNamedPort_Kind + "." + CRDGroupVersion.String()
	InstanceGroupNamedPort_GroupVersionKind = CRDGroupVersion.WithKind(InstanceGroupNamedPort_Kind)
)

func init() {
	SchemeBuilder.Register(&InstanceGroupNamedPort{}, &InstanceGroupNamedPortList{})
}
