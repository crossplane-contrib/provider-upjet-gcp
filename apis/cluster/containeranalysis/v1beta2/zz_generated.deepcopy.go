//go:build !ignore_autogenerated

// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by controller-gen. DO NOT EDIT.

package v1beta2

import (
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AttestationAuthorityInitParameters) DeepCopyInto(out *AttestationAuthorityInitParameters) {
	*out = *in
	if in.Hint != nil {
		in, out := &in.Hint, &out.Hint
		*out = new(HintInitParameters)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AttestationAuthorityInitParameters.
func (in *AttestationAuthorityInitParameters) DeepCopy() *AttestationAuthorityInitParameters {
	if in == nil {
		return nil
	}
	out := new(AttestationAuthorityInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AttestationAuthorityObservation) DeepCopyInto(out *AttestationAuthorityObservation) {
	*out = *in
	if in.Hint != nil {
		in, out := &in.Hint, &out.Hint
		*out = new(HintObservation)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AttestationAuthorityObservation.
func (in *AttestationAuthorityObservation) DeepCopy() *AttestationAuthorityObservation {
	if in == nil {
		return nil
	}
	out := new(AttestationAuthorityObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AttestationAuthorityParameters) DeepCopyInto(out *AttestationAuthorityParameters) {
	*out = *in
	if in.Hint != nil {
		in, out := &in.Hint, &out.Hint
		*out = new(HintParameters)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AttestationAuthorityParameters.
func (in *AttestationAuthorityParameters) DeepCopy() *AttestationAuthorityParameters {
	if in == nil {
		return nil
	}
	out := new(AttestationAuthorityParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HintInitParameters) DeepCopyInto(out *HintInitParameters) {
	*out = *in
	if in.HumanReadableName != nil {
		in, out := &in.HumanReadableName, &out.HumanReadableName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HintInitParameters.
func (in *HintInitParameters) DeepCopy() *HintInitParameters {
	if in == nil {
		return nil
	}
	out := new(HintInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HintObservation) DeepCopyInto(out *HintObservation) {
	*out = *in
	if in.HumanReadableName != nil {
		in, out := &in.HumanReadableName, &out.HumanReadableName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HintObservation.
func (in *HintObservation) DeepCopy() *HintObservation {
	if in == nil {
		return nil
	}
	out := new(HintObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HintParameters) DeepCopyInto(out *HintParameters) {
	*out = *in
	if in.HumanReadableName != nil {
		in, out := &in.HumanReadableName, &out.HumanReadableName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HintParameters.
func (in *HintParameters) DeepCopy() *HintParameters {
	if in == nil {
		return nil
	}
	out := new(HintParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Note) DeepCopyInto(out *Note) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Note.
func (in *Note) DeepCopy() *Note {
	if in == nil {
		return nil
	}
	out := new(Note)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Note) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NoteInitParameters) DeepCopyInto(out *NoteInitParameters) {
	*out = *in
	if in.AttestationAuthority != nil {
		in, out := &in.AttestationAuthority, &out.AttestationAuthority
		*out = new(AttestationAuthorityInitParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.ExpirationTime != nil {
		in, out := &in.ExpirationTime, &out.ExpirationTime
		*out = new(string)
		**out = **in
	}
	if in.LongDescription != nil {
		in, out := &in.LongDescription, &out.LongDescription
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.RelatedNoteNames != nil {
		in, out := &in.RelatedNoteNames, &out.RelatedNoteNames
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.RelatedURL != nil {
		in, out := &in.RelatedURL, &out.RelatedURL
		*out = make([]RelatedURLInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ShortDescription != nil {
		in, out := &in.ShortDescription, &out.ShortDescription
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NoteInitParameters.
func (in *NoteInitParameters) DeepCopy() *NoteInitParameters {
	if in == nil {
		return nil
	}
	out := new(NoteInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NoteList) DeepCopyInto(out *NoteList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Note, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NoteList.
func (in *NoteList) DeepCopy() *NoteList {
	if in == nil {
		return nil
	}
	out := new(NoteList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *NoteList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NoteObservation) DeepCopyInto(out *NoteObservation) {
	*out = *in
	if in.AttestationAuthority != nil {
		in, out := &in.AttestationAuthority, &out.AttestationAuthority
		*out = new(AttestationAuthorityObservation)
		(*in).DeepCopyInto(*out)
	}
	if in.CreateTime != nil {
		in, out := &in.CreateTime, &out.CreateTime
		*out = new(string)
		**out = **in
	}
	if in.ExpirationTime != nil {
		in, out := &in.ExpirationTime, &out.ExpirationTime
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Kind != nil {
		in, out := &in.Kind, &out.Kind
		*out = new(string)
		**out = **in
	}
	if in.LongDescription != nil {
		in, out := &in.LongDescription, &out.LongDescription
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.RelatedNoteNames != nil {
		in, out := &in.RelatedNoteNames, &out.RelatedNoteNames
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.RelatedURL != nil {
		in, out := &in.RelatedURL, &out.RelatedURL
		*out = make([]RelatedURLObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ShortDescription != nil {
		in, out := &in.ShortDescription, &out.ShortDescription
		*out = new(string)
		**out = **in
	}
	if in.UpdateTime != nil {
		in, out := &in.UpdateTime, &out.UpdateTime
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NoteObservation.
func (in *NoteObservation) DeepCopy() *NoteObservation {
	if in == nil {
		return nil
	}
	out := new(NoteObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NoteParameters) DeepCopyInto(out *NoteParameters) {
	*out = *in
	if in.AttestationAuthority != nil {
		in, out := &in.AttestationAuthority, &out.AttestationAuthority
		*out = new(AttestationAuthorityParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.ExpirationTime != nil {
		in, out := &in.ExpirationTime, &out.ExpirationTime
		*out = new(string)
		**out = **in
	}
	if in.LongDescription != nil {
		in, out := &in.LongDescription, &out.LongDescription
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.RelatedNoteNames != nil {
		in, out := &in.RelatedNoteNames, &out.RelatedNoteNames
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.RelatedURL != nil {
		in, out := &in.RelatedURL, &out.RelatedURL
		*out = make([]RelatedURLParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ShortDescription != nil {
		in, out := &in.ShortDescription, &out.ShortDescription
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NoteParameters.
func (in *NoteParameters) DeepCopy() *NoteParameters {
	if in == nil {
		return nil
	}
	out := new(NoteParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NoteSpec) DeepCopyInto(out *NoteSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NoteSpec.
func (in *NoteSpec) DeepCopy() *NoteSpec {
	if in == nil {
		return nil
	}
	out := new(NoteSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NoteStatus) DeepCopyInto(out *NoteStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NoteStatus.
func (in *NoteStatus) DeepCopy() *NoteStatus {
	if in == nil {
		return nil
	}
	out := new(NoteStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RelatedURLInitParameters) DeepCopyInto(out *RelatedURLInitParameters) {
	*out = *in
	if in.Label != nil {
		in, out := &in.Label, &out.Label
		*out = new(string)
		**out = **in
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RelatedURLInitParameters.
func (in *RelatedURLInitParameters) DeepCopy() *RelatedURLInitParameters {
	if in == nil {
		return nil
	}
	out := new(RelatedURLInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RelatedURLObservation) DeepCopyInto(out *RelatedURLObservation) {
	*out = *in
	if in.Label != nil {
		in, out := &in.Label, &out.Label
		*out = new(string)
		**out = **in
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RelatedURLObservation.
func (in *RelatedURLObservation) DeepCopy() *RelatedURLObservation {
	if in == nil {
		return nil
	}
	out := new(RelatedURLObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RelatedURLParameters) DeepCopyInto(out *RelatedURLParameters) {
	*out = *in
	if in.Label != nil {
		in, out := &in.Label, &out.Label
		*out = new(string)
		**out = **in
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RelatedURLParameters.
func (in *RelatedURLParameters) DeepCopy() *RelatedURLParameters {
	if in == nil {
		return nil
	}
	out := new(RelatedURLParameters)
	in.DeepCopyInto(out)
	return out
}
