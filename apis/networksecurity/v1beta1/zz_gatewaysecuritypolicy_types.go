// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1beta1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type GatewaySecurityPolicyInitParameters struct {

	// A free-text description of the resource. Max length 1024 characters.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project *string `json:"project,omitempty" tf:"project,omitempty"`

	// Name of a TlsInspectionPolicy resource that defines how TLS inspection is performed for any rule that enables it.
	// +crossplane:generate:reference:type=github.com/upbound/provider-gcp/apis/networksecurity/v1beta1.TLSInspectionPolicy
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractResourceID()
	TLSInspectionPolicy *string `json:"tlsInspectionPolicy,omitempty" tf:"tls_inspection_policy,omitempty"`

	// Reference to a TLSInspectionPolicy in networksecurity to populate tlsInspectionPolicy.
	// +kubebuilder:validation:Optional
	TLSInspectionPolicyRef *v1.Reference `json:"tlsInspectionPolicyRef,omitempty" tf:"-"`

	// Selector for a TLSInspectionPolicy in networksecurity to populate tlsInspectionPolicy.
	// +kubebuilder:validation:Optional
	TLSInspectionPolicySelector *v1.Selector `json:"tlsInspectionPolicySelector,omitempty" tf:"-"`
}

type GatewaySecurityPolicyObservation struct {

	// The timestamp when the resource was created.
	// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine fractional digits.
	// Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z"
	CreateTime *string `json:"createTime,omitempty" tf:"create_time,omitempty"`

	// A free-text description of the resource. Max length 1024 characters.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// an identifier for the resource with format projects/{{project}}/locations/{{location}}/gatewaySecurityPolicies/{{name}}
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// The location of the gateway security policy.
	// The default value is global.
	Location *string `json:"location,omitempty" tf:"location,omitempty"`

	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project *string `json:"project,omitempty" tf:"project,omitempty"`

	// Server-defined URL of this resource.
	SelfLink *string `json:"selfLink,omitempty" tf:"self_link,omitempty"`

	// Name of a TlsInspectionPolicy resource that defines how TLS inspection is performed for any rule that enables it.
	TLSInspectionPolicy *string `json:"tlsInspectionPolicy,omitempty" tf:"tls_inspection_policy,omitempty"`

	// The timestamp when the resource was updated.
	// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine fractional digits.
	// Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".
	UpdateTime *string `json:"updateTime,omitempty" tf:"update_time,omitempty"`
}

type GatewaySecurityPolicyParameters struct {

	// A free-text description of the resource. Max length 1024 characters.
	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// The location of the gateway security policy.
	// The default value is global.
	// +kubebuilder:validation:Optional
	Location *string `json:"location,omitempty" tf:"location,omitempty"`

	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	// +kubebuilder:validation:Optional
	Project *string `json:"project,omitempty" tf:"project,omitempty"`

	// Name of a TlsInspectionPolicy resource that defines how TLS inspection is performed for any rule that enables it.
	// +crossplane:generate:reference:type=github.com/upbound/provider-gcp/apis/networksecurity/v1beta1.TLSInspectionPolicy
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	TLSInspectionPolicy *string `json:"tlsInspectionPolicy,omitempty" tf:"tls_inspection_policy,omitempty"`

	// Reference to a TLSInspectionPolicy in networksecurity to populate tlsInspectionPolicy.
	// +kubebuilder:validation:Optional
	TLSInspectionPolicyRef *v1.Reference `json:"tlsInspectionPolicyRef,omitempty" tf:"-"`

	// Selector for a TLSInspectionPolicy in networksecurity to populate tlsInspectionPolicy.
	// +kubebuilder:validation:Optional
	TLSInspectionPolicySelector *v1.Selector `json:"tlsInspectionPolicySelector,omitempty" tf:"-"`
}

// GatewaySecurityPolicySpec defines the desired state of GatewaySecurityPolicy
type GatewaySecurityPolicySpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     GatewaySecurityPolicyParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider GatewaySecurityPolicyInitParameters `json:"initProvider,omitempty"`
}

// GatewaySecurityPolicyStatus defines the observed state of GatewaySecurityPolicy.
type GatewaySecurityPolicyStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        GatewaySecurityPolicyObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// GatewaySecurityPolicy is the Schema for the GatewaySecurityPolicys API. The GatewaySecurityPolicy resource contains a collection of GatewaySecurityPolicyRules and associated metadata.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,gcp}
type GatewaySecurityPolicy struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              GatewaySecurityPolicySpec   `json:"spec"`
	Status            GatewaySecurityPolicyStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// GatewaySecurityPolicyList contains a list of GatewaySecurityPolicys
type GatewaySecurityPolicyList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []GatewaySecurityPolicy `json:"items"`
}

// Repository type metadata.
var (
	GatewaySecurityPolicy_Kind             = "GatewaySecurityPolicy"
	GatewaySecurityPolicy_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: GatewaySecurityPolicy_Kind}.String()
	GatewaySecurityPolicy_KindAPIVersion   = GatewaySecurityPolicy_Kind + "." + CRDGroupVersion.String()
	GatewaySecurityPolicy_GroupVersionKind = CRDGroupVersion.WithKind(GatewaySecurityPolicy_Kind)
)

func init() {
	SchemeBuilder.Register(&GatewaySecurityPolicy{}, &GatewaySecurityPolicyList{})
}
