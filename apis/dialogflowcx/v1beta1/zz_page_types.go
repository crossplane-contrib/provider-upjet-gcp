// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1beta1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type EntryFulfillmentConditionalCasesInitParameters struct {

	// A JSON encoded list of cascading if-else conditions. Cases are mutually exclusive. The first one with a matching condition is selected, all the rest ignored.
	// See Case for the schema.
	Cases *string `json:"cases,omitempty" tf:"cases,omitempty"`
}

type EntryFulfillmentConditionalCasesObservation struct {

	// A JSON encoded list of cascading if-else conditions. Cases are mutually exclusive. The first one with a matching condition is selected, all the rest ignored.
	// See Case for the schema.
	Cases *string `json:"cases,omitempty" tf:"cases,omitempty"`
}

type EntryFulfillmentConditionalCasesParameters struct {

	// A JSON encoded list of cascading if-else conditions. Cases are mutually exclusive. The first one with a matching condition is selected, all the rest ignored.
	// See Case for the schema.
	// +kubebuilder:validation:Optional
	Cases *string `json:"cases,omitempty" tf:"cases,omitempty"`
}

type EntryFulfillmentInitParameters struct {

	// Conditional cases for this fulfillment.
	// Structure is documented below.
	ConditionalCases []EntryFulfillmentConditionalCasesInitParameters `json:"conditionalCases,omitempty" tf:"conditional_cases,omitempty"`

	// The list of rich message responses to present to the user.
	// Structure is documented below.
	Messages []EntryFulfillmentMessagesInitParameters `json:"messages,omitempty" tf:"messages,omitempty"`

	// Whether Dialogflow should return currently queued fulfillment response messages in streaming APIs. If a webhook is specified, it happens before Dialogflow invokes webhook. Warning: 1) This flag only affects streaming API. Responses are still queued and returned once in non-streaming API. 2) The flag can be enabled in any fulfillment but only the first 3 partial responses will be returned. You may only want to apply it to fulfillments that have slow webhooks.
	ReturnPartialResponses *bool `json:"returnPartialResponses,omitempty" tf:"return_partial_responses,omitempty"`

	// Set parameter values before executing the webhook.
	// Structure is documented below.
	SetParameterActions []EntryFulfillmentSetParameterActionsInitParameters `json:"setParameterActions,omitempty" tf:"set_parameter_actions,omitempty"`

	// The tag used by the webhook to identify which fulfillment is being called. This field is required if webhook is specified.
	Tag *string `json:"tag,omitempty" tf:"tag,omitempty"`

	// The webhook to call. Format: projects//locations//agents//webhooks/.
	Webhook *string `json:"webhook,omitempty" tf:"webhook,omitempty"`
}

type EntryFulfillmentMessagesConversationSuccessInitParameters struct {

	// Custom metadata. Dialogflow doesn't impose any structure on this.
	Metadata *string `json:"metadata,omitempty" tf:"metadata,omitempty"`
}

type EntryFulfillmentMessagesConversationSuccessObservation struct {

	// Custom metadata. Dialogflow doesn't impose any structure on this.
	Metadata *string `json:"metadata,omitempty" tf:"metadata,omitempty"`
}

type EntryFulfillmentMessagesConversationSuccessParameters struct {

	// Custom metadata. Dialogflow doesn't impose any structure on this.
	// +kubebuilder:validation:Optional
	Metadata *string `json:"metadata,omitempty" tf:"metadata,omitempty"`
}

type EntryFulfillmentMessagesInitParameters struct {

	// The channel which the response is associated with. Clients can specify the channel via QueryParameters.channel, and only associated channel response will be returned.
	Channel *string `json:"channel,omitempty" tf:"channel,omitempty"`

	// Indicates that the conversation succeeded, i.e., the bot handled the issue that the customer talked to it about.
	// Dialogflow only uses this to determine which conversations should be counted as successful and doesn't process the metadata in this message in any way. Note that Dialogflow also considers conversations that get to the conversation end page as successful even if they don't return ConversationSuccess.
	// You may set this, for example:
	ConversationSuccess []EntryFulfillmentMessagesConversationSuccessInitParameters `json:"conversationSuccess,omitempty" tf:"conversation_success,omitempty"`

	// Indicates that the conversation should be handed off to a live agent.
	// Dialogflow only uses this to determine which conversations were handed off to a human agent for measurement purposes. What else to do with this signal is up to you and your handoff procedures.
	// You may set this, for example:
	LiveAgentHandoff []EntryFulfillmentMessagesLiveAgentHandoffInitParameters `json:"liveAgentHandoff,omitempty" tf:"live_agent_handoff,omitempty"`

	// A text or ssml response that is preferentially used for TTS output audio synthesis, as described in the comment on the ResponseMessage message.
	// Structure is documented below.
	OutputAudioText []EntryFulfillmentMessagesOutputAudioTextInitParameters `json:"outputAudioText,omitempty" tf:"output_audio_text,omitempty"`

	// A custom, platform-specific payload.
	Payload *string `json:"payload,omitempty" tf:"payload,omitempty"`

	// Specifies an audio clip to be played by the client as part of the response.
	// Structure is documented below.
	PlayAudio []EntryFulfillmentMessagesPlayAudioInitParameters `json:"playAudio,omitempty" tf:"play_audio,omitempty"`

	// Represents the signal that telles the client to transfer the phone call connected to the agent to a third-party endpoint.
	// Structure is documented below.
	TelephonyTransferCall []EntryFulfillmentMessagesTelephonyTransferCallInitParameters `json:"telephonyTransferCall,omitempty" tf:"telephony_transfer_call,omitempty"`

	// A collection of text responses.
	Text []EntryFulfillmentMessagesTextInitParameters `json:"text,omitempty" tf:"text,omitempty"`
}

type EntryFulfillmentMessagesLiveAgentHandoffInitParameters struct {

	// Custom metadata. Dialogflow doesn't impose any structure on this.
	Metadata *string `json:"metadata,omitempty" tf:"metadata,omitempty"`
}

type EntryFulfillmentMessagesLiveAgentHandoffObservation struct {

	// Custom metadata. Dialogflow doesn't impose any structure on this.
	Metadata *string `json:"metadata,omitempty" tf:"metadata,omitempty"`
}

type EntryFulfillmentMessagesLiveAgentHandoffParameters struct {

	// Custom metadata. Dialogflow doesn't impose any structure on this.
	// +kubebuilder:validation:Optional
	Metadata *string `json:"metadata,omitempty" tf:"metadata,omitempty"`
}

type EntryFulfillmentMessagesObservation struct {

	// The channel which the response is associated with. Clients can specify the channel via QueryParameters.channel, and only associated channel response will be returned.
	Channel *string `json:"channel,omitempty" tf:"channel,omitempty"`

	// Indicates that the conversation succeeded, i.e., the bot handled the issue that the customer talked to it about.
	// Dialogflow only uses this to determine which conversations should be counted as successful and doesn't process the metadata in this message in any way. Note that Dialogflow also considers conversations that get to the conversation end page as successful even if they don't return ConversationSuccess.
	// You may set this, for example:
	ConversationSuccess []EntryFulfillmentMessagesConversationSuccessObservation `json:"conversationSuccess,omitempty" tf:"conversation_success,omitempty"`

	// Indicates that the conversation should be handed off to a live agent.
	// Dialogflow only uses this to determine which conversations were handed off to a human agent for measurement purposes. What else to do with this signal is up to you and your handoff procedures.
	// You may set this, for example:
	LiveAgentHandoff []EntryFulfillmentMessagesLiveAgentHandoffObservation `json:"liveAgentHandoff,omitempty" tf:"live_agent_handoff,omitempty"`

	// A text or ssml response that is preferentially used for TTS output audio synthesis, as described in the comment on the ResponseMessage message.
	// Structure is documented below.
	OutputAudioText []EntryFulfillmentMessagesOutputAudioTextObservation `json:"outputAudioText,omitempty" tf:"output_audio_text,omitempty"`

	// A custom, platform-specific payload.
	Payload *string `json:"payload,omitempty" tf:"payload,omitempty"`

	// Specifies an audio clip to be played by the client as part of the response.
	// Structure is documented below.
	PlayAudio []EntryFulfillmentMessagesPlayAudioObservation `json:"playAudio,omitempty" tf:"play_audio,omitempty"`

	// Represents the signal that telles the client to transfer the phone call connected to the agent to a third-party endpoint.
	// Structure is documented below.
	TelephonyTransferCall []EntryFulfillmentMessagesTelephonyTransferCallObservation `json:"telephonyTransferCall,omitempty" tf:"telephony_transfer_call,omitempty"`

	// A collection of text responses.
	Text []EntryFulfillmentMessagesTextObservation `json:"text,omitempty" tf:"text,omitempty"`
}

type EntryFulfillmentMessagesOutputAudioTextInitParameters struct {

	// The SSML text to be synthesized. For more information, see SSML.
	Ssml *string `json:"ssml,omitempty" tf:"ssml,omitempty"`

	// A collection of text responses.
	Text *string `json:"text,omitempty" tf:"text,omitempty"`
}

type EntryFulfillmentMessagesOutputAudioTextObservation struct {

	// (Output)
	// Whether the playback of this message can be interrupted by the end user's speech and the client can then starts the next Dialogflow request.
	AllowPlaybackInterruption *bool `json:"allowPlaybackInterruption,omitempty" tf:"allow_playback_interruption,omitempty"`

	// The SSML text to be synthesized. For more information, see SSML.
	Ssml *string `json:"ssml,omitempty" tf:"ssml,omitempty"`

	// A collection of text responses.
	Text *string `json:"text,omitempty" tf:"text,omitempty"`
}

type EntryFulfillmentMessagesOutputAudioTextParameters struct {

	// The SSML text to be synthesized. For more information, see SSML.
	// +kubebuilder:validation:Optional
	Ssml *string `json:"ssml,omitempty" tf:"ssml,omitempty"`

	// A collection of text responses.
	// +kubebuilder:validation:Optional
	Text *string `json:"text,omitempty" tf:"text,omitempty"`
}

type EntryFulfillmentMessagesParameters struct {

	// The channel which the response is associated with. Clients can specify the channel via QueryParameters.channel, and only associated channel response will be returned.
	// +kubebuilder:validation:Optional
	Channel *string `json:"channel,omitempty" tf:"channel,omitempty"`

	// Indicates that the conversation succeeded, i.e., the bot handled the issue that the customer talked to it about.
	// Dialogflow only uses this to determine which conversations should be counted as successful and doesn't process the metadata in this message in any way. Note that Dialogflow also considers conversations that get to the conversation end page as successful even if they don't return ConversationSuccess.
	// You may set this, for example:
	// +kubebuilder:validation:Optional
	ConversationSuccess []EntryFulfillmentMessagesConversationSuccessParameters `json:"conversationSuccess,omitempty" tf:"conversation_success,omitempty"`

	// Indicates that the conversation should be handed off to a live agent.
	// Dialogflow only uses this to determine which conversations were handed off to a human agent for measurement purposes. What else to do with this signal is up to you and your handoff procedures.
	// You may set this, for example:
	// +kubebuilder:validation:Optional
	LiveAgentHandoff []EntryFulfillmentMessagesLiveAgentHandoffParameters `json:"liveAgentHandoff,omitempty" tf:"live_agent_handoff,omitempty"`

	// A text or ssml response that is preferentially used for TTS output audio synthesis, as described in the comment on the ResponseMessage message.
	// Structure is documented below.
	// +kubebuilder:validation:Optional
	OutputAudioText []EntryFulfillmentMessagesOutputAudioTextParameters `json:"outputAudioText,omitempty" tf:"output_audio_text,omitempty"`

	// A custom, platform-specific payload.
	// +kubebuilder:validation:Optional
	Payload *string `json:"payload,omitempty" tf:"payload,omitempty"`

	// Specifies an audio clip to be played by the client as part of the response.
	// Structure is documented below.
	// +kubebuilder:validation:Optional
	PlayAudio []EntryFulfillmentMessagesPlayAudioParameters `json:"playAudio,omitempty" tf:"play_audio,omitempty"`

	// Represents the signal that telles the client to transfer the phone call connected to the agent to a third-party endpoint.
	// Structure is documented below.
	// +kubebuilder:validation:Optional
	TelephonyTransferCall []EntryFulfillmentMessagesTelephonyTransferCallParameters `json:"telephonyTransferCall,omitempty" tf:"telephony_transfer_call,omitempty"`

	// A collection of text responses.
	// +kubebuilder:validation:Optional
	Text []EntryFulfillmentMessagesTextParameters `json:"text,omitempty" tf:"text,omitempty"`
}

type EntryFulfillmentMessagesPlayAudioInitParameters struct {

	// URI of the audio clip. Dialogflow does not impose any validation on this value. It is specific to the client that reads it.
	AudioURI *string `json:"audioUri,omitempty" tf:"audio_uri,omitempty"`
}

type EntryFulfillmentMessagesPlayAudioObservation struct {

	// (Output)
	// Whether the playback of this message can be interrupted by the end user's speech and the client can then starts the next Dialogflow request.
	AllowPlaybackInterruption *bool `json:"allowPlaybackInterruption,omitempty" tf:"allow_playback_interruption,omitempty"`

	// URI of the audio clip. Dialogflow does not impose any validation on this value. It is specific to the client that reads it.
	AudioURI *string `json:"audioUri,omitempty" tf:"audio_uri,omitempty"`
}

type EntryFulfillmentMessagesPlayAudioParameters struct {

	// URI of the audio clip. Dialogflow does not impose any validation on this value. It is specific to the client that reads it.
	// +kubebuilder:validation:Optional
	AudioURI *string `json:"audioUri" tf:"audio_uri,omitempty"`
}

type EntryFulfillmentMessagesTelephonyTransferCallInitParameters struct {

	// Transfer the call to a phone number in E.164 format.
	PhoneNumber *string `json:"phoneNumber,omitempty" tf:"phone_number,omitempty"`
}

type EntryFulfillmentMessagesTelephonyTransferCallObservation struct {

	// Transfer the call to a phone number in E.164 format.
	PhoneNumber *string `json:"phoneNumber,omitempty" tf:"phone_number,omitempty"`
}

type EntryFulfillmentMessagesTelephonyTransferCallParameters struct {

	// Transfer the call to a phone number in E.164 format.
	// +kubebuilder:validation:Optional
	PhoneNumber *string `json:"phoneNumber" tf:"phone_number,omitempty"`
}

type EntryFulfillmentMessagesTextInitParameters struct {

	// A collection of text responses.
	Text []*string `json:"text,omitempty" tf:"text,omitempty"`
}

type EntryFulfillmentMessagesTextObservation struct {

	// (Output)
	// Whether the playback of this message can be interrupted by the end user's speech and the client can then starts the next Dialogflow request.
	AllowPlaybackInterruption *bool `json:"allowPlaybackInterruption,omitempty" tf:"allow_playback_interruption,omitempty"`

	// A collection of text responses.
	Text []*string `json:"text,omitempty" tf:"text,omitempty"`
}

type EntryFulfillmentMessagesTextParameters struct {

	// A collection of text responses.
	// +kubebuilder:validation:Optional
	Text []*string `json:"text,omitempty" tf:"text,omitempty"`
}

type EntryFulfillmentObservation struct {

	// Conditional cases for this fulfillment.
	// Structure is documented below.
	ConditionalCases []EntryFulfillmentConditionalCasesObservation `json:"conditionalCases,omitempty" tf:"conditional_cases,omitempty"`

	// The list of rich message responses to present to the user.
	// Structure is documented below.
	Messages []EntryFulfillmentMessagesObservation `json:"messages,omitempty" tf:"messages,omitempty"`

	// Whether Dialogflow should return currently queued fulfillment response messages in streaming APIs. If a webhook is specified, it happens before Dialogflow invokes webhook. Warning: 1) This flag only affects streaming API. Responses are still queued and returned once in non-streaming API. 2) The flag can be enabled in any fulfillment but only the first 3 partial responses will be returned. You may only want to apply it to fulfillments that have slow webhooks.
	ReturnPartialResponses *bool `json:"returnPartialResponses,omitempty" tf:"return_partial_responses,omitempty"`

	// Set parameter values before executing the webhook.
	// Structure is documented below.
	SetParameterActions []EntryFulfillmentSetParameterActionsObservation `json:"setParameterActions,omitempty" tf:"set_parameter_actions,omitempty"`

	// The tag used by the webhook to identify which fulfillment is being called. This field is required if webhook is specified.
	Tag *string `json:"tag,omitempty" tf:"tag,omitempty"`

	// The webhook to call. Format: projects//locations//agents//webhooks/.
	Webhook *string `json:"webhook,omitempty" tf:"webhook,omitempty"`
}

type EntryFulfillmentParameters struct {

	// Conditional cases for this fulfillment.
	// Structure is documented below.
	// +kubebuilder:validation:Optional
	ConditionalCases []EntryFulfillmentConditionalCasesParameters `json:"conditionalCases,omitempty" tf:"conditional_cases,omitempty"`

	// The list of rich message responses to present to the user.
	// Structure is documented below.
	// +kubebuilder:validation:Optional
	Messages []EntryFulfillmentMessagesParameters `json:"messages,omitempty" tf:"messages,omitempty"`

	// Whether Dialogflow should return currently queued fulfillment response messages in streaming APIs. If a webhook is specified, it happens before Dialogflow invokes webhook. Warning: 1) This flag only affects streaming API. Responses are still queued and returned once in non-streaming API. 2) The flag can be enabled in any fulfillment but only the first 3 partial responses will be returned. You may only want to apply it to fulfillments that have slow webhooks.
	// +kubebuilder:validation:Optional
	ReturnPartialResponses *bool `json:"returnPartialResponses,omitempty" tf:"return_partial_responses,omitempty"`

	// Set parameter values before executing the webhook.
	// Structure is documented below.
	// +kubebuilder:validation:Optional
	SetParameterActions []EntryFulfillmentSetParameterActionsParameters `json:"setParameterActions,omitempty" tf:"set_parameter_actions,omitempty"`

	// The tag used by the webhook to identify which fulfillment is being called. This field is required if webhook is specified.
	// +kubebuilder:validation:Optional
	Tag *string `json:"tag,omitempty" tf:"tag,omitempty"`

	// The webhook to call. Format: projects//locations//agents//webhooks/.
	// +kubebuilder:validation:Optional
	Webhook *string `json:"webhook,omitempty" tf:"webhook,omitempty"`
}

type EntryFulfillmentSetParameterActionsInitParameters struct {

	// Display name of the parameter.
	Parameter *string `json:"parameter,omitempty" tf:"parameter,omitempty"`

	// The new JSON-encoded value of the parameter. A null value clears the parameter.
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type EntryFulfillmentSetParameterActionsObservation struct {

	// Display name of the parameter.
	Parameter *string `json:"parameter,omitempty" tf:"parameter,omitempty"`

	// The new JSON-encoded value of the parameter. A null value clears the parameter.
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type EntryFulfillmentSetParameterActionsParameters struct {

	// Display name of the parameter.
	// +kubebuilder:validation:Optional
	Parameter *string `json:"parameter,omitempty" tf:"parameter,omitempty"`

	// The new JSON-encoded value of the parameter. A null value clears the parameter.
	// +kubebuilder:validation:Optional
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type EventHandlersTriggerFulfillmentConditionalCasesInitParameters struct {

	// A JSON encoded list of cascading if-else conditions. Cases are mutually exclusive. The first one with a matching condition is selected, all the rest ignored.
	// See Case for the schema.
	Cases *string `json:"cases,omitempty" tf:"cases,omitempty"`
}

type EventHandlersTriggerFulfillmentConditionalCasesObservation struct {

	// A JSON encoded list of cascading if-else conditions. Cases are mutually exclusive. The first one with a matching condition is selected, all the rest ignored.
	// See Case for the schema.
	Cases *string `json:"cases,omitempty" tf:"cases,omitempty"`
}

type EventHandlersTriggerFulfillmentConditionalCasesParameters struct {

	// A JSON encoded list of cascading if-else conditions. Cases are mutually exclusive. The first one with a matching condition is selected, all the rest ignored.
	// See Case for the schema.
	// +kubebuilder:validation:Optional
	Cases *string `json:"cases,omitempty" tf:"cases,omitempty"`
}

type EventHandlersTriggerFulfillmentInitParameters struct {

	// Conditional cases for this fulfillment.
	// Structure is documented below.
	ConditionalCases []EventHandlersTriggerFulfillmentConditionalCasesInitParameters `json:"conditionalCases,omitempty" tf:"conditional_cases,omitempty"`

	// The list of rich message responses to present to the user.
	// Structure is documented below.
	Messages []EventHandlersTriggerFulfillmentMessagesInitParameters `json:"messages,omitempty" tf:"messages,omitempty"`

	// Whether Dialogflow should return currently queued fulfillment response messages in streaming APIs. If a webhook is specified, it happens before Dialogflow invokes webhook. Warning: 1) This flag only affects streaming API. Responses are still queued and returned once in non-streaming API. 2) The flag can be enabled in any fulfillment but only the first 3 partial responses will be returned. You may only want to apply it to fulfillments that have slow webhooks.
	ReturnPartialResponses *bool `json:"returnPartialResponses,omitempty" tf:"return_partial_responses,omitempty"`

	// Set parameter values before executing the webhook.
	// Structure is documented below.
	SetParameterActions []EventHandlersTriggerFulfillmentSetParameterActionsInitParameters `json:"setParameterActions,omitempty" tf:"set_parameter_actions,omitempty"`

	// The tag used by the webhook to identify which fulfillment is being called. This field is required if webhook is specified.
	Tag *string `json:"tag,omitempty" tf:"tag,omitempty"`

	// The webhook to call. Format: projects//locations//agents//webhooks/.
	Webhook *string `json:"webhook,omitempty" tf:"webhook,omitempty"`
}

type EventHandlersTriggerFulfillmentMessagesInitParameters struct {

	// The channel which the response is associated with. Clients can specify the channel via QueryParameters.channel, and only associated channel response will be returned.
	Channel *string `json:"channel,omitempty" tf:"channel,omitempty"`

	// Indicates that the conversation succeeded, i.e., the bot handled the issue that the customer talked to it about.
	// Dialogflow only uses this to determine which conversations should be counted as successful and doesn't process the metadata in this message in any way. Note that Dialogflow also considers conversations that get to the conversation end page as successful even if they don't return ConversationSuccess.
	// You may set this, for example:
	ConversationSuccess []TriggerFulfillmentMessagesConversationSuccessInitParameters `json:"conversationSuccess,omitempty" tf:"conversation_success,omitempty"`

	// Indicates that the conversation should be handed off to a live agent.
	// Dialogflow only uses this to determine which conversations were handed off to a human agent for measurement purposes. What else to do with this signal is up to you and your handoff procedures.
	// You may set this, for example:
	LiveAgentHandoff []TriggerFulfillmentMessagesLiveAgentHandoffInitParameters `json:"liveAgentHandoff,omitempty" tf:"live_agent_handoff,omitempty"`

	// A text or ssml response that is preferentially used for TTS output audio synthesis, as described in the comment on the ResponseMessage message.
	// Structure is documented below.
	OutputAudioText []TriggerFulfillmentMessagesOutputAudioTextInitParameters `json:"outputAudioText,omitempty" tf:"output_audio_text,omitempty"`

	// A custom, platform-specific payload.
	Payload *string `json:"payload,omitempty" tf:"payload,omitempty"`

	// Specifies an audio clip to be played by the client as part of the response.
	// Structure is documented below.
	PlayAudio []TriggerFulfillmentMessagesPlayAudioInitParameters `json:"playAudio,omitempty" tf:"play_audio,omitempty"`

	// Represents the signal that telles the client to transfer the phone call connected to the agent to a third-party endpoint.
	// Structure is documented below.
	TelephonyTransferCall []TriggerFulfillmentMessagesTelephonyTransferCallInitParameters `json:"telephonyTransferCall,omitempty" tf:"telephony_transfer_call,omitempty"`

	// A collection of text responses.
	Text []TriggerFulfillmentMessagesTextInitParameters `json:"text,omitempty" tf:"text,omitempty"`
}

type EventHandlersTriggerFulfillmentMessagesObservation struct {

	// The channel which the response is associated with. Clients can specify the channel via QueryParameters.channel, and only associated channel response will be returned.
	Channel *string `json:"channel,omitempty" tf:"channel,omitempty"`

	// Indicates that the conversation succeeded, i.e., the bot handled the issue that the customer talked to it about.
	// Dialogflow only uses this to determine which conversations should be counted as successful and doesn't process the metadata in this message in any way. Note that Dialogflow also considers conversations that get to the conversation end page as successful even if they don't return ConversationSuccess.
	// You may set this, for example:
	ConversationSuccess []TriggerFulfillmentMessagesConversationSuccessObservation `json:"conversationSuccess,omitempty" tf:"conversation_success,omitempty"`

	// Indicates that the conversation should be handed off to a live agent.
	// Dialogflow only uses this to determine which conversations were handed off to a human agent for measurement purposes. What else to do with this signal is up to you and your handoff procedures.
	// You may set this, for example:
	LiveAgentHandoff []TriggerFulfillmentMessagesLiveAgentHandoffObservation `json:"liveAgentHandoff,omitempty" tf:"live_agent_handoff,omitempty"`

	// A text or ssml response that is preferentially used for TTS output audio synthesis, as described in the comment on the ResponseMessage message.
	// Structure is documented below.
	OutputAudioText []TriggerFulfillmentMessagesOutputAudioTextObservation `json:"outputAudioText,omitempty" tf:"output_audio_text,omitempty"`

	// A custom, platform-specific payload.
	Payload *string `json:"payload,omitempty" tf:"payload,omitempty"`

	// Specifies an audio clip to be played by the client as part of the response.
	// Structure is documented below.
	PlayAudio []TriggerFulfillmentMessagesPlayAudioObservation `json:"playAudio,omitempty" tf:"play_audio,omitempty"`

	// Represents the signal that telles the client to transfer the phone call connected to the agent to a third-party endpoint.
	// Structure is documented below.
	TelephonyTransferCall []TriggerFulfillmentMessagesTelephonyTransferCallObservation `json:"telephonyTransferCall,omitempty" tf:"telephony_transfer_call,omitempty"`

	// A collection of text responses.
	Text []TriggerFulfillmentMessagesTextObservation `json:"text,omitempty" tf:"text,omitempty"`
}

type EventHandlersTriggerFulfillmentMessagesParameters struct {

	// The channel which the response is associated with. Clients can specify the channel via QueryParameters.channel, and only associated channel response will be returned.
	// +kubebuilder:validation:Optional
	Channel *string `json:"channel,omitempty" tf:"channel,omitempty"`

	// Indicates that the conversation succeeded, i.e., the bot handled the issue that the customer talked to it about.
	// Dialogflow only uses this to determine which conversations should be counted as successful and doesn't process the metadata in this message in any way. Note that Dialogflow also considers conversations that get to the conversation end page as successful even if they don't return ConversationSuccess.
	// You may set this, for example:
	// +kubebuilder:validation:Optional
	ConversationSuccess []TriggerFulfillmentMessagesConversationSuccessParameters `json:"conversationSuccess,omitempty" tf:"conversation_success,omitempty"`

	// Indicates that the conversation should be handed off to a live agent.
	// Dialogflow only uses this to determine which conversations were handed off to a human agent for measurement purposes. What else to do with this signal is up to you and your handoff procedures.
	// You may set this, for example:
	// +kubebuilder:validation:Optional
	LiveAgentHandoff []TriggerFulfillmentMessagesLiveAgentHandoffParameters `json:"liveAgentHandoff,omitempty" tf:"live_agent_handoff,omitempty"`

	// A text or ssml response that is preferentially used for TTS output audio synthesis, as described in the comment on the ResponseMessage message.
	// Structure is documented below.
	// +kubebuilder:validation:Optional
	OutputAudioText []TriggerFulfillmentMessagesOutputAudioTextParameters `json:"outputAudioText,omitempty" tf:"output_audio_text,omitempty"`

	// A custom, platform-specific payload.
	// +kubebuilder:validation:Optional
	Payload *string `json:"payload,omitempty" tf:"payload,omitempty"`

	// Specifies an audio clip to be played by the client as part of the response.
	// Structure is documented below.
	// +kubebuilder:validation:Optional
	PlayAudio []TriggerFulfillmentMessagesPlayAudioParameters `json:"playAudio,omitempty" tf:"play_audio,omitempty"`

	// Represents the signal that telles the client to transfer the phone call connected to the agent to a third-party endpoint.
	// Structure is documented below.
	// +kubebuilder:validation:Optional
	TelephonyTransferCall []TriggerFulfillmentMessagesTelephonyTransferCallParameters `json:"telephonyTransferCall,omitempty" tf:"telephony_transfer_call,omitempty"`

	// A collection of text responses.
	// +kubebuilder:validation:Optional
	Text []TriggerFulfillmentMessagesTextParameters `json:"text,omitempty" tf:"text,omitempty"`
}

type EventHandlersTriggerFulfillmentObservation struct {

	// Conditional cases for this fulfillment.
	// Structure is documented below.
	ConditionalCases []EventHandlersTriggerFulfillmentConditionalCasesObservation `json:"conditionalCases,omitempty" tf:"conditional_cases,omitempty"`

	// The list of rich message responses to present to the user.
	// Structure is documented below.
	Messages []EventHandlersTriggerFulfillmentMessagesObservation `json:"messages,omitempty" tf:"messages,omitempty"`

	// Whether Dialogflow should return currently queued fulfillment response messages in streaming APIs. If a webhook is specified, it happens before Dialogflow invokes webhook. Warning: 1) This flag only affects streaming API. Responses are still queued and returned once in non-streaming API. 2) The flag can be enabled in any fulfillment but only the first 3 partial responses will be returned. You may only want to apply it to fulfillments that have slow webhooks.
	ReturnPartialResponses *bool `json:"returnPartialResponses,omitempty" tf:"return_partial_responses,omitempty"`

	// Set parameter values before executing the webhook.
	// Structure is documented below.
	SetParameterActions []EventHandlersTriggerFulfillmentSetParameterActionsObservation `json:"setParameterActions,omitempty" tf:"set_parameter_actions,omitempty"`

	// The tag used by the webhook to identify which fulfillment is being called. This field is required if webhook is specified.
	Tag *string `json:"tag,omitempty" tf:"tag,omitempty"`

	// The webhook to call. Format: projects//locations//agents//webhooks/.
	Webhook *string `json:"webhook,omitempty" tf:"webhook,omitempty"`
}

type EventHandlersTriggerFulfillmentParameters struct {

	// Conditional cases for this fulfillment.
	// Structure is documented below.
	// +kubebuilder:validation:Optional
	ConditionalCases []EventHandlersTriggerFulfillmentConditionalCasesParameters `json:"conditionalCases,omitempty" tf:"conditional_cases,omitempty"`

	// The list of rich message responses to present to the user.
	// Structure is documented below.
	// +kubebuilder:validation:Optional
	Messages []EventHandlersTriggerFulfillmentMessagesParameters `json:"messages,omitempty" tf:"messages,omitempty"`

	// Whether Dialogflow should return currently queued fulfillment response messages in streaming APIs. If a webhook is specified, it happens before Dialogflow invokes webhook. Warning: 1) This flag only affects streaming API. Responses are still queued and returned once in non-streaming API. 2) The flag can be enabled in any fulfillment but only the first 3 partial responses will be returned. You may only want to apply it to fulfillments that have slow webhooks.
	// +kubebuilder:validation:Optional
	ReturnPartialResponses *bool `json:"returnPartialResponses,omitempty" tf:"return_partial_responses,omitempty"`

	// Set parameter values before executing the webhook.
	// Structure is documented below.
	// +kubebuilder:validation:Optional
	SetParameterActions []EventHandlersTriggerFulfillmentSetParameterActionsParameters `json:"setParameterActions,omitempty" tf:"set_parameter_actions,omitempty"`

	// The tag used by the webhook to identify which fulfillment is being called. This field is required if webhook is specified.
	// +kubebuilder:validation:Optional
	Tag *string `json:"tag,omitempty" tf:"tag,omitempty"`

	// The webhook to call. Format: projects//locations//agents//webhooks/.
	// +kubebuilder:validation:Optional
	Webhook *string `json:"webhook,omitempty" tf:"webhook,omitempty"`
}

type EventHandlersTriggerFulfillmentSetParameterActionsInitParameters struct {

	// Display name of the parameter.
	Parameter *string `json:"parameter,omitempty" tf:"parameter,omitempty"`

	// The new JSON-encoded value of the parameter. A null value clears the parameter.
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type EventHandlersTriggerFulfillmentSetParameterActionsObservation struct {

	// Display name of the parameter.
	Parameter *string `json:"parameter,omitempty" tf:"parameter,omitempty"`

	// The new JSON-encoded value of the parameter. A null value clears the parameter.
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type EventHandlersTriggerFulfillmentSetParameterActionsParameters struct {

	// Display name of the parameter.
	// +kubebuilder:validation:Optional
	Parameter *string `json:"parameter,omitempty" tf:"parameter,omitempty"`

	// The new JSON-encoded value of the parameter. A null value clears the parameter.
	// +kubebuilder:validation:Optional
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type FillBehaviorInitParameters struct {

	// The fulfillment to provide the initial prompt that the agent can present to the user in order to fill the parameter.
	// Structure is documented below.
	InitialPromptFulfillment []InitialPromptFulfillmentInitParameters `json:"initialPromptFulfillment,omitempty" tf:"initial_prompt_fulfillment,omitempty"`

	// The handlers for parameter-level events, used to provide reprompt for the parameter or transition to a different page/flow. The supported events are:
	RepromptEventHandlers []RepromptEventHandlersInitParameters `json:"repromptEventHandlers,omitempty" tf:"reprompt_event_handlers,omitempty"`
}

type FillBehaviorObservation struct {

	// The fulfillment to provide the initial prompt that the agent can present to the user in order to fill the parameter.
	// Structure is documented below.
	InitialPromptFulfillment []InitialPromptFulfillmentObservation `json:"initialPromptFulfillment,omitempty" tf:"initial_prompt_fulfillment,omitempty"`

	// The handlers for parameter-level events, used to provide reprompt for the parameter or transition to a different page/flow. The supported events are:
	RepromptEventHandlers []RepromptEventHandlersObservation `json:"repromptEventHandlers,omitempty" tf:"reprompt_event_handlers,omitempty"`
}

type FillBehaviorParameters struct {

	// The fulfillment to provide the initial prompt that the agent can present to the user in order to fill the parameter.
	// Structure is documented below.
	// +kubebuilder:validation:Optional
	InitialPromptFulfillment []InitialPromptFulfillmentParameters `json:"initialPromptFulfillment,omitempty" tf:"initial_prompt_fulfillment,omitempty"`

	// The handlers for parameter-level events, used to provide reprompt for the parameter or transition to a different page/flow. The supported events are:
	// +kubebuilder:validation:Optional
	RepromptEventHandlers []RepromptEventHandlersParameters `json:"repromptEventHandlers,omitempty" tf:"reprompt_event_handlers,omitempty"`
}

type FormInitParameters struct {

	// Parameters to collect from the user.
	// Structure is documented below.
	Parameters []FormParametersInitParameters `json:"parameters,omitempty" tf:"parameters,omitempty"`
}

type FormObservation struct {

	// Parameters to collect from the user.
	// Structure is documented below.
	Parameters []FormParametersObservation `json:"parameters,omitempty" tf:"parameters,omitempty"`
}

type FormParameters struct {

	// Parameters to collect from the user.
	// Structure is documented below.
	// +kubebuilder:validation:Optional
	Parameters []FormParametersParameters `json:"parameters,omitempty" tf:"parameters,omitempty"`
}

type FormParametersInitParameters struct {

	// Hierarchical advanced settings for this parameter. The settings exposed at the lower level overrides the settings exposed at the higher level.
	// Hierarchy: Agent->Flow->Page->Fulfillment/Parameter.
	// Structure is documented below.
	AdvancedSettings []ParametersAdvancedSettingsInitParameters `json:"advancedSettings,omitempty" tf:"advanced_settings,omitempty"`

	// The default value of an optional parameter. If the parameter is required, the default value will be ignored.
	DefaultValue *string `json:"defaultValue,omitempty" tf:"default_value,omitempty"`

	// The human-readable name of the parameter, unique within the form.
	DisplayName *string `json:"displayName,omitempty" tf:"display_name,omitempty"`

	// The entity type of the parameter.
	// Format: projects/-/locations/-/agents/-/entityTypes/ for system entity types (for example, projects/-/locations/-/agents/-/entityTypes/sys.date), or projects//locations//agents//entityTypes/ for developer entity types.
	EntityType *string `json:"entityType,omitempty" tf:"entity_type,omitempty"`

	// Defines fill behavior for the parameter.
	// Structure is documented below.
	FillBehavior []FillBehaviorInitParameters `json:"fillBehavior,omitempty" tf:"fill_behavior,omitempty"`

	// Indicates whether the parameter represents a list of values.
	IsList *bool `json:"isList,omitempty" tf:"is_list,omitempty"`

	// Indicates whether the parameter content should be redacted in log.
	// If redaction is enabled, the parameter content will be replaced by parameter name during logging. Note: the parameter content is subject to redaction if either parameter level redaction or entity type level redaction is enabled.
	Redact *bool `json:"redact,omitempty" tf:"redact,omitempty"`

	// Indicates whether the parameter is required. Optional parameters will not trigger prompts; however, they are filled if the user specifies them.
	// Required parameters must be filled before form filling concludes.
	Required *bool `json:"required,omitempty" tf:"required,omitempty"`
}

type FormParametersObservation struct {

	// Hierarchical advanced settings for this parameter. The settings exposed at the lower level overrides the settings exposed at the higher level.
	// Hierarchy: Agent->Flow->Page->Fulfillment/Parameter.
	// Structure is documented below.
	AdvancedSettings []ParametersAdvancedSettingsObservation `json:"advancedSettings,omitempty" tf:"advanced_settings,omitempty"`

	// The default value of an optional parameter. If the parameter is required, the default value will be ignored.
	DefaultValue *string `json:"defaultValue,omitempty" tf:"default_value,omitempty"`

	// The human-readable name of the parameter, unique within the form.
	DisplayName *string `json:"displayName,omitempty" tf:"display_name,omitempty"`

	// The entity type of the parameter.
	// Format: projects/-/locations/-/agents/-/entityTypes/ for system entity types (for example, projects/-/locations/-/agents/-/entityTypes/sys.date), or projects//locations//agents//entityTypes/ for developer entity types.
	EntityType *string `json:"entityType,omitempty" tf:"entity_type,omitempty"`

	// Defines fill behavior for the parameter.
	// Structure is documented below.
	FillBehavior []FillBehaviorObservation `json:"fillBehavior,omitempty" tf:"fill_behavior,omitempty"`

	// Indicates whether the parameter represents a list of values.
	IsList *bool `json:"isList,omitempty" tf:"is_list,omitempty"`

	// Indicates whether the parameter content should be redacted in log.
	// If redaction is enabled, the parameter content will be replaced by parameter name during logging. Note: the parameter content is subject to redaction if either parameter level redaction or entity type level redaction is enabled.
	Redact *bool `json:"redact,omitempty" tf:"redact,omitempty"`

	// Indicates whether the parameter is required. Optional parameters will not trigger prompts; however, they are filled if the user specifies them.
	// Required parameters must be filled before form filling concludes.
	Required *bool `json:"required,omitempty" tf:"required,omitempty"`
}

type FormParametersParameters struct {

	// Hierarchical advanced settings for this parameter. The settings exposed at the lower level overrides the settings exposed at the higher level.
	// Hierarchy: Agent->Flow->Page->Fulfillment/Parameter.
	// Structure is documented below.
	// +kubebuilder:validation:Optional
	AdvancedSettings []ParametersAdvancedSettingsParameters `json:"advancedSettings,omitempty" tf:"advanced_settings,omitempty"`

	// The default value of an optional parameter. If the parameter is required, the default value will be ignored.
	// +kubebuilder:validation:Optional
	DefaultValue *string `json:"defaultValue,omitempty" tf:"default_value,omitempty"`

	// The human-readable name of the parameter, unique within the form.
	// +kubebuilder:validation:Optional
	DisplayName *string `json:"displayName,omitempty" tf:"display_name,omitempty"`

	// The entity type of the parameter.
	// Format: projects/-/locations/-/agents/-/entityTypes/ for system entity types (for example, projects/-/locations/-/agents/-/entityTypes/sys.date), or projects//locations//agents//entityTypes/ for developer entity types.
	// +kubebuilder:validation:Optional
	EntityType *string `json:"entityType,omitempty" tf:"entity_type,omitempty"`

	// Defines fill behavior for the parameter.
	// Structure is documented below.
	// +kubebuilder:validation:Optional
	FillBehavior []FillBehaviorParameters `json:"fillBehavior,omitempty" tf:"fill_behavior,omitempty"`

	// Indicates whether the parameter represents a list of values.
	// +kubebuilder:validation:Optional
	IsList *bool `json:"isList,omitempty" tf:"is_list,omitempty"`

	// Indicates whether the parameter content should be redacted in log.
	// If redaction is enabled, the parameter content will be replaced by parameter name during logging. Note: the parameter content is subject to redaction if either parameter level redaction or entity type level redaction is enabled.
	// +kubebuilder:validation:Optional
	Redact *bool `json:"redact,omitempty" tf:"redact,omitempty"`

	// Indicates whether the parameter is required. Optional parameters will not trigger prompts; however, they are filled if the user specifies them.
	// Required parameters must be filled before form filling concludes.
	// +kubebuilder:validation:Optional
	Required *bool `json:"required,omitempty" tf:"required,omitempty"`
}

type InitialPromptFulfillmentConditionalCasesInitParameters struct {

	// A JSON encoded list of cascading if-else conditions. Cases are mutually exclusive. The first one with a matching condition is selected, all the rest ignored.
	// See Case for the schema.
	Cases *string `json:"cases,omitempty" tf:"cases,omitempty"`
}

type InitialPromptFulfillmentConditionalCasesObservation struct {

	// A JSON encoded list of cascading if-else conditions. Cases are mutually exclusive. The first one with a matching condition is selected, all the rest ignored.
	// See Case for the schema.
	Cases *string `json:"cases,omitempty" tf:"cases,omitempty"`
}

type InitialPromptFulfillmentConditionalCasesParameters struct {

	// A JSON encoded list of cascading if-else conditions. Cases are mutually exclusive. The first one with a matching condition is selected, all the rest ignored.
	// See Case for the schema.
	// +kubebuilder:validation:Optional
	Cases *string `json:"cases,omitempty" tf:"cases,omitempty"`
}

type InitialPromptFulfillmentInitParameters struct {

	// Conditional cases for this fulfillment.
	// Structure is documented below.
	ConditionalCases []InitialPromptFulfillmentConditionalCasesInitParameters `json:"conditionalCases,omitempty" tf:"conditional_cases,omitempty"`

	// The list of rich message responses to present to the user.
	// Structure is documented below.
	Messages []InitialPromptFulfillmentMessagesInitParameters `json:"messages,omitempty" tf:"messages,omitempty"`

	// Whether Dialogflow should return currently queued fulfillment response messages in streaming APIs. If a webhook is specified, it happens before Dialogflow invokes webhook. Warning: 1) This flag only affects streaming API. Responses are still queued and returned once in non-streaming API. 2) The flag can be enabled in any fulfillment but only the first 3 partial responses will be returned. You may only want to apply it to fulfillments that have slow webhooks.
	ReturnPartialResponses *bool `json:"returnPartialResponses,omitempty" tf:"return_partial_responses,omitempty"`

	// Set parameter values before executing the webhook.
	// Structure is documented below.
	SetParameterActions []InitialPromptFulfillmentSetParameterActionsInitParameters `json:"setParameterActions,omitempty" tf:"set_parameter_actions,omitempty"`

	// The tag used by the webhook to identify which fulfillment is being called. This field is required if webhook is specified.
	Tag *string `json:"tag,omitempty" tf:"tag,omitempty"`

	// The webhook to call. Format: projects//locations//agents//webhooks/.
	Webhook *string `json:"webhook,omitempty" tf:"webhook,omitempty"`
}

type InitialPromptFulfillmentMessagesConversationSuccessInitParameters struct {

	// Custom metadata. Dialogflow doesn't impose any structure on this.
	Metadata *string `json:"metadata,omitempty" tf:"metadata,omitempty"`
}

type InitialPromptFulfillmentMessagesConversationSuccessObservation struct {

	// Custom metadata. Dialogflow doesn't impose any structure on this.
	Metadata *string `json:"metadata,omitempty" tf:"metadata,omitempty"`
}

type InitialPromptFulfillmentMessagesConversationSuccessParameters struct {

	// Custom metadata. Dialogflow doesn't impose any structure on this.
	// +kubebuilder:validation:Optional
	Metadata *string `json:"metadata,omitempty" tf:"metadata,omitempty"`
}

type InitialPromptFulfillmentMessagesInitParameters struct {

	// The channel which the response is associated with. Clients can specify the channel via QueryParameters.channel, and only associated channel response will be returned.
	Channel *string `json:"channel,omitempty" tf:"channel,omitempty"`

	// Indicates that the conversation succeeded, i.e., the bot handled the issue that the customer talked to it about.
	// Dialogflow only uses this to determine which conversations should be counted as successful and doesn't process the metadata in this message in any way. Note that Dialogflow also considers conversations that get to the conversation end page as successful even if they don't return ConversationSuccess.
	// You may set this, for example:
	ConversationSuccess []InitialPromptFulfillmentMessagesConversationSuccessInitParameters `json:"conversationSuccess,omitempty" tf:"conversation_success,omitempty"`

	// Indicates that the conversation should be handed off to a live agent.
	// Dialogflow only uses this to determine which conversations were handed off to a human agent for measurement purposes. What else to do with this signal is up to you and your handoff procedures.
	// You may set this, for example:
	LiveAgentHandoff []InitialPromptFulfillmentMessagesLiveAgentHandoffInitParameters `json:"liveAgentHandoff,omitempty" tf:"live_agent_handoff,omitempty"`

	// A text or ssml response that is preferentially used for TTS output audio synthesis, as described in the comment on the ResponseMessage message.
	// Structure is documented below.
	OutputAudioText []InitialPromptFulfillmentMessagesOutputAudioTextInitParameters `json:"outputAudioText,omitempty" tf:"output_audio_text,omitempty"`

	// A custom, platform-specific payload.
	Payload *string `json:"payload,omitempty" tf:"payload,omitempty"`

	// Specifies an audio clip to be played by the client as part of the response.
	// Structure is documented below.
	PlayAudio []InitialPromptFulfillmentMessagesPlayAudioInitParameters `json:"playAudio,omitempty" tf:"play_audio,omitempty"`

	// Represents the signal that telles the client to transfer the phone call connected to the agent to a third-party endpoint.
	// Structure is documented below.
	TelephonyTransferCall []InitialPromptFulfillmentMessagesTelephonyTransferCallInitParameters `json:"telephonyTransferCall,omitempty" tf:"telephony_transfer_call,omitempty"`

	// A collection of text responses.
	Text []InitialPromptFulfillmentMessagesTextInitParameters `json:"text,omitempty" tf:"text,omitempty"`
}

type InitialPromptFulfillmentMessagesLiveAgentHandoffInitParameters struct {

	// Custom metadata. Dialogflow doesn't impose any structure on this.
	Metadata *string `json:"metadata,omitempty" tf:"metadata,omitempty"`
}

type InitialPromptFulfillmentMessagesLiveAgentHandoffObservation struct {

	// Custom metadata. Dialogflow doesn't impose any structure on this.
	Metadata *string `json:"metadata,omitempty" tf:"metadata,omitempty"`
}

type InitialPromptFulfillmentMessagesLiveAgentHandoffParameters struct {

	// Custom metadata. Dialogflow doesn't impose any structure on this.
	// +kubebuilder:validation:Optional
	Metadata *string `json:"metadata,omitempty" tf:"metadata,omitempty"`
}

type InitialPromptFulfillmentMessagesObservation struct {

	// The channel which the response is associated with. Clients can specify the channel via QueryParameters.channel, and only associated channel response will be returned.
	Channel *string `json:"channel,omitempty" tf:"channel,omitempty"`

	// Indicates that the conversation succeeded, i.e., the bot handled the issue that the customer talked to it about.
	// Dialogflow only uses this to determine which conversations should be counted as successful and doesn't process the metadata in this message in any way. Note that Dialogflow also considers conversations that get to the conversation end page as successful even if they don't return ConversationSuccess.
	// You may set this, for example:
	ConversationSuccess []InitialPromptFulfillmentMessagesConversationSuccessObservation `json:"conversationSuccess,omitempty" tf:"conversation_success,omitempty"`

	// Indicates that the conversation should be handed off to a live agent.
	// Dialogflow only uses this to determine which conversations were handed off to a human agent for measurement purposes. What else to do with this signal is up to you and your handoff procedures.
	// You may set this, for example:
	LiveAgentHandoff []InitialPromptFulfillmentMessagesLiveAgentHandoffObservation `json:"liveAgentHandoff,omitempty" tf:"live_agent_handoff,omitempty"`

	// A text or ssml response that is preferentially used for TTS output audio synthesis, as described in the comment on the ResponseMessage message.
	// Structure is documented below.
	OutputAudioText []InitialPromptFulfillmentMessagesOutputAudioTextObservation `json:"outputAudioText,omitempty" tf:"output_audio_text,omitempty"`

	// A custom, platform-specific payload.
	Payload *string `json:"payload,omitempty" tf:"payload,omitempty"`

	// Specifies an audio clip to be played by the client as part of the response.
	// Structure is documented below.
	PlayAudio []InitialPromptFulfillmentMessagesPlayAudioObservation `json:"playAudio,omitempty" tf:"play_audio,omitempty"`

	// Represents the signal that telles the client to transfer the phone call connected to the agent to a third-party endpoint.
	// Structure is documented below.
	TelephonyTransferCall []InitialPromptFulfillmentMessagesTelephonyTransferCallObservation `json:"telephonyTransferCall,omitempty" tf:"telephony_transfer_call,omitempty"`

	// A collection of text responses.
	Text []InitialPromptFulfillmentMessagesTextObservation `json:"text,omitempty" tf:"text,omitempty"`
}

type InitialPromptFulfillmentMessagesOutputAudioTextInitParameters struct {

	// The SSML text to be synthesized. For more information, see SSML.
	Ssml *string `json:"ssml,omitempty" tf:"ssml,omitempty"`

	// A collection of text responses.
	Text *string `json:"text,omitempty" tf:"text,omitempty"`
}

type InitialPromptFulfillmentMessagesOutputAudioTextObservation struct {

	// (Output)
	// Whether the playback of this message can be interrupted by the end user's speech and the client can then starts the next Dialogflow request.
	AllowPlaybackInterruption *bool `json:"allowPlaybackInterruption,omitempty" tf:"allow_playback_interruption,omitempty"`

	// The SSML text to be synthesized. For more information, see SSML.
	Ssml *string `json:"ssml,omitempty" tf:"ssml,omitempty"`

	// A collection of text responses.
	Text *string `json:"text,omitempty" tf:"text,omitempty"`
}

type InitialPromptFulfillmentMessagesOutputAudioTextParameters struct {

	// The SSML text to be synthesized. For more information, see SSML.
	// +kubebuilder:validation:Optional
	Ssml *string `json:"ssml,omitempty" tf:"ssml,omitempty"`

	// A collection of text responses.
	// +kubebuilder:validation:Optional
	Text *string `json:"text,omitempty" tf:"text,omitempty"`
}

type InitialPromptFulfillmentMessagesParameters struct {

	// The channel which the response is associated with. Clients can specify the channel via QueryParameters.channel, and only associated channel response will be returned.
	// +kubebuilder:validation:Optional
	Channel *string `json:"channel,omitempty" tf:"channel,omitempty"`

	// Indicates that the conversation succeeded, i.e., the bot handled the issue that the customer talked to it about.
	// Dialogflow only uses this to determine which conversations should be counted as successful and doesn't process the metadata in this message in any way. Note that Dialogflow also considers conversations that get to the conversation end page as successful even if they don't return ConversationSuccess.
	// You may set this, for example:
	// +kubebuilder:validation:Optional
	ConversationSuccess []InitialPromptFulfillmentMessagesConversationSuccessParameters `json:"conversationSuccess,omitempty" tf:"conversation_success,omitempty"`

	// Indicates that the conversation should be handed off to a live agent.
	// Dialogflow only uses this to determine which conversations were handed off to a human agent for measurement purposes. What else to do with this signal is up to you and your handoff procedures.
	// You may set this, for example:
	// +kubebuilder:validation:Optional
	LiveAgentHandoff []InitialPromptFulfillmentMessagesLiveAgentHandoffParameters `json:"liveAgentHandoff,omitempty" tf:"live_agent_handoff,omitempty"`

	// A text or ssml response that is preferentially used for TTS output audio synthesis, as described in the comment on the ResponseMessage message.
	// Structure is documented below.
	// +kubebuilder:validation:Optional
	OutputAudioText []InitialPromptFulfillmentMessagesOutputAudioTextParameters `json:"outputAudioText,omitempty" tf:"output_audio_text,omitempty"`

	// A custom, platform-specific payload.
	// +kubebuilder:validation:Optional
	Payload *string `json:"payload,omitempty" tf:"payload,omitempty"`

	// Specifies an audio clip to be played by the client as part of the response.
	// Structure is documented below.
	// +kubebuilder:validation:Optional
	PlayAudio []InitialPromptFulfillmentMessagesPlayAudioParameters `json:"playAudio,omitempty" tf:"play_audio,omitempty"`

	// Represents the signal that telles the client to transfer the phone call connected to the agent to a third-party endpoint.
	// Structure is documented below.
	// +kubebuilder:validation:Optional
	TelephonyTransferCall []InitialPromptFulfillmentMessagesTelephonyTransferCallParameters `json:"telephonyTransferCall,omitempty" tf:"telephony_transfer_call,omitempty"`

	// A collection of text responses.
	// +kubebuilder:validation:Optional
	Text []InitialPromptFulfillmentMessagesTextParameters `json:"text,omitempty" tf:"text,omitempty"`
}

type InitialPromptFulfillmentMessagesPlayAudioInitParameters struct {

	// URI of the audio clip. Dialogflow does not impose any validation on this value. It is specific to the client that reads it.
	AudioURI *string `json:"audioUri,omitempty" tf:"audio_uri,omitempty"`
}

type InitialPromptFulfillmentMessagesPlayAudioObservation struct {

	// (Output)
	// Whether the playback of this message can be interrupted by the end user's speech and the client can then starts the next Dialogflow request.
	AllowPlaybackInterruption *bool `json:"allowPlaybackInterruption,omitempty" tf:"allow_playback_interruption,omitempty"`

	// URI of the audio clip. Dialogflow does not impose any validation on this value. It is specific to the client that reads it.
	AudioURI *string `json:"audioUri,omitempty" tf:"audio_uri,omitempty"`
}

type InitialPromptFulfillmentMessagesPlayAudioParameters struct {

	// URI of the audio clip. Dialogflow does not impose any validation on this value. It is specific to the client that reads it.
	// +kubebuilder:validation:Optional
	AudioURI *string `json:"audioUri" tf:"audio_uri,omitempty"`
}

type InitialPromptFulfillmentMessagesTelephonyTransferCallInitParameters struct {

	// Transfer the call to a phone number in E.164 format.
	PhoneNumber *string `json:"phoneNumber,omitempty" tf:"phone_number,omitempty"`
}

type InitialPromptFulfillmentMessagesTelephonyTransferCallObservation struct {

	// Transfer the call to a phone number in E.164 format.
	PhoneNumber *string `json:"phoneNumber,omitempty" tf:"phone_number,omitempty"`
}

type InitialPromptFulfillmentMessagesTelephonyTransferCallParameters struct {

	// Transfer the call to a phone number in E.164 format.
	// +kubebuilder:validation:Optional
	PhoneNumber *string `json:"phoneNumber" tf:"phone_number,omitempty"`
}

type InitialPromptFulfillmentMessagesTextInitParameters struct {

	// A collection of text responses.
	Text []*string `json:"text,omitempty" tf:"text,omitempty"`
}

type InitialPromptFulfillmentMessagesTextObservation struct {

	// (Output)
	// Whether the playback of this message can be interrupted by the end user's speech and the client can then starts the next Dialogflow request.
	AllowPlaybackInterruption *bool `json:"allowPlaybackInterruption,omitempty" tf:"allow_playback_interruption,omitempty"`

	// A collection of text responses.
	Text []*string `json:"text,omitempty" tf:"text,omitempty"`
}

type InitialPromptFulfillmentMessagesTextParameters struct {

	// A collection of text responses.
	// +kubebuilder:validation:Optional
	Text []*string `json:"text,omitempty" tf:"text,omitempty"`
}

type InitialPromptFulfillmentObservation struct {

	// Conditional cases for this fulfillment.
	// Structure is documented below.
	ConditionalCases []InitialPromptFulfillmentConditionalCasesObservation `json:"conditionalCases,omitempty" tf:"conditional_cases,omitempty"`

	// The list of rich message responses to present to the user.
	// Structure is documented below.
	Messages []InitialPromptFulfillmentMessagesObservation `json:"messages,omitempty" tf:"messages,omitempty"`

	// Whether Dialogflow should return currently queued fulfillment response messages in streaming APIs. If a webhook is specified, it happens before Dialogflow invokes webhook. Warning: 1) This flag only affects streaming API. Responses are still queued and returned once in non-streaming API. 2) The flag can be enabled in any fulfillment but only the first 3 partial responses will be returned. You may only want to apply it to fulfillments that have slow webhooks.
	ReturnPartialResponses *bool `json:"returnPartialResponses,omitempty" tf:"return_partial_responses,omitempty"`

	// Set parameter values before executing the webhook.
	// Structure is documented below.
	SetParameterActions []InitialPromptFulfillmentSetParameterActionsObservation `json:"setParameterActions,omitempty" tf:"set_parameter_actions,omitempty"`

	// The tag used by the webhook to identify which fulfillment is being called. This field is required if webhook is specified.
	Tag *string `json:"tag,omitempty" tf:"tag,omitempty"`

	// The webhook to call. Format: projects//locations//agents//webhooks/.
	Webhook *string `json:"webhook,omitempty" tf:"webhook,omitempty"`
}

type InitialPromptFulfillmentParameters struct {

	// Conditional cases for this fulfillment.
	// Structure is documented below.
	// +kubebuilder:validation:Optional
	ConditionalCases []InitialPromptFulfillmentConditionalCasesParameters `json:"conditionalCases,omitempty" tf:"conditional_cases,omitempty"`

	// The list of rich message responses to present to the user.
	// Structure is documented below.
	// +kubebuilder:validation:Optional
	Messages []InitialPromptFulfillmentMessagesParameters `json:"messages,omitempty" tf:"messages,omitempty"`

	// Whether Dialogflow should return currently queued fulfillment response messages in streaming APIs. If a webhook is specified, it happens before Dialogflow invokes webhook. Warning: 1) This flag only affects streaming API. Responses are still queued and returned once in non-streaming API. 2) The flag can be enabled in any fulfillment but only the first 3 partial responses will be returned. You may only want to apply it to fulfillments that have slow webhooks.
	// +kubebuilder:validation:Optional
	ReturnPartialResponses *bool `json:"returnPartialResponses,omitempty" tf:"return_partial_responses,omitempty"`

	// Set parameter values before executing the webhook.
	// Structure is documented below.
	// +kubebuilder:validation:Optional
	SetParameterActions []InitialPromptFulfillmentSetParameterActionsParameters `json:"setParameterActions,omitempty" tf:"set_parameter_actions,omitempty"`

	// The tag used by the webhook to identify which fulfillment is being called. This field is required if webhook is specified.
	// +kubebuilder:validation:Optional
	Tag *string `json:"tag,omitempty" tf:"tag,omitempty"`

	// The webhook to call. Format: projects//locations//agents//webhooks/.
	// +kubebuilder:validation:Optional
	Webhook *string `json:"webhook,omitempty" tf:"webhook,omitempty"`
}

type InitialPromptFulfillmentSetParameterActionsInitParameters struct {

	// Display name of the parameter.
	Parameter *string `json:"parameter,omitempty" tf:"parameter,omitempty"`

	// The new JSON-encoded value of the parameter. A null value clears the parameter.
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type InitialPromptFulfillmentSetParameterActionsObservation struct {

	// Display name of the parameter.
	Parameter *string `json:"parameter,omitempty" tf:"parameter,omitempty"`

	// The new JSON-encoded value of the parameter. A null value clears the parameter.
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type InitialPromptFulfillmentSetParameterActionsParameters struct {

	// Display name of the parameter.
	// +kubebuilder:validation:Optional
	Parameter *string `json:"parameter,omitempty" tf:"parameter,omitempty"`

	// The new JSON-encoded value of the parameter. A null value clears the parameter.
	// +kubebuilder:validation:Optional
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type PageAdvancedSettingsDtmfSettingsInitParameters struct {

	// If true, incoming audio is processed for DTMF (dual tone multi frequency) events. For example, if the caller presses a button on their telephone keypad and DTMF processing is enabled, Dialogflow will detect the event (e.g. a "3" was pressed) in the incoming audio and pass the event to the bot to drive business logic (e.g. when 3 is pressed, return the account balance).
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// The digit that terminates a DTMF digit sequence.
	FinishDigit *string `json:"finishDigit,omitempty" tf:"finish_digit,omitempty"`

	// Max length of DTMF digits.
	MaxDigits *float64 `json:"maxDigits,omitempty" tf:"max_digits,omitempty"`
}

type PageAdvancedSettingsDtmfSettingsObservation struct {

	// If true, incoming audio is processed for DTMF (dual tone multi frequency) events. For example, if the caller presses a button on their telephone keypad and DTMF processing is enabled, Dialogflow will detect the event (e.g. a "3" was pressed) in the incoming audio and pass the event to the bot to drive business logic (e.g. when 3 is pressed, return the account balance).
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// The digit that terminates a DTMF digit sequence.
	FinishDigit *string `json:"finishDigit,omitempty" tf:"finish_digit,omitempty"`

	// Max length of DTMF digits.
	MaxDigits *float64 `json:"maxDigits,omitempty" tf:"max_digits,omitempty"`
}

type PageAdvancedSettingsDtmfSettingsParameters struct {

	// If true, incoming audio is processed for DTMF (dual tone multi frequency) events. For example, if the caller presses a button on their telephone keypad and DTMF processing is enabled, Dialogflow will detect the event (e.g. a "3" was pressed) in the incoming audio and pass the event to the bot to drive business logic (e.g. when 3 is pressed, return the account balance).
	// +kubebuilder:validation:Optional
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// The digit that terminates a DTMF digit sequence.
	// +kubebuilder:validation:Optional
	FinishDigit *string `json:"finishDigit,omitempty" tf:"finish_digit,omitempty"`

	// Max length of DTMF digits.
	// +kubebuilder:validation:Optional
	MaxDigits *float64 `json:"maxDigits,omitempty" tf:"max_digits,omitempty"`
}

type PageAdvancedSettingsInitParameters struct {

	// Define behaviors for DTMF (dual tone multi frequency). DTMF settings does not override each other. DTMF settings set at different levels define DTMF detections running in parallel. Exposed at the following levels:
	DtmfSettings []PageAdvancedSettingsDtmfSettingsInitParameters `json:"dtmfSettings,omitempty" tf:"dtmf_settings,omitempty"`
}

type PageAdvancedSettingsObservation struct {

	// Define behaviors for DTMF (dual tone multi frequency). DTMF settings does not override each other. DTMF settings set at different levels define DTMF detections running in parallel. Exposed at the following levels:
	DtmfSettings []PageAdvancedSettingsDtmfSettingsObservation `json:"dtmfSettings,omitempty" tf:"dtmf_settings,omitempty"`
}

type PageAdvancedSettingsParameters struct {

	// Define behaviors for DTMF (dual tone multi frequency). DTMF settings does not override each other. DTMF settings set at different levels define DTMF detections running in parallel. Exposed at the following levels:
	// +kubebuilder:validation:Optional
	DtmfSettings []PageAdvancedSettingsDtmfSettingsParameters `json:"dtmfSettings,omitempty" tf:"dtmf_settings,omitempty"`
}

type PageEventHandlersInitParameters struct {

	// The name of the event to handle.
	Event *string `json:"event,omitempty" tf:"event,omitempty"`

	// The target flow to transition to.
	// Format: projects//locations//agents//flows/.
	TargetFlow *string `json:"targetFlow,omitempty" tf:"target_flow,omitempty"`

	// The target page to transition to.
	// Format: projects//locations//agents//flows//pages/.
	TargetPage *string `json:"targetPage,omitempty" tf:"target_page,omitempty"`

	// The fulfillment to call when the event occurs. Handling webhook errors with a fulfillment enabled with webhook could cause infinite loop. It is invalid to specify such fulfillment for a handler handling webhooks.
	// Structure is documented below.
	TriggerFulfillment []EventHandlersTriggerFulfillmentInitParameters `json:"triggerFulfillment,omitempty" tf:"trigger_fulfillment,omitempty"`
}

type PageEventHandlersObservation struct {

	// The name of the event to handle.
	Event *string `json:"event,omitempty" tf:"event,omitempty"`

	// (Output)
	// The unique identifier of this event handler.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// The target flow to transition to.
	// Format: projects//locations//agents//flows/.
	TargetFlow *string `json:"targetFlow,omitempty" tf:"target_flow,omitempty"`

	// The target page to transition to.
	// Format: projects//locations//agents//flows//pages/.
	TargetPage *string `json:"targetPage,omitempty" tf:"target_page,omitempty"`

	// The fulfillment to call when the event occurs. Handling webhook errors with a fulfillment enabled with webhook could cause infinite loop. It is invalid to specify such fulfillment for a handler handling webhooks.
	// Structure is documented below.
	TriggerFulfillment []EventHandlersTriggerFulfillmentObservation `json:"triggerFulfillment,omitempty" tf:"trigger_fulfillment,omitempty"`
}

type PageEventHandlersParameters struct {

	// The name of the event to handle.
	// +kubebuilder:validation:Optional
	Event *string `json:"event,omitempty" tf:"event,omitempty"`

	// The target flow to transition to.
	// Format: projects//locations//agents//flows/.
	// +kubebuilder:validation:Optional
	TargetFlow *string `json:"targetFlow,omitempty" tf:"target_flow,omitempty"`

	// The target page to transition to.
	// Format: projects//locations//agents//flows//pages/.
	// +kubebuilder:validation:Optional
	TargetPage *string `json:"targetPage,omitempty" tf:"target_page,omitempty"`

	// The fulfillment to call when the event occurs. Handling webhook errors with a fulfillment enabled with webhook could cause infinite loop. It is invalid to specify such fulfillment for a handler handling webhooks.
	// Structure is documented below.
	// +kubebuilder:validation:Optional
	TriggerFulfillment []EventHandlersTriggerFulfillmentParameters `json:"triggerFulfillment,omitempty" tf:"trigger_fulfillment,omitempty"`
}

type PageInitParameters struct {

	// Hierarchical advanced settings for this page. The settings exposed at the lower level overrides the settings exposed at the higher level.
	// Hierarchy: Agent->Flow->Page->Fulfillment/Parameter.
	// Structure is documented below.
	AdvancedSettings []PageAdvancedSettingsInitParameters `json:"advancedSettings,omitempty" tf:"advanced_settings,omitempty"`

	// The human-readable name of the page, unique within the agent.
	DisplayName *string `json:"displayName,omitempty" tf:"display_name,omitempty"`

	// The fulfillment to call when the session is entering the page.
	// Structure is documented below.
	EntryFulfillment []EntryFulfillmentInitParameters `json:"entryFulfillment,omitempty" tf:"entry_fulfillment,omitempty"`

	// Handlers associated with the page to handle events such as webhook errors, no match or no input.
	// Structure is documented below.
	EventHandlers []PageEventHandlersInitParameters `json:"eventHandlers,omitempty" tf:"event_handlers,omitempty"`

	// The form associated with the page, used for collecting parameters relevant to the page.
	// Structure is documented below.
	Form []FormInitParameters `json:"form,omitempty" tf:"form,omitempty"`

	// The language of the following fields in page:
	// Page.entry_fulfillment.messages
	// Page.entry_fulfillment.conditional_cases
	// Page.event_handlers.trigger_fulfillment.messages
	// Page.event_handlers.trigger_fulfillment.conditional_cases
	// Page.form.parameters.fill_behavior.initial_prompt_fulfillment.messages
	// Page.form.parameters.fill_behavior.initial_prompt_fulfillment.conditional_cases
	// Page.form.parameters.fill_behavior.reprompt_event_handlers.messages
	// Page.form.parameters.fill_behavior.reprompt_event_handlers.conditional_cases
	// Page.transition_routes.trigger_fulfillment.messages
	// Page.transition_routes.trigger_fulfillment.conditional_cases
	// If not specified, the agent's default language is used. Many languages are supported. Note: languages must be enabled in the agent before they can be used.
	LanguageCode *string `json:"languageCode,omitempty" tf:"language_code,omitempty"`

	// The flow to create a page for.
	// Format: projects//locations//agents//flows/.
	// +crossplane:generate:reference:type=github.com/upbound/provider-gcp/apis/dialogflowcx/v1beta1.Agent
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractParamPath("start_flow",true)
	Parent *string `json:"parent,omitempty" tf:"parent,omitempty"`

	// Reference to a Agent in dialogflowcx to populate parent.
	// +kubebuilder:validation:Optional
	ParentRef *v1.Reference `json:"parentRef,omitempty" tf:"-"`

	// Selector for a Agent in dialogflowcx to populate parent.
	// +kubebuilder:validation:Optional
	ParentSelector *v1.Selector `json:"parentSelector,omitempty" tf:"-"`

	// Ordered list of TransitionRouteGroups associated with the page. Transition route groups must be unique within a page.
	// If multiple transition routes within a page scope refer to the same intent, then the precedence order is: page's transition route -> page's transition route group -> flow's transition routes.
	// If multiple transition route groups within a page contain the same intent, then the first group in the ordered list takes precedence.
	// Format:projects//locations//agents//flows//transitionRouteGroups/.
	TransitionRouteGroups []*string `json:"transitionRouteGroups,omitempty" tf:"transition_route_groups,omitempty"`

	// A list of transitions for the transition rules of this page. They route the conversation to another page in the same flow, or another flow.
	// When we are in a certain page, the TransitionRoutes are evalauted in the following order:
	// TransitionRoutes defined in the page with intent specified.
	// TransitionRoutes defined in the transition route groups with intent specified.
	// TransitionRoutes defined in flow with intent specified.
	// TransitionRoutes defined in the transition route groups with intent specified.
	// TransitionRoutes defined in the page with only condition specified.
	// TransitionRoutes defined in the transition route groups with only condition specified.
	// Structure is documented below.
	TransitionRoutes []PageTransitionRoutesInitParameters `json:"transitionRoutes,omitempty" tf:"transition_routes,omitempty"`
}

type PageObservation struct {

	// Hierarchical advanced settings for this page. The settings exposed at the lower level overrides the settings exposed at the higher level.
	// Hierarchy: Agent->Flow->Page->Fulfillment/Parameter.
	// Structure is documented below.
	AdvancedSettings []PageAdvancedSettingsObservation `json:"advancedSettings,omitempty" tf:"advanced_settings,omitempty"`

	// The human-readable name of the page, unique within the agent.
	DisplayName *string `json:"displayName,omitempty" tf:"display_name,omitempty"`

	// The fulfillment to call when the session is entering the page.
	// Structure is documented below.
	EntryFulfillment []EntryFulfillmentObservation `json:"entryFulfillment,omitempty" tf:"entry_fulfillment,omitempty"`

	// Handlers associated with the page to handle events such as webhook errors, no match or no input.
	// Structure is documented below.
	EventHandlers []PageEventHandlersObservation `json:"eventHandlers,omitempty" tf:"event_handlers,omitempty"`

	// The form associated with the page, used for collecting parameters relevant to the page.
	// Structure is documented below.
	Form []FormObservation `json:"form,omitempty" tf:"form,omitempty"`

	// an identifier for the resource with format {{parent}}/pages/{{name}}
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// The language of the following fields in page:
	// Page.entry_fulfillment.messages
	// Page.entry_fulfillment.conditional_cases
	// Page.event_handlers.trigger_fulfillment.messages
	// Page.event_handlers.trigger_fulfillment.conditional_cases
	// Page.form.parameters.fill_behavior.initial_prompt_fulfillment.messages
	// Page.form.parameters.fill_behavior.initial_prompt_fulfillment.conditional_cases
	// Page.form.parameters.fill_behavior.reprompt_event_handlers.messages
	// Page.form.parameters.fill_behavior.reprompt_event_handlers.conditional_cases
	// Page.transition_routes.trigger_fulfillment.messages
	// Page.transition_routes.trigger_fulfillment.conditional_cases
	// If not specified, the agent's default language is used. Many languages are supported. Note: languages must be enabled in the agent before they can be used.
	LanguageCode *string `json:"languageCode,omitempty" tf:"language_code,omitempty"`

	// The unique identifier of the page.
	// Format: projects//locations//agents//flows//pages/.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// The flow to create a page for.
	// Format: projects//locations//agents//flows/.
	Parent *string `json:"parent,omitempty" tf:"parent,omitempty"`

	// Ordered list of TransitionRouteGroups associated with the page. Transition route groups must be unique within a page.
	// If multiple transition routes within a page scope refer to the same intent, then the precedence order is: page's transition route -> page's transition route group -> flow's transition routes.
	// If multiple transition route groups within a page contain the same intent, then the first group in the ordered list takes precedence.
	// Format:projects//locations//agents//flows//transitionRouteGroups/.
	TransitionRouteGroups []*string `json:"transitionRouteGroups,omitempty" tf:"transition_route_groups,omitempty"`

	// A list of transitions for the transition rules of this page. They route the conversation to another page in the same flow, or another flow.
	// When we are in a certain page, the TransitionRoutes are evalauted in the following order:
	// TransitionRoutes defined in the page with intent specified.
	// TransitionRoutes defined in the transition route groups with intent specified.
	// TransitionRoutes defined in flow with intent specified.
	// TransitionRoutes defined in the transition route groups with intent specified.
	// TransitionRoutes defined in the page with only condition specified.
	// TransitionRoutes defined in the transition route groups with only condition specified.
	// Structure is documented below.
	TransitionRoutes []PageTransitionRoutesObservation `json:"transitionRoutes,omitempty" tf:"transition_routes,omitempty"`
}

type PageParameters struct {

	// Hierarchical advanced settings for this page. The settings exposed at the lower level overrides the settings exposed at the higher level.
	// Hierarchy: Agent->Flow->Page->Fulfillment/Parameter.
	// Structure is documented below.
	// +kubebuilder:validation:Optional
	AdvancedSettings []PageAdvancedSettingsParameters `json:"advancedSettings,omitempty" tf:"advanced_settings,omitempty"`

	// The human-readable name of the page, unique within the agent.
	// +kubebuilder:validation:Optional
	DisplayName *string `json:"displayName,omitempty" tf:"display_name,omitempty"`

	// The fulfillment to call when the session is entering the page.
	// Structure is documented below.
	// +kubebuilder:validation:Optional
	EntryFulfillment []EntryFulfillmentParameters `json:"entryFulfillment,omitempty" tf:"entry_fulfillment,omitempty"`

	// Handlers associated with the page to handle events such as webhook errors, no match or no input.
	// Structure is documented below.
	// +kubebuilder:validation:Optional
	EventHandlers []PageEventHandlersParameters `json:"eventHandlers,omitempty" tf:"event_handlers,omitempty"`

	// The form associated with the page, used for collecting parameters relevant to the page.
	// Structure is documented below.
	// +kubebuilder:validation:Optional
	Form []FormParameters `json:"form,omitempty" tf:"form,omitempty"`

	// The language of the following fields in page:
	// Page.entry_fulfillment.messages
	// Page.entry_fulfillment.conditional_cases
	// Page.event_handlers.trigger_fulfillment.messages
	// Page.event_handlers.trigger_fulfillment.conditional_cases
	// Page.form.parameters.fill_behavior.initial_prompt_fulfillment.messages
	// Page.form.parameters.fill_behavior.initial_prompt_fulfillment.conditional_cases
	// Page.form.parameters.fill_behavior.reprompt_event_handlers.messages
	// Page.form.parameters.fill_behavior.reprompt_event_handlers.conditional_cases
	// Page.transition_routes.trigger_fulfillment.messages
	// Page.transition_routes.trigger_fulfillment.conditional_cases
	// If not specified, the agent's default language is used. Many languages are supported. Note: languages must be enabled in the agent before they can be used.
	// +kubebuilder:validation:Optional
	LanguageCode *string `json:"languageCode,omitempty" tf:"language_code,omitempty"`

	// The flow to create a page for.
	// Format: projects//locations//agents//flows/.
	// +crossplane:generate:reference:type=github.com/upbound/provider-gcp/apis/dialogflowcx/v1beta1.Agent
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractParamPath("start_flow",true)
	// +kubebuilder:validation:Optional
	Parent *string `json:"parent,omitempty" tf:"parent,omitempty"`

	// Reference to a Agent in dialogflowcx to populate parent.
	// +kubebuilder:validation:Optional
	ParentRef *v1.Reference `json:"parentRef,omitempty" tf:"-"`

	// Selector for a Agent in dialogflowcx to populate parent.
	// +kubebuilder:validation:Optional
	ParentSelector *v1.Selector `json:"parentSelector,omitempty" tf:"-"`

	// Ordered list of TransitionRouteGroups associated with the page. Transition route groups must be unique within a page.
	// If multiple transition routes within a page scope refer to the same intent, then the precedence order is: page's transition route -> page's transition route group -> flow's transition routes.
	// If multiple transition route groups within a page contain the same intent, then the first group in the ordered list takes precedence.
	// Format:projects//locations//agents//flows//transitionRouteGroups/.
	// +kubebuilder:validation:Optional
	TransitionRouteGroups []*string `json:"transitionRouteGroups,omitempty" tf:"transition_route_groups,omitempty"`

	// A list of transitions for the transition rules of this page. They route the conversation to another page in the same flow, or another flow.
	// When we are in a certain page, the TransitionRoutes are evalauted in the following order:
	// TransitionRoutes defined in the page with intent specified.
	// TransitionRoutes defined in the transition route groups with intent specified.
	// TransitionRoutes defined in flow with intent specified.
	// TransitionRoutes defined in the transition route groups with intent specified.
	// TransitionRoutes defined in the page with only condition specified.
	// TransitionRoutes defined in the transition route groups with only condition specified.
	// Structure is documented below.
	// +kubebuilder:validation:Optional
	TransitionRoutes []PageTransitionRoutesParameters `json:"transitionRoutes,omitempty" tf:"transition_routes,omitempty"`
}

type PageTransitionRoutesInitParameters struct {

	// The condition to evaluate against form parameters or session parameters.
	// At least one of intent or condition must be specified. When both intent and condition are specified, the transition can only happen when both are fulfilled.
	Condition *string `json:"condition,omitempty" tf:"condition,omitempty"`

	// The unique identifier of an Intent.
	// Format: projects//locations//agents//intents/. Indicates that the transition can only happen when the given intent is matched. At least one of intent or condition must be specified. When both intent and condition are specified, the transition can only happen when both are fulfilled.
	Intent *string `json:"intent,omitempty" tf:"intent,omitempty"`

	// The target flow to transition to.
	// Format: projects//locations//agents//flows/.
	TargetFlow *string `json:"targetFlow,omitempty" tf:"target_flow,omitempty"`

	// The target page to transition to.
	// Format: projects//locations//agents//flows//pages/.
	// +crossplane:generate:reference:type=github.com/upbound/provider-gcp/apis/dialogflowcx/v1beta1.Page
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractResourceID()
	TargetPage *string `json:"targetPage,omitempty" tf:"target_page,omitempty"`

	// Reference to a Page in dialogflowcx to populate targetPage.
	// +kubebuilder:validation:Optional
	TargetPageRef *v1.Reference `json:"targetPageRef,omitempty" tf:"-"`

	// Selector for a Page in dialogflowcx to populate targetPage.
	// +kubebuilder:validation:Optional
	TargetPageSelector *v1.Selector `json:"targetPageSelector,omitempty" tf:"-"`

	// The fulfillment to call when the condition is satisfied. At least one of triggerFulfillment and target must be specified. When both are defined, triggerFulfillment is executed first.
	// Structure is documented below.
	TriggerFulfillment []PageTransitionRoutesTriggerFulfillmentInitParameters `json:"triggerFulfillment,omitempty" tf:"trigger_fulfillment,omitempty"`
}

type PageTransitionRoutesObservation struct {

	// The condition to evaluate against form parameters or session parameters.
	// At least one of intent or condition must be specified. When both intent and condition are specified, the transition can only happen when both are fulfilled.
	Condition *string `json:"condition,omitempty" tf:"condition,omitempty"`

	// The unique identifier of an Intent.
	// Format: projects//locations//agents//intents/. Indicates that the transition can only happen when the given intent is matched. At least one of intent or condition must be specified. When both intent and condition are specified, the transition can only happen when both are fulfilled.
	Intent *string `json:"intent,omitempty" tf:"intent,omitempty"`

	// (Output)
	// The unique identifier of this transition route.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// The target flow to transition to.
	// Format: projects//locations//agents//flows/.
	TargetFlow *string `json:"targetFlow,omitempty" tf:"target_flow,omitempty"`

	// The target page to transition to.
	// Format: projects//locations//agents//flows//pages/.
	TargetPage *string `json:"targetPage,omitempty" tf:"target_page,omitempty"`

	// The fulfillment to call when the condition is satisfied. At least one of triggerFulfillment and target must be specified. When both are defined, triggerFulfillment is executed first.
	// Structure is documented below.
	TriggerFulfillment []PageTransitionRoutesTriggerFulfillmentObservation `json:"triggerFulfillment,omitempty" tf:"trigger_fulfillment,omitempty"`
}

type PageTransitionRoutesParameters struct {

	// The condition to evaluate against form parameters or session parameters.
	// At least one of intent or condition must be specified. When both intent and condition are specified, the transition can only happen when both are fulfilled.
	// +kubebuilder:validation:Optional
	Condition *string `json:"condition,omitempty" tf:"condition,omitempty"`

	// The unique identifier of an Intent.
	// Format: projects//locations//agents//intents/. Indicates that the transition can only happen when the given intent is matched. At least one of intent or condition must be specified. When both intent and condition are specified, the transition can only happen when both are fulfilled.
	// +kubebuilder:validation:Optional
	Intent *string `json:"intent,omitempty" tf:"intent,omitempty"`

	// The target flow to transition to.
	// Format: projects//locations//agents//flows/.
	// +kubebuilder:validation:Optional
	TargetFlow *string `json:"targetFlow,omitempty" tf:"target_flow,omitempty"`

	// The target page to transition to.
	// Format: projects//locations//agents//flows//pages/.
	// +crossplane:generate:reference:type=github.com/upbound/provider-gcp/apis/dialogflowcx/v1beta1.Page
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	TargetPage *string `json:"targetPage,omitempty" tf:"target_page,omitempty"`

	// Reference to a Page in dialogflowcx to populate targetPage.
	// +kubebuilder:validation:Optional
	TargetPageRef *v1.Reference `json:"targetPageRef,omitempty" tf:"-"`

	// Selector for a Page in dialogflowcx to populate targetPage.
	// +kubebuilder:validation:Optional
	TargetPageSelector *v1.Selector `json:"targetPageSelector,omitempty" tf:"-"`

	// The fulfillment to call when the condition is satisfied. At least one of triggerFulfillment and target must be specified. When both are defined, triggerFulfillment is executed first.
	// Structure is documented below.
	// +kubebuilder:validation:Optional
	TriggerFulfillment []PageTransitionRoutesTriggerFulfillmentParameters `json:"triggerFulfillment,omitempty" tf:"trigger_fulfillment,omitempty"`
}

type PageTransitionRoutesTriggerFulfillmentInitParameters struct {

	// Conditional cases for this fulfillment.
	// Structure is documented below.
	ConditionalCases []TransitionRoutesTriggerFulfillmentConditionalCasesInitParameters `json:"conditionalCases,omitempty" tf:"conditional_cases,omitempty"`

	// The list of rich message responses to present to the user.
	// Structure is documented below.
	Messages []TransitionRoutesTriggerFulfillmentMessagesInitParameters `json:"messages,omitempty" tf:"messages,omitempty"`

	// Whether Dialogflow should return currently queued fulfillment response messages in streaming APIs. If a webhook is specified, it happens before Dialogflow invokes webhook. Warning: 1) This flag only affects streaming API. Responses are still queued and returned once in non-streaming API. 2) The flag can be enabled in any fulfillment but only the first 3 partial responses will be returned. You may only want to apply it to fulfillments that have slow webhooks.
	ReturnPartialResponses *bool `json:"returnPartialResponses,omitempty" tf:"return_partial_responses,omitempty"`

	// Set parameter values before executing the webhook.
	// Structure is documented below.
	SetParameterActions []TransitionRoutesTriggerFulfillmentSetParameterActionsInitParameters `json:"setParameterActions,omitempty" tf:"set_parameter_actions,omitempty"`

	// The tag used by the webhook to identify which fulfillment is being called. This field is required if webhook is specified.
	Tag *string `json:"tag,omitempty" tf:"tag,omitempty"`

	// The webhook to call. Format: projects//locations//agents//webhooks/.
	Webhook *string `json:"webhook,omitempty" tf:"webhook,omitempty"`
}

type PageTransitionRoutesTriggerFulfillmentObservation struct {

	// Conditional cases for this fulfillment.
	// Structure is documented below.
	ConditionalCases []TransitionRoutesTriggerFulfillmentConditionalCasesObservation `json:"conditionalCases,omitempty" tf:"conditional_cases,omitempty"`

	// The list of rich message responses to present to the user.
	// Structure is documented below.
	Messages []TransitionRoutesTriggerFulfillmentMessagesObservation `json:"messages,omitempty" tf:"messages,omitempty"`

	// Whether Dialogflow should return currently queued fulfillment response messages in streaming APIs. If a webhook is specified, it happens before Dialogflow invokes webhook. Warning: 1) This flag only affects streaming API. Responses are still queued and returned once in non-streaming API. 2) The flag can be enabled in any fulfillment but only the first 3 partial responses will be returned. You may only want to apply it to fulfillments that have slow webhooks.
	ReturnPartialResponses *bool `json:"returnPartialResponses,omitempty" tf:"return_partial_responses,omitempty"`

	// Set parameter values before executing the webhook.
	// Structure is documented below.
	SetParameterActions []TransitionRoutesTriggerFulfillmentSetParameterActionsObservation `json:"setParameterActions,omitempty" tf:"set_parameter_actions,omitempty"`

	// The tag used by the webhook to identify which fulfillment is being called. This field is required if webhook is specified.
	Tag *string `json:"tag,omitempty" tf:"tag,omitempty"`

	// The webhook to call. Format: projects//locations//agents//webhooks/.
	Webhook *string `json:"webhook,omitempty" tf:"webhook,omitempty"`
}

type PageTransitionRoutesTriggerFulfillmentParameters struct {

	// Conditional cases for this fulfillment.
	// Structure is documented below.
	// +kubebuilder:validation:Optional
	ConditionalCases []TransitionRoutesTriggerFulfillmentConditionalCasesParameters `json:"conditionalCases,omitempty" tf:"conditional_cases,omitempty"`

	// The list of rich message responses to present to the user.
	// Structure is documented below.
	// +kubebuilder:validation:Optional
	Messages []TransitionRoutesTriggerFulfillmentMessagesParameters `json:"messages,omitempty" tf:"messages,omitempty"`

	// Whether Dialogflow should return currently queued fulfillment response messages in streaming APIs. If a webhook is specified, it happens before Dialogflow invokes webhook. Warning: 1) This flag only affects streaming API. Responses are still queued and returned once in non-streaming API. 2) The flag can be enabled in any fulfillment but only the first 3 partial responses will be returned. You may only want to apply it to fulfillments that have slow webhooks.
	// +kubebuilder:validation:Optional
	ReturnPartialResponses *bool `json:"returnPartialResponses,omitempty" tf:"return_partial_responses,omitempty"`

	// Set parameter values before executing the webhook.
	// Structure is documented below.
	// +kubebuilder:validation:Optional
	SetParameterActions []TransitionRoutesTriggerFulfillmentSetParameterActionsParameters `json:"setParameterActions,omitempty" tf:"set_parameter_actions,omitempty"`

	// The tag used by the webhook to identify which fulfillment is being called. This field is required if webhook is specified.
	// +kubebuilder:validation:Optional
	Tag *string `json:"tag,omitempty" tf:"tag,omitempty"`

	// The webhook to call. Format: projects//locations//agents//webhooks/.
	// +kubebuilder:validation:Optional
	Webhook *string `json:"webhook,omitempty" tf:"webhook,omitempty"`
}

type ParametersAdvancedSettingsDtmfSettingsInitParameters struct {

	// If true, incoming audio is processed for DTMF (dual tone multi frequency) events. For example, if the caller presses a button on their telephone keypad and DTMF processing is enabled, Dialogflow will detect the event (e.g. a "3" was pressed) in the incoming audio and pass the event to the bot to drive business logic (e.g. when 3 is pressed, return the account balance).
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// The digit that terminates a DTMF digit sequence.
	FinishDigit *string `json:"finishDigit,omitempty" tf:"finish_digit,omitempty"`

	// Max length of DTMF digits.
	MaxDigits *float64 `json:"maxDigits,omitempty" tf:"max_digits,omitempty"`
}

type ParametersAdvancedSettingsDtmfSettingsObservation struct {

	// If true, incoming audio is processed for DTMF (dual tone multi frequency) events. For example, if the caller presses a button on their telephone keypad and DTMF processing is enabled, Dialogflow will detect the event (e.g. a "3" was pressed) in the incoming audio and pass the event to the bot to drive business logic (e.g. when 3 is pressed, return the account balance).
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// The digit that terminates a DTMF digit sequence.
	FinishDigit *string `json:"finishDigit,omitempty" tf:"finish_digit,omitempty"`

	// Max length of DTMF digits.
	MaxDigits *float64 `json:"maxDigits,omitempty" tf:"max_digits,omitempty"`
}

type ParametersAdvancedSettingsDtmfSettingsParameters struct {

	// If true, incoming audio is processed for DTMF (dual tone multi frequency) events. For example, if the caller presses a button on their telephone keypad and DTMF processing is enabled, Dialogflow will detect the event (e.g. a "3" was pressed) in the incoming audio and pass the event to the bot to drive business logic (e.g. when 3 is pressed, return the account balance).
	// +kubebuilder:validation:Optional
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// The digit that terminates a DTMF digit sequence.
	// +kubebuilder:validation:Optional
	FinishDigit *string `json:"finishDigit,omitempty" tf:"finish_digit,omitempty"`

	// Max length of DTMF digits.
	// +kubebuilder:validation:Optional
	MaxDigits *float64 `json:"maxDigits,omitempty" tf:"max_digits,omitempty"`
}

type ParametersAdvancedSettingsInitParameters struct {

	// Define behaviors for DTMF (dual tone multi frequency). DTMF settings does not override each other. DTMF settings set at different levels define DTMF detections running in parallel. Exposed at the following levels:
	DtmfSettings []ParametersAdvancedSettingsDtmfSettingsInitParameters `json:"dtmfSettings,omitempty" tf:"dtmf_settings,omitempty"`
}

type ParametersAdvancedSettingsObservation struct {

	// Define behaviors for DTMF (dual tone multi frequency). DTMF settings does not override each other. DTMF settings set at different levels define DTMF detections running in parallel. Exposed at the following levels:
	DtmfSettings []ParametersAdvancedSettingsDtmfSettingsObservation `json:"dtmfSettings,omitempty" tf:"dtmf_settings,omitempty"`
}

type ParametersAdvancedSettingsParameters struct {

	// Define behaviors for DTMF (dual tone multi frequency). DTMF settings does not override each other. DTMF settings set at different levels define DTMF detections running in parallel. Exposed at the following levels:
	// +kubebuilder:validation:Optional
	DtmfSettings []ParametersAdvancedSettingsDtmfSettingsParameters `json:"dtmfSettings,omitempty" tf:"dtmf_settings,omitempty"`
}

type RepromptEventHandlersInitParameters struct {

	// The name of the event to handle.
	Event *string `json:"event,omitempty" tf:"event,omitempty"`

	// The target flow to transition to.
	// Format: projects//locations//agents//flows/.
	// +crossplane:generate:reference:type=github.com/upbound/provider-gcp/apis/dialogflowcx/v1beta1.Agent
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractParamPath("start_flow",true)
	TargetFlow *string `json:"targetFlow,omitempty" tf:"target_flow,omitempty"`

	// Reference to a Agent in dialogflowcx to populate targetFlow.
	// +kubebuilder:validation:Optional
	TargetFlowRef *v1.Reference `json:"targetFlowRef,omitempty" tf:"-"`

	// Selector for a Agent in dialogflowcx to populate targetFlow.
	// +kubebuilder:validation:Optional
	TargetFlowSelector *v1.Selector `json:"targetFlowSelector,omitempty" tf:"-"`

	// The target page to transition to.
	// Format: projects//locations//agents//flows//pages/.
	// +crossplane:generate:reference:type=github.com/upbound/provider-gcp/apis/dialogflowcx/v1beta1.Page
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractResourceID()
	TargetPage *string `json:"targetPage,omitempty" tf:"target_page,omitempty"`

	// Reference to a Page in dialogflowcx to populate targetPage.
	// +kubebuilder:validation:Optional
	TargetPageRef *v1.Reference `json:"targetPageRef,omitempty" tf:"-"`

	// Selector for a Page in dialogflowcx to populate targetPage.
	// +kubebuilder:validation:Optional
	TargetPageSelector *v1.Selector `json:"targetPageSelector,omitempty" tf:"-"`

	// The fulfillment to call when the condition is satisfied. At least one of triggerFulfillment and target must be specified. When both are defined, triggerFulfillment is executed first.
	// Structure is documented below.
	TriggerFulfillment []RepromptEventHandlersTriggerFulfillmentInitParameters `json:"triggerFulfillment,omitempty" tf:"trigger_fulfillment,omitempty"`
}

type RepromptEventHandlersObservation struct {

	// The name of the event to handle.
	Event *string `json:"event,omitempty" tf:"event,omitempty"`

	// (Output)
	// The unique identifier of this transition route.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// The target flow to transition to.
	// Format: projects//locations//agents//flows/.
	TargetFlow *string `json:"targetFlow,omitempty" tf:"target_flow,omitempty"`

	// The target page to transition to.
	// Format: projects//locations//agents//flows//pages/.
	TargetPage *string `json:"targetPage,omitempty" tf:"target_page,omitempty"`

	// The fulfillment to call when the condition is satisfied. At least one of triggerFulfillment and target must be specified. When both are defined, triggerFulfillment is executed first.
	// Structure is documented below.
	TriggerFulfillment []RepromptEventHandlersTriggerFulfillmentObservation `json:"triggerFulfillment,omitempty" tf:"trigger_fulfillment,omitempty"`
}

type RepromptEventHandlersParameters struct {

	// The name of the event to handle.
	// +kubebuilder:validation:Optional
	Event *string `json:"event,omitempty" tf:"event,omitempty"`

	// The target flow to transition to.
	// Format: projects//locations//agents//flows/.
	// +crossplane:generate:reference:type=github.com/upbound/provider-gcp/apis/dialogflowcx/v1beta1.Agent
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractParamPath("start_flow",true)
	// +kubebuilder:validation:Optional
	TargetFlow *string `json:"targetFlow,omitempty" tf:"target_flow,omitempty"`

	// Reference to a Agent in dialogflowcx to populate targetFlow.
	// +kubebuilder:validation:Optional
	TargetFlowRef *v1.Reference `json:"targetFlowRef,omitempty" tf:"-"`

	// Selector for a Agent in dialogflowcx to populate targetFlow.
	// +kubebuilder:validation:Optional
	TargetFlowSelector *v1.Selector `json:"targetFlowSelector,omitempty" tf:"-"`

	// The target page to transition to.
	// Format: projects//locations//agents//flows//pages/.
	// +crossplane:generate:reference:type=github.com/upbound/provider-gcp/apis/dialogflowcx/v1beta1.Page
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	TargetPage *string `json:"targetPage,omitempty" tf:"target_page,omitempty"`

	// Reference to a Page in dialogflowcx to populate targetPage.
	// +kubebuilder:validation:Optional
	TargetPageRef *v1.Reference `json:"targetPageRef,omitempty" tf:"-"`

	// Selector for a Page in dialogflowcx to populate targetPage.
	// +kubebuilder:validation:Optional
	TargetPageSelector *v1.Selector `json:"targetPageSelector,omitempty" tf:"-"`

	// The fulfillment to call when the condition is satisfied. At least one of triggerFulfillment and target must be specified. When both are defined, triggerFulfillment is executed first.
	// Structure is documented below.
	// +kubebuilder:validation:Optional
	TriggerFulfillment []RepromptEventHandlersTriggerFulfillmentParameters `json:"triggerFulfillment,omitempty" tf:"trigger_fulfillment,omitempty"`
}

type RepromptEventHandlersTriggerFulfillmentConditionalCasesInitParameters struct {

	// A JSON encoded list of cascading if-else conditions. Cases are mutually exclusive. The first one with a matching condition is selected, all the rest ignored.
	// See Case for the schema.
	Cases *string `json:"cases,omitempty" tf:"cases,omitempty"`
}

type RepromptEventHandlersTriggerFulfillmentConditionalCasesObservation struct {

	// A JSON encoded list of cascading if-else conditions. Cases are mutually exclusive. The first one with a matching condition is selected, all the rest ignored.
	// See Case for the schema.
	Cases *string `json:"cases,omitempty" tf:"cases,omitempty"`
}

type RepromptEventHandlersTriggerFulfillmentConditionalCasesParameters struct {

	// A JSON encoded list of cascading if-else conditions. Cases are mutually exclusive. The first one with a matching condition is selected, all the rest ignored.
	// See Case for the schema.
	// +kubebuilder:validation:Optional
	Cases *string `json:"cases,omitempty" tf:"cases,omitempty"`
}

type RepromptEventHandlersTriggerFulfillmentInitParameters struct {

	// Conditional cases for this fulfillment.
	// Structure is documented below.
	ConditionalCases []RepromptEventHandlersTriggerFulfillmentConditionalCasesInitParameters `json:"conditionalCases,omitempty" tf:"conditional_cases,omitempty"`

	// The list of rich message responses to present to the user.
	// Structure is documented below.
	Messages []RepromptEventHandlersTriggerFulfillmentMessagesInitParameters `json:"messages,omitempty" tf:"messages,omitempty"`

	// Whether Dialogflow should return currently queued fulfillment response messages in streaming APIs. If a webhook is specified, it happens before Dialogflow invokes webhook. Warning: 1) This flag only affects streaming API. Responses are still queued and returned once in non-streaming API. 2) The flag can be enabled in any fulfillment but only the first 3 partial responses will be returned. You may only want to apply it to fulfillments that have slow webhooks.
	ReturnPartialResponses *bool `json:"returnPartialResponses,omitempty" tf:"return_partial_responses,omitempty"`

	// Set parameter values before executing the webhook.
	// Structure is documented below.
	SetParameterActions []RepromptEventHandlersTriggerFulfillmentSetParameterActionsInitParameters `json:"setParameterActions,omitempty" tf:"set_parameter_actions,omitempty"`

	// The tag used by the webhook to identify which fulfillment is being called. This field is required if webhook is specified.
	Tag *string `json:"tag,omitempty" tf:"tag,omitempty"`

	// The webhook to call. Format: projects//locations//agents//webhooks/.
	// +crossplane:generate:reference:type=github.com/upbound/provider-gcp/apis/dialogflowcx/v1beta1.Webhook
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractResourceID()
	Webhook *string `json:"webhook,omitempty" tf:"webhook,omitempty"`

	// Reference to a Webhook in dialogflowcx to populate webhook.
	// +kubebuilder:validation:Optional
	WebhookRef *v1.Reference `json:"webhookRef,omitempty" tf:"-"`

	// Selector for a Webhook in dialogflowcx to populate webhook.
	// +kubebuilder:validation:Optional
	WebhookSelector *v1.Selector `json:"webhookSelector,omitempty" tf:"-"`
}

type RepromptEventHandlersTriggerFulfillmentMessagesConversationSuccessInitParameters struct {

	// Custom metadata. Dialogflow doesn't impose any structure on this.
	Metadata *string `json:"metadata,omitempty" tf:"metadata,omitempty"`
}

type RepromptEventHandlersTriggerFulfillmentMessagesConversationSuccessObservation struct {

	// Custom metadata. Dialogflow doesn't impose any structure on this.
	Metadata *string `json:"metadata,omitempty" tf:"metadata,omitempty"`
}

type RepromptEventHandlersTriggerFulfillmentMessagesConversationSuccessParameters struct {

	// Custom metadata. Dialogflow doesn't impose any structure on this.
	// +kubebuilder:validation:Optional
	Metadata *string `json:"metadata,omitempty" tf:"metadata,omitempty"`
}

type RepromptEventHandlersTriggerFulfillmentMessagesInitParameters struct {

	// The channel which the response is associated with. Clients can specify the channel via QueryParameters.channel, and only associated channel response will be returned.
	Channel *string `json:"channel,omitempty" tf:"channel,omitempty"`

	// Indicates that the conversation succeeded, i.e., the bot handled the issue that the customer talked to it about.
	// Dialogflow only uses this to determine which conversations should be counted as successful and doesn't process the metadata in this message in any way. Note that Dialogflow also considers conversations that get to the conversation end page as successful even if they don't return ConversationSuccess.
	// You may set this, for example:
	ConversationSuccess []RepromptEventHandlersTriggerFulfillmentMessagesConversationSuccessInitParameters `json:"conversationSuccess,omitempty" tf:"conversation_success,omitempty"`

	// Indicates that the conversation should be handed off to a live agent.
	// Dialogflow only uses this to determine which conversations were handed off to a human agent for measurement purposes. What else to do with this signal is up to you and your handoff procedures.
	// You may set this, for example:
	LiveAgentHandoff []RepromptEventHandlersTriggerFulfillmentMessagesLiveAgentHandoffInitParameters `json:"liveAgentHandoff,omitempty" tf:"live_agent_handoff,omitempty"`

	// A text or ssml response that is preferentially used for TTS output audio synthesis, as described in the comment on the ResponseMessage message.
	// Structure is documented below.
	OutputAudioText []RepromptEventHandlersTriggerFulfillmentMessagesOutputAudioTextInitParameters `json:"outputAudioText,omitempty" tf:"output_audio_text,omitempty"`

	// A custom, platform-specific payload.
	Payload *string `json:"payload,omitempty" tf:"payload,omitempty"`

	// Specifies an audio clip to be played by the client as part of the response.
	// Structure is documented below.
	PlayAudio []RepromptEventHandlersTriggerFulfillmentMessagesPlayAudioInitParameters `json:"playAudio,omitempty" tf:"play_audio,omitempty"`

	// Represents the signal that telles the client to transfer the phone call connected to the agent to a third-party endpoint.
	// Structure is documented below.
	TelephonyTransferCall []RepromptEventHandlersTriggerFulfillmentMessagesTelephonyTransferCallInitParameters `json:"telephonyTransferCall,omitempty" tf:"telephony_transfer_call,omitempty"`

	// A collection of text responses.
	Text []RepromptEventHandlersTriggerFulfillmentMessagesTextInitParameters `json:"text,omitempty" tf:"text,omitempty"`
}

type RepromptEventHandlersTriggerFulfillmentMessagesLiveAgentHandoffInitParameters struct {

	// Custom metadata. Dialogflow doesn't impose any structure on this.
	Metadata *string `json:"metadata,omitempty" tf:"metadata,omitempty"`
}

type RepromptEventHandlersTriggerFulfillmentMessagesLiveAgentHandoffObservation struct {

	// Custom metadata. Dialogflow doesn't impose any structure on this.
	Metadata *string `json:"metadata,omitempty" tf:"metadata,omitempty"`
}

type RepromptEventHandlersTriggerFulfillmentMessagesLiveAgentHandoffParameters struct {

	// Custom metadata. Dialogflow doesn't impose any structure on this.
	// +kubebuilder:validation:Optional
	Metadata *string `json:"metadata,omitempty" tf:"metadata,omitempty"`
}

type RepromptEventHandlersTriggerFulfillmentMessagesObservation struct {

	// The channel which the response is associated with. Clients can specify the channel via QueryParameters.channel, and only associated channel response will be returned.
	Channel *string `json:"channel,omitempty" tf:"channel,omitempty"`

	// Indicates that the conversation succeeded, i.e., the bot handled the issue that the customer talked to it about.
	// Dialogflow only uses this to determine which conversations should be counted as successful and doesn't process the metadata in this message in any way. Note that Dialogflow also considers conversations that get to the conversation end page as successful even if they don't return ConversationSuccess.
	// You may set this, for example:
	ConversationSuccess []RepromptEventHandlersTriggerFulfillmentMessagesConversationSuccessObservation `json:"conversationSuccess,omitempty" tf:"conversation_success,omitempty"`

	// Indicates that the conversation should be handed off to a live agent.
	// Dialogflow only uses this to determine which conversations were handed off to a human agent for measurement purposes. What else to do with this signal is up to you and your handoff procedures.
	// You may set this, for example:
	LiveAgentHandoff []RepromptEventHandlersTriggerFulfillmentMessagesLiveAgentHandoffObservation `json:"liveAgentHandoff,omitempty" tf:"live_agent_handoff,omitempty"`

	// A text or ssml response that is preferentially used for TTS output audio synthesis, as described in the comment on the ResponseMessage message.
	// Structure is documented below.
	OutputAudioText []RepromptEventHandlersTriggerFulfillmentMessagesOutputAudioTextObservation `json:"outputAudioText,omitempty" tf:"output_audio_text,omitempty"`

	// A custom, platform-specific payload.
	Payload *string `json:"payload,omitempty" tf:"payload,omitempty"`

	// Specifies an audio clip to be played by the client as part of the response.
	// Structure is documented below.
	PlayAudio []RepromptEventHandlersTriggerFulfillmentMessagesPlayAudioObservation `json:"playAudio,omitempty" tf:"play_audio,omitempty"`

	// Represents the signal that telles the client to transfer the phone call connected to the agent to a third-party endpoint.
	// Structure is documented below.
	TelephonyTransferCall []RepromptEventHandlersTriggerFulfillmentMessagesTelephonyTransferCallObservation `json:"telephonyTransferCall,omitempty" tf:"telephony_transfer_call,omitempty"`

	// A collection of text responses.
	Text []RepromptEventHandlersTriggerFulfillmentMessagesTextObservation `json:"text,omitempty" tf:"text,omitempty"`
}

type RepromptEventHandlersTriggerFulfillmentMessagesOutputAudioTextInitParameters struct {

	// The SSML text to be synthesized. For more information, see SSML.
	Ssml *string `json:"ssml,omitempty" tf:"ssml,omitempty"`

	// A collection of text responses.
	Text *string `json:"text,omitempty" tf:"text,omitempty"`
}

type RepromptEventHandlersTriggerFulfillmentMessagesOutputAudioTextObservation struct {

	// (Output)
	// Whether the playback of this message can be interrupted by the end user's speech and the client can then starts the next Dialogflow request.
	AllowPlaybackInterruption *bool `json:"allowPlaybackInterruption,omitempty" tf:"allow_playback_interruption,omitempty"`

	// The SSML text to be synthesized. For more information, see SSML.
	Ssml *string `json:"ssml,omitempty" tf:"ssml,omitempty"`

	// A collection of text responses.
	Text *string `json:"text,omitempty" tf:"text,omitempty"`
}

type RepromptEventHandlersTriggerFulfillmentMessagesOutputAudioTextParameters struct {

	// The SSML text to be synthesized. For more information, see SSML.
	// +kubebuilder:validation:Optional
	Ssml *string `json:"ssml,omitempty" tf:"ssml,omitempty"`

	// A collection of text responses.
	// +kubebuilder:validation:Optional
	Text *string `json:"text,omitempty" tf:"text,omitempty"`
}

type RepromptEventHandlersTriggerFulfillmentMessagesParameters struct {

	// The channel which the response is associated with. Clients can specify the channel via QueryParameters.channel, and only associated channel response will be returned.
	// +kubebuilder:validation:Optional
	Channel *string `json:"channel,omitempty" tf:"channel,omitempty"`

	// Indicates that the conversation succeeded, i.e., the bot handled the issue that the customer talked to it about.
	// Dialogflow only uses this to determine which conversations should be counted as successful and doesn't process the metadata in this message in any way. Note that Dialogflow also considers conversations that get to the conversation end page as successful even if they don't return ConversationSuccess.
	// You may set this, for example:
	// +kubebuilder:validation:Optional
	ConversationSuccess []RepromptEventHandlersTriggerFulfillmentMessagesConversationSuccessParameters `json:"conversationSuccess,omitempty" tf:"conversation_success,omitempty"`

	// Indicates that the conversation should be handed off to a live agent.
	// Dialogflow only uses this to determine which conversations were handed off to a human agent for measurement purposes. What else to do with this signal is up to you and your handoff procedures.
	// You may set this, for example:
	// +kubebuilder:validation:Optional
	LiveAgentHandoff []RepromptEventHandlersTriggerFulfillmentMessagesLiveAgentHandoffParameters `json:"liveAgentHandoff,omitempty" tf:"live_agent_handoff,omitempty"`

	// A text or ssml response that is preferentially used for TTS output audio synthesis, as described in the comment on the ResponseMessage message.
	// Structure is documented below.
	// +kubebuilder:validation:Optional
	OutputAudioText []RepromptEventHandlersTriggerFulfillmentMessagesOutputAudioTextParameters `json:"outputAudioText,omitempty" tf:"output_audio_text,omitempty"`

	// A custom, platform-specific payload.
	// +kubebuilder:validation:Optional
	Payload *string `json:"payload,omitempty" tf:"payload,omitempty"`

	// Specifies an audio clip to be played by the client as part of the response.
	// Structure is documented below.
	// +kubebuilder:validation:Optional
	PlayAudio []RepromptEventHandlersTriggerFulfillmentMessagesPlayAudioParameters `json:"playAudio,omitempty" tf:"play_audio,omitempty"`

	// Represents the signal that telles the client to transfer the phone call connected to the agent to a third-party endpoint.
	// Structure is documented below.
	// +kubebuilder:validation:Optional
	TelephonyTransferCall []RepromptEventHandlersTriggerFulfillmentMessagesTelephonyTransferCallParameters `json:"telephonyTransferCall,omitempty" tf:"telephony_transfer_call,omitempty"`

	// A collection of text responses.
	// +kubebuilder:validation:Optional
	Text []RepromptEventHandlersTriggerFulfillmentMessagesTextParameters `json:"text,omitempty" tf:"text,omitempty"`
}

type RepromptEventHandlersTriggerFulfillmentMessagesPlayAudioInitParameters struct {

	// URI of the audio clip. Dialogflow does not impose any validation on this value. It is specific to the client that reads it.
	AudioURI *string `json:"audioUri,omitempty" tf:"audio_uri,omitempty"`
}

type RepromptEventHandlersTriggerFulfillmentMessagesPlayAudioObservation struct {

	// (Output)
	// Whether the playback of this message can be interrupted by the end user's speech and the client can then starts the next Dialogflow request.
	AllowPlaybackInterruption *bool `json:"allowPlaybackInterruption,omitempty" tf:"allow_playback_interruption,omitempty"`

	// URI of the audio clip. Dialogflow does not impose any validation on this value. It is specific to the client that reads it.
	AudioURI *string `json:"audioUri,omitempty" tf:"audio_uri,omitempty"`
}

type RepromptEventHandlersTriggerFulfillmentMessagesPlayAudioParameters struct {

	// URI of the audio clip. Dialogflow does not impose any validation on this value. It is specific to the client that reads it.
	// +kubebuilder:validation:Optional
	AudioURI *string `json:"audioUri" tf:"audio_uri,omitempty"`
}

type RepromptEventHandlersTriggerFulfillmentMessagesTelephonyTransferCallInitParameters struct {

	// Transfer the call to a phone number in E.164 format.
	PhoneNumber *string `json:"phoneNumber,omitempty" tf:"phone_number,omitempty"`
}

type RepromptEventHandlersTriggerFulfillmentMessagesTelephonyTransferCallObservation struct {

	// Transfer the call to a phone number in E.164 format.
	PhoneNumber *string `json:"phoneNumber,omitempty" tf:"phone_number,omitempty"`
}

type RepromptEventHandlersTriggerFulfillmentMessagesTelephonyTransferCallParameters struct {

	// Transfer the call to a phone number in E.164 format.
	// +kubebuilder:validation:Optional
	PhoneNumber *string `json:"phoneNumber" tf:"phone_number,omitempty"`
}

type RepromptEventHandlersTriggerFulfillmentMessagesTextInitParameters struct {

	// A collection of text responses.
	Text []*string `json:"text,omitempty" tf:"text,omitempty"`
}

type RepromptEventHandlersTriggerFulfillmentMessagesTextObservation struct {

	// (Output)
	// Whether the playback of this message can be interrupted by the end user's speech and the client can then starts the next Dialogflow request.
	AllowPlaybackInterruption *bool `json:"allowPlaybackInterruption,omitempty" tf:"allow_playback_interruption,omitempty"`

	// A collection of text responses.
	Text []*string `json:"text,omitempty" tf:"text,omitempty"`
}

type RepromptEventHandlersTriggerFulfillmentMessagesTextParameters struct {

	// A collection of text responses.
	// +kubebuilder:validation:Optional
	Text []*string `json:"text,omitempty" tf:"text,omitempty"`
}

type RepromptEventHandlersTriggerFulfillmentObservation struct {

	// Conditional cases for this fulfillment.
	// Structure is documented below.
	ConditionalCases []RepromptEventHandlersTriggerFulfillmentConditionalCasesObservation `json:"conditionalCases,omitempty" tf:"conditional_cases,omitempty"`

	// The list of rich message responses to present to the user.
	// Structure is documented below.
	Messages []RepromptEventHandlersTriggerFulfillmentMessagesObservation `json:"messages,omitempty" tf:"messages,omitempty"`

	// Whether Dialogflow should return currently queued fulfillment response messages in streaming APIs. If a webhook is specified, it happens before Dialogflow invokes webhook. Warning: 1) This flag only affects streaming API. Responses are still queued and returned once in non-streaming API. 2) The flag can be enabled in any fulfillment but only the first 3 partial responses will be returned. You may only want to apply it to fulfillments that have slow webhooks.
	ReturnPartialResponses *bool `json:"returnPartialResponses,omitempty" tf:"return_partial_responses,omitempty"`

	// Set parameter values before executing the webhook.
	// Structure is documented below.
	SetParameterActions []RepromptEventHandlersTriggerFulfillmentSetParameterActionsObservation `json:"setParameterActions,omitempty" tf:"set_parameter_actions,omitempty"`

	// The tag used by the webhook to identify which fulfillment is being called. This field is required if webhook is specified.
	Tag *string `json:"tag,omitempty" tf:"tag,omitempty"`

	// The webhook to call. Format: projects//locations//agents//webhooks/.
	Webhook *string `json:"webhook,omitempty" tf:"webhook,omitempty"`
}

type RepromptEventHandlersTriggerFulfillmentParameters struct {

	// Conditional cases for this fulfillment.
	// Structure is documented below.
	// +kubebuilder:validation:Optional
	ConditionalCases []RepromptEventHandlersTriggerFulfillmentConditionalCasesParameters `json:"conditionalCases,omitempty" tf:"conditional_cases,omitempty"`

	// The list of rich message responses to present to the user.
	// Structure is documented below.
	// +kubebuilder:validation:Optional
	Messages []RepromptEventHandlersTriggerFulfillmentMessagesParameters `json:"messages,omitempty" tf:"messages,omitempty"`

	// Whether Dialogflow should return currently queued fulfillment response messages in streaming APIs. If a webhook is specified, it happens before Dialogflow invokes webhook. Warning: 1) This flag only affects streaming API. Responses are still queued and returned once in non-streaming API. 2) The flag can be enabled in any fulfillment but only the first 3 partial responses will be returned. You may only want to apply it to fulfillments that have slow webhooks.
	// +kubebuilder:validation:Optional
	ReturnPartialResponses *bool `json:"returnPartialResponses,omitempty" tf:"return_partial_responses,omitempty"`

	// Set parameter values before executing the webhook.
	// Structure is documented below.
	// +kubebuilder:validation:Optional
	SetParameterActions []RepromptEventHandlersTriggerFulfillmentSetParameterActionsParameters `json:"setParameterActions,omitempty" tf:"set_parameter_actions,omitempty"`

	// The tag used by the webhook to identify which fulfillment is being called. This field is required if webhook is specified.
	// +kubebuilder:validation:Optional
	Tag *string `json:"tag,omitempty" tf:"tag,omitempty"`

	// The webhook to call. Format: projects//locations//agents//webhooks/.
	// +crossplane:generate:reference:type=github.com/upbound/provider-gcp/apis/dialogflowcx/v1beta1.Webhook
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	Webhook *string `json:"webhook,omitempty" tf:"webhook,omitempty"`

	// Reference to a Webhook in dialogflowcx to populate webhook.
	// +kubebuilder:validation:Optional
	WebhookRef *v1.Reference `json:"webhookRef,omitempty" tf:"-"`

	// Selector for a Webhook in dialogflowcx to populate webhook.
	// +kubebuilder:validation:Optional
	WebhookSelector *v1.Selector `json:"webhookSelector,omitempty" tf:"-"`
}

type RepromptEventHandlersTriggerFulfillmentSetParameterActionsInitParameters struct {

	// Display name of the parameter.
	Parameter *string `json:"parameter,omitempty" tf:"parameter,omitempty"`

	// The new JSON-encoded value of the parameter. A null value clears the parameter.
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type RepromptEventHandlersTriggerFulfillmentSetParameterActionsObservation struct {

	// Display name of the parameter.
	Parameter *string `json:"parameter,omitempty" tf:"parameter,omitempty"`

	// The new JSON-encoded value of the parameter. A null value clears the parameter.
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type RepromptEventHandlersTriggerFulfillmentSetParameterActionsParameters struct {

	// Display name of the parameter.
	// +kubebuilder:validation:Optional
	Parameter *string `json:"parameter,omitempty" tf:"parameter,omitempty"`

	// The new JSON-encoded value of the parameter. A null value clears the parameter.
	// +kubebuilder:validation:Optional
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type TransitionRoutesTriggerFulfillmentConditionalCasesInitParameters struct {

	// A JSON encoded list of cascading if-else conditions. Cases are mutually exclusive. The first one with a matching condition is selected, all the rest ignored.
	// See Case for the schema.
	Cases *string `json:"cases,omitempty" tf:"cases,omitempty"`
}

type TransitionRoutesTriggerFulfillmentConditionalCasesObservation struct {

	// A JSON encoded list of cascading if-else conditions. Cases are mutually exclusive. The first one with a matching condition is selected, all the rest ignored.
	// See Case for the schema.
	Cases *string `json:"cases,omitempty" tf:"cases,omitempty"`
}

type TransitionRoutesTriggerFulfillmentConditionalCasesParameters struct {

	// A JSON encoded list of cascading if-else conditions. Cases are mutually exclusive. The first one with a matching condition is selected, all the rest ignored.
	// See Case for the schema.
	// +kubebuilder:validation:Optional
	Cases *string `json:"cases,omitempty" tf:"cases,omitempty"`
}

type TransitionRoutesTriggerFulfillmentMessagesConversationSuccessInitParameters struct {

	// Custom metadata. Dialogflow doesn't impose any structure on this.
	Metadata *string `json:"metadata,omitempty" tf:"metadata,omitempty"`
}

type TransitionRoutesTriggerFulfillmentMessagesConversationSuccessObservation struct {

	// Custom metadata. Dialogflow doesn't impose any structure on this.
	Metadata *string `json:"metadata,omitempty" tf:"metadata,omitempty"`
}

type TransitionRoutesTriggerFulfillmentMessagesConversationSuccessParameters struct {

	// Custom metadata. Dialogflow doesn't impose any structure on this.
	// +kubebuilder:validation:Optional
	Metadata *string `json:"metadata,omitempty" tf:"metadata,omitempty"`
}

type TransitionRoutesTriggerFulfillmentMessagesInitParameters struct {

	// The channel which the response is associated with. Clients can specify the channel via QueryParameters.channel, and only associated channel response will be returned.
	Channel *string `json:"channel,omitempty" tf:"channel,omitempty"`

	// Indicates that the conversation succeeded, i.e., the bot handled the issue that the customer talked to it about.
	// Dialogflow only uses this to determine which conversations should be counted as successful and doesn't process the metadata in this message in any way. Note that Dialogflow also considers conversations that get to the conversation end page as successful even if they don't return ConversationSuccess.
	// You may set this, for example:
	ConversationSuccess []TransitionRoutesTriggerFulfillmentMessagesConversationSuccessInitParameters `json:"conversationSuccess,omitempty" tf:"conversation_success,omitempty"`

	// Indicates that the conversation should be handed off to a live agent.
	// Dialogflow only uses this to determine which conversations were handed off to a human agent for measurement purposes. What else to do with this signal is up to you and your handoff procedures.
	// You may set this, for example:
	LiveAgentHandoff []TransitionRoutesTriggerFulfillmentMessagesLiveAgentHandoffInitParameters `json:"liveAgentHandoff,omitempty" tf:"live_agent_handoff,omitempty"`

	// A text or ssml response that is preferentially used for TTS output audio synthesis, as described in the comment on the ResponseMessage message.
	// Structure is documented below.
	OutputAudioText []TransitionRoutesTriggerFulfillmentMessagesOutputAudioTextInitParameters `json:"outputAudioText,omitempty" tf:"output_audio_text,omitempty"`

	// A custom, platform-specific payload.
	Payload *string `json:"payload,omitempty" tf:"payload,omitempty"`

	// Specifies an audio clip to be played by the client as part of the response.
	// Structure is documented below.
	PlayAudio []TransitionRoutesTriggerFulfillmentMessagesPlayAudioInitParameters `json:"playAudio,omitempty" tf:"play_audio,omitempty"`

	// Represents the signal that telles the client to transfer the phone call connected to the agent to a third-party endpoint.
	// Structure is documented below.
	TelephonyTransferCall []TransitionRoutesTriggerFulfillmentMessagesTelephonyTransferCallInitParameters `json:"telephonyTransferCall,omitempty" tf:"telephony_transfer_call,omitempty"`

	// A collection of text responses.
	Text []TransitionRoutesTriggerFulfillmentMessagesTextInitParameters `json:"text,omitempty" tf:"text,omitempty"`
}

type TransitionRoutesTriggerFulfillmentMessagesLiveAgentHandoffInitParameters struct {

	// Custom metadata. Dialogflow doesn't impose any structure on this.
	Metadata *string `json:"metadata,omitempty" tf:"metadata,omitempty"`
}

type TransitionRoutesTriggerFulfillmentMessagesLiveAgentHandoffObservation struct {

	// Custom metadata. Dialogflow doesn't impose any structure on this.
	Metadata *string `json:"metadata,omitempty" tf:"metadata,omitempty"`
}

type TransitionRoutesTriggerFulfillmentMessagesLiveAgentHandoffParameters struct {

	// Custom metadata. Dialogflow doesn't impose any structure on this.
	// +kubebuilder:validation:Optional
	Metadata *string `json:"metadata,omitempty" tf:"metadata,omitempty"`
}

type TransitionRoutesTriggerFulfillmentMessagesObservation struct {

	// The channel which the response is associated with. Clients can specify the channel via QueryParameters.channel, and only associated channel response will be returned.
	Channel *string `json:"channel,omitempty" tf:"channel,omitempty"`

	// Indicates that the conversation succeeded, i.e., the bot handled the issue that the customer talked to it about.
	// Dialogflow only uses this to determine which conversations should be counted as successful and doesn't process the metadata in this message in any way. Note that Dialogflow also considers conversations that get to the conversation end page as successful even if they don't return ConversationSuccess.
	// You may set this, for example:
	ConversationSuccess []TransitionRoutesTriggerFulfillmentMessagesConversationSuccessObservation `json:"conversationSuccess,omitempty" tf:"conversation_success,omitempty"`

	// Indicates that the conversation should be handed off to a live agent.
	// Dialogflow only uses this to determine which conversations were handed off to a human agent for measurement purposes. What else to do with this signal is up to you and your handoff procedures.
	// You may set this, for example:
	LiveAgentHandoff []TransitionRoutesTriggerFulfillmentMessagesLiveAgentHandoffObservation `json:"liveAgentHandoff,omitempty" tf:"live_agent_handoff,omitempty"`

	// A text or ssml response that is preferentially used for TTS output audio synthesis, as described in the comment on the ResponseMessage message.
	// Structure is documented below.
	OutputAudioText []TransitionRoutesTriggerFulfillmentMessagesOutputAudioTextObservation `json:"outputAudioText,omitempty" tf:"output_audio_text,omitempty"`

	// A custom, platform-specific payload.
	Payload *string `json:"payload,omitempty" tf:"payload,omitempty"`

	// Specifies an audio clip to be played by the client as part of the response.
	// Structure is documented below.
	PlayAudio []TransitionRoutesTriggerFulfillmentMessagesPlayAudioObservation `json:"playAudio,omitempty" tf:"play_audio,omitempty"`

	// Represents the signal that telles the client to transfer the phone call connected to the agent to a third-party endpoint.
	// Structure is documented below.
	TelephonyTransferCall []TransitionRoutesTriggerFulfillmentMessagesTelephonyTransferCallObservation `json:"telephonyTransferCall,omitempty" tf:"telephony_transfer_call,omitempty"`

	// A collection of text responses.
	Text []TransitionRoutesTriggerFulfillmentMessagesTextObservation `json:"text,omitempty" tf:"text,omitempty"`
}

type TransitionRoutesTriggerFulfillmentMessagesOutputAudioTextInitParameters struct {

	// The SSML text to be synthesized. For more information, see SSML.
	Ssml *string `json:"ssml,omitempty" tf:"ssml,omitempty"`

	// A collection of text responses.
	Text *string `json:"text,omitempty" tf:"text,omitempty"`
}

type TransitionRoutesTriggerFulfillmentMessagesOutputAudioTextObservation struct {

	// (Output)
	// Whether the playback of this message can be interrupted by the end user's speech and the client can then starts the next Dialogflow request.
	AllowPlaybackInterruption *bool `json:"allowPlaybackInterruption,omitempty" tf:"allow_playback_interruption,omitempty"`

	// The SSML text to be synthesized. For more information, see SSML.
	Ssml *string `json:"ssml,omitempty" tf:"ssml,omitempty"`

	// A collection of text responses.
	Text *string `json:"text,omitempty" tf:"text,omitempty"`
}

type TransitionRoutesTriggerFulfillmentMessagesOutputAudioTextParameters struct {

	// The SSML text to be synthesized. For more information, see SSML.
	// +kubebuilder:validation:Optional
	Ssml *string `json:"ssml,omitempty" tf:"ssml,omitempty"`

	// A collection of text responses.
	// +kubebuilder:validation:Optional
	Text *string `json:"text,omitempty" tf:"text,omitempty"`
}

type TransitionRoutesTriggerFulfillmentMessagesParameters struct {

	// The channel which the response is associated with. Clients can specify the channel via QueryParameters.channel, and only associated channel response will be returned.
	// +kubebuilder:validation:Optional
	Channel *string `json:"channel,omitempty" tf:"channel,omitempty"`

	// Indicates that the conversation succeeded, i.e., the bot handled the issue that the customer talked to it about.
	// Dialogflow only uses this to determine which conversations should be counted as successful and doesn't process the metadata in this message in any way. Note that Dialogflow also considers conversations that get to the conversation end page as successful even if they don't return ConversationSuccess.
	// You may set this, for example:
	// +kubebuilder:validation:Optional
	ConversationSuccess []TransitionRoutesTriggerFulfillmentMessagesConversationSuccessParameters `json:"conversationSuccess,omitempty" tf:"conversation_success,omitempty"`

	// Indicates that the conversation should be handed off to a live agent.
	// Dialogflow only uses this to determine which conversations were handed off to a human agent for measurement purposes. What else to do with this signal is up to you and your handoff procedures.
	// You may set this, for example:
	// +kubebuilder:validation:Optional
	LiveAgentHandoff []TransitionRoutesTriggerFulfillmentMessagesLiveAgentHandoffParameters `json:"liveAgentHandoff,omitempty" tf:"live_agent_handoff,omitempty"`

	// A text or ssml response that is preferentially used for TTS output audio synthesis, as described in the comment on the ResponseMessage message.
	// Structure is documented below.
	// +kubebuilder:validation:Optional
	OutputAudioText []TransitionRoutesTriggerFulfillmentMessagesOutputAudioTextParameters `json:"outputAudioText,omitempty" tf:"output_audio_text,omitempty"`

	// A custom, platform-specific payload.
	// +kubebuilder:validation:Optional
	Payload *string `json:"payload,omitempty" tf:"payload,omitempty"`

	// Specifies an audio clip to be played by the client as part of the response.
	// Structure is documented below.
	// +kubebuilder:validation:Optional
	PlayAudio []TransitionRoutesTriggerFulfillmentMessagesPlayAudioParameters `json:"playAudio,omitempty" tf:"play_audio,omitempty"`

	// Represents the signal that telles the client to transfer the phone call connected to the agent to a third-party endpoint.
	// Structure is documented below.
	// +kubebuilder:validation:Optional
	TelephonyTransferCall []TransitionRoutesTriggerFulfillmentMessagesTelephonyTransferCallParameters `json:"telephonyTransferCall,omitempty" tf:"telephony_transfer_call,omitempty"`

	// A collection of text responses.
	// +kubebuilder:validation:Optional
	Text []TransitionRoutesTriggerFulfillmentMessagesTextParameters `json:"text,omitempty" tf:"text,omitempty"`
}

type TransitionRoutesTriggerFulfillmentMessagesPlayAudioInitParameters struct {

	// URI of the audio clip. Dialogflow does not impose any validation on this value. It is specific to the client that reads it.
	AudioURI *string `json:"audioUri,omitempty" tf:"audio_uri,omitempty"`
}

type TransitionRoutesTriggerFulfillmentMessagesPlayAudioObservation struct {

	// (Output)
	// Whether the playback of this message can be interrupted by the end user's speech and the client can then starts the next Dialogflow request.
	AllowPlaybackInterruption *bool `json:"allowPlaybackInterruption,omitempty" tf:"allow_playback_interruption,omitempty"`

	// URI of the audio clip. Dialogflow does not impose any validation on this value. It is specific to the client that reads it.
	AudioURI *string `json:"audioUri,omitempty" tf:"audio_uri,omitempty"`
}

type TransitionRoutesTriggerFulfillmentMessagesPlayAudioParameters struct {

	// URI of the audio clip. Dialogflow does not impose any validation on this value. It is specific to the client that reads it.
	// +kubebuilder:validation:Optional
	AudioURI *string `json:"audioUri" tf:"audio_uri,omitempty"`
}

type TransitionRoutesTriggerFulfillmentMessagesTelephonyTransferCallInitParameters struct {

	// Transfer the call to a phone number in E.164 format.
	PhoneNumber *string `json:"phoneNumber,omitempty" tf:"phone_number,omitempty"`
}

type TransitionRoutesTriggerFulfillmentMessagesTelephonyTransferCallObservation struct {

	// Transfer the call to a phone number in E.164 format.
	PhoneNumber *string `json:"phoneNumber,omitempty" tf:"phone_number,omitempty"`
}

type TransitionRoutesTriggerFulfillmentMessagesTelephonyTransferCallParameters struct {

	// Transfer the call to a phone number in E.164 format.
	// +kubebuilder:validation:Optional
	PhoneNumber *string `json:"phoneNumber" tf:"phone_number,omitempty"`
}

type TransitionRoutesTriggerFulfillmentMessagesTextInitParameters struct {

	// A collection of text responses.
	Text []*string `json:"text,omitempty" tf:"text,omitempty"`
}

type TransitionRoutesTriggerFulfillmentMessagesTextObservation struct {

	// (Output)
	// Whether the playback of this message can be interrupted by the end user's speech and the client can then starts the next Dialogflow request.
	AllowPlaybackInterruption *bool `json:"allowPlaybackInterruption,omitempty" tf:"allow_playback_interruption,omitempty"`

	// A collection of text responses.
	Text []*string `json:"text,omitempty" tf:"text,omitempty"`
}

type TransitionRoutesTriggerFulfillmentMessagesTextParameters struct {

	// A collection of text responses.
	// +kubebuilder:validation:Optional
	Text []*string `json:"text,omitempty" tf:"text,omitempty"`
}

type TransitionRoutesTriggerFulfillmentSetParameterActionsInitParameters struct {

	// Display name of the parameter.
	Parameter *string `json:"parameter,omitempty" tf:"parameter,omitempty"`

	// The new JSON-encoded value of the parameter. A null value clears the parameter.
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type TransitionRoutesTriggerFulfillmentSetParameterActionsObservation struct {

	// Display name of the parameter.
	Parameter *string `json:"parameter,omitempty" tf:"parameter,omitempty"`

	// The new JSON-encoded value of the parameter. A null value clears the parameter.
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type TransitionRoutesTriggerFulfillmentSetParameterActionsParameters struct {

	// Display name of the parameter.
	// +kubebuilder:validation:Optional
	Parameter *string `json:"parameter,omitempty" tf:"parameter,omitempty"`

	// The new JSON-encoded value of the parameter. A null value clears the parameter.
	// +kubebuilder:validation:Optional
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type TriggerFulfillmentMessagesConversationSuccessInitParameters struct {

	// Custom metadata. Dialogflow doesn't impose any structure on this.
	Metadata *string `json:"metadata,omitempty" tf:"metadata,omitempty"`
}

type TriggerFulfillmentMessagesConversationSuccessObservation struct {

	// Custom metadata. Dialogflow doesn't impose any structure on this.
	Metadata *string `json:"metadata,omitempty" tf:"metadata,omitempty"`
}

type TriggerFulfillmentMessagesConversationSuccessParameters struct {

	// Custom metadata. Dialogflow doesn't impose any structure on this.
	// +kubebuilder:validation:Optional
	Metadata *string `json:"metadata,omitempty" tf:"metadata,omitempty"`
}

type TriggerFulfillmentMessagesLiveAgentHandoffInitParameters struct {

	// Custom metadata. Dialogflow doesn't impose any structure on this.
	Metadata *string `json:"metadata,omitempty" tf:"metadata,omitempty"`
}

type TriggerFulfillmentMessagesLiveAgentHandoffObservation struct {

	// Custom metadata. Dialogflow doesn't impose any structure on this.
	Metadata *string `json:"metadata,omitempty" tf:"metadata,omitempty"`
}

type TriggerFulfillmentMessagesLiveAgentHandoffParameters struct {

	// Custom metadata. Dialogflow doesn't impose any structure on this.
	// +kubebuilder:validation:Optional
	Metadata *string `json:"metadata,omitempty" tf:"metadata,omitempty"`
}

type TriggerFulfillmentMessagesOutputAudioTextInitParameters struct {

	// The SSML text to be synthesized. For more information, see SSML.
	Ssml *string `json:"ssml,omitempty" tf:"ssml,omitempty"`

	// A collection of text responses.
	Text *string `json:"text,omitempty" tf:"text,omitempty"`
}

type TriggerFulfillmentMessagesOutputAudioTextObservation struct {

	// (Output)
	// Whether the playback of this message can be interrupted by the end user's speech and the client can then starts the next Dialogflow request.
	AllowPlaybackInterruption *bool `json:"allowPlaybackInterruption,omitempty" tf:"allow_playback_interruption,omitempty"`

	// The SSML text to be synthesized. For more information, see SSML.
	Ssml *string `json:"ssml,omitempty" tf:"ssml,omitempty"`

	// A collection of text responses.
	Text *string `json:"text,omitempty" tf:"text,omitempty"`
}

type TriggerFulfillmentMessagesOutputAudioTextParameters struct {

	// The SSML text to be synthesized. For more information, see SSML.
	// +kubebuilder:validation:Optional
	Ssml *string `json:"ssml,omitempty" tf:"ssml,omitempty"`

	// A collection of text responses.
	// +kubebuilder:validation:Optional
	Text *string `json:"text,omitempty" tf:"text,omitempty"`
}

type TriggerFulfillmentMessagesPlayAudioInitParameters struct {

	// URI of the audio clip. Dialogflow does not impose any validation on this value. It is specific to the client that reads it.
	AudioURI *string `json:"audioUri,omitempty" tf:"audio_uri,omitempty"`
}

type TriggerFulfillmentMessagesPlayAudioObservation struct {

	// (Output)
	// Whether the playback of this message can be interrupted by the end user's speech and the client can then starts the next Dialogflow request.
	AllowPlaybackInterruption *bool `json:"allowPlaybackInterruption,omitempty" tf:"allow_playback_interruption,omitempty"`

	// URI of the audio clip. Dialogflow does not impose any validation on this value. It is specific to the client that reads it.
	AudioURI *string `json:"audioUri,omitempty" tf:"audio_uri,omitempty"`
}

type TriggerFulfillmentMessagesPlayAudioParameters struct {

	// URI of the audio clip. Dialogflow does not impose any validation on this value. It is specific to the client that reads it.
	// +kubebuilder:validation:Optional
	AudioURI *string `json:"audioUri" tf:"audio_uri,omitempty"`
}

type TriggerFulfillmentMessagesTelephonyTransferCallInitParameters struct {

	// Transfer the call to a phone number in E.164 format.
	PhoneNumber *string `json:"phoneNumber,omitempty" tf:"phone_number,omitempty"`
}

type TriggerFulfillmentMessagesTelephonyTransferCallObservation struct {

	// Transfer the call to a phone number in E.164 format.
	PhoneNumber *string `json:"phoneNumber,omitempty" tf:"phone_number,omitempty"`
}

type TriggerFulfillmentMessagesTelephonyTransferCallParameters struct {

	// Transfer the call to a phone number in E.164 format.
	// +kubebuilder:validation:Optional
	PhoneNumber *string `json:"phoneNumber" tf:"phone_number,omitempty"`
}

type TriggerFulfillmentMessagesTextInitParameters struct {

	// A collection of text responses.
	Text []*string `json:"text,omitempty" tf:"text,omitempty"`
}

type TriggerFulfillmentMessagesTextObservation struct {

	// (Output)
	// Whether the playback of this message can be interrupted by the end user's speech and the client can then starts the next Dialogflow request.
	AllowPlaybackInterruption *bool `json:"allowPlaybackInterruption,omitempty" tf:"allow_playback_interruption,omitempty"`

	// A collection of text responses.
	Text []*string `json:"text,omitempty" tf:"text,omitempty"`
}

type TriggerFulfillmentMessagesTextParameters struct {

	// A collection of text responses.
	// +kubebuilder:validation:Optional
	Text []*string `json:"text,omitempty" tf:"text,omitempty"`
}

// PageSpec defines the desired state of Page
type PageSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     PageParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider PageInitParameters `json:"initProvider,omitempty"`
}

// PageStatus defines the observed state of Page.
type PageStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        PageObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// Page is the Schema for the Pages API. A Dialogflow CX conversation (session) can be described and visualized as a state machine.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,gcp}
type Page struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.displayName) || (has(self.initProvider) && has(self.initProvider.displayName))",message="spec.forProvider.displayName is a required parameter"
	Spec   PageSpec   `json:"spec"`
	Status PageStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// PageList contains a list of Pages
type PageList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []Page `json:"items"`
}

// Repository type metadata.
var (
	Page_Kind             = "Page"
	Page_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: Page_Kind}.String()
	Page_KindAPIVersion   = Page_Kind + "." + CRDGroupVersion.String()
	Page_GroupVersionKind = CRDGroupVersion.WithKind(Page_Kind)
)

func init() {
	SchemeBuilder.Register(&Page{}, &PageList{})
}
