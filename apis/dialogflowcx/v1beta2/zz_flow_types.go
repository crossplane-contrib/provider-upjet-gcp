// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1beta2

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type AdvancedSettingsAudioExportGcsDestinationInitParameters struct {

	// Client-specific URI that points to an audio clip accessible to the client. Dialogflow does not impose any validation on it.
	// This field is part of a union field content: Only one of audio or uri may be set.
	URI *string `json:"uri,omitempty" tf:"uri,omitempty"`
}

type AdvancedSettingsAudioExportGcsDestinationObservation struct {

	// Client-specific URI that points to an audio clip accessible to the client. Dialogflow does not impose any validation on it.
	// This field is part of a union field content: Only one of audio or uri may be set.
	URI *string `json:"uri,omitempty" tf:"uri,omitempty"`
}

type AdvancedSettingsAudioExportGcsDestinationParameters struct {

	// Client-specific URI that points to an audio clip accessible to the client. Dialogflow does not impose any validation on it.
	// This field is part of a union field content: Only one of audio or uri may be set.
	// +kubebuilder:validation:Optional
	URI *string `json:"uri,omitempty" tf:"uri,omitempty"`
}

type AdvancedSettingsDtmfSettingsInitParameters struct {

	// Whether Knowledge Connector is enabled or not.
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// The digit that terminates a DTMF digit sequence.
	FinishDigit *string `json:"finishDigit,omitempty" tf:"finish_digit,omitempty"`

	// Max length of DTMF digits.
	MaxDigits *float64 `json:"maxDigits,omitempty" tf:"max_digits,omitempty"`
}

type AdvancedSettingsDtmfSettingsObservation struct {

	// Whether Knowledge Connector is enabled or not.
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// The digit that terminates a DTMF digit sequence.
	FinishDigit *string `json:"finishDigit,omitempty" tf:"finish_digit,omitempty"`

	// Max length of DTMF digits.
	MaxDigits *float64 `json:"maxDigits,omitempty" tf:"max_digits,omitempty"`
}

type AdvancedSettingsDtmfSettingsParameters struct {

	// Whether Knowledge Connector is enabled or not.
	// +kubebuilder:validation:Optional
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// The digit that terminates a DTMF digit sequence.
	// +kubebuilder:validation:Optional
	FinishDigit *string `json:"finishDigit,omitempty" tf:"finish_digit,omitempty"`

	// Max length of DTMF digits.
	// +kubebuilder:validation:Optional
	MaxDigits *float64 `json:"maxDigits,omitempty" tf:"max_digits,omitempty"`
}

type AdvancedSettingsLoggingSettingsInitParameters struct {

	// Enables consent-based end-user input redaction, if true, a pre-defined session parameter $session.params.conversation-redaction will be used to determine if the utterance should be redacted.
	EnableConsentBasedRedaction *bool `json:"enableConsentBasedRedaction,omitempty" tf:"enable_consent_based_redaction,omitempty"`

	// Enables DF Interaction logging.
	EnableInteractionLogging *bool `json:"enableInteractionLogging,omitempty" tf:"enable_interaction_logging,omitempty"`

	// Enables Google Cloud Logging.
	EnableStackdriverLogging *bool `json:"enableStackdriverLogging,omitempty" tf:"enable_stackdriver_logging,omitempty"`
}

type AdvancedSettingsLoggingSettingsObservation struct {

	// Enables consent-based end-user input redaction, if true, a pre-defined session parameter $session.params.conversation-redaction will be used to determine if the utterance should be redacted.
	EnableConsentBasedRedaction *bool `json:"enableConsentBasedRedaction,omitempty" tf:"enable_consent_based_redaction,omitempty"`

	// Enables DF Interaction logging.
	EnableInteractionLogging *bool `json:"enableInteractionLogging,omitempty" tf:"enable_interaction_logging,omitempty"`

	// Enables Google Cloud Logging.
	EnableStackdriverLogging *bool `json:"enableStackdriverLogging,omitempty" tf:"enable_stackdriver_logging,omitempty"`
}

type AdvancedSettingsLoggingSettingsParameters struct {

	// Enables consent-based end-user input redaction, if true, a pre-defined session parameter $session.params.conversation-redaction will be used to determine if the utterance should be redacted.
	// +kubebuilder:validation:Optional
	EnableConsentBasedRedaction *bool `json:"enableConsentBasedRedaction,omitempty" tf:"enable_consent_based_redaction,omitempty"`

	// Enables DF Interaction logging.
	// +kubebuilder:validation:Optional
	EnableInteractionLogging *bool `json:"enableInteractionLogging,omitempty" tf:"enable_interaction_logging,omitempty"`

	// Enables Google Cloud Logging.
	// +kubebuilder:validation:Optional
	EnableStackdriverLogging *bool `json:"enableStackdriverLogging,omitempty" tf:"enable_stackdriver_logging,omitempty"`
}

type AdvancedSettingsSpeechSettingsInitParameters struct {

	// Sensitivity of the speech model that detects the end of speech. Scale from 0 to 100.
	EndpointerSensitivity *float64 `json:"endpointerSensitivity,omitempty" tf:"endpointer_sensitivity,omitempty"`

	// Mapping from language to Speech-to-Text model. The mapped Speech-to-Text model will be selected for requests from its corresponding language. For more information, see Speech models.
	// An object containing a list of "key": value pairs. Example: { "name": "wrench", "mass": "1.3kg", "count": "3" }.
	// +mapType=granular
	Models map[string]*string `json:"models,omitempty" tf:"models,omitempty"`

	// Timeout before detecting no speech.
	// A duration in seconds with up to nine fractional digits, ending with 's'. Example: "3.5s".
	NoSpeechTimeout *string `json:"noSpeechTimeout,omitempty" tf:"no_speech_timeout,omitempty"`

	// Use timeout based endpointing, interpreting endpointer sensitivity as seconds of timeout value.
	UseTimeoutBasedEndpointing *bool `json:"useTimeoutBasedEndpointing,omitempty" tf:"use_timeout_based_endpointing,omitempty"`
}

type AdvancedSettingsSpeechSettingsObservation struct {

	// Sensitivity of the speech model that detects the end of speech. Scale from 0 to 100.
	EndpointerSensitivity *float64 `json:"endpointerSensitivity,omitempty" tf:"endpointer_sensitivity,omitempty"`

	// Mapping from language to Speech-to-Text model. The mapped Speech-to-Text model will be selected for requests from its corresponding language. For more information, see Speech models.
	// An object containing a list of "key": value pairs. Example: { "name": "wrench", "mass": "1.3kg", "count": "3" }.
	// +mapType=granular
	Models map[string]*string `json:"models,omitempty" tf:"models,omitempty"`

	// Timeout before detecting no speech.
	// A duration in seconds with up to nine fractional digits, ending with 's'. Example: "3.5s".
	NoSpeechTimeout *string `json:"noSpeechTimeout,omitempty" tf:"no_speech_timeout,omitempty"`

	// Use timeout based endpointing, interpreting endpointer sensitivity as seconds of timeout value.
	UseTimeoutBasedEndpointing *bool `json:"useTimeoutBasedEndpointing,omitempty" tf:"use_timeout_based_endpointing,omitempty"`
}

type AdvancedSettingsSpeechSettingsParameters struct {

	// Sensitivity of the speech model that detects the end of speech. Scale from 0 to 100.
	// +kubebuilder:validation:Optional
	EndpointerSensitivity *float64 `json:"endpointerSensitivity,omitempty" tf:"endpointer_sensitivity,omitempty"`

	// Mapping from language to Speech-to-Text model. The mapped Speech-to-Text model will be selected for requests from its corresponding language. For more information, see Speech models.
	// An object containing a list of "key": value pairs. Example: { "name": "wrench", "mass": "1.3kg", "count": "3" }.
	// +kubebuilder:validation:Optional
	// +mapType=granular
	Models map[string]*string `json:"models,omitempty" tf:"models,omitempty"`

	// Timeout before detecting no speech.
	// A duration in seconds with up to nine fractional digits, ending with 's'. Example: "3.5s".
	// +kubebuilder:validation:Optional
	NoSpeechTimeout *string `json:"noSpeechTimeout,omitempty" tf:"no_speech_timeout,omitempty"`

	// Use timeout based endpointing, interpreting endpointer sensitivity as seconds of timeout value.
	// +kubebuilder:validation:Optional
	UseTimeoutBasedEndpointing *bool `json:"useTimeoutBasedEndpointing,omitempty" tf:"use_timeout_based_endpointing,omitempty"`
}

type ConditionalCasesInitParameters struct {

	// A JSON encoded list of cascading if-else conditions. Cases are mutually exclusive. The first one with a matching condition is selected, all the rest ignored.
	// See Case for the schema.
	Cases *string `json:"cases,omitempty" tf:"cases,omitempty"`
}

type ConditionalCasesObservation struct {

	// A JSON encoded list of cascading if-else conditions. Cases are mutually exclusive. The first one with a matching condition is selected, all the rest ignored.
	// See Case for the schema.
	Cases *string `json:"cases,omitempty" tf:"cases,omitempty"`
}

type ConditionalCasesParameters struct {

	// A JSON encoded list of cascading if-else conditions. Cases are mutually exclusive. The first one with a matching condition is selected, all the rest ignored.
	// See Case for the schema.
	// +kubebuilder:validation:Optional
	Cases *string `json:"cases,omitempty" tf:"cases,omitempty"`
}

type ConversationSuccessInitParameters struct {

	// Custom metadata. Dialogflow doesn't impose any structure on this.
	Metadata *string `json:"metadata,omitempty" tf:"metadata,omitempty"`
}

type ConversationSuccessObservation struct {

	// Custom metadata. Dialogflow doesn't impose any structure on this.
	Metadata *string `json:"metadata,omitempty" tf:"metadata,omitempty"`
}

type ConversationSuccessParameters struct {

	// Custom metadata. Dialogflow doesn't impose any structure on this.
	// +kubebuilder:validation:Optional
	Metadata *string `json:"metadata,omitempty" tf:"metadata,omitempty"`
}

type DataStoreConnectionsInitParameters struct {

	// The full name of the referenced data store. Formats: projects/{project}/locations/{location}/collections/{collection}/dataStores/{dataStore} projects/{project}/locations/{location}/dataStores/{dataStore}
	DataStore *string `json:"dataStore,omitempty" tf:"data_store,omitempty"`

	// The type of the connected data store.
	DataStoreType *string `json:"dataStoreType,omitempty" tf:"data_store_type,omitempty"`

	// The document processing mode for the data store connection. Should only be set for PUBLIC_WEB and UNSTRUCTURED data stores. If not set it is considered as DOCUMENTS, as this is the legacy mode.
	DocumentProcessingMode *string `json:"documentProcessingMode,omitempty" tf:"document_processing_mode,omitempty"`
}

type DataStoreConnectionsObservation struct {

	// The full name of the referenced data store. Formats: projects/{project}/locations/{location}/collections/{collection}/dataStores/{dataStore} projects/{project}/locations/{location}/dataStores/{dataStore}
	DataStore *string `json:"dataStore,omitempty" tf:"data_store,omitempty"`

	// The type of the connected data store.
	DataStoreType *string `json:"dataStoreType,omitempty" tf:"data_store_type,omitempty"`

	// The document processing mode for the data store connection. Should only be set for PUBLIC_WEB and UNSTRUCTURED data stores. If not set it is considered as DOCUMENTS, as this is the legacy mode.
	DocumentProcessingMode *string `json:"documentProcessingMode,omitempty" tf:"document_processing_mode,omitempty"`
}

type DataStoreConnectionsParameters struct {

	// The full name of the referenced data store. Formats: projects/{project}/locations/{location}/collections/{collection}/dataStores/{dataStore} projects/{project}/locations/{location}/dataStores/{dataStore}
	// +kubebuilder:validation:Optional
	DataStore *string `json:"dataStore,omitempty" tf:"data_store,omitempty"`

	// The type of the connected data store.
	// +kubebuilder:validation:Optional
	DataStoreType *string `json:"dataStoreType,omitempty" tf:"data_store_type,omitempty"`

	// The document processing mode for the data store connection. Should only be set for PUBLIC_WEB and UNSTRUCTURED data stores. If not set it is considered as DOCUMENTS, as this is the legacy mode.
	// +kubebuilder:validation:Optional
	DocumentProcessingMode *string `json:"documentProcessingMode,omitempty" tf:"document_processing_mode,omitempty"`
}

type EndInteractionInitParameters struct {
}

type EndInteractionObservation struct {
}

type EndInteractionParameters struct {
}

type EventHandlersInitParameters struct {

	// The name of the event to handle.
	Event *string `json:"event,omitempty" tf:"event,omitempty"`

	// The target flow to transition to.
	// Format: projects//locations//agents//flows/.
	TargetFlow *string `json:"targetFlow,omitempty" tf:"target_flow,omitempty"`

	// The target page to transition to.
	// Format: projects//locations//agents//flows//pages/.
	TargetPage *string `json:"targetPage,omitempty" tf:"target_page,omitempty"`

	// The fulfillment to call when the event occurs. Handling webhook errors with a fulfillment enabled with webhook could cause infinite loop. It is invalid to specify such fulfillment for a handler handling webhooks.
	// Structure is documented below.
	TriggerFulfillment *TriggerFulfillmentInitParameters `json:"triggerFulfillment,omitempty" tf:"trigger_fulfillment,omitempty"`
}

type EventHandlersObservation struct {

	// The name of the event to handle.
	Event *string `json:"event,omitempty" tf:"event,omitempty"`

	// (Output)
	// The unique identifier of this event handler.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// The target flow to transition to.
	// Format: projects//locations//agents//flows/.
	TargetFlow *string `json:"targetFlow,omitempty" tf:"target_flow,omitempty"`

	// The target page to transition to.
	// Format: projects//locations//agents//flows//pages/.
	TargetPage *string `json:"targetPage,omitempty" tf:"target_page,omitempty"`

	// The fulfillment to call when the event occurs. Handling webhook errors with a fulfillment enabled with webhook could cause infinite loop. It is invalid to specify such fulfillment for a handler handling webhooks.
	// Structure is documented below.
	TriggerFulfillment *TriggerFulfillmentObservation `json:"triggerFulfillment,omitempty" tf:"trigger_fulfillment,omitempty"`
}

type EventHandlersParameters struct {

	// The name of the event to handle.
	// +kubebuilder:validation:Optional
	Event *string `json:"event,omitempty" tf:"event,omitempty"`

	// The target flow to transition to.
	// Format: projects//locations//agents//flows/.
	// +kubebuilder:validation:Optional
	TargetFlow *string `json:"targetFlow,omitempty" tf:"target_flow,omitempty"`

	// The target page to transition to.
	// Format: projects//locations//agents//flows//pages/.
	// +kubebuilder:validation:Optional
	TargetPage *string `json:"targetPage,omitempty" tf:"target_page,omitempty"`

	// The fulfillment to call when the event occurs. Handling webhook errors with a fulfillment enabled with webhook could cause infinite loop. It is invalid to specify such fulfillment for a handler handling webhooks.
	// Structure is documented below.
	// +kubebuilder:validation:Optional
	TriggerFulfillment *TriggerFulfillmentParameters `json:"triggerFulfillment,omitempty" tf:"trigger_fulfillment,omitempty"`
}

type FlowAdvancedSettingsInitParameters struct {

	// If present, incoming audio is exported by Dialogflow to the configured Google Cloud Storage destination. Exposed at the following levels:
	AudioExportGcsDestination *AdvancedSettingsAudioExportGcsDestinationInitParameters `json:"audioExportGcsDestination,omitempty" tf:"audio_export_gcs_destination,omitempty"`

	// Define behaviors for DTMF (dual tone multi frequency). DTMF settings does not override each other. DTMF settings set at different levels define DTMF detections running in parallel. Exposed at the following levels:
	DtmfSettings *AdvancedSettingsDtmfSettingsInitParameters `json:"dtmfSettings,omitempty" tf:"dtmf_settings,omitempty"`

	// Settings for logging. Settings for Dialogflow History, Contact Center messages, StackDriver logs, and speech logging. Exposed at the following levels:
	LoggingSettings *AdvancedSettingsLoggingSettingsInitParameters `json:"loggingSettings,omitempty" tf:"logging_settings,omitempty"`

	// Settings for speech to text detection. Exposed at the following levels:
	SpeechSettings *AdvancedSettingsSpeechSettingsInitParameters `json:"speechSettings,omitempty" tf:"speech_settings,omitempty"`
}

type FlowAdvancedSettingsObservation struct {

	// If present, incoming audio is exported by Dialogflow to the configured Google Cloud Storage destination. Exposed at the following levels:
	AudioExportGcsDestination *AdvancedSettingsAudioExportGcsDestinationObservation `json:"audioExportGcsDestination,omitempty" tf:"audio_export_gcs_destination,omitempty"`

	// Define behaviors for DTMF (dual tone multi frequency). DTMF settings does not override each other. DTMF settings set at different levels define DTMF detections running in parallel. Exposed at the following levels:
	DtmfSettings *AdvancedSettingsDtmfSettingsObservation `json:"dtmfSettings,omitempty" tf:"dtmf_settings,omitempty"`

	// Settings for logging. Settings for Dialogflow History, Contact Center messages, StackDriver logs, and speech logging. Exposed at the following levels:
	LoggingSettings *AdvancedSettingsLoggingSettingsObservation `json:"loggingSettings,omitempty" tf:"logging_settings,omitempty"`

	// Settings for speech to text detection. Exposed at the following levels:
	SpeechSettings *AdvancedSettingsSpeechSettingsObservation `json:"speechSettings,omitempty" tf:"speech_settings,omitempty"`
}

type FlowAdvancedSettingsParameters struct {

	// If present, incoming audio is exported by Dialogflow to the configured Google Cloud Storage destination. Exposed at the following levels:
	// +kubebuilder:validation:Optional
	AudioExportGcsDestination *AdvancedSettingsAudioExportGcsDestinationParameters `json:"audioExportGcsDestination,omitempty" tf:"audio_export_gcs_destination,omitempty"`

	// Define behaviors for DTMF (dual tone multi frequency). DTMF settings does not override each other. DTMF settings set at different levels define DTMF detections running in parallel. Exposed at the following levels:
	// +kubebuilder:validation:Optional
	DtmfSettings *AdvancedSettingsDtmfSettingsParameters `json:"dtmfSettings,omitempty" tf:"dtmf_settings,omitempty"`

	// Settings for logging. Settings for Dialogflow History, Contact Center messages, StackDriver logs, and speech logging. Exposed at the following levels:
	// +kubebuilder:validation:Optional
	LoggingSettings *AdvancedSettingsLoggingSettingsParameters `json:"loggingSettings,omitempty" tf:"logging_settings,omitempty"`

	// Settings for speech to text detection. Exposed at the following levels:
	// +kubebuilder:validation:Optional
	SpeechSettings *AdvancedSettingsSpeechSettingsParameters `json:"speechSettings,omitempty" tf:"speech_settings,omitempty"`
}

type FlowInitParameters struct {

	// Hierarchical advanced settings for this flow. The settings exposed at the lower level overrides the settings exposed at the higher level.
	// Hierarchy: Agent->Flow->Page->Fulfillment/Parameter.
	// Structure is documented below.
	AdvancedSettings *FlowAdvancedSettingsInitParameters `json:"advancedSettings,omitempty" tf:"advanced_settings,omitempty"`

	// The description of the flow. The maximum length is 500 characters. If exceeded, the request is rejected.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// The human-readable name of the flow.
	DisplayName *string `json:"displayName,omitempty" tf:"display_name,omitempty"`

	// A flow's event handlers serve two purposes:
	// They are responsible for handling events (e.g. no match, webhook errors) in the flow.
	// They are inherited by every page's [event handlers][Page.event_handlers], which can be used to handle common events regardless of the current page. Event handlers defined in the page have higher priority than those defined in the flow.
	// Unlike transitionRoutes, these handlers are evaluated on a first-match basis. The first one that matches the event get executed, with the rest being ignored.
	// Structure is documented below.
	EventHandlers []EventHandlersInitParameters `json:"eventHandlers,omitempty" tf:"event_handlers,omitempty"`

	// Marks this as the Default Start Flow for an agent. When you create an agent, the Default Start Flow is created automatically.
	// The Default Start Flow cannot be deleted; deleting the google_dialogflow_cx_flow resource does nothing to the underlying GCP resources.
	IsDefaultStartFlow *bool `json:"isDefaultStartFlow,omitempty" tf:"is_default_start_flow,omitempty"`

	// Knowledge connector configuration.
	// Structure is documented below.
	KnowledgeConnectorSettings *KnowledgeConnectorSettingsInitParameters `json:"knowledgeConnectorSettings,omitempty" tf:"knowledge_connector_settings,omitempty"`

	// The language of the following fields in flow:
	// Flow.event_handlers.trigger_fulfillment.messages
	// Flow.event_handlers.trigger_fulfillment.conditional_cases
	// Flow.transition_routes.trigger_fulfillment.messages
	// Flow.transition_routes.trigger_fulfillment.conditional_cases
	// If not specified, the agent's default language is used. Many languages are supported. Note: languages must be enabled in the agent before they can be used.
	LanguageCode *string `json:"languageCode,omitempty" tf:"language_code,omitempty"`

	// NLU related settings of the flow.
	// Structure is documented below.
	NluSettings *NluSettingsInitParameters `json:"nluSettings,omitempty" tf:"nlu_settings,omitempty"`

	// The agent to create a flow for.
	// Format: projects//locations//agents/.
	// +crossplane:generate:reference:type=github.com/upbound/provider-gcp/apis/dialogflowcx/v1beta2.Agent
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractResourceID()
	Parent *string `json:"parent,omitempty" tf:"parent,omitempty"`

	// Reference to a Agent in dialogflowcx to populate parent.
	// +kubebuilder:validation:Optional
	ParentRef *v1.Reference `json:"parentRef,omitempty" tf:"-"`

	// Selector for a Agent in dialogflowcx to populate parent.
	// +kubebuilder:validation:Optional
	ParentSelector *v1.Selector `json:"parentSelector,omitempty" tf:"-"`

	// A flow's transition route group serve two purposes:
	// They are responsible for matching the user's first utterances in the flow.
	// They are inherited by every page's [transition route groups][Page.transition_route_groups]. Transition route groups defined in the page have higher priority than those defined in the flow.
	// Format:projects//locations//agents//flows//transitionRouteGroups/.
	TransitionRouteGroups []*string `json:"transitionRouteGroups,omitempty" tf:"transition_route_groups,omitempty"`

	// A flow's transition routes serve two purposes:
	// They are responsible for matching the user's first utterances in the flow.
	// They are inherited by every page's [transition routes][Page.transition_routes] and can support use cases such as the user saying "help" or "can I talk to a human?", which can be handled in a common way regardless of the current page. Transition routes defined in the page have higher priority than those defined in the flow.
	// TransitionRoutes are evalauted in the following order:
	// TransitionRoutes with intent specified.
	// TransitionRoutes with only condition specified.
	// TransitionRoutes with intent specified are inherited by pages in the flow.
	// Structure is documented below.
	TransitionRoutes []TransitionRoutesInitParameters `json:"transitionRoutes,omitempty" tf:"transition_routes,omitempty"`
}

type FlowObservation struct {

	// Hierarchical advanced settings for this flow. The settings exposed at the lower level overrides the settings exposed at the higher level.
	// Hierarchy: Agent->Flow->Page->Fulfillment/Parameter.
	// Structure is documented below.
	AdvancedSettings *FlowAdvancedSettingsObservation `json:"advancedSettings,omitempty" tf:"advanced_settings,omitempty"`

	// The description of the flow. The maximum length is 500 characters. If exceeded, the request is rejected.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// The human-readable name of the flow.
	DisplayName *string `json:"displayName,omitempty" tf:"display_name,omitempty"`

	// A flow's event handlers serve two purposes:
	// They are responsible for handling events (e.g. no match, webhook errors) in the flow.
	// They are inherited by every page's [event handlers][Page.event_handlers], which can be used to handle common events regardless of the current page. Event handlers defined in the page have higher priority than those defined in the flow.
	// Unlike transitionRoutes, these handlers are evaluated on a first-match basis. The first one that matches the event get executed, with the rest being ignored.
	// Structure is documented below.
	EventHandlers []EventHandlersObservation `json:"eventHandlers,omitempty" tf:"event_handlers,omitempty"`

	// an identifier for the resource with format {{parent}}/flows/{{name}}
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// Marks this as the Default Start Flow for an agent. When you create an agent, the Default Start Flow is created automatically.
	// The Default Start Flow cannot be deleted; deleting the google_dialogflow_cx_flow resource does nothing to the underlying GCP resources.
	IsDefaultStartFlow *bool `json:"isDefaultStartFlow,omitempty" tf:"is_default_start_flow,omitempty"`

	// Knowledge connector configuration.
	// Structure is documented below.
	KnowledgeConnectorSettings *KnowledgeConnectorSettingsObservation `json:"knowledgeConnectorSettings,omitempty" tf:"knowledge_connector_settings,omitempty"`

	// The language of the following fields in flow:
	// Flow.event_handlers.trigger_fulfillment.messages
	// Flow.event_handlers.trigger_fulfillment.conditional_cases
	// Flow.transition_routes.trigger_fulfillment.messages
	// Flow.transition_routes.trigger_fulfillment.conditional_cases
	// If not specified, the agent's default language is used. Many languages are supported. Note: languages must be enabled in the agent before they can be used.
	LanguageCode *string `json:"languageCode,omitempty" tf:"language_code,omitempty"`

	// The unique identifier of the flow.
	// Format: projects//locations//agents//flows/.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// NLU related settings of the flow.
	// Structure is documented below.
	NluSettings *NluSettingsObservation `json:"nluSettings,omitempty" tf:"nlu_settings,omitempty"`

	// The agent to create a flow for.
	// Format: projects//locations//agents/.
	Parent *string `json:"parent,omitempty" tf:"parent,omitempty"`

	// A flow's transition route group serve two purposes:
	// They are responsible for matching the user's first utterances in the flow.
	// They are inherited by every page's [transition route groups][Page.transition_route_groups]. Transition route groups defined in the page have higher priority than those defined in the flow.
	// Format:projects//locations//agents//flows//transitionRouteGroups/.
	TransitionRouteGroups []*string `json:"transitionRouteGroups,omitempty" tf:"transition_route_groups,omitempty"`

	// A flow's transition routes serve two purposes:
	// They are responsible for matching the user's first utterances in the flow.
	// They are inherited by every page's [transition routes][Page.transition_routes] and can support use cases such as the user saying "help" or "can I talk to a human?", which can be handled in a common way regardless of the current page. Transition routes defined in the page have higher priority than those defined in the flow.
	// TransitionRoutes are evalauted in the following order:
	// TransitionRoutes with intent specified.
	// TransitionRoutes with only condition specified.
	// TransitionRoutes with intent specified are inherited by pages in the flow.
	// Structure is documented below.
	TransitionRoutes []TransitionRoutesObservation `json:"transitionRoutes,omitempty" tf:"transition_routes,omitempty"`
}

type FlowParameters struct {

	// Hierarchical advanced settings for this flow. The settings exposed at the lower level overrides the settings exposed at the higher level.
	// Hierarchy: Agent->Flow->Page->Fulfillment/Parameter.
	// Structure is documented below.
	// +kubebuilder:validation:Optional
	AdvancedSettings *FlowAdvancedSettingsParameters `json:"advancedSettings,omitempty" tf:"advanced_settings,omitempty"`

	// The description of the flow. The maximum length is 500 characters. If exceeded, the request is rejected.
	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// The human-readable name of the flow.
	// +kubebuilder:validation:Optional
	DisplayName *string `json:"displayName,omitempty" tf:"display_name,omitempty"`

	// A flow's event handlers serve two purposes:
	// They are responsible for handling events (e.g. no match, webhook errors) in the flow.
	// They are inherited by every page's [event handlers][Page.event_handlers], which can be used to handle common events regardless of the current page. Event handlers defined in the page have higher priority than those defined in the flow.
	// Unlike transitionRoutes, these handlers are evaluated on a first-match basis. The first one that matches the event get executed, with the rest being ignored.
	// Structure is documented below.
	// +kubebuilder:validation:Optional
	EventHandlers []EventHandlersParameters `json:"eventHandlers,omitempty" tf:"event_handlers,omitempty"`

	// Marks this as the Default Start Flow for an agent. When you create an agent, the Default Start Flow is created automatically.
	// The Default Start Flow cannot be deleted; deleting the google_dialogflow_cx_flow resource does nothing to the underlying GCP resources.
	// +kubebuilder:validation:Optional
	IsDefaultStartFlow *bool `json:"isDefaultStartFlow,omitempty" tf:"is_default_start_flow,omitempty"`

	// Knowledge connector configuration.
	// Structure is documented below.
	// +kubebuilder:validation:Optional
	KnowledgeConnectorSettings *KnowledgeConnectorSettingsParameters `json:"knowledgeConnectorSettings,omitempty" tf:"knowledge_connector_settings,omitempty"`

	// The language of the following fields in flow:
	// Flow.event_handlers.trigger_fulfillment.messages
	// Flow.event_handlers.trigger_fulfillment.conditional_cases
	// Flow.transition_routes.trigger_fulfillment.messages
	// Flow.transition_routes.trigger_fulfillment.conditional_cases
	// If not specified, the agent's default language is used. Many languages are supported. Note: languages must be enabled in the agent before they can be used.
	// +kubebuilder:validation:Optional
	LanguageCode *string `json:"languageCode,omitempty" tf:"language_code,omitempty"`

	// NLU related settings of the flow.
	// Structure is documented below.
	// +kubebuilder:validation:Optional
	NluSettings *NluSettingsParameters `json:"nluSettings,omitempty" tf:"nlu_settings,omitempty"`

	// The agent to create a flow for.
	// Format: projects//locations//agents/.
	// +crossplane:generate:reference:type=github.com/upbound/provider-gcp/apis/dialogflowcx/v1beta2.Agent
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	Parent *string `json:"parent,omitempty" tf:"parent,omitempty"`

	// Reference to a Agent in dialogflowcx to populate parent.
	// +kubebuilder:validation:Optional
	ParentRef *v1.Reference `json:"parentRef,omitempty" tf:"-"`

	// Selector for a Agent in dialogflowcx to populate parent.
	// +kubebuilder:validation:Optional
	ParentSelector *v1.Selector `json:"parentSelector,omitempty" tf:"-"`

	// A flow's transition route group serve two purposes:
	// They are responsible for matching the user's first utterances in the flow.
	// They are inherited by every page's [transition route groups][Page.transition_route_groups]. Transition route groups defined in the page have higher priority than those defined in the flow.
	// Format:projects//locations//agents//flows//transitionRouteGroups/.
	// +kubebuilder:validation:Optional
	TransitionRouteGroups []*string `json:"transitionRouteGroups,omitempty" tf:"transition_route_groups,omitempty"`

	// A flow's transition routes serve two purposes:
	// They are responsible for matching the user's first utterances in the flow.
	// They are inherited by every page's [transition routes][Page.transition_routes] and can support use cases such as the user saying "help" or "can I talk to a human?", which can be handled in a common way regardless of the current page. Transition routes defined in the page have higher priority than those defined in the flow.
	// TransitionRoutes are evalauted in the following order:
	// TransitionRoutes with intent specified.
	// TransitionRoutes with only condition specified.
	// TransitionRoutes with intent specified are inherited by pages in the flow.
	// Structure is documented below.
	// +kubebuilder:validation:Optional
	TransitionRoutes []TransitionRoutesParameters `json:"transitionRoutes,omitempty" tf:"transition_routes,omitempty"`
}

type KnowledgeConnectorSettingsInitParameters struct {

	// Optional. List of related data store connections.
	// Structure is documented below.
	DataStoreConnections []DataStoreConnectionsInitParameters `json:"dataStoreConnections,omitempty" tf:"data_store_connections,omitempty"`

	// Whether Knowledge Connector is enabled or not.
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// The target flow to transition to. Format: projects//locations//agents//flows/.
	// This field is part of a union field target: Only one of targetPage or targetFlow may be set.
	// +crossplane:generate:reference:type=github.com/upbound/provider-gcp/apis/dialogflowcx/v1beta2.Agent
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractParamPath("start_flow",true)
	TargetFlow *string `json:"targetFlow,omitempty" tf:"target_flow,omitempty"`

	// Reference to a Agent in dialogflowcx to populate targetFlow.
	// +kubebuilder:validation:Optional
	TargetFlowRef *v1.Reference `json:"targetFlowRef,omitempty" tf:"-"`

	// Selector for a Agent in dialogflowcx to populate targetFlow.
	// +kubebuilder:validation:Optional
	TargetFlowSelector *v1.Selector `json:"targetFlowSelector,omitempty" tf:"-"`

	// The target page to transition to. Format: projects//locations//agents//flows//pages/.
	// The page must be in the same host flow (the flow that owns this KnowledgeConnectorSettings).
	// This field is part of a union field target: Only one of targetPage or targetFlow may be set.
	TargetPage *string `json:"targetPage,omitempty" tf:"target_page,omitempty"`

	// The fulfillment to be triggered.
	// When the answers from the Knowledge Connector are selected by Dialogflow, you can utitlize the request scoped parameter $request.knowledge.answers (contains up to the 5 highest confidence answers) and $request.knowledge.questions (contains the corresponding questions) to construct the fulfillment.
	// Structure is documented below.
	TriggerFulfillment *KnowledgeConnectorSettingsTriggerFulfillmentInitParameters `json:"triggerFulfillment,omitempty" tf:"trigger_fulfillment,omitempty"`
}

type KnowledgeConnectorSettingsObservation struct {

	// Optional. List of related data store connections.
	// Structure is documented below.
	DataStoreConnections []DataStoreConnectionsObservation `json:"dataStoreConnections,omitempty" tf:"data_store_connections,omitempty"`

	// Whether Knowledge Connector is enabled or not.
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// The target flow to transition to. Format: projects//locations//agents//flows/.
	// This field is part of a union field target: Only one of targetPage or targetFlow may be set.
	TargetFlow *string `json:"targetFlow,omitempty" tf:"target_flow,omitempty"`

	// The target page to transition to. Format: projects//locations//agents//flows//pages/.
	// The page must be in the same host flow (the flow that owns this KnowledgeConnectorSettings).
	// This field is part of a union field target: Only one of targetPage or targetFlow may be set.
	TargetPage *string `json:"targetPage,omitempty" tf:"target_page,omitempty"`

	// The fulfillment to be triggered.
	// When the answers from the Knowledge Connector are selected by Dialogflow, you can utitlize the request scoped parameter $request.knowledge.answers (contains up to the 5 highest confidence answers) and $request.knowledge.questions (contains the corresponding questions) to construct the fulfillment.
	// Structure is documented below.
	TriggerFulfillment *KnowledgeConnectorSettingsTriggerFulfillmentObservation `json:"triggerFulfillment,omitempty" tf:"trigger_fulfillment,omitempty"`
}

type KnowledgeConnectorSettingsParameters struct {

	// Optional. List of related data store connections.
	// Structure is documented below.
	// +kubebuilder:validation:Optional
	DataStoreConnections []DataStoreConnectionsParameters `json:"dataStoreConnections,omitempty" tf:"data_store_connections,omitempty"`

	// Whether Knowledge Connector is enabled or not.
	// +kubebuilder:validation:Optional
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// The target flow to transition to. Format: projects//locations//agents//flows/.
	// This field is part of a union field target: Only one of targetPage or targetFlow may be set.
	// +crossplane:generate:reference:type=github.com/upbound/provider-gcp/apis/dialogflowcx/v1beta2.Agent
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractParamPath("start_flow",true)
	// +kubebuilder:validation:Optional
	TargetFlow *string `json:"targetFlow,omitempty" tf:"target_flow,omitempty"`

	// Reference to a Agent in dialogflowcx to populate targetFlow.
	// +kubebuilder:validation:Optional
	TargetFlowRef *v1.Reference `json:"targetFlowRef,omitempty" tf:"-"`

	// Selector for a Agent in dialogflowcx to populate targetFlow.
	// +kubebuilder:validation:Optional
	TargetFlowSelector *v1.Selector `json:"targetFlowSelector,omitempty" tf:"-"`

	// The target page to transition to. Format: projects//locations//agents//flows//pages/.
	// The page must be in the same host flow (the flow that owns this KnowledgeConnectorSettings).
	// This field is part of a union field target: Only one of targetPage or targetFlow may be set.
	// +kubebuilder:validation:Optional
	TargetPage *string `json:"targetPage,omitempty" tf:"target_page,omitempty"`

	// The fulfillment to be triggered.
	// When the answers from the Knowledge Connector are selected by Dialogflow, you can utitlize the request scoped parameter $request.knowledge.answers (contains up to the 5 highest confidence answers) and $request.knowledge.questions (contains the corresponding questions) to construct the fulfillment.
	// Structure is documented below.
	// +kubebuilder:validation:Optional
	TriggerFulfillment *KnowledgeConnectorSettingsTriggerFulfillmentParameters `json:"triggerFulfillment,omitempty" tf:"trigger_fulfillment,omitempty"`
}

type KnowledgeConnectorSettingsTriggerFulfillmentInitParameters struct {

	// Hierarchical advanced settings for agent/flow/page/fulfillment/parameter. Settings exposed at lower level overrides the settings exposed at higher level. Overriding occurs at the sub-setting level. For example, the playbackInterruptionSettings at fulfillment level only overrides the playbackInterruptionSettings at the agent level, leaving other settings at the agent level unchanged.
	// DTMF settings does not override each other. DTMF settings set at different levels define DTMF detections running in parallel.
	// Hierarchy: Agent->Flow->Page->Fulfillment/Parameter.
	// Structure is documented below.
	AdvancedSettings *TriggerFulfillmentAdvancedSettingsInitParameters `json:"advancedSettings,omitempty" tf:"advanced_settings,omitempty"`

	// Conditional cases for this fulfillment.
	// Structure is documented below.
	ConditionalCases []TriggerFulfillmentConditionalCasesInitParameters `json:"conditionalCases,omitempty" tf:"conditional_cases,omitempty"`

	// If the flag is true, the agent will utilize LLM to generate a text response.
	// If LLM generation fails, the defined responses in the fulfillment will be respected.
	// This flag is only useful for fulfillments associated with no-match event handlers.
	EnableGenerativeFallback *bool `json:"enableGenerativeFallback,omitempty" tf:"enable_generative_fallback,omitempty"`

	// The list of rich message responses to present to the user.
	// Structure is documented below.
	Messages []TriggerFulfillmentMessagesInitParameters `json:"messages,omitempty" tf:"messages,omitempty"`

	// Whether Dialogflow should return currently queued fulfillment response messages in streaming APIs. If a webhook is specified, it happens before Dialogflow invokes webhook. Warning: 1) This flag only affects streaming API. Responses are still queued and returned once in non-streaming API. 2) The flag can be enabled in any fulfillment but only the first 3 partial responses will be returned. You may only want to apply it to fulfillments that have slow webhooks.
	ReturnPartialResponses *bool `json:"returnPartialResponses,omitempty" tf:"return_partial_responses,omitempty"`

	// Set parameter values before executing the webhook.
	// Structure is documented below.
	SetParameterActions []TriggerFulfillmentSetParameterActionsInitParameters `json:"setParameterActions,omitempty" tf:"set_parameter_actions,omitempty"`

	// The tag used by the webhook to identify which fulfillment is being called. This field is required if webhook is specified.
	Tag *string `json:"tag,omitempty" tf:"tag,omitempty"`

	// The webhook to call. Format: projects//locations//agents//webhooks/.
	// +crossplane:generate:reference:type=github.com/upbound/provider-gcp/apis/dialogflowcx/v1beta2.Webhook
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractResourceID()
	Webhook *string `json:"webhook,omitempty" tf:"webhook,omitempty"`

	// Reference to a Webhook in dialogflowcx to populate webhook.
	// +kubebuilder:validation:Optional
	WebhookRef *v1.Reference `json:"webhookRef,omitempty" tf:"-"`

	// Selector for a Webhook in dialogflowcx to populate webhook.
	// +kubebuilder:validation:Optional
	WebhookSelector *v1.Selector `json:"webhookSelector,omitempty" tf:"-"`
}

type KnowledgeConnectorSettingsTriggerFulfillmentObservation struct {

	// Hierarchical advanced settings for agent/flow/page/fulfillment/parameter. Settings exposed at lower level overrides the settings exposed at higher level. Overriding occurs at the sub-setting level. For example, the playbackInterruptionSettings at fulfillment level only overrides the playbackInterruptionSettings at the agent level, leaving other settings at the agent level unchanged.
	// DTMF settings does not override each other. DTMF settings set at different levels define DTMF detections running in parallel.
	// Hierarchy: Agent->Flow->Page->Fulfillment/Parameter.
	// Structure is documented below.
	AdvancedSettings *TriggerFulfillmentAdvancedSettingsObservation `json:"advancedSettings,omitempty" tf:"advanced_settings,omitempty"`

	// Conditional cases for this fulfillment.
	// Structure is documented below.
	ConditionalCases []TriggerFulfillmentConditionalCasesObservation `json:"conditionalCases,omitempty" tf:"conditional_cases,omitempty"`

	// If the flag is true, the agent will utilize LLM to generate a text response.
	// If LLM generation fails, the defined responses in the fulfillment will be respected.
	// This flag is only useful for fulfillments associated with no-match event handlers.
	EnableGenerativeFallback *bool `json:"enableGenerativeFallback,omitempty" tf:"enable_generative_fallback,omitempty"`

	// The list of rich message responses to present to the user.
	// Structure is documented below.
	Messages []TriggerFulfillmentMessagesObservation `json:"messages,omitempty" tf:"messages,omitempty"`

	// Whether Dialogflow should return currently queued fulfillment response messages in streaming APIs. If a webhook is specified, it happens before Dialogflow invokes webhook. Warning: 1) This flag only affects streaming API. Responses are still queued and returned once in non-streaming API. 2) The flag can be enabled in any fulfillment but only the first 3 partial responses will be returned. You may only want to apply it to fulfillments that have slow webhooks.
	ReturnPartialResponses *bool `json:"returnPartialResponses,omitempty" tf:"return_partial_responses,omitempty"`

	// Set parameter values before executing the webhook.
	// Structure is documented below.
	SetParameterActions []TriggerFulfillmentSetParameterActionsObservation `json:"setParameterActions,omitempty" tf:"set_parameter_actions,omitempty"`

	// The tag used by the webhook to identify which fulfillment is being called. This field is required if webhook is specified.
	Tag *string `json:"tag,omitempty" tf:"tag,omitempty"`

	// The webhook to call. Format: projects//locations//agents//webhooks/.
	Webhook *string `json:"webhook,omitempty" tf:"webhook,omitempty"`
}

type KnowledgeConnectorSettingsTriggerFulfillmentParameters struct {

	// Hierarchical advanced settings for agent/flow/page/fulfillment/parameter. Settings exposed at lower level overrides the settings exposed at higher level. Overriding occurs at the sub-setting level. For example, the playbackInterruptionSettings at fulfillment level only overrides the playbackInterruptionSettings at the agent level, leaving other settings at the agent level unchanged.
	// DTMF settings does not override each other. DTMF settings set at different levels define DTMF detections running in parallel.
	// Hierarchy: Agent->Flow->Page->Fulfillment/Parameter.
	// Structure is documented below.
	// +kubebuilder:validation:Optional
	AdvancedSettings *TriggerFulfillmentAdvancedSettingsParameters `json:"advancedSettings,omitempty" tf:"advanced_settings,omitempty"`

	// Conditional cases for this fulfillment.
	// Structure is documented below.
	// +kubebuilder:validation:Optional
	ConditionalCases []TriggerFulfillmentConditionalCasesParameters `json:"conditionalCases,omitempty" tf:"conditional_cases,omitempty"`

	// If the flag is true, the agent will utilize LLM to generate a text response.
	// If LLM generation fails, the defined responses in the fulfillment will be respected.
	// This flag is only useful for fulfillments associated with no-match event handlers.
	// +kubebuilder:validation:Optional
	EnableGenerativeFallback *bool `json:"enableGenerativeFallback,omitempty" tf:"enable_generative_fallback,omitempty"`

	// The list of rich message responses to present to the user.
	// Structure is documented below.
	// +kubebuilder:validation:Optional
	Messages []TriggerFulfillmentMessagesParameters `json:"messages,omitempty" tf:"messages,omitempty"`

	// Whether Dialogflow should return currently queued fulfillment response messages in streaming APIs. If a webhook is specified, it happens before Dialogflow invokes webhook. Warning: 1) This flag only affects streaming API. Responses are still queued and returned once in non-streaming API. 2) The flag can be enabled in any fulfillment but only the first 3 partial responses will be returned. You may only want to apply it to fulfillments that have slow webhooks.
	// +kubebuilder:validation:Optional
	ReturnPartialResponses *bool `json:"returnPartialResponses,omitempty" tf:"return_partial_responses,omitempty"`

	// Set parameter values before executing the webhook.
	// Structure is documented below.
	// +kubebuilder:validation:Optional
	SetParameterActions []TriggerFulfillmentSetParameterActionsParameters `json:"setParameterActions,omitempty" tf:"set_parameter_actions,omitempty"`

	// The tag used by the webhook to identify which fulfillment is being called. This field is required if webhook is specified.
	// +kubebuilder:validation:Optional
	Tag *string `json:"tag,omitempty" tf:"tag,omitempty"`

	// The webhook to call. Format: projects//locations//agents//webhooks/.
	// +crossplane:generate:reference:type=github.com/upbound/provider-gcp/apis/dialogflowcx/v1beta2.Webhook
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	Webhook *string `json:"webhook,omitempty" tf:"webhook,omitempty"`

	// Reference to a Webhook in dialogflowcx to populate webhook.
	// +kubebuilder:validation:Optional
	WebhookRef *v1.Reference `json:"webhookRef,omitempty" tf:"-"`

	// Selector for a Webhook in dialogflowcx to populate webhook.
	// +kubebuilder:validation:Optional
	WebhookSelector *v1.Selector `json:"webhookSelector,omitempty" tf:"-"`
}

type KnowledgeInfoCardInitParameters struct {
}

type KnowledgeInfoCardObservation struct {
}

type KnowledgeInfoCardParameters struct {
}

type LiveAgentHandoffInitParameters struct {

	// Custom metadata. Dialogflow doesn't impose any structure on this.
	Metadata *string `json:"metadata,omitempty" tf:"metadata,omitempty"`
}

type LiveAgentHandoffObservation struct {

	// Custom metadata. Dialogflow doesn't impose any structure on this.
	Metadata *string `json:"metadata,omitempty" tf:"metadata,omitempty"`
}

type LiveAgentHandoffParameters struct {

	// Custom metadata. Dialogflow doesn't impose any structure on this.
	// +kubebuilder:validation:Optional
	Metadata *string `json:"metadata,omitempty" tf:"metadata,omitempty"`
}

type MessagesConversationSuccessInitParameters struct {

	// Custom metadata. Dialogflow doesn't impose any structure on this.
	Metadata *string `json:"metadata,omitempty" tf:"metadata,omitempty"`
}

type MessagesConversationSuccessObservation struct {

	// Custom metadata. Dialogflow doesn't impose any structure on this.
	Metadata *string `json:"metadata,omitempty" tf:"metadata,omitempty"`
}

type MessagesConversationSuccessParameters struct {

	// Custom metadata. Dialogflow doesn't impose any structure on this.
	// +kubebuilder:validation:Optional
	Metadata *string `json:"metadata,omitempty" tf:"metadata,omitempty"`
}

type MessagesInitParameters struct {

	// The channel which the response is associated with. Clients can specify the channel via QueryParameters.channel, and only associated channel response will be returned.
	Channel *string `json:"channel,omitempty" tf:"channel,omitempty"`

	// Indicates that the conversation succeeded, i.e., the bot handled the issue that the customer talked to it about.
	// Dialogflow only uses this to determine which conversations should be counted as successful and doesn't process the metadata in this message in any way. Note that Dialogflow also considers conversations that get to the conversation end page as successful even if they don't return ConversationSuccess.
	// You may set this, for example:
	ConversationSuccess *ConversationSuccessInitParameters `json:"conversationSuccess,omitempty" tf:"conversation_success,omitempty"`

	// Indicates that the conversation should be handed off to a live agent.
	// Dialogflow only uses this to determine which conversations were handed off to a human agent for measurement purposes. What else to do with this signal is up to you and your handoff procedures.
	// You may set this, for example:
	LiveAgentHandoff *LiveAgentHandoffInitParameters `json:"liveAgentHandoff,omitempty" tf:"live_agent_handoff,omitempty"`

	// A text or ssml response that is preferentially used for TTS output audio synthesis, as described in the comment on the ResponseMessage message.
	// Structure is documented below.
	OutputAudioText *OutputAudioTextInitParameters `json:"outputAudioText,omitempty" tf:"output_audio_text,omitempty"`

	// A custom, platform-specific payload.
	Payload *string `json:"payload,omitempty" tf:"payload,omitempty"`

	// Specifies an audio clip to be played by the client as part of the response.
	// Structure is documented below.
	PlayAudio *PlayAudioInitParameters `json:"playAudio,omitempty" tf:"play_audio,omitempty"`

	// Represents the signal that telles the client to transfer the phone call connected to the agent to a third-party endpoint.
	// Structure is documented below.
	TelephonyTransferCall *TelephonyTransferCallInitParameters `json:"telephonyTransferCall,omitempty" tf:"telephony_transfer_call,omitempty"`

	// A collection of text responses.
	Text *TextInitParameters `json:"text,omitempty" tf:"text,omitempty"`
}

type MessagesLiveAgentHandoffInitParameters struct {

	// Custom metadata. Dialogflow doesn't impose any structure on this.
	Metadata *string `json:"metadata,omitempty" tf:"metadata,omitempty"`
}

type MessagesLiveAgentHandoffObservation struct {

	// Custom metadata. Dialogflow doesn't impose any structure on this.
	Metadata *string `json:"metadata,omitempty" tf:"metadata,omitempty"`
}

type MessagesLiveAgentHandoffParameters struct {

	// Custom metadata. Dialogflow doesn't impose any structure on this.
	// +kubebuilder:validation:Optional
	Metadata *string `json:"metadata,omitempty" tf:"metadata,omitempty"`
}

type MessagesObservation struct {

	// The channel which the response is associated with. Clients can specify the channel via QueryParameters.channel, and only associated channel response will be returned.
	Channel *string `json:"channel,omitempty" tf:"channel,omitempty"`

	// Indicates that the conversation succeeded, i.e., the bot handled the issue that the customer talked to it about.
	// Dialogflow only uses this to determine which conversations should be counted as successful and doesn't process the metadata in this message in any way. Note that Dialogflow also considers conversations that get to the conversation end page as successful even if they don't return ConversationSuccess.
	// You may set this, for example:
	ConversationSuccess *ConversationSuccessObservation `json:"conversationSuccess,omitempty" tf:"conversation_success,omitempty"`

	// Indicates that the conversation should be handed off to a live agent.
	// Dialogflow only uses this to determine which conversations were handed off to a human agent for measurement purposes. What else to do with this signal is up to you and your handoff procedures.
	// You may set this, for example:
	LiveAgentHandoff *LiveAgentHandoffObservation `json:"liveAgentHandoff,omitempty" tf:"live_agent_handoff,omitempty"`

	// A text or ssml response that is preferentially used for TTS output audio synthesis, as described in the comment on the ResponseMessage message.
	// Structure is documented below.
	OutputAudioText *OutputAudioTextObservation `json:"outputAudioText,omitempty" tf:"output_audio_text,omitempty"`

	// A custom, platform-specific payload.
	Payload *string `json:"payload,omitempty" tf:"payload,omitempty"`

	// Specifies an audio clip to be played by the client as part of the response.
	// Structure is documented below.
	PlayAudio *PlayAudioObservation `json:"playAudio,omitempty" tf:"play_audio,omitempty"`

	// Represents the signal that telles the client to transfer the phone call connected to the agent to a third-party endpoint.
	// Structure is documented below.
	TelephonyTransferCall *TelephonyTransferCallObservation `json:"telephonyTransferCall,omitempty" tf:"telephony_transfer_call,omitempty"`

	// A collection of text responses.
	Text *TextObservation `json:"text,omitempty" tf:"text,omitempty"`
}

type MessagesOutputAudioTextInitParameters struct {

	// The SSML text to be synthesized. For more information, see SSML.
	Ssml *string `json:"ssml,omitempty" tf:"ssml,omitempty"`

	// A collection of text responses.
	Text *string `json:"text,omitempty" tf:"text,omitempty"`
}

type MessagesOutputAudioTextObservation struct {

	// (Output)
	// Whether the playback of this message can be interrupted by the end user's speech and the client can then starts the next Dialogflow request.
	AllowPlaybackInterruption *bool `json:"allowPlaybackInterruption,omitempty" tf:"allow_playback_interruption,omitempty"`

	// The SSML text to be synthesized. For more information, see SSML.
	Ssml *string `json:"ssml,omitempty" tf:"ssml,omitempty"`

	// A collection of text responses.
	Text *string `json:"text,omitempty" tf:"text,omitempty"`
}

type MessagesOutputAudioTextParameters struct {

	// The SSML text to be synthesized. For more information, see SSML.
	// +kubebuilder:validation:Optional
	Ssml *string `json:"ssml,omitempty" tf:"ssml,omitempty"`

	// A collection of text responses.
	// +kubebuilder:validation:Optional
	Text *string `json:"text,omitempty" tf:"text,omitempty"`
}

type MessagesParameters struct {

	// The channel which the response is associated with. Clients can specify the channel via QueryParameters.channel, and only associated channel response will be returned.
	// +kubebuilder:validation:Optional
	Channel *string `json:"channel,omitempty" tf:"channel,omitempty"`

	// Indicates that the conversation succeeded, i.e., the bot handled the issue that the customer talked to it about.
	// Dialogflow only uses this to determine which conversations should be counted as successful and doesn't process the metadata in this message in any way. Note that Dialogflow also considers conversations that get to the conversation end page as successful even if they don't return ConversationSuccess.
	// You may set this, for example:
	// +kubebuilder:validation:Optional
	ConversationSuccess *ConversationSuccessParameters `json:"conversationSuccess,omitempty" tf:"conversation_success,omitempty"`

	// Indicates that the conversation should be handed off to a live agent.
	// Dialogflow only uses this to determine which conversations were handed off to a human agent for measurement purposes. What else to do with this signal is up to you and your handoff procedures.
	// You may set this, for example:
	// +kubebuilder:validation:Optional
	LiveAgentHandoff *LiveAgentHandoffParameters `json:"liveAgentHandoff,omitempty" tf:"live_agent_handoff,omitempty"`

	// A text or ssml response that is preferentially used for TTS output audio synthesis, as described in the comment on the ResponseMessage message.
	// Structure is documented below.
	// +kubebuilder:validation:Optional
	OutputAudioText *OutputAudioTextParameters `json:"outputAudioText,omitempty" tf:"output_audio_text,omitempty"`

	// A custom, platform-specific payload.
	// +kubebuilder:validation:Optional
	Payload *string `json:"payload,omitempty" tf:"payload,omitempty"`

	// Specifies an audio clip to be played by the client as part of the response.
	// Structure is documented below.
	// +kubebuilder:validation:Optional
	PlayAudio *PlayAudioParameters `json:"playAudio,omitempty" tf:"play_audio,omitempty"`

	// Represents the signal that telles the client to transfer the phone call connected to the agent to a third-party endpoint.
	// Structure is documented below.
	// +kubebuilder:validation:Optional
	TelephonyTransferCall *TelephonyTransferCallParameters `json:"telephonyTransferCall,omitempty" tf:"telephony_transfer_call,omitempty"`

	// A collection of text responses.
	// +kubebuilder:validation:Optional
	Text *TextParameters `json:"text,omitempty" tf:"text,omitempty"`
}

type MessagesPlayAudioInitParameters struct {

	// URI of the audio clip. Dialogflow does not impose any validation on this value. It is specific to the client that reads it.
	AudioURI *string `json:"audioUri,omitempty" tf:"audio_uri,omitempty"`
}

type MessagesPlayAudioObservation struct {

	// (Output)
	// Whether the playback of this message can be interrupted by the end user's speech and the client can then starts the next Dialogflow request.
	AllowPlaybackInterruption *bool `json:"allowPlaybackInterruption,omitempty" tf:"allow_playback_interruption,omitempty"`

	// URI of the audio clip. Dialogflow does not impose any validation on this value. It is specific to the client that reads it.
	AudioURI *string `json:"audioUri,omitempty" tf:"audio_uri,omitempty"`
}

type MessagesPlayAudioParameters struct {

	// URI of the audio clip. Dialogflow does not impose any validation on this value. It is specific to the client that reads it.
	// +kubebuilder:validation:Optional
	AudioURI *string `json:"audioUri" tf:"audio_uri,omitempty"`
}

type MessagesTelephonyTransferCallInitParameters struct {

	// Transfer the call to a phone number in E.164 format.
	PhoneNumber *string `json:"phoneNumber,omitempty" tf:"phone_number,omitempty"`
}

type MessagesTelephonyTransferCallObservation struct {

	// Transfer the call to a phone number in E.164 format.
	PhoneNumber *string `json:"phoneNumber,omitempty" tf:"phone_number,omitempty"`
}

type MessagesTelephonyTransferCallParameters struct {

	// Transfer the call to a phone number in E.164 format.
	// +kubebuilder:validation:Optional
	PhoneNumber *string `json:"phoneNumber" tf:"phone_number,omitempty"`
}

type MessagesTextInitParameters struct {

	// A collection of text responses.
	Text []*string `json:"text,omitempty" tf:"text,omitempty"`
}

type MessagesTextObservation struct {

	// (Output)
	// Whether the playback of this message can be interrupted by the end user's speech and the client can then starts the next Dialogflow request.
	AllowPlaybackInterruption *bool `json:"allowPlaybackInterruption,omitempty" tf:"allow_playback_interruption,omitempty"`

	// A collection of text responses.
	Text []*string `json:"text,omitempty" tf:"text,omitempty"`
}

type MessagesTextParameters struct {

	// A collection of text responses.
	// +kubebuilder:validation:Optional
	Text []*string `json:"text,omitempty" tf:"text,omitempty"`
}

type MixedAudioInitParameters struct {
}

type MixedAudioObservation struct {

	// Segments this audio response is composed of.
	// Structure is documented below.
	Segments []SegmentsObservation `json:"segments,omitempty" tf:"segments,omitempty"`
}

type MixedAudioParameters struct {
}

type NluSettingsInitParameters struct {

	// To filter out false positive results and still get variety in matched natural language inputs for your agent, you can tune the machine learning classification threshold.
	// If the returned score value is less than the threshold value, then a no-match event will be triggered. The score values range from 0.0 (completely uncertain) to 1.0 (completely certain). If set to 0.0, the default of 0.3 is used.
	ClassificationThreshold *float64 `json:"classificationThreshold,omitempty" tf:"classification_threshold,omitempty"`

	// Indicates NLU model training mode.
	ModelTrainingMode *string `json:"modelTrainingMode,omitempty" tf:"model_training_mode,omitempty"`

	// Indicates the type of NLU model.
	ModelType *string `json:"modelType,omitempty" tf:"model_type,omitempty"`
}

type NluSettingsObservation struct {

	// To filter out false positive results and still get variety in matched natural language inputs for your agent, you can tune the machine learning classification threshold.
	// If the returned score value is less than the threshold value, then a no-match event will be triggered. The score values range from 0.0 (completely uncertain) to 1.0 (completely certain). If set to 0.0, the default of 0.3 is used.
	ClassificationThreshold *float64 `json:"classificationThreshold,omitempty" tf:"classification_threshold,omitempty"`

	// Indicates NLU model training mode.
	ModelTrainingMode *string `json:"modelTrainingMode,omitempty" tf:"model_training_mode,omitempty"`

	// Indicates the type of NLU model.
	ModelType *string `json:"modelType,omitempty" tf:"model_type,omitempty"`
}

type NluSettingsParameters struct {

	// To filter out false positive results and still get variety in matched natural language inputs for your agent, you can tune the machine learning classification threshold.
	// If the returned score value is less than the threshold value, then a no-match event will be triggered. The score values range from 0.0 (completely uncertain) to 1.0 (completely certain). If set to 0.0, the default of 0.3 is used.
	// +kubebuilder:validation:Optional
	ClassificationThreshold *float64 `json:"classificationThreshold,omitempty" tf:"classification_threshold,omitempty"`

	// Indicates NLU model training mode.
	// +kubebuilder:validation:Optional
	ModelTrainingMode *string `json:"modelTrainingMode,omitempty" tf:"model_training_mode,omitempty"`

	// Indicates the type of NLU model.
	// +kubebuilder:validation:Optional
	ModelType *string `json:"modelType,omitempty" tf:"model_type,omitempty"`
}

type OutputAudioTextInitParameters struct {

	// The SSML text to be synthesized. For more information, see SSML.
	Ssml *string `json:"ssml,omitempty" tf:"ssml,omitempty"`

	// A collection of text responses.
	Text *string `json:"text,omitempty" tf:"text,omitempty"`
}

type OutputAudioTextObservation struct {

	// (Output)
	// Whether the playback of this message can be interrupted by the end user's speech and the client can then starts the next Dialogflow request.
	AllowPlaybackInterruption *bool `json:"allowPlaybackInterruption,omitempty" tf:"allow_playback_interruption,omitempty"`

	// The SSML text to be synthesized. For more information, see SSML.
	Ssml *string `json:"ssml,omitempty" tf:"ssml,omitempty"`

	// A collection of text responses.
	Text *string `json:"text,omitempty" tf:"text,omitempty"`
}

type OutputAudioTextParameters struct {

	// The SSML text to be synthesized. For more information, see SSML.
	// +kubebuilder:validation:Optional
	Ssml *string `json:"ssml,omitempty" tf:"ssml,omitempty"`

	// A collection of text responses.
	// +kubebuilder:validation:Optional
	Text *string `json:"text,omitempty" tf:"text,omitempty"`
}

type PlayAudioInitParameters struct {

	// URI of the audio clip. Dialogflow does not impose any validation on this value. It is specific to the client that reads it.
	AudioURI *string `json:"audioUri,omitempty" tf:"audio_uri,omitempty"`
}

type PlayAudioObservation struct {

	// (Output)
	// Whether the playback of this message can be interrupted by the end user's speech and the client can then starts the next Dialogflow request.
	AllowPlaybackInterruption *bool `json:"allowPlaybackInterruption,omitempty" tf:"allow_playback_interruption,omitempty"`

	// URI of the audio clip. Dialogflow does not impose any validation on this value. It is specific to the client that reads it.
	AudioURI *string `json:"audioUri,omitempty" tf:"audio_uri,omitempty"`
}

type PlayAudioParameters struct {

	// URI of the audio clip. Dialogflow does not impose any validation on this value. It is specific to the client that reads it.
	// +kubebuilder:validation:Optional
	AudioURI *string `json:"audioUri" tf:"audio_uri,omitempty"`
}

type SegmentsInitParameters struct {
}

type SegmentsObservation struct {

	// (Output)
	// Whether the playback of this message can be interrupted by the end user's speech and the client can then starts the next Dialogflow request.
	AllowPlaybackInterruption *bool `json:"allowPlaybackInterruption,omitempty" tf:"allow_playback_interruption,omitempty"`

	// Raw audio synthesized from the Dialogflow agent's response using the output config specified in the request.
	// A base64-encoded string.
	// This field is part of a union field content: Only one of audio or uri may be set.
	Audio *string `json:"audio,omitempty" tf:"audio,omitempty"`

	// Client-specific URI that points to an audio clip accessible to the client. Dialogflow does not impose any validation on it.
	// This field is part of a union field content: Only one of audio or uri may be set.
	URI *string `json:"uri,omitempty" tf:"uri,omitempty"`
}

type SegmentsParameters struct {
}

type SetParameterActionsInitParameters struct {

	// Display name of the parameter.
	Parameter *string `json:"parameter,omitempty" tf:"parameter,omitempty"`

	// The new JSON-encoded value of the parameter. A null value clears the parameter.
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type SetParameterActionsObservation struct {

	// Display name of the parameter.
	Parameter *string `json:"parameter,omitempty" tf:"parameter,omitempty"`

	// The new JSON-encoded value of the parameter. A null value clears the parameter.
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type SetParameterActionsParameters struct {

	// Display name of the parameter.
	// +kubebuilder:validation:Optional
	Parameter *string `json:"parameter,omitempty" tf:"parameter,omitempty"`

	// The new JSON-encoded value of the parameter. A null value clears the parameter.
	// +kubebuilder:validation:Optional
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type TelephonyTransferCallInitParameters struct {

	// Transfer the call to a phone number in E.164 format.
	PhoneNumber *string `json:"phoneNumber,omitempty" tf:"phone_number,omitempty"`
}

type TelephonyTransferCallObservation struct {

	// Transfer the call to a phone number in E.164 format.
	PhoneNumber *string `json:"phoneNumber,omitempty" tf:"phone_number,omitempty"`
}

type TelephonyTransferCallParameters struct {

	// Transfer the call to a phone number in E.164 format.
	// +kubebuilder:validation:Optional
	PhoneNumber *string `json:"phoneNumber" tf:"phone_number,omitempty"`
}

type TextInitParameters struct {

	// A collection of text responses.
	Text []*string `json:"text,omitempty" tf:"text,omitempty"`
}

type TextObservation struct {

	// (Output)
	// Whether the playback of this message can be interrupted by the end user's speech and the client can then starts the next Dialogflow request.
	AllowPlaybackInterruption *bool `json:"allowPlaybackInterruption,omitempty" tf:"allow_playback_interruption,omitempty"`

	// A collection of text responses.
	Text []*string `json:"text,omitempty" tf:"text,omitempty"`
}

type TextParameters struct {

	// A collection of text responses.
	// +kubebuilder:validation:Optional
	Text []*string `json:"text,omitempty" tf:"text,omitempty"`
}

type TransitionRoutesInitParameters struct {

	// The condition to evaluate against form parameters or session parameters.
	// At least one of intent or condition must be specified. When both intent and condition are specified, the transition can only happen when both are fulfilled.
	Condition *string `json:"condition,omitempty" tf:"condition,omitempty"`

	// The unique identifier of an Intent.
	// Format: projects//locations//agents//intents/. Indicates that the transition can only happen when the given intent is matched. At least one of intent or condition must be specified. When both intent and condition are specified, the transition can only happen when both are fulfilled.
	Intent *string `json:"intent,omitempty" tf:"intent,omitempty"`

	// The target flow to transition to.
	// Format: projects//locations//agents//flows/.
	// +crossplane:generate:reference:type=github.com/upbound/provider-gcp/apis/dialogflowcx/v1beta2.Agent
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractParamPath("start_flow",true)
	TargetFlow *string `json:"targetFlow,omitempty" tf:"target_flow,omitempty"`

	// Reference to a Agent in dialogflowcx to populate targetFlow.
	// +kubebuilder:validation:Optional
	TargetFlowRef *v1.Reference `json:"targetFlowRef,omitempty" tf:"-"`

	// Selector for a Agent in dialogflowcx to populate targetFlow.
	// +kubebuilder:validation:Optional
	TargetFlowSelector *v1.Selector `json:"targetFlowSelector,omitempty" tf:"-"`

	// The target page to transition to.
	// Format: projects//locations//agents//flows//pages/.
	TargetPage *string `json:"targetPage,omitempty" tf:"target_page,omitempty"`

	// The fulfillment to call when the condition is satisfied. At least one of triggerFulfillment and target must be specified. When both are defined, triggerFulfillment is executed first.
	// Structure is documented below.
	TriggerFulfillment *TransitionRoutesTriggerFulfillmentInitParameters `json:"triggerFulfillment,omitempty" tf:"trigger_fulfillment,omitempty"`
}

type TransitionRoutesObservation struct {

	// The condition to evaluate against form parameters or session parameters.
	// At least one of intent or condition must be specified. When both intent and condition are specified, the transition can only happen when both are fulfilled.
	Condition *string `json:"condition,omitempty" tf:"condition,omitempty"`

	// The unique identifier of an Intent.
	// Format: projects//locations//agents//intents/. Indicates that the transition can only happen when the given intent is matched. At least one of intent or condition must be specified. When both intent and condition are specified, the transition can only happen when both are fulfilled.
	Intent *string `json:"intent,omitempty" tf:"intent,omitempty"`

	// (Output)
	// The unique identifier of this transition route.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// The target flow to transition to.
	// Format: projects//locations//agents//flows/.
	TargetFlow *string `json:"targetFlow,omitempty" tf:"target_flow,omitempty"`

	// The target page to transition to.
	// Format: projects//locations//agents//flows//pages/.
	TargetPage *string `json:"targetPage,omitempty" tf:"target_page,omitempty"`

	// The fulfillment to call when the condition is satisfied. At least one of triggerFulfillment and target must be specified. When both are defined, triggerFulfillment is executed first.
	// Structure is documented below.
	TriggerFulfillment *TransitionRoutesTriggerFulfillmentObservation `json:"triggerFulfillment,omitempty" tf:"trigger_fulfillment,omitempty"`
}

type TransitionRoutesParameters struct {

	// The condition to evaluate against form parameters or session parameters.
	// At least one of intent or condition must be specified. When both intent and condition are specified, the transition can only happen when both are fulfilled.
	// +kubebuilder:validation:Optional
	Condition *string `json:"condition,omitempty" tf:"condition,omitempty"`

	// The unique identifier of an Intent.
	// Format: projects//locations//agents//intents/. Indicates that the transition can only happen when the given intent is matched. At least one of intent or condition must be specified. When both intent and condition are specified, the transition can only happen when both are fulfilled.
	// +kubebuilder:validation:Optional
	Intent *string `json:"intent,omitempty" tf:"intent,omitempty"`

	// The target flow to transition to.
	// Format: projects//locations//agents//flows/.
	// +crossplane:generate:reference:type=github.com/upbound/provider-gcp/apis/dialogflowcx/v1beta2.Agent
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractParamPath("start_flow",true)
	// +kubebuilder:validation:Optional
	TargetFlow *string `json:"targetFlow,omitempty" tf:"target_flow,omitempty"`

	// Reference to a Agent in dialogflowcx to populate targetFlow.
	// +kubebuilder:validation:Optional
	TargetFlowRef *v1.Reference `json:"targetFlowRef,omitempty" tf:"-"`

	// Selector for a Agent in dialogflowcx to populate targetFlow.
	// +kubebuilder:validation:Optional
	TargetFlowSelector *v1.Selector `json:"targetFlowSelector,omitempty" tf:"-"`

	// The target page to transition to.
	// Format: projects//locations//agents//flows//pages/.
	// +kubebuilder:validation:Optional
	TargetPage *string `json:"targetPage,omitempty" tf:"target_page,omitempty"`

	// The fulfillment to call when the condition is satisfied. At least one of triggerFulfillment and target must be specified. When both are defined, triggerFulfillment is executed first.
	// Structure is documented below.
	// +kubebuilder:validation:Optional
	TriggerFulfillment *TransitionRoutesTriggerFulfillmentParameters `json:"triggerFulfillment,omitempty" tf:"trigger_fulfillment,omitempty"`
}

type TransitionRoutesTriggerFulfillmentConditionalCasesInitParameters struct {

	// A JSON encoded list of cascading if-else conditions. Cases are mutually exclusive. The first one with a matching condition is selected, all the rest ignored.
	// See Case for the schema.
	Cases *string `json:"cases,omitempty" tf:"cases,omitempty"`
}

type TransitionRoutesTriggerFulfillmentConditionalCasesObservation struct {

	// A JSON encoded list of cascading if-else conditions. Cases are mutually exclusive. The first one with a matching condition is selected, all the rest ignored.
	// See Case for the schema.
	Cases *string `json:"cases,omitempty" tf:"cases,omitempty"`
}

type TransitionRoutesTriggerFulfillmentConditionalCasesParameters struct {

	// A JSON encoded list of cascading if-else conditions. Cases are mutually exclusive. The first one with a matching condition is selected, all the rest ignored.
	// See Case for the schema.
	// +kubebuilder:validation:Optional
	Cases *string `json:"cases,omitempty" tf:"cases,omitempty"`
}

type TransitionRoutesTriggerFulfillmentInitParameters struct {

	// Conditional cases for this fulfillment.
	// Structure is documented below.
	ConditionalCases []TransitionRoutesTriggerFulfillmentConditionalCasesInitParameters `json:"conditionalCases,omitempty" tf:"conditional_cases,omitempty"`

	// The list of rich message responses to present to the user.
	// Structure is documented below.
	Messages []TransitionRoutesTriggerFulfillmentMessagesInitParameters `json:"messages,omitempty" tf:"messages,omitempty"`

	// Whether Dialogflow should return currently queued fulfillment response messages in streaming APIs. If a webhook is specified, it happens before Dialogflow invokes webhook. Warning: 1) This flag only affects streaming API. Responses are still queued and returned once in non-streaming API. 2) The flag can be enabled in any fulfillment but only the first 3 partial responses will be returned. You may only want to apply it to fulfillments that have slow webhooks.
	ReturnPartialResponses *bool `json:"returnPartialResponses,omitempty" tf:"return_partial_responses,omitempty"`

	// Set parameter values before executing the webhook.
	// Structure is documented below.
	SetParameterActions []TransitionRoutesTriggerFulfillmentSetParameterActionsInitParameters `json:"setParameterActions,omitempty" tf:"set_parameter_actions,omitempty"`

	// The tag used by the webhook to identify which fulfillment is being called. This field is required if webhook is specified.
	Tag *string `json:"tag,omitempty" tf:"tag,omitempty"`

	// The webhook to call. Format: projects//locations//agents//webhooks/.
	Webhook *string `json:"webhook,omitempty" tf:"webhook,omitempty"`
}

type TransitionRoutesTriggerFulfillmentMessagesInitParameters struct {

	// The channel which the response is associated with. Clients can specify the channel via QueryParameters.channel, and only associated channel response will be returned.
	Channel *string `json:"channel,omitempty" tf:"channel,omitempty"`

	// Indicates that the conversation succeeded, i.e., the bot handled the issue that the customer talked to it about.
	// Dialogflow only uses this to determine which conversations should be counted as successful and doesn't process the metadata in this message in any way. Note that Dialogflow also considers conversations that get to the conversation end page as successful even if they don't return ConversationSuccess.
	// You may set this, for example:
	ConversationSuccess *TriggerFulfillmentMessagesConversationSuccessInitParameters `json:"conversationSuccess,omitempty" tf:"conversation_success,omitempty"`

	// Indicates that the conversation should be handed off to a live agent.
	// Dialogflow only uses this to determine which conversations were handed off to a human agent for measurement purposes. What else to do with this signal is up to you and your handoff procedures.
	// You may set this, for example:
	LiveAgentHandoff *TriggerFulfillmentMessagesLiveAgentHandoffInitParameters `json:"liveAgentHandoff,omitempty" tf:"live_agent_handoff,omitempty"`

	// A text or ssml response that is preferentially used for TTS output audio synthesis, as described in the comment on the ResponseMessage message.
	// Structure is documented below.
	OutputAudioText *TriggerFulfillmentMessagesOutputAudioTextInitParameters `json:"outputAudioText,omitempty" tf:"output_audio_text,omitempty"`

	// A custom, platform-specific payload.
	Payload *string `json:"payload,omitempty" tf:"payload,omitempty"`

	// Specifies an audio clip to be played by the client as part of the response.
	// Structure is documented below.
	PlayAudio *TriggerFulfillmentMessagesPlayAudioInitParameters `json:"playAudio,omitempty" tf:"play_audio,omitempty"`

	// Represents the signal that telles the client to transfer the phone call connected to the agent to a third-party endpoint.
	// Structure is documented below.
	TelephonyTransferCall *TriggerFulfillmentMessagesTelephonyTransferCallInitParameters `json:"telephonyTransferCall,omitempty" tf:"telephony_transfer_call,omitempty"`

	// A collection of text responses.
	Text *TriggerFulfillmentMessagesTextInitParameters `json:"text,omitempty" tf:"text,omitempty"`
}

type TransitionRoutesTriggerFulfillmentMessagesObservation struct {

	// The channel which the response is associated with. Clients can specify the channel via QueryParameters.channel, and only associated channel response will be returned.
	Channel *string `json:"channel,omitempty" tf:"channel,omitempty"`

	// Indicates that the conversation succeeded, i.e., the bot handled the issue that the customer talked to it about.
	// Dialogflow only uses this to determine which conversations should be counted as successful and doesn't process the metadata in this message in any way. Note that Dialogflow also considers conversations that get to the conversation end page as successful even if they don't return ConversationSuccess.
	// You may set this, for example:
	ConversationSuccess *TriggerFulfillmentMessagesConversationSuccessObservation `json:"conversationSuccess,omitempty" tf:"conversation_success,omitempty"`

	// Indicates that the conversation should be handed off to a live agent.
	// Dialogflow only uses this to determine which conversations were handed off to a human agent for measurement purposes. What else to do with this signal is up to you and your handoff procedures.
	// You may set this, for example:
	LiveAgentHandoff *TriggerFulfillmentMessagesLiveAgentHandoffObservation `json:"liveAgentHandoff,omitempty" tf:"live_agent_handoff,omitempty"`

	// A text or ssml response that is preferentially used for TTS output audio synthesis, as described in the comment on the ResponseMessage message.
	// Structure is documented below.
	OutputAudioText *TriggerFulfillmentMessagesOutputAudioTextObservation `json:"outputAudioText,omitempty" tf:"output_audio_text,omitempty"`

	// A custom, platform-specific payload.
	Payload *string `json:"payload,omitempty" tf:"payload,omitempty"`

	// Specifies an audio clip to be played by the client as part of the response.
	// Structure is documented below.
	PlayAudio *TriggerFulfillmentMessagesPlayAudioObservation `json:"playAudio,omitempty" tf:"play_audio,omitempty"`

	// Represents the signal that telles the client to transfer the phone call connected to the agent to a third-party endpoint.
	// Structure is documented below.
	TelephonyTransferCall *TriggerFulfillmentMessagesTelephonyTransferCallObservation `json:"telephonyTransferCall,omitempty" tf:"telephony_transfer_call,omitempty"`

	// A collection of text responses.
	Text *TriggerFulfillmentMessagesTextObservation `json:"text,omitempty" tf:"text,omitempty"`
}

type TransitionRoutesTriggerFulfillmentMessagesParameters struct {

	// The channel which the response is associated with. Clients can specify the channel via QueryParameters.channel, and only associated channel response will be returned.
	// +kubebuilder:validation:Optional
	Channel *string `json:"channel,omitempty" tf:"channel,omitempty"`

	// Indicates that the conversation succeeded, i.e., the bot handled the issue that the customer talked to it about.
	// Dialogflow only uses this to determine which conversations should be counted as successful and doesn't process the metadata in this message in any way. Note that Dialogflow also considers conversations that get to the conversation end page as successful even if they don't return ConversationSuccess.
	// You may set this, for example:
	// +kubebuilder:validation:Optional
	ConversationSuccess *TriggerFulfillmentMessagesConversationSuccessParameters `json:"conversationSuccess,omitempty" tf:"conversation_success,omitempty"`

	// Indicates that the conversation should be handed off to a live agent.
	// Dialogflow only uses this to determine which conversations were handed off to a human agent for measurement purposes. What else to do with this signal is up to you and your handoff procedures.
	// You may set this, for example:
	// +kubebuilder:validation:Optional
	LiveAgentHandoff *TriggerFulfillmentMessagesLiveAgentHandoffParameters `json:"liveAgentHandoff,omitempty" tf:"live_agent_handoff,omitempty"`

	// A text or ssml response that is preferentially used for TTS output audio synthesis, as described in the comment on the ResponseMessage message.
	// Structure is documented below.
	// +kubebuilder:validation:Optional
	OutputAudioText *TriggerFulfillmentMessagesOutputAudioTextParameters `json:"outputAudioText,omitempty" tf:"output_audio_text,omitempty"`

	// A custom, platform-specific payload.
	// +kubebuilder:validation:Optional
	Payload *string `json:"payload,omitempty" tf:"payload,omitempty"`

	// Specifies an audio clip to be played by the client as part of the response.
	// Structure is documented below.
	// +kubebuilder:validation:Optional
	PlayAudio *TriggerFulfillmentMessagesPlayAudioParameters `json:"playAudio,omitempty" tf:"play_audio,omitempty"`

	// Represents the signal that telles the client to transfer the phone call connected to the agent to a third-party endpoint.
	// Structure is documented below.
	// +kubebuilder:validation:Optional
	TelephonyTransferCall *TriggerFulfillmentMessagesTelephonyTransferCallParameters `json:"telephonyTransferCall,omitempty" tf:"telephony_transfer_call,omitempty"`

	// A collection of text responses.
	// +kubebuilder:validation:Optional
	Text *TriggerFulfillmentMessagesTextParameters `json:"text,omitempty" tf:"text,omitempty"`
}

type TransitionRoutesTriggerFulfillmentObservation struct {

	// Conditional cases for this fulfillment.
	// Structure is documented below.
	ConditionalCases []TransitionRoutesTriggerFulfillmentConditionalCasesObservation `json:"conditionalCases,omitempty" tf:"conditional_cases,omitempty"`

	// The list of rich message responses to present to the user.
	// Structure is documented below.
	Messages []TransitionRoutesTriggerFulfillmentMessagesObservation `json:"messages,omitempty" tf:"messages,omitempty"`

	// Whether Dialogflow should return currently queued fulfillment response messages in streaming APIs. If a webhook is specified, it happens before Dialogflow invokes webhook. Warning: 1) This flag only affects streaming API. Responses are still queued and returned once in non-streaming API. 2) The flag can be enabled in any fulfillment but only the first 3 partial responses will be returned. You may only want to apply it to fulfillments that have slow webhooks.
	ReturnPartialResponses *bool `json:"returnPartialResponses,omitempty" tf:"return_partial_responses,omitempty"`

	// Set parameter values before executing the webhook.
	// Structure is documented below.
	SetParameterActions []TransitionRoutesTriggerFulfillmentSetParameterActionsObservation `json:"setParameterActions,omitempty" tf:"set_parameter_actions,omitempty"`

	// The tag used by the webhook to identify which fulfillment is being called. This field is required if webhook is specified.
	Tag *string `json:"tag,omitempty" tf:"tag,omitempty"`

	// The webhook to call. Format: projects//locations//agents//webhooks/.
	Webhook *string `json:"webhook,omitempty" tf:"webhook,omitempty"`
}

type TransitionRoutesTriggerFulfillmentParameters struct {

	// Conditional cases for this fulfillment.
	// Structure is documented below.
	// +kubebuilder:validation:Optional
	ConditionalCases []TransitionRoutesTriggerFulfillmentConditionalCasesParameters `json:"conditionalCases,omitempty" tf:"conditional_cases,omitempty"`

	// The list of rich message responses to present to the user.
	// Structure is documented below.
	// +kubebuilder:validation:Optional
	Messages []TransitionRoutesTriggerFulfillmentMessagesParameters `json:"messages,omitempty" tf:"messages,omitempty"`

	// Whether Dialogflow should return currently queued fulfillment response messages in streaming APIs. If a webhook is specified, it happens before Dialogflow invokes webhook. Warning: 1) This flag only affects streaming API. Responses are still queued and returned once in non-streaming API. 2) The flag can be enabled in any fulfillment but only the first 3 partial responses will be returned. You may only want to apply it to fulfillments that have slow webhooks.
	// +kubebuilder:validation:Optional
	ReturnPartialResponses *bool `json:"returnPartialResponses,omitempty" tf:"return_partial_responses,omitempty"`

	// Set parameter values before executing the webhook.
	// Structure is documented below.
	// +kubebuilder:validation:Optional
	SetParameterActions []TransitionRoutesTriggerFulfillmentSetParameterActionsParameters `json:"setParameterActions,omitempty" tf:"set_parameter_actions,omitempty"`

	// The tag used by the webhook to identify which fulfillment is being called. This field is required if webhook is specified.
	// +kubebuilder:validation:Optional
	Tag *string `json:"tag,omitempty" tf:"tag,omitempty"`

	// The webhook to call. Format: projects//locations//agents//webhooks/.
	// +kubebuilder:validation:Optional
	Webhook *string `json:"webhook,omitempty" tf:"webhook,omitempty"`
}

type TransitionRoutesTriggerFulfillmentSetParameterActionsInitParameters struct {

	// Display name of the parameter.
	Parameter *string `json:"parameter,omitempty" tf:"parameter,omitempty"`

	// The new JSON-encoded value of the parameter. A null value clears the parameter.
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type TransitionRoutesTriggerFulfillmentSetParameterActionsObservation struct {

	// Display name of the parameter.
	Parameter *string `json:"parameter,omitempty" tf:"parameter,omitempty"`

	// The new JSON-encoded value of the parameter. A null value clears the parameter.
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type TransitionRoutesTriggerFulfillmentSetParameterActionsParameters struct {

	// Display name of the parameter.
	// +kubebuilder:validation:Optional
	Parameter *string `json:"parameter,omitempty" tf:"parameter,omitempty"`

	// The new JSON-encoded value of the parameter. A null value clears the parameter.
	// +kubebuilder:validation:Optional
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type TriggerFulfillmentAdvancedSettingsDtmfSettingsInitParameters struct {

	// Whether Knowledge Connector is enabled or not.
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// Endpoint timeout setting for matching dtmf input to regex.
	// A duration in seconds with up to nine fractional digits, ending with 's'. Example: "3.500s".
	EndpointingTimeoutDuration *string `json:"endpointingTimeoutDuration,omitempty" tf:"endpointing_timeout_duration,omitempty"`

	// The digit that terminates a DTMF digit sequence.
	FinishDigit *string `json:"finishDigit,omitempty" tf:"finish_digit,omitempty"`

	// Interdigit timeout setting for matching dtmf input to regex.
	// A duration in seconds with up to nine fractional digits, ending with 's'. Example: "3.500s".
	InterdigitTimeoutDuration *string `json:"interdigitTimeoutDuration,omitempty" tf:"interdigit_timeout_duration,omitempty"`

	// Max length of DTMF digits.
	MaxDigits *float64 `json:"maxDigits,omitempty" tf:"max_digits,omitempty"`
}

type TriggerFulfillmentAdvancedSettingsDtmfSettingsObservation struct {

	// Whether Knowledge Connector is enabled or not.
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// Endpoint timeout setting for matching dtmf input to regex.
	// A duration in seconds with up to nine fractional digits, ending with 's'. Example: "3.500s".
	EndpointingTimeoutDuration *string `json:"endpointingTimeoutDuration,omitempty" tf:"endpointing_timeout_duration,omitempty"`

	// The digit that terminates a DTMF digit sequence.
	FinishDigit *string `json:"finishDigit,omitempty" tf:"finish_digit,omitempty"`

	// Interdigit timeout setting for matching dtmf input to regex.
	// A duration in seconds with up to nine fractional digits, ending with 's'. Example: "3.500s".
	InterdigitTimeoutDuration *string `json:"interdigitTimeoutDuration,omitempty" tf:"interdigit_timeout_duration,omitempty"`

	// Max length of DTMF digits.
	MaxDigits *float64 `json:"maxDigits,omitempty" tf:"max_digits,omitempty"`
}

type TriggerFulfillmentAdvancedSettingsDtmfSettingsParameters struct {

	// Whether Knowledge Connector is enabled or not.
	// +kubebuilder:validation:Optional
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// Endpoint timeout setting for matching dtmf input to regex.
	// A duration in seconds with up to nine fractional digits, ending with 's'. Example: "3.500s".
	// +kubebuilder:validation:Optional
	EndpointingTimeoutDuration *string `json:"endpointingTimeoutDuration,omitempty" tf:"endpointing_timeout_duration,omitempty"`

	// The digit that terminates a DTMF digit sequence.
	// +kubebuilder:validation:Optional
	FinishDigit *string `json:"finishDigit,omitempty" tf:"finish_digit,omitempty"`

	// Interdigit timeout setting for matching dtmf input to regex.
	// A duration in seconds with up to nine fractional digits, ending with 's'. Example: "3.500s".
	// +kubebuilder:validation:Optional
	InterdigitTimeoutDuration *string `json:"interdigitTimeoutDuration,omitempty" tf:"interdigit_timeout_duration,omitempty"`

	// Max length of DTMF digits.
	// +kubebuilder:validation:Optional
	MaxDigits *float64 `json:"maxDigits,omitempty" tf:"max_digits,omitempty"`
}

type TriggerFulfillmentAdvancedSettingsInitParameters struct {

	// Define behaviors for DTMF (dual tone multi frequency). DTMF settings does not override each other. DTMF settings set at different levels define DTMF detections running in parallel. Exposed at the following levels:
	DtmfSettings *TriggerFulfillmentAdvancedSettingsDtmfSettingsInitParameters `json:"dtmfSettings,omitempty" tf:"dtmf_settings,omitempty"`

	// Settings for logging. Settings for Dialogflow History, Contact Center messages, StackDriver logs, and speech logging. Exposed at the following levels:
	LoggingSettings *TriggerFulfillmentAdvancedSettingsLoggingSettingsInitParameters `json:"loggingSettings,omitempty" tf:"logging_settings,omitempty"`

	// Settings for speech to text detection. Exposed at the following levels:
	SpeechSettings *TriggerFulfillmentAdvancedSettingsSpeechSettingsInitParameters `json:"speechSettings,omitempty" tf:"speech_settings,omitempty"`
}

type TriggerFulfillmentAdvancedSettingsLoggingSettingsInitParameters struct {

	// Enables consent-based end-user input redaction, if true, a pre-defined session parameter $session.params.conversation-redaction will be used to determine if the utterance should be redacted.
	EnableConsentBasedRedaction *bool `json:"enableConsentBasedRedaction,omitempty" tf:"enable_consent_based_redaction,omitempty"`

	// Enables DF Interaction logging.
	EnableInteractionLogging *bool `json:"enableInteractionLogging,omitempty" tf:"enable_interaction_logging,omitempty"`

	// Enables Google Cloud Logging.
	EnableStackdriverLogging *bool `json:"enableStackdriverLogging,omitempty" tf:"enable_stackdriver_logging,omitempty"`
}

type TriggerFulfillmentAdvancedSettingsLoggingSettingsObservation struct {

	// Enables consent-based end-user input redaction, if true, a pre-defined session parameter $session.params.conversation-redaction will be used to determine if the utterance should be redacted.
	EnableConsentBasedRedaction *bool `json:"enableConsentBasedRedaction,omitempty" tf:"enable_consent_based_redaction,omitempty"`

	// Enables DF Interaction logging.
	EnableInteractionLogging *bool `json:"enableInteractionLogging,omitempty" tf:"enable_interaction_logging,omitempty"`

	// Enables Google Cloud Logging.
	EnableStackdriverLogging *bool `json:"enableStackdriverLogging,omitempty" tf:"enable_stackdriver_logging,omitempty"`
}

type TriggerFulfillmentAdvancedSettingsLoggingSettingsParameters struct {

	// Enables consent-based end-user input redaction, if true, a pre-defined session parameter $session.params.conversation-redaction will be used to determine if the utterance should be redacted.
	// +kubebuilder:validation:Optional
	EnableConsentBasedRedaction *bool `json:"enableConsentBasedRedaction,omitempty" tf:"enable_consent_based_redaction,omitempty"`

	// Enables DF Interaction logging.
	// +kubebuilder:validation:Optional
	EnableInteractionLogging *bool `json:"enableInteractionLogging,omitempty" tf:"enable_interaction_logging,omitempty"`

	// Enables Google Cloud Logging.
	// +kubebuilder:validation:Optional
	EnableStackdriverLogging *bool `json:"enableStackdriverLogging,omitempty" tf:"enable_stackdriver_logging,omitempty"`
}

type TriggerFulfillmentAdvancedSettingsObservation struct {

	// Define behaviors for DTMF (dual tone multi frequency). DTMF settings does not override each other. DTMF settings set at different levels define DTMF detections running in parallel. Exposed at the following levels:
	DtmfSettings *TriggerFulfillmentAdvancedSettingsDtmfSettingsObservation `json:"dtmfSettings,omitempty" tf:"dtmf_settings,omitempty"`

	// Settings for logging. Settings for Dialogflow History, Contact Center messages, StackDriver logs, and speech logging. Exposed at the following levels:
	LoggingSettings *TriggerFulfillmentAdvancedSettingsLoggingSettingsObservation `json:"loggingSettings,omitempty" tf:"logging_settings,omitempty"`

	// Settings for speech to text detection. Exposed at the following levels:
	SpeechSettings *TriggerFulfillmentAdvancedSettingsSpeechSettingsObservation `json:"speechSettings,omitempty" tf:"speech_settings,omitempty"`
}

type TriggerFulfillmentAdvancedSettingsParameters struct {

	// Define behaviors for DTMF (dual tone multi frequency). DTMF settings does not override each other. DTMF settings set at different levels define DTMF detections running in parallel. Exposed at the following levels:
	// +kubebuilder:validation:Optional
	DtmfSettings *TriggerFulfillmentAdvancedSettingsDtmfSettingsParameters `json:"dtmfSettings,omitempty" tf:"dtmf_settings,omitempty"`

	// Settings for logging. Settings for Dialogflow History, Contact Center messages, StackDriver logs, and speech logging. Exposed at the following levels:
	// +kubebuilder:validation:Optional
	LoggingSettings *TriggerFulfillmentAdvancedSettingsLoggingSettingsParameters `json:"loggingSettings,omitempty" tf:"logging_settings,omitempty"`

	// Settings for speech to text detection. Exposed at the following levels:
	// +kubebuilder:validation:Optional
	SpeechSettings *TriggerFulfillmentAdvancedSettingsSpeechSettingsParameters `json:"speechSettings,omitempty" tf:"speech_settings,omitempty"`
}

type TriggerFulfillmentAdvancedSettingsSpeechSettingsInitParameters struct {

	// Sensitivity of the speech model that detects the end of speech. Scale from 0 to 100.
	EndpointerSensitivity *float64 `json:"endpointerSensitivity,omitempty" tf:"endpointer_sensitivity,omitempty"`

	// Mapping from language to Speech-to-Text model. The mapped Speech-to-Text model will be selected for requests from its corresponding language. For more information, see Speech models.
	// An object containing a list of "key": value pairs. Example: { "name": "wrench", "mass": "1.3kg", "count": "3" }.
	// +mapType=granular
	Models map[string]*string `json:"models,omitempty" tf:"models,omitempty"`

	// Timeout before detecting no speech.
	// A duration in seconds with up to nine fractional digits, ending with 's'. Example: "3.5s".
	NoSpeechTimeout *string `json:"noSpeechTimeout,omitempty" tf:"no_speech_timeout,omitempty"`

	// Use timeout based endpointing, interpreting endpointer sensitivity as seconds of timeout value.
	UseTimeoutBasedEndpointing *bool `json:"useTimeoutBasedEndpointing,omitempty" tf:"use_timeout_based_endpointing,omitempty"`
}

type TriggerFulfillmentAdvancedSettingsSpeechSettingsObservation struct {

	// Sensitivity of the speech model that detects the end of speech. Scale from 0 to 100.
	EndpointerSensitivity *float64 `json:"endpointerSensitivity,omitempty" tf:"endpointer_sensitivity,omitempty"`

	// Mapping from language to Speech-to-Text model. The mapped Speech-to-Text model will be selected for requests from its corresponding language. For more information, see Speech models.
	// An object containing a list of "key": value pairs. Example: { "name": "wrench", "mass": "1.3kg", "count": "3" }.
	// +mapType=granular
	Models map[string]*string `json:"models,omitempty" tf:"models,omitempty"`

	// Timeout before detecting no speech.
	// A duration in seconds with up to nine fractional digits, ending with 's'. Example: "3.5s".
	NoSpeechTimeout *string `json:"noSpeechTimeout,omitempty" tf:"no_speech_timeout,omitempty"`

	// Use timeout based endpointing, interpreting endpointer sensitivity as seconds of timeout value.
	UseTimeoutBasedEndpointing *bool `json:"useTimeoutBasedEndpointing,omitempty" tf:"use_timeout_based_endpointing,omitempty"`
}

type TriggerFulfillmentAdvancedSettingsSpeechSettingsParameters struct {

	// Sensitivity of the speech model that detects the end of speech. Scale from 0 to 100.
	// +kubebuilder:validation:Optional
	EndpointerSensitivity *float64 `json:"endpointerSensitivity,omitempty" tf:"endpointer_sensitivity,omitempty"`

	// Mapping from language to Speech-to-Text model. The mapped Speech-to-Text model will be selected for requests from its corresponding language. For more information, see Speech models.
	// An object containing a list of "key": value pairs. Example: { "name": "wrench", "mass": "1.3kg", "count": "3" }.
	// +kubebuilder:validation:Optional
	// +mapType=granular
	Models map[string]*string `json:"models,omitempty" tf:"models,omitempty"`

	// Timeout before detecting no speech.
	// A duration in seconds with up to nine fractional digits, ending with 's'. Example: "3.5s".
	// +kubebuilder:validation:Optional
	NoSpeechTimeout *string `json:"noSpeechTimeout,omitempty" tf:"no_speech_timeout,omitempty"`

	// Use timeout based endpointing, interpreting endpointer sensitivity as seconds of timeout value.
	// +kubebuilder:validation:Optional
	UseTimeoutBasedEndpointing *bool `json:"useTimeoutBasedEndpointing,omitempty" tf:"use_timeout_based_endpointing,omitempty"`
}

type TriggerFulfillmentConditionalCasesInitParameters struct {

	// A JSON encoded list of cascading if-else conditions. Cases are mutually exclusive. The first one with a matching condition is selected, all the rest ignored.
	// See Case for the schema.
	Cases *string `json:"cases,omitempty" tf:"cases,omitempty"`
}

type TriggerFulfillmentConditionalCasesObservation struct {

	// A JSON encoded list of cascading if-else conditions. Cases are mutually exclusive. The first one with a matching condition is selected, all the rest ignored.
	// See Case for the schema.
	Cases *string `json:"cases,omitempty" tf:"cases,omitempty"`
}

type TriggerFulfillmentConditionalCasesParameters struct {

	// A JSON encoded list of cascading if-else conditions. Cases are mutually exclusive. The first one with a matching condition is selected, all the rest ignored.
	// See Case for the schema.
	// +kubebuilder:validation:Optional
	Cases *string `json:"cases,omitempty" tf:"cases,omitempty"`
}

type TriggerFulfillmentInitParameters struct {

	// Conditional cases for this fulfillment.
	// Structure is documented below.
	ConditionalCases []ConditionalCasesInitParameters `json:"conditionalCases,omitempty" tf:"conditional_cases,omitempty"`

	// If the flag is true, the agent will utilize LLM to generate a text response.
	// If LLM generation fails, the defined responses in the fulfillment will be respected.
	// This flag is only useful for fulfillments associated with no-match event handlers.
	EnableGenerativeFallback *bool `json:"enableGenerativeFallback,omitempty" tf:"enable_generative_fallback,omitempty"`

	// The list of rich message responses to present to the user.
	// Structure is documented below.
	Messages []MessagesInitParameters `json:"messages,omitempty" tf:"messages,omitempty"`

	// Whether Dialogflow should return currently queued fulfillment response messages in streaming APIs. If a webhook is specified, it happens before Dialogflow invokes webhook. Warning: 1) This flag only affects streaming API. Responses are still queued and returned once in non-streaming API. 2) The flag can be enabled in any fulfillment but only the first 3 partial responses will be returned. You may only want to apply it to fulfillments that have slow webhooks.
	ReturnPartialResponses *bool `json:"returnPartialResponses,omitempty" tf:"return_partial_responses,omitempty"`

	// Set parameter values before executing the webhook.
	// Structure is documented below.
	SetParameterActions []SetParameterActionsInitParameters `json:"setParameterActions,omitempty" tf:"set_parameter_actions,omitempty"`

	// The tag used by the webhook to identify which fulfillment is being called. This field is required if webhook is specified.
	Tag *string `json:"tag,omitempty" tf:"tag,omitempty"`

	// The webhook to call. Format: projects//locations//agents//webhooks/.
	Webhook *string `json:"webhook,omitempty" tf:"webhook,omitempty"`
}

type TriggerFulfillmentMessagesConversationSuccessInitParameters struct {

	// Custom metadata. Dialogflow doesn't impose any structure on this.
	Metadata *string `json:"metadata,omitempty" tf:"metadata,omitempty"`
}

type TriggerFulfillmentMessagesConversationSuccessObservation struct {

	// Custom metadata. Dialogflow doesn't impose any structure on this.
	Metadata *string `json:"metadata,omitempty" tf:"metadata,omitempty"`
}

type TriggerFulfillmentMessagesConversationSuccessParameters struct {

	// Custom metadata. Dialogflow doesn't impose any structure on this.
	// +kubebuilder:validation:Optional
	Metadata *string `json:"metadata,omitempty" tf:"metadata,omitempty"`
}

type TriggerFulfillmentMessagesInitParameters struct {

	// The channel which the response is associated with. Clients can specify the channel via QueryParameters.channel, and only associated channel response will be returned.
	Channel *string `json:"channel,omitempty" tf:"channel,omitempty"`

	// Indicates that the conversation succeeded, i.e., the bot handled the issue that the customer talked to it about.
	// Dialogflow only uses this to determine which conversations should be counted as successful and doesn't process the metadata in this message in any way. Note that Dialogflow also considers conversations that get to the conversation end page as successful even if they don't return ConversationSuccess.
	// You may set this, for example:
	ConversationSuccess *MessagesConversationSuccessInitParameters `json:"conversationSuccess,omitempty" tf:"conversation_success,omitempty"`

	// This type has no fields.
	// Represents info card response. If the response contains generative knowledge prediction, Dialogflow will return a payload with Infobot Messenger compatible info card.
	// Otherwise, the info card response is skipped.
	// This field is part of a union field message: Only one of text, payload, conversationSuccess, outputAudioText, liveAgentHandoff, endInteraction, playAudio, mixedAudio, telephonyTransferCall, or knowledgeInfoCard may be set.
	KnowledgeInfoCard *KnowledgeInfoCardInitParameters `json:"knowledgeInfoCard,omitempty" tf:"knowledge_info_card,omitempty"`

	// Indicates that the conversation should be handed off to a live agent.
	// Dialogflow only uses this to determine which conversations were handed off to a human agent for measurement purposes. What else to do with this signal is up to you and your handoff procedures.
	// You may set this, for example:
	LiveAgentHandoff *MessagesLiveAgentHandoffInitParameters `json:"liveAgentHandoff,omitempty" tf:"live_agent_handoff,omitempty"`

	// A text or ssml response that is preferentially used for TTS output audio synthesis, as described in the comment on the ResponseMessage message.
	// Structure is documented below.
	OutputAudioText *MessagesOutputAudioTextInitParameters `json:"outputAudioText,omitempty" tf:"output_audio_text,omitempty"`

	// A custom, platform-specific payload.
	Payload *string `json:"payload,omitempty" tf:"payload,omitempty"`

	// Specifies an audio clip to be played by the client as part of the response.
	// Structure is documented below.
	PlayAudio *MessagesPlayAudioInitParameters `json:"playAudio,omitempty" tf:"play_audio,omitempty"`

	// Represents the signal that telles the client to transfer the phone call connected to the agent to a third-party endpoint.
	// Structure is documented below.
	TelephonyTransferCall *MessagesTelephonyTransferCallInitParameters `json:"telephonyTransferCall,omitempty" tf:"telephony_transfer_call,omitempty"`

	// A collection of text responses.
	Text *MessagesTextInitParameters `json:"text,omitempty" tf:"text,omitempty"`
}

type TriggerFulfillmentMessagesLiveAgentHandoffInitParameters struct {

	// Custom metadata. Dialogflow doesn't impose any structure on this.
	Metadata *string `json:"metadata,omitempty" tf:"metadata,omitempty"`
}

type TriggerFulfillmentMessagesLiveAgentHandoffObservation struct {

	// Custom metadata. Dialogflow doesn't impose any structure on this.
	Metadata *string `json:"metadata,omitempty" tf:"metadata,omitempty"`
}

type TriggerFulfillmentMessagesLiveAgentHandoffParameters struct {

	// Custom metadata. Dialogflow doesn't impose any structure on this.
	// +kubebuilder:validation:Optional
	Metadata *string `json:"metadata,omitempty" tf:"metadata,omitempty"`
}

type TriggerFulfillmentMessagesObservation struct {

	// The channel which the response is associated with. Clients can specify the channel via QueryParameters.channel, and only associated channel response will be returned.
	Channel *string `json:"channel,omitempty" tf:"channel,omitempty"`

	// Indicates that the conversation succeeded, i.e., the bot handled the issue that the customer talked to it about.
	// Dialogflow only uses this to determine which conversations should be counted as successful and doesn't process the metadata in this message in any way. Note that Dialogflow also considers conversations that get to the conversation end page as successful even if they don't return ConversationSuccess.
	// You may set this, for example:
	ConversationSuccess *MessagesConversationSuccessObservation `json:"conversationSuccess,omitempty" tf:"conversation_success,omitempty"`

	// (Output)
	// This type has no fields.
	// Indicates that interaction with the Dialogflow agent has ended. This message is generated by Dialogflow only and not supposed to be defined by the user.
	// This field is part of a union field message: Only one of text, payload, conversationSuccess, outputAudioText, liveAgentHandoff, endInteraction, playAudio, mixedAudio, telephonyTransferCall, or knowledgeInfoCard may be set.
	EndInteraction []EndInteractionObservation `json:"endInteraction,omitempty" tf:"end_interaction,omitempty"`

	// This type has no fields.
	// Represents info card response. If the response contains generative knowledge prediction, Dialogflow will return a payload with Infobot Messenger compatible info card.
	// Otherwise, the info card response is skipped.
	// This field is part of a union field message: Only one of text, payload, conversationSuccess, outputAudioText, liveAgentHandoff, endInteraction, playAudio, mixedAudio, telephonyTransferCall, or knowledgeInfoCard may be set.
	KnowledgeInfoCard *KnowledgeInfoCardParameters `json:"knowledgeInfoCard,omitempty" tf:"knowledge_info_card,omitempty"`

	// Indicates that the conversation should be handed off to a live agent.
	// Dialogflow only uses this to determine which conversations were handed off to a human agent for measurement purposes. What else to do with this signal is up to you and your handoff procedures.
	// You may set this, for example:
	LiveAgentHandoff *MessagesLiveAgentHandoffObservation `json:"liveAgentHandoff,omitempty" tf:"live_agent_handoff,omitempty"`

	// (Output)
	// Represents an audio message that is composed of both segments synthesized from the Dialogflow agent prompts and ones hosted externally at the specified URIs. The external URIs are specified via playAudio. This message is generated by Dialogflow only and not supposed to be defined by the user.
	// This field is part of a union field message: Only one of text, payload, conversationSuccess, outputAudioText, liveAgentHandoff, endInteraction, playAudio, mixedAudio, telephonyTransferCall, or knowledgeInfoCard may be set.
	// Structure is documented below.
	MixedAudio []MixedAudioObservation `json:"mixedAudio,omitempty" tf:"mixed_audio,omitempty"`

	// A text or ssml response that is preferentially used for TTS output audio synthesis, as described in the comment on the ResponseMessage message.
	// Structure is documented below.
	OutputAudioText *MessagesOutputAudioTextObservation `json:"outputAudioText,omitempty" tf:"output_audio_text,omitempty"`

	// A custom, platform-specific payload.
	Payload *string `json:"payload,omitempty" tf:"payload,omitempty"`

	// Specifies an audio clip to be played by the client as part of the response.
	// Structure is documented below.
	PlayAudio *MessagesPlayAudioObservation `json:"playAudio,omitempty" tf:"play_audio,omitempty"`

	// Represents the signal that telles the client to transfer the phone call connected to the agent to a third-party endpoint.
	// Structure is documented below.
	TelephonyTransferCall *MessagesTelephonyTransferCallObservation `json:"telephonyTransferCall,omitempty" tf:"telephony_transfer_call,omitempty"`

	// A collection of text responses.
	Text *MessagesTextObservation `json:"text,omitempty" tf:"text,omitempty"`
}

type TriggerFulfillmentMessagesOutputAudioTextInitParameters struct {

	// The SSML text to be synthesized. For more information, see SSML.
	Ssml *string `json:"ssml,omitempty" tf:"ssml,omitempty"`

	// A collection of text responses.
	Text *string `json:"text,omitempty" tf:"text,omitempty"`
}

type TriggerFulfillmentMessagesOutputAudioTextObservation struct {

	// (Output)
	// Whether the playback of this message can be interrupted by the end user's speech and the client can then starts the next Dialogflow request.
	AllowPlaybackInterruption *bool `json:"allowPlaybackInterruption,omitempty" tf:"allow_playback_interruption,omitempty"`

	// The SSML text to be synthesized. For more information, see SSML.
	Ssml *string `json:"ssml,omitempty" tf:"ssml,omitempty"`

	// A collection of text responses.
	Text *string `json:"text,omitempty" tf:"text,omitempty"`
}

type TriggerFulfillmentMessagesOutputAudioTextParameters struct {

	// The SSML text to be synthesized. For more information, see SSML.
	// +kubebuilder:validation:Optional
	Ssml *string `json:"ssml,omitempty" tf:"ssml,omitempty"`

	// A collection of text responses.
	// +kubebuilder:validation:Optional
	Text *string `json:"text,omitempty" tf:"text,omitempty"`
}

type TriggerFulfillmentMessagesParameters struct {

	// The channel which the response is associated with. Clients can specify the channel via QueryParameters.channel, and only associated channel response will be returned.
	// +kubebuilder:validation:Optional
	Channel *string `json:"channel,omitempty" tf:"channel,omitempty"`

	// Indicates that the conversation succeeded, i.e., the bot handled the issue that the customer talked to it about.
	// Dialogflow only uses this to determine which conversations should be counted as successful and doesn't process the metadata in this message in any way. Note that Dialogflow also considers conversations that get to the conversation end page as successful even if they don't return ConversationSuccess.
	// You may set this, for example:
	// +kubebuilder:validation:Optional
	ConversationSuccess *MessagesConversationSuccessParameters `json:"conversationSuccess,omitempty" tf:"conversation_success,omitempty"`

	// This type has no fields.
	// Represents info card response. If the response contains generative knowledge prediction, Dialogflow will return a payload with Infobot Messenger compatible info card.
	// Otherwise, the info card response is skipped.
	// This field is part of a union field message: Only one of text, payload, conversationSuccess, outputAudioText, liveAgentHandoff, endInteraction, playAudio, mixedAudio, telephonyTransferCall, or knowledgeInfoCard may be set.
	// +kubebuilder:validation:Optional
	KnowledgeInfoCard *KnowledgeInfoCardParameters `json:"knowledgeInfoCard,omitempty" tf:"knowledge_info_card,omitempty"`

	// Indicates that the conversation should be handed off to a live agent.
	// Dialogflow only uses this to determine which conversations were handed off to a human agent for measurement purposes. What else to do with this signal is up to you and your handoff procedures.
	// You may set this, for example:
	// +kubebuilder:validation:Optional
	LiveAgentHandoff *MessagesLiveAgentHandoffParameters `json:"liveAgentHandoff,omitempty" tf:"live_agent_handoff,omitempty"`

	// A text or ssml response that is preferentially used for TTS output audio synthesis, as described in the comment on the ResponseMessage message.
	// Structure is documented below.
	// +kubebuilder:validation:Optional
	OutputAudioText *MessagesOutputAudioTextParameters `json:"outputAudioText,omitempty" tf:"output_audio_text,omitempty"`

	// A custom, platform-specific payload.
	// +kubebuilder:validation:Optional
	Payload *string `json:"payload,omitempty" tf:"payload,omitempty"`

	// Specifies an audio clip to be played by the client as part of the response.
	// Structure is documented below.
	// +kubebuilder:validation:Optional
	PlayAudio *MessagesPlayAudioParameters `json:"playAudio,omitempty" tf:"play_audio,omitempty"`

	// Represents the signal that telles the client to transfer the phone call connected to the agent to a third-party endpoint.
	// Structure is documented below.
	// +kubebuilder:validation:Optional
	TelephonyTransferCall *MessagesTelephonyTransferCallParameters `json:"telephonyTransferCall,omitempty" tf:"telephony_transfer_call,omitempty"`

	// A collection of text responses.
	// +kubebuilder:validation:Optional
	Text *MessagesTextParameters `json:"text,omitempty" tf:"text,omitempty"`
}

type TriggerFulfillmentMessagesPlayAudioInitParameters struct {

	// URI of the audio clip. Dialogflow does not impose any validation on this value. It is specific to the client that reads it.
	AudioURI *string `json:"audioUri,omitempty" tf:"audio_uri,omitempty"`
}

type TriggerFulfillmentMessagesPlayAudioObservation struct {

	// (Output)
	// Whether the playback of this message can be interrupted by the end user's speech and the client can then starts the next Dialogflow request.
	AllowPlaybackInterruption *bool `json:"allowPlaybackInterruption,omitempty" tf:"allow_playback_interruption,omitempty"`

	// URI of the audio clip. Dialogflow does not impose any validation on this value. It is specific to the client that reads it.
	AudioURI *string `json:"audioUri,omitempty" tf:"audio_uri,omitempty"`
}

type TriggerFulfillmentMessagesPlayAudioParameters struct {

	// URI of the audio clip. Dialogflow does not impose any validation on this value. It is specific to the client that reads it.
	// +kubebuilder:validation:Optional
	AudioURI *string `json:"audioUri" tf:"audio_uri,omitempty"`
}

type TriggerFulfillmentMessagesTelephonyTransferCallInitParameters struct {

	// Transfer the call to a phone number in E.164 format.
	PhoneNumber *string `json:"phoneNumber,omitempty" tf:"phone_number,omitempty"`
}

type TriggerFulfillmentMessagesTelephonyTransferCallObservation struct {

	// Transfer the call to a phone number in E.164 format.
	PhoneNumber *string `json:"phoneNumber,omitempty" tf:"phone_number,omitempty"`
}

type TriggerFulfillmentMessagesTelephonyTransferCallParameters struct {

	// Transfer the call to a phone number in E.164 format.
	// +kubebuilder:validation:Optional
	PhoneNumber *string `json:"phoneNumber" tf:"phone_number,omitempty"`
}

type TriggerFulfillmentMessagesTextInitParameters struct {

	// A collection of text responses.
	Text []*string `json:"text,omitempty" tf:"text,omitempty"`
}

type TriggerFulfillmentMessagesTextObservation struct {

	// (Output)
	// Whether the playback of this message can be interrupted by the end user's speech and the client can then starts the next Dialogflow request.
	AllowPlaybackInterruption *bool `json:"allowPlaybackInterruption,omitempty" tf:"allow_playback_interruption,omitempty"`

	// A collection of text responses.
	Text []*string `json:"text,omitempty" tf:"text,omitempty"`
}

type TriggerFulfillmentMessagesTextParameters struct {

	// A collection of text responses.
	// +kubebuilder:validation:Optional
	Text []*string `json:"text,omitempty" tf:"text,omitempty"`
}

type TriggerFulfillmentObservation struct {

	// Conditional cases for this fulfillment.
	// Structure is documented below.
	ConditionalCases []ConditionalCasesObservation `json:"conditionalCases,omitempty" tf:"conditional_cases,omitempty"`

	// If the flag is true, the agent will utilize LLM to generate a text response.
	// If LLM generation fails, the defined responses in the fulfillment will be respected.
	// This flag is only useful for fulfillments associated with no-match event handlers.
	EnableGenerativeFallback *bool `json:"enableGenerativeFallback,omitempty" tf:"enable_generative_fallback,omitempty"`

	// The list of rich message responses to present to the user.
	// Structure is documented below.
	Messages []MessagesObservation `json:"messages,omitempty" tf:"messages,omitempty"`

	// Whether Dialogflow should return currently queued fulfillment response messages in streaming APIs. If a webhook is specified, it happens before Dialogflow invokes webhook. Warning: 1) This flag only affects streaming API. Responses are still queued and returned once in non-streaming API. 2) The flag can be enabled in any fulfillment but only the first 3 partial responses will be returned. You may only want to apply it to fulfillments that have slow webhooks.
	ReturnPartialResponses *bool `json:"returnPartialResponses,omitempty" tf:"return_partial_responses,omitempty"`

	// Set parameter values before executing the webhook.
	// Structure is documented below.
	SetParameterActions []SetParameterActionsObservation `json:"setParameterActions,omitempty" tf:"set_parameter_actions,omitempty"`

	// The tag used by the webhook to identify which fulfillment is being called. This field is required if webhook is specified.
	Tag *string `json:"tag,omitempty" tf:"tag,omitempty"`

	// The webhook to call. Format: projects//locations//agents//webhooks/.
	Webhook *string `json:"webhook,omitempty" tf:"webhook,omitempty"`
}

type TriggerFulfillmentParameters struct {

	// Conditional cases for this fulfillment.
	// Structure is documented below.
	// +kubebuilder:validation:Optional
	ConditionalCases []ConditionalCasesParameters `json:"conditionalCases,omitempty" tf:"conditional_cases,omitempty"`

	// If the flag is true, the agent will utilize LLM to generate a text response.
	// If LLM generation fails, the defined responses in the fulfillment will be respected.
	// This flag is only useful for fulfillments associated with no-match event handlers.
	// +kubebuilder:validation:Optional
	EnableGenerativeFallback *bool `json:"enableGenerativeFallback,omitempty" tf:"enable_generative_fallback,omitempty"`

	// The list of rich message responses to present to the user.
	// Structure is documented below.
	// +kubebuilder:validation:Optional
	Messages []MessagesParameters `json:"messages,omitempty" tf:"messages,omitempty"`

	// Whether Dialogflow should return currently queued fulfillment response messages in streaming APIs. If a webhook is specified, it happens before Dialogflow invokes webhook. Warning: 1) This flag only affects streaming API. Responses are still queued and returned once in non-streaming API. 2) The flag can be enabled in any fulfillment but only the first 3 partial responses will be returned. You may only want to apply it to fulfillments that have slow webhooks.
	// +kubebuilder:validation:Optional
	ReturnPartialResponses *bool `json:"returnPartialResponses,omitempty" tf:"return_partial_responses,omitempty"`

	// Set parameter values before executing the webhook.
	// Structure is documented below.
	// +kubebuilder:validation:Optional
	SetParameterActions []SetParameterActionsParameters `json:"setParameterActions,omitempty" tf:"set_parameter_actions,omitempty"`

	// The tag used by the webhook to identify which fulfillment is being called. This field is required if webhook is specified.
	// +kubebuilder:validation:Optional
	Tag *string `json:"tag,omitempty" tf:"tag,omitempty"`

	// The webhook to call. Format: projects//locations//agents//webhooks/.
	// +kubebuilder:validation:Optional
	Webhook *string `json:"webhook,omitempty" tf:"webhook,omitempty"`
}

type TriggerFulfillmentSetParameterActionsInitParameters struct {

	// Display name of the parameter.
	Parameter *string `json:"parameter,omitempty" tf:"parameter,omitempty"`

	// The new JSON-encoded value of the parameter. A null value clears the parameter.
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type TriggerFulfillmentSetParameterActionsObservation struct {

	// Display name of the parameter.
	Parameter *string `json:"parameter,omitempty" tf:"parameter,omitempty"`

	// The new JSON-encoded value of the parameter. A null value clears the parameter.
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type TriggerFulfillmentSetParameterActionsParameters struct {

	// Display name of the parameter.
	// +kubebuilder:validation:Optional
	Parameter *string `json:"parameter,omitempty" tf:"parameter,omitempty"`

	// The new JSON-encoded value of the parameter. A null value clears the parameter.
	// +kubebuilder:validation:Optional
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

// FlowSpec defines the desired state of Flow
type FlowSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     FlowParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider FlowInitParameters `json:"initProvider,omitempty"`
}

// FlowStatus defines the observed state of Flow.
type FlowStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        FlowObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status

// Flow is the Schema for the Flows API. Flows represents the conversation flows when you build your chatbot agent.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,gcp}
type Flow struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.displayName) || (has(self.initProvider) && has(self.initProvider.displayName))",message="spec.forProvider.displayName is a required parameter"
	Spec   FlowSpec   `json:"spec"`
	Status FlowStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// FlowList contains a list of Flows
type FlowList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []Flow `json:"items"`
}

// Repository type metadata.
var (
	Flow_Kind             = "Flow"
	Flow_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: Flow_Kind}.String()
	Flow_KindAPIVersion   = Flow_Kind + "." + CRDGroupVersion.String()
	Flow_GroupVersionKind = CRDGroupVersion.WithKind(Flow_Kind)
)

func init() {
	SchemeBuilder.Register(&Flow{}, &FlowList{})
}
