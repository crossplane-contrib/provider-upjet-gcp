//go:build !ignore_autogenerated

// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by controller-gen. DO NOT EDIT.

package v1beta1

import (
	"github.com/crossplane/crossplane-runtime/apis/common/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AcceleratorsInitParameters) DeepCopyInto(out *AcceleratorsInitParameters) {
	*out = *in
	if in.AcceleratorCount != nil {
		in, out := &in.AcceleratorCount, &out.AcceleratorCount
		*out = new(float64)
		**out = **in
	}
	if in.AcceleratorType != nil {
		in, out := &in.AcceleratorType, &out.AcceleratorType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AcceleratorsInitParameters.
func (in *AcceleratorsInitParameters) DeepCopy() *AcceleratorsInitParameters {
	if in == nil {
		return nil
	}
	out := new(AcceleratorsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AcceleratorsObservation) DeepCopyInto(out *AcceleratorsObservation) {
	*out = *in
	if in.AcceleratorCount != nil {
		in, out := &in.AcceleratorCount, &out.AcceleratorCount
		*out = new(float64)
		**out = **in
	}
	if in.AcceleratorType != nil {
		in, out := &in.AcceleratorType, &out.AcceleratorType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AcceleratorsObservation.
func (in *AcceleratorsObservation) DeepCopy() *AcceleratorsObservation {
	if in == nil {
		return nil
	}
	out := new(AcceleratorsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AcceleratorsParameters) DeepCopyInto(out *AcceleratorsParameters) {
	*out = *in
	if in.AcceleratorCount != nil {
		in, out := &in.AcceleratorCount, &out.AcceleratorCount
		*out = new(float64)
		**out = **in
	}
	if in.AcceleratorType != nil {
		in, out := &in.AcceleratorType, &out.AcceleratorType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AcceleratorsParameters.
func (in *AcceleratorsParameters) DeepCopy() *AcceleratorsParameters {
	if in == nil {
		return nil
	}
	out := new(AcceleratorsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoscalingConfigInitParameters) DeepCopyInto(out *AutoscalingConfigInitParameters) {
	*out = *in
	if in.PolicyURI != nil {
		in, out := &in.PolicyURI, &out.PolicyURI
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoscalingConfigInitParameters.
func (in *AutoscalingConfigInitParameters) DeepCopy() *AutoscalingConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(AutoscalingConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoscalingConfigObservation) DeepCopyInto(out *AutoscalingConfigObservation) {
	*out = *in
	if in.PolicyURI != nil {
		in, out := &in.PolicyURI, &out.PolicyURI
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoscalingConfigObservation.
func (in *AutoscalingConfigObservation) DeepCopy() *AutoscalingConfigObservation {
	if in == nil {
		return nil
	}
	out := new(AutoscalingConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoscalingConfigParameters) DeepCopyInto(out *AutoscalingConfigParameters) {
	*out = *in
	if in.PolicyURI != nil {
		in, out := &in.PolicyURI, &out.PolicyURI
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoscalingConfigParameters.
func (in *AutoscalingConfigParameters) DeepCopy() *AutoscalingConfigParameters {
	if in == nil {
		return nil
	}
	out := new(AutoscalingConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoscalingInitParameters) DeepCopyInto(out *AutoscalingInitParameters) {
	*out = *in
	if in.MaxNodeCount != nil {
		in, out := &in.MaxNodeCount, &out.MaxNodeCount
		*out = new(float64)
		**out = **in
	}
	if in.MinNodeCount != nil {
		in, out := &in.MinNodeCount, &out.MinNodeCount
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoscalingInitParameters.
func (in *AutoscalingInitParameters) DeepCopy() *AutoscalingInitParameters {
	if in == nil {
		return nil
	}
	out := new(AutoscalingInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoscalingObservation) DeepCopyInto(out *AutoscalingObservation) {
	*out = *in
	if in.MaxNodeCount != nil {
		in, out := &in.MaxNodeCount, &out.MaxNodeCount
		*out = new(float64)
		**out = **in
	}
	if in.MinNodeCount != nil {
		in, out := &in.MinNodeCount, &out.MinNodeCount
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoscalingObservation.
func (in *AutoscalingObservation) DeepCopy() *AutoscalingObservation {
	if in == nil {
		return nil
	}
	out := new(AutoscalingObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoscalingParameters) DeepCopyInto(out *AutoscalingParameters) {
	*out = *in
	if in.MaxNodeCount != nil {
		in, out := &in.MaxNodeCount, &out.MaxNodeCount
		*out = new(float64)
		**out = **in
	}
	if in.MinNodeCount != nil {
		in, out := &in.MinNodeCount, &out.MinNodeCount
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoscalingParameters.
func (in *AutoscalingParameters) DeepCopy() *AutoscalingParameters {
	if in == nil {
		return nil
	}
	out := new(AutoscalingParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoscalingPolicy) DeepCopyInto(out *AutoscalingPolicy) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoscalingPolicy.
func (in *AutoscalingPolicy) DeepCopy() *AutoscalingPolicy {
	if in == nil {
		return nil
	}
	out := new(AutoscalingPolicy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AutoscalingPolicy) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoscalingPolicyInitParameters) DeepCopyInto(out *AutoscalingPolicyInitParameters) {
	*out = *in
	if in.BasicAlgorithm != nil {
		in, out := &in.BasicAlgorithm, &out.BasicAlgorithm
		*out = make([]BasicAlgorithmInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.SecondaryWorkerConfig != nil {
		in, out := &in.SecondaryWorkerConfig, &out.SecondaryWorkerConfig
		*out = make([]SecondaryWorkerConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.WorkerConfig != nil {
		in, out := &in.WorkerConfig, &out.WorkerConfig
		*out = make([]WorkerConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoscalingPolicyInitParameters.
func (in *AutoscalingPolicyInitParameters) DeepCopy() *AutoscalingPolicyInitParameters {
	if in == nil {
		return nil
	}
	out := new(AutoscalingPolicyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoscalingPolicyList) DeepCopyInto(out *AutoscalingPolicyList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]AutoscalingPolicy, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoscalingPolicyList.
func (in *AutoscalingPolicyList) DeepCopy() *AutoscalingPolicyList {
	if in == nil {
		return nil
	}
	out := new(AutoscalingPolicyList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AutoscalingPolicyList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoscalingPolicyObservation) DeepCopyInto(out *AutoscalingPolicyObservation) {
	*out = *in
	if in.BasicAlgorithm != nil {
		in, out := &in.BasicAlgorithm, &out.BasicAlgorithm
		*out = make([]BasicAlgorithmObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.SecondaryWorkerConfig != nil {
		in, out := &in.SecondaryWorkerConfig, &out.SecondaryWorkerConfig
		*out = make([]SecondaryWorkerConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.WorkerConfig != nil {
		in, out := &in.WorkerConfig, &out.WorkerConfig
		*out = make([]WorkerConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoscalingPolicyObservation.
func (in *AutoscalingPolicyObservation) DeepCopy() *AutoscalingPolicyObservation {
	if in == nil {
		return nil
	}
	out := new(AutoscalingPolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoscalingPolicyParameters) DeepCopyInto(out *AutoscalingPolicyParameters) {
	*out = *in
	if in.BasicAlgorithm != nil {
		in, out := &in.BasicAlgorithm, &out.BasicAlgorithm
		*out = make([]BasicAlgorithmParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.SecondaryWorkerConfig != nil {
		in, out := &in.SecondaryWorkerConfig, &out.SecondaryWorkerConfig
		*out = make([]SecondaryWorkerConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.WorkerConfig != nil {
		in, out := &in.WorkerConfig, &out.WorkerConfig
		*out = make([]WorkerConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoscalingPolicyParameters.
func (in *AutoscalingPolicyParameters) DeepCopy() *AutoscalingPolicyParameters {
	if in == nil {
		return nil
	}
	out := new(AutoscalingPolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoscalingPolicySpec) DeepCopyInto(out *AutoscalingPolicySpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoscalingPolicySpec.
func (in *AutoscalingPolicySpec) DeepCopy() *AutoscalingPolicySpec {
	if in == nil {
		return nil
	}
	out := new(AutoscalingPolicySpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoscalingPolicyStatus) DeepCopyInto(out *AutoscalingPolicyStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoscalingPolicyStatus.
func (in *AutoscalingPolicyStatus) DeepCopy() *AutoscalingPolicyStatus {
	if in == nil {
		return nil
	}
	out := new(AutoscalingPolicyStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AuxiliaryNodeGroupsInitParameters) DeepCopyInto(out *AuxiliaryNodeGroupsInitParameters) {
	*out = *in
	if in.NodeGroup != nil {
		in, out := &in.NodeGroup, &out.NodeGroup
		*out = make([]NodeGroupInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NodeGroupID != nil {
		in, out := &in.NodeGroupID, &out.NodeGroupID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AuxiliaryNodeGroupsInitParameters.
func (in *AuxiliaryNodeGroupsInitParameters) DeepCopy() *AuxiliaryNodeGroupsInitParameters {
	if in == nil {
		return nil
	}
	out := new(AuxiliaryNodeGroupsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AuxiliaryNodeGroupsObservation) DeepCopyInto(out *AuxiliaryNodeGroupsObservation) {
	*out = *in
	if in.NodeGroup != nil {
		in, out := &in.NodeGroup, &out.NodeGroup
		*out = make([]NodeGroupObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NodeGroupID != nil {
		in, out := &in.NodeGroupID, &out.NodeGroupID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AuxiliaryNodeGroupsObservation.
func (in *AuxiliaryNodeGroupsObservation) DeepCopy() *AuxiliaryNodeGroupsObservation {
	if in == nil {
		return nil
	}
	out := new(AuxiliaryNodeGroupsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AuxiliaryNodeGroupsParameters) DeepCopyInto(out *AuxiliaryNodeGroupsParameters) {
	*out = *in
	if in.NodeGroup != nil {
		in, out := &in.NodeGroup, &out.NodeGroup
		*out = make([]NodeGroupParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NodeGroupID != nil {
		in, out := &in.NodeGroupID, &out.NodeGroupID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AuxiliaryNodeGroupsParameters.
func (in *AuxiliaryNodeGroupsParameters) DeepCopy() *AuxiliaryNodeGroupsParameters {
	if in == nil {
		return nil
	}
	out := new(AuxiliaryNodeGroupsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AuxiliaryServicesConfigInitParameters) DeepCopyInto(out *AuxiliaryServicesConfigInitParameters) {
	*out = *in
	if in.MetastoreConfig != nil {
		in, out := &in.MetastoreConfig, &out.MetastoreConfig
		*out = make([]AuxiliaryServicesConfigMetastoreConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SparkHistoryServerConfig != nil {
		in, out := &in.SparkHistoryServerConfig, &out.SparkHistoryServerConfig
		*out = make([]SparkHistoryServerConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AuxiliaryServicesConfigInitParameters.
func (in *AuxiliaryServicesConfigInitParameters) DeepCopy() *AuxiliaryServicesConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(AuxiliaryServicesConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AuxiliaryServicesConfigMetastoreConfigInitParameters) DeepCopyInto(out *AuxiliaryServicesConfigMetastoreConfigInitParameters) {
	*out = *in
	if in.DataprocMetastoreService != nil {
		in, out := &in.DataprocMetastoreService, &out.DataprocMetastoreService
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AuxiliaryServicesConfigMetastoreConfigInitParameters.
func (in *AuxiliaryServicesConfigMetastoreConfigInitParameters) DeepCopy() *AuxiliaryServicesConfigMetastoreConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(AuxiliaryServicesConfigMetastoreConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AuxiliaryServicesConfigMetastoreConfigObservation) DeepCopyInto(out *AuxiliaryServicesConfigMetastoreConfigObservation) {
	*out = *in
	if in.DataprocMetastoreService != nil {
		in, out := &in.DataprocMetastoreService, &out.DataprocMetastoreService
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AuxiliaryServicesConfigMetastoreConfigObservation.
func (in *AuxiliaryServicesConfigMetastoreConfigObservation) DeepCopy() *AuxiliaryServicesConfigMetastoreConfigObservation {
	if in == nil {
		return nil
	}
	out := new(AuxiliaryServicesConfigMetastoreConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AuxiliaryServicesConfigMetastoreConfigParameters) DeepCopyInto(out *AuxiliaryServicesConfigMetastoreConfigParameters) {
	*out = *in
	if in.DataprocMetastoreService != nil {
		in, out := &in.DataprocMetastoreService, &out.DataprocMetastoreService
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AuxiliaryServicesConfigMetastoreConfigParameters.
func (in *AuxiliaryServicesConfigMetastoreConfigParameters) DeepCopy() *AuxiliaryServicesConfigMetastoreConfigParameters {
	if in == nil {
		return nil
	}
	out := new(AuxiliaryServicesConfigMetastoreConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AuxiliaryServicesConfigObservation) DeepCopyInto(out *AuxiliaryServicesConfigObservation) {
	*out = *in
	if in.MetastoreConfig != nil {
		in, out := &in.MetastoreConfig, &out.MetastoreConfig
		*out = make([]AuxiliaryServicesConfigMetastoreConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SparkHistoryServerConfig != nil {
		in, out := &in.SparkHistoryServerConfig, &out.SparkHistoryServerConfig
		*out = make([]SparkHistoryServerConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AuxiliaryServicesConfigObservation.
func (in *AuxiliaryServicesConfigObservation) DeepCopy() *AuxiliaryServicesConfigObservation {
	if in == nil {
		return nil
	}
	out := new(AuxiliaryServicesConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AuxiliaryServicesConfigParameters) DeepCopyInto(out *AuxiliaryServicesConfigParameters) {
	*out = *in
	if in.MetastoreConfig != nil {
		in, out := &in.MetastoreConfig, &out.MetastoreConfig
		*out = make([]AuxiliaryServicesConfigMetastoreConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SparkHistoryServerConfig != nil {
		in, out := &in.SparkHistoryServerConfig, &out.SparkHistoryServerConfig
		*out = make([]SparkHistoryServerConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AuxiliaryServicesConfigParameters.
func (in *AuxiliaryServicesConfigParameters) DeepCopy() *AuxiliaryServicesConfigParameters {
	if in == nil {
		return nil
	}
	out := new(AuxiliaryServicesConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AuxiliaryVersionsInitParameters) DeepCopyInto(out *AuxiliaryVersionsInitParameters) {
	*out = *in
	if in.ConfigOverrides != nil {
		in, out := &in.ConfigOverrides, &out.ConfigOverrides
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AuxiliaryVersionsInitParameters.
func (in *AuxiliaryVersionsInitParameters) DeepCopy() *AuxiliaryVersionsInitParameters {
	if in == nil {
		return nil
	}
	out := new(AuxiliaryVersionsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AuxiliaryVersionsObservation) DeepCopyInto(out *AuxiliaryVersionsObservation) {
	*out = *in
	if in.ConfigOverrides != nil {
		in, out := &in.ConfigOverrides, &out.ConfigOverrides
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AuxiliaryVersionsObservation.
func (in *AuxiliaryVersionsObservation) DeepCopy() *AuxiliaryVersionsObservation {
	if in == nil {
		return nil
	}
	out := new(AuxiliaryVersionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AuxiliaryVersionsParameters) DeepCopyInto(out *AuxiliaryVersionsParameters) {
	*out = *in
	if in.ConfigOverrides != nil {
		in, out := &in.ConfigOverrides, &out.ConfigOverrides
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AuxiliaryVersionsParameters.
func (in *AuxiliaryVersionsParameters) DeepCopy() *AuxiliaryVersionsParameters {
	if in == nil {
		return nil
	}
	out := new(AuxiliaryVersionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BasicAlgorithmInitParameters) DeepCopyInto(out *BasicAlgorithmInitParameters) {
	*out = *in
	if in.CooldownPeriod != nil {
		in, out := &in.CooldownPeriod, &out.CooldownPeriod
		*out = new(string)
		**out = **in
	}
	if in.YarnConfig != nil {
		in, out := &in.YarnConfig, &out.YarnConfig
		*out = make([]YarnConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BasicAlgorithmInitParameters.
func (in *BasicAlgorithmInitParameters) DeepCopy() *BasicAlgorithmInitParameters {
	if in == nil {
		return nil
	}
	out := new(BasicAlgorithmInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BasicAlgorithmObservation) DeepCopyInto(out *BasicAlgorithmObservation) {
	*out = *in
	if in.CooldownPeriod != nil {
		in, out := &in.CooldownPeriod, &out.CooldownPeriod
		*out = new(string)
		**out = **in
	}
	if in.YarnConfig != nil {
		in, out := &in.YarnConfig, &out.YarnConfig
		*out = make([]YarnConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BasicAlgorithmObservation.
func (in *BasicAlgorithmObservation) DeepCopy() *BasicAlgorithmObservation {
	if in == nil {
		return nil
	}
	out := new(BasicAlgorithmObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BasicAlgorithmParameters) DeepCopyInto(out *BasicAlgorithmParameters) {
	*out = *in
	if in.CooldownPeriod != nil {
		in, out := &in.CooldownPeriod, &out.CooldownPeriod
		*out = new(string)
		**out = **in
	}
	if in.YarnConfig != nil {
		in, out := &in.YarnConfig, &out.YarnConfig
		*out = make([]YarnConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BasicAlgorithmParameters.
func (in *BasicAlgorithmParameters) DeepCopy() *BasicAlgorithmParameters {
	if in == nil {
		return nil
	}
	out := new(BasicAlgorithmParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Cluster) DeepCopyInto(out *Cluster) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Cluster.
func (in *Cluster) DeepCopy() *Cluster {
	if in == nil {
		return nil
	}
	out := new(Cluster)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Cluster) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterConfigInitParameters) DeepCopyInto(out *ClusterConfigInitParameters) {
	*out = *in
	if in.AutoscalingConfig != nil {
		in, out := &in.AutoscalingConfig, &out.AutoscalingConfig
		*out = make([]AutoscalingConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AuxiliaryNodeGroups != nil {
		in, out := &in.AuxiliaryNodeGroups, &out.AuxiliaryNodeGroups
		*out = make([]AuxiliaryNodeGroupsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DataprocMetricConfig != nil {
		in, out := &in.DataprocMetricConfig, &out.DataprocMetricConfig
		*out = make([]DataprocMetricConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EncryptionConfig != nil {
		in, out := &in.EncryptionConfig, &out.EncryptionConfig
		*out = make([]EncryptionConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EndpointConfig != nil {
		in, out := &in.EndpointConfig, &out.EndpointConfig
		*out = make([]EndpointConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.GceClusterConfig != nil {
		in, out := &in.GceClusterConfig, &out.GceClusterConfig
		*out = make([]GceClusterConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.InitializationAction != nil {
		in, out := &in.InitializationAction, &out.InitializationAction
		*out = make([]InitializationActionInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LifecycleConfig != nil {
		in, out := &in.LifecycleConfig, &out.LifecycleConfig
		*out = make([]LifecycleConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MasterConfig != nil {
		in, out := &in.MasterConfig, &out.MasterConfig
		*out = make([]MasterConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MetastoreConfig != nil {
		in, out := &in.MetastoreConfig, &out.MetastoreConfig
		*out = make([]MetastoreConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PreemptibleWorkerConfig != nil {
		in, out := &in.PreemptibleWorkerConfig, &out.PreemptibleWorkerConfig
		*out = make([]PreemptibleWorkerConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SecurityConfig != nil {
		in, out := &in.SecurityConfig, &out.SecurityConfig
		*out = make([]SecurityConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SoftwareConfig != nil {
		in, out := &in.SoftwareConfig, &out.SoftwareConfig
		*out = make([]SoftwareConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StagingBucket != nil {
		in, out := &in.StagingBucket, &out.StagingBucket
		*out = new(string)
		**out = **in
	}
	if in.TempBucket != nil {
		in, out := &in.TempBucket, &out.TempBucket
		*out = new(string)
		**out = **in
	}
	if in.WorkerConfig != nil {
		in, out := &in.WorkerConfig, &out.WorkerConfig
		*out = make([]ClusterConfigWorkerConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterConfigInitParameters.
func (in *ClusterConfigInitParameters) DeepCopy() *ClusterConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(ClusterConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterConfigObservation) DeepCopyInto(out *ClusterConfigObservation) {
	*out = *in
	if in.AutoscalingConfig != nil {
		in, out := &in.AutoscalingConfig, &out.AutoscalingConfig
		*out = make([]AutoscalingConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AuxiliaryNodeGroups != nil {
		in, out := &in.AuxiliaryNodeGroups, &out.AuxiliaryNodeGroups
		*out = make([]AuxiliaryNodeGroupsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Bucket != nil {
		in, out := &in.Bucket, &out.Bucket
		*out = new(string)
		**out = **in
	}
	if in.DataprocMetricConfig != nil {
		in, out := &in.DataprocMetricConfig, &out.DataprocMetricConfig
		*out = make([]DataprocMetricConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EncryptionConfig != nil {
		in, out := &in.EncryptionConfig, &out.EncryptionConfig
		*out = make([]EncryptionConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EndpointConfig != nil {
		in, out := &in.EndpointConfig, &out.EndpointConfig
		*out = make([]EndpointConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.GceClusterConfig != nil {
		in, out := &in.GceClusterConfig, &out.GceClusterConfig
		*out = make([]GceClusterConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.InitializationAction != nil {
		in, out := &in.InitializationAction, &out.InitializationAction
		*out = make([]InitializationActionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LifecycleConfig != nil {
		in, out := &in.LifecycleConfig, &out.LifecycleConfig
		*out = make([]LifecycleConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MasterConfig != nil {
		in, out := &in.MasterConfig, &out.MasterConfig
		*out = make([]MasterConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MetastoreConfig != nil {
		in, out := &in.MetastoreConfig, &out.MetastoreConfig
		*out = make([]MetastoreConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PreemptibleWorkerConfig != nil {
		in, out := &in.PreemptibleWorkerConfig, &out.PreemptibleWorkerConfig
		*out = make([]PreemptibleWorkerConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SecurityConfig != nil {
		in, out := &in.SecurityConfig, &out.SecurityConfig
		*out = make([]SecurityConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SoftwareConfig != nil {
		in, out := &in.SoftwareConfig, &out.SoftwareConfig
		*out = make([]SoftwareConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StagingBucket != nil {
		in, out := &in.StagingBucket, &out.StagingBucket
		*out = new(string)
		**out = **in
	}
	if in.TempBucket != nil {
		in, out := &in.TempBucket, &out.TempBucket
		*out = new(string)
		**out = **in
	}
	if in.WorkerConfig != nil {
		in, out := &in.WorkerConfig, &out.WorkerConfig
		*out = make([]ClusterConfigWorkerConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterConfigObservation.
func (in *ClusterConfigObservation) DeepCopy() *ClusterConfigObservation {
	if in == nil {
		return nil
	}
	out := new(ClusterConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterConfigParameters) DeepCopyInto(out *ClusterConfigParameters) {
	*out = *in
	if in.AutoscalingConfig != nil {
		in, out := &in.AutoscalingConfig, &out.AutoscalingConfig
		*out = make([]AutoscalingConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AuxiliaryNodeGroups != nil {
		in, out := &in.AuxiliaryNodeGroups, &out.AuxiliaryNodeGroups
		*out = make([]AuxiliaryNodeGroupsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DataprocMetricConfig != nil {
		in, out := &in.DataprocMetricConfig, &out.DataprocMetricConfig
		*out = make([]DataprocMetricConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EncryptionConfig != nil {
		in, out := &in.EncryptionConfig, &out.EncryptionConfig
		*out = make([]EncryptionConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EndpointConfig != nil {
		in, out := &in.EndpointConfig, &out.EndpointConfig
		*out = make([]EndpointConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.GceClusterConfig != nil {
		in, out := &in.GceClusterConfig, &out.GceClusterConfig
		*out = make([]GceClusterConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.InitializationAction != nil {
		in, out := &in.InitializationAction, &out.InitializationAction
		*out = make([]InitializationActionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LifecycleConfig != nil {
		in, out := &in.LifecycleConfig, &out.LifecycleConfig
		*out = make([]LifecycleConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MasterConfig != nil {
		in, out := &in.MasterConfig, &out.MasterConfig
		*out = make([]MasterConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MetastoreConfig != nil {
		in, out := &in.MetastoreConfig, &out.MetastoreConfig
		*out = make([]MetastoreConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PreemptibleWorkerConfig != nil {
		in, out := &in.PreemptibleWorkerConfig, &out.PreemptibleWorkerConfig
		*out = make([]PreemptibleWorkerConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SecurityConfig != nil {
		in, out := &in.SecurityConfig, &out.SecurityConfig
		*out = make([]SecurityConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SoftwareConfig != nil {
		in, out := &in.SoftwareConfig, &out.SoftwareConfig
		*out = make([]SoftwareConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StagingBucket != nil {
		in, out := &in.StagingBucket, &out.StagingBucket
		*out = new(string)
		**out = **in
	}
	if in.TempBucket != nil {
		in, out := &in.TempBucket, &out.TempBucket
		*out = new(string)
		**out = **in
	}
	if in.WorkerConfig != nil {
		in, out := &in.WorkerConfig, &out.WorkerConfig
		*out = make([]ClusterConfigWorkerConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterConfigParameters.
func (in *ClusterConfigParameters) DeepCopy() *ClusterConfigParameters {
	if in == nil {
		return nil
	}
	out := new(ClusterConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterConfigWorkerConfigInitParameters) DeepCopyInto(out *ClusterConfigWorkerConfigInitParameters) {
	*out = *in
	if in.Accelerators != nil {
		in, out := &in.Accelerators, &out.Accelerators
		*out = make([]WorkerConfigAcceleratorsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DiskConfig != nil {
		in, out := &in.DiskConfig, &out.DiskConfig
		*out = make([]WorkerConfigDiskConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ImageURI != nil {
		in, out := &in.ImageURI, &out.ImageURI
		*out = new(string)
		**out = **in
	}
	if in.MachineType != nil {
		in, out := &in.MachineType, &out.MachineType
		*out = new(string)
		**out = **in
	}
	if in.MinCPUPlatform != nil {
		in, out := &in.MinCPUPlatform, &out.MinCPUPlatform
		*out = new(string)
		**out = **in
	}
	if in.MinNumInstances != nil {
		in, out := &in.MinNumInstances, &out.MinNumInstances
		*out = new(float64)
		**out = **in
	}
	if in.NumInstances != nil {
		in, out := &in.NumInstances, &out.NumInstances
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterConfigWorkerConfigInitParameters.
func (in *ClusterConfigWorkerConfigInitParameters) DeepCopy() *ClusterConfigWorkerConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(ClusterConfigWorkerConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterConfigWorkerConfigObservation) DeepCopyInto(out *ClusterConfigWorkerConfigObservation) {
	*out = *in
	if in.Accelerators != nil {
		in, out := &in.Accelerators, &out.Accelerators
		*out = make([]WorkerConfigAcceleratorsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DiskConfig != nil {
		in, out := &in.DiskConfig, &out.DiskConfig
		*out = make([]WorkerConfigDiskConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ImageURI != nil {
		in, out := &in.ImageURI, &out.ImageURI
		*out = new(string)
		**out = **in
	}
	if in.InstanceNames != nil {
		in, out := &in.InstanceNames, &out.InstanceNames
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.MachineType != nil {
		in, out := &in.MachineType, &out.MachineType
		*out = new(string)
		**out = **in
	}
	if in.MinCPUPlatform != nil {
		in, out := &in.MinCPUPlatform, &out.MinCPUPlatform
		*out = new(string)
		**out = **in
	}
	if in.MinNumInstances != nil {
		in, out := &in.MinNumInstances, &out.MinNumInstances
		*out = new(float64)
		**out = **in
	}
	if in.NumInstances != nil {
		in, out := &in.NumInstances, &out.NumInstances
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterConfigWorkerConfigObservation.
func (in *ClusterConfigWorkerConfigObservation) DeepCopy() *ClusterConfigWorkerConfigObservation {
	if in == nil {
		return nil
	}
	out := new(ClusterConfigWorkerConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterConfigWorkerConfigParameters) DeepCopyInto(out *ClusterConfigWorkerConfigParameters) {
	*out = *in
	if in.Accelerators != nil {
		in, out := &in.Accelerators, &out.Accelerators
		*out = make([]WorkerConfigAcceleratorsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DiskConfig != nil {
		in, out := &in.DiskConfig, &out.DiskConfig
		*out = make([]WorkerConfigDiskConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ImageURI != nil {
		in, out := &in.ImageURI, &out.ImageURI
		*out = new(string)
		**out = **in
	}
	if in.MachineType != nil {
		in, out := &in.MachineType, &out.MachineType
		*out = new(string)
		**out = **in
	}
	if in.MinCPUPlatform != nil {
		in, out := &in.MinCPUPlatform, &out.MinCPUPlatform
		*out = new(string)
		**out = **in
	}
	if in.MinNumInstances != nil {
		in, out := &in.MinNumInstances, &out.MinNumInstances
		*out = new(float64)
		**out = **in
	}
	if in.NumInstances != nil {
		in, out := &in.NumInstances, &out.NumInstances
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterConfigWorkerConfigParameters.
func (in *ClusterConfigWorkerConfigParameters) DeepCopy() *ClusterConfigWorkerConfigParameters {
	if in == nil {
		return nil
	}
	out := new(ClusterConfigWorkerConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterInitParameters) DeepCopyInto(out *ClusterInitParameters) {
	*out = *in
	if in.ClusterConfig != nil {
		in, out := &in.ClusterConfig, &out.ClusterConfig
		*out = make([]ClusterConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.GracefulDecommissionTimeout != nil {
		in, out := &in.GracefulDecommissionTimeout, &out.GracefulDecommissionTimeout
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.VirtualClusterConfig != nil {
		in, out := &in.VirtualClusterConfig, &out.VirtualClusterConfig
		*out = make([]VirtualClusterConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterInitParameters.
func (in *ClusterInitParameters) DeepCopy() *ClusterInitParameters {
	if in == nil {
		return nil
	}
	out := new(ClusterInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterList) DeepCopyInto(out *ClusterList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Cluster, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterList.
func (in *ClusterList) DeepCopy() *ClusterList {
	if in == nil {
		return nil
	}
	out := new(ClusterList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ClusterList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterObservation) DeepCopyInto(out *ClusterObservation) {
	*out = *in
	if in.ClusterConfig != nil {
		in, out := &in.ClusterConfig, &out.ClusterConfig
		*out = make([]ClusterConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EffectiveLabels != nil {
		in, out := &in.EffectiveLabels, &out.EffectiveLabels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.GracefulDecommissionTimeout != nil {
		in, out := &in.GracefulDecommissionTimeout, &out.GracefulDecommissionTimeout
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.TerraformLabels != nil {
		in, out := &in.TerraformLabels, &out.TerraformLabels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.VirtualClusterConfig != nil {
		in, out := &in.VirtualClusterConfig, &out.VirtualClusterConfig
		*out = make([]VirtualClusterConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterObservation.
func (in *ClusterObservation) DeepCopy() *ClusterObservation {
	if in == nil {
		return nil
	}
	out := new(ClusterObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterParameters) DeepCopyInto(out *ClusterParameters) {
	*out = *in
	if in.ClusterConfig != nil {
		in, out := &in.ClusterConfig, &out.ClusterConfig
		*out = make([]ClusterConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.GracefulDecommissionTimeout != nil {
		in, out := &in.GracefulDecommissionTimeout, &out.GracefulDecommissionTimeout
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.VirtualClusterConfig != nil {
		in, out := &in.VirtualClusterConfig, &out.VirtualClusterConfig
		*out = make([]VirtualClusterConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterParameters.
func (in *ClusterParameters) DeepCopy() *ClusterParameters {
	if in == nil {
		return nil
	}
	out := new(ClusterParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterSelectorInitParameters) DeepCopyInto(out *ClusterSelectorInitParameters) {
	*out = *in
	if in.ClusterLabels != nil {
		in, out := &in.ClusterLabels, &out.ClusterLabels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Zone != nil {
		in, out := &in.Zone, &out.Zone
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterSelectorInitParameters.
func (in *ClusterSelectorInitParameters) DeepCopy() *ClusterSelectorInitParameters {
	if in == nil {
		return nil
	}
	out := new(ClusterSelectorInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterSelectorObservation) DeepCopyInto(out *ClusterSelectorObservation) {
	*out = *in
	if in.ClusterLabels != nil {
		in, out := &in.ClusterLabels, &out.ClusterLabels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Zone != nil {
		in, out := &in.Zone, &out.Zone
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterSelectorObservation.
func (in *ClusterSelectorObservation) DeepCopy() *ClusterSelectorObservation {
	if in == nil {
		return nil
	}
	out := new(ClusterSelectorObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterSelectorParameters) DeepCopyInto(out *ClusterSelectorParameters) {
	*out = *in
	if in.ClusterLabels != nil {
		in, out := &in.ClusterLabels, &out.ClusterLabels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Zone != nil {
		in, out := &in.Zone, &out.Zone
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterSelectorParameters.
func (in *ClusterSelectorParameters) DeepCopy() *ClusterSelectorParameters {
	if in == nil {
		return nil
	}
	out := new(ClusterSelectorParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterSpec) DeepCopyInto(out *ClusterSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterSpec.
func (in *ClusterSpec) DeepCopy() *ClusterSpec {
	if in == nil {
		return nil
	}
	out := new(ClusterSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterStatus) DeepCopyInto(out *ClusterStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterStatus.
func (in *ClusterStatus) DeepCopy() *ClusterStatus {
	if in == nil {
		return nil
	}
	out := new(ClusterStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigAutoscalingConfigInitParameters) DeepCopyInto(out *ConfigAutoscalingConfigInitParameters) {
	*out = *in
	if in.Policy != nil {
		in, out := &in.Policy, &out.Policy
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigAutoscalingConfigInitParameters.
func (in *ConfigAutoscalingConfigInitParameters) DeepCopy() *ConfigAutoscalingConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(ConfigAutoscalingConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigAutoscalingConfigObservation) DeepCopyInto(out *ConfigAutoscalingConfigObservation) {
	*out = *in
	if in.Policy != nil {
		in, out := &in.Policy, &out.Policy
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigAutoscalingConfigObservation.
func (in *ConfigAutoscalingConfigObservation) DeepCopy() *ConfigAutoscalingConfigObservation {
	if in == nil {
		return nil
	}
	out := new(ConfigAutoscalingConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigAutoscalingConfigParameters) DeepCopyInto(out *ConfigAutoscalingConfigParameters) {
	*out = *in
	if in.Policy != nil {
		in, out := &in.Policy, &out.Policy
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigAutoscalingConfigParameters.
func (in *ConfigAutoscalingConfigParameters) DeepCopy() *ConfigAutoscalingConfigParameters {
	if in == nil {
		return nil
	}
	out := new(ConfigAutoscalingConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigEncryptionConfigInitParameters) DeepCopyInto(out *ConfigEncryptionConfigInitParameters) {
	*out = *in
	if in.GcePdKMSKeyName != nil {
		in, out := &in.GcePdKMSKeyName, &out.GcePdKMSKeyName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigEncryptionConfigInitParameters.
func (in *ConfigEncryptionConfigInitParameters) DeepCopy() *ConfigEncryptionConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(ConfigEncryptionConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigEncryptionConfigObservation) DeepCopyInto(out *ConfigEncryptionConfigObservation) {
	*out = *in
	if in.GcePdKMSKeyName != nil {
		in, out := &in.GcePdKMSKeyName, &out.GcePdKMSKeyName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigEncryptionConfigObservation.
func (in *ConfigEncryptionConfigObservation) DeepCopy() *ConfigEncryptionConfigObservation {
	if in == nil {
		return nil
	}
	out := new(ConfigEncryptionConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigEncryptionConfigParameters) DeepCopyInto(out *ConfigEncryptionConfigParameters) {
	*out = *in
	if in.GcePdKMSKeyName != nil {
		in, out := &in.GcePdKMSKeyName, &out.GcePdKMSKeyName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigEncryptionConfigParameters.
func (in *ConfigEncryptionConfigParameters) DeepCopy() *ConfigEncryptionConfigParameters {
	if in == nil {
		return nil
	}
	out := new(ConfigEncryptionConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigEndpointConfigInitParameters) DeepCopyInto(out *ConfigEndpointConfigInitParameters) {
	*out = *in
	if in.EnableHTTPPortAccess != nil {
		in, out := &in.EnableHTTPPortAccess, &out.EnableHTTPPortAccess
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigEndpointConfigInitParameters.
func (in *ConfigEndpointConfigInitParameters) DeepCopy() *ConfigEndpointConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(ConfigEndpointConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigEndpointConfigObservation) DeepCopyInto(out *ConfigEndpointConfigObservation) {
	*out = *in
	if in.EnableHTTPPortAccess != nil {
		in, out := &in.EnableHTTPPortAccess, &out.EnableHTTPPortAccess
		*out = new(bool)
		**out = **in
	}
	if in.HTTPPorts != nil {
		in, out := &in.HTTPPorts, &out.HTTPPorts
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigEndpointConfigObservation.
func (in *ConfigEndpointConfigObservation) DeepCopy() *ConfigEndpointConfigObservation {
	if in == nil {
		return nil
	}
	out := new(ConfigEndpointConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigEndpointConfigParameters) DeepCopyInto(out *ConfigEndpointConfigParameters) {
	*out = *in
	if in.EnableHTTPPortAccess != nil {
		in, out := &in.EnableHTTPPortAccess, &out.EnableHTTPPortAccess
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigEndpointConfigParameters.
func (in *ConfigEndpointConfigParameters) DeepCopy() *ConfigEndpointConfigParameters {
	if in == nil {
		return nil
	}
	out := new(ConfigEndpointConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigGceClusterConfigInitParameters) DeepCopyInto(out *ConfigGceClusterConfigInitParameters) {
	*out = *in
	if in.InternalIPOnly != nil {
		in, out := &in.InternalIPOnly, &out.InternalIPOnly
		*out = new(bool)
		**out = **in
	}
	if in.Metadata != nil {
		in, out := &in.Metadata, &out.Metadata
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Network != nil {
		in, out := &in.Network, &out.Network
		*out = new(string)
		**out = **in
	}
	if in.NodeGroupAffinity != nil {
		in, out := &in.NodeGroupAffinity, &out.NodeGroupAffinity
		*out = make([]GceClusterConfigNodeGroupAffinityInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PrivateIPv6GoogleAccess != nil {
		in, out := &in.PrivateIPv6GoogleAccess, &out.PrivateIPv6GoogleAccess
		*out = new(string)
		**out = **in
	}
	if in.ReservationAffinity != nil {
		in, out := &in.ReservationAffinity, &out.ReservationAffinity
		*out = make([]GceClusterConfigReservationAffinityInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ServiceAccount != nil {
		in, out := &in.ServiceAccount, &out.ServiceAccount
		*out = new(string)
		**out = **in
	}
	if in.ServiceAccountScopes != nil {
		in, out := &in.ServiceAccountScopes, &out.ServiceAccountScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ShieldedInstanceConfig != nil {
		in, out := &in.ShieldedInstanceConfig, &out.ShieldedInstanceConfig
		*out = make([]GceClusterConfigShieldedInstanceConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Subnetwork != nil {
		in, out := &in.Subnetwork, &out.Subnetwork
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Zone != nil {
		in, out := &in.Zone, &out.Zone
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigGceClusterConfigInitParameters.
func (in *ConfigGceClusterConfigInitParameters) DeepCopy() *ConfigGceClusterConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(ConfigGceClusterConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigGceClusterConfigObservation) DeepCopyInto(out *ConfigGceClusterConfigObservation) {
	*out = *in
	if in.InternalIPOnly != nil {
		in, out := &in.InternalIPOnly, &out.InternalIPOnly
		*out = new(bool)
		**out = **in
	}
	if in.Metadata != nil {
		in, out := &in.Metadata, &out.Metadata
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Network != nil {
		in, out := &in.Network, &out.Network
		*out = new(string)
		**out = **in
	}
	if in.NodeGroupAffinity != nil {
		in, out := &in.NodeGroupAffinity, &out.NodeGroupAffinity
		*out = make([]GceClusterConfigNodeGroupAffinityObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PrivateIPv6GoogleAccess != nil {
		in, out := &in.PrivateIPv6GoogleAccess, &out.PrivateIPv6GoogleAccess
		*out = new(string)
		**out = **in
	}
	if in.ReservationAffinity != nil {
		in, out := &in.ReservationAffinity, &out.ReservationAffinity
		*out = make([]GceClusterConfigReservationAffinityObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ServiceAccount != nil {
		in, out := &in.ServiceAccount, &out.ServiceAccount
		*out = new(string)
		**out = **in
	}
	if in.ServiceAccountScopes != nil {
		in, out := &in.ServiceAccountScopes, &out.ServiceAccountScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ShieldedInstanceConfig != nil {
		in, out := &in.ShieldedInstanceConfig, &out.ShieldedInstanceConfig
		*out = make([]GceClusterConfigShieldedInstanceConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Subnetwork != nil {
		in, out := &in.Subnetwork, &out.Subnetwork
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Zone != nil {
		in, out := &in.Zone, &out.Zone
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigGceClusterConfigObservation.
func (in *ConfigGceClusterConfigObservation) DeepCopy() *ConfigGceClusterConfigObservation {
	if in == nil {
		return nil
	}
	out := new(ConfigGceClusterConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigGceClusterConfigParameters) DeepCopyInto(out *ConfigGceClusterConfigParameters) {
	*out = *in
	if in.InternalIPOnly != nil {
		in, out := &in.InternalIPOnly, &out.InternalIPOnly
		*out = new(bool)
		**out = **in
	}
	if in.Metadata != nil {
		in, out := &in.Metadata, &out.Metadata
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Network != nil {
		in, out := &in.Network, &out.Network
		*out = new(string)
		**out = **in
	}
	if in.NodeGroupAffinity != nil {
		in, out := &in.NodeGroupAffinity, &out.NodeGroupAffinity
		*out = make([]GceClusterConfigNodeGroupAffinityParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PrivateIPv6GoogleAccess != nil {
		in, out := &in.PrivateIPv6GoogleAccess, &out.PrivateIPv6GoogleAccess
		*out = new(string)
		**out = **in
	}
	if in.ReservationAffinity != nil {
		in, out := &in.ReservationAffinity, &out.ReservationAffinity
		*out = make([]GceClusterConfigReservationAffinityParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ServiceAccount != nil {
		in, out := &in.ServiceAccount, &out.ServiceAccount
		*out = new(string)
		**out = **in
	}
	if in.ServiceAccountScopes != nil {
		in, out := &in.ServiceAccountScopes, &out.ServiceAccountScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ShieldedInstanceConfig != nil {
		in, out := &in.ShieldedInstanceConfig, &out.ShieldedInstanceConfig
		*out = make([]GceClusterConfigShieldedInstanceConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Subnetwork != nil {
		in, out := &in.Subnetwork, &out.Subnetwork
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Zone != nil {
		in, out := &in.Zone, &out.Zone
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigGceClusterConfigParameters.
func (in *ConfigGceClusterConfigParameters) DeepCopy() *ConfigGceClusterConfigParameters {
	if in == nil {
		return nil
	}
	out := new(ConfigGceClusterConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigInitParameters) DeepCopyInto(out *ConfigInitParameters) {
	*out = *in
	if in.LocalSsdCount != nil {
		in, out := &in.LocalSsdCount, &out.LocalSsdCount
		*out = new(float64)
		**out = **in
	}
	if in.MachineType != nil {
		in, out := &in.MachineType, &out.MachineType
		*out = new(string)
		**out = **in
	}
	if in.MinCPUPlatform != nil {
		in, out := &in.MinCPUPlatform, &out.MinCPUPlatform
		*out = new(string)
		**out = **in
	}
	if in.Preemptible != nil {
		in, out := &in.Preemptible, &out.Preemptible
		*out = new(bool)
		**out = **in
	}
	if in.Spot != nil {
		in, out := &in.Spot, &out.Spot
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigInitParameters.
func (in *ConfigInitParameters) DeepCopy() *ConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(ConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigLifecycleConfigInitParameters) DeepCopyInto(out *ConfigLifecycleConfigInitParameters) {
	*out = *in
	if in.AutoDeleteTTL != nil {
		in, out := &in.AutoDeleteTTL, &out.AutoDeleteTTL
		*out = new(string)
		**out = **in
	}
	if in.AutoDeleteTime != nil {
		in, out := &in.AutoDeleteTime, &out.AutoDeleteTime
		*out = new(string)
		**out = **in
	}
	if in.IdleDeleteTTL != nil {
		in, out := &in.IdleDeleteTTL, &out.IdleDeleteTTL
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigLifecycleConfigInitParameters.
func (in *ConfigLifecycleConfigInitParameters) DeepCopy() *ConfigLifecycleConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(ConfigLifecycleConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigLifecycleConfigObservation) DeepCopyInto(out *ConfigLifecycleConfigObservation) {
	*out = *in
	if in.AutoDeleteTTL != nil {
		in, out := &in.AutoDeleteTTL, &out.AutoDeleteTTL
		*out = new(string)
		**out = **in
	}
	if in.AutoDeleteTime != nil {
		in, out := &in.AutoDeleteTime, &out.AutoDeleteTime
		*out = new(string)
		**out = **in
	}
	if in.IdleDeleteTTL != nil {
		in, out := &in.IdleDeleteTTL, &out.IdleDeleteTTL
		*out = new(string)
		**out = **in
	}
	if in.IdleStartTime != nil {
		in, out := &in.IdleStartTime, &out.IdleStartTime
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigLifecycleConfigObservation.
func (in *ConfigLifecycleConfigObservation) DeepCopy() *ConfigLifecycleConfigObservation {
	if in == nil {
		return nil
	}
	out := new(ConfigLifecycleConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigLifecycleConfigParameters) DeepCopyInto(out *ConfigLifecycleConfigParameters) {
	*out = *in
	if in.AutoDeleteTTL != nil {
		in, out := &in.AutoDeleteTTL, &out.AutoDeleteTTL
		*out = new(string)
		**out = **in
	}
	if in.AutoDeleteTime != nil {
		in, out := &in.AutoDeleteTime, &out.AutoDeleteTime
		*out = new(string)
		**out = **in
	}
	if in.IdleDeleteTTL != nil {
		in, out := &in.IdleDeleteTTL, &out.IdleDeleteTTL
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigLifecycleConfigParameters.
func (in *ConfigLifecycleConfigParameters) DeepCopy() *ConfigLifecycleConfigParameters {
	if in == nil {
		return nil
	}
	out := new(ConfigLifecycleConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigMasterConfigAcceleratorsInitParameters) DeepCopyInto(out *ConfigMasterConfigAcceleratorsInitParameters) {
	*out = *in
	if in.AcceleratorCount != nil {
		in, out := &in.AcceleratorCount, &out.AcceleratorCount
		*out = new(float64)
		**out = **in
	}
	if in.AcceleratorType != nil {
		in, out := &in.AcceleratorType, &out.AcceleratorType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigMasterConfigAcceleratorsInitParameters.
func (in *ConfigMasterConfigAcceleratorsInitParameters) DeepCopy() *ConfigMasterConfigAcceleratorsInitParameters {
	if in == nil {
		return nil
	}
	out := new(ConfigMasterConfigAcceleratorsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigMasterConfigAcceleratorsObservation) DeepCopyInto(out *ConfigMasterConfigAcceleratorsObservation) {
	*out = *in
	if in.AcceleratorCount != nil {
		in, out := &in.AcceleratorCount, &out.AcceleratorCount
		*out = new(float64)
		**out = **in
	}
	if in.AcceleratorType != nil {
		in, out := &in.AcceleratorType, &out.AcceleratorType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigMasterConfigAcceleratorsObservation.
func (in *ConfigMasterConfigAcceleratorsObservation) DeepCopy() *ConfigMasterConfigAcceleratorsObservation {
	if in == nil {
		return nil
	}
	out := new(ConfigMasterConfigAcceleratorsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigMasterConfigAcceleratorsParameters) DeepCopyInto(out *ConfigMasterConfigAcceleratorsParameters) {
	*out = *in
	if in.AcceleratorCount != nil {
		in, out := &in.AcceleratorCount, &out.AcceleratorCount
		*out = new(float64)
		**out = **in
	}
	if in.AcceleratorType != nil {
		in, out := &in.AcceleratorType, &out.AcceleratorType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigMasterConfigAcceleratorsParameters.
func (in *ConfigMasterConfigAcceleratorsParameters) DeepCopy() *ConfigMasterConfigAcceleratorsParameters {
	if in == nil {
		return nil
	}
	out := new(ConfigMasterConfigAcceleratorsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigMasterConfigDiskConfigInitParameters) DeepCopyInto(out *ConfigMasterConfigDiskConfigInitParameters) {
	*out = *in
	if in.BootDiskSizeGb != nil {
		in, out := &in.BootDiskSizeGb, &out.BootDiskSizeGb
		*out = new(float64)
		**out = **in
	}
	if in.BootDiskType != nil {
		in, out := &in.BootDiskType, &out.BootDiskType
		*out = new(string)
		**out = **in
	}
	if in.NumLocalSsds != nil {
		in, out := &in.NumLocalSsds, &out.NumLocalSsds
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigMasterConfigDiskConfigInitParameters.
func (in *ConfigMasterConfigDiskConfigInitParameters) DeepCopy() *ConfigMasterConfigDiskConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(ConfigMasterConfigDiskConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigMasterConfigDiskConfigObservation) DeepCopyInto(out *ConfigMasterConfigDiskConfigObservation) {
	*out = *in
	if in.BootDiskSizeGb != nil {
		in, out := &in.BootDiskSizeGb, &out.BootDiskSizeGb
		*out = new(float64)
		**out = **in
	}
	if in.BootDiskType != nil {
		in, out := &in.BootDiskType, &out.BootDiskType
		*out = new(string)
		**out = **in
	}
	if in.NumLocalSsds != nil {
		in, out := &in.NumLocalSsds, &out.NumLocalSsds
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigMasterConfigDiskConfigObservation.
func (in *ConfigMasterConfigDiskConfigObservation) DeepCopy() *ConfigMasterConfigDiskConfigObservation {
	if in == nil {
		return nil
	}
	out := new(ConfigMasterConfigDiskConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigMasterConfigDiskConfigParameters) DeepCopyInto(out *ConfigMasterConfigDiskConfigParameters) {
	*out = *in
	if in.BootDiskSizeGb != nil {
		in, out := &in.BootDiskSizeGb, &out.BootDiskSizeGb
		*out = new(float64)
		**out = **in
	}
	if in.BootDiskType != nil {
		in, out := &in.BootDiskType, &out.BootDiskType
		*out = new(string)
		**out = **in
	}
	if in.NumLocalSsds != nil {
		in, out := &in.NumLocalSsds, &out.NumLocalSsds
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigMasterConfigDiskConfigParameters.
func (in *ConfigMasterConfigDiskConfigParameters) DeepCopy() *ConfigMasterConfigDiskConfigParameters {
	if in == nil {
		return nil
	}
	out := new(ConfigMasterConfigDiskConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigMasterConfigInitParameters) DeepCopyInto(out *ConfigMasterConfigInitParameters) {
	*out = *in
	if in.Accelerators != nil {
		in, out := &in.Accelerators, &out.Accelerators
		*out = make([]ConfigMasterConfigAcceleratorsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DiskConfig != nil {
		in, out := &in.DiskConfig, &out.DiskConfig
		*out = make([]ConfigMasterConfigDiskConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Image != nil {
		in, out := &in.Image, &out.Image
		*out = new(string)
		**out = **in
	}
	if in.MachineType != nil {
		in, out := &in.MachineType, &out.MachineType
		*out = new(string)
		**out = **in
	}
	if in.MinCPUPlatform != nil {
		in, out := &in.MinCPUPlatform, &out.MinCPUPlatform
		*out = new(string)
		**out = **in
	}
	if in.NumInstances != nil {
		in, out := &in.NumInstances, &out.NumInstances
		*out = new(float64)
		**out = **in
	}
	if in.Preemptibility != nil {
		in, out := &in.Preemptibility, &out.Preemptibility
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigMasterConfigInitParameters.
func (in *ConfigMasterConfigInitParameters) DeepCopy() *ConfigMasterConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(ConfigMasterConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigMasterConfigObservation) DeepCopyInto(out *ConfigMasterConfigObservation) {
	*out = *in
	if in.Accelerators != nil {
		in, out := &in.Accelerators, &out.Accelerators
		*out = make([]ConfigMasterConfigAcceleratorsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DiskConfig != nil {
		in, out := &in.DiskConfig, &out.DiskConfig
		*out = make([]ConfigMasterConfigDiskConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Image != nil {
		in, out := &in.Image, &out.Image
		*out = new(string)
		**out = **in
	}
	if in.InstanceNames != nil {
		in, out := &in.InstanceNames, &out.InstanceNames
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.IsPreemptible != nil {
		in, out := &in.IsPreemptible, &out.IsPreemptible
		*out = new(bool)
		**out = **in
	}
	if in.MachineType != nil {
		in, out := &in.MachineType, &out.MachineType
		*out = new(string)
		**out = **in
	}
	if in.ManagedGroupConfig != nil {
		in, out := &in.ManagedGroupConfig, &out.ManagedGroupConfig
		*out = make([]ManagedGroupConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MinCPUPlatform != nil {
		in, out := &in.MinCPUPlatform, &out.MinCPUPlatform
		*out = new(string)
		**out = **in
	}
	if in.NumInstances != nil {
		in, out := &in.NumInstances, &out.NumInstances
		*out = new(float64)
		**out = **in
	}
	if in.Preemptibility != nil {
		in, out := &in.Preemptibility, &out.Preemptibility
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigMasterConfigObservation.
func (in *ConfigMasterConfigObservation) DeepCopy() *ConfigMasterConfigObservation {
	if in == nil {
		return nil
	}
	out := new(ConfigMasterConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigMasterConfigParameters) DeepCopyInto(out *ConfigMasterConfigParameters) {
	*out = *in
	if in.Accelerators != nil {
		in, out := &in.Accelerators, &out.Accelerators
		*out = make([]ConfigMasterConfigAcceleratorsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DiskConfig != nil {
		in, out := &in.DiskConfig, &out.DiskConfig
		*out = make([]ConfigMasterConfigDiskConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Image != nil {
		in, out := &in.Image, &out.Image
		*out = new(string)
		**out = **in
	}
	if in.MachineType != nil {
		in, out := &in.MachineType, &out.MachineType
		*out = new(string)
		**out = **in
	}
	if in.MinCPUPlatform != nil {
		in, out := &in.MinCPUPlatform, &out.MinCPUPlatform
		*out = new(string)
		**out = **in
	}
	if in.NumInstances != nil {
		in, out := &in.NumInstances, &out.NumInstances
		*out = new(float64)
		**out = **in
	}
	if in.Preemptibility != nil {
		in, out := &in.Preemptibility, &out.Preemptibility
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigMasterConfigParameters.
func (in *ConfigMasterConfigParameters) DeepCopy() *ConfigMasterConfigParameters {
	if in == nil {
		return nil
	}
	out := new(ConfigMasterConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigObservation) DeepCopyInto(out *ConfigObservation) {
	*out = *in
	if in.LocalSsdCount != nil {
		in, out := &in.LocalSsdCount, &out.LocalSsdCount
		*out = new(float64)
		**out = **in
	}
	if in.MachineType != nil {
		in, out := &in.MachineType, &out.MachineType
		*out = new(string)
		**out = **in
	}
	if in.MinCPUPlatform != nil {
		in, out := &in.MinCPUPlatform, &out.MinCPUPlatform
		*out = new(string)
		**out = **in
	}
	if in.Preemptible != nil {
		in, out := &in.Preemptible, &out.Preemptible
		*out = new(bool)
		**out = **in
	}
	if in.Spot != nil {
		in, out := &in.Spot, &out.Spot
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigObservation.
func (in *ConfigObservation) DeepCopy() *ConfigObservation {
	if in == nil {
		return nil
	}
	out := new(ConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigParameters) DeepCopyInto(out *ConfigParameters) {
	*out = *in
	if in.LocalSsdCount != nil {
		in, out := &in.LocalSsdCount, &out.LocalSsdCount
		*out = new(float64)
		**out = **in
	}
	if in.MachineType != nil {
		in, out := &in.MachineType, &out.MachineType
		*out = new(string)
		**out = **in
	}
	if in.MinCPUPlatform != nil {
		in, out := &in.MinCPUPlatform, &out.MinCPUPlatform
		*out = new(string)
		**out = **in
	}
	if in.Preemptible != nil {
		in, out := &in.Preemptible, &out.Preemptible
		*out = new(bool)
		**out = **in
	}
	if in.Spot != nil {
		in, out := &in.Spot, &out.Spot
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigParameters.
func (in *ConfigParameters) DeepCopy() *ConfigParameters {
	if in == nil {
		return nil
	}
	out := new(ConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigSecondaryWorkerConfigInitParameters) DeepCopyInto(out *ConfigSecondaryWorkerConfigInitParameters) {
	*out = *in
	if in.Accelerators != nil {
		in, out := &in.Accelerators, &out.Accelerators
		*out = make([]SecondaryWorkerConfigAcceleratorsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DiskConfig != nil {
		in, out := &in.DiskConfig, &out.DiskConfig
		*out = make([]SecondaryWorkerConfigDiskConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Image != nil {
		in, out := &in.Image, &out.Image
		*out = new(string)
		**out = **in
	}
	if in.MachineType != nil {
		in, out := &in.MachineType, &out.MachineType
		*out = new(string)
		**out = **in
	}
	if in.MinCPUPlatform != nil {
		in, out := &in.MinCPUPlatform, &out.MinCPUPlatform
		*out = new(string)
		**out = **in
	}
	if in.NumInstances != nil {
		in, out := &in.NumInstances, &out.NumInstances
		*out = new(float64)
		**out = **in
	}
	if in.Preemptibility != nil {
		in, out := &in.Preemptibility, &out.Preemptibility
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigSecondaryWorkerConfigInitParameters.
func (in *ConfigSecondaryWorkerConfigInitParameters) DeepCopy() *ConfigSecondaryWorkerConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(ConfigSecondaryWorkerConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigSecondaryWorkerConfigObservation) DeepCopyInto(out *ConfigSecondaryWorkerConfigObservation) {
	*out = *in
	if in.Accelerators != nil {
		in, out := &in.Accelerators, &out.Accelerators
		*out = make([]SecondaryWorkerConfigAcceleratorsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DiskConfig != nil {
		in, out := &in.DiskConfig, &out.DiskConfig
		*out = make([]SecondaryWorkerConfigDiskConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Image != nil {
		in, out := &in.Image, &out.Image
		*out = new(string)
		**out = **in
	}
	if in.InstanceNames != nil {
		in, out := &in.InstanceNames, &out.InstanceNames
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.IsPreemptible != nil {
		in, out := &in.IsPreemptible, &out.IsPreemptible
		*out = new(bool)
		**out = **in
	}
	if in.MachineType != nil {
		in, out := &in.MachineType, &out.MachineType
		*out = new(string)
		**out = **in
	}
	if in.ManagedGroupConfig != nil {
		in, out := &in.ManagedGroupConfig, &out.ManagedGroupConfig
		*out = make([]SecondaryWorkerConfigManagedGroupConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MinCPUPlatform != nil {
		in, out := &in.MinCPUPlatform, &out.MinCPUPlatform
		*out = new(string)
		**out = **in
	}
	if in.NumInstances != nil {
		in, out := &in.NumInstances, &out.NumInstances
		*out = new(float64)
		**out = **in
	}
	if in.Preemptibility != nil {
		in, out := &in.Preemptibility, &out.Preemptibility
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigSecondaryWorkerConfigObservation.
func (in *ConfigSecondaryWorkerConfigObservation) DeepCopy() *ConfigSecondaryWorkerConfigObservation {
	if in == nil {
		return nil
	}
	out := new(ConfigSecondaryWorkerConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigSecondaryWorkerConfigParameters) DeepCopyInto(out *ConfigSecondaryWorkerConfigParameters) {
	*out = *in
	if in.Accelerators != nil {
		in, out := &in.Accelerators, &out.Accelerators
		*out = make([]SecondaryWorkerConfigAcceleratorsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DiskConfig != nil {
		in, out := &in.DiskConfig, &out.DiskConfig
		*out = make([]SecondaryWorkerConfigDiskConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Image != nil {
		in, out := &in.Image, &out.Image
		*out = new(string)
		**out = **in
	}
	if in.MachineType != nil {
		in, out := &in.MachineType, &out.MachineType
		*out = new(string)
		**out = **in
	}
	if in.MinCPUPlatform != nil {
		in, out := &in.MinCPUPlatform, &out.MinCPUPlatform
		*out = new(string)
		**out = **in
	}
	if in.NumInstances != nil {
		in, out := &in.NumInstances, &out.NumInstances
		*out = new(float64)
		**out = **in
	}
	if in.Preemptibility != nil {
		in, out := &in.Preemptibility, &out.Preemptibility
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigSecondaryWorkerConfigParameters.
func (in *ConfigSecondaryWorkerConfigParameters) DeepCopy() *ConfigSecondaryWorkerConfigParameters {
	if in == nil {
		return nil
	}
	out := new(ConfigSecondaryWorkerConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigSecurityConfigInitParameters) DeepCopyInto(out *ConfigSecurityConfigInitParameters) {
	*out = *in
	if in.KerberosConfig != nil {
		in, out := &in.KerberosConfig, &out.KerberosConfig
		*out = make([]SecurityConfigKerberosConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigSecurityConfigInitParameters.
func (in *ConfigSecurityConfigInitParameters) DeepCopy() *ConfigSecurityConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(ConfigSecurityConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigSecurityConfigObservation) DeepCopyInto(out *ConfigSecurityConfigObservation) {
	*out = *in
	if in.KerberosConfig != nil {
		in, out := &in.KerberosConfig, &out.KerberosConfig
		*out = make([]SecurityConfigKerberosConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigSecurityConfigObservation.
func (in *ConfigSecurityConfigObservation) DeepCopy() *ConfigSecurityConfigObservation {
	if in == nil {
		return nil
	}
	out := new(ConfigSecurityConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigSecurityConfigParameters) DeepCopyInto(out *ConfigSecurityConfigParameters) {
	*out = *in
	if in.KerberosConfig != nil {
		in, out := &in.KerberosConfig, &out.KerberosConfig
		*out = make([]SecurityConfigKerberosConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigSecurityConfigParameters.
func (in *ConfigSecurityConfigParameters) DeepCopy() *ConfigSecurityConfigParameters {
	if in == nil {
		return nil
	}
	out := new(ConfigSecurityConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigSoftwareConfigInitParameters) DeepCopyInto(out *ConfigSoftwareConfigInitParameters) {
	*out = *in
	if in.ImageVersion != nil {
		in, out := &in.ImageVersion, &out.ImageVersion
		*out = new(string)
		**out = **in
	}
	if in.OptionalComponents != nil {
		in, out := &in.OptionalComponents, &out.OptionalComponents
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Properties != nil {
		in, out := &in.Properties, &out.Properties
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigSoftwareConfigInitParameters.
func (in *ConfigSoftwareConfigInitParameters) DeepCopy() *ConfigSoftwareConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(ConfigSoftwareConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigSoftwareConfigObservation) DeepCopyInto(out *ConfigSoftwareConfigObservation) {
	*out = *in
	if in.ImageVersion != nil {
		in, out := &in.ImageVersion, &out.ImageVersion
		*out = new(string)
		**out = **in
	}
	if in.OptionalComponents != nil {
		in, out := &in.OptionalComponents, &out.OptionalComponents
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Properties != nil {
		in, out := &in.Properties, &out.Properties
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigSoftwareConfigObservation.
func (in *ConfigSoftwareConfigObservation) DeepCopy() *ConfigSoftwareConfigObservation {
	if in == nil {
		return nil
	}
	out := new(ConfigSoftwareConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigSoftwareConfigParameters) DeepCopyInto(out *ConfigSoftwareConfigParameters) {
	*out = *in
	if in.ImageVersion != nil {
		in, out := &in.ImageVersion, &out.ImageVersion
		*out = new(string)
		**out = **in
	}
	if in.OptionalComponents != nil {
		in, out := &in.OptionalComponents, &out.OptionalComponents
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Properties != nil {
		in, out := &in.Properties, &out.Properties
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigSoftwareConfigParameters.
func (in *ConfigSoftwareConfigParameters) DeepCopy() *ConfigSoftwareConfigParameters {
	if in == nil {
		return nil
	}
	out := new(ConfigSoftwareConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigWorkerConfigAcceleratorsInitParameters) DeepCopyInto(out *ConfigWorkerConfigAcceleratorsInitParameters) {
	*out = *in
	if in.AcceleratorCount != nil {
		in, out := &in.AcceleratorCount, &out.AcceleratorCount
		*out = new(float64)
		**out = **in
	}
	if in.AcceleratorType != nil {
		in, out := &in.AcceleratorType, &out.AcceleratorType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigWorkerConfigAcceleratorsInitParameters.
func (in *ConfigWorkerConfigAcceleratorsInitParameters) DeepCopy() *ConfigWorkerConfigAcceleratorsInitParameters {
	if in == nil {
		return nil
	}
	out := new(ConfigWorkerConfigAcceleratorsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigWorkerConfigAcceleratorsObservation) DeepCopyInto(out *ConfigWorkerConfigAcceleratorsObservation) {
	*out = *in
	if in.AcceleratorCount != nil {
		in, out := &in.AcceleratorCount, &out.AcceleratorCount
		*out = new(float64)
		**out = **in
	}
	if in.AcceleratorType != nil {
		in, out := &in.AcceleratorType, &out.AcceleratorType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigWorkerConfigAcceleratorsObservation.
func (in *ConfigWorkerConfigAcceleratorsObservation) DeepCopy() *ConfigWorkerConfigAcceleratorsObservation {
	if in == nil {
		return nil
	}
	out := new(ConfigWorkerConfigAcceleratorsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigWorkerConfigAcceleratorsParameters) DeepCopyInto(out *ConfigWorkerConfigAcceleratorsParameters) {
	*out = *in
	if in.AcceleratorCount != nil {
		in, out := &in.AcceleratorCount, &out.AcceleratorCount
		*out = new(float64)
		**out = **in
	}
	if in.AcceleratorType != nil {
		in, out := &in.AcceleratorType, &out.AcceleratorType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigWorkerConfigAcceleratorsParameters.
func (in *ConfigWorkerConfigAcceleratorsParameters) DeepCopy() *ConfigWorkerConfigAcceleratorsParameters {
	if in == nil {
		return nil
	}
	out := new(ConfigWorkerConfigAcceleratorsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigWorkerConfigDiskConfigInitParameters) DeepCopyInto(out *ConfigWorkerConfigDiskConfigInitParameters) {
	*out = *in
	if in.BootDiskSizeGb != nil {
		in, out := &in.BootDiskSizeGb, &out.BootDiskSizeGb
		*out = new(float64)
		**out = **in
	}
	if in.BootDiskType != nil {
		in, out := &in.BootDiskType, &out.BootDiskType
		*out = new(string)
		**out = **in
	}
	if in.NumLocalSsds != nil {
		in, out := &in.NumLocalSsds, &out.NumLocalSsds
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigWorkerConfigDiskConfigInitParameters.
func (in *ConfigWorkerConfigDiskConfigInitParameters) DeepCopy() *ConfigWorkerConfigDiskConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(ConfigWorkerConfigDiskConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigWorkerConfigDiskConfigObservation) DeepCopyInto(out *ConfigWorkerConfigDiskConfigObservation) {
	*out = *in
	if in.BootDiskSizeGb != nil {
		in, out := &in.BootDiskSizeGb, &out.BootDiskSizeGb
		*out = new(float64)
		**out = **in
	}
	if in.BootDiskType != nil {
		in, out := &in.BootDiskType, &out.BootDiskType
		*out = new(string)
		**out = **in
	}
	if in.NumLocalSsds != nil {
		in, out := &in.NumLocalSsds, &out.NumLocalSsds
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigWorkerConfigDiskConfigObservation.
func (in *ConfigWorkerConfigDiskConfigObservation) DeepCopy() *ConfigWorkerConfigDiskConfigObservation {
	if in == nil {
		return nil
	}
	out := new(ConfigWorkerConfigDiskConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigWorkerConfigDiskConfigParameters) DeepCopyInto(out *ConfigWorkerConfigDiskConfigParameters) {
	*out = *in
	if in.BootDiskSizeGb != nil {
		in, out := &in.BootDiskSizeGb, &out.BootDiskSizeGb
		*out = new(float64)
		**out = **in
	}
	if in.BootDiskType != nil {
		in, out := &in.BootDiskType, &out.BootDiskType
		*out = new(string)
		**out = **in
	}
	if in.NumLocalSsds != nil {
		in, out := &in.NumLocalSsds, &out.NumLocalSsds
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigWorkerConfigDiskConfigParameters.
func (in *ConfigWorkerConfigDiskConfigParameters) DeepCopy() *ConfigWorkerConfigDiskConfigParameters {
	if in == nil {
		return nil
	}
	out := new(ConfigWorkerConfigDiskConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigWorkerConfigInitParameters) DeepCopyInto(out *ConfigWorkerConfigInitParameters) {
	*out = *in
	if in.Accelerators != nil {
		in, out := &in.Accelerators, &out.Accelerators
		*out = make([]ConfigWorkerConfigAcceleratorsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DiskConfig != nil {
		in, out := &in.DiskConfig, &out.DiskConfig
		*out = make([]ConfigWorkerConfigDiskConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Image != nil {
		in, out := &in.Image, &out.Image
		*out = new(string)
		**out = **in
	}
	if in.MachineType != nil {
		in, out := &in.MachineType, &out.MachineType
		*out = new(string)
		**out = **in
	}
	if in.MinCPUPlatform != nil {
		in, out := &in.MinCPUPlatform, &out.MinCPUPlatform
		*out = new(string)
		**out = **in
	}
	if in.NumInstances != nil {
		in, out := &in.NumInstances, &out.NumInstances
		*out = new(float64)
		**out = **in
	}
	if in.Preemptibility != nil {
		in, out := &in.Preemptibility, &out.Preemptibility
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigWorkerConfigInitParameters.
func (in *ConfigWorkerConfigInitParameters) DeepCopy() *ConfigWorkerConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(ConfigWorkerConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigWorkerConfigObservation) DeepCopyInto(out *ConfigWorkerConfigObservation) {
	*out = *in
	if in.Accelerators != nil {
		in, out := &in.Accelerators, &out.Accelerators
		*out = make([]ConfigWorkerConfigAcceleratorsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DiskConfig != nil {
		in, out := &in.DiskConfig, &out.DiskConfig
		*out = make([]ConfigWorkerConfigDiskConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Image != nil {
		in, out := &in.Image, &out.Image
		*out = new(string)
		**out = **in
	}
	if in.InstanceNames != nil {
		in, out := &in.InstanceNames, &out.InstanceNames
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.IsPreemptible != nil {
		in, out := &in.IsPreemptible, &out.IsPreemptible
		*out = new(bool)
		**out = **in
	}
	if in.MachineType != nil {
		in, out := &in.MachineType, &out.MachineType
		*out = new(string)
		**out = **in
	}
	if in.ManagedGroupConfig != nil {
		in, out := &in.ManagedGroupConfig, &out.ManagedGroupConfig
		*out = make([]WorkerConfigManagedGroupConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MinCPUPlatform != nil {
		in, out := &in.MinCPUPlatform, &out.MinCPUPlatform
		*out = new(string)
		**out = **in
	}
	if in.NumInstances != nil {
		in, out := &in.NumInstances, &out.NumInstances
		*out = new(float64)
		**out = **in
	}
	if in.Preemptibility != nil {
		in, out := &in.Preemptibility, &out.Preemptibility
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigWorkerConfigObservation.
func (in *ConfigWorkerConfigObservation) DeepCopy() *ConfigWorkerConfigObservation {
	if in == nil {
		return nil
	}
	out := new(ConfigWorkerConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigWorkerConfigParameters) DeepCopyInto(out *ConfigWorkerConfigParameters) {
	*out = *in
	if in.Accelerators != nil {
		in, out := &in.Accelerators, &out.Accelerators
		*out = make([]ConfigWorkerConfigAcceleratorsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DiskConfig != nil {
		in, out := &in.DiskConfig, &out.DiskConfig
		*out = make([]ConfigWorkerConfigDiskConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Image != nil {
		in, out := &in.Image, &out.Image
		*out = new(string)
		**out = **in
	}
	if in.MachineType != nil {
		in, out := &in.MachineType, &out.MachineType
		*out = new(string)
		**out = **in
	}
	if in.MinCPUPlatform != nil {
		in, out := &in.MinCPUPlatform, &out.MinCPUPlatform
		*out = new(string)
		**out = **in
	}
	if in.NumInstances != nil {
		in, out := &in.NumInstances, &out.NumInstances
		*out = new(float64)
		**out = **in
	}
	if in.Preemptibility != nil {
		in, out := &in.Preemptibility, &out.Preemptibility
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigWorkerConfigParameters.
func (in *ConfigWorkerConfigParameters) DeepCopy() *ConfigWorkerConfigParameters {
	if in == nil {
		return nil
	}
	out := new(ConfigWorkerConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConsumersInitParameters) DeepCopyInto(out *ConsumersInitParameters) {
	*out = *in
	if in.Subnetwork != nil {
		in, out := &in.Subnetwork, &out.Subnetwork
		*out = new(string)
		**out = **in
	}
	if in.SubnetworkRef != nil {
		in, out := &in.SubnetworkRef, &out.SubnetworkRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SubnetworkSelector != nil {
		in, out := &in.SubnetworkSelector, &out.SubnetworkSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConsumersInitParameters.
func (in *ConsumersInitParameters) DeepCopy() *ConsumersInitParameters {
	if in == nil {
		return nil
	}
	out := new(ConsumersInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConsumersObservation) DeepCopyInto(out *ConsumersObservation) {
	*out = *in
	if in.EndpointURI != nil {
		in, out := &in.EndpointURI, &out.EndpointURI
		*out = new(string)
		**out = **in
	}
	if in.Subnetwork != nil {
		in, out := &in.Subnetwork, &out.Subnetwork
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConsumersObservation.
func (in *ConsumersObservation) DeepCopy() *ConsumersObservation {
	if in == nil {
		return nil
	}
	out := new(ConsumersObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConsumersParameters) DeepCopyInto(out *ConsumersParameters) {
	*out = *in
	if in.Subnetwork != nil {
		in, out := &in.Subnetwork, &out.Subnetwork
		*out = new(string)
		**out = **in
	}
	if in.SubnetworkRef != nil {
		in, out := &in.SubnetworkRef, &out.SubnetworkRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SubnetworkSelector != nil {
		in, out := &in.SubnetworkSelector, &out.SubnetworkSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConsumersParameters.
func (in *ConsumersParameters) DeepCopy() *ConsumersParameters {
	if in == nil {
		return nil
	}
	out := new(ConsumersParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataCatalogConfigInitParameters) DeepCopyInto(out *DataCatalogConfigInitParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataCatalogConfigInitParameters.
func (in *DataCatalogConfigInitParameters) DeepCopy() *DataCatalogConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(DataCatalogConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataCatalogConfigObservation) DeepCopyInto(out *DataCatalogConfigObservation) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataCatalogConfigObservation.
func (in *DataCatalogConfigObservation) DeepCopy() *DataCatalogConfigObservation {
	if in == nil {
		return nil
	}
	out := new(DataCatalogConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataCatalogConfigParameters) DeepCopyInto(out *DataCatalogConfigParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataCatalogConfigParameters.
func (in *DataCatalogConfigParameters) DeepCopy() *DataCatalogConfigParameters {
	if in == nil {
		return nil
	}
	out := new(DataCatalogConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataprocMetricConfigInitParameters) DeepCopyInto(out *DataprocMetricConfigInitParameters) {
	*out = *in
	if in.Metrics != nil {
		in, out := &in.Metrics, &out.Metrics
		*out = make([]MetricsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataprocMetricConfigInitParameters.
func (in *DataprocMetricConfigInitParameters) DeepCopy() *DataprocMetricConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(DataprocMetricConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataprocMetricConfigObservation) DeepCopyInto(out *DataprocMetricConfigObservation) {
	*out = *in
	if in.Metrics != nil {
		in, out := &in.Metrics, &out.Metrics
		*out = make([]MetricsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataprocMetricConfigObservation.
func (in *DataprocMetricConfigObservation) DeepCopy() *DataprocMetricConfigObservation {
	if in == nil {
		return nil
	}
	out := new(DataprocMetricConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataprocMetricConfigParameters) DeepCopyInto(out *DataprocMetricConfigParameters) {
	*out = *in
	if in.Metrics != nil {
		in, out := &in.Metrics, &out.Metrics
		*out = make([]MetricsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataprocMetricConfigParameters.
func (in *DataprocMetricConfigParameters) DeepCopy() *DataprocMetricConfigParameters {
	if in == nil {
		return nil
	}
	out := new(DataprocMetricConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DiskConfigInitParameters) DeepCopyInto(out *DiskConfigInitParameters) {
	*out = *in
	if in.BootDiskSizeGb != nil {
		in, out := &in.BootDiskSizeGb, &out.BootDiskSizeGb
		*out = new(float64)
		**out = **in
	}
	if in.BootDiskType != nil {
		in, out := &in.BootDiskType, &out.BootDiskType
		*out = new(string)
		**out = **in
	}
	if in.NumLocalSsds != nil {
		in, out := &in.NumLocalSsds, &out.NumLocalSsds
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DiskConfigInitParameters.
func (in *DiskConfigInitParameters) DeepCopy() *DiskConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(DiskConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DiskConfigObservation) DeepCopyInto(out *DiskConfigObservation) {
	*out = *in
	if in.BootDiskSizeGb != nil {
		in, out := &in.BootDiskSizeGb, &out.BootDiskSizeGb
		*out = new(float64)
		**out = **in
	}
	if in.BootDiskType != nil {
		in, out := &in.BootDiskType, &out.BootDiskType
		*out = new(string)
		**out = **in
	}
	if in.NumLocalSsds != nil {
		in, out := &in.NumLocalSsds, &out.NumLocalSsds
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DiskConfigObservation.
func (in *DiskConfigObservation) DeepCopy() *DiskConfigObservation {
	if in == nil {
		return nil
	}
	out := new(DiskConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DiskConfigParameters) DeepCopyInto(out *DiskConfigParameters) {
	*out = *in
	if in.BootDiskSizeGb != nil {
		in, out := &in.BootDiskSizeGb, &out.BootDiskSizeGb
		*out = new(float64)
		**out = **in
	}
	if in.BootDiskType != nil {
		in, out := &in.BootDiskType, &out.BootDiskType
		*out = new(string)
		**out = **in
	}
	if in.NumLocalSsds != nil {
		in, out := &in.NumLocalSsds, &out.NumLocalSsds
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DiskConfigParameters.
func (in *DiskConfigParameters) DeepCopy() *DiskConfigParameters {
	if in == nil {
		return nil
	}
	out := new(DiskConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EncryptionConfigInitParameters) DeepCopyInto(out *EncryptionConfigInitParameters) {
	*out = *in
	if in.KMSKeyName != nil {
		in, out := &in.KMSKeyName, &out.KMSKeyName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EncryptionConfigInitParameters.
func (in *EncryptionConfigInitParameters) DeepCopy() *EncryptionConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(EncryptionConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EncryptionConfigObservation) DeepCopyInto(out *EncryptionConfigObservation) {
	*out = *in
	if in.KMSKeyName != nil {
		in, out := &in.KMSKeyName, &out.KMSKeyName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EncryptionConfigObservation.
func (in *EncryptionConfigObservation) DeepCopy() *EncryptionConfigObservation {
	if in == nil {
		return nil
	}
	out := new(EncryptionConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EncryptionConfigParameters) DeepCopyInto(out *EncryptionConfigParameters) {
	*out = *in
	if in.KMSKeyName != nil {
		in, out := &in.KMSKeyName, &out.KMSKeyName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EncryptionConfigParameters.
func (in *EncryptionConfigParameters) DeepCopy() *EncryptionConfigParameters {
	if in == nil {
		return nil
	}
	out := new(EncryptionConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EndpointConfigInitParameters) DeepCopyInto(out *EndpointConfigInitParameters) {
	*out = *in
	if in.EnableHTTPPortAccess != nil {
		in, out := &in.EnableHTTPPortAccess, &out.EnableHTTPPortAccess
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EndpointConfigInitParameters.
func (in *EndpointConfigInitParameters) DeepCopy() *EndpointConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(EndpointConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EndpointConfigObservation) DeepCopyInto(out *EndpointConfigObservation) {
	*out = *in
	if in.EnableHTTPPortAccess != nil {
		in, out := &in.EnableHTTPPortAccess, &out.EnableHTTPPortAccess
		*out = new(bool)
		**out = **in
	}
	if in.HTTPPorts != nil {
		in, out := &in.HTTPPorts, &out.HTTPPorts
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EndpointConfigObservation.
func (in *EndpointConfigObservation) DeepCopy() *EndpointConfigObservation {
	if in == nil {
		return nil
	}
	out := new(EndpointConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EndpointConfigParameters) DeepCopyInto(out *EndpointConfigParameters) {
	*out = *in
	if in.EnableHTTPPortAccess != nil {
		in, out := &in.EnableHTTPPortAccess, &out.EnableHTTPPortAccess
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EndpointConfigParameters.
func (in *EndpointConfigParameters) DeepCopy() *EndpointConfigParameters {
	if in == nil {
		return nil
	}
	out := new(EndpointConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GceClusterConfigInitParameters) DeepCopyInto(out *GceClusterConfigInitParameters) {
	*out = *in
	if in.InternalIPOnly != nil {
		in, out := &in.InternalIPOnly, &out.InternalIPOnly
		*out = new(bool)
		**out = **in
	}
	if in.Metadata != nil {
		in, out := &in.Metadata, &out.Metadata
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Network != nil {
		in, out := &in.Network, &out.Network
		*out = new(string)
		**out = **in
	}
	if in.NodeGroupAffinity != nil {
		in, out := &in.NodeGroupAffinity, &out.NodeGroupAffinity
		*out = make([]NodeGroupAffinityInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ReservationAffinity != nil {
		in, out := &in.ReservationAffinity, &out.ReservationAffinity
		*out = make([]ReservationAffinityInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ServiceAccount != nil {
		in, out := &in.ServiceAccount, &out.ServiceAccount
		*out = new(string)
		**out = **in
	}
	if in.ServiceAccountRef != nil {
		in, out := &in.ServiceAccountRef, &out.ServiceAccountRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ServiceAccountScopes != nil {
		in, out := &in.ServiceAccountScopes, &out.ServiceAccountScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ServiceAccountSelector != nil {
		in, out := &in.ServiceAccountSelector, &out.ServiceAccountSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.ShieldedInstanceConfig != nil {
		in, out := &in.ShieldedInstanceConfig, &out.ShieldedInstanceConfig
		*out = make([]ShieldedInstanceConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Subnetwork != nil {
		in, out := &in.Subnetwork, &out.Subnetwork
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Zone != nil {
		in, out := &in.Zone, &out.Zone
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GceClusterConfigInitParameters.
func (in *GceClusterConfigInitParameters) DeepCopy() *GceClusterConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(GceClusterConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GceClusterConfigNodeGroupAffinityInitParameters) DeepCopyInto(out *GceClusterConfigNodeGroupAffinityInitParameters) {
	*out = *in
	if in.NodeGroup != nil {
		in, out := &in.NodeGroup, &out.NodeGroup
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GceClusterConfigNodeGroupAffinityInitParameters.
func (in *GceClusterConfigNodeGroupAffinityInitParameters) DeepCopy() *GceClusterConfigNodeGroupAffinityInitParameters {
	if in == nil {
		return nil
	}
	out := new(GceClusterConfigNodeGroupAffinityInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GceClusterConfigNodeGroupAffinityObservation) DeepCopyInto(out *GceClusterConfigNodeGroupAffinityObservation) {
	*out = *in
	if in.NodeGroup != nil {
		in, out := &in.NodeGroup, &out.NodeGroup
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GceClusterConfigNodeGroupAffinityObservation.
func (in *GceClusterConfigNodeGroupAffinityObservation) DeepCopy() *GceClusterConfigNodeGroupAffinityObservation {
	if in == nil {
		return nil
	}
	out := new(GceClusterConfigNodeGroupAffinityObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GceClusterConfigNodeGroupAffinityParameters) DeepCopyInto(out *GceClusterConfigNodeGroupAffinityParameters) {
	*out = *in
	if in.NodeGroup != nil {
		in, out := &in.NodeGroup, &out.NodeGroup
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GceClusterConfigNodeGroupAffinityParameters.
func (in *GceClusterConfigNodeGroupAffinityParameters) DeepCopy() *GceClusterConfigNodeGroupAffinityParameters {
	if in == nil {
		return nil
	}
	out := new(GceClusterConfigNodeGroupAffinityParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GceClusterConfigObservation) DeepCopyInto(out *GceClusterConfigObservation) {
	*out = *in
	if in.InternalIPOnly != nil {
		in, out := &in.InternalIPOnly, &out.InternalIPOnly
		*out = new(bool)
		**out = **in
	}
	if in.Metadata != nil {
		in, out := &in.Metadata, &out.Metadata
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Network != nil {
		in, out := &in.Network, &out.Network
		*out = new(string)
		**out = **in
	}
	if in.NodeGroupAffinity != nil {
		in, out := &in.NodeGroupAffinity, &out.NodeGroupAffinity
		*out = make([]NodeGroupAffinityObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ReservationAffinity != nil {
		in, out := &in.ReservationAffinity, &out.ReservationAffinity
		*out = make([]ReservationAffinityObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ServiceAccount != nil {
		in, out := &in.ServiceAccount, &out.ServiceAccount
		*out = new(string)
		**out = **in
	}
	if in.ServiceAccountScopes != nil {
		in, out := &in.ServiceAccountScopes, &out.ServiceAccountScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ShieldedInstanceConfig != nil {
		in, out := &in.ShieldedInstanceConfig, &out.ShieldedInstanceConfig
		*out = make([]ShieldedInstanceConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Subnetwork != nil {
		in, out := &in.Subnetwork, &out.Subnetwork
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Zone != nil {
		in, out := &in.Zone, &out.Zone
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GceClusterConfigObservation.
func (in *GceClusterConfigObservation) DeepCopy() *GceClusterConfigObservation {
	if in == nil {
		return nil
	}
	out := new(GceClusterConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GceClusterConfigParameters) DeepCopyInto(out *GceClusterConfigParameters) {
	*out = *in
	if in.InternalIPOnly != nil {
		in, out := &in.InternalIPOnly, &out.InternalIPOnly
		*out = new(bool)
		**out = **in
	}
	if in.Metadata != nil {
		in, out := &in.Metadata, &out.Metadata
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Network != nil {
		in, out := &in.Network, &out.Network
		*out = new(string)
		**out = **in
	}
	if in.NodeGroupAffinity != nil {
		in, out := &in.NodeGroupAffinity, &out.NodeGroupAffinity
		*out = make([]NodeGroupAffinityParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ReservationAffinity != nil {
		in, out := &in.ReservationAffinity, &out.ReservationAffinity
		*out = make([]ReservationAffinityParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ServiceAccount != nil {
		in, out := &in.ServiceAccount, &out.ServiceAccount
		*out = new(string)
		**out = **in
	}
	if in.ServiceAccountRef != nil {
		in, out := &in.ServiceAccountRef, &out.ServiceAccountRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ServiceAccountScopes != nil {
		in, out := &in.ServiceAccountScopes, &out.ServiceAccountScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ServiceAccountSelector != nil {
		in, out := &in.ServiceAccountSelector, &out.ServiceAccountSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.ShieldedInstanceConfig != nil {
		in, out := &in.ShieldedInstanceConfig, &out.ShieldedInstanceConfig
		*out = make([]ShieldedInstanceConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Subnetwork != nil {
		in, out := &in.Subnetwork, &out.Subnetwork
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Zone != nil {
		in, out := &in.Zone, &out.Zone
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GceClusterConfigParameters.
func (in *GceClusterConfigParameters) DeepCopy() *GceClusterConfigParameters {
	if in == nil {
		return nil
	}
	out := new(GceClusterConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GceClusterConfigReservationAffinityInitParameters) DeepCopyInto(out *GceClusterConfigReservationAffinityInitParameters) {
	*out = *in
	if in.ConsumeReservationType != nil {
		in, out := &in.ConsumeReservationType, &out.ConsumeReservationType
		*out = new(string)
		**out = **in
	}
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GceClusterConfigReservationAffinityInitParameters.
func (in *GceClusterConfigReservationAffinityInitParameters) DeepCopy() *GceClusterConfigReservationAffinityInitParameters {
	if in == nil {
		return nil
	}
	out := new(GceClusterConfigReservationAffinityInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GceClusterConfigReservationAffinityObservation) DeepCopyInto(out *GceClusterConfigReservationAffinityObservation) {
	*out = *in
	if in.ConsumeReservationType != nil {
		in, out := &in.ConsumeReservationType, &out.ConsumeReservationType
		*out = new(string)
		**out = **in
	}
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GceClusterConfigReservationAffinityObservation.
func (in *GceClusterConfigReservationAffinityObservation) DeepCopy() *GceClusterConfigReservationAffinityObservation {
	if in == nil {
		return nil
	}
	out := new(GceClusterConfigReservationAffinityObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GceClusterConfigReservationAffinityParameters) DeepCopyInto(out *GceClusterConfigReservationAffinityParameters) {
	*out = *in
	if in.ConsumeReservationType != nil {
		in, out := &in.ConsumeReservationType, &out.ConsumeReservationType
		*out = new(string)
		**out = **in
	}
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GceClusterConfigReservationAffinityParameters.
func (in *GceClusterConfigReservationAffinityParameters) DeepCopy() *GceClusterConfigReservationAffinityParameters {
	if in == nil {
		return nil
	}
	out := new(GceClusterConfigReservationAffinityParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GceClusterConfigShieldedInstanceConfigInitParameters) DeepCopyInto(out *GceClusterConfigShieldedInstanceConfigInitParameters) {
	*out = *in
	if in.EnableIntegrityMonitoring != nil {
		in, out := &in.EnableIntegrityMonitoring, &out.EnableIntegrityMonitoring
		*out = new(bool)
		**out = **in
	}
	if in.EnableSecureBoot != nil {
		in, out := &in.EnableSecureBoot, &out.EnableSecureBoot
		*out = new(bool)
		**out = **in
	}
	if in.EnableVtpm != nil {
		in, out := &in.EnableVtpm, &out.EnableVtpm
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GceClusterConfigShieldedInstanceConfigInitParameters.
func (in *GceClusterConfigShieldedInstanceConfigInitParameters) DeepCopy() *GceClusterConfigShieldedInstanceConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(GceClusterConfigShieldedInstanceConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GceClusterConfigShieldedInstanceConfigObservation) DeepCopyInto(out *GceClusterConfigShieldedInstanceConfigObservation) {
	*out = *in
	if in.EnableIntegrityMonitoring != nil {
		in, out := &in.EnableIntegrityMonitoring, &out.EnableIntegrityMonitoring
		*out = new(bool)
		**out = **in
	}
	if in.EnableSecureBoot != nil {
		in, out := &in.EnableSecureBoot, &out.EnableSecureBoot
		*out = new(bool)
		**out = **in
	}
	if in.EnableVtpm != nil {
		in, out := &in.EnableVtpm, &out.EnableVtpm
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GceClusterConfigShieldedInstanceConfigObservation.
func (in *GceClusterConfigShieldedInstanceConfigObservation) DeepCopy() *GceClusterConfigShieldedInstanceConfigObservation {
	if in == nil {
		return nil
	}
	out := new(GceClusterConfigShieldedInstanceConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GceClusterConfigShieldedInstanceConfigParameters) DeepCopyInto(out *GceClusterConfigShieldedInstanceConfigParameters) {
	*out = *in
	if in.EnableIntegrityMonitoring != nil {
		in, out := &in.EnableIntegrityMonitoring, &out.EnableIntegrityMonitoring
		*out = new(bool)
		**out = **in
	}
	if in.EnableSecureBoot != nil {
		in, out := &in.EnableSecureBoot, &out.EnableSecureBoot
		*out = new(bool)
		**out = **in
	}
	if in.EnableVtpm != nil {
		in, out := &in.EnableVtpm, &out.EnableVtpm
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GceClusterConfigShieldedInstanceConfigParameters.
func (in *GceClusterConfigShieldedInstanceConfigParameters) DeepCopy() *GceClusterConfigShieldedInstanceConfigParameters {
	if in == nil {
		return nil
	}
	out := new(GceClusterConfigShieldedInstanceConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GkeClusterConfigInitParameters) DeepCopyInto(out *GkeClusterConfigInitParameters) {
	*out = *in
	if in.GkeClusterTarget != nil {
		in, out := &in.GkeClusterTarget, &out.GkeClusterTarget
		*out = new(string)
		**out = **in
	}
	if in.NodePoolTarget != nil {
		in, out := &in.NodePoolTarget, &out.NodePoolTarget
		*out = make([]NodePoolTargetInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GkeClusterConfigInitParameters.
func (in *GkeClusterConfigInitParameters) DeepCopy() *GkeClusterConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(GkeClusterConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GkeClusterConfigObservation) DeepCopyInto(out *GkeClusterConfigObservation) {
	*out = *in
	if in.GkeClusterTarget != nil {
		in, out := &in.GkeClusterTarget, &out.GkeClusterTarget
		*out = new(string)
		**out = **in
	}
	if in.NodePoolTarget != nil {
		in, out := &in.NodePoolTarget, &out.NodePoolTarget
		*out = make([]NodePoolTargetObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GkeClusterConfigObservation.
func (in *GkeClusterConfigObservation) DeepCopy() *GkeClusterConfigObservation {
	if in == nil {
		return nil
	}
	out := new(GkeClusterConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GkeClusterConfigParameters) DeepCopyInto(out *GkeClusterConfigParameters) {
	*out = *in
	if in.GkeClusterTarget != nil {
		in, out := &in.GkeClusterTarget, &out.GkeClusterTarget
		*out = new(string)
		**out = **in
	}
	if in.NodePoolTarget != nil {
		in, out := &in.NodePoolTarget, &out.NodePoolTarget
		*out = make([]NodePoolTargetParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GkeClusterConfigParameters.
func (in *GkeClusterConfigParameters) DeepCopy() *GkeClusterConfigParameters {
	if in == nil {
		return nil
	}
	out := new(GkeClusterConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HadoopConfigInitParameters) DeepCopyInto(out *HadoopConfigInitParameters) {
	*out = *in
	if in.ArchiveUris != nil {
		in, out := &in.ArchiveUris, &out.ArchiveUris
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Args != nil {
		in, out := &in.Args, &out.Args
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.FileUris != nil {
		in, out := &in.FileUris, &out.FileUris
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.JarFileUris != nil {
		in, out := &in.JarFileUris, &out.JarFileUris
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.LoggingConfig != nil {
		in, out := &in.LoggingConfig, &out.LoggingConfig
		*out = make([]LoggingConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MainClass != nil {
		in, out := &in.MainClass, &out.MainClass
		*out = new(string)
		**out = **in
	}
	if in.MainJarFileURI != nil {
		in, out := &in.MainJarFileURI, &out.MainJarFileURI
		*out = new(string)
		**out = **in
	}
	if in.Properties != nil {
		in, out := &in.Properties, &out.Properties
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HadoopConfigInitParameters.
func (in *HadoopConfigInitParameters) DeepCopy() *HadoopConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(HadoopConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HadoopConfigObservation) DeepCopyInto(out *HadoopConfigObservation) {
	*out = *in
	if in.ArchiveUris != nil {
		in, out := &in.ArchiveUris, &out.ArchiveUris
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Args != nil {
		in, out := &in.Args, &out.Args
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.FileUris != nil {
		in, out := &in.FileUris, &out.FileUris
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.JarFileUris != nil {
		in, out := &in.JarFileUris, &out.JarFileUris
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.LoggingConfig != nil {
		in, out := &in.LoggingConfig, &out.LoggingConfig
		*out = make([]LoggingConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MainClass != nil {
		in, out := &in.MainClass, &out.MainClass
		*out = new(string)
		**out = **in
	}
	if in.MainJarFileURI != nil {
		in, out := &in.MainJarFileURI, &out.MainJarFileURI
		*out = new(string)
		**out = **in
	}
	if in.Properties != nil {
		in, out := &in.Properties, &out.Properties
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HadoopConfigObservation.
func (in *HadoopConfigObservation) DeepCopy() *HadoopConfigObservation {
	if in == nil {
		return nil
	}
	out := new(HadoopConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HadoopConfigParameters) DeepCopyInto(out *HadoopConfigParameters) {
	*out = *in
	if in.ArchiveUris != nil {
		in, out := &in.ArchiveUris, &out.ArchiveUris
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Args != nil {
		in, out := &in.Args, &out.Args
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.FileUris != nil {
		in, out := &in.FileUris, &out.FileUris
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.JarFileUris != nil {
		in, out := &in.JarFileUris, &out.JarFileUris
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.LoggingConfig != nil {
		in, out := &in.LoggingConfig, &out.LoggingConfig
		*out = make([]LoggingConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MainClass != nil {
		in, out := &in.MainClass, &out.MainClass
		*out = new(string)
		**out = **in
	}
	if in.MainJarFileURI != nil {
		in, out := &in.MainJarFileURI, &out.MainJarFileURI
		*out = new(string)
		**out = **in
	}
	if in.Properties != nil {
		in, out := &in.Properties, &out.Properties
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HadoopConfigParameters.
func (in *HadoopConfigParameters) DeepCopy() *HadoopConfigParameters {
	if in == nil {
		return nil
	}
	out := new(HadoopConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HadoopJobInitParameters) DeepCopyInto(out *HadoopJobInitParameters) {
	*out = *in
	if in.ArchiveUris != nil {
		in, out := &in.ArchiveUris, &out.ArchiveUris
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Args != nil {
		in, out := &in.Args, &out.Args
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.FileUris != nil {
		in, out := &in.FileUris, &out.FileUris
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.JarFileUris != nil {
		in, out := &in.JarFileUris, &out.JarFileUris
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.LoggingConfig != nil {
		in, out := &in.LoggingConfig, &out.LoggingConfig
		*out = make([]HadoopJobLoggingConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MainClass != nil {
		in, out := &in.MainClass, &out.MainClass
		*out = new(string)
		**out = **in
	}
	if in.MainJarFileURI != nil {
		in, out := &in.MainJarFileURI, &out.MainJarFileURI
		*out = new(string)
		**out = **in
	}
	if in.Properties != nil {
		in, out := &in.Properties, &out.Properties
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HadoopJobInitParameters.
func (in *HadoopJobInitParameters) DeepCopy() *HadoopJobInitParameters {
	if in == nil {
		return nil
	}
	out := new(HadoopJobInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HadoopJobLoggingConfigInitParameters) DeepCopyInto(out *HadoopJobLoggingConfigInitParameters) {
	*out = *in
	if in.DriverLogLevels != nil {
		in, out := &in.DriverLogLevels, &out.DriverLogLevels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HadoopJobLoggingConfigInitParameters.
func (in *HadoopJobLoggingConfigInitParameters) DeepCopy() *HadoopJobLoggingConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(HadoopJobLoggingConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HadoopJobLoggingConfigObservation) DeepCopyInto(out *HadoopJobLoggingConfigObservation) {
	*out = *in
	if in.DriverLogLevels != nil {
		in, out := &in.DriverLogLevels, &out.DriverLogLevels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HadoopJobLoggingConfigObservation.
func (in *HadoopJobLoggingConfigObservation) DeepCopy() *HadoopJobLoggingConfigObservation {
	if in == nil {
		return nil
	}
	out := new(HadoopJobLoggingConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HadoopJobLoggingConfigParameters) DeepCopyInto(out *HadoopJobLoggingConfigParameters) {
	*out = *in
	if in.DriverLogLevels != nil {
		in, out := &in.DriverLogLevels, &out.DriverLogLevels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HadoopJobLoggingConfigParameters.
func (in *HadoopJobLoggingConfigParameters) DeepCopy() *HadoopJobLoggingConfigParameters {
	if in == nil {
		return nil
	}
	out := new(HadoopJobLoggingConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HadoopJobObservation) DeepCopyInto(out *HadoopJobObservation) {
	*out = *in
	if in.ArchiveUris != nil {
		in, out := &in.ArchiveUris, &out.ArchiveUris
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Args != nil {
		in, out := &in.Args, &out.Args
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.FileUris != nil {
		in, out := &in.FileUris, &out.FileUris
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.JarFileUris != nil {
		in, out := &in.JarFileUris, &out.JarFileUris
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.LoggingConfig != nil {
		in, out := &in.LoggingConfig, &out.LoggingConfig
		*out = make([]HadoopJobLoggingConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MainClass != nil {
		in, out := &in.MainClass, &out.MainClass
		*out = new(string)
		**out = **in
	}
	if in.MainJarFileURI != nil {
		in, out := &in.MainJarFileURI, &out.MainJarFileURI
		*out = new(string)
		**out = **in
	}
	if in.Properties != nil {
		in, out := &in.Properties, &out.Properties
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HadoopJobObservation.
func (in *HadoopJobObservation) DeepCopy() *HadoopJobObservation {
	if in == nil {
		return nil
	}
	out := new(HadoopJobObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HadoopJobParameters) DeepCopyInto(out *HadoopJobParameters) {
	*out = *in
	if in.ArchiveUris != nil {
		in, out := &in.ArchiveUris, &out.ArchiveUris
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Args != nil {
		in, out := &in.Args, &out.Args
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.FileUris != nil {
		in, out := &in.FileUris, &out.FileUris
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.JarFileUris != nil {
		in, out := &in.JarFileUris, &out.JarFileUris
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.LoggingConfig != nil {
		in, out := &in.LoggingConfig, &out.LoggingConfig
		*out = make([]HadoopJobLoggingConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MainClass != nil {
		in, out := &in.MainClass, &out.MainClass
		*out = new(string)
		**out = **in
	}
	if in.MainJarFileURI != nil {
		in, out := &in.MainJarFileURI, &out.MainJarFileURI
		*out = new(string)
		**out = **in
	}
	if in.Properties != nil {
		in, out := &in.Properties, &out.Properties
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HadoopJobParameters.
func (in *HadoopJobParameters) DeepCopy() *HadoopJobParameters {
	if in == nil {
		return nil
	}
	out := new(HadoopJobParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HiveConfigInitParameters) DeepCopyInto(out *HiveConfigInitParameters) {
	*out = *in
	if in.ContinueOnFailure != nil {
		in, out := &in.ContinueOnFailure, &out.ContinueOnFailure
		*out = new(bool)
		**out = **in
	}
	if in.JarFileUris != nil {
		in, out := &in.JarFileUris, &out.JarFileUris
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Properties != nil {
		in, out := &in.Properties, &out.Properties
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.QueryFileURI != nil {
		in, out := &in.QueryFileURI, &out.QueryFileURI
		*out = new(string)
		**out = **in
	}
	if in.QueryList != nil {
		in, out := &in.QueryList, &out.QueryList
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ScriptVariables != nil {
		in, out := &in.ScriptVariables, &out.ScriptVariables
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HiveConfigInitParameters.
func (in *HiveConfigInitParameters) DeepCopy() *HiveConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(HiveConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HiveConfigObservation) DeepCopyInto(out *HiveConfigObservation) {
	*out = *in
	if in.ContinueOnFailure != nil {
		in, out := &in.ContinueOnFailure, &out.ContinueOnFailure
		*out = new(bool)
		**out = **in
	}
	if in.JarFileUris != nil {
		in, out := &in.JarFileUris, &out.JarFileUris
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Properties != nil {
		in, out := &in.Properties, &out.Properties
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.QueryFileURI != nil {
		in, out := &in.QueryFileURI, &out.QueryFileURI
		*out = new(string)
		**out = **in
	}
	if in.QueryList != nil {
		in, out := &in.QueryList, &out.QueryList
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ScriptVariables != nil {
		in, out := &in.ScriptVariables, &out.ScriptVariables
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HiveConfigObservation.
func (in *HiveConfigObservation) DeepCopy() *HiveConfigObservation {
	if in == nil {
		return nil
	}
	out := new(HiveConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HiveConfigParameters) DeepCopyInto(out *HiveConfigParameters) {
	*out = *in
	if in.ContinueOnFailure != nil {
		in, out := &in.ContinueOnFailure, &out.ContinueOnFailure
		*out = new(bool)
		**out = **in
	}
	if in.JarFileUris != nil {
		in, out := &in.JarFileUris, &out.JarFileUris
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Properties != nil {
		in, out := &in.Properties, &out.Properties
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.QueryFileURI != nil {
		in, out := &in.QueryFileURI, &out.QueryFileURI
		*out = new(string)
		**out = **in
	}
	if in.QueryList != nil {
		in, out := &in.QueryList, &out.QueryList
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ScriptVariables != nil {
		in, out := &in.ScriptVariables, &out.ScriptVariables
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HiveConfigParameters.
func (in *HiveConfigParameters) DeepCopy() *HiveConfigParameters {
	if in == nil {
		return nil
	}
	out := new(HiveConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HiveJobInitParameters) DeepCopyInto(out *HiveJobInitParameters) {
	*out = *in
	if in.ContinueOnFailure != nil {
		in, out := &in.ContinueOnFailure, &out.ContinueOnFailure
		*out = new(bool)
		**out = **in
	}
	if in.JarFileUris != nil {
		in, out := &in.JarFileUris, &out.JarFileUris
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Properties != nil {
		in, out := &in.Properties, &out.Properties
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.QueryFileURI != nil {
		in, out := &in.QueryFileURI, &out.QueryFileURI
		*out = new(string)
		**out = **in
	}
	if in.QueryList != nil {
		in, out := &in.QueryList, &out.QueryList
		*out = make([]QueryListInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ScriptVariables != nil {
		in, out := &in.ScriptVariables, &out.ScriptVariables
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HiveJobInitParameters.
func (in *HiveJobInitParameters) DeepCopy() *HiveJobInitParameters {
	if in == nil {
		return nil
	}
	out := new(HiveJobInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HiveJobObservation) DeepCopyInto(out *HiveJobObservation) {
	*out = *in
	if in.ContinueOnFailure != nil {
		in, out := &in.ContinueOnFailure, &out.ContinueOnFailure
		*out = new(bool)
		**out = **in
	}
	if in.JarFileUris != nil {
		in, out := &in.JarFileUris, &out.JarFileUris
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Properties != nil {
		in, out := &in.Properties, &out.Properties
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.QueryFileURI != nil {
		in, out := &in.QueryFileURI, &out.QueryFileURI
		*out = new(string)
		**out = **in
	}
	if in.QueryList != nil {
		in, out := &in.QueryList, &out.QueryList
		*out = make([]QueryListObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ScriptVariables != nil {
		in, out := &in.ScriptVariables, &out.ScriptVariables
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HiveJobObservation.
func (in *HiveJobObservation) DeepCopy() *HiveJobObservation {
	if in == nil {
		return nil
	}
	out := new(HiveJobObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HiveJobParameters) DeepCopyInto(out *HiveJobParameters) {
	*out = *in
	if in.ContinueOnFailure != nil {
		in, out := &in.ContinueOnFailure, &out.ContinueOnFailure
		*out = new(bool)
		**out = **in
	}
	if in.JarFileUris != nil {
		in, out := &in.JarFileUris, &out.JarFileUris
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Properties != nil {
		in, out := &in.Properties, &out.Properties
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.QueryFileURI != nil {
		in, out := &in.QueryFileURI, &out.QueryFileURI
		*out = new(string)
		**out = **in
	}
	if in.QueryList != nil {
		in, out := &in.QueryList, &out.QueryList
		*out = make([]QueryListParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ScriptVariables != nil {
		in, out := &in.ScriptVariables, &out.ScriptVariables
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HiveJobParameters.
func (in *HiveJobParameters) DeepCopy() *HiveJobParameters {
	if in == nil {
		return nil
	}
	out := new(HiveJobParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HiveMetastoreConfigInitParameters) DeepCopyInto(out *HiveMetastoreConfigInitParameters) {
	*out = *in
	if in.AuxiliaryVersions != nil {
		in, out := &in.AuxiliaryVersions, &out.AuxiliaryVersions
		*out = make([]AuxiliaryVersionsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ConfigOverrides != nil {
		in, out := &in.ConfigOverrides, &out.ConfigOverrides
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.EndpointProtocol != nil {
		in, out := &in.EndpointProtocol, &out.EndpointProtocol
		*out = new(string)
		**out = **in
	}
	if in.KerberosConfig != nil {
		in, out := &in.KerberosConfig, &out.KerberosConfig
		*out = make([]HiveMetastoreConfigKerberosConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HiveMetastoreConfigInitParameters.
func (in *HiveMetastoreConfigInitParameters) DeepCopy() *HiveMetastoreConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(HiveMetastoreConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HiveMetastoreConfigKerberosConfigInitParameters) DeepCopyInto(out *HiveMetastoreConfigKerberosConfigInitParameters) {
	*out = *in
	if in.Keytab != nil {
		in, out := &in.Keytab, &out.Keytab
		*out = make([]KeytabInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Krb5ConfigGcsURI != nil {
		in, out := &in.Krb5ConfigGcsURI, &out.Krb5ConfigGcsURI
		*out = new(string)
		**out = **in
	}
	if in.Principal != nil {
		in, out := &in.Principal, &out.Principal
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HiveMetastoreConfigKerberosConfigInitParameters.
func (in *HiveMetastoreConfigKerberosConfigInitParameters) DeepCopy() *HiveMetastoreConfigKerberosConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(HiveMetastoreConfigKerberosConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HiveMetastoreConfigKerberosConfigObservation) DeepCopyInto(out *HiveMetastoreConfigKerberosConfigObservation) {
	*out = *in
	if in.Keytab != nil {
		in, out := &in.Keytab, &out.Keytab
		*out = make([]KeytabObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Krb5ConfigGcsURI != nil {
		in, out := &in.Krb5ConfigGcsURI, &out.Krb5ConfigGcsURI
		*out = new(string)
		**out = **in
	}
	if in.Principal != nil {
		in, out := &in.Principal, &out.Principal
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HiveMetastoreConfigKerberosConfigObservation.
func (in *HiveMetastoreConfigKerberosConfigObservation) DeepCopy() *HiveMetastoreConfigKerberosConfigObservation {
	if in == nil {
		return nil
	}
	out := new(HiveMetastoreConfigKerberosConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HiveMetastoreConfigKerberosConfigParameters) DeepCopyInto(out *HiveMetastoreConfigKerberosConfigParameters) {
	*out = *in
	if in.Keytab != nil {
		in, out := &in.Keytab, &out.Keytab
		*out = make([]KeytabParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Krb5ConfigGcsURI != nil {
		in, out := &in.Krb5ConfigGcsURI, &out.Krb5ConfigGcsURI
		*out = new(string)
		**out = **in
	}
	if in.Principal != nil {
		in, out := &in.Principal, &out.Principal
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HiveMetastoreConfigKerberosConfigParameters.
func (in *HiveMetastoreConfigKerberosConfigParameters) DeepCopy() *HiveMetastoreConfigKerberosConfigParameters {
	if in == nil {
		return nil
	}
	out := new(HiveMetastoreConfigKerberosConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HiveMetastoreConfigObservation) DeepCopyInto(out *HiveMetastoreConfigObservation) {
	*out = *in
	if in.AuxiliaryVersions != nil {
		in, out := &in.AuxiliaryVersions, &out.AuxiliaryVersions
		*out = make([]AuxiliaryVersionsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ConfigOverrides != nil {
		in, out := &in.ConfigOverrides, &out.ConfigOverrides
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.EndpointProtocol != nil {
		in, out := &in.EndpointProtocol, &out.EndpointProtocol
		*out = new(string)
		**out = **in
	}
	if in.KerberosConfig != nil {
		in, out := &in.KerberosConfig, &out.KerberosConfig
		*out = make([]HiveMetastoreConfigKerberosConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HiveMetastoreConfigObservation.
func (in *HiveMetastoreConfigObservation) DeepCopy() *HiveMetastoreConfigObservation {
	if in == nil {
		return nil
	}
	out := new(HiveMetastoreConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HiveMetastoreConfigParameters) DeepCopyInto(out *HiveMetastoreConfigParameters) {
	*out = *in
	if in.AuxiliaryVersions != nil {
		in, out := &in.AuxiliaryVersions, &out.AuxiliaryVersions
		*out = make([]AuxiliaryVersionsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ConfigOverrides != nil {
		in, out := &in.ConfigOverrides, &out.ConfigOverrides
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.EndpointProtocol != nil {
		in, out := &in.EndpointProtocol, &out.EndpointProtocol
		*out = new(string)
		**out = **in
	}
	if in.KerberosConfig != nil {
		in, out := &in.KerberosConfig, &out.KerberosConfig
		*out = make([]HiveMetastoreConfigKerberosConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HiveMetastoreConfigParameters.
func (in *HiveMetastoreConfigParameters) DeepCopy() *HiveMetastoreConfigParameters {
	if in == nil {
		return nil
	}
	out := new(HiveMetastoreConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InitializationActionInitParameters) DeepCopyInto(out *InitializationActionInitParameters) {
	*out = *in
	if in.Script != nil {
		in, out := &in.Script, &out.Script
		*out = new(string)
		**out = **in
	}
	if in.TimeoutSec != nil {
		in, out := &in.TimeoutSec, &out.TimeoutSec
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InitializationActionInitParameters.
func (in *InitializationActionInitParameters) DeepCopy() *InitializationActionInitParameters {
	if in == nil {
		return nil
	}
	out := new(InitializationActionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InitializationActionObservation) DeepCopyInto(out *InitializationActionObservation) {
	*out = *in
	if in.Script != nil {
		in, out := &in.Script, &out.Script
		*out = new(string)
		**out = **in
	}
	if in.TimeoutSec != nil {
		in, out := &in.TimeoutSec, &out.TimeoutSec
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InitializationActionObservation.
func (in *InitializationActionObservation) DeepCopy() *InitializationActionObservation {
	if in == nil {
		return nil
	}
	out := new(InitializationActionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InitializationActionParameters) DeepCopyInto(out *InitializationActionParameters) {
	*out = *in
	if in.Script != nil {
		in, out := &in.Script, &out.Script
		*out = new(string)
		**out = **in
	}
	if in.TimeoutSec != nil {
		in, out := &in.TimeoutSec, &out.TimeoutSec
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InitializationActionParameters.
func (in *InitializationActionParameters) DeepCopy() *InitializationActionParameters {
	if in == nil {
		return nil
	}
	out := new(InitializationActionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InitializationActionsInitParameters) DeepCopyInto(out *InitializationActionsInitParameters) {
	*out = *in
	if in.ExecutableFile != nil {
		in, out := &in.ExecutableFile, &out.ExecutableFile
		*out = new(string)
		**out = **in
	}
	if in.ExecutionTimeout != nil {
		in, out := &in.ExecutionTimeout, &out.ExecutionTimeout
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InitializationActionsInitParameters.
func (in *InitializationActionsInitParameters) DeepCopy() *InitializationActionsInitParameters {
	if in == nil {
		return nil
	}
	out := new(InitializationActionsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InitializationActionsObservation) DeepCopyInto(out *InitializationActionsObservation) {
	*out = *in
	if in.ExecutableFile != nil {
		in, out := &in.ExecutableFile, &out.ExecutableFile
		*out = new(string)
		**out = **in
	}
	if in.ExecutionTimeout != nil {
		in, out := &in.ExecutionTimeout, &out.ExecutionTimeout
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InitializationActionsObservation.
func (in *InitializationActionsObservation) DeepCopy() *InitializationActionsObservation {
	if in == nil {
		return nil
	}
	out := new(InitializationActionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InitializationActionsParameters) DeepCopyInto(out *InitializationActionsParameters) {
	*out = *in
	if in.ExecutableFile != nil {
		in, out := &in.ExecutableFile, &out.ExecutableFile
		*out = new(string)
		**out = **in
	}
	if in.ExecutionTimeout != nil {
		in, out := &in.ExecutionTimeout, &out.ExecutionTimeout
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InitializationActionsParameters.
func (in *InitializationActionsParameters) DeepCopy() *InitializationActionsParameters {
	if in == nil {
		return nil
	}
	out := new(InitializationActionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceFlexibilityPolicyInitParameters) DeepCopyInto(out *InstanceFlexibilityPolicyInitParameters) {
	*out = *in
	if in.InstanceSelectionList != nil {
		in, out := &in.InstanceSelectionList, &out.InstanceSelectionList
		*out = make([]InstanceSelectionListInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceFlexibilityPolicyInitParameters.
func (in *InstanceFlexibilityPolicyInitParameters) DeepCopy() *InstanceFlexibilityPolicyInitParameters {
	if in == nil {
		return nil
	}
	out := new(InstanceFlexibilityPolicyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceFlexibilityPolicyObservation) DeepCopyInto(out *InstanceFlexibilityPolicyObservation) {
	*out = *in
	if in.InstanceSelectionList != nil {
		in, out := &in.InstanceSelectionList, &out.InstanceSelectionList
		*out = make([]InstanceSelectionListObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.InstanceSelectionResults != nil {
		in, out := &in.InstanceSelectionResults, &out.InstanceSelectionResults
		*out = make([]InstanceSelectionResultsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceFlexibilityPolicyObservation.
func (in *InstanceFlexibilityPolicyObservation) DeepCopy() *InstanceFlexibilityPolicyObservation {
	if in == nil {
		return nil
	}
	out := new(InstanceFlexibilityPolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceFlexibilityPolicyParameters) DeepCopyInto(out *InstanceFlexibilityPolicyParameters) {
	*out = *in
	if in.InstanceSelectionList != nil {
		in, out := &in.InstanceSelectionList, &out.InstanceSelectionList
		*out = make([]InstanceSelectionListParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceFlexibilityPolicyParameters.
func (in *InstanceFlexibilityPolicyParameters) DeepCopy() *InstanceFlexibilityPolicyParameters {
	if in == nil {
		return nil
	}
	out := new(InstanceFlexibilityPolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceSelectionListInitParameters) DeepCopyInto(out *InstanceSelectionListInitParameters) {
	*out = *in
	if in.MachineTypes != nil {
		in, out := &in.MachineTypes, &out.MachineTypes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Rank != nil {
		in, out := &in.Rank, &out.Rank
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceSelectionListInitParameters.
func (in *InstanceSelectionListInitParameters) DeepCopy() *InstanceSelectionListInitParameters {
	if in == nil {
		return nil
	}
	out := new(InstanceSelectionListInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceSelectionListObservation) DeepCopyInto(out *InstanceSelectionListObservation) {
	*out = *in
	if in.MachineTypes != nil {
		in, out := &in.MachineTypes, &out.MachineTypes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Rank != nil {
		in, out := &in.Rank, &out.Rank
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceSelectionListObservation.
func (in *InstanceSelectionListObservation) DeepCopy() *InstanceSelectionListObservation {
	if in == nil {
		return nil
	}
	out := new(InstanceSelectionListObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceSelectionListParameters) DeepCopyInto(out *InstanceSelectionListParameters) {
	*out = *in
	if in.MachineTypes != nil {
		in, out := &in.MachineTypes, &out.MachineTypes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Rank != nil {
		in, out := &in.Rank, &out.Rank
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceSelectionListParameters.
func (in *InstanceSelectionListParameters) DeepCopy() *InstanceSelectionListParameters {
	if in == nil {
		return nil
	}
	out := new(InstanceSelectionListParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceSelectionResultsInitParameters) DeepCopyInto(out *InstanceSelectionResultsInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceSelectionResultsInitParameters.
func (in *InstanceSelectionResultsInitParameters) DeepCopy() *InstanceSelectionResultsInitParameters {
	if in == nil {
		return nil
	}
	out := new(InstanceSelectionResultsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceSelectionResultsObservation) DeepCopyInto(out *InstanceSelectionResultsObservation) {
	*out = *in
	if in.MachineType != nil {
		in, out := &in.MachineType, &out.MachineType
		*out = new(string)
		**out = **in
	}
	if in.VMCount != nil {
		in, out := &in.VMCount, &out.VMCount
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceSelectionResultsObservation.
func (in *InstanceSelectionResultsObservation) DeepCopy() *InstanceSelectionResultsObservation {
	if in == nil {
		return nil
	}
	out := new(InstanceSelectionResultsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceSelectionResultsParameters) DeepCopyInto(out *InstanceSelectionResultsParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceSelectionResultsParameters.
func (in *InstanceSelectionResultsParameters) DeepCopy() *InstanceSelectionResultsParameters {
	if in == nil {
		return nil
	}
	out := new(InstanceSelectionResultsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Job) DeepCopyInto(out *Job) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Job.
func (in *Job) DeepCopy() *Job {
	if in == nil {
		return nil
	}
	out := new(Job)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Job) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobInitParameters) DeepCopyInto(out *JobInitParameters) {
	*out = *in
	if in.ForceDelete != nil {
		in, out := &in.ForceDelete, &out.ForceDelete
		*out = new(bool)
		**out = **in
	}
	if in.HadoopConfig != nil {
		in, out := &in.HadoopConfig, &out.HadoopConfig
		*out = make([]HadoopConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HiveConfig != nil {
		in, out := &in.HiveConfig, &out.HiveConfig
		*out = make([]HiveConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.PigConfig != nil {
		in, out := &in.PigConfig, &out.PigConfig
		*out = make([]PigConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Placement != nil {
		in, out := &in.Placement, &out.Placement
		*out = make([]PlacementInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PrestoConfig != nil {
		in, out := &in.PrestoConfig, &out.PrestoConfig
		*out = make([]PrestoConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.PysparkConfig != nil {
		in, out := &in.PysparkConfig, &out.PysparkConfig
		*out = make([]PysparkConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Reference != nil {
		in, out := &in.Reference, &out.Reference
		*out = make([]ReferenceInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.RegionRef != nil {
		in, out := &in.RegionRef, &out.RegionRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.RegionSelector != nil {
		in, out := &in.RegionSelector, &out.RegionSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Scheduling != nil {
		in, out := &in.Scheduling, &out.Scheduling
		*out = make([]SchedulingInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SparkConfig != nil {
		in, out := &in.SparkConfig, &out.SparkConfig
		*out = make([]SparkConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SparksqlConfig != nil {
		in, out := &in.SparksqlConfig, &out.SparksqlConfig
		*out = make([]SparksqlConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobInitParameters.
func (in *JobInitParameters) DeepCopy() *JobInitParameters {
	if in == nil {
		return nil
	}
	out := new(JobInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobList) DeepCopyInto(out *JobList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Job, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobList.
func (in *JobList) DeepCopy() *JobList {
	if in == nil {
		return nil
	}
	out := new(JobList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *JobList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobObservation) DeepCopyInto(out *JobObservation) {
	*out = *in
	if in.DriverControlsFilesURI != nil {
		in, out := &in.DriverControlsFilesURI, &out.DriverControlsFilesURI
		*out = new(string)
		**out = **in
	}
	if in.DriverOutputResourceURI != nil {
		in, out := &in.DriverOutputResourceURI, &out.DriverOutputResourceURI
		*out = new(string)
		**out = **in
	}
	if in.EffectiveLabels != nil {
		in, out := &in.EffectiveLabels, &out.EffectiveLabels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ForceDelete != nil {
		in, out := &in.ForceDelete, &out.ForceDelete
		*out = new(bool)
		**out = **in
	}
	if in.HadoopConfig != nil {
		in, out := &in.HadoopConfig, &out.HadoopConfig
		*out = make([]HadoopConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HiveConfig != nil {
		in, out := &in.HiveConfig, &out.HiveConfig
		*out = make([]HiveConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.PigConfig != nil {
		in, out := &in.PigConfig, &out.PigConfig
		*out = make([]PigConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Placement != nil {
		in, out := &in.Placement, &out.Placement
		*out = make([]PlacementObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PrestoConfig != nil {
		in, out := &in.PrestoConfig, &out.PrestoConfig
		*out = make([]PrestoConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.PysparkConfig != nil {
		in, out := &in.PysparkConfig, &out.PysparkConfig
		*out = make([]PysparkConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Reference != nil {
		in, out := &in.Reference, &out.Reference
		*out = make([]ReferenceObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.Scheduling != nil {
		in, out := &in.Scheduling, &out.Scheduling
		*out = make([]SchedulingObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SparkConfig != nil {
		in, out := &in.SparkConfig, &out.SparkConfig
		*out = make([]SparkConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SparksqlConfig != nil {
		in, out := &in.SparksqlConfig, &out.SparksqlConfig
		*out = make([]SparksqlConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = make([]StatusObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TerraformLabels != nil {
		in, out := &in.TerraformLabels, &out.TerraformLabels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobObservation.
func (in *JobObservation) DeepCopy() *JobObservation {
	if in == nil {
		return nil
	}
	out := new(JobObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobParameters) DeepCopyInto(out *JobParameters) {
	*out = *in
	if in.ForceDelete != nil {
		in, out := &in.ForceDelete, &out.ForceDelete
		*out = new(bool)
		**out = **in
	}
	if in.HadoopConfig != nil {
		in, out := &in.HadoopConfig, &out.HadoopConfig
		*out = make([]HadoopConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HiveConfig != nil {
		in, out := &in.HiveConfig, &out.HiveConfig
		*out = make([]HiveConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.PigConfig != nil {
		in, out := &in.PigConfig, &out.PigConfig
		*out = make([]PigConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Placement != nil {
		in, out := &in.Placement, &out.Placement
		*out = make([]PlacementParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PrestoConfig != nil {
		in, out := &in.PrestoConfig, &out.PrestoConfig
		*out = make([]PrestoConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.PysparkConfig != nil {
		in, out := &in.PysparkConfig, &out.PysparkConfig
		*out = make([]PysparkConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Reference != nil {
		in, out := &in.Reference, &out.Reference
		*out = make([]ReferenceParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.RegionRef != nil {
		in, out := &in.RegionRef, &out.RegionRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.RegionSelector != nil {
		in, out := &in.RegionSelector, &out.RegionSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Scheduling != nil {
		in, out := &in.Scheduling, &out.Scheduling
		*out = make([]SchedulingParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SparkConfig != nil {
		in, out := &in.SparkConfig, &out.SparkConfig
		*out = make([]SparkConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SparksqlConfig != nil {
		in, out := &in.SparksqlConfig, &out.SparksqlConfig
		*out = make([]SparksqlConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobParameters.
func (in *JobParameters) DeepCopy() *JobParameters {
	if in == nil {
		return nil
	}
	out := new(JobParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobSpec) DeepCopyInto(out *JobSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobSpec.
func (in *JobSpec) DeepCopy() *JobSpec {
	if in == nil {
		return nil
	}
	out := new(JobSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobStatus) DeepCopyInto(out *JobStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobStatus.
func (in *JobStatus) DeepCopy() *JobStatus {
	if in == nil {
		return nil
	}
	out := new(JobStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobsInitParameters) DeepCopyInto(out *JobsInitParameters) {
	*out = *in
	if in.HadoopJob != nil {
		in, out := &in.HadoopJob, &out.HadoopJob
		*out = make([]HadoopJobInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HiveJob != nil {
		in, out := &in.HiveJob, &out.HiveJob
		*out = make([]HiveJobInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.PigJob != nil {
		in, out := &in.PigJob, &out.PigJob
		*out = make([]PigJobInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PrerequisiteStepIds != nil {
		in, out := &in.PrerequisiteStepIds, &out.PrerequisiteStepIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.PrestoJob != nil {
		in, out := &in.PrestoJob, &out.PrestoJob
		*out = make([]PrestoJobInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PysparkJob != nil {
		in, out := &in.PysparkJob, &out.PysparkJob
		*out = make([]PysparkJobInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Scheduling != nil {
		in, out := &in.Scheduling, &out.Scheduling
		*out = make([]JobsSchedulingInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SparkJob != nil {
		in, out := &in.SparkJob, &out.SparkJob
		*out = make([]SparkJobInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SparkRJob != nil {
		in, out := &in.SparkRJob, &out.SparkRJob
		*out = make([]SparkRJobInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SparkSQLJob != nil {
		in, out := &in.SparkSQLJob, &out.SparkSQLJob
		*out = make([]SparkSQLJobInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StepID != nil {
		in, out := &in.StepID, &out.StepID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobsInitParameters.
func (in *JobsInitParameters) DeepCopy() *JobsInitParameters {
	if in == nil {
		return nil
	}
	out := new(JobsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobsObservation) DeepCopyInto(out *JobsObservation) {
	*out = *in
	if in.HadoopJob != nil {
		in, out := &in.HadoopJob, &out.HadoopJob
		*out = make([]HadoopJobObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HiveJob != nil {
		in, out := &in.HiveJob, &out.HiveJob
		*out = make([]HiveJobObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.PigJob != nil {
		in, out := &in.PigJob, &out.PigJob
		*out = make([]PigJobObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PrerequisiteStepIds != nil {
		in, out := &in.PrerequisiteStepIds, &out.PrerequisiteStepIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.PrestoJob != nil {
		in, out := &in.PrestoJob, &out.PrestoJob
		*out = make([]PrestoJobObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PysparkJob != nil {
		in, out := &in.PysparkJob, &out.PysparkJob
		*out = make([]PysparkJobObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Scheduling != nil {
		in, out := &in.Scheduling, &out.Scheduling
		*out = make([]JobsSchedulingObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SparkJob != nil {
		in, out := &in.SparkJob, &out.SparkJob
		*out = make([]SparkJobObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SparkRJob != nil {
		in, out := &in.SparkRJob, &out.SparkRJob
		*out = make([]SparkRJobObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SparkSQLJob != nil {
		in, out := &in.SparkSQLJob, &out.SparkSQLJob
		*out = make([]SparkSQLJobObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StepID != nil {
		in, out := &in.StepID, &out.StepID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobsObservation.
func (in *JobsObservation) DeepCopy() *JobsObservation {
	if in == nil {
		return nil
	}
	out := new(JobsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobsParameters) DeepCopyInto(out *JobsParameters) {
	*out = *in
	if in.HadoopJob != nil {
		in, out := &in.HadoopJob, &out.HadoopJob
		*out = make([]HadoopJobParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HiveJob != nil {
		in, out := &in.HiveJob, &out.HiveJob
		*out = make([]HiveJobParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.PigJob != nil {
		in, out := &in.PigJob, &out.PigJob
		*out = make([]PigJobParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PrerequisiteStepIds != nil {
		in, out := &in.PrerequisiteStepIds, &out.PrerequisiteStepIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.PrestoJob != nil {
		in, out := &in.PrestoJob, &out.PrestoJob
		*out = make([]PrestoJobParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PysparkJob != nil {
		in, out := &in.PysparkJob, &out.PysparkJob
		*out = make([]PysparkJobParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Scheduling != nil {
		in, out := &in.Scheduling, &out.Scheduling
		*out = make([]JobsSchedulingParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SparkJob != nil {
		in, out := &in.SparkJob, &out.SparkJob
		*out = make([]SparkJobParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SparkRJob != nil {
		in, out := &in.SparkRJob, &out.SparkRJob
		*out = make([]SparkRJobParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SparkSQLJob != nil {
		in, out := &in.SparkSQLJob, &out.SparkSQLJob
		*out = make([]SparkSQLJobParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StepID != nil {
		in, out := &in.StepID, &out.StepID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobsParameters.
func (in *JobsParameters) DeepCopy() *JobsParameters {
	if in == nil {
		return nil
	}
	out := new(JobsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobsSchedulingInitParameters) DeepCopyInto(out *JobsSchedulingInitParameters) {
	*out = *in
	if in.MaxFailuresPerHour != nil {
		in, out := &in.MaxFailuresPerHour, &out.MaxFailuresPerHour
		*out = new(float64)
		**out = **in
	}
	if in.MaxFailuresTotal != nil {
		in, out := &in.MaxFailuresTotal, &out.MaxFailuresTotal
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobsSchedulingInitParameters.
func (in *JobsSchedulingInitParameters) DeepCopy() *JobsSchedulingInitParameters {
	if in == nil {
		return nil
	}
	out := new(JobsSchedulingInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobsSchedulingObservation) DeepCopyInto(out *JobsSchedulingObservation) {
	*out = *in
	if in.MaxFailuresPerHour != nil {
		in, out := &in.MaxFailuresPerHour, &out.MaxFailuresPerHour
		*out = new(float64)
		**out = **in
	}
	if in.MaxFailuresTotal != nil {
		in, out := &in.MaxFailuresTotal, &out.MaxFailuresTotal
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobsSchedulingObservation.
func (in *JobsSchedulingObservation) DeepCopy() *JobsSchedulingObservation {
	if in == nil {
		return nil
	}
	out := new(JobsSchedulingObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobsSchedulingParameters) DeepCopyInto(out *JobsSchedulingParameters) {
	*out = *in
	if in.MaxFailuresPerHour != nil {
		in, out := &in.MaxFailuresPerHour, &out.MaxFailuresPerHour
		*out = new(float64)
		**out = **in
	}
	if in.MaxFailuresTotal != nil {
		in, out := &in.MaxFailuresTotal, &out.MaxFailuresTotal
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobsSchedulingParameters.
func (in *JobsSchedulingParameters) DeepCopy() *JobsSchedulingParameters {
	if in == nil {
		return nil
	}
	out := new(JobsSchedulingParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KerberosConfigInitParameters) DeepCopyInto(out *KerberosConfigInitParameters) {
	*out = *in
	if in.CrossRealmTrustAdminServer != nil {
		in, out := &in.CrossRealmTrustAdminServer, &out.CrossRealmTrustAdminServer
		*out = new(string)
		**out = **in
	}
	if in.CrossRealmTrustKdc != nil {
		in, out := &in.CrossRealmTrustKdc, &out.CrossRealmTrustKdc
		*out = new(string)
		**out = **in
	}
	if in.CrossRealmTrustRealm != nil {
		in, out := &in.CrossRealmTrustRealm, &out.CrossRealmTrustRealm
		*out = new(string)
		**out = **in
	}
	if in.CrossRealmTrustSharedPasswordURI != nil {
		in, out := &in.CrossRealmTrustSharedPasswordURI, &out.CrossRealmTrustSharedPasswordURI
		*out = new(string)
		**out = **in
	}
	if in.EnableKerberos != nil {
		in, out := &in.EnableKerberos, &out.EnableKerberos
		*out = new(bool)
		**out = **in
	}
	if in.KMSKeyURI != nil {
		in, out := &in.KMSKeyURI, &out.KMSKeyURI
		*out = new(string)
		**out = **in
	}
	if in.KdcDBKeyURI != nil {
		in, out := &in.KdcDBKeyURI, &out.KdcDBKeyURI
		*out = new(string)
		**out = **in
	}
	if in.KeyPasswordURI != nil {
		in, out := &in.KeyPasswordURI, &out.KeyPasswordURI
		*out = new(string)
		**out = **in
	}
	if in.KeystorePasswordURI != nil {
		in, out := &in.KeystorePasswordURI, &out.KeystorePasswordURI
		*out = new(string)
		**out = **in
	}
	if in.KeystoreURI != nil {
		in, out := &in.KeystoreURI, &out.KeystoreURI
		*out = new(string)
		**out = **in
	}
	if in.Realm != nil {
		in, out := &in.Realm, &out.Realm
		*out = new(string)
		**out = **in
	}
	if in.RootPrincipalPasswordURI != nil {
		in, out := &in.RootPrincipalPasswordURI, &out.RootPrincipalPasswordURI
		*out = new(string)
		**out = **in
	}
	if in.TgtLifetimeHours != nil {
		in, out := &in.TgtLifetimeHours, &out.TgtLifetimeHours
		*out = new(float64)
		**out = **in
	}
	if in.TruststorePasswordURI != nil {
		in, out := &in.TruststorePasswordURI, &out.TruststorePasswordURI
		*out = new(string)
		**out = **in
	}
	if in.TruststoreURI != nil {
		in, out := &in.TruststoreURI, &out.TruststoreURI
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KerberosConfigInitParameters.
func (in *KerberosConfigInitParameters) DeepCopy() *KerberosConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(KerberosConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KerberosConfigObservation) DeepCopyInto(out *KerberosConfigObservation) {
	*out = *in
	if in.CrossRealmTrustAdminServer != nil {
		in, out := &in.CrossRealmTrustAdminServer, &out.CrossRealmTrustAdminServer
		*out = new(string)
		**out = **in
	}
	if in.CrossRealmTrustKdc != nil {
		in, out := &in.CrossRealmTrustKdc, &out.CrossRealmTrustKdc
		*out = new(string)
		**out = **in
	}
	if in.CrossRealmTrustRealm != nil {
		in, out := &in.CrossRealmTrustRealm, &out.CrossRealmTrustRealm
		*out = new(string)
		**out = **in
	}
	if in.CrossRealmTrustSharedPasswordURI != nil {
		in, out := &in.CrossRealmTrustSharedPasswordURI, &out.CrossRealmTrustSharedPasswordURI
		*out = new(string)
		**out = **in
	}
	if in.EnableKerberos != nil {
		in, out := &in.EnableKerberos, &out.EnableKerberos
		*out = new(bool)
		**out = **in
	}
	if in.KMSKeyURI != nil {
		in, out := &in.KMSKeyURI, &out.KMSKeyURI
		*out = new(string)
		**out = **in
	}
	if in.KdcDBKeyURI != nil {
		in, out := &in.KdcDBKeyURI, &out.KdcDBKeyURI
		*out = new(string)
		**out = **in
	}
	if in.KeyPasswordURI != nil {
		in, out := &in.KeyPasswordURI, &out.KeyPasswordURI
		*out = new(string)
		**out = **in
	}
	if in.KeystorePasswordURI != nil {
		in, out := &in.KeystorePasswordURI, &out.KeystorePasswordURI
		*out = new(string)
		**out = **in
	}
	if in.KeystoreURI != nil {
		in, out := &in.KeystoreURI, &out.KeystoreURI
		*out = new(string)
		**out = **in
	}
	if in.Realm != nil {
		in, out := &in.Realm, &out.Realm
		*out = new(string)
		**out = **in
	}
	if in.RootPrincipalPasswordURI != nil {
		in, out := &in.RootPrincipalPasswordURI, &out.RootPrincipalPasswordURI
		*out = new(string)
		**out = **in
	}
	if in.TgtLifetimeHours != nil {
		in, out := &in.TgtLifetimeHours, &out.TgtLifetimeHours
		*out = new(float64)
		**out = **in
	}
	if in.TruststorePasswordURI != nil {
		in, out := &in.TruststorePasswordURI, &out.TruststorePasswordURI
		*out = new(string)
		**out = **in
	}
	if in.TruststoreURI != nil {
		in, out := &in.TruststoreURI, &out.TruststoreURI
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KerberosConfigObservation.
func (in *KerberosConfigObservation) DeepCopy() *KerberosConfigObservation {
	if in == nil {
		return nil
	}
	out := new(KerberosConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KerberosConfigParameters) DeepCopyInto(out *KerberosConfigParameters) {
	*out = *in
	if in.CrossRealmTrustAdminServer != nil {
		in, out := &in.CrossRealmTrustAdminServer, &out.CrossRealmTrustAdminServer
		*out = new(string)
		**out = **in
	}
	if in.CrossRealmTrustKdc != nil {
		in, out := &in.CrossRealmTrustKdc, &out.CrossRealmTrustKdc
		*out = new(string)
		**out = **in
	}
	if in.CrossRealmTrustRealm != nil {
		in, out := &in.CrossRealmTrustRealm, &out.CrossRealmTrustRealm
		*out = new(string)
		**out = **in
	}
	if in.CrossRealmTrustSharedPasswordURI != nil {
		in, out := &in.CrossRealmTrustSharedPasswordURI, &out.CrossRealmTrustSharedPasswordURI
		*out = new(string)
		**out = **in
	}
	if in.EnableKerberos != nil {
		in, out := &in.EnableKerberos, &out.EnableKerberos
		*out = new(bool)
		**out = **in
	}
	if in.KMSKeyURI != nil {
		in, out := &in.KMSKeyURI, &out.KMSKeyURI
		*out = new(string)
		**out = **in
	}
	if in.KdcDBKeyURI != nil {
		in, out := &in.KdcDBKeyURI, &out.KdcDBKeyURI
		*out = new(string)
		**out = **in
	}
	if in.KeyPasswordURI != nil {
		in, out := &in.KeyPasswordURI, &out.KeyPasswordURI
		*out = new(string)
		**out = **in
	}
	if in.KeystorePasswordURI != nil {
		in, out := &in.KeystorePasswordURI, &out.KeystorePasswordURI
		*out = new(string)
		**out = **in
	}
	if in.KeystoreURI != nil {
		in, out := &in.KeystoreURI, &out.KeystoreURI
		*out = new(string)
		**out = **in
	}
	if in.Realm != nil {
		in, out := &in.Realm, &out.Realm
		*out = new(string)
		**out = **in
	}
	if in.RootPrincipalPasswordURI != nil {
		in, out := &in.RootPrincipalPasswordURI, &out.RootPrincipalPasswordURI
		*out = new(string)
		**out = **in
	}
	if in.TgtLifetimeHours != nil {
		in, out := &in.TgtLifetimeHours, &out.TgtLifetimeHours
		*out = new(float64)
		**out = **in
	}
	if in.TruststorePasswordURI != nil {
		in, out := &in.TruststorePasswordURI, &out.TruststorePasswordURI
		*out = new(string)
		**out = **in
	}
	if in.TruststoreURI != nil {
		in, out := &in.TruststoreURI, &out.TruststoreURI
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KerberosConfigParameters.
func (in *KerberosConfigParameters) DeepCopy() *KerberosConfigParameters {
	if in == nil {
		return nil
	}
	out := new(KerberosConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KeytabInitParameters) DeepCopyInto(out *KeytabInitParameters) {
	*out = *in
	if in.CloudSecret != nil {
		in, out := &in.CloudSecret, &out.CloudSecret
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KeytabInitParameters.
func (in *KeytabInitParameters) DeepCopy() *KeytabInitParameters {
	if in == nil {
		return nil
	}
	out := new(KeytabInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KeytabObservation) DeepCopyInto(out *KeytabObservation) {
	*out = *in
	if in.CloudSecret != nil {
		in, out := &in.CloudSecret, &out.CloudSecret
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KeytabObservation.
func (in *KeytabObservation) DeepCopy() *KeytabObservation {
	if in == nil {
		return nil
	}
	out := new(KeytabObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KeytabParameters) DeepCopyInto(out *KeytabParameters) {
	*out = *in
	if in.CloudSecret != nil {
		in, out := &in.CloudSecret, &out.CloudSecret
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KeytabParameters.
func (in *KeytabParameters) DeepCopy() *KeytabParameters {
	if in == nil {
		return nil
	}
	out := new(KeytabParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KubernetesClusterConfigInitParameters) DeepCopyInto(out *KubernetesClusterConfigInitParameters) {
	*out = *in
	if in.GkeClusterConfig != nil {
		in, out := &in.GkeClusterConfig, &out.GkeClusterConfig
		*out = make([]GkeClusterConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.KubernetesNamespace != nil {
		in, out := &in.KubernetesNamespace, &out.KubernetesNamespace
		*out = new(string)
		**out = **in
	}
	if in.KubernetesSoftwareConfig != nil {
		in, out := &in.KubernetesSoftwareConfig, &out.KubernetesSoftwareConfig
		*out = make([]KubernetesSoftwareConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KubernetesClusterConfigInitParameters.
func (in *KubernetesClusterConfigInitParameters) DeepCopy() *KubernetesClusterConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(KubernetesClusterConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KubernetesClusterConfigObservation) DeepCopyInto(out *KubernetesClusterConfigObservation) {
	*out = *in
	if in.GkeClusterConfig != nil {
		in, out := &in.GkeClusterConfig, &out.GkeClusterConfig
		*out = make([]GkeClusterConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.KubernetesNamespace != nil {
		in, out := &in.KubernetesNamespace, &out.KubernetesNamespace
		*out = new(string)
		**out = **in
	}
	if in.KubernetesSoftwareConfig != nil {
		in, out := &in.KubernetesSoftwareConfig, &out.KubernetesSoftwareConfig
		*out = make([]KubernetesSoftwareConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KubernetesClusterConfigObservation.
func (in *KubernetesClusterConfigObservation) DeepCopy() *KubernetesClusterConfigObservation {
	if in == nil {
		return nil
	}
	out := new(KubernetesClusterConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KubernetesClusterConfigParameters) DeepCopyInto(out *KubernetesClusterConfigParameters) {
	*out = *in
	if in.GkeClusterConfig != nil {
		in, out := &in.GkeClusterConfig, &out.GkeClusterConfig
		*out = make([]GkeClusterConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.KubernetesNamespace != nil {
		in, out := &in.KubernetesNamespace, &out.KubernetesNamespace
		*out = new(string)
		**out = **in
	}
	if in.KubernetesSoftwareConfig != nil {
		in, out := &in.KubernetesSoftwareConfig, &out.KubernetesSoftwareConfig
		*out = make([]KubernetesSoftwareConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KubernetesClusterConfigParameters.
func (in *KubernetesClusterConfigParameters) DeepCopy() *KubernetesClusterConfigParameters {
	if in == nil {
		return nil
	}
	out := new(KubernetesClusterConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KubernetesSoftwareConfigInitParameters) DeepCopyInto(out *KubernetesSoftwareConfigInitParameters) {
	*out = *in
	if in.ComponentVersion != nil {
		in, out := &in.ComponentVersion, &out.ComponentVersion
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Properties != nil {
		in, out := &in.Properties, &out.Properties
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KubernetesSoftwareConfigInitParameters.
func (in *KubernetesSoftwareConfigInitParameters) DeepCopy() *KubernetesSoftwareConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(KubernetesSoftwareConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KubernetesSoftwareConfigObservation) DeepCopyInto(out *KubernetesSoftwareConfigObservation) {
	*out = *in
	if in.ComponentVersion != nil {
		in, out := &in.ComponentVersion, &out.ComponentVersion
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Properties != nil {
		in, out := &in.Properties, &out.Properties
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KubernetesSoftwareConfigObservation.
func (in *KubernetesSoftwareConfigObservation) DeepCopy() *KubernetesSoftwareConfigObservation {
	if in == nil {
		return nil
	}
	out := new(KubernetesSoftwareConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KubernetesSoftwareConfigParameters) DeepCopyInto(out *KubernetesSoftwareConfigParameters) {
	*out = *in
	if in.ComponentVersion != nil {
		in, out := &in.ComponentVersion, &out.ComponentVersion
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Properties != nil {
		in, out := &in.Properties, &out.Properties
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KubernetesSoftwareConfigParameters.
func (in *KubernetesSoftwareConfigParameters) DeepCopy() *KubernetesSoftwareConfigParameters {
	if in == nil {
		return nil
	}
	out := new(KubernetesSoftwareConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LifecycleConfigInitParameters) DeepCopyInto(out *LifecycleConfigInitParameters) {
	*out = *in
	if in.AutoDeleteTime != nil {
		in, out := &in.AutoDeleteTime, &out.AutoDeleteTime
		*out = new(string)
		**out = **in
	}
	if in.IdleDeleteTTL != nil {
		in, out := &in.IdleDeleteTTL, &out.IdleDeleteTTL
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LifecycleConfigInitParameters.
func (in *LifecycleConfigInitParameters) DeepCopy() *LifecycleConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(LifecycleConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LifecycleConfigObservation) DeepCopyInto(out *LifecycleConfigObservation) {
	*out = *in
	if in.AutoDeleteTime != nil {
		in, out := &in.AutoDeleteTime, &out.AutoDeleteTime
		*out = new(string)
		**out = **in
	}
	if in.IdleDeleteTTL != nil {
		in, out := &in.IdleDeleteTTL, &out.IdleDeleteTTL
		*out = new(string)
		**out = **in
	}
	if in.IdleStartTime != nil {
		in, out := &in.IdleStartTime, &out.IdleStartTime
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LifecycleConfigObservation.
func (in *LifecycleConfigObservation) DeepCopy() *LifecycleConfigObservation {
	if in == nil {
		return nil
	}
	out := new(LifecycleConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LifecycleConfigParameters) DeepCopyInto(out *LifecycleConfigParameters) {
	*out = *in
	if in.AutoDeleteTime != nil {
		in, out := &in.AutoDeleteTime, &out.AutoDeleteTime
		*out = new(string)
		**out = **in
	}
	if in.IdleDeleteTTL != nil {
		in, out := &in.IdleDeleteTTL, &out.IdleDeleteTTL
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LifecycleConfigParameters.
func (in *LifecycleConfigParameters) DeepCopy() *LifecycleConfigParameters {
	if in == nil {
		return nil
	}
	out := new(LifecycleConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoggingConfigInitParameters) DeepCopyInto(out *LoggingConfigInitParameters) {
	*out = *in
	if in.DriverLogLevels != nil {
		in, out := &in.DriverLogLevels, &out.DriverLogLevels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoggingConfigInitParameters.
func (in *LoggingConfigInitParameters) DeepCopy() *LoggingConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(LoggingConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoggingConfigObservation) DeepCopyInto(out *LoggingConfigObservation) {
	*out = *in
	if in.DriverLogLevels != nil {
		in, out := &in.DriverLogLevels, &out.DriverLogLevels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoggingConfigObservation.
func (in *LoggingConfigObservation) DeepCopy() *LoggingConfigObservation {
	if in == nil {
		return nil
	}
	out := new(LoggingConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoggingConfigParameters) DeepCopyInto(out *LoggingConfigParameters) {
	*out = *in
	if in.DriverLogLevels != nil {
		in, out := &in.DriverLogLevels, &out.DriverLogLevels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoggingConfigParameters.
func (in *LoggingConfigParameters) DeepCopy() *LoggingConfigParameters {
	if in == nil {
		return nil
	}
	out := new(LoggingConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MaintenanceWindowInitParameters) DeepCopyInto(out *MaintenanceWindowInitParameters) {
	*out = *in
	if in.DayOfWeek != nil {
		in, out := &in.DayOfWeek, &out.DayOfWeek
		*out = new(string)
		**out = **in
	}
	if in.HourOfDay != nil {
		in, out := &in.HourOfDay, &out.HourOfDay
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MaintenanceWindowInitParameters.
func (in *MaintenanceWindowInitParameters) DeepCopy() *MaintenanceWindowInitParameters {
	if in == nil {
		return nil
	}
	out := new(MaintenanceWindowInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MaintenanceWindowObservation) DeepCopyInto(out *MaintenanceWindowObservation) {
	*out = *in
	if in.DayOfWeek != nil {
		in, out := &in.DayOfWeek, &out.DayOfWeek
		*out = new(string)
		**out = **in
	}
	if in.HourOfDay != nil {
		in, out := &in.HourOfDay, &out.HourOfDay
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MaintenanceWindowObservation.
func (in *MaintenanceWindowObservation) DeepCopy() *MaintenanceWindowObservation {
	if in == nil {
		return nil
	}
	out := new(MaintenanceWindowObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MaintenanceWindowParameters) DeepCopyInto(out *MaintenanceWindowParameters) {
	*out = *in
	if in.DayOfWeek != nil {
		in, out := &in.DayOfWeek, &out.DayOfWeek
		*out = new(string)
		**out = **in
	}
	if in.HourOfDay != nil {
		in, out := &in.HourOfDay, &out.HourOfDay
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MaintenanceWindowParameters.
func (in *MaintenanceWindowParameters) DeepCopy() *MaintenanceWindowParameters {
	if in == nil {
		return nil
	}
	out := new(MaintenanceWindowParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagedClusterConfigInitParameters) DeepCopyInto(out *ManagedClusterConfigInitParameters) {
	*out = *in
	if in.AutoscalingConfig != nil {
		in, out := &in.AutoscalingConfig, &out.AutoscalingConfig
		*out = make([]ConfigAutoscalingConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EncryptionConfig != nil {
		in, out := &in.EncryptionConfig, &out.EncryptionConfig
		*out = make([]ConfigEncryptionConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EndpointConfig != nil {
		in, out := &in.EndpointConfig, &out.EndpointConfig
		*out = make([]ConfigEndpointConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.GceClusterConfig != nil {
		in, out := &in.GceClusterConfig, &out.GceClusterConfig
		*out = make([]ConfigGceClusterConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.InitializationActions != nil {
		in, out := &in.InitializationActions, &out.InitializationActions
		*out = make([]InitializationActionsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LifecycleConfig != nil {
		in, out := &in.LifecycleConfig, &out.LifecycleConfig
		*out = make([]ConfigLifecycleConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MasterConfig != nil {
		in, out := &in.MasterConfig, &out.MasterConfig
		*out = make([]ConfigMasterConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SecondaryWorkerConfig != nil {
		in, out := &in.SecondaryWorkerConfig, &out.SecondaryWorkerConfig
		*out = make([]ConfigSecondaryWorkerConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SecurityConfig != nil {
		in, out := &in.SecurityConfig, &out.SecurityConfig
		*out = make([]ConfigSecurityConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SoftwareConfig != nil {
		in, out := &in.SoftwareConfig, &out.SoftwareConfig
		*out = make([]ConfigSoftwareConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StagingBucket != nil {
		in, out := &in.StagingBucket, &out.StagingBucket
		*out = new(string)
		**out = **in
	}
	if in.TempBucket != nil {
		in, out := &in.TempBucket, &out.TempBucket
		*out = new(string)
		**out = **in
	}
	if in.WorkerConfig != nil {
		in, out := &in.WorkerConfig, &out.WorkerConfig
		*out = make([]ConfigWorkerConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagedClusterConfigInitParameters.
func (in *ManagedClusterConfigInitParameters) DeepCopy() *ManagedClusterConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(ManagedClusterConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagedClusterConfigObservation) DeepCopyInto(out *ManagedClusterConfigObservation) {
	*out = *in
	if in.AutoscalingConfig != nil {
		in, out := &in.AutoscalingConfig, &out.AutoscalingConfig
		*out = make([]ConfigAutoscalingConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EncryptionConfig != nil {
		in, out := &in.EncryptionConfig, &out.EncryptionConfig
		*out = make([]ConfigEncryptionConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EndpointConfig != nil {
		in, out := &in.EndpointConfig, &out.EndpointConfig
		*out = make([]ConfigEndpointConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.GceClusterConfig != nil {
		in, out := &in.GceClusterConfig, &out.GceClusterConfig
		*out = make([]ConfigGceClusterConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.InitializationActions != nil {
		in, out := &in.InitializationActions, &out.InitializationActions
		*out = make([]InitializationActionsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LifecycleConfig != nil {
		in, out := &in.LifecycleConfig, &out.LifecycleConfig
		*out = make([]ConfigLifecycleConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MasterConfig != nil {
		in, out := &in.MasterConfig, &out.MasterConfig
		*out = make([]ConfigMasterConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SecondaryWorkerConfig != nil {
		in, out := &in.SecondaryWorkerConfig, &out.SecondaryWorkerConfig
		*out = make([]ConfigSecondaryWorkerConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SecurityConfig != nil {
		in, out := &in.SecurityConfig, &out.SecurityConfig
		*out = make([]ConfigSecurityConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SoftwareConfig != nil {
		in, out := &in.SoftwareConfig, &out.SoftwareConfig
		*out = make([]ConfigSoftwareConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StagingBucket != nil {
		in, out := &in.StagingBucket, &out.StagingBucket
		*out = new(string)
		**out = **in
	}
	if in.TempBucket != nil {
		in, out := &in.TempBucket, &out.TempBucket
		*out = new(string)
		**out = **in
	}
	if in.WorkerConfig != nil {
		in, out := &in.WorkerConfig, &out.WorkerConfig
		*out = make([]ConfigWorkerConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagedClusterConfigObservation.
func (in *ManagedClusterConfigObservation) DeepCopy() *ManagedClusterConfigObservation {
	if in == nil {
		return nil
	}
	out := new(ManagedClusterConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagedClusterConfigParameters) DeepCopyInto(out *ManagedClusterConfigParameters) {
	*out = *in
	if in.AutoscalingConfig != nil {
		in, out := &in.AutoscalingConfig, &out.AutoscalingConfig
		*out = make([]ConfigAutoscalingConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EncryptionConfig != nil {
		in, out := &in.EncryptionConfig, &out.EncryptionConfig
		*out = make([]ConfigEncryptionConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EndpointConfig != nil {
		in, out := &in.EndpointConfig, &out.EndpointConfig
		*out = make([]ConfigEndpointConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.GceClusterConfig != nil {
		in, out := &in.GceClusterConfig, &out.GceClusterConfig
		*out = make([]ConfigGceClusterConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.InitializationActions != nil {
		in, out := &in.InitializationActions, &out.InitializationActions
		*out = make([]InitializationActionsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LifecycleConfig != nil {
		in, out := &in.LifecycleConfig, &out.LifecycleConfig
		*out = make([]ConfigLifecycleConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MasterConfig != nil {
		in, out := &in.MasterConfig, &out.MasterConfig
		*out = make([]ConfigMasterConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SecondaryWorkerConfig != nil {
		in, out := &in.SecondaryWorkerConfig, &out.SecondaryWorkerConfig
		*out = make([]ConfigSecondaryWorkerConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SecurityConfig != nil {
		in, out := &in.SecurityConfig, &out.SecurityConfig
		*out = make([]ConfigSecurityConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SoftwareConfig != nil {
		in, out := &in.SoftwareConfig, &out.SoftwareConfig
		*out = make([]ConfigSoftwareConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StagingBucket != nil {
		in, out := &in.StagingBucket, &out.StagingBucket
		*out = new(string)
		**out = **in
	}
	if in.TempBucket != nil {
		in, out := &in.TempBucket, &out.TempBucket
		*out = new(string)
		**out = **in
	}
	if in.WorkerConfig != nil {
		in, out := &in.WorkerConfig, &out.WorkerConfig
		*out = make([]ConfigWorkerConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagedClusterConfigParameters.
func (in *ManagedClusterConfigParameters) DeepCopy() *ManagedClusterConfigParameters {
	if in == nil {
		return nil
	}
	out := new(ManagedClusterConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagedClusterInitParameters) DeepCopyInto(out *ManagedClusterInitParameters) {
	*out = *in
	if in.ClusterName != nil {
		in, out := &in.ClusterName, &out.ClusterName
		*out = new(string)
		**out = **in
	}
	if in.Config != nil {
		in, out := &in.Config, &out.Config
		*out = make([]ManagedClusterConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagedClusterInitParameters.
func (in *ManagedClusterInitParameters) DeepCopy() *ManagedClusterInitParameters {
	if in == nil {
		return nil
	}
	out := new(ManagedClusterInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagedClusterObservation) DeepCopyInto(out *ManagedClusterObservation) {
	*out = *in
	if in.ClusterName != nil {
		in, out := &in.ClusterName, &out.ClusterName
		*out = new(string)
		**out = **in
	}
	if in.Config != nil {
		in, out := &in.Config, &out.Config
		*out = make([]ManagedClusterConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagedClusterObservation.
func (in *ManagedClusterObservation) DeepCopy() *ManagedClusterObservation {
	if in == nil {
		return nil
	}
	out := new(ManagedClusterObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagedClusterParameters) DeepCopyInto(out *ManagedClusterParameters) {
	*out = *in
	if in.ClusterName != nil {
		in, out := &in.ClusterName, &out.ClusterName
		*out = new(string)
		**out = **in
	}
	if in.Config != nil {
		in, out := &in.Config, &out.Config
		*out = make([]ManagedClusterConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagedClusterParameters.
func (in *ManagedClusterParameters) DeepCopy() *ManagedClusterParameters {
	if in == nil {
		return nil
	}
	out := new(ManagedClusterParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagedGroupConfigInitParameters) DeepCopyInto(out *ManagedGroupConfigInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagedGroupConfigInitParameters.
func (in *ManagedGroupConfigInitParameters) DeepCopy() *ManagedGroupConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(ManagedGroupConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagedGroupConfigObservation) DeepCopyInto(out *ManagedGroupConfigObservation) {
	*out = *in
	if in.InstanceGroupManagerName != nil {
		in, out := &in.InstanceGroupManagerName, &out.InstanceGroupManagerName
		*out = new(string)
		**out = **in
	}
	if in.InstanceTemplateName != nil {
		in, out := &in.InstanceTemplateName, &out.InstanceTemplateName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagedGroupConfigObservation.
func (in *ManagedGroupConfigObservation) DeepCopy() *ManagedGroupConfigObservation {
	if in == nil {
		return nil
	}
	out := new(ManagedGroupConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagedGroupConfigParameters) DeepCopyInto(out *ManagedGroupConfigParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagedGroupConfigParameters.
func (in *ManagedGroupConfigParameters) DeepCopy() *ManagedGroupConfigParameters {
	if in == nil {
		return nil
	}
	out := new(ManagedGroupConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MasterConfigAcceleratorsInitParameters) DeepCopyInto(out *MasterConfigAcceleratorsInitParameters) {
	*out = *in
	if in.AcceleratorCount != nil {
		in, out := &in.AcceleratorCount, &out.AcceleratorCount
		*out = new(float64)
		**out = **in
	}
	if in.AcceleratorType != nil {
		in, out := &in.AcceleratorType, &out.AcceleratorType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MasterConfigAcceleratorsInitParameters.
func (in *MasterConfigAcceleratorsInitParameters) DeepCopy() *MasterConfigAcceleratorsInitParameters {
	if in == nil {
		return nil
	}
	out := new(MasterConfigAcceleratorsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MasterConfigAcceleratorsObservation) DeepCopyInto(out *MasterConfigAcceleratorsObservation) {
	*out = *in
	if in.AcceleratorCount != nil {
		in, out := &in.AcceleratorCount, &out.AcceleratorCount
		*out = new(float64)
		**out = **in
	}
	if in.AcceleratorType != nil {
		in, out := &in.AcceleratorType, &out.AcceleratorType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MasterConfigAcceleratorsObservation.
func (in *MasterConfigAcceleratorsObservation) DeepCopy() *MasterConfigAcceleratorsObservation {
	if in == nil {
		return nil
	}
	out := new(MasterConfigAcceleratorsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MasterConfigAcceleratorsParameters) DeepCopyInto(out *MasterConfigAcceleratorsParameters) {
	*out = *in
	if in.AcceleratorCount != nil {
		in, out := &in.AcceleratorCount, &out.AcceleratorCount
		*out = new(float64)
		**out = **in
	}
	if in.AcceleratorType != nil {
		in, out := &in.AcceleratorType, &out.AcceleratorType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MasterConfigAcceleratorsParameters.
func (in *MasterConfigAcceleratorsParameters) DeepCopy() *MasterConfigAcceleratorsParameters {
	if in == nil {
		return nil
	}
	out := new(MasterConfigAcceleratorsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MasterConfigDiskConfigInitParameters) DeepCopyInto(out *MasterConfigDiskConfigInitParameters) {
	*out = *in
	if in.BootDiskSizeGb != nil {
		in, out := &in.BootDiskSizeGb, &out.BootDiskSizeGb
		*out = new(float64)
		**out = **in
	}
	if in.BootDiskType != nil {
		in, out := &in.BootDiskType, &out.BootDiskType
		*out = new(string)
		**out = **in
	}
	if in.NumLocalSsds != nil {
		in, out := &in.NumLocalSsds, &out.NumLocalSsds
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MasterConfigDiskConfigInitParameters.
func (in *MasterConfigDiskConfigInitParameters) DeepCopy() *MasterConfigDiskConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(MasterConfigDiskConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MasterConfigDiskConfigObservation) DeepCopyInto(out *MasterConfigDiskConfigObservation) {
	*out = *in
	if in.BootDiskSizeGb != nil {
		in, out := &in.BootDiskSizeGb, &out.BootDiskSizeGb
		*out = new(float64)
		**out = **in
	}
	if in.BootDiskType != nil {
		in, out := &in.BootDiskType, &out.BootDiskType
		*out = new(string)
		**out = **in
	}
	if in.NumLocalSsds != nil {
		in, out := &in.NumLocalSsds, &out.NumLocalSsds
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MasterConfigDiskConfigObservation.
func (in *MasterConfigDiskConfigObservation) DeepCopy() *MasterConfigDiskConfigObservation {
	if in == nil {
		return nil
	}
	out := new(MasterConfigDiskConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MasterConfigDiskConfigParameters) DeepCopyInto(out *MasterConfigDiskConfigParameters) {
	*out = *in
	if in.BootDiskSizeGb != nil {
		in, out := &in.BootDiskSizeGb, &out.BootDiskSizeGb
		*out = new(float64)
		**out = **in
	}
	if in.BootDiskType != nil {
		in, out := &in.BootDiskType, &out.BootDiskType
		*out = new(string)
		**out = **in
	}
	if in.NumLocalSsds != nil {
		in, out := &in.NumLocalSsds, &out.NumLocalSsds
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MasterConfigDiskConfigParameters.
func (in *MasterConfigDiskConfigParameters) DeepCopy() *MasterConfigDiskConfigParameters {
	if in == nil {
		return nil
	}
	out := new(MasterConfigDiskConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MasterConfigInitParameters) DeepCopyInto(out *MasterConfigInitParameters) {
	*out = *in
	if in.Accelerators != nil {
		in, out := &in.Accelerators, &out.Accelerators
		*out = make([]MasterConfigAcceleratorsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DiskConfig != nil {
		in, out := &in.DiskConfig, &out.DiskConfig
		*out = make([]MasterConfigDiskConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ImageURI != nil {
		in, out := &in.ImageURI, &out.ImageURI
		*out = new(string)
		**out = **in
	}
	if in.MachineType != nil {
		in, out := &in.MachineType, &out.MachineType
		*out = new(string)
		**out = **in
	}
	if in.MinCPUPlatform != nil {
		in, out := &in.MinCPUPlatform, &out.MinCPUPlatform
		*out = new(string)
		**out = **in
	}
	if in.NumInstances != nil {
		in, out := &in.NumInstances, &out.NumInstances
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MasterConfigInitParameters.
func (in *MasterConfigInitParameters) DeepCopy() *MasterConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(MasterConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MasterConfigObservation) DeepCopyInto(out *MasterConfigObservation) {
	*out = *in
	if in.Accelerators != nil {
		in, out := &in.Accelerators, &out.Accelerators
		*out = make([]MasterConfigAcceleratorsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DiskConfig != nil {
		in, out := &in.DiskConfig, &out.DiskConfig
		*out = make([]MasterConfigDiskConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ImageURI != nil {
		in, out := &in.ImageURI, &out.ImageURI
		*out = new(string)
		**out = **in
	}
	if in.InstanceNames != nil {
		in, out := &in.InstanceNames, &out.InstanceNames
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.MachineType != nil {
		in, out := &in.MachineType, &out.MachineType
		*out = new(string)
		**out = **in
	}
	if in.MinCPUPlatform != nil {
		in, out := &in.MinCPUPlatform, &out.MinCPUPlatform
		*out = new(string)
		**out = **in
	}
	if in.NumInstances != nil {
		in, out := &in.NumInstances, &out.NumInstances
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MasterConfigObservation.
func (in *MasterConfigObservation) DeepCopy() *MasterConfigObservation {
	if in == nil {
		return nil
	}
	out := new(MasterConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MasterConfigParameters) DeepCopyInto(out *MasterConfigParameters) {
	*out = *in
	if in.Accelerators != nil {
		in, out := &in.Accelerators, &out.Accelerators
		*out = make([]MasterConfigAcceleratorsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DiskConfig != nil {
		in, out := &in.DiskConfig, &out.DiskConfig
		*out = make([]MasterConfigDiskConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ImageURI != nil {
		in, out := &in.ImageURI, &out.ImageURI
		*out = new(string)
		**out = **in
	}
	if in.MachineType != nil {
		in, out := &in.MachineType, &out.MachineType
		*out = new(string)
		**out = **in
	}
	if in.MinCPUPlatform != nil {
		in, out := &in.MinCPUPlatform, &out.MinCPUPlatform
		*out = new(string)
		**out = **in
	}
	if in.NumInstances != nil {
		in, out := &in.NumInstances, &out.NumInstances
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MasterConfigParameters.
func (in *MasterConfigParameters) DeepCopy() *MasterConfigParameters {
	if in == nil {
		return nil
	}
	out := new(MasterConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MetadataIntegrationInitParameters) DeepCopyInto(out *MetadataIntegrationInitParameters) {
	*out = *in
	if in.DataCatalogConfig != nil {
		in, out := &in.DataCatalogConfig, &out.DataCatalogConfig
		*out = make([]DataCatalogConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MetadataIntegrationInitParameters.
func (in *MetadataIntegrationInitParameters) DeepCopy() *MetadataIntegrationInitParameters {
	if in == nil {
		return nil
	}
	out := new(MetadataIntegrationInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MetadataIntegrationObservation) DeepCopyInto(out *MetadataIntegrationObservation) {
	*out = *in
	if in.DataCatalogConfig != nil {
		in, out := &in.DataCatalogConfig, &out.DataCatalogConfig
		*out = make([]DataCatalogConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MetadataIntegrationObservation.
func (in *MetadataIntegrationObservation) DeepCopy() *MetadataIntegrationObservation {
	if in == nil {
		return nil
	}
	out := new(MetadataIntegrationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MetadataIntegrationParameters) DeepCopyInto(out *MetadataIntegrationParameters) {
	*out = *in
	if in.DataCatalogConfig != nil {
		in, out := &in.DataCatalogConfig, &out.DataCatalogConfig
		*out = make([]DataCatalogConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MetadataIntegrationParameters.
func (in *MetadataIntegrationParameters) DeepCopy() *MetadataIntegrationParameters {
	if in == nil {
		return nil
	}
	out := new(MetadataIntegrationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MetastoreConfigInitParameters) DeepCopyInto(out *MetastoreConfigInitParameters) {
	*out = *in
	if in.DataprocMetastoreService != nil {
		in, out := &in.DataprocMetastoreService, &out.DataprocMetastoreService
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MetastoreConfigInitParameters.
func (in *MetastoreConfigInitParameters) DeepCopy() *MetastoreConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(MetastoreConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MetastoreConfigObservation) DeepCopyInto(out *MetastoreConfigObservation) {
	*out = *in
	if in.DataprocMetastoreService != nil {
		in, out := &in.DataprocMetastoreService, &out.DataprocMetastoreService
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MetastoreConfigObservation.
func (in *MetastoreConfigObservation) DeepCopy() *MetastoreConfigObservation {
	if in == nil {
		return nil
	}
	out := new(MetastoreConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MetastoreConfigParameters) DeepCopyInto(out *MetastoreConfigParameters) {
	*out = *in
	if in.DataprocMetastoreService != nil {
		in, out := &in.DataprocMetastoreService, &out.DataprocMetastoreService
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MetastoreConfigParameters.
func (in *MetastoreConfigParameters) DeepCopy() *MetastoreConfigParameters {
	if in == nil {
		return nil
	}
	out := new(MetastoreConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MetastoreService) DeepCopyInto(out *MetastoreService) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MetastoreService.
func (in *MetastoreService) DeepCopy() *MetastoreService {
	if in == nil {
		return nil
	}
	out := new(MetastoreService)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *MetastoreService) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MetastoreServiceEncryptionConfigInitParameters) DeepCopyInto(out *MetastoreServiceEncryptionConfigInitParameters) {
	*out = *in
	if in.KMSKey != nil {
		in, out := &in.KMSKey, &out.KMSKey
		*out = new(string)
		**out = **in
	}
	if in.KMSKeyRef != nil {
		in, out := &in.KMSKeyRef, &out.KMSKeyRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.KMSKeySelector != nil {
		in, out := &in.KMSKeySelector, &out.KMSKeySelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MetastoreServiceEncryptionConfigInitParameters.
func (in *MetastoreServiceEncryptionConfigInitParameters) DeepCopy() *MetastoreServiceEncryptionConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(MetastoreServiceEncryptionConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MetastoreServiceEncryptionConfigObservation) DeepCopyInto(out *MetastoreServiceEncryptionConfigObservation) {
	*out = *in
	if in.KMSKey != nil {
		in, out := &in.KMSKey, &out.KMSKey
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MetastoreServiceEncryptionConfigObservation.
func (in *MetastoreServiceEncryptionConfigObservation) DeepCopy() *MetastoreServiceEncryptionConfigObservation {
	if in == nil {
		return nil
	}
	out := new(MetastoreServiceEncryptionConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MetastoreServiceEncryptionConfigParameters) DeepCopyInto(out *MetastoreServiceEncryptionConfigParameters) {
	*out = *in
	if in.KMSKey != nil {
		in, out := &in.KMSKey, &out.KMSKey
		*out = new(string)
		**out = **in
	}
	if in.KMSKeyRef != nil {
		in, out := &in.KMSKeyRef, &out.KMSKeyRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.KMSKeySelector != nil {
		in, out := &in.KMSKeySelector, &out.KMSKeySelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MetastoreServiceEncryptionConfigParameters.
func (in *MetastoreServiceEncryptionConfigParameters) DeepCopy() *MetastoreServiceEncryptionConfigParameters {
	if in == nil {
		return nil
	}
	out := new(MetastoreServiceEncryptionConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MetastoreServiceInitParameters) DeepCopyInto(out *MetastoreServiceInitParameters) {
	*out = *in
	if in.DatabaseType != nil {
		in, out := &in.DatabaseType, &out.DatabaseType
		*out = new(string)
		**out = **in
	}
	if in.EncryptionConfig != nil {
		in, out := &in.EncryptionConfig, &out.EncryptionConfig
		*out = make([]MetastoreServiceEncryptionConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HiveMetastoreConfig != nil {
		in, out := &in.HiveMetastoreConfig, &out.HiveMetastoreConfig
		*out = make([]HiveMetastoreConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.MaintenanceWindow != nil {
		in, out := &in.MaintenanceWindow, &out.MaintenanceWindow
		*out = make([]MaintenanceWindowInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MetadataIntegration != nil {
		in, out := &in.MetadataIntegration, &out.MetadataIntegration
		*out = make([]MetadataIntegrationInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Network != nil {
		in, out := &in.Network, &out.Network
		*out = new(string)
		**out = **in
	}
	if in.NetworkConfig != nil {
		in, out := &in.NetworkConfig, &out.NetworkConfig
		*out = make([]NetworkConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.ReleaseChannel != nil {
		in, out := &in.ReleaseChannel, &out.ReleaseChannel
		*out = new(string)
		**out = **in
	}
	if in.ScalingConfig != nil {
		in, out := &in.ScalingConfig, &out.ScalingConfig
		*out = make([]ScalingConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TelemetryConfig != nil {
		in, out := &in.TelemetryConfig, &out.TelemetryConfig
		*out = make([]TelemetryConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Tier != nil {
		in, out := &in.Tier, &out.Tier
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MetastoreServiceInitParameters.
func (in *MetastoreServiceInitParameters) DeepCopy() *MetastoreServiceInitParameters {
	if in == nil {
		return nil
	}
	out := new(MetastoreServiceInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MetastoreServiceList) DeepCopyInto(out *MetastoreServiceList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]MetastoreService, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MetastoreServiceList.
func (in *MetastoreServiceList) DeepCopy() *MetastoreServiceList {
	if in == nil {
		return nil
	}
	out := new(MetastoreServiceList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *MetastoreServiceList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MetastoreServiceObservation) DeepCopyInto(out *MetastoreServiceObservation) {
	*out = *in
	if in.ArtifactGcsURI != nil {
		in, out := &in.ArtifactGcsURI, &out.ArtifactGcsURI
		*out = new(string)
		**out = **in
	}
	if in.DatabaseType != nil {
		in, out := &in.DatabaseType, &out.DatabaseType
		*out = new(string)
		**out = **in
	}
	if in.EffectiveLabels != nil {
		in, out := &in.EffectiveLabels, &out.EffectiveLabels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.EncryptionConfig != nil {
		in, out := &in.EncryptionConfig, &out.EncryptionConfig
		*out = make([]MetastoreServiceEncryptionConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EndpointURI != nil {
		in, out := &in.EndpointURI, &out.EndpointURI
		*out = new(string)
		**out = **in
	}
	if in.HiveMetastoreConfig != nil {
		in, out := &in.HiveMetastoreConfig, &out.HiveMetastoreConfig
		*out = make([]HiveMetastoreConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.MaintenanceWindow != nil {
		in, out := &in.MaintenanceWindow, &out.MaintenanceWindow
		*out = make([]MaintenanceWindowObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MetadataIntegration != nil {
		in, out := &in.MetadataIntegration, &out.MetadataIntegration
		*out = make([]MetadataIntegrationObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Network != nil {
		in, out := &in.Network, &out.Network
		*out = new(string)
		**out = **in
	}
	if in.NetworkConfig != nil {
		in, out := &in.NetworkConfig, &out.NetworkConfig
		*out = make([]NetworkConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.ReleaseChannel != nil {
		in, out := &in.ReleaseChannel, &out.ReleaseChannel
		*out = new(string)
		**out = **in
	}
	if in.ScalingConfig != nil {
		in, out := &in.ScalingConfig, &out.ScalingConfig
		*out = make([]ScalingConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.StateMessage != nil {
		in, out := &in.StateMessage, &out.StateMessage
		*out = new(string)
		**out = **in
	}
	if in.TelemetryConfig != nil {
		in, out := &in.TelemetryConfig, &out.TelemetryConfig
		*out = make([]TelemetryConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TerraformLabels != nil {
		in, out := &in.TerraformLabels, &out.TerraformLabels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Tier != nil {
		in, out := &in.Tier, &out.Tier
		*out = new(string)
		**out = **in
	}
	if in.UID != nil {
		in, out := &in.UID, &out.UID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MetastoreServiceObservation.
func (in *MetastoreServiceObservation) DeepCopy() *MetastoreServiceObservation {
	if in == nil {
		return nil
	}
	out := new(MetastoreServiceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MetastoreServiceParameters) DeepCopyInto(out *MetastoreServiceParameters) {
	*out = *in
	if in.DatabaseType != nil {
		in, out := &in.DatabaseType, &out.DatabaseType
		*out = new(string)
		**out = **in
	}
	if in.EncryptionConfig != nil {
		in, out := &in.EncryptionConfig, &out.EncryptionConfig
		*out = make([]MetastoreServiceEncryptionConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HiveMetastoreConfig != nil {
		in, out := &in.HiveMetastoreConfig, &out.HiveMetastoreConfig
		*out = make([]HiveMetastoreConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.MaintenanceWindow != nil {
		in, out := &in.MaintenanceWindow, &out.MaintenanceWindow
		*out = make([]MaintenanceWindowParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MetadataIntegration != nil {
		in, out := &in.MetadataIntegration, &out.MetadataIntegration
		*out = make([]MetadataIntegrationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Network != nil {
		in, out := &in.Network, &out.Network
		*out = new(string)
		**out = **in
	}
	if in.NetworkConfig != nil {
		in, out := &in.NetworkConfig, &out.NetworkConfig
		*out = make([]NetworkConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.ReleaseChannel != nil {
		in, out := &in.ReleaseChannel, &out.ReleaseChannel
		*out = new(string)
		**out = **in
	}
	if in.ScalingConfig != nil {
		in, out := &in.ScalingConfig, &out.ScalingConfig
		*out = make([]ScalingConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TelemetryConfig != nil {
		in, out := &in.TelemetryConfig, &out.TelemetryConfig
		*out = make([]TelemetryConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Tier != nil {
		in, out := &in.Tier, &out.Tier
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MetastoreServiceParameters.
func (in *MetastoreServiceParameters) DeepCopy() *MetastoreServiceParameters {
	if in == nil {
		return nil
	}
	out := new(MetastoreServiceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MetastoreServiceSpec) DeepCopyInto(out *MetastoreServiceSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MetastoreServiceSpec.
func (in *MetastoreServiceSpec) DeepCopy() *MetastoreServiceSpec {
	if in == nil {
		return nil
	}
	out := new(MetastoreServiceSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MetastoreServiceStatus) DeepCopyInto(out *MetastoreServiceStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MetastoreServiceStatus.
func (in *MetastoreServiceStatus) DeepCopy() *MetastoreServiceStatus {
	if in == nil {
		return nil
	}
	out := new(MetastoreServiceStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MetricsInitParameters) DeepCopyInto(out *MetricsInitParameters) {
	*out = *in
	if in.MetricOverrides != nil {
		in, out := &in.MetricOverrides, &out.MetricOverrides
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.MetricSource != nil {
		in, out := &in.MetricSource, &out.MetricSource
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MetricsInitParameters.
func (in *MetricsInitParameters) DeepCopy() *MetricsInitParameters {
	if in == nil {
		return nil
	}
	out := new(MetricsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MetricsObservation) DeepCopyInto(out *MetricsObservation) {
	*out = *in
	if in.MetricOverrides != nil {
		in, out := &in.MetricOverrides, &out.MetricOverrides
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.MetricSource != nil {
		in, out := &in.MetricSource, &out.MetricSource
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MetricsObservation.
func (in *MetricsObservation) DeepCopy() *MetricsObservation {
	if in == nil {
		return nil
	}
	out := new(MetricsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MetricsParameters) DeepCopyInto(out *MetricsParameters) {
	*out = *in
	if in.MetricOverrides != nil {
		in, out := &in.MetricOverrides, &out.MetricOverrides
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.MetricSource != nil {
		in, out := &in.MetricSource, &out.MetricSource
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MetricsParameters.
func (in *MetricsParameters) DeepCopy() *MetricsParameters {
	if in == nil {
		return nil
	}
	out := new(MetricsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkConfigInitParameters) DeepCopyInto(out *NetworkConfigInitParameters) {
	*out = *in
	if in.Consumers != nil {
		in, out := &in.Consumers, &out.Consumers
		*out = make([]ConsumersInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkConfigInitParameters.
func (in *NetworkConfigInitParameters) DeepCopy() *NetworkConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(NetworkConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkConfigObservation) DeepCopyInto(out *NetworkConfigObservation) {
	*out = *in
	if in.Consumers != nil {
		in, out := &in.Consumers, &out.Consumers
		*out = make([]ConsumersObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkConfigObservation.
func (in *NetworkConfigObservation) DeepCopy() *NetworkConfigObservation {
	if in == nil {
		return nil
	}
	out := new(NetworkConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkConfigParameters) DeepCopyInto(out *NetworkConfigParameters) {
	*out = *in
	if in.Consumers != nil {
		in, out := &in.Consumers, &out.Consumers
		*out = make([]ConsumersParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkConfigParameters.
func (in *NetworkConfigParameters) DeepCopy() *NetworkConfigParameters {
	if in == nil {
		return nil
	}
	out := new(NetworkConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodeGroupAffinityInitParameters) DeepCopyInto(out *NodeGroupAffinityInitParameters) {
	*out = *in
	if in.NodeGroupURI != nil {
		in, out := &in.NodeGroupURI, &out.NodeGroupURI
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodeGroupAffinityInitParameters.
func (in *NodeGroupAffinityInitParameters) DeepCopy() *NodeGroupAffinityInitParameters {
	if in == nil {
		return nil
	}
	out := new(NodeGroupAffinityInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodeGroupAffinityObservation) DeepCopyInto(out *NodeGroupAffinityObservation) {
	*out = *in
	if in.NodeGroupURI != nil {
		in, out := &in.NodeGroupURI, &out.NodeGroupURI
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodeGroupAffinityObservation.
func (in *NodeGroupAffinityObservation) DeepCopy() *NodeGroupAffinityObservation {
	if in == nil {
		return nil
	}
	out := new(NodeGroupAffinityObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodeGroupAffinityParameters) DeepCopyInto(out *NodeGroupAffinityParameters) {
	*out = *in
	if in.NodeGroupURI != nil {
		in, out := &in.NodeGroupURI, &out.NodeGroupURI
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodeGroupAffinityParameters.
func (in *NodeGroupAffinityParameters) DeepCopy() *NodeGroupAffinityParameters {
	if in == nil {
		return nil
	}
	out := new(NodeGroupAffinityParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodeGroupConfigInitParameters) DeepCopyInto(out *NodeGroupConfigInitParameters) {
	*out = *in
	if in.Accelerators != nil {
		in, out := &in.Accelerators, &out.Accelerators
		*out = make([]AcceleratorsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DiskConfig != nil {
		in, out := &in.DiskConfig, &out.DiskConfig
		*out = make([]DiskConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MachineType != nil {
		in, out := &in.MachineType, &out.MachineType
		*out = new(string)
		**out = **in
	}
	if in.MinCPUPlatform != nil {
		in, out := &in.MinCPUPlatform, &out.MinCPUPlatform
		*out = new(string)
		**out = **in
	}
	if in.NumInstances != nil {
		in, out := &in.NumInstances, &out.NumInstances
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodeGroupConfigInitParameters.
func (in *NodeGroupConfigInitParameters) DeepCopy() *NodeGroupConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(NodeGroupConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodeGroupConfigObservation) DeepCopyInto(out *NodeGroupConfigObservation) {
	*out = *in
	if in.Accelerators != nil {
		in, out := &in.Accelerators, &out.Accelerators
		*out = make([]AcceleratorsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DiskConfig != nil {
		in, out := &in.DiskConfig, &out.DiskConfig
		*out = make([]DiskConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.InstanceNames != nil {
		in, out := &in.InstanceNames, &out.InstanceNames
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.MachineType != nil {
		in, out := &in.MachineType, &out.MachineType
		*out = new(string)
		**out = **in
	}
	if in.MinCPUPlatform != nil {
		in, out := &in.MinCPUPlatform, &out.MinCPUPlatform
		*out = new(string)
		**out = **in
	}
	if in.NumInstances != nil {
		in, out := &in.NumInstances, &out.NumInstances
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodeGroupConfigObservation.
func (in *NodeGroupConfigObservation) DeepCopy() *NodeGroupConfigObservation {
	if in == nil {
		return nil
	}
	out := new(NodeGroupConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodeGroupConfigParameters) DeepCopyInto(out *NodeGroupConfigParameters) {
	*out = *in
	if in.Accelerators != nil {
		in, out := &in.Accelerators, &out.Accelerators
		*out = make([]AcceleratorsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DiskConfig != nil {
		in, out := &in.DiskConfig, &out.DiskConfig
		*out = make([]DiskConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MachineType != nil {
		in, out := &in.MachineType, &out.MachineType
		*out = new(string)
		**out = **in
	}
	if in.MinCPUPlatform != nil {
		in, out := &in.MinCPUPlatform, &out.MinCPUPlatform
		*out = new(string)
		**out = **in
	}
	if in.NumInstances != nil {
		in, out := &in.NumInstances, &out.NumInstances
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodeGroupConfigParameters.
func (in *NodeGroupConfigParameters) DeepCopy() *NodeGroupConfigParameters {
	if in == nil {
		return nil
	}
	out := new(NodeGroupConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodeGroupInitParameters) DeepCopyInto(out *NodeGroupInitParameters) {
	*out = *in
	if in.NodeGroupConfig != nil {
		in, out := &in.NodeGroupConfig, &out.NodeGroupConfig
		*out = make([]NodeGroupConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Roles != nil {
		in, out := &in.Roles, &out.Roles
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodeGroupInitParameters.
func (in *NodeGroupInitParameters) DeepCopy() *NodeGroupInitParameters {
	if in == nil {
		return nil
	}
	out := new(NodeGroupInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodeGroupObservation) DeepCopyInto(out *NodeGroupObservation) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NodeGroupConfig != nil {
		in, out := &in.NodeGroupConfig, &out.NodeGroupConfig
		*out = make([]NodeGroupConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Roles != nil {
		in, out := &in.Roles, &out.Roles
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodeGroupObservation.
func (in *NodeGroupObservation) DeepCopy() *NodeGroupObservation {
	if in == nil {
		return nil
	}
	out := new(NodeGroupObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodeGroupParameters) DeepCopyInto(out *NodeGroupParameters) {
	*out = *in
	if in.NodeGroupConfig != nil {
		in, out := &in.NodeGroupConfig, &out.NodeGroupConfig
		*out = make([]NodeGroupConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Roles != nil {
		in, out := &in.Roles, &out.Roles
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodeGroupParameters.
func (in *NodeGroupParameters) DeepCopy() *NodeGroupParameters {
	if in == nil {
		return nil
	}
	out := new(NodeGroupParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodePoolConfigInitParameters) DeepCopyInto(out *NodePoolConfigInitParameters) {
	*out = *in
	if in.Autoscaling != nil {
		in, out := &in.Autoscaling, &out.Autoscaling
		*out = make([]AutoscalingInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Config != nil {
		in, out := &in.Config, &out.Config
		*out = make([]ConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Locations != nil {
		in, out := &in.Locations, &out.Locations
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodePoolConfigInitParameters.
func (in *NodePoolConfigInitParameters) DeepCopy() *NodePoolConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(NodePoolConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodePoolConfigObservation) DeepCopyInto(out *NodePoolConfigObservation) {
	*out = *in
	if in.Autoscaling != nil {
		in, out := &in.Autoscaling, &out.Autoscaling
		*out = make([]AutoscalingObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Config != nil {
		in, out := &in.Config, &out.Config
		*out = make([]ConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Locations != nil {
		in, out := &in.Locations, &out.Locations
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodePoolConfigObservation.
func (in *NodePoolConfigObservation) DeepCopy() *NodePoolConfigObservation {
	if in == nil {
		return nil
	}
	out := new(NodePoolConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodePoolConfigParameters) DeepCopyInto(out *NodePoolConfigParameters) {
	*out = *in
	if in.Autoscaling != nil {
		in, out := &in.Autoscaling, &out.Autoscaling
		*out = make([]AutoscalingParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Config != nil {
		in, out := &in.Config, &out.Config
		*out = make([]ConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Locations != nil {
		in, out := &in.Locations, &out.Locations
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodePoolConfigParameters.
func (in *NodePoolConfigParameters) DeepCopy() *NodePoolConfigParameters {
	if in == nil {
		return nil
	}
	out := new(NodePoolConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodePoolTargetInitParameters) DeepCopyInto(out *NodePoolTargetInitParameters) {
	*out = *in
	if in.NodePool != nil {
		in, out := &in.NodePool, &out.NodePool
		*out = new(string)
		**out = **in
	}
	if in.NodePoolConfig != nil {
		in, out := &in.NodePoolConfig, &out.NodePoolConfig
		*out = make([]NodePoolConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Roles != nil {
		in, out := &in.Roles, &out.Roles
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodePoolTargetInitParameters.
func (in *NodePoolTargetInitParameters) DeepCopy() *NodePoolTargetInitParameters {
	if in == nil {
		return nil
	}
	out := new(NodePoolTargetInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodePoolTargetObservation) DeepCopyInto(out *NodePoolTargetObservation) {
	*out = *in
	if in.NodePool != nil {
		in, out := &in.NodePool, &out.NodePool
		*out = new(string)
		**out = **in
	}
	if in.NodePoolConfig != nil {
		in, out := &in.NodePoolConfig, &out.NodePoolConfig
		*out = make([]NodePoolConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Roles != nil {
		in, out := &in.Roles, &out.Roles
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodePoolTargetObservation.
func (in *NodePoolTargetObservation) DeepCopy() *NodePoolTargetObservation {
	if in == nil {
		return nil
	}
	out := new(NodePoolTargetObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodePoolTargetParameters) DeepCopyInto(out *NodePoolTargetParameters) {
	*out = *in
	if in.NodePool != nil {
		in, out := &in.NodePool, &out.NodePool
		*out = new(string)
		**out = **in
	}
	if in.NodePoolConfig != nil {
		in, out := &in.NodePoolConfig, &out.NodePoolConfig
		*out = make([]NodePoolConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Roles != nil {
		in, out := &in.Roles, &out.Roles
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodePoolTargetParameters.
func (in *NodePoolTargetParameters) DeepCopy() *NodePoolTargetParameters {
	if in == nil {
		return nil
	}
	out := new(NodePoolTargetParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ParametersInitParameters) DeepCopyInto(out *ParametersInitParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Fields != nil {
		in, out := &in.Fields, &out.Fields
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Validation != nil {
		in, out := &in.Validation, &out.Validation
		*out = make([]ValidationInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ParametersInitParameters.
func (in *ParametersInitParameters) DeepCopy() *ParametersInitParameters {
	if in == nil {
		return nil
	}
	out := new(ParametersInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ParametersObservation) DeepCopyInto(out *ParametersObservation) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Fields != nil {
		in, out := &in.Fields, &out.Fields
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Validation != nil {
		in, out := &in.Validation, &out.Validation
		*out = make([]ValidationObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ParametersObservation.
func (in *ParametersObservation) DeepCopy() *ParametersObservation {
	if in == nil {
		return nil
	}
	out := new(ParametersObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ParametersParameters) DeepCopyInto(out *ParametersParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Fields != nil {
		in, out := &in.Fields, &out.Fields
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Validation != nil {
		in, out := &in.Validation, &out.Validation
		*out = make([]ValidationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ParametersParameters.
func (in *ParametersParameters) DeepCopy() *ParametersParameters {
	if in == nil {
		return nil
	}
	out := new(ParametersParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PigConfigInitParameters) DeepCopyInto(out *PigConfigInitParameters) {
	*out = *in
	if in.ContinueOnFailure != nil {
		in, out := &in.ContinueOnFailure, &out.ContinueOnFailure
		*out = new(bool)
		**out = **in
	}
	if in.JarFileUris != nil {
		in, out := &in.JarFileUris, &out.JarFileUris
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.LoggingConfig != nil {
		in, out := &in.LoggingConfig, &out.LoggingConfig
		*out = make([]PigConfigLoggingConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Properties != nil {
		in, out := &in.Properties, &out.Properties
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.QueryFileURI != nil {
		in, out := &in.QueryFileURI, &out.QueryFileURI
		*out = new(string)
		**out = **in
	}
	if in.QueryList != nil {
		in, out := &in.QueryList, &out.QueryList
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ScriptVariables != nil {
		in, out := &in.ScriptVariables, &out.ScriptVariables
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PigConfigInitParameters.
func (in *PigConfigInitParameters) DeepCopy() *PigConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(PigConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PigConfigLoggingConfigInitParameters) DeepCopyInto(out *PigConfigLoggingConfigInitParameters) {
	*out = *in
	if in.DriverLogLevels != nil {
		in, out := &in.DriverLogLevels, &out.DriverLogLevels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PigConfigLoggingConfigInitParameters.
func (in *PigConfigLoggingConfigInitParameters) DeepCopy() *PigConfigLoggingConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(PigConfigLoggingConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PigConfigLoggingConfigObservation) DeepCopyInto(out *PigConfigLoggingConfigObservation) {
	*out = *in
	if in.DriverLogLevels != nil {
		in, out := &in.DriverLogLevels, &out.DriverLogLevels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PigConfigLoggingConfigObservation.
func (in *PigConfigLoggingConfigObservation) DeepCopy() *PigConfigLoggingConfigObservation {
	if in == nil {
		return nil
	}
	out := new(PigConfigLoggingConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PigConfigLoggingConfigParameters) DeepCopyInto(out *PigConfigLoggingConfigParameters) {
	*out = *in
	if in.DriverLogLevels != nil {
		in, out := &in.DriverLogLevels, &out.DriverLogLevels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PigConfigLoggingConfigParameters.
func (in *PigConfigLoggingConfigParameters) DeepCopy() *PigConfigLoggingConfigParameters {
	if in == nil {
		return nil
	}
	out := new(PigConfigLoggingConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PigConfigObservation) DeepCopyInto(out *PigConfigObservation) {
	*out = *in
	if in.ContinueOnFailure != nil {
		in, out := &in.ContinueOnFailure, &out.ContinueOnFailure
		*out = new(bool)
		**out = **in
	}
	if in.JarFileUris != nil {
		in, out := &in.JarFileUris, &out.JarFileUris
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.LoggingConfig != nil {
		in, out := &in.LoggingConfig, &out.LoggingConfig
		*out = make([]PigConfigLoggingConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Properties != nil {
		in, out := &in.Properties, &out.Properties
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.QueryFileURI != nil {
		in, out := &in.QueryFileURI, &out.QueryFileURI
		*out = new(string)
		**out = **in
	}
	if in.QueryList != nil {
		in, out := &in.QueryList, &out.QueryList
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ScriptVariables != nil {
		in, out := &in.ScriptVariables, &out.ScriptVariables
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PigConfigObservation.
func (in *PigConfigObservation) DeepCopy() *PigConfigObservation {
	if in == nil {
		return nil
	}
	out := new(PigConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PigConfigParameters) DeepCopyInto(out *PigConfigParameters) {
	*out = *in
	if in.ContinueOnFailure != nil {
		in, out := &in.ContinueOnFailure, &out.ContinueOnFailure
		*out = new(bool)
		**out = **in
	}
	if in.JarFileUris != nil {
		in, out := &in.JarFileUris, &out.JarFileUris
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.LoggingConfig != nil {
		in, out := &in.LoggingConfig, &out.LoggingConfig
		*out = make([]PigConfigLoggingConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Properties != nil {
		in, out := &in.Properties, &out.Properties
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.QueryFileURI != nil {
		in, out := &in.QueryFileURI, &out.QueryFileURI
		*out = new(string)
		**out = **in
	}
	if in.QueryList != nil {
		in, out := &in.QueryList, &out.QueryList
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ScriptVariables != nil {
		in, out := &in.ScriptVariables, &out.ScriptVariables
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PigConfigParameters.
func (in *PigConfigParameters) DeepCopy() *PigConfigParameters {
	if in == nil {
		return nil
	}
	out := new(PigConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PigJobInitParameters) DeepCopyInto(out *PigJobInitParameters) {
	*out = *in
	if in.ContinueOnFailure != nil {
		in, out := &in.ContinueOnFailure, &out.ContinueOnFailure
		*out = new(bool)
		**out = **in
	}
	if in.JarFileUris != nil {
		in, out := &in.JarFileUris, &out.JarFileUris
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.LoggingConfig != nil {
		in, out := &in.LoggingConfig, &out.LoggingConfig
		*out = make([]PigJobLoggingConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Properties != nil {
		in, out := &in.Properties, &out.Properties
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.QueryFileURI != nil {
		in, out := &in.QueryFileURI, &out.QueryFileURI
		*out = new(string)
		**out = **in
	}
	if in.QueryList != nil {
		in, out := &in.QueryList, &out.QueryList
		*out = make([]PigJobQueryListInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ScriptVariables != nil {
		in, out := &in.ScriptVariables, &out.ScriptVariables
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PigJobInitParameters.
func (in *PigJobInitParameters) DeepCopy() *PigJobInitParameters {
	if in == nil {
		return nil
	}
	out := new(PigJobInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PigJobLoggingConfigInitParameters) DeepCopyInto(out *PigJobLoggingConfigInitParameters) {
	*out = *in
	if in.DriverLogLevels != nil {
		in, out := &in.DriverLogLevels, &out.DriverLogLevels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PigJobLoggingConfigInitParameters.
func (in *PigJobLoggingConfigInitParameters) DeepCopy() *PigJobLoggingConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(PigJobLoggingConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PigJobLoggingConfigObservation) DeepCopyInto(out *PigJobLoggingConfigObservation) {
	*out = *in
	if in.DriverLogLevels != nil {
		in, out := &in.DriverLogLevels, &out.DriverLogLevels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PigJobLoggingConfigObservation.
func (in *PigJobLoggingConfigObservation) DeepCopy() *PigJobLoggingConfigObservation {
	if in == nil {
		return nil
	}
	out := new(PigJobLoggingConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PigJobLoggingConfigParameters) DeepCopyInto(out *PigJobLoggingConfigParameters) {
	*out = *in
	if in.DriverLogLevels != nil {
		in, out := &in.DriverLogLevels, &out.DriverLogLevels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PigJobLoggingConfigParameters.
func (in *PigJobLoggingConfigParameters) DeepCopy() *PigJobLoggingConfigParameters {
	if in == nil {
		return nil
	}
	out := new(PigJobLoggingConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PigJobObservation) DeepCopyInto(out *PigJobObservation) {
	*out = *in
	if in.ContinueOnFailure != nil {
		in, out := &in.ContinueOnFailure, &out.ContinueOnFailure
		*out = new(bool)
		**out = **in
	}
	if in.JarFileUris != nil {
		in, out := &in.JarFileUris, &out.JarFileUris
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.LoggingConfig != nil {
		in, out := &in.LoggingConfig, &out.LoggingConfig
		*out = make([]PigJobLoggingConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Properties != nil {
		in, out := &in.Properties, &out.Properties
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.QueryFileURI != nil {
		in, out := &in.QueryFileURI, &out.QueryFileURI
		*out = new(string)
		**out = **in
	}
	if in.QueryList != nil {
		in, out := &in.QueryList, &out.QueryList
		*out = make([]PigJobQueryListObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ScriptVariables != nil {
		in, out := &in.ScriptVariables, &out.ScriptVariables
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PigJobObservation.
func (in *PigJobObservation) DeepCopy() *PigJobObservation {
	if in == nil {
		return nil
	}
	out := new(PigJobObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PigJobParameters) DeepCopyInto(out *PigJobParameters) {
	*out = *in
	if in.ContinueOnFailure != nil {
		in, out := &in.ContinueOnFailure, &out.ContinueOnFailure
		*out = new(bool)
		**out = **in
	}
	if in.JarFileUris != nil {
		in, out := &in.JarFileUris, &out.JarFileUris
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.LoggingConfig != nil {
		in, out := &in.LoggingConfig, &out.LoggingConfig
		*out = make([]PigJobLoggingConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Properties != nil {
		in, out := &in.Properties, &out.Properties
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.QueryFileURI != nil {
		in, out := &in.QueryFileURI, &out.QueryFileURI
		*out = new(string)
		**out = **in
	}
	if in.QueryList != nil {
		in, out := &in.QueryList, &out.QueryList
		*out = make([]PigJobQueryListParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ScriptVariables != nil {
		in, out := &in.ScriptVariables, &out.ScriptVariables
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PigJobParameters.
func (in *PigJobParameters) DeepCopy() *PigJobParameters {
	if in == nil {
		return nil
	}
	out := new(PigJobParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PigJobQueryListInitParameters) DeepCopyInto(out *PigJobQueryListInitParameters) {
	*out = *in
	if in.Queries != nil {
		in, out := &in.Queries, &out.Queries
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PigJobQueryListInitParameters.
func (in *PigJobQueryListInitParameters) DeepCopy() *PigJobQueryListInitParameters {
	if in == nil {
		return nil
	}
	out := new(PigJobQueryListInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PigJobQueryListObservation) DeepCopyInto(out *PigJobQueryListObservation) {
	*out = *in
	if in.Queries != nil {
		in, out := &in.Queries, &out.Queries
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PigJobQueryListObservation.
func (in *PigJobQueryListObservation) DeepCopy() *PigJobQueryListObservation {
	if in == nil {
		return nil
	}
	out := new(PigJobQueryListObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PigJobQueryListParameters) DeepCopyInto(out *PigJobQueryListParameters) {
	*out = *in
	if in.Queries != nil {
		in, out := &in.Queries, &out.Queries
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PigJobQueryListParameters.
func (in *PigJobQueryListParameters) DeepCopy() *PigJobQueryListParameters {
	if in == nil {
		return nil
	}
	out := new(PigJobQueryListParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PlacementInitParameters) DeepCopyInto(out *PlacementInitParameters) {
	*out = *in
	if in.ClusterName != nil {
		in, out := &in.ClusterName, &out.ClusterName
		*out = new(string)
		**out = **in
	}
	if in.ClusterNameRef != nil {
		in, out := &in.ClusterNameRef, &out.ClusterNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ClusterNameSelector != nil {
		in, out := &in.ClusterNameSelector, &out.ClusterNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PlacementInitParameters.
func (in *PlacementInitParameters) DeepCopy() *PlacementInitParameters {
	if in == nil {
		return nil
	}
	out := new(PlacementInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PlacementObservation) DeepCopyInto(out *PlacementObservation) {
	*out = *in
	if in.ClusterName != nil {
		in, out := &in.ClusterName, &out.ClusterName
		*out = new(string)
		**out = **in
	}
	if in.ClusterUUID != nil {
		in, out := &in.ClusterUUID, &out.ClusterUUID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PlacementObservation.
func (in *PlacementObservation) DeepCopy() *PlacementObservation {
	if in == nil {
		return nil
	}
	out := new(PlacementObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PlacementParameters) DeepCopyInto(out *PlacementParameters) {
	*out = *in
	if in.ClusterName != nil {
		in, out := &in.ClusterName, &out.ClusterName
		*out = new(string)
		**out = **in
	}
	if in.ClusterNameRef != nil {
		in, out := &in.ClusterNameRef, &out.ClusterNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ClusterNameSelector != nil {
		in, out := &in.ClusterNameSelector, &out.ClusterNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PlacementParameters.
func (in *PlacementParameters) DeepCopy() *PlacementParameters {
	if in == nil {
		return nil
	}
	out := new(PlacementParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PreemptibleWorkerConfigDiskConfigInitParameters) DeepCopyInto(out *PreemptibleWorkerConfigDiskConfigInitParameters) {
	*out = *in
	if in.BootDiskSizeGb != nil {
		in, out := &in.BootDiskSizeGb, &out.BootDiskSizeGb
		*out = new(float64)
		**out = **in
	}
	if in.BootDiskType != nil {
		in, out := &in.BootDiskType, &out.BootDiskType
		*out = new(string)
		**out = **in
	}
	if in.NumLocalSsds != nil {
		in, out := &in.NumLocalSsds, &out.NumLocalSsds
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PreemptibleWorkerConfigDiskConfigInitParameters.
func (in *PreemptibleWorkerConfigDiskConfigInitParameters) DeepCopy() *PreemptibleWorkerConfigDiskConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(PreemptibleWorkerConfigDiskConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PreemptibleWorkerConfigDiskConfigObservation) DeepCopyInto(out *PreemptibleWorkerConfigDiskConfigObservation) {
	*out = *in
	if in.BootDiskSizeGb != nil {
		in, out := &in.BootDiskSizeGb, &out.BootDiskSizeGb
		*out = new(float64)
		**out = **in
	}
	if in.BootDiskType != nil {
		in, out := &in.BootDiskType, &out.BootDiskType
		*out = new(string)
		**out = **in
	}
	if in.NumLocalSsds != nil {
		in, out := &in.NumLocalSsds, &out.NumLocalSsds
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PreemptibleWorkerConfigDiskConfigObservation.
func (in *PreemptibleWorkerConfigDiskConfigObservation) DeepCopy() *PreemptibleWorkerConfigDiskConfigObservation {
	if in == nil {
		return nil
	}
	out := new(PreemptibleWorkerConfigDiskConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PreemptibleWorkerConfigDiskConfigParameters) DeepCopyInto(out *PreemptibleWorkerConfigDiskConfigParameters) {
	*out = *in
	if in.BootDiskSizeGb != nil {
		in, out := &in.BootDiskSizeGb, &out.BootDiskSizeGb
		*out = new(float64)
		**out = **in
	}
	if in.BootDiskType != nil {
		in, out := &in.BootDiskType, &out.BootDiskType
		*out = new(string)
		**out = **in
	}
	if in.NumLocalSsds != nil {
		in, out := &in.NumLocalSsds, &out.NumLocalSsds
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PreemptibleWorkerConfigDiskConfigParameters.
func (in *PreemptibleWorkerConfigDiskConfigParameters) DeepCopy() *PreemptibleWorkerConfigDiskConfigParameters {
	if in == nil {
		return nil
	}
	out := new(PreemptibleWorkerConfigDiskConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PreemptibleWorkerConfigInitParameters) DeepCopyInto(out *PreemptibleWorkerConfigInitParameters) {
	*out = *in
	if in.DiskConfig != nil {
		in, out := &in.DiskConfig, &out.DiskConfig
		*out = make([]PreemptibleWorkerConfigDiskConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.InstanceFlexibilityPolicy != nil {
		in, out := &in.InstanceFlexibilityPolicy, &out.InstanceFlexibilityPolicy
		*out = make([]InstanceFlexibilityPolicyInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NumInstances != nil {
		in, out := &in.NumInstances, &out.NumInstances
		*out = new(float64)
		**out = **in
	}
	if in.Preemptibility != nil {
		in, out := &in.Preemptibility, &out.Preemptibility
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PreemptibleWorkerConfigInitParameters.
func (in *PreemptibleWorkerConfigInitParameters) DeepCopy() *PreemptibleWorkerConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(PreemptibleWorkerConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PreemptibleWorkerConfigObservation) DeepCopyInto(out *PreemptibleWorkerConfigObservation) {
	*out = *in
	if in.DiskConfig != nil {
		in, out := &in.DiskConfig, &out.DiskConfig
		*out = make([]PreemptibleWorkerConfigDiskConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.InstanceFlexibilityPolicy != nil {
		in, out := &in.InstanceFlexibilityPolicy, &out.InstanceFlexibilityPolicy
		*out = make([]InstanceFlexibilityPolicyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.InstanceNames != nil {
		in, out := &in.InstanceNames, &out.InstanceNames
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.NumInstances != nil {
		in, out := &in.NumInstances, &out.NumInstances
		*out = new(float64)
		**out = **in
	}
	if in.Preemptibility != nil {
		in, out := &in.Preemptibility, &out.Preemptibility
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PreemptibleWorkerConfigObservation.
func (in *PreemptibleWorkerConfigObservation) DeepCopy() *PreemptibleWorkerConfigObservation {
	if in == nil {
		return nil
	}
	out := new(PreemptibleWorkerConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PreemptibleWorkerConfigParameters) DeepCopyInto(out *PreemptibleWorkerConfigParameters) {
	*out = *in
	if in.DiskConfig != nil {
		in, out := &in.DiskConfig, &out.DiskConfig
		*out = make([]PreemptibleWorkerConfigDiskConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.InstanceFlexibilityPolicy != nil {
		in, out := &in.InstanceFlexibilityPolicy, &out.InstanceFlexibilityPolicy
		*out = make([]InstanceFlexibilityPolicyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NumInstances != nil {
		in, out := &in.NumInstances, &out.NumInstances
		*out = new(float64)
		**out = **in
	}
	if in.Preemptibility != nil {
		in, out := &in.Preemptibility, &out.Preemptibility
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PreemptibleWorkerConfigParameters.
func (in *PreemptibleWorkerConfigParameters) DeepCopy() *PreemptibleWorkerConfigParameters {
	if in == nil {
		return nil
	}
	out := new(PreemptibleWorkerConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrestoConfigInitParameters) DeepCopyInto(out *PrestoConfigInitParameters) {
	*out = *in
	if in.ClientTags != nil {
		in, out := &in.ClientTags, &out.ClientTags
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ContinueOnFailure != nil {
		in, out := &in.ContinueOnFailure, &out.ContinueOnFailure
		*out = new(bool)
		**out = **in
	}
	if in.LoggingConfig != nil {
		in, out := &in.LoggingConfig, &out.LoggingConfig
		*out = make([]PrestoConfigLoggingConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OutputFormat != nil {
		in, out := &in.OutputFormat, &out.OutputFormat
		*out = new(string)
		**out = **in
	}
	if in.Properties != nil {
		in, out := &in.Properties, &out.Properties
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.QueryFileURI != nil {
		in, out := &in.QueryFileURI, &out.QueryFileURI
		*out = new(string)
		**out = **in
	}
	if in.QueryList != nil {
		in, out := &in.QueryList, &out.QueryList
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrestoConfigInitParameters.
func (in *PrestoConfigInitParameters) DeepCopy() *PrestoConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(PrestoConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrestoConfigLoggingConfigInitParameters) DeepCopyInto(out *PrestoConfigLoggingConfigInitParameters) {
	*out = *in
	if in.DriverLogLevels != nil {
		in, out := &in.DriverLogLevels, &out.DriverLogLevels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrestoConfigLoggingConfigInitParameters.
func (in *PrestoConfigLoggingConfigInitParameters) DeepCopy() *PrestoConfigLoggingConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(PrestoConfigLoggingConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrestoConfigLoggingConfigObservation) DeepCopyInto(out *PrestoConfigLoggingConfigObservation) {
	*out = *in
	if in.DriverLogLevels != nil {
		in, out := &in.DriverLogLevels, &out.DriverLogLevels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrestoConfigLoggingConfigObservation.
func (in *PrestoConfigLoggingConfigObservation) DeepCopy() *PrestoConfigLoggingConfigObservation {
	if in == nil {
		return nil
	}
	out := new(PrestoConfigLoggingConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrestoConfigLoggingConfigParameters) DeepCopyInto(out *PrestoConfigLoggingConfigParameters) {
	*out = *in
	if in.DriverLogLevels != nil {
		in, out := &in.DriverLogLevels, &out.DriverLogLevels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrestoConfigLoggingConfigParameters.
func (in *PrestoConfigLoggingConfigParameters) DeepCopy() *PrestoConfigLoggingConfigParameters {
	if in == nil {
		return nil
	}
	out := new(PrestoConfigLoggingConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrestoConfigObservation) DeepCopyInto(out *PrestoConfigObservation) {
	*out = *in
	if in.ClientTags != nil {
		in, out := &in.ClientTags, &out.ClientTags
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ContinueOnFailure != nil {
		in, out := &in.ContinueOnFailure, &out.ContinueOnFailure
		*out = new(bool)
		**out = **in
	}
	if in.LoggingConfig != nil {
		in, out := &in.LoggingConfig, &out.LoggingConfig
		*out = make([]PrestoConfigLoggingConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OutputFormat != nil {
		in, out := &in.OutputFormat, &out.OutputFormat
		*out = new(string)
		**out = **in
	}
	if in.Properties != nil {
		in, out := &in.Properties, &out.Properties
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.QueryFileURI != nil {
		in, out := &in.QueryFileURI, &out.QueryFileURI
		*out = new(string)
		**out = **in
	}
	if in.QueryList != nil {
		in, out := &in.QueryList, &out.QueryList
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrestoConfigObservation.
func (in *PrestoConfigObservation) DeepCopy() *PrestoConfigObservation {
	if in == nil {
		return nil
	}
	out := new(PrestoConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrestoConfigParameters) DeepCopyInto(out *PrestoConfigParameters) {
	*out = *in
	if in.ClientTags != nil {
		in, out := &in.ClientTags, &out.ClientTags
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ContinueOnFailure != nil {
		in, out := &in.ContinueOnFailure, &out.ContinueOnFailure
		*out = new(bool)
		**out = **in
	}
	if in.LoggingConfig != nil {
		in, out := &in.LoggingConfig, &out.LoggingConfig
		*out = make([]PrestoConfigLoggingConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OutputFormat != nil {
		in, out := &in.OutputFormat, &out.OutputFormat
		*out = new(string)
		**out = **in
	}
	if in.Properties != nil {
		in, out := &in.Properties, &out.Properties
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.QueryFileURI != nil {
		in, out := &in.QueryFileURI, &out.QueryFileURI
		*out = new(string)
		**out = **in
	}
	if in.QueryList != nil {
		in, out := &in.QueryList, &out.QueryList
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrestoConfigParameters.
func (in *PrestoConfigParameters) DeepCopy() *PrestoConfigParameters {
	if in == nil {
		return nil
	}
	out := new(PrestoConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrestoJobInitParameters) DeepCopyInto(out *PrestoJobInitParameters) {
	*out = *in
	if in.ClientTags != nil {
		in, out := &in.ClientTags, &out.ClientTags
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ContinueOnFailure != nil {
		in, out := &in.ContinueOnFailure, &out.ContinueOnFailure
		*out = new(bool)
		**out = **in
	}
	if in.LoggingConfig != nil {
		in, out := &in.LoggingConfig, &out.LoggingConfig
		*out = make([]PrestoJobLoggingConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OutputFormat != nil {
		in, out := &in.OutputFormat, &out.OutputFormat
		*out = new(string)
		**out = **in
	}
	if in.Properties != nil {
		in, out := &in.Properties, &out.Properties
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.QueryFileURI != nil {
		in, out := &in.QueryFileURI, &out.QueryFileURI
		*out = new(string)
		**out = **in
	}
	if in.QueryList != nil {
		in, out := &in.QueryList, &out.QueryList
		*out = make([]PrestoJobQueryListInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrestoJobInitParameters.
func (in *PrestoJobInitParameters) DeepCopy() *PrestoJobInitParameters {
	if in == nil {
		return nil
	}
	out := new(PrestoJobInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrestoJobLoggingConfigInitParameters) DeepCopyInto(out *PrestoJobLoggingConfigInitParameters) {
	*out = *in
	if in.DriverLogLevels != nil {
		in, out := &in.DriverLogLevels, &out.DriverLogLevels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrestoJobLoggingConfigInitParameters.
func (in *PrestoJobLoggingConfigInitParameters) DeepCopy() *PrestoJobLoggingConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(PrestoJobLoggingConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrestoJobLoggingConfigObservation) DeepCopyInto(out *PrestoJobLoggingConfigObservation) {
	*out = *in
	if in.DriverLogLevels != nil {
		in, out := &in.DriverLogLevels, &out.DriverLogLevels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrestoJobLoggingConfigObservation.
func (in *PrestoJobLoggingConfigObservation) DeepCopy() *PrestoJobLoggingConfigObservation {
	if in == nil {
		return nil
	}
	out := new(PrestoJobLoggingConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrestoJobLoggingConfigParameters) DeepCopyInto(out *PrestoJobLoggingConfigParameters) {
	*out = *in
	if in.DriverLogLevels != nil {
		in, out := &in.DriverLogLevels, &out.DriverLogLevels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrestoJobLoggingConfigParameters.
func (in *PrestoJobLoggingConfigParameters) DeepCopy() *PrestoJobLoggingConfigParameters {
	if in == nil {
		return nil
	}
	out := new(PrestoJobLoggingConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrestoJobObservation) DeepCopyInto(out *PrestoJobObservation) {
	*out = *in
	if in.ClientTags != nil {
		in, out := &in.ClientTags, &out.ClientTags
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ContinueOnFailure != nil {
		in, out := &in.ContinueOnFailure, &out.ContinueOnFailure
		*out = new(bool)
		**out = **in
	}
	if in.LoggingConfig != nil {
		in, out := &in.LoggingConfig, &out.LoggingConfig
		*out = make([]PrestoJobLoggingConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OutputFormat != nil {
		in, out := &in.OutputFormat, &out.OutputFormat
		*out = new(string)
		**out = **in
	}
	if in.Properties != nil {
		in, out := &in.Properties, &out.Properties
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.QueryFileURI != nil {
		in, out := &in.QueryFileURI, &out.QueryFileURI
		*out = new(string)
		**out = **in
	}
	if in.QueryList != nil {
		in, out := &in.QueryList, &out.QueryList
		*out = make([]PrestoJobQueryListObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrestoJobObservation.
func (in *PrestoJobObservation) DeepCopy() *PrestoJobObservation {
	if in == nil {
		return nil
	}
	out := new(PrestoJobObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrestoJobParameters) DeepCopyInto(out *PrestoJobParameters) {
	*out = *in
	if in.ClientTags != nil {
		in, out := &in.ClientTags, &out.ClientTags
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ContinueOnFailure != nil {
		in, out := &in.ContinueOnFailure, &out.ContinueOnFailure
		*out = new(bool)
		**out = **in
	}
	if in.LoggingConfig != nil {
		in, out := &in.LoggingConfig, &out.LoggingConfig
		*out = make([]PrestoJobLoggingConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OutputFormat != nil {
		in, out := &in.OutputFormat, &out.OutputFormat
		*out = new(string)
		**out = **in
	}
	if in.Properties != nil {
		in, out := &in.Properties, &out.Properties
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.QueryFileURI != nil {
		in, out := &in.QueryFileURI, &out.QueryFileURI
		*out = new(string)
		**out = **in
	}
	if in.QueryList != nil {
		in, out := &in.QueryList, &out.QueryList
		*out = make([]PrestoJobQueryListParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrestoJobParameters.
func (in *PrestoJobParameters) DeepCopy() *PrestoJobParameters {
	if in == nil {
		return nil
	}
	out := new(PrestoJobParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrestoJobQueryListInitParameters) DeepCopyInto(out *PrestoJobQueryListInitParameters) {
	*out = *in
	if in.Queries != nil {
		in, out := &in.Queries, &out.Queries
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrestoJobQueryListInitParameters.
func (in *PrestoJobQueryListInitParameters) DeepCopy() *PrestoJobQueryListInitParameters {
	if in == nil {
		return nil
	}
	out := new(PrestoJobQueryListInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrestoJobQueryListObservation) DeepCopyInto(out *PrestoJobQueryListObservation) {
	*out = *in
	if in.Queries != nil {
		in, out := &in.Queries, &out.Queries
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrestoJobQueryListObservation.
func (in *PrestoJobQueryListObservation) DeepCopy() *PrestoJobQueryListObservation {
	if in == nil {
		return nil
	}
	out := new(PrestoJobQueryListObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrestoJobQueryListParameters) DeepCopyInto(out *PrestoJobQueryListParameters) {
	*out = *in
	if in.Queries != nil {
		in, out := &in.Queries, &out.Queries
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrestoJobQueryListParameters.
func (in *PrestoJobQueryListParameters) DeepCopy() *PrestoJobQueryListParameters {
	if in == nil {
		return nil
	}
	out := new(PrestoJobQueryListParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PysparkConfigInitParameters) DeepCopyInto(out *PysparkConfigInitParameters) {
	*out = *in
	if in.ArchiveUris != nil {
		in, out := &in.ArchiveUris, &out.ArchiveUris
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Args != nil {
		in, out := &in.Args, &out.Args
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.FileUris != nil {
		in, out := &in.FileUris, &out.FileUris
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.JarFileUris != nil {
		in, out := &in.JarFileUris, &out.JarFileUris
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.LoggingConfig != nil {
		in, out := &in.LoggingConfig, &out.LoggingConfig
		*out = make([]PysparkConfigLoggingConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MainPythonFileURI != nil {
		in, out := &in.MainPythonFileURI, &out.MainPythonFileURI
		*out = new(string)
		**out = **in
	}
	if in.Properties != nil {
		in, out := &in.Properties, &out.Properties
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.PythonFileUris != nil {
		in, out := &in.PythonFileUris, &out.PythonFileUris
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PysparkConfigInitParameters.
func (in *PysparkConfigInitParameters) DeepCopy() *PysparkConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(PysparkConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PysparkConfigLoggingConfigInitParameters) DeepCopyInto(out *PysparkConfigLoggingConfigInitParameters) {
	*out = *in
	if in.DriverLogLevels != nil {
		in, out := &in.DriverLogLevels, &out.DriverLogLevels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PysparkConfigLoggingConfigInitParameters.
func (in *PysparkConfigLoggingConfigInitParameters) DeepCopy() *PysparkConfigLoggingConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(PysparkConfigLoggingConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PysparkConfigLoggingConfigObservation) DeepCopyInto(out *PysparkConfigLoggingConfigObservation) {
	*out = *in
	if in.DriverLogLevels != nil {
		in, out := &in.DriverLogLevels, &out.DriverLogLevels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PysparkConfigLoggingConfigObservation.
func (in *PysparkConfigLoggingConfigObservation) DeepCopy() *PysparkConfigLoggingConfigObservation {
	if in == nil {
		return nil
	}
	out := new(PysparkConfigLoggingConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PysparkConfigLoggingConfigParameters) DeepCopyInto(out *PysparkConfigLoggingConfigParameters) {
	*out = *in
	if in.DriverLogLevels != nil {
		in, out := &in.DriverLogLevels, &out.DriverLogLevels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PysparkConfigLoggingConfigParameters.
func (in *PysparkConfigLoggingConfigParameters) DeepCopy() *PysparkConfigLoggingConfigParameters {
	if in == nil {
		return nil
	}
	out := new(PysparkConfigLoggingConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PysparkConfigObservation) DeepCopyInto(out *PysparkConfigObservation) {
	*out = *in
	if in.ArchiveUris != nil {
		in, out := &in.ArchiveUris, &out.ArchiveUris
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Args != nil {
		in, out := &in.Args, &out.Args
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.FileUris != nil {
		in, out := &in.FileUris, &out.FileUris
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.JarFileUris != nil {
		in, out := &in.JarFileUris, &out.JarFileUris
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.LoggingConfig != nil {
		in, out := &in.LoggingConfig, &out.LoggingConfig
		*out = make([]PysparkConfigLoggingConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MainPythonFileURI != nil {
		in, out := &in.MainPythonFileURI, &out.MainPythonFileURI
		*out = new(string)
		**out = **in
	}
	if in.Properties != nil {
		in, out := &in.Properties, &out.Properties
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.PythonFileUris != nil {
		in, out := &in.PythonFileUris, &out.PythonFileUris
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PysparkConfigObservation.
func (in *PysparkConfigObservation) DeepCopy() *PysparkConfigObservation {
	if in == nil {
		return nil
	}
	out := new(PysparkConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PysparkConfigParameters) DeepCopyInto(out *PysparkConfigParameters) {
	*out = *in
	if in.ArchiveUris != nil {
		in, out := &in.ArchiveUris, &out.ArchiveUris
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Args != nil {
		in, out := &in.Args, &out.Args
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.FileUris != nil {
		in, out := &in.FileUris, &out.FileUris
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.JarFileUris != nil {
		in, out := &in.JarFileUris, &out.JarFileUris
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.LoggingConfig != nil {
		in, out := &in.LoggingConfig, &out.LoggingConfig
		*out = make([]PysparkConfigLoggingConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MainPythonFileURI != nil {
		in, out := &in.MainPythonFileURI, &out.MainPythonFileURI
		*out = new(string)
		**out = **in
	}
	if in.Properties != nil {
		in, out := &in.Properties, &out.Properties
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.PythonFileUris != nil {
		in, out := &in.PythonFileUris, &out.PythonFileUris
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PysparkConfigParameters.
func (in *PysparkConfigParameters) DeepCopy() *PysparkConfigParameters {
	if in == nil {
		return nil
	}
	out := new(PysparkConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PysparkJobInitParameters) DeepCopyInto(out *PysparkJobInitParameters) {
	*out = *in
	if in.ArchiveUris != nil {
		in, out := &in.ArchiveUris, &out.ArchiveUris
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Args != nil {
		in, out := &in.Args, &out.Args
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.FileUris != nil {
		in, out := &in.FileUris, &out.FileUris
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.JarFileUris != nil {
		in, out := &in.JarFileUris, &out.JarFileUris
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.LoggingConfig != nil {
		in, out := &in.LoggingConfig, &out.LoggingConfig
		*out = make([]PysparkJobLoggingConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MainPythonFileURI != nil {
		in, out := &in.MainPythonFileURI, &out.MainPythonFileURI
		*out = new(string)
		**out = **in
	}
	if in.Properties != nil {
		in, out := &in.Properties, &out.Properties
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.PythonFileUris != nil {
		in, out := &in.PythonFileUris, &out.PythonFileUris
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PysparkJobInitParameters.
func (in *PysparkJobInitParameters) DeepCopy() *PysparkJobInitParameters {
	if in == nil {
		return nil
	}
	out := new(PysparkJobInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PysparkJobLoggingConfigInitParameters) DeepCopyInto(out *PysparkJobLoggingConfigInitParameters) {
	*out = *in
	if in.DriverLogLevels != nil {
		in, out := &in.DriverLogLevels, &out.DriverLogLevels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PysparkJobLoggingConfigInitParameters.
func (in *PysparkJobLoggingConfigInitParameters) DeepCopy() *PysparkJobLoggingConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(PysparkJobLoggingConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PysparkJobLoggingConfigObservation) DeepCopyInto(out *PysparkJobLoggingConfigObservation) {
	*out = *in
	if in.DriverLogLevels != nil {
		in, out := &in.DriverLogLevels, &out.DriverLogLevels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PysparkJobLoggingConfigObservation.
func (in *PysparkJobLoggingConfigObservation) DeepCopy() *PysparkJobLoggingConfigObservation {
	if in == nil {
		return nil
	}
	out := new(PysparkJobLoggingConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PysparkJobLoggingConfigParameters) DeepCopyInto(out *PysparkJobLoggingConfigParameters) {
	*out = *in
	if in.DriverLogLevels != nil {
		in, out := &in.DriverLogLevels, &out.DriverLogLevels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PysparkJobLoggingConfigParameters.
func (in *PysparkJobLoggingConfigParameters) DeepCopy() *PysparkJobLoggingConfigParameters {
	if in == nil {
		return nil
	}
	out := new(PysparkJobLoggingConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PysparkJobObservation) DeepCopyInto(out *PysparkJobObservation) {
	*out = *in
	if in.ArchiveUris != nil {
		in, out := &in.ArchiveUris, &out.ArchiveUris
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Args != nil {
		in, out := &in.Args, &out.Args
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.FileUris != nil {
		in, out := &in.FileUris, &out.FileUris
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.JarFileUris != nil {
		in, out := &in.JarFileUris, &out.JarFileUris
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.LoggingConfig != nil {
		in, out := &in.LoggingConfig, &out.LoggingConfig
		*out = make([]PysparkJobLoggingConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MainPythonFileURI != nil {
		in, out := &in.MainPythonFileURI, &out.MainPythonFileURI
		*out = new(string)
		**out = **in
	}
	if in.Properties != nil {
		in, out := &in.Properties, &out.Properties
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.PythonFileUris != nil {
		in, out := &in.PythonFileUris, &out.PythonFileUris
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PysparkJobObservation.
func (in *PysparkJobObservation) DeepCopy() *PysparkJobObservation {
	if in == nil {
		return nil
	}
	out := new(PysparkJobObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PysparkJobParameters) DeepCopyInto(out *PysparkJobParameters) {
	*out = *in
	if in.ArchiveUris != nil {
		in, out := &in.ArchiveUris, &out.ArchiveUris
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Args != nil {
		in, out := &in.Args, &out.Args
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.FileUris != nil {
		in, out := &in.FileUris, &out.FileUris
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.JarFileUris != nil {
		in, out := &in.JarFileUris, &out.JarFileUris
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.LoggingConfig != nil {
		in, out := &in.LoggingConfig, &out.LoggingConfig
		*out = make([]PysparkJobLoggingConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MainPythonFileURI != nil {
		in, out := &in.MainPythonFileURI, &out.MainPythonFileURI
		*out = new(string)
		**out = **in
	}
	if in.Properties != nil {
		in, out := &in.Properties, &out.Properties
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.PythonFileUris != nil {
		in, out := &in.PythonFileUris, &out.PythonFileUris
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PysparkJobParameters.
func (in *PysparkJobParameters) DeepCopy() *PysparkJobParameters {
	if in == nil {
		return nil
	}
	out := new(PysparkJobParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *QueryListInitParameters) DeepCopyInto(out *QueryListInitParameters) {
	*out = *in
	if in.Queries != nil {
		in, out := &in.Queries, &out.Queries
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new QueryListInitParameters.
func (in *QueryListInitParameters) DeepCopy() *QueryListInitParameters {
	if in == nil {
		return nil
	}
	out := new(QueryListInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *QueryListObservation) DeepCopyInto(out *QueryListObservation) {
	*out = *in
	if in.Queries != nil {
		in, out := &in.Queries, &out.Queries
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new QueryListObservation.
func (in *QueryListObservation) DeepCopy() *QueryListObservation {
	if in == nil {
		return nil
	}
	out := new(QueryListObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *QueryListParameters) DeepCopyInto(out *QueryListParameters) {
	*out = *in
	if in.Queries != nil {
		in, out := &in.Queries, &out.Queries
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new QueryListParameters.
func (in *QueryListParameters) DeepCopy() *QueryListParameters {
	if in == nil {
		return nil
	}
	out := new(QueryListParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReferenceInitParameters) DeepCopyInto(out *ReferenceInitParameters) {
	*out = *in
	if in.JobID != nil {
		in, out := &in.JobID, &out.JobID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReferenceInitParameters.
func (in *ReferenceInitParameters) DeepCopy() *ReferenceInitParameters {
	if in == nil {
		return nil
	}
	out := new(ReferenceInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReferenceObservation) DeepCopyInto(out *ReferenceObservation) {
	*out = *in
	if in.JobID != nil {
		in, out := &in.JobID, &out.JobID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReferenceObservation.
func (in *ReferenceObservation) DeepCopy() *ReferenceObservation {
	if in == nil {
		return nil
	}
	out := new(ReferenceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReferenceParameters) DeepCopyInto(out *ReferenceParameters) {
	*out = *in
	if in.JobID != nil {
		in, out := &in.JobID, &out.JobID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReferenceParameters.
func (in *ReferenceParameters) DeepCopy() *ReferenceParameters {
	if in == nil {
		return nil
	}
	out := new(ReferenceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegexInitParameters) DeepCopyInto(out *RegexInitParameters) {
	*out = *in
	if in.Regexes != nil {
		in, out := &in.Regexes, &out.Regexes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegexInitParameters.
func (in *RegexInitParameters) DeepCopy() *RegexInitParameters {
	if in == nil {
		return nil
	}
	out := new(RegexInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegexObservation) DeepCopyInto(out *RegexObservation) {
	*out = *in
	if in.Regexes != nil {
		in, out := &in.Regexes, &out.Regexes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegexObservation.
func (in *RegexObservation) DeepCopy() *RegexObservation {
	if in == nil {
		return nil
	}
	out := new(RegexObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegexParameters) DeepCopyInto(out *RegexParameters) {
	*out = *in
	if in.Regexes != nil {
		in, out := &in.Regexes, &out.Regexes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegexParameters.
func (in *RegexParameters) DeepCopy() *RegexParameters {
	if in == nil {
		return nil
	}
	out := new(RegexParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReservationAffinityInitParameters) DeepCopyInto(out *ReservationAffinityInitParameters) {
	*out = *in
	if in.ConsumeReservationType != nil {
		in, out := &in.ConsumeReservationType, &out.ConsumeReservationType
		*out = new(string)
		**out = **in
	}
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReservationAffinityInitParameters.
func (in *ReservationAffinityInitParameters) DeepCopy() *ReservationAffinityInitParameters {
	if in == nil {
		return nil
	}
	out := new(ReservationAffinityInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReservationAffinityObservation) DeepCopyInto(out *ReservationAffinityObservation) {
	*out = *in
	if in.ConsumeReservationType != nil {
		in, out := &in.ConsumeReservationType, &out.ConsumeReservationType
		*out = new(string)
		**out = **in
	}
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReservationAffinityObservation.
func (in *ReservationAffinityObservation) DeepCopy() *ReservationAffinityObservation {
	if in == nil {
		return nil
	}
	out := new(ReservationAffinityObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReservationAffinityParameters) DeepCopyInto(out *ReservationAffinityParameters) {
	*out = *in
	if in.ConsumeReservationType != nil {
		in, out := &in.ConsumeReservationType, &out.ConsumeReservationType
		*out = new(string)
		**out = **in
	}
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReservationAffinityParameters.
func (in *ReservationAffinityParameters) DeepCopy() *ReservationAffinityParameters {
	if in == nil {
		return nil
	}
	out := new(ReservationAffinityParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScalingConfigInitParameters) DeepCopyInto(out *ScalingConfigInitParameters) {
	*out = *in
	if in.InstanceSize != nil {
		in, out := &in.InstanceSize, &out.InstanceSize
		*out = new(string)
		**out = **in
	}
	if in.ScalingFactor != nil {
		in, out := &in.ScalingFactor, &out.ScalingFactor
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScalingConfigInitParameters.
func (in *ScalingConfigInitParameters) DeepCopy() *ScalingConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(ScalingConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScalingConfigObservation) DeepCopyInto(out *ScalingConfigObservation) {
	*out = *in
	if in.InstanceSize != nil {
		in, out := &in.InstanceSize, &out.InstanceSize
		*out = new(string)
		**out = **in
	}
	if in.ScalingFactor != nil {
		in, out := &in.ScalingFactor, &out.ScalingFactor
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScalingConfigObservation.
func (in *ScalingConfigObservation) DeepCopy() *ScalingConfigObservation {
	if in == nil {
		return nil
	}
	out := new(ScalingConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScalingConfigParameters) DeepCopyInto(out *ScalingConfigParameters) {
	*out = *in
	if in.InstanceSize != nil {
		in, out := &in.InstanceSize, &out.InstanceSize
		*out = new(string)
		**out = **in
	}
	if in.ScalingFactor != nil {
		in, out := &in.ScalingFactor, &out.ScalingFactor
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScalingConfigParameters.
func (in *ScalingConfigParameters) DeepCopy() *ScalingConfigParameters {
	if in == nil {
		return nil
	}
	out := new(ScalingConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SchedulingInitParameters) DeepCopyInto(out *SchedulingInitParameters) {
	*out = *in
	if in.MaxFailuresPerHour != nil {
		in, out := &in.MaxFailuresPerHour, &out.MaxFailuresPerHour
		*out = new(float64)
		**out = **in
	}
	if in.MaxFailuresTotal != nil {
		in, out := &in.MaxFailuresTotal, &out.MaxFailuresTotal
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SchedulingInitParameters.
func (in *SchedulingInitParameters) DeepCopy() *SchedulingInitParameters {
	if in == nil {
		return nil
	}
	out := new(SchedulingInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SchedulingObservation) DeepCopyInto(out *SchedulingObservation) {
	*out = *in
	if in.MaxFailuresPerHour != nil {
		in, out := &in.MaxFailuresPerHour, &out.MaxFailuresPerHour
		*out = new(float64)
		**out = **in
	}
	if in.MaxFailuresTotal != nil {
		in, out := &in.MaxFailuresTotal, &out.MaxFailuresTotal
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SchedulingObservation.
func (in *SchedulingObservation) DeepCopy() *SchedulingObservation {
	if in == nil {
		return nil
	}
	out := new(SchedulingObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SchedulingParameters) DeepCopyInto(out *SchedulingParameters) {
	*out = *in
	if in.MaxFailuresPerHour != nil {
		in, out := &in.MaxFailuresPerHour, &out.MaxFailuresPerHour
		*out = new(float64)
		**out = **in
	}
	if in.MaxFailuresTotal != nil {
		in, out := &in.MaxFailuresTotal, &out.MaxFailuresTotal
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SchedulingParameters.
func (in *SchedulingParameters) DeepCopy() *SchedulingParameters {
	if in == nil {
		return nil
	}
	out := new(SchedulingParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecondaryWorkerConfigAcceleratorsInitParameters) DeepCopyInto(out *SecondaryWorkerConfigAcceleratorsInitParameters) {
	*out = *in
	if in.AcceleratorCount != nil {
		in, out := &in.AcceleratorCount, &out.AcceleratorCount
		*out = new(float64)
		**out = **in
	}
	if in.AcceleratorType != nil {
		in, out := &in.AcceleratorType, &out.AcceleratorType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecondaryWorkerConfigAcceleratorsInitParameters.
func (in *SecondaryWorkerConfigAcceleratorsInitParameters) DeepCopy() *SecondaryWorkerConfigAcceleratorsInitParameters {
	if in == nil {
		return nil
	}
	out := new(SecondaryWorkerConfigAcceleratorsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecondaryWorkerConfigAcceleratorsObservation) DeepCopyInto(out *SecondaryWorkerConfigAcceleratorsObservation) {
	*out = *in
	if in.AcceleratorCount != nil {
		in, out := &in.AcceleratorCount, &out.AcceleratorCount
		*out = new(float64)
		**out = **in
	}
	if in.AcceleratorType != nil {
		in, out := &in.AcceleratorType, &out.AcceleratorType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecondaryWorkerConfigAcceleratorsObservation.
func (in *SecondaryWorkerConfigAcceleratorsObservation) DeepCopy() *SecondaryWorkerConfigAcceleratorsObservation {
	if in == nil {
		return nil
	}
	out := new(SecondaryWorkerConfigAcceleratorsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecondaryWorkerConfigAcceleratorsParameters) DeepCopyInto(out *SecondaryWorkerConfigAcceleratorsParameters) {
	*out = *in
	if in.AcceleratorCount != nil {
		in, out := &in.AcceleratorCount, &out.AcceleratorCount
		*out = new(float64)
		**out = **in
	}
	if in.AcceleratorType != nil {
		in, out := &in.AcceleratorType, &out.AcceleratorType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecondaryWorkerConfigAcceleratorsParameters.
func (in *SecondaryWorkerConfigAcceleratorsParameters) DeepCopy() *SecondaryWorkerConfigAcceleratorsParameters {
	if in == nil {
		return nil
	}
	out := new(SecondaryWorkerConfigAcceleratorsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecondaryWorkerConfigDiskConfigInitParameters) DeepCopyInto(out *SecondaryWorkerConfigDiskConfigInitParameters) {
	*out = *in
	if in.BootDiskSizeGb != nil {
		in, out := &in.BootDiskSizeGb, &out.BootDiskSizeGb
		*out = new(float64)
		**out = **in
	}
	if in.BootDiskType != nil {
		in, out := &in.BootDiskType, &out.BootDiskType
		*out = new(string)
		**out = **in
	}
	if in.NumLocalSsds != nil {
		in, out := &in.NumLocalSsds, &out.NumLocalSsds
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecondaryWorkerConfigDiskConfigInitParameters.
func (in *SecondaryWorkerConfigDiskConfigInitParameters) DeepCopy() *SecondaryWorkerConfigDiskConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(SecondaryWorkerConfigDiskConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecondaryWorkerConfigDiskConfigObservation) DeepCopyInto(out *SecondaryWorkerConfigDiskConfigObservation) {
	*out = *in
	if in.BootDiskSizeGb != nil {
		in, out := &in.BootDiskSizeGb, &out.BootDiskSizeGb
		*out = new(float64)
		**out = **in
	}
	if in.BootDiskType != nil {
		in, out := &in.BootDiskType, &out.BootDiskType
		*out = new(string)
		**out = **in
	}
	if in.NumLocalSsds != nil {
		in, out := &in.NumLocalSsds, &out.NumLocalSsds
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecondaryWorkerConfigDiskConfigObservation.
func (in *SecondaryWorkerConfigDiskConfigObservation) DeepCopy() *SecondaryWorkerConfigDiskConfigObservation {
	if in == nil {
		return nil
	}
	out := new(SecondaryWorkerConfigDiskConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecondaryWorkerConfigDiskConfigParameters) DeepCopyInto(out *SecondaryWorkerConfigDiskConfigParameters) {
	*out = *in
	if in.BootDiskSizeGb != nil {
		in, out := &in.BootDiskSizeGb, &out.BootDiskSizeGb
		*out = new(float64)
		**out = **in
	}
	if in.BootDiskType != nil {
		in, out := &in.BootDiskType, &out.BootDiskType
		*out = new(string)
		**out = **in
	}
	if in.NumLocalSsds != nil {
		in, out := &in.NumLocalSsds, &out.NumLocalSsds
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecondaryWorkerConfigDiskConfigParameters.
func (in *SecondaryWorkerConfigDiskConfigParameters) DeepCopy() *SecondaryWorkerConfigDiskConfigParameters {
	if in == nil {
		return nil
	}
	out := new(SecondaryWorkerConfigDiskConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecondaryWorkerConfigInitParameters) DeepCopyInto(out *SecondaryWorkerConfigInitParameters) {
	*out = *in
	if in.MaxInstances != nil {
		in, out := &in.MaxInstances, &out.MaxInstances
		*out = new(float64)
		**out = **in
	}
	if in.MinInstances != nil {
		in, out := &in.MinInstances, &out.MinInstances
		*out = new(float64)
		**out = **in
	}
	if in.Weight != nil {
		in, out := &in.Weight, &out.Weight
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecondaryWorkerConfigInitParameters.
func (in *SecondaryWorkerConfigInitParameters) DeepCopy() *SecondaryWorkerConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(SecondaryWorkerConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecondaryWorkerConfigManagedGroupConfigInitParameters) DeepCopyInto(out *SecondaryWorkerConfigManagedGroupConfigInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecondaryWorkerConfigManagedGroupConfigInitParameters.
func (in *SecondaryWorkerConfigManagedGroupConfigInitParameters) DeepCopy() *SecondaryWorkerConfigManagedGroupConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(SecondaryWorkerConfigManagedGroupConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecondaryWorkerConfigManagedGroupConfigObservation) DeepCopyInto(out *SecondaryWorkerConfigManagedGroupConfigObservation) {
	*out = *in
	if in.InstanceGroupManagerName != nil {
		in, out := &in.InstanceGroupManagerName, &out.InstanceGroupManagerName
		*out = new(string)
		**out = **in
	}
	if in.InstanceTemplateName != nil {
		in, out := &in.InstanceTemplateName, &out.InstanceTemplateName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecondaryWorkerConfigManagedGroupConfigObservation.
func (in *SecondaryWorkerConfigManagedGroupConfigObservation) DeepCopy() *SecondaryWorkerConfigManagedGroupConfigObservation {
	if in == nil {
		return nil
	}
	out := new(SecondaryWorkerConfigManagedGroupConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecondaryWorkerConfigManagedGroupConfigParameters) DeepCopyInto(out *SecondaryWorkerConfigManagedGroupConfigParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecondaryWorkerConfigManagedGroupConfigParameters.
func (in *SecondaryWorkerConfigManagedGroupConfigParameters) DeepCopy() *SecondaryWorkerConfigManagedGroupConfigParameters {
	if in == nil {
		return nil
	}
	out := new(SecondaryWorkerConfigManagedGroupConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecondaryWorkerConfigObservation) DeepCopyInto(out *SecondaryWorkerConfigObservation) {
	*out = *in
	if in.MaxInstances != nil {
		in, out := &in.MaxInstances, &out.MaxInstances
		*out = new(float64)
		**out = **in
	}
	if in.MinInstances != nil {
		in, out := &in.MinInstances, &out.MinInstances
		*out = new(float64)
		**out = **in
	}
	if in.Weight != nil {
		in, out := &in.Weight, &out.Weight
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecondaryWorkerConfigObservation.
func (in *SecondaryWorkerConfigObservation) DeepCopy() *SecondaryWorkerConfigObservation {
	if in == nil {
		return nil
	}
	out := new(SecondaryWorkerConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecondaryWorkerConfigParameters) DeepCopyInto(out *SecondaryWorkerConfigParameters) {
	*out = *in
	if in.MaxInstances != nil {
		in, out := &in.MaxInstances, &out.MaxInstances
		*out = new(float64)
		**out = **in
	}
	if in.MinInstances != nil {
		in, out := &in.MinInstances, &out.MinInstances
		*out = new(float64)
		**out = **in
	}
	if in.Weight != nil {
		in, out := &in.Weight, &out.Weight
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecondaryWorkerConfigParameters.
func (in *SecondaryWorkerConfigParameters) DeepCopy() *SecondaryWorkerConfigParameters {
	if in == nil {
		return nil
	}
	out := new(SecondaryWorkerConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecurityConfigInitParameters) DeepCopyInto(out *SecurityConfigInitParameters) {
	*out = *in
	if in.KerberosConfig != nil {
		in, out := &in.KerberosConfig, &out.KerberosConfig
		*out = make([]KerberosConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecurityConfigInitParameters.
func (in *SecurityConfigInitParameters) DeepCopy() *SecurityConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(SecurityConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecurityConfigKerberosConfigInitParameters) DeepCopyInto(out *SecurityConfigKerberosConfigInitParameters) {
	*out = *in
	if in.CrossRealmTrustAdminServer != nil {
		in, out := &in.CrossRealmTrustAdminServer, &out.CrossRealmTrustAdminServer
		*out = new(string)
		**out = **in
	}
	if in.CrossRealmTrustKdc != nil {
		in, out := &in.CrossRealmTrustKdc, &out.CrossRealmTrustKdc
		*out = new(string)
		**out = **in
	}
	if in.CrossRealmTrustRealm != nil {
		in, out := &in.CrossRealmTrustRealm, &out.CrossRealmTrustRealm
		*out = new(string)
		**out = **in
	}
	if in.CrossRealmTrustSharedPassword != nil {
		in, out := &in.CrossRealmTrustSharedPassword, &out.CrossRealmTrustSharedPassword
		*out = new(string)
		**out = **in
	}
	if in.EnableKerberos != nil {
		in, out := &in.EnableKerberos, &out.EnableKerberos
		*out = new(bool)
		**out = **in
	}
	if in.KMSKey != nil {
		in, out := &in.KMSKey, &out.KMSKey
		*out = new(string)
		**out = **in
	}
	if in.KdcDBKey != nil {
		in, out := &in.KdcDBKey, &out.KdcDBKey
		*out = new(string)
		**out = **in
	}
	if in.KeyPassword != nil {
		in, out := &in.KeyPassword, &out.KeyPassword
		*out = new(string)
		**out = **in
	}
	if in.Keystore != nil {
		in, out := &in.Keystore, &out.Keystore
		*out = new(string)
		**out = **in
	}
	if in.KeystorePassword != nil {
		in, out := &in.KeystorePassword, &out.KeystorePassword
		*out = new(string)
		**out = **in
	}
	if in.Realm != nil {
		in, out := &in.Realm, &out.Realm
		*out = new(string)
		**out = **in
	}
	if in.RootPrincipalPassword != nil {
		in, out := &in.RootPrincipalPassword, &out.RootPrincipalPassword
		*out = new(string)
		**out = **in
	}
	if in.TgtLifetimeHours != nil {
		in, out := &in.TgtLifetimeHours, &out.TgtLifetimeHours
		*out = new(float64)
		**out = **in
	}
	if in.Truststore != nil {
		in, out := &in.Truststore, &out.Truststore
		*out = new(string)
		**out = **in
	}
	if in.TruststorePassword != nil {
		in, out := &in.TruststorePassword, &out.TruststorePassword
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecurityConfigKerberosConfigInitParameters.
func (in *SecurityConfigKerberosConfigInitParameters) DeepCopy() *SecurityConfigKerberosConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(SecurityConfigKerberosConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecurityConfigKerberosConfigObservation) DeepCopyInto(out *SecurityConfigKerberosConfigObservation) {
	*out = *in
	if in.CrossRealmTrustAdminServer != nil {
		in, out := &in.CrossRealmTrustAdminServer, &out.CrossRealmTrustAdminServer
		*out = new(string)
		**out = **in
	}
	if in.CrossRealmTrustKdc != nil {
		in, out := &in.CrossRealmTrustKdc, &out.CrossRealmTrustKdc
		*out = new(string)
		**out = **in
	}
	if in.CrossRealmTrustRealm != nil {
		in, out := &in.CrossRealmTrustRealm, &out.CrossRealmTrustRealm
		*out = new(string)
		**out = **in
	}
	if in.CrossRealmTrustSharedPassword != nil {
		in, out := &in.CrossRealmTrustSharedPassword, &out.CrossRealmTrustSharedPassword
		*out = new(string)
		**out = **in
	}
	if in.EnableKerberos != nil {
		in, out := &in.EnableKerberos, &out.EnableKerberos
		*out = new(bool)
		**out = **in
	}
	if in.KMSKey != nil {
		in, out := &in.KMSKey, &out.KMSKey
		*out = new(string)
		**out = **in
	}
	if in.KdcDBKey != nil {
		in, out := &in.KdcDBKey, &out.KdcDBKey
		*out = new(string)
		**out = **in
	}
	if in.KeyPassword != nil {
		in, out := &in.KeyPassword, &out.KeyPassword
		*out = new(string)
		**out = **in
	}
	if in.Keystore != nil {
		in, out := &in.Keystore, &out.Keystore
		*out = new(string)
		**out = **in
	}
	if in.KeystorePassword != nil {
		in, out := &in.KeystorePassword, &out.KeystorePassword
		*out = new(string)
		**out = **in
	}
	if in.Realm != nil {
		in, out := &in.Realm, &out.Realm
		*out = new(string)
		**out = **in
	}
	if in.RootPrincipalPassword != nil {
		in, out := &in.RootPrincipalPassword, &out.RootPrincipalPassword
		*out = new(string)
		**out = **in
	}
	if in.TgtLifetimeHours != nil {
		in, out := &in.TgtLifetimeHours, &out.TgtLifetimeHours
		*out = new(float64)
		**out = **in
	}
	if in.Truststore != nil {
		in, out := &in.Truststore, &out.Truststore
		*out = new(string)
		**out = **in
	}
	if in.TruststorePassword != nil {
		in, out := &in.TruststorePassword, &out.TruststorePassword
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecurityConfigKerberosConfigObservation.
func (in *SecurityConfigKerberosConfigObservation) DeepCopy() *SecurityConfigKerberosConfigObservation {
	if in == nil {
		return nil
	}
	out := new(SecurityConfigKerberosConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecurityConfigKerberosConfigParameters) DeepCopyInto(out *SecurityConfigKerberosConfigParameters) {
	*out = *in
	if in.CrossRealmTrustAdminServer != nil {
		in, out := &in.CrossRealmTrustAdminServer, &out.CrossRealmTrustAdminServer
		*out = new(string)
		**out = **in
	}
	if in.CrossRealmTrustKdc != nil {
		in, out := &in.CrossRealmTrustKdc, &out.CrossRealmTrustKdc
		*out = new(string)
		**out = **in
	}
	if in.CrossRealmTrustRealm != nil {
		in, out := &in.CrossRealmTrustRealm, &out.CrossRealmTrustRealm
		*out = new(string)
		**out = **in
	}
	if in.CrossRealmTrustSharedPassword != nil {
		in, out := &in.CrossRealmTrustSharedPassword, &out.CrossRealmTrustSharedPassword
		*out = new(string)
		**out = **in
	}
	if in.EnableKerberos != nil {
		in, out := &in.EnableKerberos, &out.EnableKerberos
		*out = new(bool)
		**out = **in
	}
	if in.KMSKey != nil {
		in, out := &in.KMSKey, &out.KMSKey
		*out = new(string)
		**out = **in
	}
	if in.KdcDBKey != nil {
		in, out := &in.KdcDBKey, &out.KdcDBKey
		*out = new(string)
		**out = **in
	}
	if in.KeyPassword != nil {
		in, out := &in.KeyPassword, &out.KeyPassword
		*out = new(string)
		**out = **in
	}
	if in.Keystore != nil {
		in, out := &in.Keystore, &out.Keystore
		*out = new(string)
		**out = **in
	}
	if in.KeystorePassword != nil {
		in, out := &in.KeystorePassword, &out.KeystorePassword
		*out = new(string)
		**out = **in
	}
	if in.Realm != nil {
		in, out := &in.Realm, &out.Realm
		*out = new(string)
		**out = **in
	}
	if in.RootPrincipalPassword != nil {
		in, out := &in.RootPrincipalPassword, &out.RootPrincipalPassword
		*out = new(string)
		**out = **in
	}
	if in.TgtLifetimeHours != nil {
		in, out := &in.TgtLifetimeHours, &out.TgtLifetimeHours
		*out = new(float64)
		**out = **in
	}
	if in.Truststore != nil {
		in, out := &in.Truststore, &out.Truststore
		*out = new(string)
		**out = **in
	}
	if in.TruststorePassword != nil {
		in, out := &in.TruststorePassword, &out.TruststorePassword
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecurityConfigKerberosConfigParameters.
func (in *SecurityConfigKerberosConfigParameters) DeepCopy() *SecurityConfigKerberosConfigParameters {
	if in == nil {
		return nil
	}
	out := new(SecurityConfigKerberosConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecurityConfigObservation) DeepCopyInto(out *SecurityConfigObservation) {
	*out = *in
	if in.KerberosConfig != nil {
		in, out := &in.KerberosConfig, &out.KerberosConfig
		*out = make([]KerberosConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecurityConfigObservation.
func (in *SecurityConfigObservation) DeepCopy() *SecurityConfigObservation {
	if in == nil {
		return nil
	}
	out := new(SecurityConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecurityConfigParameters) DeepCopyInto(out *SecurityConfigParameters) {
	*out = *in
	if in.KerberosConfig != nil {
		in, out := &in.KerberosConfig, &out.KerberosConfig
		*out = make([]KerberosConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecurityConfigParameters.
func (in *SecurityConfigParameters) DeepCopy() *SecurityConfigParameters {
	if in == nil {
		return nil
	}
	out := new(SecurityConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ShieldedInstanceConfigInitParameters) DeepCopyInto(out *ShieldedInstanceConfigInitParameters) {
	*out = *in
	if in.EnableIntegrityMonitoring != nil {
		in, out := &in.EnableIntegrityMonitoring, &out.EnableIntegrityMonitoring
		*out = new(bool)
		**out = **in
	}
	if in.EnableSecureBoot != nil {
		in, out := &in.EnableSecureBoot, &out.EnableSecureBoot
		*out = new(bool)
		**out = **in
	}
	if in.EnableVtpm != nil {
		in, out := &in.EnableVtpm, &out.EnableVtpm
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ShieldedInstanceConfigInitParameters.
func (in *ShieldedInstanceConfigInitParameters) DeepCopy() *ShieldedInstanceConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(ShieldedInstanceConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ShieldedInstanceConfigObservation) DeepCopyInto(out *ShieldedInstanceConfigObservation) {
	*out = *in
	if in.EnableIntegrityMonitoring != nil {
		in, out := &in.EnableIntegrityMonitoring, &out.EnableIntegrityMonitoring
		*out = new(bool)
		**out = **in
	}
	if in.EnableSecureBoot != nil {
		in, out := &in.EnableSecureBoot, &out.EnableSecureBoot
		*out = new(bool)
		**out = **in
	}
	if in.EnableVtpm != nil {
		in, out := &in.EnableVtpm, &out.EnableVtpm
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ShieldedInstanceConfigObservation.
func (in *ShieldedInstanceConfigObservation) DeepCopy() *ShieldedInstanceConfigObservation {
	if in == nil {
		return nil
	}
	out := new(ShieldedInstanceConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ShieldedInstanceConfigParameters) DeepCopyInto(out *ShieldedInstanceConfigParameters) {
	*out = *in
	if in.EnableIntegrityMonitoring != nil {
		in, out := &in.EnableIntegrityMonitoring, &out.EnableIntegrityMonitoring
		*out = new(bool)
		**out = **in
	}
	if in.EnableSecureBoot != nil {
		in, out := &in.EnableSecureBoot, &out.EnableSecureBoot
		*out = new(bool)
		**out = **in
	}
	if in.EnableVtpm != nil {
		in, out := &in.EnableVtpm, &out.EnableVtpm
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ShieldedInstanceConfigParameters.
func (in *ShieldedInstanceConfigParameters) DeepCopy() *ShieldedInstanceConfigParameters {
	if in == nil {
		return nil
	}
	out := new(ShieldedInstanceConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SoftwareConfigInitParameters) DeepCopyInto(out *SoftwareConfigInitParameters) {
	*out = *in
	if in.ImageVersion != nil {
		in, out := &in.ImageVersion, &out.ImageVersion
		*out = new(string)
		**out = **in
	}
	if in.OptionalComponents != nil {
		in, out := &in.OptionalComponents, &out.OptionalComponents
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.OverrideProperties != nil {
		in, out := &in.OverrideProperties, &out.OverrideProperties
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SoftwareConfigInitParameters.
func (in *SoftwareConfigInitParameters) DeepCopy() *SoftwareConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(SoftwareConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SoftwareConfigObservation) DeepCopyInto(out *SoftwareConfigObservation) {
	*out = *in
	if in.ImageVersion != nil {
		in, out := &in.ImageVersion, &out.ImageVersion
		*out = new(string)
		**out = **in
	}
	if in.OptionalComponents != nil {
		in, out := &in.OptionalComponents, &out.OptionalComponents
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.OverrideProperties != nil {
		in, out := &in.OverrideProperties, &out.OverrideProperties
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Properties != nil {
		in, out := &in.Properties, &out.Properties
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SoftwareConfigObservation.
func (in *SoftwareConfigObservation) DeepCopy() *SoftwareConfigObservation {
	if in == nil {
		return nil
	}
	out := new(SoftwareConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SoftwareConfigParameters) DeepCopyInto(out *SoftwareConfigParameters) {
	*out = *in
	if in.ImageVersion != nil {
		in, out := &in.ImageVersion, &out.ImageVersion
		*out = new(string)
		**out = **in
	}
	if in.OptionalComponents != nil {
		in, out := &in.OptionalComponents, &out.OptionalComponents
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.OverrideProperties != nil {
		in, out := &in.OverrideProperties, &out.OverrideProperties
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SoftwareConfigParameters.
func (in *SoftwareConfigParameters) DeepCopy() *SoftwareConfigParameters {
	if in == nil {
		return nil
	}
	out := new(SoftwareConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SparkConfigInitParameters) DeepCopyInto(out *SparkConfigInitParameters) {
	*out = *in
	if in.ArchiveUris != nil {
		in, out := &in.ArchiveUris, &out.ArchiveUris
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Args != nil {
		in, out := &in.Args, &out.Args
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.FileUris != nil {
		in, out := &in.FileUris, &out.FileUris
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.JarFileUris != nil {
		in, out := &in.JarFileUris, &out.JarFileUris
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.LoggingConfig != nil {
		in, out := &in.LoggingConfig, &out.LoggingConfig
		*out = make([]SparkConfigLoggingConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MainClass != nil {
		in, out := &in.MainClass, &out.MainClass
		*out = new(string)
		**out = **in
	}
	if in.MainJarFileURI != nil {
		in, out := &in.MainJarFileURI, &out.MainJarFileURI
		*out = new(string)
		**out = **in
	}
	if in.Properties != nil {
		in, out := &in.Properties, &out.Properties
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SparkConfigInitParameters.
func (in *SparkConfigInitParameters) DeepCopy() *SparkConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(SparkConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SparkConfigLoggingConfigInitParameters) DeepCopyInto(out *SparkConfigLoggingConfigInitParameters) {
	*out = *in
	if in.DriverLogLevels != nil {
		in, out := &in.DriverLogLevels, &out.DriverLogLevels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SparkConfigLoggingConfigInitParameters.
func (in *SparkConfigLoggingConfigInitParameters) DeepCopy() *SparkConfigLoggingConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(SparkConfigLoggingConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SparkConfigLoggingConfigObservation) DeepCopyInto(out *SparkConfigLoggingConfigObservation) {
	*out = *in
	if in.DriverLogLevels != nil {
		in, out := &in.DriverLogLevels, &out.DriverLogLevels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SparkConfigLoggingConfigObservation.
func (in *SparkConfigLoggingConfigObservation) DeepCopy() *SparkConfigLoggingConfigObservation {
	if in == nil {
		return nil
	}
	out := new(SparkConfigLoggingConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SparkConfigLoggingConfigParameters) DeepCopyInto(out *SparkConfigLoggingConfigParameters) {
	*out = *in
	if in.DriverLogLevels != nil {
		in, out := &in.DriverLogLevels, &out.DriverLogLevels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SparkConfigLoggingConfigParameters.
func (in *SparkConfigLoggingConfigParameters) DeepCopy() *SparkConfigLoggingConfigParameters {
	if in == nil {
		return nil
	}
	out := new(SparkConfigLoggingConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SparkConfigObservation) DeepCopyInto(out *SparkConfigObservation) {
	*out = *in
	if in.ArchiveUris != nil {
		in, out := &in.ArchiveUris, &out.ArchiveUris
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Args != nil {
		in, out := &in.Args, &out.Args
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.FileUris != nil {
		in, out := &in.FileUris, &out.FileUris
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.JarFileUris != nil {
		in, out := &in.JarFileUris, &out.JarFileUris
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.LoggingConfig != nil {
		in, out := &in.LoggingConfig, &out.LoggingConfig
		*out = make([]SparkConfigLoggingConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MainClass != nil {
		in, out := &in.MainClass, &out.MainClass
		*out = new(string)
		**out = **in
	}
	if in.MainJarFileURI != nil {
		in, out := &in.MainJarFileURI, &out.MainJarFileURI
		*out = new(string)
		**out = **in
	}
	if in.Properties != nil {
		in, out := &in.Properties, &out.Properties
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SparkConfigObservation.
func (in *SparkConfigObservation) DeepCopy() *SparkConfigObservation {
	if in == nil {
		return nil
	}
	out := new(SparkConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SparkConfigParameters) DeepCopyInto(out *SparkConfigParameters) {
	*out = *in
	if in.ArchiveUris != nil {
		in, out := &in.ArchiveUris, &out.ArchiveUris
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Args != nil {
		in, out := &in.Args, &out.Args
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.FileUris != nil {
		in, out := &in.FileUris, &out.FileUris
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.JarFileUris != nil {
		in, out := &in.JarFileUris, &out.JarFileUris
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.LoggingConfig != nil {
		in, out := &in.LoggingConfig, &out.LoggingConfig
		*out = make([]SparkConfigLoggingConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MainClass != nil {
		in, out := &in.MainClass, &out.MainClass
		*out = new(string)
		**out = **in
	}
	if in.MainJarFileURI != nil {
		in, out := &in.MainJarFileURI, &out.MainJarFileURI
		*out = new(string)
		**out = **in
	}
	if in.Properties != nil {
		in, out := &in.Properties, &out.Properties
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SparkConfigParameters.
func (in *SparkConfigParameters) DeepCopy() *SparkConfigParameters {
	if in == nil {
		return nil
	}
	out := new(SparkConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SparkHistoryServerConfigInitParameters) DeepCopyInto(out *SparkHistoryServerConfigInitParameters) {
	*out = *in
	if in.DataprocCluster != nil {
		in, out := &in.DataprocCluster, &out.DataprocCluster
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SparkHistoryServerConfigInitParameters.
func (in *SparkHistoryServerConfigInitParameters) DeepCopy() *SparkHistoryServerConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(SparkHistoryServerConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SparkHistoryServerConfigObservation) DeepCopyInto(out *SparkHistoryServerConfigObservation) {
	*out = *in
	if in.DataprocCluster != nil {
		in, out := &in.DataprocCluster, &out.DataprocCluster
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SparkHistoryServerConfigObservation.
func (in *SparkHistoryServerConfigObservation) DeepCopy() *SparkHistoryServerConfigObservation {
	if in == nil {
		return nil
	}
	out := new(SparkHistoryServerConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SparkHistoryServerConfigParameters) DeepCopyInto(out *SparkHistoryServerConfigParameters) {
	*out = *in
	if in.DataprocCluster != nil {
		in, out := &in.DataprocCluster, &out.DataprocCluster
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SparkHistoryServerConfigParameters.
func (in *SparkHistoryServerConfigParameters) DeepCopy() *SparkHistoryServerConfigParameters {
	if in == nil {
		return nil
	}
	out := new(SparkHistoryServerConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SparkJobInitParameters) DeepCopyInto(out *SparkJobInitParameters) {
	*out = *in
	if in.ArchiveUris != nil {
		in, out := &in.ArchiveUris, &out.ArchiveUris
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Args != nil {
		in, out := &in.Args, &out.Args
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.FileUris != nil {
		in, out := &in.FileUris, &out.FileUris
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.JarFileUris != nil {
		in, out := &in.JarFileUris, &out.JarFileUris
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.LoggingConfig != nil {
		in, out := &in.LoggingConfig, &out.LoggingConfig
		*out = make([]SparkJobLoggingConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MainClass != nil {
		in, out := &in.MainClass, &out.MainClass
		*out = new(string)
		**out = **in
	}
	if in.MainJarFileURI != nil {
		in, out := &in.MainJarFileURI, &out.MainJarFileURI
		*out = new(string)
		**out = **in
	}
	if in.Properties != nil {
		in, out := &in.Properties, &out.Properties
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SparkJobInitParameters.
func (in *SparkJobInitParameters) DeepCopy() *SparkJobInitParameters {
	if in == nil {
		return nil
	}
	out := new(SparkJobInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SparkJobLoggingConfigInitParameters) DeepCopyInto(out *SparkJobLoggingConfigInitParameters) {
	*out = *in
	if in.DriverLogLevels != nil {
		in, out := &in.DriverLogLevels, &out.DriverLogLevels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SparkJobLoggingConfigInitParameters.
func (in *SparkJobLoggingConfigInitParameters) DeepCopy() *SparkJobLoggingConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(SparkJobLoggingConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SparkJobLoggingConfigObservation) DeepCopyInto(out *SparkJobLoggingConfigObservation) {
	*out = *in
	if in.DriverLogLevels != nil {
		in, out := &in.DriverLogLevels, &out.DriverLogLevels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SparkJobLoggingConfigObservation.
func (in *SparkJobLoggingConfigObservation) DeepCopy() *SparkJobLoggingConfigObservation {
	if in == nil {
		return nil
	}
	out := new(SparkJobLoggingConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SparkJobLoggingConfigParameters) DeepCopyInto(out *SparkJobLoggingConfigParameters) {
	*out = *in
	if in.DriverLogLevels != nil {
		in, out := &in.DriverLogLevels, &out.DriverLogLevels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SparkJobLoggingConfigParameters.
func (in *SparkJobLoggingConfigParameters) DeepCopy() *SparkJobLoggingConfigParameters {
	if in == nil {
		return nil
	}
	out := new(SparkJobLoggingConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SparkJobObservation) DeepCopyInto(out *SparkJobObservation) {
	*out = *in
	if in.ArchiveUris != nil {
		in, out := &in.ArchiveUris, &out.ArchiveUris
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Args != nil {
		in, out := &in.Args, &out.Args
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.FileUris != nil {
		in, out := &in.FileUris, &out.FileUris
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.JarFileUris != nil {
		in, out := &in.JarFileUris, &out.JarFileUris
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.LoggingConfig != nil {
		in, out := &in.LoggingConfig, &out.LoggingConfig
		*out = make([]SparkJobLoggingConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MainClass != nil {
		in, out := &in.MainClass, &out.MainClass
		*out = new(string)
		**out = **in
	}
	if in.MainJarFileURI != nil {
		in, out := &in.MainJarFileURI, &out.MainJarFileURI
		*out = new(string)
		**out = **in
	}
	if in.Properties != nil {
		in, out := &in.Properties, &out.Properties
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SparkJobObservation.
func (in *SparkJobObservation) DeepCopy() *SparkJobObservation {
	if in == nil {
		return nil
	}
	out := new(SparkJobObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SparkJobParameters) DeepCopyInto(out *SparkJobParameters) {
	*out = *in
	if in.ArchiveUris != nil {
		in, out := &in.ArchiveUris, &out.ArchiveUris
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Args != nil {
		in, out := &in.Args, &out.Args
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.FileUris != nil {
		in, out := &in.FileUris, &out.FileUris
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.JarFileUris != nil {
		in, out := &in.JarFileUris, &out.JarFileUris
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.LoggingConfig != nil {
		in, out := &in.LoggingConfig, &out.LoggingConfig
		*out = make([]SparkJobLoggingConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MainClass != nil {
		in, out := &in.MainClass, &out.MainClass
		*out = new(string)
		**out = **in
	}
	if in.MainJarFileURI != nil {
		in, out := &in.MainJarFileURI, &out.MainJarFileURI
		*out = new(string)
		**out = **in
	}
	if in.Properties != nil {
		in, out := &in.Properties, &out.Properties
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SparkJobParameters.
func (in *SparkJobParameters) DeepCopy() *SparkJobParameters {
	if in == nil {
		return nil
	}
	out := new(SparkJobParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SparkRJobInitParameters) DeepCopyInto(out *SparkRJobInitParameters) {
	*out = *in
	if in.ArchiveUris != nil {
		in, out := &in.ArchiveUris, &out.ArchiveUris
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Args != nil {
		in, out := &in.Args, &out.Args
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.FileUris != nil {
		in, out := &in.FileUris, &out.FileUris
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.LoggingConfig != nil {
		in, out := &in.LoggingConfig, &out.LoggingConfig
		*out = make([]SparkRJobLoggingConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MainRFileURI != nil {
		in, out := &in.MainRFileURI, &out.MainRFileURI
		*out = new(string)
		**out = **in
	}
	if in.Properties != nil {
		in, out := &in.Properties, &out.Properties
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SparkRJobInitParameters.
func (in *SparkRJobInitParameters) DeepCopy() *SparkRJobInitParameters {
	if in == nil {
		return nil
	}
	out := new(SparkRJobInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SparkRJobLoggingConfigInitParameters) DeepCopyInto(out *SparkRJobLoggingConfigInitParameters) {
	*out = *in
	if in.DriverLogLevels != nil {
		in, out := &in.DriverLogLevels, &out.DriverLogLevels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SparkRJobLoggingConfigInitParameters.
func (in *SparkRJobLoggingConfigInitParameters) DeepCopy() *SparkRJobLoggingConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(SparkRJobLoggingConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SparkRJobLoggingConfigObservation) DeepCopyInto(out *SparkRJobLoggingConfigObservation) {
	*out = *in
	if in.DriverLogLevels != nil {
		in, out := &in.DriverLogLevels, &out.DriverLogLevels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SparkRJobLoggingConfigObservation.
func (in *SparkRJobLoggingConfigObservation) DeepCopy() *SparkRJobLoggingConfigObservation {
	if in == nil {
		return nil
	}
	out := new(SparkRJobLoggingConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SparkRJobLoggingConfigParameters) DeepCopyInto(out *SparkRJobLoggingConfigParameters) {
	*out = *in
	if in.DriverLogLevels != nil {
		in, out := &in.DriverLogLevels, &out.DriverLogLevels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SparkRJobLoggingConfigParameters.
func (in *SparkRJobLoggingConfigParameters) DeepCopy() *SparkRJobLoggingConfigParameters {
	if in == nil {
		return nil
	}
	out := new(SparkRJobLoggingConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SparkRJobObservation) DeepCopyInto(out *SparkRJobObservation) {
	*out = *in
	if in.ArchiveUris != nil {
		in, out := &in.ArchiveUris, &out.ArchiveUris
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Args != nil {
		in, out := &in.Args, &out.Args
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.FileUris != nil {
		in, out := &in.FileUris, &out.FileUris
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.LoggingConfig != nil {
		in, out := &in.LoggingConfig, &out.LoggingConfig
		*out = make([]SparkRJobLoggingConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MainRFileURI != nil {
		in, out := &in.MainRFileURI, &out.MainRFileURI
		*out = new(string)
		**out = **in
	}
	if in.Properties != nil {
		in, out := &in.Properties, &out.Properties
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SparkRJobObservation.
func (in *SparkRJobObservation) DeepCopy() *SparkRJobObservation {
	if in == nil {
		return nil
	}
	out := new(SparkRJobObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SparkRJobParameters) DeepCopyInto(out *SparkRJobParameters) {
	*out = *in
	if in.ArchiveUris != nil {
		in, out := &in.ArchiveUris, &out.ArchiveUris
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Args != nil {
		in, out := &in.Args, &out.Args
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.FileUris != nil {
		in, out := &in.FileUris, &out.FileUris
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.LoggingConfig != nil {
		in, out := &in.LoggingConfig, &out.LoggingConfig
		*out = make([]SparkRJobLoggingConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MainRFileURI != nil {
		in, out := &in.MainRFileURI, &out.MainRFileURI
		*out = new(string)
		**out = **in
	}
	if in.Properties != nil {
		in, out := &in.Properties, &out.Properties
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SparkRJobParameters.
func (in *SparkRJobParameters) DeepCopy() *SparkRJobParameters {
	if in == nil {
		return nil
	}
	out := new(SparkRJobParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SparkSQLJobInitParameters) DeepCopyInto(out *SparkSQLJobInitParameters) {
	*out = *in
	if in.JarFileUris != nil {
		in, out := &in.JarFileUris, &out.JarFileUris
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.LoggingConfig != nil {
		in, out := &in.LoggingConfig, &out.LoggingConfig
		*out = make([]SparkSQLJobLoggingConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Properties != nil {
		in, out := &in.Properties, &out.Properties
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.QueryFileURI != nil {
		in, out := &in.QueryFileURI, &out.QueryFileURI
		*out = new(string)
		**out = **in
	}
	if in.QueryList != nil {
		in, out := &in.QueryList, &out.QueryList
		*out = make([]SparkSQLJobQueryListInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ScriptVariables != nil {
		in, out := &in.ScriptVariables, &out.ScriptVariables
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SparkSQLJobInitParameters.
func (in *SparkSQLJobInitParameters) DeepCopy() *SparkSQLJobInitParameters {
	if in == nil {
		return nil
	}
	out := new(SparkSQLJobInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SparkSQLJobLoggingConfigInitParameters) DeepCopyInto(out *SparkSQLJobLoggingConfigInitParameters) {
	*out = *in
	if in.DriverLogLevels != nil {
		in, out := &in.DriverLogLevels, &out.DriverLogLevels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SparkSQLJobLoggingConfigInitParameters.
func (in *SparkSQLJobLoggingConfigInitParameters) DeepCopy() *SparkSQLJobLoggingConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(SparkSQLJobLoggingConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SparkSQLJobLoggingConfigObservation) DeepCopyInto(out *SparkSQLJobLoggingConfigObservation) {
	*out = *in
	if in.DriverLogLevels != nil {
		in, out := &in.DriverLogLevels, &out.DriverLogLevels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SparkSQLJobLoggingConfigObservation.
func (in *SparkSQLJobLoggingConfigObservation) DeepCopy() *SparkSQLJobLoggingConfigObservation {
	if in == nil {
		return nil
	}
	out := new(SparkSQLJobLoggingConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SparkSQLJobLoggingConfigParameters) DeepCopyInto(out *SparkSQLJobLoggingConfigParameters) {
	*out = *in
	if in.DriverLogLevels != nil {
		in, out := &in.DriverLogLevels, &out.DriverLogLevels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SparkSQLJobLoggingConfigParameters.
func (in *SparkSQLJobLoggingConfigParameters) DeepCopy() *SparkSQLJobLoggingConfigParameters {
	if in == nil {
		return nil
	}
	out := new(SparkSQLJobLoggingConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SparkSQLJobObservation) DeepCopyInto(out *SparkSQLJobObservation) {
	*out = *in
	if in.JarFileUris != nil {
		in, out := &in.JarFileUris, &out.JarFileUris
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.LoggingConfig != nil {
		in, out := &in.LoggingConfig, &out.LoggingConfig
		*out = make([]SparkSQLJobLoggingConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Properties != nil {
		in, out := &in.Properties, &out.Properties
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.QueryFileURI != nil {
		in, out := &in.QueryFileURI, &out.QueryFileURI
		*out = new(string)
		**out = **in
	}
	if in.QueryList != nil {
		in, out := &in.QueryList, &out.QueryList
		*out = make([]SparkSQLJobQueryListObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ScriptVariables != nil {
		in, out := &in.ScriptVariables, &out.ScriptVariables
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SparkSQLJobObservation.
func (in *SparkSQLJobObservation) DeepCopy() *SparkSQLJobObservation {
	if in == nil {
		return nil
	}
	out := new(SparkSQLJobObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SparkSQLJobParameters) DeepCopyInto(out *SparkSQLJobParameters) {
	*out = *in
	if in.JarFileUris != nil {
		in, out := &in.JarFileUris, &out.JarFileUris
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.LoggingConfig != nil {
		in, out := &in.LoggingConfig, &out.LoggingConfig
		*out = make([]SparkSQLJobLoggingConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Properties != nil {
		in, out := &in.Properties, &out.Properties
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.QueryFileURI != nil {
		in, out := &in.QueryFileURI, &out.QueryFileURI
		*out = new(string)
		**out = **in
	}
	if in.QueryList != nil {
		in, out := &in.QueryList, &out.QueryList
		*out = make([]SparkSQLJobQueryListParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ScriptVariables != nil {
		in, out := &in.ScriptVariables, &out.ScriptVariables
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SparkSQLJobParameters.
func (in *SparkSQLJobParameters) DeepCopy() *SparkSQLJobParameters {
	if in == nil {
		return nil
	}
	out := new(SparkSQLJobParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SparkSQLJobQueryListInitParameters) DeepCopyInto(out *SparkSQLJobQueryListInitParameters) {
	*out = *in
	if in.Queries != nil {
		in, out := &in.Queries, &out.Queries
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SparkSQLJobQueryListInitParameters.
func (in *SparkSQLJobQueryListInitParameters) DeepCopy() *SparkSQLJobQueryListInitParameters {
	if in == nil {
		return nil
	}
	out := new(SparkSQLJobQueryListInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SparkSQLJobQueryListObservation) DeepCopyInto(out *SparkSQLJobQueryListObservation) {
	*out = *in
	if in.Queries != nil {
		in, out := &in.Queries, &out.Queries
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SparkSQLJobQueryListObservation.
func (in *SparkSQLJobQueryListObservation) DeepCopy() *SparkSQLJobQueryListObservation {
	if in == nil {
		return nil
	}
	out := new(SparkSQLJobQueryListObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SparkSQLJobQueryListParameters) DeepCopyInto(out *SparkSQLJobQueryListParameters) {
	*out = *in
	if in.Queries != nil {
		in, out := &in.Queries, &out.Queries
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SparkSQLJobQueryListParameters.
func (in *SparkSQLJobQueryListParameters) DeepCopy() *SparkSQLJobQueryListParameters {
	if in == nil {
		return nil
	}
	out := new(SparkSQLJobQueryListParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SparksqlConfigInitParameters) DeepCopyInto(out *SparksqlConfigInitParameters) {
	*out = *in
	if in.JarFileUris != nil {
		in, out := &in.JarFileUris, &out.JarFileUris
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.LoggingConfig != nil {
		in, out := &in.LoggingConfig, &out.LoggingConfig
		*out = make([]SparksqlConfigLoggingConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Properties != nil {
		in, out := &in.Properties, &out.Properties
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.QueryFileURI != nil {
		in, out := &in.QueryFileURI, &out.QueryFileURI
		*out = new(string)
		**out = **in
	}
	if in.QueryList != nil {
		in, out := &in.QueryList, &out.QueryList
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ScriptVariables != nil {
		in, out := &in.ScriptVariables, &out.ScriptVariables
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SparksqlConfigInitParameters.
func (in *SparksqlConfigInitParameters) DeepCopy() *SparksqlConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(SparksqlConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SparksqlConfigLoggingConfigInitParameters) DeepCopyInto(out *SparksqlConfigLoggingConfigInitParameters) {
	*out = *in
	if in.DriverLogLevels != nil {
		in, out := &in.DriverLogLevels, &out.DriverLogLevels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SparksqlConfigLoggingConfigInitParameters.
func (in *SparksqlConfigLoggingConfigInitParameters) DeepCopy() *SparksqlConfigLoggingConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(SparksqlConfigLoggingConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SparksqlConfigLoggingConfigObservation) DeepCopyInto(out *SparksqlConfigLoggingConfigObservation) {
	*out = *in
	if in.DriverLogLevels != nil {
		in, out := &in.DriverLogLevels, &out.DriverLogLevels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SparksqlConfigLoggingConfigObservation.
func (in *SparksqlConfigLoggingConfigObservation) DeepCopy() *SparksqlConfigLoggingConfigObservation {
	if in == nil {
		return nil
	}
	out := new(SparksqlConfigLoggingConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SparksqlConfigLoggingConfigParameters) DeepCopyInto(out *SparksqlConfigLoggingConfigParameters) {
	*out = *in
	if in.DriverLogLevels != nil {
		in, out := &in.DriverLogLevels, &out.DriverLogLevels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SparksqlConfigLoggingConfigParameters.
func (in *SparksqlConfigLoggingConfigParameters) DeepCopy() *SparksqlConfigLoggingConfigParameters {
	if in == nil {
		return nil
	}
	out := new(SparksqlConfigLoggingConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SparksqlConfigObservation) DeepCopyInto(out *SparksqlConfigObservation) {
	*out = *in
	if in.JarFileUris != nil {
		in, out := &in.JarFileUris, &out.JarFileUris
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.LoggingConfig != nil {
		in, out := &in.LoggingConfig, &out.LoggingConfig
		*out = make([]SparksqlConfigLoggingConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Properties != nil {
		in, out := &in.Properties, &out.Properties
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.QueryFileURI != nil {
		in, out := &in.QueryFileURI, &out.QueryFileURI
		*out = new(string)
		**out = **in
	}
	if in.QueryList != nil {
		in, out := &in.QueryList, &out.QueryList
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ScriptVariables != nil {
		in, out := &in.ScriptVariables, &out.ScriptVariables
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SparksqlConfigObservation.
func (in *SparksqlConfigObservation) DeepCopy() *SparksqlConfigObservation {
	if in == nil {
		return nil
	}
	out := new(SparksqlConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SparksqlConfigParameters) DeepCopyInto(out *SparksqlConfigParameters) {
	*out = *in
	if in.JarFileUris != nil {
		in, out := &in.JarFileUris, &out.JarFileUris
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.LoggingConfig != nil {
		in, out := &in.LoggingConfig, &out.LoggingConfig
		*out = make([]SparksqlConfigLoggingConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Properties != nil {
		in, out := &in.Properties, &out.Properties
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.QueryFileURI != nil {
		in, out := &in.QueryFileURI, &out.QueryFileURI
		*out = new(string)
		**out = **in
	}
	if in.QueryList != nil {
		in, out := &in.QueryList, &out.QueryList
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ScriptVariables != nil {
		in, out := &in.ScriptVariables, &out.ScriptVariables
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SparksqlConfigParameters.
func (in *SparksqlConfigParameters) DeepCopy() *SparksqlConfigParameters {
	if in == nil {
		return nil
	}
	out := new(SparksqlConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StatusInitParameters) DeepCopyInto(out *StatusInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StatusInitParameters.
func (in *StatusInitParameters) DeepCopy() *StatusInitParameters {
	if in == nil {
		return nil
	}
	out := new(StatusInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StatusObservation) DeepCopyInto(out *StatusObservation) {
	*out = *in
	if in.Details != nil {
		in, out := &in.Details, &out.Details
		*out = new(string)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.StateStartTime != nil {
		in, out := &in.StateStartTime, &out.StateStartTime
		*out = new(string)
		**out = **in
	}
	if in.Substate != nil {
		in, out := &in.Substate, &out.Substate
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StatusObservation.
func (in *StatusObservation) DeepCopy() *StatusObservation {
	if in == nil {
		return nil
	}
	out := new(StatusObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StatusParameters) DeepCopyInto(out *StatusParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StatusParameters.
func (in *StatusParameters) DeepCopy() *StatusParameters {
	if in == nil {
		return nil
	}
	out := new(StatusParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TelemetryConfigInitParameters) DeepCopyInto(out *TelemetryConfigInitParameters) {
	*out = *in
	if in.LogFormat != nil {
		in, out := &in.LogFormat, &out.LogFormat
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TelemetryConfigInitParameters.
func (in *TelemetryConfigInitParameters) DeepCopy() *TelemetryConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(TelemetryConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TelemetryConfigObservation) DeepCopyInto(out *TelemetryConfigObservation) {
	*out = *in
	if in.LogFormat != nil {
		in, out := &in.LogFormat, &out.LogFormat
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TelemetryConfigObservation.
func (in *TelemetryConfigObservation) DeepCopy() *TelemetryConfigObservation {
	if in == nil {
		return nil
	}
	out := new(TelemetryConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TelemetryConfigParameters) DeepCopyInto(out *TelemetryConfigParameters) {
	*out = *in
	if in.LogFormat != nil {
		in, out := &in.LogFormat, &out.LogFormat
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TelemetryConfigParameters.
func (in *TelemetryConfigParameters) DeepCopy() *TelemetryConfigParameters {
	if in == nil {
		return nil
	}
	out := new(TelemetryConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ValidationInitParameters) DeepCopyInto(out *ValidationInitParameters) {
	*out = *in
	if in.Regex != nil {
		in, out := &in.Regex, &out.Regex
		*out = make([]RegexInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]ValuesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ValidationInitParameters.
func (in *ValidationInitParameters) DeepCopy() *ValidationInitParameters {
	if in == nil {
		return nil
	}
	out := new(ValidationInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ValidationObservation) DeepCopyInto(out *ValidationObservation) {
	*out = *in
	if in.Regex != nil {
		in, out := &in.Regex, &out.Regex
		*out = make([]RegexObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]ValuesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ValidationObservation.
func (in *ValidationObservation) DeepCopy() *ValidationObservation {
	if in == nil {
		return nil
	}
	out := new(ValidationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ValidationParameters) DeepCopyInto(out *ValidationParameters) {
	*out = *in
	if in.Regex != nil {
		in, out := &in.Regex, &out.Regex
		*out = make([]RegexParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]ValuesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ValidationParameters.
func (in *ValidationParameters) DeepCopy() *ValidationParameters {
	if in == nil {
		return nil
	}
	out := new(ValidationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ValuesInitParameters) DeepCopyInto(out *ValuesInitParameters) {
	*out = *in
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ValuesInitParameters.
func (in *ValuesInitParameters) DeepCopy() *ValuesInitParameters {
	if in == nil {
		return nil
	}
	out := new(ValuesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ValuesObservation) DeepCopyInto(out *ValuesObservation) {
	*out = *in
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ValuesObservation.
func (in *ValuesObservation) DeepCopy() *ValuesObservation {
	if in == nil {
		return nil
	}
	out := new(ValuesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ValuesParameters) DeepCopyInto(out *ValuesParameters) {
	*out = *in
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ValuesParameters.
func (in *ValuesParameters) DeepCopy() *ValuesParameters {
	if in == nil {
		return nil
	}
	out := new(ValuesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualClusterConfigInitParameters) DeepCopyInto(out *VirtualClusterConfigInitParameters) {
	*out = *in
	if in.AuxiliaryServicesConfig != nil {
		in, out := &in.AuxiliaryServicesConfig, &out.AuxiliaryServicesConfig
		*out = make([]AuxiliaryServicesConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.KubernetesClusterConfig != nil {
		in, out := &in.KubernetesClusterConfig, &out.KubernetesClusterConfig
		*out = make([]KubernetesClusterConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StagingBucket != nil {
		in, out := &in.StagingBucket, &out.StagingBucket
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualClusterConfigInitParameters.
func (in *VirtualClusterConfigInitParameters) DeepCopy() *VirtualClusterConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(VirtualClusterConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualClusterConfigObservation) DeepCopyInto(out *VirtualClusterConfigObservation) {
	*out = *in
	if in.AuxiliaryServicesConfig != nil {
		in, out := &in.AuxiliaryServicesConfig, &out.AuxiliaryServicesConfig
		*out = make([]AuxiliaryServicesConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.KubernetesClusterConfig != nil {
		in, out := &in.KubernetesClusterConfig, &out.KubernetesClusterConfig
		*out = make([]KubernetesClusterConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StagingBucket != nil {
		in, out := &in.StagingBucket, &out.StagingBucket
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualClusterConfigObservation.
func (in *VirtualClusterConfigObservation) DeepCopy() *VirtualClusterConfigObservation {
	if in == nil {
		return nil
	}
	out := new(VirtualClusterConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualClusterConfigParameters) DeepCopyInto(out *VirtualClusterConfigParameters) {
	*out = *in
	if in.AuxiliaryServicesConfig != nil {
		in, out := &in.AuxiliaryServicesConfig, &out.AuxiliaryServicesConfig
		*out = make([]AuxiliaryServicesConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.KubernetesClusterConfig != nil {
		in, out := &in.KubernetesClusterConfig, &out.KubernetesClusterConfig
		*out = make([]KubernetesClusterConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StagingBucket != nil {
		in, out := &in.StagingBucket, &out.StagingBucket
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualClusterConfigParameters.
func (in *VirtualClusterConfigParameters) DeepCopy() *VirtualClusterConfigParameters {
	if in == nil {
		return nil
	}
	out := new(VirtualClusterConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkerConfigAcceleratorsInitParameters) DeepCopyInto(out *WorkerConfigAcceleratorsInitParameters) {
	*out = *in
	if in.AcceleratorCount != nil {
		in, out := &in.AcceleratorCount, &out.AcceleratorCount
		*out = new(float64)
		**out = **in
	}
	if in.AcceleratorType != nil {
		in, out := &in.AcceleratorType, &out.AcceleratorType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkerConfigAcceleratorsInitParameters.
func (in *WorkerConfigAcceleratorsInitParameters) DeepCopy() *WorkerConfigAcceleratorsInitParameters {
	if in == nil {
		return nil
	}
	out := new(WorkerConfigAcceleratorsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkerConfigAcceleratorsObservation) DeepCopyInto(out *WorkerConfigAcceleratorsObservation) {
	*out = *in
	if in.AcceleratorCount != nil {
		in, out := &in.AcceleratorCount, &out.AcceleratorCount
		*out = new(float64)
		**out = **in
	}
	if in.AcceleratorType != nil {
		in, out := &in.AcceleratorType, &out.AcceleratorType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkerConfigAcceleratorsObservation.
func (in *WorkerConfigAcceleratorsObservation) DeepCopy() *WorkerConfigAcceleratorsObservation {
	if in == nil {
		return nil
	}
	out := new(WorkerConfigAcceleratorsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkerConfigAcceleratorsParameters) DeepCopyInto(out *WorkerConfigAcceleratorsParameters) {
	*out = *in
	if in.AcceleratorCount != nil {
		in, out := &in.AcceleratorCount, &out.AcceleratorCount
		*out = new(float64)
		**out = **in
	}
	if in.AcceleratorType != nil {
		in, out := &in.AcceleratorType, &out.AcceleratorType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkerConfigAcceleratorsParameters.
func (in *WorkerConfigAcceleratorsParameters) DeepCopy() *WorkerConfigAcceleratorsParameters {
	if in == nil {
		return nil
	}
	out := new(WorkerConfigAcceleratorsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkerConfigDiskConfigInitParameters) DeepCopyInto(out *WorkerConfigDiskConfigInitParameters) {
	*out = *in
	if in.BootDiskSizeGb != nil {
		in, out := &in.BootDiskSizeGb, &out.BootDiskSizeGb
		*out = new(float64)
		**out = **in
	}
	if in.BootDiskType != nil {
		in, out := &in.BootDiskType, &out.BootDiskType
		*out = new(string)
		**out = **in
	}
	if in.NumLocalSsds != nil {
		in, out := &in.NumLocalSsds, &out.NumLocalSsds
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkerConfigDiskConfigInitParameters.
func (in *WorkerConfigDiskConfigInitParameters) DeepCopy() *WorkerConfigDiskConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(WorkerConfigDiskConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkerConfigDiskConfigObservation) DeepCopyInto(out *WorkerConfigDiskConfigObservation) {
	*out = *in
	if in.BootDiskSizeGb != nil {
		in, out := &in.BootDiskSizeGb, &out.BootDiskSizeGb
		*out = new(float64)
		**out = **in
	}
	if in.BootDiskType != nil {
		in, out := &in.BootDiskType, &out.BootDiskType
		*out = new(string)
		**out = **in
	}
	if in.NumLocalSsds != nil {
		in, out := &in.NumLocalSsds, &out.NumLocalSsds
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkerConfigDiskConfigObservation.
func (in *WorkerConfigDiskConfigObservation) DeepCopy() *WorkerConfigDiskConfigObservation {
	if in == nil {
		return nil
	}
	out := new(WorkerConfigDiskConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkerConfigDiskConfigParameters) DeepCopyInto(out *WorkerConfigDiskConfigParameters) {
	*out = *in
	if in.BootDiskSizeGb != nil {
		in, out := &in.BootDiskSizeGb, &out.BootDiskSizeGb
		*out = new(float64)
		**out = **in
	}
	if in.BootDiskType != nil {
		in, out := &in.BootDiskType, &out.BootDiskType
		*out = new(string)
		**out = **in
	}
	if in.NumLocalSsds != nil {
		in, out := &in.NumLocalSsds, &out.NumLocalSsds
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkerConfigDiskConfigParameters.
func (in *WorkerConfigDiskConfigParameters) DeepCopy() *WorkerConfigDiskConfigParameters {
	if in == nil {
		return nil
	}
	out := new(WorkerConfigDiskConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkerConfigInitParameters) DeepCopyInto(out *WorkerConfigInitParameters) {
	*out = *in
	if in.MaxInstances != nil {
		in, out := &in.MaxInstances, &out.MaxInstances
		*out = new(float64)
		**out = **in
	}
	if in.MinInstances != nil {
		in, out := &in.MinInstances, &out.MinInstances
		*out = new(float64)
		**out = **in
	}
	if in.Weight != nil {
		in, out := &in.Weight, &out.Weight
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkerConfigInitParameters.
func (in *WorkerConfigInitParameters) DeepCopy() *WorkerConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(WorkerConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkerConfigManagedGroupConfigInitParameters) DeepCopyInto(out *WorkerConfigManagedGroupConfigInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkerConfigManagedGroupConfigInitParameters.
func (in *WorkerConfigManagedGroupConfigInitParameters) DeepCopy() *WorkerConfigManagedGroupConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(WorkerConfigManagedGroupConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkerConfigManagedGroupConfigObservation) DeepCopyInto(out *WorkerConfigManagedGroupConfigObservation) {
	*out = *in
	if in.InstanceGroupManagerName != nil {
		in, out := &in.InstanceGroupManagerName, &out.InstanceGroupManagerName
		*out = new(string)
		**out = **in
	}
	if in.InstanceTemplateName != nil {
		in, out := &in.InstanceTemplateName, &out.InstanceTemplateName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkerConfigManagedGroupConfigObservation.
func (in *WorkerConfigManagedGroupConfigObservation) DeepCopy() *WorkerConfigManagedGroupConfigObservation {
	if in == nil {
		return nil
	}
	out := new(WorkerConfigManagedGroupConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkerConfigManagedGroupConfigParameters) DeepCopyInto(out *WorkerConfigManagedGroupConfigParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkerConfigManagedGroupConfigParameters.
func (in *WorkerConfigManagedGroupConfigParameters) DeepCopy() *WorkerConfigManagedGroupConfigParameters {
	if in == nil {
		return nil
	}
	out := new(WorkerConfigManagedGroupConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkerConfigObservation) DeepCopyInto(out *WorkerConfigObservation) {
	*out = *in
	if in.MaxInstances != nil {
		in, out := &in.MaxInstances, &out.MaxInstances
		*out = new(float64)
		**out = **in
	}
	if in.MinInstances != nil {
		in, out := &in.MinInstances, &out.MinInstances
		*out = new(float64)
		**out = **in
	}
	if in.Weight != nil {
		in, out := &in.Weight, &out.Weight
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkerConfigObservation.
func (in *WorkerConfigObservation) DeepCopy() *WorkerConfigObservation {
	if in == nil {
		return nil
	}
	out := new(WorkerConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkerConfigParameters) DeepCopyInto(out *WorkerConfigParameters) {
	*out = *in
	if in.MaxInstances != nil {
		in, out := &in.MaxInstances, &out.MaxInstances
		*out = new(float64)
		**out = **in
	}
	if in.MinInstances != nil {
		in, out := &in.MinInstances, &out.MinInstances
		*out = new(float64)
		**out = **in
	}
	if in.Weight != nil {
		in, out := &in.Weight, &out.Weight
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkerConfigParameters.
func (in *WorkerConfigParameters) DeepCopy() *WorkerConfigParameters {
	if in == nil {
		return nil
	}
	out := new(WorkerConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkflowTemplate) DeepCopyInto(out *WorkflowTemplate) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkflowTemplate.
func (in *WorkflowTemplate) DeepCopy() *WorkflowTemplate {
	if in == nil {
		return nil
	}
	out := new(WorkflowTemplate)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *WorkflowTemplate) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkflowTemplateInitParameters) DeepCopyInto(out *WorkflowTemplateInitParameters) {
	*out = *in
	if in.DagTimeout != nil {
		in, out := &in.DagTimeout, &out.DagTimeout
		*out = new(string)
		**out = **in
	}
	if in.Jobs != nil {
		in, out := &in.Jobs, &out.Jobs
		*out = make([]JobsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make([]ParametersInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Placement != nil {
		in, out := &in.Placement, &out.Placement
		*out = make([]WorkflowTemplatePlacementInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkflowTemplateInitParameters.
func (in *WorkflowTemplateInitParameters) DeepCopy() *WorkflowTemplateInitParameters {
	if in == nil {
		return nil
	}
	out := new(WorkflowTemplateInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkflowTemplateList) DeepCopyInto(out *WorkflowTemplateList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]WorkflowTemplate, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkflowTemplateList.
func (in *WorkflowTemplateList) DeepCopy() *WorkflowTemplateList {
	if in == nil {
		return nil
	}
	out := new(WorkflowTemplateList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *WorkflowTemplateList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkflowTemplateObservation) DeepCopyInto(out *WorkflowTemplateObservation) {
	*out = *in
	if in.CreateTime != nil {
		in, out := &in.CreateTime, &out.CreateTime
		*out = new(string)
		**out = **in
	}
	if in.DagTimeout != nil {
		in, out := &in.DagTimeout, &out.DagTimeout
		*out = new(string)
		**out = **in
	}
	if in.EffectiveLabels != nil {
		in, out := &in.EffectiveLabels, &out.EffectiveLabels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Jobs != nil {
		in, out := &in.Jobs, &out.Jobs
		*out = make([]JobsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make([]ParametersObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Placement != nil {
		in, out := &in.Placement, &out.Placement
		*out = make([]WorkflowTemplatePlacementObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.TerraformLabels != nil {
		in, out := &in.TerraformLabels, &out.TerraformLabels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.UpdateTime != nil {
		in, out := &in.UpdateTime, &out.UpdateTime
		*out = new(string)
		**out = **in
	}
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkflowTemplateObservation.
func (in *WorkflowTemplateObservation) DeepCopy() *WorkflowTemplateObservation {
	if in == nil {
		return nil
	}
	out := new(WorkflowTemplateObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkflowTemplateParameters) DeepCopyInto(out *WorkflowTemplateParameters) {
	*out = *in
	if in.DagTimeout != nil {
		in, out := &in.DagTimeout, &out.DagTimeout
		*out = new(string)
		**out = **in
	}
	if in.Jobs != nil {
		in, out := &in.Jobs, &out.Jobs
		*out = make([]JobsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make([]ParametersParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Placement != nil {
		in, out := &in.Placement, &out.Placement
		*out = make([]WorkflowTemplatePlacementParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkflowTemplateParameters.
func (in *WorkflowTemplateParameters) DeepCopy() *WorkflowTemplateParameters {
	if in == nil {
		return nil
	}
	out := new(WorkflowTemplateParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkflowTemplatePlacementInitParameters) DeepCopyInto(out *WorkflowTemplatePlacementInitParameters) {
	*out = *in
	if in.ClusterSelector != nil {
		in, out := &in.ClusterSelector, &out.ClusterSelector
		*out = make([]ClusterSelectorInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ManagedCluster != nil {
		in, out := &in.ManagedCluster, &out.ManagedCluster
		*out = make([]ManagedClusterInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkflowTemplatePlacementInitParameters.
func (in *WorkflowTemplatePlacementInitParameters) DeepCopy() *WorkflowTemplatePlacementInitParameters {
	if in == nil {
		return nil
	}
	out := new(WorkflowTemplatePlacementInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkflowTemplatePlacementObservation) DeepCopyInto(out *WorkflowTemplatePlacementObservation) {
	*out = *in
	if in.ClusterSelector != nil {
		in, out := &in.ClusterSelector, &out.ClusterSelector
		*out = make([]ClusterSelectorObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ManagedCluster != nil {
		in, out := &in.ManagedCluster, &out.ManagedCluster
		*out = make([]ManagedClusterObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkflowTemplatePlacementObservation.
func (in *WorkflowTemplatePlacementObservation) DeepCopy() *WorkflowTemplatePlacementObservation {
	if in == nil {
		return nil
	}
	out := new(WorkflowTemplatePlacementObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkflowTemplatePlacementParameters) DeepCopyInto(out *WorkflowTemplatePlacementParameters) {
	*out = *in
	if in.ClusterSelector != nil {
		in, out := &in.ClusterSelector, &out.ClusterSelector
		*out = make([]ClusterSelectorParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ManagedCluster != nil {
		in, out := &in.ManagedCluster, &out.ManagedCluster
		*out = make([]ManagedClusterParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkflowTemplatePlacementParameters.
func (in *WorkflowTemplatePlacementParameters) DeepCopy() *WorkflowTemplatePlacementParameters {
	if in == nil {
		return nil
	}
	out := new(WorkflowTemplatePlacementParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkflowTemplateSpec) DeepCopyInto(out *WorkflowTemplateSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkflowTemplateSpec.
func (in *WorkflowTemplateSpec) DeepCopy() *WorkflowTemplateSpec {
	if in == nil {
		return nil
	}
	out := new(WorkflowTemplateSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkflowTemplateStatus) DeepCopyInto(out *WorkflowTemplateStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkflowTemplateStatus.
func (in *WorkflowTemplateStatus) DeepCopy() *WorkflowTemplateStatus {
	if in == nil {
		return nil
	}
	out := new(WorkflowTemplateStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *YarnConfigInitParameters) DeepCopyInto(out *YarnConfigInitParameters) {
	*out = *in
	if in.GracefulDecommissionTimeout != nil {
		in, out := &in.GracefulDecommissionTimeout, &out.GracefulDecommissionTimeout
		*out = new(string)
		**out = **in
	}
	if in.ScaleDownFactor != nil {
		in, out := &in.ScaleDownFactor, &out.ScaleDownFactor
		*out = new(float64)
		**out = **in
	}
	if in.ScaleDownMinWorkerFraction != nil {
		in, out := &in.ScaleDownMinWorkerFraction, &out.ScaleDownMinWorkerFraction
		*out = new(float64)
		**out = **in
	}
	if in.ScaleUpFactor != nil {
		in, out := &in.ScaleUpFactor, &out.ScaleUpFactor
		*out = new(float64)
		**out = **in
	}
	if in.ScaleUpMinWorkerFraction != nil {
		in, out := &in.ScaleUpMinWorkerFraction, &out.ScaleUpMinWorkerFraction
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new YarnConfigInitParameters.
func (in *YarnConfigInitParameters) DeepCopy() *YarnConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(YarnConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *YarnConfigObservation) DeepCopyInto(out *YarnConfigObservation) {
	*out = *in
	if in.GracefulDecommissionTimeout != nil {
		in, out := &in.GracefulDecommissionTimeout, &out.GracefulDecommissionTimeout
		*out = new(string)
		**out = **in
	}
	if in.ScaleDownFactor != nil {
		in, out := &in.ScaleDownFactor, &out.ScaleDownFactor
		*out = new(float64)
		**out = **in
	}
	if in.ScaleDownMinWorkerFraction != nil {
		in, out := &in.ScaleDownMinWorkerFraction, &out.ScaleDownMinWorkerFraction
		*out = new(float64)
		**out = **in
	}
	if in.ScaleUpFactor != nil {
		in, out := &in.ScaleUpFactor, &out.ScaleUpFactor
		*out = new(float64)
		**out = **in
	}
	if in.ScaleUpMinWorkerFraction != nil {
		in, out := &in.ScaleUpMinWorkerFraction, &out.ScaleUpMinWorkerFraction
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new YarnConfigObservation.
func (in *YarnConfigObservation) DeepCopy() *YarnConfigObservation {
	if in == nil {
		return nil
	}
	out := new(YarnConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *YarnConfigParameters) DeepCopyInto(out *YarnConfigParameters) {
	*out = *in
	if in.GracefulDecommissionTimeout != nil {
		in, out := &in.GracefulDecommissionTimeout, &out.GracefulDecommissionTimeout
		*out = new(string)
		**out = **in
	}
	if in.ScaleDownFactor != nil {
		in, out := &in.ScaleDownFactor, &out.ScaleDownFactor
		*out = new(float64)
		**out = **in
	}
	if in.ScaleDownMinWorkerFraction != nil {
		in, out := &in.ScaleDownMinWorkerFraction, &out.ScaleDownMinWorkerFraction
		*out = new(float64)
		**out = **in
	}
	if in.ScaleUpFactor != nil {
		in, out := &in.ScaleUpFactor, &out.ScaleUpFactor
		*out = new(float64)
		**out = **in
	}
	if in.ScaleUpMinWorkerFraction != nil {
		in, out := &in.ScaleUpMinWorkerFraction, &out.ScaleUpMinWorkerFraction
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new YarnConfigParameters.
func (in *YarnConfigParameters) DeepCopy() *YarnConfigParameters {
	if in == nil {
		return nil
	}
	out := new(YarnConfigParameters)
	in.DeepCopyInto(out)
	return out
}
