// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1beta1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type ErrorInfoInitParameters struct {
}

type ErrorInfoObservation struct {

	// The logical grouping to which the "reason" belongs.
	Domain *string `json:"domain,omitempty" tf:"domain,omitempty"`

	// Additional structured details about this error.
	// +mapType=granular
	Metadata map[string]*string `json:"metadata,omitempty" tf:"metadata,omitempty"`

	// The reason of the error.
	Reason *string `json:"reason,omitempty" tf:"reason,omitempty"`
}

type ErrorInfoParameters struct {
}

type ErrorInitParameters struct {
}

type ErrorObservation struct {

	// The status code, which should be an enum value of [google.rpc.Code][].
	Code *float64 `json:"code,omitempty" tf:"code,omitempty"`

	// (Output)
	// A list of messages that carry the error details.
	Details []map[string]*string `json:"details,omitempty" tf:"details,omitempty"`

	// A developer-facing error message.
	Message *string `json:"message,omitempty" tf:"message,omitempty"`
}

type ErrorParameters struct {
}

type PscConfigInitParameters struct {

	// Max number of PSC connections for this policy.
	Limit *string `json:"limit,omitempty" tf:"limit,omitempty"`

	// IDs of the subnetworks or fully qualified identifiers for the subnetworks
	// +crossplane:generate:reference:type=github.com/upbound/provider-gcp/apis/compute/v1beta2.Subnetwork
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractResourceID()
	Subnetworks []*string `json:"subnetworks,omitempty" tf:"subnetworks,omitempty"`

	// References to Subnetwork in compute to populate subnetworks.
	// +kubebuilder:validation:Optional
	SubnetworksRefs []v1.Reference `json:"subnetworksRefs,omitempty" tf:"-"`

	// Selector for a list of Subnetwork in compute to populate subnetworks.
	// +kubebuilder:validation:Optional
	SubnetworksSelector *v1.Selector `json:"subnetworksSelector,omitempty" tf:"-"`
}

type PscConfigObservation struct {

	// Max number of PSC connections for this policy.
	Limit *string `json:"limit,omitempty" tf:"limit,omitempty"`

	// IDs of the subnetworks or fully qualified identifiers for the subnetworks
	Subnetworks []*string `json:"subnetworks,omitempty" tf:"subnetworks,omitempty"`
}

type PscConfigParameters struct {

	// Max number of PSC connections for this policy.
	// +kubebuilder:validation:Optional
	Limit *string `json:"limit,omitempty" tf:"limit,omitempty"`

	// IDs of the subnetworks or fully qualified identifiers for the subnetworks
	// +crossplane:generate:reference:type=github.com/upbound/provider-gcp/apis/compute/v1beta2.Subnetwork
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	Subnetworks []*string `json:"subnetworks,omitempty" tf:"subnetworks,omitempty"`

	// References to Subnetwork in compute to populate subnetworks.
	// +kubebuilder:validation:Optional
	SubnetworksRefs []v1.Reference `json:"subnetworksRefs,omitempty" tf:"-"`

	// Selector for a list of Subnetwork in compute to populate subnetworks.
	// +kubebuilder:validation:Optional
	SubnetworksSelector *v1.Selector `json:"subnetworksSelector,omitempty" tf:"-"`
}

type PscConnectionsInitParameters struct {
}

type PscConnectionsObservation struct {

	// The resource reference of the consumer address.
	ConsumerAddress *string `json:"consumerAddress,omitempty" tf:"consumer_address,omitempty"`

	// The resource reference of the PSC Forwarding Rule within the consumer VPC.
	ConsumerForwardingRule *string `json:"consumerForwardingRule,omitempty" tf:"consumer_forwarding_rule,omitempty"`

	// The project where the PSC connection is created.
	ConsumerTargetProject *string `json:"consumerTargetProject,omitempty" tf:"consumer_target_project,omitempty"`

	// The most recent error during operating this connection.
	// Structure is documented below.
	Error *ErrorObservation `json:"error,omitempty" tf:"error,omitempty"`

	// The error info for the latest error during operating this connection.
	// Structure is documented below.
	ErrorInfo *ErrorInfoObservation `json:"errorInfo,omitempty" tf:"error_info,omitempty"`

	// The error type indicates whether the error is consumer facing, producer
	// facing or system internal.
	// Possible values are: CONNECTION_ERROR_TYPE_UNSPECIFIED, ERROR_INTERNAL, ERROR_CONSUMER_SIDE, ERROR_PRODUCER_SIDE.
	ErrorType *string `json:"errorType,omitempty" tf:"error_type,omitempty"`

	// The last Compute Engine operation to setup PSC connection.
	GceOperation *string `json:"gceOperation,omitempty" tf:"gce_operation,omitempty"`

	// The PSC connection id of the PSC forwarding rule.
	PscConnectionID *string `json:"pscConnectionId,omitempty" tf:"psc_connection_id,omitempty"`

	// The state of the PSC connection.
	// Possible values are: STATE_UNSPECIFIED, ACTIVE, CREATING, DELETING, FAILED.
	State *string `json:"state,omitempty" tf:"state,omitempty"`
}

type PscConnectionsParameters struct {
}

type ServiceConnectionPolicyInitParameters struct {

	// Free-text description of the resource.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// User-defined labels.
	// +mapType=granular
	Labels map[string]*string `json:"labels,omitempty" tf:"labels,omitempty"`

	// The resource path of the consumer network. Example: - projects/{projectNumOrId}/global/networks/{resourceId}.
	// +crossplane:generate:reference:type=github.com/upbound/provider-gcp/apis/compute/v1beta1.Network
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractResourceID()
	Network *string `json:"network,omitempty" tf:"network,omitempty"`

	// Reference to a Network in compute to populate network.
	// +kubebuilder:validation:Optional
	NetworkRef *v1.Reference `json:"networkRef,omitempty" tf:"-"`

	// Selector for a Network in compute to populate network.
	// +kubebuilder:validation:Optional
	NetworkSelector *v1.Selector `json:"networkSelector,omitempty" tf:"-"`

	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project *string `json:"project,omitempty" tf:"project,omitempty"`

	// Configuration used for Private Service Connect connections. Used when Infrastructure is PSC.
	// Structure is documented below.
	PscConfig *PscConfigInitParameters `json:"pscConfig,omitempty" tf:"psc_config,omitempty"`

	// The service class identifier for which this ServiceConnectionPolicy is for. The service class identifier is a unique, symbolic representation of a ServiceClass.
	// It is provided by the Service Producer. Google services have a prefix of gcp. For example, gcp-cloud-sql. 3rd party services do not. For example, test-service-a3dfcx.
	ServiceClass *string `json:"serviceClass,omitempty" tf:"service_class,omitempty"`
}

type ServiceConnectionPolicyObservation struct {

	// The timestamp when the resource was created.
	CreateTime *string `json:"createTime,omitempty" tf:"create_time,omitempty"`

	// Free-text description of the resource.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// for all of the labels present on the resource.
	// +mapType=granular
	EffectiveLabels map[string]*string `json:"effectiveLabels,omitempty" tf:"effective_labels,omitempty"`

	// The etag is computed by the server, and may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding.
	Etag *string `json:"etag,omitempty" tf:"etag,omitempty"`

	// an identifier for the resource with format projects/{{project}}/locations/{{location}}/serviceConnectionPolicies/{{name}}
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// The type of underlying resources used to create the connection.
	Infrastructure *string `json:"infrastructure,omitempty" tf:"infrastructure,omitempty"`

	// User-defined labels.
	// +mapType=granular
	Labels map[string]*string `json:"labels,omitempty" tf:"labels,omitempty"`

	// The location of the ServiceConnectionPolicy.
	Location *string `json:"location,omitempty" tf:"location,omitempty"`

	// The resource path of the consumer network. Example: - projects/{projectNumOrId}/global/networks/{resourceId}.
	Network *string `json:"network,omitempty" tf:"network,omitempty"`

	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project *string `json:"project,omitempty" tf:"project,omitempty"`

	// Configuration used for Private Service Connect connections. Used when Infrastructure is PSC.
	// Structure is documented below.
	PscConfig *PscConfigObservation `json:"pscConfig,omitempty" tf:"psc_config,omitempty"`

	// Information about each Private Service Connect connection.
	// Structure is documented below.
	PscConnections []PscConnectionsObservation `json:"pscConnections,omitempty" tf:"psc_connections,omitempty"`

	// The service class identifier for which this ServiceConnectionPolicy is for. The service class identifier is a unique, symbolic representation of a ServiceClass.
	// It is provided by the Service Producer. Google services have a prefix of gcp. For example, gcp-cloud-sql. 3rd party services do not. For example, test-service-a3dfcx.
	ServiceClass *string `json:"serviceClass,omitempty" tf:"service_class,omitempty"`

	// The combination of labels configured directly on the resource
	// and default labels configured on the provider.
	// +mapType=granular
	TerraformLabels map[string]*string `json:"terraformLabels,omitempty" tf:"terraform_labels,omitempty"`

	// The timestamp when the resource was updated.
	UpdateTime *string `json:"updateTime,omitempty" tf:"update_time,omitempty"`
}

type ServiceConnectionPolicyParameters struct {

	// Free-text description of the resource.
	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// User-defined labels.
	// +kubebuilder:validation:Optional
	// +mapType=granular
	Labels map[string]*string `json:"labels,omitempty" tf:"labels,omitempty"`

	// The location of the ServiceConnectionPolicy.
	// +kubebuilder:validation:Required
	Location *string `json:"location" tf:"location,omitempty"`

	// The resource path of the consumer network. Example: - projects/{projectNumOrId}/global/networks/{resourceId}.
	// +crossplane:generate:reference:type=github.com/upbound/provider-gcp/apis/compute/v1beta1.Network
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	Network *string `json:"network,omitempty" tf:"network,omitempty"`

	// Reference to a Network in compute to populate network.
	// +kubebuilder:validation:Optional
	NetworkRef *v1.Reference `json:"networkRef,omitempty" tf:"-"`

	// Selector for a Network in compute to populate network.
	// +kubebuilder:validation:Optional
	NetworkSelector *v1.Selector `json:"networkSelector,omitempty" tf:"-"`

	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	// +kubebuilder:validation:Optional
	Project *string `json:"project,omitempty" tf:"project,omitempty"`

	// Configuration used for Private Service Connect connections. Used when Infrastructure is PSC.
	// Structure is documented below.
	// +kubebuilder:validation:Optional
	PscConfig *PscConfigParameters `json:"pscConfig,omitempty" tf:"psc_config,omitempty"`

	// The service class identifier for which this ServiceConnectionPolicy is for. The service class identifier is a unique, symbolic representation of a ServiceClass.
	// It is provided by the Service Producer. Google services have a prefix of gcp. For example, gcp-cloud-sql. 3rd party services do not. For example, test-service-a3dfcx.
	// +kubebuilder:validation:Optional
	ServiceClass *string `json:"serviceClass,omitempty" tf:"service_class,omitempty"`
}

// ServiceConnectionPolicySpec defines the desired state of ServiceConnectionPolicy
type ServiceConnectionPolicySpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     ServiceConnectionPolicyParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider ServiceConnectionPolicyInitParameters `json:"initProvider,omitempty"`
}

// ServiceConnectionPolicyStatus defines the observed state of ServiceConnectionPolicy.
type ServiceConnectionPolicyStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        ServiceConnectionPolicyObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// ServiceConnectionPolicy is the Schema for the ServiceConnectionPolicys API. Manage Service Connection Policies.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,gcp}
type ServiceConnectionPolicy struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.serviceClass) || (has(self.initProvider) && has(self.initProvider.serviceClass))",message="spec.forProvider.serviceClass is a required parameter"
	Spec   ServiceConnectionPolicySpec   `json:"spec"`
	Status ServiceConnectionPolicyStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// ServiceConnectionPolicyList contains a list of ServiceConnectionPolicys
type ServiceConnectionPolicyList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []ServiceConnectionPolicy `json:"items"`
}

// Repository type metadata.
var (
	ServiceConnectionPolicy_Kind             = "ServiceConnectionPolicy"
	ServiceConnectionPolicy_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: ServiceConnectionPolicy_Kind}.String()
	ServiceConnectionPolicy_KindAPIVersion   = ServiceConnectionPolicy_Kind + "." + CRDGroupVersion.String()
	ServiceConnectionPolicy_GroupVersionKind = CRDGroupVersion.WithKind(ServiceConnectionPolicy_Kind)
)

func init() {
	SchemeBuilder.Register(&ServiceConnectionPolicy{}, &ServiceConnectionPolicyList{})
}
