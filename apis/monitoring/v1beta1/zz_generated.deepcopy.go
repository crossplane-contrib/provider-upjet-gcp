//go:build !ignore_autogenerated

// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by controller-gen. DO NOT EDIT.

package v1beta1

import (
	"github.com/crossplane/crossplane-runtime/apis/common/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AcceptedResponseStatusCodesInitParameters) DeepCopyInto(out *AcceptedResponseStatusCodesInitParameters) {
	*out = *in
	if in.StatusClass != nil {
		in, out := &in.StatusClass, &out.StatusClass
		*out = new(string)
		**out = **in
	}
	if in.StatusValue != nil {
		in, out := &in.StatusValue, &out.StatusValue
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AcceptedResponseStatusCodesInitParameters.
func (in *AcceptedResponseStatusCodesInitParameters) DeepCopy() *AcceptedResponseStatusCodesInitParameters {
	if in == nil {
		return nil
	}
	out := new(AcceptedResponseStatusCodesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AcceptedResponseStatusCodesObservation) DeepCopyInto(out *AcceptedResponseStatusCodesObservation) {
	*out = *in
	if in.StatusClass != nil {
		in, out := &in.StatusClass, &out.StatusClass
		*out = new(string)
		**out = **in
	}
	if in.StatusValue != nil {
		in, out := &in.StatusValue, &out.StatusValue
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AcceptedResponseStatusCodesObservation.
func (in *AcceptedResponseStatusCodesObservation) DeepCopy() *AcceptedResponseStatusCodesObservation {
	if in == nil {
		return nil
	}
	out := new(AcceptedResponseStatusCodesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AcceptedResponseStatusCodesParameters) DeepCopyInto(out *AcceptedResponseStatusCodesParameters) {
	*out = *in
	if in.StatusClass != nil {
		in, out := &in.StatusClass, &out.StatusClass
		*out = new(string)
		**out = **in
	}
	if in.StatusValue != nil {
		in, out := &in.StatusValue, &out.StatusValue
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AcceptedResponseStatusCodesParameters.
func (in *AcceptedResponseStatusCodesParameters) DeepCopy() *AcceptedResponseStatusCodesParameters {
	if in == nil {
		return nil
	}
	out := new(AcceptedResponseStatusCodesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AggregationsInitParameters) DeepCopyInto(out *AggregationsInitParameters) {
	*out = *in
	if in.AlignmentPeriod != nil {
		in, out := &in.AlignmentPeriod, &out.AlignmentPeriod
		*out = new(string)
		**out = **in
	}
	if in.CrossSeriesReducer != nil {
		in, out := &in.CrossSeriesReducer, &out.CrossSeriesReducer
		*out = new(string)
		**out = **in
	}
	if in.GroupByFields != nil {
		in, out := &in.GroupByFields, &out.GroupByFields
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.PerSeriesAligner != nil {
		in, out := &in.PerSeriesAligner, &out.PerSeriesAligner
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AggregationsInitParameters.
func (in *AggregationsInitParameters) DeepCopy() *AggregationsInitParameters {
	if in == nil {
		return nil
	}
	out := new(AggregationsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AggregationsObservation) DeepCopyInto(out *AggregationsObservation) {
	*out = *in
	if in.AlignmentPeriod != nil {
		in, out := &in.AlignmentPeriod, &out.AlignmentPeriod
		*out = new(string)
		**out = **in
	}
	if in.CrossSeriesReducer != nil {
		in, out := &in.CrossSeriesReducer, &out.CrossSeriesReducer
		*out = new(string)
		**out = **in
	}
	if in.GroupByFields != nil {
		in, out := &in.GroupByFields, &out.GroupByFields
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.PerSeriesAligner != nil {
		in, out := &in.PerSeriesAligner, &out.PerSeriesAligner
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AggregationsObservation.
func (in *AggregationsObservation) DeepCopy() *AggregationsObservation {
	if in == nil {
		return nil
	}
	out := new(AggregationsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AggregationsParameters) DeepCopyInto(out *AggregationsParameters) {
	*out = *in
	if in.AlignmentPeriod != nil {
		in, out := &in.AlignmentPeriod, &out.AlignmentPeriod
		*out = new(string)
		**out = **in
	}
	if in.CrossSeriesReducer != nil {
		in, out := &in.CrossSeriesReducer, &out.CrossSeriesReducer
		*out = new(string)
		**out = **in
	}
	if in.GroupByFields != nil {
		in, out := &in.GroupByFields, &out.GroupByFields
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.PerSeriesAligner != nil {
		in, out := &in.PerSeriesAligner, &out.PerSeriesAligner
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AggregationsParameters.
func (in *AggregationsParameters) DeepCopy() *AggregationsParameters {
	if in == nil {
		return nil
	}
	out := new(AggregationsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AlertPolicy) DeepCopyInto(out *AlertPolicy) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AlertPolicy.
func (in *AlertPolicy) DeepCopy() *AlertPolicy {
	if in == nil {
		return nil
	}
	out := new(AlertPolicy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AlertPolicy) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AlertPolicyInitParameters) DeepCopyInto(out *AlertPolicyInitParameters) {
	*out = *in
	if in.AlertStrategy != nil {
		in, out := &in.AlertStrategy, &out.AlertStrategy
		*out = make([]AlertStrategyInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Combiner != nil {
		in, out := &in.Combiner, &out.Combiner
		*out = new(string)
		**out = **in
	}
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]ConditionsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.Documentation != nil {
		in, out := &in.Documentation, &out.Documentation
		*out = make([]DocumentationInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.NotificationChannels != nil {
		in, out := &in.NotificationChannels, &out.NotificationChannels
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Severity != nil {
		in, out := &in.Severity, &out.Severity
		*out = new(string)
		**out = **in
	}
	if in.UserLabels != nil {
		in, out := &in.UserLabels, &out.UserLabels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AlertPolicyInitParameters.
func (in *AlertPolicyInitParameters) DeepCopy() *AlertPolicyInitParameters {
	if in == nil {
		return nil
	}
	out := new(AlertPolicyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AlertPolicyList) DeepCopyInto(out *AlertPolicyList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]AlertPolicy, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AlertPolicyList.
func (in *AlertPolicyList) DeepCopy() *AlertPolicyList {
	if in == nil {
		return nil
	}
	out := new(AlertPolicyList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AlertPolicyList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AlertPolicyObservation) DeepCopyInto(out *AlertPolicyObservation) {
	*out = *in
	if in.AlertStrategy != nil {
		in, out := &in.AlertStrategy, &out.AlertStrategy
		*out = make([]AlertStrategyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Combiner != nil {
		in, out := &in.Combiner, &out.Combiner
		*out = new(string)
		**out = **in
	}
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]ConditionsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CreationRecord != nil {
		in, out := &in.CreationRecord, &out.CreationRecord
		*out = make([]CreationRecordObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.Documentation != nil {
		in, out := &in.Documentation, &out.Documentation
		*out = make([]DocumentationObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NotificationChannels != nil {
		in, out := &in.NotificationChannels, &out.NotificationChannels
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Severity != nil {
		in, out := &in.Severity, &out.Severity
		*out = new(string)
		**out = **in
	}
	if in.UserLabels != nil {
		in, out := &in.UserLabels, &out.UserLabels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AlertPolicyObservation.
func (in *AlertPolicyObservation) DeepCopy() *AlertPolicyObservation {
	if in == nil {
		return nil
	}
	out := new(AlertPolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AlertPolicyParameters) DeepCopyInto(out *AlertPolicyParameters) {
	*out = *in
	if in.AlertStrategy != nil {
		in, out := &in.AlertStrategy, &out.AlertStrategy
		*out = make([]AlertStrategyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Combiner != nil {
		in, out := &in.Combiner, &out.Combiner
		*out = new(string)
		**out = **in
	}
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]ConditionsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.Documentation != nil {
		in, out := &in.Documentation, &out.Documentation
		*out = make([]DocumentationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.NotificationChannels != nil {
		in, out := &in.NotificationChannels, &out.NotificationChannels
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Severity != nil {
		in, out := &in.Severity, &out.Severity
		*out = new(string)
		**out = **in
	}
	if in.UserLabels != nil {
		in, out := &in.UserLabels, &out.UserLabels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AlertPolicyParameters.
func (in *AlertPolicyParameters) DeepCopy() *AlertPolicyParameters {
	if in == nil {
		return nil
	}
	out := new(AlertPolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AlertPolicySpec) DeepCopyInto(out *AlertPolicySpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AlertPolicySpec.
func (in *AlertPolicySpec) DeepCopy() *AlertPolicySpec {
	if in == nil {
		return nil
	}
	out := new(AlertPolicySpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AlertPolicyStatus) DeepCopyInto(out *AlertPolicyStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AlertPolicyStatus.
func (in *AlertPolicyStatus) DeepCopy() *AlertPolicyStatus {
	if in == nil {
		return nil
	}
	out := new(AlertPolicyStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AlertStrategyInitParameters) DeepCopyInto(out *AlertStrategyInitParameters) {
	*out = *in
	if in.AutoClose != nil {
		in, out := &in.AutoClose, &out.AutoClose
		*out = new(string)
		**out = **in
	}
	if in.NotificationChannelStrategy != nil {
		in, out := &in.NotificationChannelStrategy, &out.NotificationChannelStrategy
		*out = make([]NotificationChannelStrategyInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NotificationRateLimit != nil {
		in, out := &in.NotificationRateLimit, &out.NotificationRateLimit
		*out = make([]NotificationRateLimitInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AlertStrategyInitParameters.
func (in *AlertStrategyInitParameters) DeepCopy() *AlertStrategyInitParameters {
	if in == nil {
		return nil
	}
	out := new(AlertStrategyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AlertStrategyObservation) DeepCopyInto(out *AlertStrategyObservation) {
	*out = *in
	if in.AutoClose != nil {
		in, out := &in.AutoClose, &out.AutoClose
		*out = new(string)
		**out = **in
	}
	if in.NotificationChannelStrategy != nil {
		in, out := &in.NotificationChannelStrategy, &out.NotificationChannelStrategy
		*out = make([]NotificationChannelStrategyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NotificationRateLimit != nil {
		in, out := &in.NotificationRateLimit, &out.NotificationRateLimit
		*out = make([]NotificationRateLimitObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AlertStrategyObservation.
func (in *AlertStrategyObservation) DeepCopy() *AlertStrategyObservation {
	if in == nil {
		return nil
	}
	out := new(AlertStrategyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AlertStrategyParameters) DeepCopyInto(out *AlertStrategyParameters) {
	*out = *in
	if in.AutoClose != nil {
		in, out := &in.AutoClose, &out.AutoClose
		*out = new(string)
		**out = **in
	}
	if in.NotificationChannelStrategy != nil {
		in, out := &in.NotificationChannelStrategy, &out.NotificationChannelStrategy
		*out = make([]NotificationChannelStrategyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NotificationRateLimit != nil {
		in, out := &in.NotificationRateLimit, &out.NotificationRateLimit
		*out = make([]NotificationRateLimitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AlertStrategyParameters.
func (in *AlertStrategyParameters) DeepCopy() *AlertStrategyParameters {
	if in == nil {
		return nil
	}
	out := new(AlertStrategyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AuthInfoInitParameters) DeepCopyInto(out *AuthInfoInitParameters) {
	*out = *in
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AuthInfoInitParameters.
func (in *AuthInfoInitParameters) DeepCopy() *AuthInfoInitParameters {
	if in == nil {
		return nil
	}
	out := new(AuthInfoInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AuthInfoObservation) DeepCopyInto(out *AuthInfoObservation) {
	*out = *in
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AuthInfoObservation.
func (in *AuthInfoObservation) DeepCopy() *AuthInfoObservation {
	if in == nil {
		return nil
	}
	out := new(AuthInfoObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AuthInfoParameters) DeepCopyInto(out *AuthInfoParameters) {
	*out = *in
	out.PasswordSecretRef = in.PasswordSecretRef
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AuthInfoParameters.
func (in *AuthInfoParameters) DeepCopy() *AuthInfoParameters {
	if in == nil {
		return nil
	}
	out := new(AuthInfoParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AvailabilityInitParameters) DeepCopyInto(out *AvailabilityInitParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AvailabilityInitParameters.
func (in *AvailabilityInitParameters) DeepCopy() *AvailabilityInitParameters {
	if in == nil {
		return nil
	}
	out := new(AvailabilityInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AvailabilityObservation) DeepCopyInto(out *AvailabilityObservation) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AvailabilityObservation.
func (in *AvailabilityObservation) DeepCopy() *AvailabilityObservation {
	if in == nil {
		return nil
	}
	out := new(AvailabilityObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AvailabilityParameters) DeepCopyInto(out *AvailabilityParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AvailabilityParameters.
func (in *AvailabilityParameters) DeepCopy() *AvailabilityParameters {
	if in == nil {
		return nil
	}
	out := new(AvailabilityParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BasicServiceInitParameters) DeepCopyInto(out *BasicServiceInitParameters) {
	*out = *in
	if in.ServiceLabels != nil {
		in, out := &in.ServiceLabels, &out.ServiceLabels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ServiceType != nil {
		in, out := &in.ServiceType, &out.ServiceType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BasicServiceInitParameters.
func (in *BasicServiceInitParameters) DeepCopy() *BasicServiceInitParameters {
	if in == nil {
		return nil
	}
	out := new(BasicServiceInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BasicServiceObservation) DeepCopyInto(out *BasicServiceObservation) {
	*out = *in
	if in.ServiceLabels != nil {
		in, out := &in.ServiceLabels, &out.ServiceLabels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ServiceType != nil {
		in, out := &in.ServiceType, &out.ServiceType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BasicServiceObservation.
func (in *BasicServiceObservation) DeepCopy() *BasicServiceObservation {
	if in == nil {
		return nil
	}
	out := new(BasicServiceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BasicServiceParameters) DeepCopyInto(out *BasicServiceParameters) {
	*out = *in
	if in.ServiceLabels != nil {
		in, out := &in.ServiceLabels, &out.ServiceLabels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ServiceType != nil {
		in, out := &in.ServiceType, &out.ServiceType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BasicServiceParameters.
func (in *BasicServiceParameters) DeepCopy() *BasicServiceParameters {
	if in == nil {
		return nil
	}
	out := new(BasicServiceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BasicSliInitParameters) DeepCopyInto(out *BasicSliInitParameters) {
	*out = *in
	if in.Availability != nil {
		in, out := &in.Availability, &out.Availability
		*out = make([]AvailabilityInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Latency != nil {
		in, out := &in.Latency, &out.Latency
		*out = make([]LatencyInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Method != nil {
		in, out := &in.Method, &out.Method
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BasicSliInitParameters.
func (in *BasicSliInitParameters) DeepCopy() *BasicSliInitParameters {
	if in == nil {
		return nil
	}
	out := new(BasicSliInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BasicSliObservation) DeepCopyInto(out *BasicSliObservation) {
	*out = *in
	if in.Availability != nil {
		in, out := &in.Availability, &out.Availability
		*out = make([]AvailabilityObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Latency != nil {
		in, out := &in.Latency, &out.Latency
		*out = make([]LatencyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Method != nil {
		in, out := &in.Method, &out.Method
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BasicSliObservation.
func (in *BasicSliObservation) DeepCopy() *BasicSliObservation {
	if in == nil {
		return nil
	}
	out := new(BasicSliObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BasicSliParameters) DeepCopyInto(out *BasicSliParameters) {
	*out = *in
	if in.Availability != nil {
		in, out := &in.Availability, &out.Availability
		*out = make([]AvailabilityParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Latency != nil {
		in, out := &in.Latency, &out.Latency
		*out = make([]LatencyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Method != nil {
		in, out := &in.Method, &out.Method
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BasicSliParameters.
func (in *BasicSliParameters) DeepCopy() *BasicSliParameters {
	if in == nil {
		return nil
	}
	out := new(BasicSliParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BasicSliPerformanceAvailabilityInitParameters) DeepCopyInto(out *BasicSliPerformanceAvailabilityInitParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BasicSliPerformanceAvailabilityInitParameters.
func (in *BasicSliPerformanceAvailabilityInitParameters) DeepCopy() *BasicSliPerformanceAvailabilityInitParameters {
	if in == nil {
		return nil
	}
	out := new(BasicSliPerformanceAvailabilityInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BasicSliPerformanceAvailabilityObservation) DeepCopyInto(out *BasicSliPerformanceAvailabilityObservation) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BasicSliPerformanceAvailabilityObservation.
func (in *BasicSliPerformanceAvailabilityObservation) DeepCopy() *BasicSliPerformanceAvailabilityObservation {
	if in == nil {
		return nil
	}
	out := new(BasicSliPerformanceAvailabilityObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BasicSliPerformanceAvailabilityParameters) DeepCopyInto(out *BasicSliPerformanceAvailabilityParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BasicSliPerformanceAvailabilityParameters.
func (in *BasicSliPerformanceAvailabilityParameters) DeepCopy() *BasicSliPerformanceAvailabilityParameters {
	if in == nil {
		return nil
	}
	out := new(BasicSliPerformanceAvailabilityParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BasicSliPerformanceInitParameters) DeepCopyInto(out *BasicSliPerformanceInitParameters) {
	*out = *in
	if in.Availability != nil {
		in, out := &in.Availability, &out.Availability
		*out = make([]BasicSliPerformanceAvailabilityInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Latency != nil {
		in, out := &in.Latency, &out.Latency
		*out = make([]BasicSliPerformanceLatencyInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Method != nil {
		in, out := &in.Method, &out.Method
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BasicSliPerformanceInitParameters.
func (in *BasicSliPerformanceInitParameters) DeepCopy() *BasicSliPerformanceInitParameters {
	if in == nil {
		return nil
	}
	out := new(BasicSliPerformanceInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BasicSliPerformanceLatencyInitParameters) DeepCopyInto(out *BasicSliPerformanceLatencyInitParameters) {
	*out = *in
	if in.Threshold != nil {
		in, out := &in.Threshold, &out.Threshold
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BasicSliPerformanceLatencyInitParameters.
func (in *BasicSliPerformanceLatencyInitParameters) DeepCopy() *BasicSliPerformanceLatencyInitParameters {
	if in == nil {
		return nil
	}
	out := new(BasicSliPerformanceLatencyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BasicSliPerformanceLatencyObservation) DeepCopyInto(out *BasicSliPerformanceLatencyObservation) {
	*out = *in
	if in.Threshold != nil {
		in, out := &in.Threshold, &out.Threshold
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BasicSliPerformanceLatencyObservation.
func (in *BasicSliPerformanceLatencyObservation) DeepCopy() *BasicSliPerformanceLatencyObservation {
	if in == nil {
		return nil
	}
	out := new(BasicSliPerformanceLatencyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BasicSliPerformanceLatencyParameters) DeepCopyInto(out *BasicSliPerformanceLatencyParameters) {
	*out = *in
	if in.Threshold != nil {
		in, out := &in.Threshold, &out.Threshold
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BasicSliPerformanceLatencyParameters.
func (in *BasicSliPerformanceLatencyParameters) DeepCopy() *BasicSliPerformanceLatencyParameters {
	if in == nil {
		return nil
	}
	out := new(BasicSliPerformanceLatencyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BasicSliPerformanceObservation) DeepCopyInto(out *BasicSliPerformanceObservation) {
	*out = *in
	if in.Availability != nil {
		in, out := &in.Availability, &out.Availability
		*out = make([]BasicSliPerformanceAvailabilityObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Latency != nil {
		in, out := &in.Latency, &out.Latency
		*out = make([]BasicSliPerformanceLatencyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Method != nil {
		in, out := &in.Method, &out.Method
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BasicSliPerformanceObservation.
func (in *BasicSliPerformanceObservation) DeepCopy() *BasicSliPerformanceObservation {
	if in == nil {
		return nil
	}
	out := new(BasicSliPerformanceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BasicSliPerformanceParameters) DeepCopyInto(out *BasicSliPerformanceParameters) {
	*out = *in
	if in.Availability != nil {
		in, out := &in.Availability, &out.Availability
		*out = make([]BasicSliPerformanceAvailabilityParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Latency != nil {
		in, out := &in.Latency, &out.Latency
		*out = make([]BasicSliPerformanceLatencyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Method != nil {
		in, out := &in.Method, &out.Method
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BasicSliPerformanceParameters.
func (in *BasicSliPerformanceParameters) DeepCopy() *BasicSliPerformanceParameters {
	if in == nil {
		return nil
	}
	out := new(BasicSliPerformanceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CloudFunctionV2InitParameters) DeepCopyInto(out *CloudFunctionV2InitParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NameRef != nil {
		in, out := &in.NameRef, &out.NameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.NameSelector != nil {
		in, out := &in.NameSelector, &out.NameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CloudFunctionV2InitParameters.
func (in *CloudFunctionV2InitParameters) DeepCopy() *CloudFunctionV2InitParameters {
	if in == nil {
		return nil
	}
	out := new(CloudFunctionV2InitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CloudFunctionV2Observation) DeepCopyInto(out *CloudFunctionV2Observation) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CloudFunctionV2Observation.
func (in *CloudFunctionV2Observation) DeepCopy() *CloudFunctionV2Observation {
	if in == nil {
		return nil
	}
	out := new(CloudFunctionV2Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CloudFunctionV2Parameters) DeepCopyInto(out *CloudFunctionV2Parameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NameRef != nil {
		in, out := &in.NameRef, &out.NameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.NameSelector != nil {
		in, out := &in.NameSelector, &out.NameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CloudFunctionV2Parameters.
func (in *CloudFunctionV2Parameters) DeepCopy() *CloudFunctionV2Parameters {
	if in == nil {
		return nil
	}
	out := new(CloudFunctionV2Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConditionAbsentInitParameters) DeepCopyInto(out *ConditionAbsentInitParameters) {
	*out = *in
	if in.Aggregations != nil {
		in, out := &in.Aggregations, &out.Aggregations
		*out = make([]AggregationsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Duration != nil {
		in, out := &in.Duration, &out.Duration
		*out = new(string)
		**out = **in
	}
	if in.Filter != nil {
		in, out := &in.Filter, &out.Filter
		*out = new(string)
		**out = **in
	}
	if in.Trigger != nil {
		in, out := &in.Trigger, &out.Trigger
		*out = make([]TriggerInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConditionAbsentInitParameters.
func (in *ConditionAbsentInitParameters) DeepCopy() *ConditionAbsentInitParameters {
	if in == nil {
		return nil
	}
	out := new(ConditionAbsentInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConditionAbsentObservation) DeepCopyInto(out *ConditionAbsentObservation) {
	*out = *in
	if in.Aggregations != nil {
		in, out := &in.Aggregations, &out.Aggregations
		*out = make([]AggregationsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Duration != nil {
		in, out := &in.Duration, &out.Duration
		*out = new(string)
		**out = **in
	}
	if in.Filter != nil {
		in, out := &in.Filter, &out.Filter
		*out = new(string)
		**out = **in
	}
	if in.Trigger != nil {
		in, out := &in.Trigger, &out.Trigger
		*out = make([]TriggerObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConditionAbsentObservation.
func (in *ConditionAbsentObservation) DeepCopy() *ConditionAbsentObservation {
	if in == nil {
		return nil
	}
	out := new(ConditionAbsentObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConditionAbsentParameters) DeepCopyInto(out *ConditionAbsentParameters) {
	*out = *in
	if in.Aggregations != nil {
		in, out := &in.Aggregations, &out.Aggregations
		*out = make([]AggregationsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Duration != nil {
		in, out := &in.Duration, &out.Duration
		*out = new(string)
		**out = **in
	}
	if in.Filter != nil {
		in, out := &in.Filter, &out.Filter
		*out = new(string)
		**out = **in
	}
	if in.Trigger != nil {
		in, out := &in.Trigger, &out.Trigger
		*out = make([]TriggerParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConditionAbsentParameters.
func (in *ConditionAbsentParameters) DeepCopy() *ConditionAbsentParameters {
	if in == nil {
		return nil
	}
	out := new(ConditionAbsentParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConditionMatchedLogInitParameters) DeepCopyInto(out *ConditionMatchedLogInitParameters) {
	*out = *in
	if in.Filter != nil {
		in, out := &in.Filter, &out.Filter
		*out = new(string)
		**out = **in
	}
	if in.LabelExtractors != nil {
		in, out := &in.LabelExtractors, &out.LabelExtractors
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConditionMatchedLogInitParameters.
func (in *ConditionMatchedLogInitParameters) DeepCopy() *ConditionMatchedLogInitParameters {
	if in == nil {
		return nil
	}
	out := new(ConditionMatchedLogInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConditionMatchedLogObservation) DeepCopyInto(out *ConditionMatchedLogObservation) {
	*out = *in
	if in.Filter != nil {
		in, out := &in.Filter, &out.Filter
		*out = new(string)
		**out = **in
	}
	if in.LabelExtractors != nil {
		in, out := &in.LabelExtractors, &out.LabelExtractors
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConditionMatchedLogObservation.
func (in *ConditionMatchedLogObservation) DeepCopy() *ConditionMatchedLogObservation {
	if in == nil {
		return nil
	}
	out := new(ConditionMatchedLogObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConditionMatchedLogParameters) DeepCopyInto(out *ConditionMatchedLogParameters) {
	*out = *in
	if in.Filter != nil {
		in, out := &in.Filter, &out.Filter
		*out = new(string)
		**out = **in
	}
	if in.LabelExtractors != nil {
		in, out := &in.LabelExtractors, &out.LabelExtractors
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConditionMatchedLogParameters.
func (in *ConditionMatchedLogParameters) DeepCopy() *ConditionMatchedLogParameters {
	if in == nil {
		return nil
	}
	out := new(ConditionMatchedLogParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConditionMonitoringQueryLanguageInitParameters) DeepCopyInto(out *ConditionMonitoringQueryLanguageInitParameters) {
	*out = *in
	if in.Duration != nil {
		in, out := &in.Duration, &out.Duration
		*out = new(string)
		**out = **in
	}
	if in.EvaluationMissingData != nil {
		in, out := &in.EvaluationMissingData, &out.EvaluationMissingData
		*out = new(string)
		**out = **in
	}
	if in.Query != nil {
		in, out := &in.Query, &out.Query
		*out = new(string)
		**out = **in
	}
	if in.Trigger != nil {
		in, out := &in.Trigger, &out.Trigger
		*out = make([]ConditionMonitoringQueryLanguageTriggerInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConditionMonitoringQueryLanguageInitParameters.
func (in *ConditionMonitoringQueryLanguageInitParameters) DeepCopy() *ConditionMonitoringQueryLanguageInitParameters {
	if in == nil {
		return nil
	}
	out := new(ConditionMonitoringQueryLanguageInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConditionMonitoringQueryLanguageObservation) DeepCopyInto(out *ConditionMonitoringQueryLanguageObservation) {
	*out = *in
	if in.Duration != nil {
		in, out := &in.Duration, &out.Duration
		*out = new(string)
		**out = **in
	}
	if in.EvaluationMissingData != nil {
		in, out := &in.EvaluationMissingData, &out.EvaluationMissingData
		*out = new(string)
		**out = **in
	}
	if in.Query != nil {
		in, out := &in.Query, &out.Query
		*out = new(string)
		**out = **in
	}
	if in.Trigger != nil {
		in, out := &in.Trigger, &out.Trigger
		*out = make([]ConditionMonitoringQueryLanguageTriggerObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConditionMonitoringQueryLanguageObservation.
func (in *ConditionMonitoringQueryLanguageObservation) DeepCopy() *ConditionMonitoringQueryLanguageObservation {
	if in == nil {
		return nil
	}
	out := new(ConditionMonitoringQueryLanguageObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConditionMonitoringQueryLanguageParameters) DeepCopyInto(out *ConditionMonitoringQueryLanguageParameters) {
	*out = *in
	if in.Duration != nil {
		in, out := &in.Duration, &out.Duration
		*out = new(string)
		**out = **in
	}
	if in.EvaluationMissingData != nil {
		in, out := &in.EvaluationMissingData, &out.EvaluationMissingData
		*out = new(string)
		**out = **in
	}
	if in.Query != nil {
		in, out := &in.Query, &out.Query
		*out = new(string)
		**out = **in
	}
	if in.Trigger != nil {
		in, out := &in.Trigger, &out.Trigger
		*out = make([]ConditionMonitoringQueryLanguageTriggerParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConditionMonitoringQueryLanguageParameters.
func (in *ConditionMonitoringQueryLanguageParameters) DeepCopy() *ConditionMonitoringQueryLanguageParameters {
	if in == nil {
		return nil
	}
	out := new(ConditionMonitoringQueryLanguageParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConditionMonitoringQueryLanguageTriggerInitParameters) DeepCopyInto(out *ConditionMonitoringQueryLanguageTriggerInitParameters) {
	*out = *in
	if in.Count != nil {
		in, out := &in.Count, &out.Count
		*out = new(float64)
		**out = **in
	}
	if in.Percent != nil {
		in, out := &in.Percent, &out.Percent
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConditionMonitoringQueryLanguageTriggerInitParameters.
func (in *ConditionMonitoringQueryLanguageTriggerInitParameters) DeepCopy() *ConditionMonitoringQueryLanguageTriggerInitParameters {
	if in == nil {
		return nil
	}
	out := new(ConditionMonitoringQueryLanguageTriggerInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConditionMonitoringQueryLanguageTriggerObservation) DeepCopyInto(out *ConditionMonitoringQueryLanguageTriggerObservation) {
	*out = *in
	if in.Count != nil {
		in, out := &in.Count, &out.Count
		*out = new(float64)
		**out = **in
	}
	if in.Percent != nil {
		in, out := &in.Percent, &out.Percent
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConditionMonitoringQueryLanguageTriggerObservation.
func (in *ConditionMonitoringQueryLanguageTriggerObservation) DeepCopy() *ConditionMonitoringQueryLanguageTriggerObservation {
	if in == nil {
		return nil
	}
	out := new(ConditionMonitoringQueryLanguageTriggerObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConditionMonitoringQueryLanguageTriggerParameters) DeepCopyInto(out *ConditionMonitoringQueryLanguageTriggerParameters) {
	*out = *in
	if in.Count != nil {
		in, out := &in.Count, &out.Count
		*out = new(float64)
		**out = **in
	}
	if in.Percent != nil {
		in, out := &in.Percent, &out.Percent
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConditionMonitoringQueryLanguageTriggerParameters.
func (in *ConditionMonitoringQueryLanguageTriggerParameters) DeepCopy() *ConditionMonitoringQueryLanguageTriggerParameters {
	if in == nil {
		return nil
	}
	out := new(ConditionMonitoringQueryLanguageTriggerParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConditionPrometheusQueryLanguageInitParameters) DeepCopyInto(out *ConditionPrometheusQueryLanguageInitParameters) {
	*out = *in
	if in.AlertRule != nil {
		in, out := &in.AlertRule, &out.AlertRule
		*out = new(string)
		**out = **in
	}
	if in.Duration != nil {
		in, out := &in.Duration, &out.Duration
		*out = new(string)
		**out = **in
	}
	if in.EvaluationInterval != nil {
		in, out := &in.EvaluationInterval, &out.EvaluationInterval
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Query != nil {
		in, out := &in.Query, &out.Query
		*out = new(string)
		**out = **in
	}
	if in.RuleGroup != nil {
		in, out := &in.RuleGroup, &out.RuleGroup
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConditionPrometheusQueryLanguageInitParameters.
func (in *ConditionPrometheusQueryLanguageInitParameters) DeepCopy() *ConditionPrometheusQueryLanguageInitParameters {
	if in == nil {
		return nil
	}
	out := new(ConditionPrometheusQueryLanguageInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConditionPrometheusQueryLanguageObservation) DeepCopyInto(out *ConditionPrometheusQueryLanguageObservation) {
	*out = *in
	if in.AlertRule != nil {
		in, out := &in.AlertRule, &out.AlertRule
		*out = new(string)
		**out = **in
	}
	if in.Duration != nil {
		in, out := &in.Duration, &out.Duration
		*out = new(string)
		**out = **in
	}
	if in.EvaluationInterval != nil {
		in, out := &in.EvaluationInterval, &out.EvaluationInterval
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Query != nil {
		in, out := &in.Query, &out.Query
		*out = new(string)
		**out = **in
	}
	if in.RuleGroup != nil {
		in, out := &in.RuleGroup, &out.RuleGroup
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConditionPrometheusQueryLanguageObservation.
func (in *ConditionPrometheusQueryLanguageObservation) DeepCopy() *ConditionPrometheusQueryLanguageObservation {
	if in == nil {
		return nil
	}
	out := new(ConditionPrometheusQueryLanguageObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConditionPrometheusQueryLanguageParameters) DeepCopyInto(out *ConditionPrometheusQueryLanguageParameters) {
	*out = *in
	if in.AlertRule != nil {
		in, out := &in.AlertRule, &out.AlertRule
		*out = new(string)
		**out = **in
	}
	if in.Duration != nil {
		in, out := &in.Duration, &out.Duration
		*out = new(string)
		**out = **in
	}
	if in.EvaluationInterval != nil {
		in, out := &in.EvaluationInterval, &out.EvaluationInterval
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Query != nil {
		in, out := &in.Query, &out.Query
		*out = new(string)
		**out = **in
	}
	if in.RuleGroup != nil {
		in, out := &in.RuleGroup, &out.RuleGroup
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConditionPrometheusQueryLanguageParameters.
func (in *ConditionPrometheusQueryLanguageParameters) DeepCopy() *ConditionPrometheusQueryLanguageParameters {
	if in == nil {
		return nil
	}
	out := new(ConditionPrometheusQueryLanguageParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConditionThresholdAggregationsInitParameters) DeepCopyInto(out *ConditionThresholdAggregationsInitParameters) {
	*out = *in
	if in.AlignmentPeriod != nil {
		in, out := &in.AlignmentPeriod, &out.AlignmentPeriod
		*out = new(string)
		**out = **in
	}
	if in.CrossSeriesReducer != nil {
		in, out := &in.CrossSeriesReducer, &out.CrossSeriesReducer
		*out = new(string)
		**out = **in
	}
	if in.GroupByFields != nil {
		in, out := &in.GroupByFields, &out.GroupByFields
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.PerSeriesAligner != nil {
		in, out := &in.PerSeriesAligner, &out.PerSeriesAligner
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConditionThresholdAggregationsInitParameters.
func (in *ConditionThresholdAggregationsInitParameters) DeepCopy() *ConditionThresholdAggregationsInitParameters {
	if in == nil {
		return nil
	}
	out := new(ConditionThresholdAggregationsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConditionThresholdAggregationsObservation) DeepCopyInto(out *ConditionThresholdAggregationsObservation) {
	*out = *in
	if in.AlignmentPeriod != nil {
		in, out := &in.AlignmentPeriod, &out.AlignmentPeriod
		*out = new(string)
		**out = **in
	}
	if in.CrossSeriesReducer != nil {
		in, out := &in.CrossSeriesReducer, &out.CrossSeriesReducer
		*out = new(string)
		**out = **in
	}
	if in.GroupByFields != nil {
		in, out := &in.GroupByFields, &out.GroupByFields
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.PerSeriesAligner != nil {
		in, out := &in.PerSeriesAligner, &out.PerSeriesAligner
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConditionThresholdAggregationsObservation.
func (in *ConditionThresholdAggregationsObservation) DeepCopy() *ConditionThresholdAggregationsObservation {
	if in == nil {
		return nil
	}
	out := new(ConditionThresholdAggregationsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConditionThresholdAggregationsParameters) DeepCopyInto(out *ConditionThresholdAggregationsParameters) {
	*out = *in
	if in.AlignmentPeriod != nil {
		in, out := &in.AlignmentPeriod, &out.AlignmentPeriod
		*out = new(string)
		**out = **in
	}
	if in.CrossSeriesReducer != nil {
		in, out := &in.CrossSeriesReducer, &out.CrossSeriesReducer
		*out = new(string)
		**out = **in
	}
	if in.GroupByFields != nil {
		in, out := &in.GroupByFields, &out.GroupByFields
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.PerSeriesAligner != nil {
		in, out := &in.PerSeriesAligner, &out.PerSeriesAligner
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConditionThresholdAggregationsParameters.
func (in *ConditionThresholdAggregationsParameters) DeepCopy() *ConditionThresholdAggregationsParameters {
	if in == nil {
		return nil
	}
	out := new(ConditionThresholdAggregationsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConditionThresholdInitParameters) DeepCopyInto(out *ConditionThresholdInitParameters) {
	*out = *in
	if in.Aggregations != nil {
		in, out := &in.Aggregations, &out.Aggregations
		*out = make([]ConditionThresholdAggregationsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Comparison != nil {
		in, out := &in.Comparison, &out.Comparison
		*out = new(string)
		**out = **in
	}
	if in.DenominatorAggregations != nil {
		in, out := &in.DenominatorAggregations, &out.DenominatorAggregations
		*out = make([]DenominatorAggregationsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DenominatorFilter != nil {
		in, out := &in.DenominatorFilter, &out.DenominatorFilter
		*out = new(string)
		**out = **in
	}
	if in.Duration != nil {
		in, out := &in.Duration, &out.Duration
		*out = new(string)
		**out = **in
	}
	if in.EvaluationMissingData != nil {
		in, out := &in.EvaluationMissingData, &out.EvaluationMissingData
		*out = new(string)
		**out = **in
	}
	if in.Filter != nil {
		in, out := &in.Filter, &out.Filter
		*out = new(string)
		**out = **in
	}
	if in.ForecastOptions != nil {
		in, out := &in.ForecastOptions, &out.ForecastOptions
		*out = make([]ForecastOptionsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ThresholdValue != nil {
		in, out := &in.ThresholdValue, &out.ThresholdValue
		*out = new(float64)
		**out = **in
	}
	if in.Trigger != nil {
		in, out := &in.Trigger, &out.Trigger
		*out = make([]ConditionThresholdTriggerInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConditionThresholdInitParameters.
func (in *ConditionThresholdInitParameters) DeepCopy() *ConditionThresholdInitParameters {
	if in == nil {
		return nil
	}
	out := new(ConditionThresholdInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConditionThresholdObservation) DeepCopyInto(out *ConditionThresholdObservation) {
	*out = *in
	if in.Aggregations != nil {
		in, out := &in.Aggregations, &out.Aggregations
		*out = make([]ConditionThresholdAggregationsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Comparison != nil {
		in, out := &in.Comparison, &out.Comparison
		*out = new(string)
		**out = **in
	}
	if in.DenominatorAggregations != nil {
		in, out := &in.DenominatorAggregations, &out.DenominatorAggregations
		*out = make([]DenominatorAggregationsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DenominatorFilter != nil {
		in, out := &in.DenominatorFilter, &out.DenominatorFilter
		*out = new(string)
		**out = **in
	}
	if in.Duration != nil {
		in, out := &in.Duration, &out.Duration
		*out = new(string)
		**out = **in
	}
	if in.EvaluationMissingData != nil {
		in, out := &in.EvaluationMissingData, &out.EvaluationMissingData
		*out = new(string)
		**out = **in
	}
	if in.Filter != nil {
		in, out := &in.Filter, &out.Filter
		*out = new(string)
		**out = **in
	}
	if in.ForecastOptions != nil {
		in, out := &in.ForecastOptions, &out.ForecastOptions
		*out = make([]ForecastOptionsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ThresholdValue != nil {
		in, out := &in.ThresholdValue, &out.ThresholdValue
		*out = new(float64)
		**out = **in
	}
	if in.Trigger != nil {
		in, out := &in.Trigger, &out.Trigger
		*out = make([]ConditionThresholdTriggerObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConditionThresholdObservation.
func (in *ConditionThresholdObservation) DeepCopy() *ConditionThresholdObservation {
	if in == nil {
		return nil
	}
	out := new(ConditionThresholdObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConditionThresholdParameters) DeepCopyInto(out *ConditionThresholdParameters) {
	*out = *in
	if in.Aggregations != nil {
		in, out := &in.Aggregations, &out.Aggregations
		*out = make([]ConditionThresholdAggregationsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Comparison != nil {
		in, out := &in.Comparison, &out.Comparison
		*out = new(string)
		**out = **in
	}
	if in.DenominatorAggregations != nil {
		in, out := &in.DenominatorAggregations, &out.DenominatorAggregations
		*out = make([]DenominatorAggregationsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DenominatorFilter != nil {
		in, out := &in.DenominatorFilter, &out.DenominatorFilter
		*out = new(string)
		**out = **in
	}
	if in.Duration != nil {
		in, out := &in.Duration, &out.Duration
		*out = new(string)
		**out = **in
	}
	if in.EvaluationMissingData != nil {
		in, out := &in.EvaluationMissingData, &out.EvaluationMissingData
		*out = new(string)
		**out = **in
	}
	if in.Filter != nil {
		in, out := &in.Filter, &out.Filter
		*out = new(string)
		**out = **in
	}
	if in.ForecastOptions != nil {
		in, out := &in.ForecastOptions, &out.ForecastOptions
		*out = make([]ForecastOptionsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ThresholdValue != nil {
		in, out := &in.ThresholdValue, &out.ThresholdValue
		*out = new(float64)
		**out = **in
	}
	if in.Trigger != nil {
		in, out := &in.Trigger, &out.Trigger
		*out = make([]ConditionThresholdTriggerParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConditionThresholdParameters.
func (in *ConditionThresholdParameters) DeepCopy() *ConditionThresholdParameters {
	if in == nil {
		return nil
	}
	out := new(ConditionThresholdParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConditionThresholdTriggerInitParameters) DeepCopyInto(out *ConditionThresholdTriggerInitParameters) {
	*out = *in
	if in.Count != nil {
		in, out := &in.Count, &out.Count
		*out = new(float64)
		**out = **in
	}
	if in.Percent != nil {
		in, out := &in.Percent, &out.Percent
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConditionThresholdTriggerInitParameters.
func (in *ConditionThresholdTriggerInitParameters) DeepCopy() *ConditionThresholdTriggerInitParameters {
	if in == nil {
		return nil
	}
	out := new(ConditionThresholdTriggerInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConditionThresholdTriggerObservation) DeepCopyInto(out *ConditionThresholdTriggerObservation) {
	*out = *in
	if in.Count != nil {
		in, out := &in.Count, &out.Count
		*out = new(float64)
		**out = **in
	}
	if in.Percent != nil {
		in, out := &in.Percent, &out.Percent
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConditionThresholdTriggerObservation.
func (in *ConditionThresholdTriggerObservation) DeepCopy() *ConditionThresholdTriggerObservation {
	if in == nil {
		return nil
	}
	out := new(ConditionThresholdTriggerObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConditionThresholdTriggerParameters) DeepCopyInto(out *ConditionThresholdTriggerParameters) {
	*out = *in
	if in.Count != nil {
		in, out := &in.Count, &out.Count
		*out = new(float64)
		**out = **in
	}
	if in.Percent != nil {
		in, out := &in.Percent, &out.Percent
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConditionThresholdTriggerParameters.
func (in *ConditionThresholdTriggerParameters) DeepCopy() *ConditionThresholdTriggerParameters {
	if in == nil {
		return nil
	}
	out := new(ConditionThresholdTriggerParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConditionsInitParameters) DeepCopyInto(out *ConditionsInitParameters) {
	*out = *in
	if in.ConditionAbsent != nil {
		in, out := &in.ConditionAbsent, &out.ConditionAbsent
		*out = make([]ConditionAbsentInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ConditionMatchedLog != nil {
		in, out := &in.ConditionMatchedLog, &out.ConditionMatchedLog
		*out = make([]ConditionMatchedLogInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ConditionMonitoringQueryLanguage != nil {
		in, out := &in.ConditionMonitoringQueryLanguage, &out.ConditionMonitoringQueryLanguage
		*out = make([]ConditionMonitoringQueryLanguageInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ConditionPrometheusQueryLanguage != nil {
		in, out := &in.ConditionPrometheusQueryLanguage, &out.ConditionPrometheusQueryLanguage
		*out = make([]ConditionPrometheusQueryLanguageInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ConditionThreshold != nil {
		in, out := &in.ConditionThreshold, &out.ConditionThreshold
		*out = make([]ConditionThresholdInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConditionsInitParameters.
func (in *ConditionsInitParameters) DeepCopy() *ConditionsInitParameters {
	if in == nil {
		return nil
	}
	out := new(ConditionsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConditionsObservation) DeepCopyInto(out *ConditionsObservation) {
	*out = *in
	if in.ConditionAbsent != nil {
		in, out := &in.ConditionAbsent, &out.ConditionAbsent
		*out = make([]ConditionAbsentObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ConditionMatchedLog != nil {
		in, out := &in.ConditionMatchedLog, &out.ConditionMatchedLog
		*out = make([]ConditionMatchedLogObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ConditionMonitoringQueryLanguage != nil {
		in, out := &in.ConditionMonitoringQueryLanguage, &out.ConditionMonitoringQueryLanguage
		*out = make([]ConditionMonitoringQueryLanguageObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ConditionPrometheusQueryLanguage != nil {
		in, out := &in.ConditionPrometheusQueryLanguage, &out.ConditionPrometheusQueryLanguage
		*out = make([]ConditionPrometheusQueryLanguageObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ConditionThreshold != nil {
		in, out := &in.ConditionThreshold, &out.ConditionThreshold
		*out = make([]ConditionThresholdObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConditionsObservation.
func (in *ConditionsObservation) DeepCopy() *ConditionsObservation {
	if in == nil {
		return nil
	}
	out := new(ConditionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConditionsParameters) DeepCopyInto(out *ConditionsParameters) {
	*out = *in
	if in.ConditionAbsent != nil {
		in, out := &in.ConditionAbsent, &out.ConditionAbsent
		*out = make([]ConditionAbsentParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ConditionMatchedLog != nil {
		in, out := &in.ConditionMatchedLog, &out.ConditionMatchedLog
		*out = make([]ConditionMatchedLogParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ConditionMonitoringQueryLanguage != nil {
		in, out := &in.ConditionMonitoringQueryLanguage, &out.ConditionMonitoringQueryLanguage
		*out = make([]ConditionMonitoringQueryLanguageParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ConditionPrometheusQueryLanguage != nil {
		in, out := &in.ConditionPrometheusQueryLanguage, &out.ConditionPrometheusQueryLanguage
		*out = make([]ConditionPrometheusQueryLanguageParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ConditionThreshold != nil {
		in, out := &in.ConditionThreshold, &out.ConditionThreshold
		*out = make([]ConditionThresholdParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConditionsParameters.
func (in *ConditionsParameters) DeepCopy() *ConditionsParameters {
	if in == nil {
		return nil
	}
	out := new(ConditionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ContentMatchersInitParameters) DeepCopyInto(out *ContentMatchersInitParameters) {
	*out = *in
	if in.Content != nil {
		in, out := &in.Content, &out.Content
		*out = new(string)
		**out = **in
	}
	if in.JSONPathMatcher != nil {
		in, out := &in.JSONPathMatcher, &out.JSONPathMatcher
		*out = make([]JSONPathMatcherInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Matcher != nil {
		in, out := &in.Matcher, &out.Matcher
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ContentMatchersInitParameters.
func (in *ContentMatchersInitParameters) DeepCopy() *ContentMatchersInitParameters {
	if in == nil {
		return nil
	}
	out := new(ContentMatchersInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ContentMatchersObservation) DeepCopyInto(out *ContentMatchersObservation) {
	*out = *in
	if in.Content != nil {
		in, out := &in.Content, &out.Content
		*out = new(string)
		**out = **in
	}
	if in.JSONPathMatcher != nil {
		in, out := &in.JSONPathMatcher, &out.JSONPathMatcher
		*out = make([]JSONPathMatcherObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Matcher != nil {
		in, out := &in.Matcher, &out.Matcher
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ContentMatchersObservation.
func (in *ContentMatchersObservation) DeepCopy() *ContentMatchersObservation {
	if in == nil {
		return nil
	}
	out := new(ContentMatchersObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ContentMatchersParameters) DeepCopyInto(out *ContentMatchersParameters) {
	*out = *in
	if in.Content != nil {
		in, out := &in.Content, &out.Content
		*out = new(string)
		**out = **in
	}
	if in.JSONPathMatcher != nil {
		in, out := &in.JSONPathMatcher, &out.JSONPathMatcher
		*out = make([]JSONPathMatcherParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Matcher != nil {
		in, out := &in.Matcher, &out.Matcher
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ContentMatchersParameters.
func (in *ContentMatchersParameters) DeepCopy() *ContentMatchersParameters {
	if in == nil {
		return nil
	}
	out := new(ContentMatchersParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CreationRecordInitParameters) DeepCopyInto(out *CreationRecordInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CreationRecordInitParameters.
func (in *CreationRecordInitParameters) DeepCopy() *CreationRecordInitParameters {
	if in == nil {
		return nil
	}
	out := new(CreationRecordInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CreationRecordObservation) DeepCopyInto(out *CreationRecordObservation) {
	*out = *in
	if in.MutateTime != nil {
		in, out := &in.MutateTime, &out.MutateTime
		*out = new(string)
		**out = **in
	}
	if in.MutatedBy != nil {
		in, out := &in.MutatedBy, &out.MutatedBy
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CreationRecordObservation.
func (in *CreationRecordObservation) DeepCopy() *CreationRecordObservation {
	if in == nil {
		return nil
	}
	out := new(CreationRecordObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CreationRecordParameters) DeepCopyInto(out *CreationRecordParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CreationRecordParameters.
func (in *CreationRecordParameters) DeepCopy() *CreationRecordParameters {
	if in == nil {
		return nil
	}
	out := new(CreationRecordParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomService) DeepCopyInto(out *CustomService) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomService.
func (in *CustomService) DeepCopy() *CustomService {
	if in == nil {
		return nil
	}
	out := new(CustomService)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *CustomService) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomServiceInitParameters) DeepCopyInto(out *CustomServiceInitParameters) {
	*out = *in
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.ServiceID != nil {
		in, out := &in.ServiceID, &out.ServiceID
		*out = new(string)
		**out = **in
	}
	if in.Telemetry != nil {
		in, out := &in.Telemetry, &out.Telemetry
		*out = make([]TelemetryInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.UserLabels != nil {
		in, out := &in.UserLabels, &out.UserLabels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomServiceInitParameters.
func (in *CustomServiceInitParameters) DeepCopy() *CustomServiceInitParameters {
	if in == nil {
		return nil
	}
	out := new(CustomServiceInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomServiceList) DeepCopyInto(out *CustomServiceList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]CustomService, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomServiceList.
func (in *CustomServiceList) DeepCopy() *CustomServiceList {
	if in == nil {
		return nil
	}
	out := new(CustomServiceList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *CustomServiceList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomServiceObservation) DeepCopyInto(out *CustomServiceObservation) {
	*out = *in
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.ServiceID != nil {
		in, out := &in.ServiceID, &out.ServiceID
		*out = new(string)
		**out = **in
	}
	if in.Telemetry != nil {
		in, out := &in.Telemetry, &out.Telemetry
		*out = make([]TelemetryObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.UserLabels != nil {
		in, out := &in.UserLabels, &out.UserLabels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomServiceObservation.
func (in *CustomServiceObservation) DeepCopy() *CustomServiceObservation {
	if in == nil {
		return nil
	}
	out := new(CustomServiceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomServiceParameters) DeepCopyInto(out *CustomServiceParameters) {
	*out = *in
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.ServiceID != nil {
		in, out := &in.ServiceID, &out.ServiceID
		*out = new(string)
		**out = **in
	}
	if in.Telemetry != nil {
		in, out := &in.Telemetry, &out.Telemetry
		*out = make([]TelemetryParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.UserLabels != nil {
		in, out := &in.UserLabels, &out.UserLabels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomServiceParameters.
func (in *CustomServiceParameters) DeepCopy() *CustomServiceParameters {
	if in == nil {
		return nil
	}
	out := new(CustomServiceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomServiceSpec) DeepCopyInto(out *CustomServiceSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomServiceSpec.
func (in *CustomServiceSpec) DeepCopy() *CustomServiceSpec {
	if in == nil {
		return nil
	}
	out := new(CustomServiceSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomServiceStatus) DeepCopyInto(out *CustomServiceStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomServiceStatus.
func (in *CustomServiceStatus) DeepCopy() *CustomServiceStatus {
	if in == nil {
		return nil
	}
	out := new(CustomServiceStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Dashboard) DeepCopyInto(out *Dashboard) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Dashboard.
func (in *Dashboard) DeepCopy() *Dashboard {
	if in == nil {
		return nil
	}
	out := new(Dashboard)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Dashboard) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DashboardInitParameters) DeepCopyInto(out *DashboardInitParameters) {
	*out = *in
	if in.DashboardJSON != nil {
		in, out := &in.DashboardJSON, &out.DashboardJSON
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DashboardInitParameters.
func (in *DashboardInitParameters) DeepCopy() *DashboardInitParameters {
	if in == nil {
		return nil
	}
	out := new(DashboardInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DashboardList) DeepCopyInto(out *DashboardList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Dashboard, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DashboardList.
func (in *DashboardList) DeepCopy() *DashboardList {
	if in == nil {
		return nil
	}
	out := new(DashboardList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DashboardList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DashboardObservation) DeepCopyInto(out *DashboardObservation) {
	*out = *in
	if in.DashboardJSON != nil {
		in, out := &in.DashboardJSON, &out.DashboardJSON
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DashboardObservation.
func (in *DashboardObservation) DeepCopy() *DashboardObservation {
	if in == nil {
		return nil
	}
	out := new(DashboardObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DashboardParameters) DeepCopyInto(out *DashboardParameters) {
	*out = *in
	if in.DashboardJSON != nil {
		in, out := &in.DashboardJSON, &out.DashboardJSON
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DashboardParameters.
func (in *DashboardParameters) DeepCopy() *DashboardParameters {
	if in == nil {
		return nil
	}
	out := new(DashboardParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DashboardSpec) DeepCopyInto(out *DashboardSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DashboardSpec.
func (in *DashboardSpec) DeepCopy() *DashboardSpec {
	if in == nil {
		return nil
	}
	out := new(DashboardSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DashboardStatus) DeepCopyInto(out *DashboardStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DashboardStatus.
func (in *DashboardStatus) DeepCopy() *DashboardStatus {
	if in == nil {
		return nil
	}
	out := new(DashboardStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DenominatorAggregationsInitParameters) DeepCopyInto(out *DenominatorAggregationsInitParameters) {
	*out = *in
	if in.AlignmentPeriod != nil {
		in, out := &in.AlignmentPeriod, &out.AlignmentPeriod
		*out = new(string)
		**out = **in
	}
	if in.CrossSeriesReducer != nil {
		in, out := &in.CrossSeriesReducer, &out.CrossSeriesReducer
		*out = new(string)
		**out = **in
	}
	if in.GroupByFields != nil {
		in, out := &in.GroupByFields, &out.GroupByFields
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.PerSeriesAligner != nil {
		in, out := &in.PerSeriesAligner, &out.PerSeriesAligner
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DenominatorAggregationsInitParameters.
func (in *DenominatorAggregationsInitParameters) DeepCopy() *DenominatorAggregationsInitParameters {
	if in == nil {
		return nil
	}
	out := new(DenominatorAggregationsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DenominatorAggregationsObservation) DeepCopyInto(out *DenominatorAggregationsObservation) {
	*out = *in
	if in.AlignmentPeriod != nil {
		in, out := &in.AlignmentPeriod, &out.AlignmentPeriod
		*out = new(string)
		**out = **in
	}
	if in.CrossSeriesReducer != nil {
		in, out := &in.CrossSeriesReducer, &out.CrossSeriesReducer
		*out = new(string)
		**out = **in
	}
	if in.GroupByFields != nil {
		in, out := &in.GroupByFields, &out.GroupByFields
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.PerSeriesAligner != nil {
		in, out := &in.PerSeriesAligner, &out.PerSeriesAligner
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DenominatorAggregationsObservation.
func (in *DenominatorAggregationsObservation) DeepCopy() *DenominatorAggregationsObservation {
	if in == nil {
		return nil
	}
	out := new(DenominatorAggregationsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DenominatorAggregationsParameters) DeepCopyInto(out *DenominatorAggregationsParameters) {
	*out = *in
	if in.AlignmentPeriod != nil {
		in, out := &in.AlignmentPeriod, &out.AlignmentPeriod
		*out = new(string)
		**out = **in
	}
	if in.CrossSeriesReducer != nil {
		in, out := &in.CrossSeriesReducer, &out.CrossSeriesReducer
		*out = new(string)
		**out = **in
	}
	if in.GroupByFields != nil {
		in, out := &in.GroupByFields, &out.GroupByFields
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.PerSeriesAligner != nil {
		in, out := &in.PerSeriesAligner, &out.PerSeriesAligner
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DenominatorAggregationsParameters.
func (in *DenominatorAggregationsParameters) DeepCopy() *DenominatorAggregationsParameters {
	if in == nil {
		return nil
	}
	out := new(DenominatorAggregationsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DistributionCutInitParameters) DeepCopyInto(out *DistributionCutInitParameters) {
	*out = *in
	if in.DistributionFilter != nil {
		in, out := &in.DistributionFilter, &out.DistributionFilter
		*out = new(string)
		**out = **in
	}
	if in.Range != nil {
		in, out := &in.Range, &out.Range
		*out = make([]RangeInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DistributionCutInitParameters.
func (in *DistributionCutInitParameters) DeepCopy() *DistributionCutInitParameters {
	if in == nil {
		return nil
	}
	out := new(DistributionCutInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DistributionCutObservation) DeepCopyInto(out *DistributionCutObservation) {
	*out = *in
	if in.DistributionFilter != nil {
		in, out := &in.DistributionFilter, &out.DistributionFilter
		*out = new(string)
		**out = **in
	}
	if in.Range != nil {
		in, out := &in.Range, &out.Range
		*out = make([]RangeObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DistributionCutObservation.
func (in *DistributionCutObservation) DeepCopy() *DistributionCutObservation {
	if in == nil {
		return nil
	}
	out := new(DistributionCutObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DistributionCutParameters) DeepCopyInto(out *DistributionCutParameters) {
	*out = *in
	if in.DistributionFilter != nil {
		in, out := &in.DistributionFilter, &out.DistributionFilter
		*out = new(string)
		**out = **in
	}
	if in.Range != nil {
		in, out := &in.Range, &out.Range
		*out = make([]RangeParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DistributionCutParameters.
func (in *DistributionCutParameters) DeepCopy() *DistributionCutParameters {
	if in == nil {
		return nil
	}
	out := new(DistributionCutParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DistributionCutRangeInitParameters) DeepCopyInto(out *DistributionCutRangeInitParameters) {
	*out = *in
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DistributionCutRangeInitParameters.
func (in *DistributionCutRangeInitParameters) DeepCopy() *DistributionCutRangeInitParameters {
	if in == nil {
		return nil
	}
	out := new(DistributionCutRangeInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DistributionCutRangeObservation) DeepCopyInto(out *DistributionCutRangeObservation) {
	*out = *in
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DistributionCutRangeObservation.
func (in *DistributionCutRangeObservation) DeepCopy() *DistributionCutRangeObservation {
	if in == nil {
		return nil
	}
	out := new(DistributionCutRangeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DistributionCutRangeParameters) DeepCopyInto(out *DistributionCutRangeParameters) {
	*out = *in
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DistributionCutRangeParameters.
func (in *DistributionCutRangeParameters) DeepCopy() *DistributionCutRangeParameters {
	if in == nil {
		return nil
	}
	out := new(DistributionCutRangeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DocumentationInitParameters) DeepCopyInto(out *DocumentationInitParameters) {
	*out = *in
	if in.Content != nil {
		in, out := &in.Content, &out.Content
		*out = new(string)
		**out = **in
	}
	if in.MimeType != nil {
		in, out := &in.MimeType, &out.MimeType
		*out = new(string)
		**out = **in
	}
	if in.Subject != nil {
		in, out := &in.Subject, &out.Subject
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DocumentationInitParameters.
func (in *DocumentationInitParameters) DeepCopy() *DocumentationInitParameters {
	if in == nil {
		return nil
	}
	out := new(DocumentationInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DocumentationObservation) DeepCopyInto(out *DocumentationObservation) {
	*out = *in
	if in.Content != nil {
		in, out := &in.Content, &out.Content
		*out = new(string)
		**out = **in
	}
	if in.MimeType != nil {
		in, out := &in.MimeType, &out.MimeType
		*out = new(string)
		**out = **in
	}
	if in.Subject != nil {
		in, out := &in.Subject, &out.Subject
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DocumentationObservation.
func (in *DocumentationObservation) DeepCopy() *DocumentationObservation {
	if in == nil {
		return nil
	}
	out := new(DocumentationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DocumentationParameters) DeepCopyInto(out *DocumentationParameters) {
	*out = *in
	if in.Content != nil {
		in, out := &in.Content, &out.Content
		*out = new(string)
		**out = **in
	}
	if in.MimeType != nil {
		in, out := &in.MimeType, &out.MimeType
		*out = new(string)
		**out = **in
	}
	if in.Subject != nil {
		in, out := &in.Subject, &out.Subject
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DocumentationParameters.
func (in *DocumentationParameters) DeepCopy() *DocumentationParameters {
	if in == nil {
		return nil
	}
	out := new(DocumentationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ForecastOptionsInitParameters) DeepCopyInto(out *ForecastOptionsInitParameters) {
	*out = *in
	if in.ForecastHorizon != nil {
		in, out := &in.ForecastHorizon, &out.ForecastHorizon
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ForecastOptionsInitParameters.
func (in *ForecastOptionsInitParameters) DeepCopy() *ForecastOptionsInitParameters {
	if in == nil {
		return nil
	}
	out := new(ForecastOptionsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ForecastOptionsObservation) DeepCopyInto(out *ForecastOptionsObservation) {
	*out = *in
	if in.ForecastHorizon != nil {
		in, out := &in.ForecastHorizon, &out.ForecastHorizon
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ForecastOptionsObservation.
func (in *ForecastOptionsObservation) DeepCopy() *ForecastOptionsObservation {
	if in == nil {
		return nil
	}
	out := new(ForecastOptionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ForecastOptionsParameters) DeepCopyInto(out *ForecastOptionsParameters) {
	*out = *in
	if in.ForecastHorizon != nil {
		in, out := &in.ForecastHorizon, &out.ForecastHorizon
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ForecastOptionsParameters.
func (in *ForecastOptionsParameters) DeepCopy() *ForecastOptionsParameters {
	if in == nil {
		return nil
	}
	out := new(ForecastOptionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GoodTotalRatioInitParameters) DeepCopyInto(out *GoodTotalRatioInitParameters) {
	*out = *in
	if in.BadServiceFilter != nil {
		in, out := &in.BadServiceFilter, &out.BadServiceFilter
		*out = new(string)
		**out = **in
	}
	if in.GoodServiceFilter != nil {
		in, out := &in.GoodServiceFilter, &out.GoodServiceFilter
		*out = new(string)
		**out = **in
	}
	if in.TotalServiceFilter != nil {
		in, out := &in.TotalServiceFilter, &out.TotalServiceFilter
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GoodTotalRatioInitParameters.
func (in *GoodTotalRatioInitParameters) DeepCopy() *GoodTotalRatioInitParameters {
	if in == nil {
		return nil
	}
	out := new(GoodTotalRatioInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GoodTotalRatioObservation) DeepCopyInto(out *GoodTotalRatioObservation) {
	*out = *in
	if in.BadServiceFilter != nil {
		in, out := &in.BadServiceFilter, &out.BadServiceFilter
		*out = new(string)
		**out = **in
	}
	if in.GoodServiceFilter != nil {
		in, out := &in.GoodServiceFilter, &out.GoodServiceFilter
		*out = new(string)
		**out = **in
	}
	if in.TotalServiceFilter != nil {
		in, out := &in.TotalServiceFilter, &out.TotalServiceFilter
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GoodTotalRatioObservation.
func (in *GoodTotalRatioObservation) DeepCopy() *GoodTotalRatioObservation {
	if in == nil {
		return nil
	}
	out := new(GoodTotalRatioObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GoodTotalRatioParameters) DeepCopyInto(out *GoodTotalRatioParameters) {
	*out = *in
	if in.BadServiceFilter != nil {
		in, out := &in.BadServiceFilter, &out.BadServiceFilter
		*out = new(string)
		**out = **in
	}
	if in.GoodServiceFilter != nil {
		in, out := &in.GoodServiceFilter, &out.GoodServiceFilter
		*out = new(string)
		**out = **in
	}
	if in.TotalServiceFilter != nil {
		in, out := &in.TotalServiceFilter, &out.TotalServiceFilter
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GoodTotalRatioParameters.
func (in *GoodTotalRatioParameters) DeepCopy() *GoodTotalRatioParameters {
	if in == nil {
		return nil
	}
	out := new(GoodTotalRatioParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GoodTotalRatioThresholdInitParameters) DeepCopyInto(out *GoodTotalRatioThresholdInitParameters) {
	*out = *in
	if in.BasicSliPerformance != nil {
		in, out := &in.BasicSliPerformance, &out.BasicSliPerformance
		*out = make([]BasicSliPerformanceInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Performance != nil {
		in, out := &in.Performance, &out.Performance
		*out = make([]PerformanceInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Threshold != nil {
		in, out := &in.Threshold, &out.Threshold
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GoodTotalRatioThresholdInitParameters.
func (in *GoodTotalRatioThresholdInitParameters) DeepCopy() *GoodTotalRatioThresholdInitParameters {
	if in == nil {
		return nil
	}
	out := new(GoodTotalRatioThresholdInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GoodTotalRatioThresholdObservation) DeepCopyInto(out *GoodTotalRatioThresholdObservation) {
	*out = *in
	if in.BasicSliPerformance != nil {
		in, out := &in.BasicSliPerformance, &out.BasicSliPerformance
		*out = make([]BasicSliPerformanceObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Performance != nil {
		in, out := &in.Performance, &out.Performance
		*out = make([]PerformanceObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Threshold != nil {
		in, out := &in.Threshold, &out.Threshold
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GoodTotalRatioThresholdObservation.
func (in *GoodTotalRatioThresholdObservation) DeepCopy() *GoodTotalRatioThresholdObservation {
	if in == nil {
		return nil
	}
	out := new(GoodTotalRatioThresholdObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GoodTotalRatioThresholdParameters) DeepCopyInto(out *GoodTotalRatioThresholdParameters) {
	*out = *in
	if in.BasicSliPerformance != nil {
		in, out := &in.BasicSliPerformance, &out.BasicSliPerformance
		*out = make([]BasicSliPerformanceParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Performance != nil {
		in, out := &in.Performance, &out.Performance
		*out = make([]PerformanceParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Threshold != nil {
		in, out := &in.Threshold, &out.Threshold
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GoodTotalRatioThresholdParameters.
func (in *GoodTotalRatioThresholdParameters) DeepCopy() *GoodTotalRatioThresholdParameters {
	if in == nil {
		return nil
	}
	out := new(GoodTotalRatioThresholdParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Group) DeepCopyInto(out *Group) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Group.
func (in *Group) DeepCopy() *Group {
	if in == nil {
		return nil
	}
	out := new(Group)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Group) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GroupInitParameters) DeepCopyInto(out *GroupInitParameters) {
	*out = *in
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.Filter != nil {
		in, out := &in.Filter, &out.Filter
		*out = new(string)
		**out = **in
	}
	if in.IsCluster != nil {
		in, out := &in.IsCluster, &out.IsCluster
		*out = new(bool)
		**out = **in
	}
	if in.ParentName != nil {
		in, out := &in.ParentName, &out.ParentName
		*out = new(string)
		**out = **in
	}
	if in.ParentNameRef != nil {
		in, out := &in.ParentNameRef, &out.ParentNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ParentNameSelector != nil {
		in, out := &in.ParentNameSelector, &out.ParentNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GroupInitParameters.
func (in *GroupInitParameters) DeepCopy() *GroupInitParameters {
	if in == nil {
		return nil
	}
	out := new(GroupInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GroupList) DeepCopyInto(out *GroupList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Group, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GroupList.
func (in *GroupList) DeepCopy() *GroupList {
	if in == nil {
		return nil
	}
	out := new(GroupList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *GroupList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GroupObservation) DeepCopyInto(out *GroupObservation) {
	*out = *in
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.Filter != nil {
		in, out := &in.Filter, &out.Filter
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IsCluster != nil {
		in, out := &in.IsCluster, &out.IsCluster
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ParentName != nil {
		in, out := &in.ParentName, &out.ParentName
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GroupObservation.
func (in *GroupObservation) DeepCopy() *GroupObservation {
	if in == nil {
		return nil
	}
	out := new(GroupObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GroupParameters) DeepCopyInto(out *GroupParameters) {
	*out = *in
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.Filter != nil {
		in, out := &in.Filter, &out.Filter
		*out = new(string)
		**out = **in
	}
	if in.IsCluster != nil {
		in, out := &in.IsCluster, &out.IsCluster
		*out = new(bool)
		**out = **in
	}
	if in.ParentName != nil {
		in, out := &in.ParentName, &out.ParentName
		*out = new(string)
		**out = **in
	}
	if in.ParentNameRef != nil {
		in, out := &in.ParentNameRef, &out.ParentNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ParentNameSelector != nil {
		in, out := &in.ParentNameSelector, &out.ParentNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GroupParameters.
func (in *GroupParameters) DeepCopy() *GroupParameters {
	if in == nil {
		return nil
	}
	out := new(GroupParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GroupSpec) DeepCopyInto(out *GroupSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GroupSpec.
func (in *GroupSpec) DeepCopy() *GroupSpec {
	if in == nil {
		return nil
	}
	out := new(GroupSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GroupStatus) DeepCopyInto(out *GroupStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GroupStatus.
func (in *GroupStatus) DeepCopy() *GroupStatus {
	if in == nil {
		return nil
	}
	out := new(GroupStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HTTPCheckInitParameters) DeepCopyInto(out *HTTPCheckInitParameters) {
	*out = *in
	if in.AcceptedResponseStatusCodes != nil {
		in, out := &in.AcceptedResponseStatusCodes, &out.AcceptedResponseStatusCodes
		*out = make([]AcceptedResponseStatusCodesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AuthInfo != nil {
		in, out := &in.AuthInfo, &out.AuthInfo
		*out = make([]AuthInfoInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Body != nil {
		in, out := &in.Body, &out.Body
		*out = new(string)
		**out = **in
	}
	if in.ContentType != nil {
		in, out := &in.ContentType, &out.ContentType
		*out = new(string)
		**out = **in
	}
	if in.CustomContentType != nil {
		in, out := &in.CustomContentType, &out.CustomContentType
		*out = new(string)
		**out = **in
	}
	if in.Headers != nil {
		in, out := &in.Headers, &out.Headers
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.MaskHeaders != nil {
		in, out := &in.MaskHeaders, &out.MaskHeaders
		*out = new(bool)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.PingConfig != nil {
		in, out := &in.PingConfig, &out.PingConfig
		*out = make([]PingConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
	if in.RequestMethod != nil {
		in, out := &in.RequestMethod, &out.RequestMethod
		*out = new(string)
		**out = **in
	}
	if in.UseSSL != nil {
		in, out := &in.UseSSL, &out.UseSSL
		*out = new(bool)
		**out = **in
	}
	if in.ValidateSSL != nil {
		in, out := &in.ValidateSSL, &out.ValidateSSL
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HTTPCheckInitParameters.
func (in *HTTPCheckInitParameters) DeepCopy() *HTTPCheckInitParameters {
	if in == nil {
		return nil
	}
	out := new(HTTPCheckInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HTTPCheckObservation) DeepCopyInto(out *HTTPCheckObservation) {
	*out = *in
	if in.AcceptedResponseStatusCodes != nil {
		in, out := &in.AcceptedResponseStatusCodes, &out.AcceptedResponseStatusCodes
		*out = make([]AcceptedResponseStatusCodesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AuthInfo != nil {
		in, out := &in.AuthInfo, &out.AuthInfo
		*out = make([]AuthInfoObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Body != nil {
		in, out := &in.Body, &out.Body
		*out = new(string)
		**out = **in
	}
	if in.ContentType != nil {
		in, out := &in.ContentType, &out.ContentType
		*out = new(string)
		**out = **in
	}
	if in.CustomContentType != nil {
		in, out := &in.CustomContentType, &out.CustomContentType
		*out = new(string)
		**out = **in
	}
	if in.Headers != nil {
		in, out := &in.Headers, &out.Headers
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.MaskHeaders != nil {
		in, out := &in.MaskHeaders, &out.MaskHeaders
		*out = new(bool)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.PingConfig != nil {
		in, out := &in.PingConfig, &out.PingConfig
		*out = make([]PingConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
	if in.RequestMethod != nil {
		in, out := &in.RequestMethod, &out.RequestMethod
		*out = new(string)
		**out = **in
	}
	if in.UseSSL != nil {
		in, out := &in.UseSSL, &out.UseSSL
		*out = new(bool)
		**out = **in
	}
	if in.ValidateSSL != nil {
		in, out := &in.ValidateSSL, &out.ValidateSSL
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HTTPCheckObservation.
func (in *HTTPCheckObservation) DeepCopy() *HTTPCheckObservation {
	if in == nil {
		return nil
	}
	out := new(HTTPCheckObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HTTPCheckParameters) DeepCopyInto(out *HTTPCheckParameters) {
	*out = *in
	if in.AcceptedResponseStatusCodes != nil {
		in, out := &in.AcceptedResponseStatusCodes, &out.AcceptedResponseStatusCodes
		*out = make([]AcceptedResponseStatusCodesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AuthInfo != nil {
		in, out := &in.AuthInfo, &out.AuthInfo
		*out = make([]AuthInfoParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Body != nil {
		in, out := &in.Body, &out.Body
		*out = new(string)
		**out = **in
	}
	if in.ContentType != nil {
		in, out := &in.ContentType, &out.ContentType
		*out = new(string)
		**out = **in
	}
	if in.CustomContentType != nil {
		in, out := &in.CustomContentType, &out.CustomContentType
		*out = new(string)
		**out = **in
	}
	if in.Headers != nil {
		in, out := &in.Headers, &out.Headers
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.MaskHeaders != nil {
		in, out := &in.MaskHeaders, &out.MaskHeaders
		*out = new(bool)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.PingConfig != nil {
		in, out := &in.PingConfig, &out.PingConfig
		*out = make([]PingConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
	if in.RequestMethod != nil {
		in, out := &in.RequestMethod, &out.RequestMethod
		*out = new(string)
		**out = **in
	}
	if in.UseSSL != nil {
		in, out := &in.UseSSL, &out.UseSSL
		*out = new(bool)
		**out = **in
	}
	if in.ValidateSSL != nil {
		in, out := &in.ValidateSSL, &out.ValidateSSL
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HTTPCheckParameters.
func (in *HTTPCheckParameters) DeepCopy() *HTTPCheckParameters {
	if in == nil {
		return nil
	}
	out := new(HTTPCheckParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JSONPathMatcherInitParameters) DeepCopyInto(out *JSONPathMatcherInitParameters) {
	*out = *in
	if in.JSONMatcher != nil {
		in, out := &in.JSONMatcher, &out.JSONMatcher
		*out = new(string)
		**out = **in
	}
	if in.JSONPath != nil {
		in, out := &in.JSONPath, &out.JSONPath
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JSONPathMatcherInitParameters.
func (in *JSONPathMatcherInitParameters) DeepCopy() *JSONPathMatcherInitParameters {
	if in == nil {
		return nil
	}
	out := new(JSONPathMatcherInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JSONPathMatcherObservation) DeepCopyInto(out *JSONPathMatcherObservation) {
	*out = *in
	if in.JSONMatcher != nil {
		in, out := &in.JSONMatcher, &out.JSONMatcher
		*out = new(string)
		**out = **in
	}
	if in.JSONPath != nil {
		in, out := &in.JSONPath, &out.JSONPath
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JSONPathMatcherObservation.
func (in *JSONPathMatcherObservation) DeepCopy() *JSONPathMatcherObservation {
	if in == nil {
		return nil
	}
	out := new(JSONPathMatcherObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JSONPathMatcherParameters) DeepCopyInto(out *JSONPathMatcherParameters) {
	*out = *in
	if in.JSONMatcher != nil {
		in, out := &in.JSONMatcher, &out.JSONMatcher
		*out = new(string)
		**out = **in
	}
	if in.JSONPath != nil {
		in, out := &in.JSONPath, &out.JSONPath
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JSONPathMatcherParameters.
func (in *JSONPathMatcherParameters) DeepCopy() *JSONPathMatcherParameters {
	if in == nil {
		return nil
	}
	out := new(JSONPathMatcherParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LabelsInitParameters) DeepCopyInto(out *LabelsInitParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.ValueType != nil {
		in, out := &in.ValueType, &out.ValueType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LabelsInitParameters.
func (in *LabelsInitParameters) DeepCopy() *LabelsInitParameters {
	if in == nil {
		return nil
	}
	out := new(LabelsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LabelsObservation) DeepCopyInto(out *LabelsObservation) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.ValueType != nil {
		in, out := &in.ValueType, &out.ValueType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LabelsObservation.
func (in *LabelsObservation) DeepCopy() *LabelsObservation {
	if in == nil {
		return nil
	}
	out := new(LabelsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LabelsParameters) DeepCopyInto(out *LabelsParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.ValueType != nil {
		in, out := &in.ValueType, &out.ValueType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LabelsParameters.
func (in *LabelsParameters) DeepCopy() *LabelsParameters {
	if in == nil {
		return nil
	}
	out := new(LabelsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LatencyInitParameters) DeepCopyInto(out *LatencyInitParameters) {
	*out = *in
	if in.Threshold != nil {
		in, out := &in.Threshold, &out.Threshold
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LatencyInitParameters.
func (in *LatencyInitParameters) DeepCopy() *LatencyInitParameters {
	if in == nil {
		return nil
	}
	out := new(LatencyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LatencyObservation) DeepCopyInto(out *LatencyObservation) {
	*out = *in
	if in.Threshold != nil {
		in, out := &in.Threshold, &out.Threshold
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LatencyObservation.
func (in *LatencyObservation) DeepCopy() *LatencyObservation {
	if in == nil {
		return nil
	}
	out := new(LatencyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LatencyParameters) DeepCopyInto(out *LatencyParameters) {
	*out = *in
	if in.Threshold != nil {
		in, out := &in.Threshold, &out.Threshold
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LatencyParameters.
func (in *LatencyParameters) DeepCopy() *LatencyParameters {
	if in == nil {
		return nil
	}
	out := new(LatencyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MetadataInitParameters) DeepCopyInto(out *MetadataInitParameters) {
	*out = *in
	if in.IngestDelay != nil {
		in, out := &in.IngestDelay, &out.IngestDelay
		*out = new(string)
		**out = **in
	}
	if in.SamplePeriod != nil {
		in, out := &in.SamplePeriod, &out.SamplePeriod
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MetadataInitParameters.
func (in *MetadataInitParameters) DeepCopy() *MetadataInitParameters {
	if in == nil {
		return nil
	}
	out := new(MetadataInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MetadataObservation) DeepCopyInto(out *MetadataObservation) {
	*out = *in
	if in.IngestDelay != nil {
		in, out := &in.IngestDelay, &out.IngestDelay
		*out = new(string)
		**out = **in
	}
	if in.SamplePeriod != nil {
		in, out := &in.SamplePeriod, &out.SamplePeriod
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MetadataObservation.
func (in *MetadataObservation) DeepCopy() *MetadataObservation {
	if in == nil {
		return nil
	}
	out := new(MetadataObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MetadataParameters) DeepCopyInto(out *MetadataParameters) {
	*out = *in
	if in.IngestDelay != nil {
		in, out := &in.IngestDelay, &out.IngestDelay
		*out = new(string)
		**out = **in
	}
	if in.SamplePeriod != nil {
		in, out := &in.SamplePeriod, &out.SamplePeriod
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MetadataParameters.
func (in *MetadataParameters) DeepCopy() *MetadataParameters {
	if in == nil {
		return nil
	}
	out := new(MetadataParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MetricDescriptor) DeepCopyInto(out *MetricDescriptor) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MetricDescriptor.
func (in *MetricDescriptor) DeepCopy() *MetricDescriptor {
	if in == nil {
		return nil
	}
	out := new(MetricDescriptor)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *MetricDescriptor) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MetricDescriptorInitParameters) DeepCopyInto(out *MetricDescriptorInitParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make([]LabelsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LaunchStage != nil {
		in, out := &in.LaunchStage, &out.LaunchStage
		*out = new(string)
		**out = **in
	}
	if in.Metadata != nil {
		in, out := &in.Metadata, &out.Metadata
		*out = make([]MetadataInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MetricKind != nil {
		in, out := &in.MetricKind, &out.MetricKind
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.Unit != nil {
		in, out := &in.Unit, &out.Unit
		*out = new(string)
		**out = **in
	}
	if in.ValueType != nil {
		in, out := &in.ValueType, &out.ValueType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MetricDescriptorInitParameters.
func (in *MetricDescriptorInitParameters) DeepCopy() *MetricDescriptorInitParameters {
	if in == nil {
		return nil
	}
	out := new(MetricDescriptorInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MetricDescriptorList) DeepCopyInto(out *MetricDescriptorList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]MetricDescriptor, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MetricDescriptorList.
func (in *MetricDescriptorList) DeepCopy() *MetricDescriptorList {
	if in == nil {
		return nil
	}
	out := new(MetricDescriptorList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *MetricDescriptorList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MetricDescriptorObservation) DeepCopyInto(out *MetricDescriptorObservation) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make([]LabelsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LaunchStage != nil {
		in, out := &in.LaunchStage, &out.LaunchStage
		*out = new(string)
		**out = **in
	}
	if in.Metadata != nil {
		in, out := &in.Metadata, &out.Metadata
		*out = make([]MetadataObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MetricKind != nil {
		in, out := &in.MetricKind, &out.MetricKind
		*out = new(string)
		**out = **in
	}
	if in.MonitoredResourceTypes != nil {
		in, out := &in.MonitoredResourceTypes, &out.MonitoredResourceTypes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.Unit != nil {
		in, out := &in.Unit, &out.Unit
		*out = new(string)
		**out = **in
	}
	if in.ValueType != nil {
		in, out := &in.ValueType, &out.ValueType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MetricDescriptorObservation.
func (in *MetricDescriptorObservation) DeepCopy() *MetricDescriptorObservation {
	if in == nil {
		return nil
	}
	out := new(MetricDescriptorObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MetricDescriptorParameters) DeepCopyInto(out *MetricDescriptorParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make([]LabelsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LaunchStage != nil {
		in, out := &in.LaunchStage, &out.LaunchStage
		*out = new(string)
		**out = **in
	}
	if in.Metadata != nil {
		in, out := &in.Metadata, &out.Metadata
		*out = make([]MetadataParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MetricKind != nil {
		in, out := &in.MetricKind, &out.MetricKind
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.Unit != nil {
		in, out := &in.Unit, &out.Unit
		*out = new(string)
		**out = **in
	}
	if in.ValueType != nil {
		in, out := &in.ValueType, &out.ValueType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MetricDescriptorParameters.
func (in *MetricDescriptorParameters) DeepCopy() *MetricDescriptorParameters {
	if in == nil {
		return nil
	}
	out := new(MetricDescriptorParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MetricDescriptorSpec) DeepCopyInto(out *MetricDescriptorSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MetricDescriptorSpec.
func (in *MetricDescriptorSpec) DeepCopy() *MetricDescriptorSpec {
	if in == nil {
		return nil
	}
	out := new(MetricDescriptorSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MetricDescriptorStatus) DeepCopyInto(out *MetricDescriptorStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MetricDescriptorStatus.
func (in *MetricDescriptorStatus) DeepCopy() *MetricDescriptorStatus {
	if in == nil {
		return nil
	}
	out := new(MetricDescriptorStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MetricMeanInRangeInitParameters) DeepCopyInto(out *MetricMeanInRangeInitParameters) {
	*out = *in
	if in.Range != nil {
		in, out := &in.Range, &out.Range
		*out = make([]MetricMeanInRangeRangeInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TimeSeries != nil {
		in, out := &in.TimeSeries, &out.TimeSeries
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MetricMeanInRangeInitParameters.
func (in *MetricMeanInRangeInitParameters) DeepCopy() *MetricMeanInRangeInitParameters {
	if in == nil {
		return nil
	}
	out := new(MetricMeanInRangeInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MetricMeanInRangeObservation) DeepCopyInto(out *MetricMeanInRangeObservation) {
	*out = *in
	if in.Range != nil {
		in, out := &in.Range, &out.Range
		*out = make([]MetricMeanInRangeRangeObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TimeSeries != nil {
		in, out := &in.TimeSeries, &out.TimeSeries
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MetricMeanInRangeObservation.
func (in *MetricMeanInRangeObservation) DeepCopy() *MetricMeanInRangeObservation {
	if in == nil {
		return nil
	}
	out := new(MetricMeanInRangeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MetricMeanInRangeParameters) DeepCopyInto(out *MetricMeanInRangeParameters) {
	*out = *in
	if in.Range != nil {
		in, out := &in.Range, &out.Range
		*out = make([]MetricMeanInRangeRangeParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TimeSeries != nil {
		in, out := &in.TimeSeries, &out.TimeSeries
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MetricMeanInRangeParameters.
func (in *MetricMeanInRangeParameters) DeepCopy() *MetricMeanInRangeParameters {
	if in == nil {
		return nil
	}
	out := new(MetricMeanInRangeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MetricMeanInRangeRangeInitParameters) DeepCopyInto(out *MetricMeanInRangeRangeInitParameters) {
	*out = *in
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MetricMeanInRangeRangeInitParameters.
func (in *MetricMeanInRangeRangeInitParameters) DeepCopy() *MetricMeanInRangeRangeInitParameters {
	if in == nil {
		return nil
	}
	out := new(MetricMeanInRangeRangeInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MetricMeanInRangeRangeObservation) DeepCopyInto(out *MetricMeanInRangeRangeObservation) {
	*out = *in
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MetricMeanInRangeRangeObservation.
func (in *MetricMeanInRangeRangeObservation) DeepCopy() *MetricMeanInRangeRangeObservation {
	if in == nil {
		return nil
	}
	out := new(MetricMeanInRangeRangeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MetricMeanInRangeRangeParameters) DeepCopyInto(out *MetricMeanInRangeRangeParameters) {
	*out = *in
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MetricMeanInRangeRangeParameters.
func (in *MetricMeanInRangeRangeParameters) DeepCopy() *MetricMeanInRangeRangeParameters {
	if in == nil {
		return nil
	}
	out := new(MetricMeanInRangeRangeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MetricSumInRangeInitParameters) DeepCopyInto(out *MetricSumInRangeInitParameters) {
	*out = *in
	if in.Range != nil {
		in, out := &in.Range, &out.Range
		*out = make([]MetricSumInRangeRangeInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TimeSeries != nil {
		in, out := &in.TimeSeries, &out.TimeSeries
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MetricSumInRangeInitParameters.
func (in *MetricSumInRangeInitParameters) DeepCopy() *MetricSumInRangeInitParameters {
	if in == nil {
		return nil
	}
	out := new(MetricSumInRangeInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MetricSumInRangeObservation) DeepCopyInto(out *MetricSumInRangeObservation) {
	*out = *in
	if in.Range != nil {
		in, out := &in.Range, &out.Range
		*out = make([]MetricSumInRangeRangeObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TimeSeries != nil {
		in, out := &in.TimeSeries, &out.TimeSeries
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MetricSumInRangeObservation.
func (in *MetricSumInRangeObservation) DeepCopy() *MetricSumInRangeObservation {
	if in == nil {
		return nil
	}
	out := new(MetricSumInRangeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MetricSumInRangeParameters) DeepCopyInto(out *MetricSumInRangeParameters) {
	*out = *in
	if in.Range != nil {
		in, out := &in.Range, &out.Range
		*out = make([]MetricSumInRangeRangeParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TimeSeries != nil {
		in, out := &in.TimeSeries, &out.TimeSeries
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MetricSumInRangeParameters.
func (in *MetricSumInRangeParameters) DeepCopy() *MetricSumInRangeParameters {
	if in == nil {
		return nil
	}
	out := new(MetricSumInRangeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MetricSumInRangeRangeInitParameters) DeepCopyInto(out *MetricSumInRangeRangeInitParameters) {
	*out = *in
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MetricSumInRangeRangeInitParameters.
func (in *MetricSumInRangeRangeInitParameters) DeepCopy() *MetricSumInRangeRangeInitParameters {
	if in == nil {
		return nil
	}
	out := new(MetricSumInRangeRangeInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MetricSumInRangeRangeObservation) DeepCopyInto(out *MetricSumInRangeRangeObservation) {
	*out = *in
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MetricSumInRangeRangeObservation.
func (in *MetricSumInRangeRangeObservation) DeepCopy() *MetricSumInRangeRangeObservation {
	if in == nil {
		return nil
	}
	out := new(MetricSumInRangeRangeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MetricSumInRangeRangeParameters) DeepCopyInto(out *MetricSumInRangeRangeParameters) {
	*out = *in
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MetricSumInRangeRangeParameters.
func (in *MetricSumInRangeRangeParameters) DeepCopy() *MetricSumInRangeRangeParameters {
	if in == nil {
		return nil
	}
	out := new(MetricSumInRangeRangeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonitoredResourceInitParameters) DeepCopyInto(out *MonitoredResourceInitParameters) {
	*out = *in
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonitoredResourceInitParameters.
func (in *MonitoredResourceInitParameters) DeepCopy() *MonitoredResourceInitParameters {
	if in == nil {
		return nil
	}
	out := new(MonitoredResourceInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonitoredResourceObservation) DeepCopyInto(out *MonitoredResourceObservation) {
	*out = *in
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonitoredResourceObservation.
func (in *MonitoredResourceObservation) DeepCopy() *MonitoredResourceObservation {
	if in == nil {
		return nil
	}
	out := new(MonitoredResourceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonitoredResourceParameters) DeepCopyInto(out *MonitoredResourceParameters) {
	*out = *in
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonitoredResourceParameters.
func (in *MonitoredResourceParameters) DeepCopy() *MonitoredResourceParameters {
	if in == nil {
		return nil
	}
	out := new(MonitoredResourceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NotificationChannel) DeepCopyInto(out *NotificationChannel) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NotificationChannel.
func (in *NotificationChannel) DeepCopy() *NotificationChannel {
	if in == nil {
		return nil
	}
	out := new(NotificationChannel)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *NotificationChannel) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NotificationChannelInitParameters) DeepCopyInto(out *NotificationChannelInitParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.ForceDelete != nil {
		in, out := &in.ForceDelete, &out.ForceDelete
		*out = new(bool)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.SensitiveLabels != nil {
		in, out := &in.SensitiveLabels, &out.SensitiveLabels
		*out = make([]SensitiveLabelsInitParameters, len(*in))
		copy(*out, *in)
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.UserLabels != nil {
		in, out := &in.UserLabels, &out.UserLabels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NotificationChannelInitParameters.
func (in *NotificationChannelInitParameters) DeepCopy() *NotificationChannelInitParameters {
	if in == nil {
		return nil
	}
	out := new(NotificationChannelInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NotificationChannelList) DeepCopyInto(out *NotificationChannelList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]NotificationChannel, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NotificationChannelList.
func (in *NotificationChannelList) DeepCopy() *NotificationChannelList {
	if in == nil {
		return nil
	}
	out := new(NotificationChannelList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *NotificationChannelList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NotificationChannelObservation) DeepCopyInto(out *NotificationChannelObservation) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.ForceDelete != nil {
		in, out := &in.ForceDelete, &out.ForceDelete
		*out = new(bool)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.SensitiveLabels != nil {
		in, out := &in.SensitiveLabels, &out.SensitiveLabels
		*out = make([]SensitiveLabelsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.UserLabels != nil {
		in, out := &in.UserLabels, &out.UserLabels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.VerificationStatus != nil {
		in, out := &in.VerificationStatus, &out.VerificationStatus
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NotificationChannelObservation.
func (in *NotificationChannelObservation) DeepCopy() *NotificationChannelObservation {
	if in == nil {
		return nil
	}
	out := new(NotificationChannelObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NotificationChannelParameters) DeepCopyInto(out *NotificationChannelParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.ForceDelete != nil {
		in, out := &in.ForceDelete, &out.ForceDelete
		*out = new(bool)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.SensitiveLabels != nil {
		in, out := &in.SensitiveLabels, &out.SensitiveLabels
		*out = make([]SensitiveLabelsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.UserLabels != nil {
		in, out := &in.UserLabels, &out.UserLabels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NotificationChannelParameters.
func (in *NotificationChannelParameters) DeepCopy() *NotificationChannelParameters {
	if in == nil {
		return nil
	}
	out := new(NotificationChannelParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NotificationChannelSpec) DeepCopyInto(out *NotificationChannelSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NotificationChannelSpec.
func (in *NotificationChannelSpec) DeepCopy() *NotificationChannelSpec {
	if in == nil {
		return nil
	}
	out := new(NotificationChannelSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NotificationChannelStatus) DeepCopyInto(out *NotificationChannelStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NotificationChannelStatus.
func (in *NotificationChannelStatus) DeepCopy() *NotificationChannelStatus {
	if in == nil {
		return nil
	}
	out := new(NotificationChannelStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NotificationChannelStrategyInitParameters) DeepCopyInto(out *NotificationChannelStrategyInitParameters) {
	*out = *in
	if in.NotificationChannelNames != nil {
		in, out := &in.NotificationChannelNames, &out.NotificationChannelNames
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.RenotifyInterval != nil {
		in, out := &in.RenotifyInterval, &out.RenotifyInterval
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NotificationChannelStrategyInitParameters.
func (in *NotificationChannelStrategyInitParameters) DeepCopy() *NotificationChannelStrategyInitParameters {
	if in == nil {
		return nil
	}
	out := new(NotificationChannelStrategyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NotificationChannelStrategyObservation) DeepCopyInto(out *NotificationChannelStrategyObservation) {
	*out = *in
	if in.NotificationChannelNames != nil {
		in, out := &in.NotificationChannelNames, &out.NotificationChannelNames
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.RenotifyInterval != nil {
		in, out := &in.RenotifyInterval, &out.RenotifyInterval
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NotificationChannelStrategyObservation.
func (in *NotificationChannelStrategyObservation) DeepCopy() *NotificationChannelStrategyObservation {
	if in == nil {
		return nil
	}
	out := new(NotificationChannelStrategyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NotificationChannelStrategyParameters) DeepCopyInto(out *NotificationChannelStrategyParameters) {
	*out = *in
	if in.NotificationChannelNames != nil {
		in, out := &in.NotificationChannelNames, &out.NotificationChannelNames
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.RenotifyInterval != nil {
		in, out := &in.RenotifyInterval, &out.RenotifyInterval
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NotificationChannelStrategyParameters.
func (in *NotificationChannelStrategyParameters) DeepCopy() *NotificationChannelStrategyParameters {
	if in == nil {
		return nil
	}
	out := new(NotificationChannelStrategyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NotificationRateLimitInitParameters) DeepCopyInto(out *NotificationRateLimitInitParameters) {
	*out = *in
	if in.Period != nil {
		in, out := &in.Period, &out.Period
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NotificationRateLimitInitParameters.
func (in *NotificationRateLimitInitParameters) DeepCopy() *NotificationRateLimitInitParameters {
	if in == nil {
		return nil
	}
	out := new(NotificationRateLimitInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NotificationRateLimitObservation) DeepCopyInto(out *NotificationRateLimitObservation) {
	*out = *in
	if in.Period != nil {
		in, out := &in.Period, &out.Period
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NotificationRateLimitObservation.
func (in *NotificationRateLimitObservation) DeepCopy() *NotificationRateLimitObservation {
	if in == nil {
		return nil
	}
	out := new(NotificationRateLimitObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NotificationRateLimitParameters) DeepCopyInto(out *NotificationRateLimitParameters) {
	*out = *in
	if in.Period != nil {
		in, out := &in.Period, &out.Period
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NotificationRateLimitParameters.
func (in *NotificationRateLimitParameters) DeepCopy() *NotificationRateLimitParameters {
	if in == nil {
		return nil
	}
	out := new(NotificationRateLimitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PerformanceDistributionCutInitParameters) DeepCopyInto(out *PerformanceDistributionCutInitParameters) {
	*out = *in
	if in.DistributionFilter != nil {
		in, out := &in.DistributionFilter, &out.DistributionFilter
		*out = new(string)
		**out = **in
	}
	if in.Range != nil {
		in, out := &in.Range, &out.Range
		*out = make([]DistributionCutRangeInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PerformanceDistributionCutInitParameters.
func (in *PerformanceDistributionCutInitParameters) DeepCopy() *PerformanceDistributionCutInitParameters {
	if in == nil {
		return nil
	}
	out := new(PerformanceDistributionCutInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PerformanceDistributionCutObservation) DeepCopyInto(out *PerformanceDistributionCutObservation) {
	*out = *in
	if in.DistributionFilter != nil {
		in, out := &in.DistributionFilter, &out.DistributionFilter
		*out = new(string)
		**out = **in
	}
	if in.Range != nil {
		in, out := &in.Range, &out.Range
		*out = make([]DistributionCutRangeObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PerformanceDistributionCutObservation.
func (in *PerformanceDistributionCutObservation) DeepCopy() *PerformanceDistributionCutObservation {
	if in == nil {
		return nil
	}
	out := new(PerformanceDistributionCutObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PerformanceDistributionCutParameters) DeepCopyInto(out *PerformanceDistributionCutParameters) {
	*out = *in
	if in.DistributionFilter != nil {
		in, out := &in.DistributionFilter, &out.DistributionFilter
		*out = new(string)
		**out = **in
	}
	if in.Range != nil {
		in, out := &in.Range, &out.Range
		*out = make([]DistributionCutRangeParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PerformanceDistributionCutParameters.
func (in *PerformanceDistributionCutParameters) DeepCopy() *PerformanceDistributionCutParameters {
	if in == nil {
		return nil
	}
	out := new(PerformanceDistributionCutParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PerformanceGoodTotalRatioInitParameters) DeepCopyInto(out *PerformanceGoodTotalRatioInitParameters) {
	*out = *in
	if in.BadServiceFilter != nil {
		in, out := &in.BadServiceFilter, &out.BadServiceFilter
		*out = new(string)
		**out = **in
	}
	if in.GoodServiceFilter != nil {
		in, out := &in.GoodServiceFilter, &out.GoodServiceFilter
		*out = new(string)
		**out = **in
	}
	if in.TotalServiceFilter != nil {
		in, out := &in.TotalServiceFilter, &out.TotalServiceFilter
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PerformanceGoodTotalRatioInitParameters.
func (in *PerformanceGoodTotalRatioInitParameters) DeepCopy() *PerformanceGoodTotalRatioInitParameters {
	if in == nil {
		return nil
	}
	out := new(PerformanceGoodTotalRatioInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PerformanceGoodTotalRatioObservation) DeepCopyInto(out *PerformanceGoodTotalRatioObservation) {
	*out = *in
	if in.BadServiceFilter != nil {
		in, out := &in.BadServiceFilter, &out.BadServiceFilter
		*out = new(string)
		**out = **in
	}
	if in.GoodServiceFilter != nil {
		in, out := &in.GoodServiceFilter, &out.GoodServiceFilter
		*out = new(string)
		**out = **in
	}
	if in.TotalServiceFilter != nil {
		in, out := &in.TotalServiceFilter, &out.TotalServiceFilter
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PerformanceGoodTotalRatioObservation.
func (in *PerformanceGoodTotalRatioObservation) DeepCopy() *PerformanceGoodTotalRatioObservation {
	if in == nil {
		return nil
	}
	out := new(PerformanceGoodTotalRatioObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PerformanceGoodTotalRatioParameters) DeepCopyInto(out *PerformanceGoodTotalRatioParameters) {
	*out = *in
	if in.BadServiceFilter != nil {
		in, out := &in.BadServiceFilter, &out.BadServiceFilter
		*out = new(string)
		**out = **in
	}
	if in.GoodServiceFilter != nil {
		in, out := &in.GoodServiceFilter, &out.GoodServiceFilter
		*out = new(string)
		**out = **in
	}
	if in.TotalServiceFilter != nil {
		in, out := &in.TotalServiceFilter, &out.TotalServiceFilter
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PerformanceGoodTotalRatioParameters.
func (in *PerformanceGoodTotalRatioParameters) DeepCopy() *PerformanceGoodTotalRatioParameters {
	if in == nil {
		return nil
	}
	out := new(PerformanceGoodTotalRatioParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PerformanceInitParameters) DeepCopyInto(out *PerformanceInitParameters) {
	*out = *in
	if in.DistributionCut != nil {
		in, out := &in.DistributionCut, &out.DistributionCut
		*out = make([]PerformanceDistributionCutInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.GoodTotalRatio != nil {
		in, out := &in.GoodTotalRatio, &out.GoodTotalRatio
		*out = make([]PerformanceGoodTotalRatioInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PerformanceInitParameters.
func (in *PerformanceInitParameters) DeepCopy() *PerformanceInitParameters {
	if in == nil {
		return nil
	}
	out := new(PerformanceInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PerformanceObservation) DeepCopyInto(out *PerformanceObservation) {
	*out = *in
	if in.DistributionCut != nil {
		in, out := &in.DistributionCut, &out.DistributionCut
		*out = make([]PerformanceDistributionCutObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.GoodTotalRatio != nil {
		in, out := &in.GoodTotalRatio, &out.GoodTotalRatio
		*out = make([]PerformanceGoodTotalRatioObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PerformanceObservation.
func (in *PerformanceObservation) DeepCopy() *PerformanceObservation {
	if in == nil {
		return nil
	}
	out := new(PerformanceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PerformanceParameters) DeepCopyInto(out *PerformanceParameters) {
	*out = *in
	if in.DistributionCut != nil {
		in, out := &in.DistributionCut, &out.DistributionCut
		*out = make([]PerformanceDistributionCutParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.GoodTotalRatio != nil {
		in, out := &in.GoodTotalRatio, &out.GoodTotalRatio
		*out = make([]PerformanceGoodTotalRatioParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PerformanceParameters.
func (in *PerformanceParameters) DeepCopy() *PerformanceParameters {
	if in == nil {
		return nil
	}
	out := new(PerformanceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PingConfigInitParameters) DeepCopyInto(out *PingConfigInitParameters) {
	*out = *in
	if in.PingsCount != nil {
		in, out := &in.PingsCount, &out.PingsCount
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PingConfigInitParameters.
func (in *PingConfigInitParameters) DeepCopy() *PingConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(PingConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PingConfigObservation) DeepCopyInto(out *PingConfigObservation) {
	*out = *in
	if in.PingsCount != nil {
		in, out := &in.PingsCount, &out.PingsCount
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PingConfigObservation.
func (in *PingConfigObservation) DeepCopy() *PingConfigObservation {
	if in == nil {
		return nil
	}
	out := new(PingConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PingConfigParameters) DeepCopyInto(out *PingConfigParameters) {
	*out = *in
	if in.PingsCount != nil {
		in, out := &in.PingsCount, &out.PingsCount
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PingConfigParameters.
func (in *PingConfigParameters) DeepCopy() *PingConfigParameters {
	if in == nil {
		return nil
	}
	out := new(PingConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RangeInitParameters) DeepCopyInto(out *RangeInitParameters) {
	*out = *in
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RangeInitParameters.
func (in *RangeInitParameters) DeepCopy() *RangeInitParameters {
	if in == nil {
		return nil
	}
	out := new(RangeInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RangeObservation) DeepCopyInto(out *RangeObservation) {
	*out = *in
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RangeObservation.
func (in *RangeObservation) DeepCopy() *RangeObservation {
	if in == nil {
		return nil
	}
	out := new(RangeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RangeParameters) DeepCopyInto(out *RangeParameters) {
	*out = *in
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RangeParameters.
func (in *RangeParameters) DeepCopy() *RangeParameters {
	if in == nil {
		return nil
	}
	out := new(RangeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RequestBasedSliInitParameters) DeepCopyInto(out *RequestBasedSliInitParameters) {
	*out = *in
	if in.DistributionCut != nil {
		in, out := &in.DistributionCut, &out.DistributionCut
		*out = make([]DistributionCutInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.GoodTotalRatio != nil {
		in, out := &in.GoodTotalRatio, &out.GoodTotalRatio
		*out = make([]GoodTotalRatioInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RequestBasedSliInitParameters.
func (in *RequestBasedSliInitParameters) DeepCopy() *RequestBasedSliInitParameters {
	if in == nil {
		return nil
	}
	out := new(RequestBasedSliInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RequestBasedSliObservation) DeepCopyInto(out *RequestBasedSliObservation) {
	*out = *in
	if in.DistributionCut != nil {
		in, out := &in.DistributionCut, &out.DistributionCut
		*out = make([]DistributionCutObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.GoodTotalRatio != nil {
		in, out := &in.GoodTotalRatio, &out.GoodTotalRatio
		*out = make([]GoodTotalRatioObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RequestBasedSliObservation.
func (in *RequestBasedSliObservation) DeepCopy() *RequestBasedSliObservation {
	if in == nil {
		return nil
	}
	out := new(RequestBasedSliObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RequestBasedSliParameters) DeepCopyInto(out *RequestBasedSliParameters) {
	*out = *in
	if in.DistributionCut != nil {
		in, out := &in.DistributionCut, &out.DistributionCut
		*out = make([]DistributionCutParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.GoodTotalRatio != nil {
		in, out := &in.GoodTotalRatio, &out.GoodTotalRatio
		*out = make([]GoodTotalRatioParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RequestBasedSliParameters.
func (in *RequestBasedSliParameters) DeepCopy() *RequestBasedSliParameters {
	if in == nil {
		return nil
	}
	out := new(RequestBasedSliParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ResourceGroupInitParameters) DeepCopyInto(out *ResourceGroupInitParameters) {
	*out = *in
	if in.GroupID != nil {
		in, out := &in.GroupID, &out.GroupID
		*out = new(string)
		**out = **in
	}
	if in.GroupIDRef != nil {
		in, out := &in.GroupIDRef, &out.GroupIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.GroupIDSelector != nil {
		in, out := &in.GroupIDSelector, &out.GroupIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.ResourceType != nil {
		in, out := &in.ResourceType, &out.ResourceType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ResourceGroupInitParameters.
func (in *ResourceGroupInitParameters) DeepCopy() *ResourceGroupInitParameters {
	if in == nil {
		return nil
	}
	out := new(ResourceGroupInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ResourceGroupObservation) DeepCopyInto(out *ResourceGroupObservation) {
	*out = *in
	if in.GroupID != nil {
		in, out := &in.GroupID, &out.GroupID
		*out = new(string)
		**out = **in
	}
	if in.ResourceType != nil {
		in, out := &in.ResourceType, &out.ResourceType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ResourceGroupObservation.
func (in *ResourceGroupObservation) DeepCopy() *ResourceGroupObservation {
	if in == nil {
		return nil
	}
	out := new(ResourceGroupObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ResourceGroupParameters) DeepCopyInto(out *ResourceGroupParameters) {
	*out = *in
	if in.GroupID != nil {
		in, out := &in.GroupID, &out.GroupID
		*out = new(string)
		**out = **in
	}
	if in.GroupIDRef != nil {
		in, out := &in.GroupIDRef, &out.GroupIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.GroupIDSelector != nil {
		in, out := &in.GroupIDSelector, &out.GroupIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.ResourceType != nil {
		in, out := &in.ResourceType, &out.ResourceType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ResourceGroupParameters.
func (in *ResourceGroupParameters) DeepCopy() *ResourceGroupParameters {
	if in == nil {
		return nil
	}
	out := new(ResourceGroupParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SLO) DeepCopyInto(out *SLO) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SLO.
func (in *SLO) DeepCopy() *SLO {
	if in == nil {
		return nil
	}
	out := new(SLO)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SLO) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SLOInitParameters) DeepCopyInto(out *SLOInitParameters) {
	*out = *in
	if in.BasicSli != nil {
		in, out := &in.BasicSli, &out.BasicSli
		*out = make([]BasicSliInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CalendarPeriod != nil {
		in, out := &in.CalendarPeriod, &out.CalendarPeriod
		*out = new(string)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.Goal != nil {
		in, out := &in.Goal, &out.Goal
		*out = new(float64)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.RequestBasedSli != nil {
		in, out := &in.RequestBasedSli, &out.RequestBasedSli
		*out = make([]RequestBasedSliInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RollingPeriodDays != nil {
		in, out := &in.RollingPeriodDays, &out.RollingPeriodDays
		*out = new(float64)
		**out = **in
	}
	if in.SLOID != nil {
		in, out := &in.SLOID, &out.SLOID
		*out = new(string)
		**out = **in
	}
	if in.Service != nil {
		in, out := &in.Service, &out.Service
		*out = new(string)
		**out = **in
	}
	if in.ServiceRef != nil {
		in, out := &in.ServiceRef, &out.ServiceRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ServiceSelector != nil {
		in, out := &in.ServiceSelector, &out.ServiceSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.UserLabels != nil {
		in, out := &in.UserLabels, &out.UserLabels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.WindowsBasedSli != nil {
		in, out := &in.WindowsBasedSli, &out.WindowsBasedSli
		*out = make([]WindowsBasedSliInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SLOInitParameters.
func (in *SLOInitParameters) DeepCopy() *SLOInitParameters {
	if in == nil {
		return nil
	}
	out := new(SLOInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SLOList) DeepCopyInto(out *SLOList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]SLO, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SLOList.
func (in *SLOList) DeepCopy() *SLOList {
	if in == nil {
		return nil
	}
	out := new(SLOList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SLOList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SLOObservation) DeepCopyInto(out *SLOObservation) {
	*out = *in
	if in.BasicSli != nil {
		in, out := &in.BasicSli, &out.BasicSli
		*out = make([]BasicSliObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CalendarPeriod != nil {
		in, out := &in.CalendarPeriod, &out.CalendarPeriod
		*out = new(string)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.Goal != nil {
		in, out := &in.Goal, &out.Goal
		*out = new(float64)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.RequestBasedSli != nil {
		in, out := &in.RequestBasedSli, &out.RequestBasedSli
		*out = make([]RequestBasedSliObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RollingPeriodDays != nil {
		in, out := &in.RollingPeriodDays, &out.RollingPeriodDays
		*out = new(float64)
		**out = **in
	}
	if in.SLOID != nil {
		in, out := &in.SLOID, &out.SLOID
		*out = new(string)
		**out = **in
	}
	if in.Service != nil {
		in, out := &in.Service, &out.Service
		*out = new(string)
		**out = **in
	}
	if in.UserLabels != nil {
		in, out := &in.UserLabels, &out.UserLabels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.WindowsBasedSli != nil {
		in, out := &in.WindowsBasedSli, &out.WindowsBasedSli
		*out = make([]WindowsBasedSliObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SLOObservation.
func (in *SLOObservation) DeepCopy() *SLOObservation {
	if in == nil {
		return nil
	}
	out := new(SLOObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SLOParameters) DeepCopyInto(out *SLOParameters) {
	*out = *in
	if in.BasicSli != nil {
		in, out := &in.BasicSli, &out.BasicSli
		*out = make([]BasicSliParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CalendarPeriod != nil {
		in, out := &in.CalendarPeriod, &out.CalendarPeriod
		*out = new(string)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.Goal != nil {
		in, out := &in.Goal, &out.Goal
		*out = new(float64)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.RequestBasedSli != nil {
		in, out := &in.RequestBasedSli, &out.RequestBasedSli
		*out = make([]RequestBasedSliParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RollingPeriodDays != nil {
		in, out := &in.RollingPeriodDays, &out.RollingPeriodDays
		*out = new(float64)
		**out = **in
	}
	if in.SLOID != nil {
		in, out := &in.SLOID, &out.SLOID
		*out = new(string)
		**out = **in
	}
	if in.Service != nil {
		in, out := &in.Service, &out.Service
		*out = new(string)
		**out = **in
	}
	if in.ServiceRef != nil {
		in, out := &in.ServiceRef, &out.ServiceRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ServiceSelector != nil {
		in, out := &in.ServiceSelector, &out.ServiceSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.UserLabels != nil {
		in, out := &in.UserLabels, &out.UserLabels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.WindowsBasedSli != nil {
		in, out := &in.WindowsBasedSli, &out.WindowsBasedSli
		*out = make([]WindowsBasedSliParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SLOParameters.
func (in *SLOParameters) DeepCopy() *SLOParameters {
	if in == nil {
		return nil
	}
	out := new(SLOParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SLOSpec) DeepCopyInto(out *SLOSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SLOSpec.
func (in *SLOSpec) DeepCopy() *SLOSpec {
	if in == nil {
		return nil
	}
	out := new(SLOSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SLOStatus) DeepCopyInto(out *SLOStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SLOStatus.
func (in *SLOStatus) DeepCopy() *SLOStatus {
	if in == nil {
		return nil
	}
	out := new(SLOStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SensitiveLabelsInitParameters) DeepCopyInto(out *SensitiveLabelsInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SensitiveLabelsInitParameters.
func (in *SensitiveLabelsInitParameters) DeepCopy() *SensitiveLabelsInitParameters {
	if in == nil {
		return nil
	}
	out := new(SensitiveLabelsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SensitiveLabelsObservation) DeepCopyInto(out *SensitiveLabelsObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SensitiveLabelsObservation.
func (in *SensitiveLabelsObservation) DeepCopy() *SensitiveLabelsObservation {
	if in == nil {
		return nil
	}
	out := new(SensitiveLabelsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SensitiveLabelsParameters) DeepCopyInto(out *SensitiveLabelsParameters) {
	*out = *in
	if in.AuthTokenSecretRef != nil {
		in, out := &in.AuthTokenSecretRef, &out.AuthTokenSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.PasswordSecretRef != nil {
		in, out := &in.PasswordSecretRef, &out.PasswordSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.ServiceKeySecretRef != nil {
		in, out := &in.ServiceKeySecretRef, &out.ServiceKeySecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SensitiveLabelsParameters.
func (in *SensitiveLabelsParameters) DeepCopy() *SensitiveLabelsParameters {
	if in == nil {
		return nil
	}
	out := new(SensitiveLabelsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Service) DeepCopyInto(out *Service) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Service.
func (in *Service) DeepCopy() *Service {
	if in == nil {
		return nil
	}
	out := new(Service)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Service) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceInitParameters) DeepCopyInto(out *ServiceInitParameters) {
	*out = *in
	if in.BasicService != nil {
		in, out := &in.BasicService, &out.BasicService
		*out = make([]BasicServiceInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.UserLabels != nil {
		in, out := &in.UserLabels, &out.UserLabels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceInitParameters.
func (in *ServiceInitParameters) DeepCopy() *ServiceInitParameters {
	if in == nil {
		return nil
	}
	out := new(ServiceInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceList) DeepCopyInto(out *ServiceList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Service, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceList.
func (in *ServiceList) DeepCopy() *ServiceList {
	if in == nil {
		return nil
	}
	out := new(ServiceList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ServiceList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceObservation) DeepCopyInto(out *ServiceObservation) {
	*out = *in
	if in.BasicService != nil {
		in, out := &in.BasicService, &out.BasicService
		*out = make([]BasicServiceObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Telemetry != nil {
		in, out := &in.Telemetry, &out.Telemetry
		*out = make([]ServiceTelemetryObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.UserLabels != nil {
		in, out := &in.UserLabels, &out.UserLabels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceObservation.
func (in *ServiceObservation) DeepCopy() *ServiceObservation {
	if in == nil {
		return nil
	}
	out := new(ServiceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceParameters) DeepCopyInto(out *ServiceParameters) {
	*out = *in
	if in.BasicService != nil {
		in, out := &in.BasicService, &out.BasicService
		*out = make([]BasicServiceParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.UserLabels != nil {
		in, out := &in.UserLabels, &out.UserLabels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceParameters.
func (in *ServiceParameters) DeepCopy() *ServiceParameters {
	if in == nil {
		return nil
	}
	out := new(ServiceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceSpec) DeepCopyInto(out *ServiceSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceSpec.
func (in *ServiceSpec) DeepCopy() *ServiceSpec {
	if in == nil {
		return nil
	}
	out := new(ServiceSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceStatus) DeepCopyInto(out *ServiceStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceStatus.
func (in *ServiceStatus) DeepCopy() *ServiceStatus {
	if in == nil {
		return nil
	}
	out := new(ServiceStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceTelemetryInitParameters) DeepCopyInto(out *ServiceTelemetryInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceTelemetryInitParameters.
func (in *ServiceTelemetryInitParameters) DeepCopy() *ServiceTelemetryInitParameters {
	if in == nil {
		return nil
	}
	out := new(ServiceTelemetryInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceTelemetryObservation) DeepCopyInto(out *ServiceTelemetryObservation) {
	*out = *in
	if in.ResourceName != nil {
		in, out := &in.ResourceName, &out.ResourceName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceTelemetryObservation.
func (in *ServiceTelemetryObservation) DeepCopy() *ServiceTelemetryObservation {
	if in == nil {
		return nil
	}
	out := new(ServiceTelemetryObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceTelemetryParameters) DeepCopyInto(out *ServiceTelemetryParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceTelemetryParameters.
func (in *ServiceTelemetryParameters) DeepCopy() *ServiceTelemetryParameters {
	if in == nil {
		return nil
	}
	out := new(ServiceTelemetryParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SyntheticMonitorInitParameters) DeepCopyInto(out *SyntheticMonitorInitParameters) {
	*out = *in
	if in.CloudFunctionV2 != nil {
		in, out := &in.CloudFunctionV2, &out.CloudFunctionV2
		*out = make([]CloudFunctionV2InitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SyntheticMonitorInitParameters.
func (in *SyntheticMonitorInitParameters) DeepCopy() *SyntheticMonitorInitParameters {
	if in == nil {
		return nil
	}
	out := new(SyntheticMonitorInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SyntheticMonitorObservation) DeepCopyInto(out *SyntheticMonitorObservation) {
	*out = *in
	if in.CloudFunctionV2 != nil {
		in, out := &in.CloudFunctionV2, &out.CloudFunctionV2
		*out = make([]CloudFunctionV2Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SyntheticMonitorObservation.
func (in *SyntheticMonitorObservation) DeepCopy() *SyntheticMonitorObservation {
	if in == nil {
		return nil
	}
	out := new(SyntheticMonitorObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SyntheticMonitorParameters) DeepCopyInto(out *SyntheticMonitorParameters) {
	*out = *in
	if in.CloudFunctionV2 != nil {
		in, out := &in.CloudFunctionV2, &out.CloudFunctionV2
		*out = make([]CloudFunctionV2Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SyntheticMonitorParameters.
func (in *SyntheticMonitorParameters) DeepCopy() *SyntheticMonitorParameters {
	if in == nil {
		return nil
	}
	out := new(SyntheticMonitorParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TCPCheckInitParameters) DeepCopyInto(out *TCPCheckInitParameters) {
	*out = *in
	if in.PingConfig != nil {
		in, out := &in.PingConfig, &out.PingConfig
		*out = make([]TCPCheckPingConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TCPCheckInitParameters.
func (in *TCPCheckInitParameters) DeepCopy() *TCPCheckInitParameters {
	if in == nil {
		return nil
	}
	out := new(TCPCheckInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TCPCheckObservation) DeepCopyInto(out *TCPCheckObservation) {
	*out = *in
	if in.PingConfig != nil {
		in, out := &in.PingConfig, &out.PingConfig
		*out = make([]TCPCheckPingConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TCPCheckObservation.
func (in *TCPCheckObservation) DeepCopy() *TCPCheckObservation {
	if in == nil {
		return nil
	}
	out := new(TCPCheckObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TCPCheckParameters) DeepCopyInto(out *TCPCheckParameters) {
	*out = *in
	if in.PingConfig != nil {
		in, out := &in.PingConfig, &out.PingConfig
		*out = make([]TCPCheckPingConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TCPCheckParameters.
func (in *TCPCheckParameters) DeepCopy() *TCPCheckParameters {
	if in == nil {
		return nil
	}
	out := new(TCPCheckParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TCPCheckPingConfigInitParameters) DeepCopyInto(out *TCPCheckPingConfigInitParameters) {
	*out = *in
	if in.PingsCount != nil {
		in, out := &in.PingsCount, &out.PingsCount
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TCPCheckPingConfigInitParameters.
func (in *TCPCheckPingConfigInitParameters) DeepCopy() *TCPCheckPingConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(TCPCheckPingConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TCPCheckPingConfigObservation) DeepCopyInto(out *TCPCheckPingConfigObservation) {
	*out = *in
	if in.PingsCount != nil {
		in, out := &in.PingsCount, &out.PingsCount
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TCPCheckPingConfigObservation.
func (in *TCPCheckPingConfigObservation) DeepCopy() *TCPCheckPingConfigObservation {
	if in == nil {
		return nil
	}
	out := new(TCPCheckPingConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TCPCheckPingConfigParameters) DeepCopyInto(out *TCPCheckPingConfigParameters) {
	*out = *in
	if in.PingsCount != nil {
		in, out := &in.PingsCount, &out.PingsCount
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TCPCheckPingConfigParameters.
func (in *TCPCheckPingConfigParameters) DeepCopy() *TCPCheckPingConfigParameters {
	if in == nil {
		return nil
	}
	out := new(TCPCheckPingConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TelemetryInitParameters) DeepCopyInto(out *TelemetryInitParameters) {
	*out = *in
	if in.ResourceName != nil {
		in, out := &in.ResourceName, &out.ResourceName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TelemetryInitParameters.
func (in *TelemetryInitParameters) DeepCopy() *TelemetryInitParameters {
	if in == nil {
		return nil
	}
	out := new(TelemetryInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TelemetryObservation) DeepCopyInto(out *TelemetryObservation) {
	*out = *in
	if in.ResourceName != nil {
		in, out := &in.ResourceName, &out.ResourceName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TelemetryObservation.
func (in *TelemetryObservation) DeepCopy() *TelemetryObservation {
	if in == nil {
		return nil
	}
	out := new(TelemetryObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TelemetryParameters) DeepCopyInto(out *TelemetryParameters) {
	*out = *in
	if in.ResourceName != nil {
		in, out := &in.ResourceName, &out.ResourceName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TelemetryParameters.
func (in *TelemetryParameters) DeepCopy() *TelemetryParameters {
	if in == nil {
		return nil
	}
	out := new(TelemetryParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TriggerInitParameters) DeepCopyInto(out *TriggerInitParameters) {
	*out = *in
	if in.Count != nil {
		in, out := &in.Count, &out.Count
		*out = new(float64)
		**out = **in
	}
	if in.Percent != nil {
		in, out := &in.Percent, &out.Percent
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TriggerInitParameters.
func (in *TriggerInitParameters) DeepCopy() *TriggerInitParameters {
	if in == nil {
		return nil
	}
	out := new(TriggerInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TriggerObservation) DeepCopyInto(out *TriggerObservation) {
	*out = *in
	if in.Count != nil {
		in, out := &in.Count, &out.Count
		*out = new(float64)
		**out = **in
	}
	if in.Percent != nil {
		in, out := &in.Percent, &out.Percent
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TriggerObservation.
func (in *TriggerObservation) DeepCopy() *TriggerObservation {
	if in == nil {
		return nil
	}
	out := new(TriggerObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TriggerParameters) DeepCopyInto(out *TriggerParameters) {
	*out = *in
	if in.Count != nil {
		in, out := &in.Count, &out.Count
		*out = new(float64)
		**out = **in
	}
	if in.Percent != nil {
		in, out := &in.Percent, &out.Percent
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TriggerParameters.
func (in *TriggerParameters) DeepCopy() *TriggerParameters {
	if in == nil {
		return nil
	}
	out := new(TriggerParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UptimeCheckConfig) DeepCopyInto(out *UptimeCheckConfig) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UptimeCheckConfig.
func (in *UptimeCheckConfig) DeepCopy() *UptimeCheckConfig {
	if in == nil {
		return nil
	}
	out := new(UptimeCheckConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *UptimeCheckConfig) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UptimeCheckConfigInitParameters) DeepCopyInto(out *UptimeCheckConfigInitParameters) {
	*out = *in
	if in.CheckerType != nil {
		in, out := &in.CheckerType, &out.CheckerType
		*out = new(string)
		**out = **in
	}
	if in.ContentMatchers != nil {
		in, out := &in.ContentMatchers, &out.ContentMatchers
		*out = make([]ContentMatchersInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.HTTPCheck != nil {
		in, out := &in.HTTPCheck, &out.HTTPCheck
		*out = make([]HTTPCheckInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MonitoredResource != nil {
		in, out := &in.MonitoredResource, &out.MonitoredResource
		*out = make([]MonitoredResourceInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Period != nil {
		in, out := &in.Period, &out.Period
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroup != nil {
		in, out := &in.ResourceGroup, &out.ResourceGroup
		*out = make([]ResourceGroupInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SelectedRegions != nil {
		in, out := &in.SelectedRegions, &out.SelectedRegions
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SyntheticMonitor != nil {
		in, out := &in.SyntheticMonitor, &out.SyntheticMonitor
		*out = make([]SyntheticMonitorInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TCPCheck != nil {
		in, out := &in.TCPCheck, &out.TCPCheck
		*out = make([]TCPCheckInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Timeout != nil {
		in, out := &in.Timeout, &out.Timeout
		*out = new(string)
		**out = **in
	}
	if in.UserLabels != nil {
		in, out := &in.UserLabels, &out.UserLabels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UptimeCheckConfigInitParameters.
func (in *UptimeCheckConfigInitParameters) DeepCopy() *UptimeCheckConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(UptimeCheckConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UptimeCheckConfigList) DeepCopyInto(out *UptimeCheckConfigList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]UptimeCheckConfig, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UptimeCheckConfigList.
func (in *UptimeCheckConfigList) DeepCopy() *UptimeCheckConfigList {
	if in == nil {
		return nil
	}
	out := new(UptimeCheckConfigList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *UptimeCheckConfigList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UptimeCheckConfigObservation) DeepCopyInto(out *UptimeCheckConfigObservation) {
	*out = *in
	if in.CheckerType != nil {
		in, out := &in.CheckerType, &out.CheckerType
		*out = new(string)
		**out = **in
	}
	if in.ContentMatchers != nil {
		in, out := &in.ContentMatchers, &out.ContentMatchers
		*out = make([]ContentMatchersObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.HTTPCheck != nil {
		in, out := &in.HTTPCheck, &out.HTTPCheck
		*out = make([]HTTPCheckObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.MonitoredResource != nil {
		in, out := &in.MonitoredResource, &out.MonitoredResource
		*out = make([]MonitoredResourceObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Period != nil {
		in, out := &in.Period, &out.Period
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroup != nil {
		in, out := &in.ResourceGroup, &out.ResourceGroup
		*out = make([]ResourceGroupObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SelectedRegions != nil {
		in, out := &in.SelectedRegions, &out.SelectedRegions
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SyntheticMonitor != nil {
		in, out := &in.SyntheticMonitor, &out.SyntheticMonitor
		*out = make([]SyntheticMonitorObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TCPCheck != nil {
		in, out := &in.TCPCheck, &out.TCPCheck
		*out = make([]TCPCheckObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Timeout != nil {
		in, out := &in.Timeout, &out.Timeout
		*out = new(string)
		**out = **in
	}
	if in.UptimeCheckID != nil {
		in, out := &in.UptimeCheckID, &out.UptimeCheckID
		*out = new(string)
		**out = **in
	}
	if in.UserLabels != nil {
		in, out := &in.UserLabels, &out.UserLabels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UptimeCheckConfigObservation.
func (in *UptimeCheckConfigObservation) DeepCopy() *UptimeCheckConfigObservation {
	if in == nil {
		return nil
	}
	out := new(UptimeCheckConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UptimeCheckConfigParameters) DeepCopyInto(out *UptimeCheckConfigParameters) {
	*out = *in
	if in.CheckerType != nil {
		in, out := &in.CheckerType, &out.CheckerType
		*out = new(string)
		**out = **in
	}
	if in.ContentMatchers != nil {
		in, out := &in.ContentMatchers, &out.ContentMatchers
		*out = make([]ContentMatchersParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.HTTPCheck != nil {
		in, out := &in.HTTPCheck, &out.HTTPCheck
		*out = make([]HTTPCheckParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MonitoredResource != nil {
		in, out := &in.MonitoredResource, &out.MonitoredResource
		*out = make([]MonitoredResourceParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Period != nil {
		in, out := &in.Period, &out.Period
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroup != nil {
		in, out := &in.ResourceGroup, &out.ResourceGroup
		*out = make([]ResourceGroupParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SelectedRegions != nil {
		in, out := &in.SelectedRegions, &out.SelectedRegions
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SyntheticMonitor != nil {
		in, out := &in.SyntheticMonitor, &out.SyntheticMonitor
		*out = make([]SyntheticMonitorParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TCPCheck != nil {
		in, out := &in.TCPCheck, &out.TCPCheck
		*out = make([]TCPCheckParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Timeout != nil {
		in, out := &in.Timeout, &out.Timeout
		*out = new(string)
		**out = **in
	}
	if in.UserLabels != nil {
		in, out := &in.UserLabels, &out.UserLabels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UptimeCheckConfigParameters.
func (in *UptimeCheckConfigParameters) DeepCopy() *UptimeCheckConfigParameters {
	if in == nil {
		return nil
	}
	out := new(UptimeCheckConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UptimeCheckConfigSpec) DeepCopyInto(out *UptimeCheckConfigSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UptimeCheckConfigSpec.
func (in *UptimeCheckConfigSpec) DeepCopy() *UptimeCheckConfigSpec {
	if in == nil {
		return nil
	}
	out := new(UptimeCheckConfigSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UptimeCheckConfigStatus) DeepCopyInto(out *UptimeCheckConfigStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UptimeCheckConfigStatus.
func (in *UptimeCheckConfigStatus) DeepCopy() *UptimeCheckConfigStatus {
	if in == nil {
		return nil
	}
	out := new(UptimeCheckConfigStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsBasedSliInitParameters) DeepCopyInto(out *WindowsBasedSliInitParameters) {
	*out = *in
	if in.GoodBadMetricFilter != nil {
		in, out := &in.GoodBadMetricFilter, &out.GoodBadMetricFilter
		*out = new(string)
		**out = **in
	}
	if in.GoodTotalRatioThreshold != nil {
		in, out := &in.GoodTotalRatioThreshold, &out.GoodTotalRatioThreshold
		*out = make([]GoodTotalRatioThresholdInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MetricMeanInRange != nil {
		in, out := &in.MetricMeanInRange, &out.MetricMeanInRange
		*out = make([]MetricMeanInRangeInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MetricSumInRange != nil {
		in, out := &in.MetricSumInRange, &out.MetricSumInRange
		*out = make([]MetricSumInRangeInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.WindowPeriod != nil {
		in, out := &in.WindowPeriod, &out.WindowPeriod
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsBasedSliInitParameters.
func (in *WindowsBasedSliInitParameters) DeepCopy() *WindowsBasedSliInitParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsBasedSliInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsBasedSliObservation) DeepCopyInto(out *WindowsBasedSliObservation) {
	*out = *in
	if in.GoodBadMetricFilter != nil {
		in, out := &in.GoodBadMetricFilter, &out.GoodBadMetricFilter
		*out = new(string)
		**out = **in
	}
	if in.GoodTotalRatioThreshold != nil {
		in, out := &in.GoodTotalRatioThreshold, &out.GoodTotalRatioThreshold
		*out = make([]GoodTotalRatioThresholdObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MetricMeanInRange != nil {
		in, out := &in.MetricMeanInRange, &out.MetricMeanInRange
		*out = make([]MetricMeanInRangeObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MetricSumInRange != nil {
		in, out := &in.MetricSumInRange, &out.MetricSumInRange
		*out = make([]MetricSumInRangeObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.WindowPeriod != nil {
		in, out := &in.WindowPeriod, &out.WindowPeriod
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsBasedSliObservation.
func (in *WindowsBasedSliObservation) DeepCopy() *WindowsBasedSliObservation {
	if in == nil {
		return nil
	}
	out := new(WindowsBasedSliObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsBasedSliParameters) DeepCopyInto(out *WindowsBasedSliParameters) {
	*out = *in
	if in.GoodBadMetricFilter != nil {
		in, out := &in.GoodBadMetricFilter, &out.GoodBadMetricFilter
		*out = new(string)
		**out = **in
	}
	if in.GoodTotalRatioThreshold != nil {
		in, out := &in.GoodTotalRatioThreshold, &out.GoodTotalRatioThreshold
		*out = make([]GoodTotalRatioThresholdParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MetricMeanInRange != nil {
		in, out := &in.MetricMeanInRange, &out.MetricMeanInRange
		*out = make([]MetricMeanInRangeParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MetricSumInRange != nil {
		in, out := &in.MetricSumInRange, &out.MetricSumInRange
		*out = make([]MetricSumInRangeParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.WindowPeriod != nil {
		in, out := &in.WindowPeriod, &out.WindowPeriod
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsBasedSliParameters.
func (in *WindowsBasedSliParameters) DeepCopy() *WindowsBasedSliParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsBasedSliParameters)
	in.DeepCopyInto(out)
	return out
}
