// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1beta1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type QuotaConfigInitParameters struct {

	// The annotations map for clients to store small amounts of arbitrary data. Do not put PII or other sensitive information here. See https://google.aip.dev/128#annotations.
	// An object containing a list of "key: value" pairs. Example: { "name": "wrench", "mass": "1.3kg", "count": "3" }.
	// +mapType=granular
	Annotations map[string]*string `json:"annotations,omitempty" tf:"annotations,omitempty"`

	// The preferred value. Must be greater than or equal to -1. If set to -1, it means the value is "unlimited".
	PreferredValue *string `json:"preferredValue,omitempty" tf:"preferred_value,omitempty"`
}

type QuotaConfigObservation struct {

	// The annotations map for clients to store small amounts of arbitrary data. Do not put PII or other sensitive information here. See https://google.aip.dev/128#annotations.
	// An object containing a list of "key: value" pairs. Example: { "name": "wrench", "mass": "1.3kg", "count": "3" }.
	// +mapType=granular
	Annotations map[string]*string `json:"annotations,omitempty" tf:"annotations,omitempty"`

	// (Output)
	// Granted quota value.
	GrantedValue *string `json:"grantedValue,omitempty" tf:"granted_value,omitempty"`

	// The preferred value. Must be greater than or equal to -1. If set to -1, it means the value is "unlimited".
	PreferredValue *string `json:"preferredValue,omitempty" tf:"preferred_value,omitempty"`

	// (Output)
	// The origin of the quota preference request.
	RequestOrigin *string `json:"requestOrigin,omitempty" tf:"request_origin,omitempty"`

	// (Output)
	// Optional details about the state of this quota preference.
	StateDetail *string `json:"stateDetail,omitempty" tf:"state_detail,omitempty"`

	// (Output)
	// The trace id that the Google Cloud uses to provision the requested quota. This trace id may be used by the client to contact Cloud support to track the state of a quota preference request. The trace id is only produced for increase requests and is unique for each request. The quota decrease requests do not have a trace id.
	TraceID *string `json:"traceId,omitempty" tf:"trace_id,omitempty"`
}

type QuotaConfigParameters struct {

	// The annotations map for clients to store small amounts of arbitrary data. Do not put PII or other sensitive information here. See https://google.aip.dev/128#annotations.
	// An object containing a list of "key: value" pairs. Example: { "name": "wrench", "mass": "1.3kg", "count": "3" }.
	// +kubebuilder:validation:Optional
	// +mapType=granular
	Annotations map[string]*string `json:"annotations,omitempty" tf:"annotations,omitempty"`

	// The preferred value. Must be greater than or equal to -1. If set to -1, it means the value is "unlimited".
	// +kubebuilder:validation:Optional
	PreferredValue *string `json:"preferredValue" tf:"preferred_value,omitempty"`
}

type QuotaPreferenceInitParameters struct {

	// An email address that can be used for quota related communication between the Google Cloud and the user in case the Google Cloud needs further information to make a decision on whether the user preferred quota can be granted.
	// The Google account for the email address must have quota update permission for the project, folder or organization this quota preference is for.
	ContactEmail *string `json:"contactEmail,omitempty" tf:"contact_email,omitempty"`

	// The dimensions that this quota preference applies to. The key of the map entry is the name of a dimension, such as "region", "zone", "network_id", and the value of the map entry is the dimension value. If a dimension is missing from the map of dimensions, the quota preference applies to all the dimension values except for those that have other quota preferences configured for the specific value.
	// NOTE: QuotaPreferences can only be applied across all values of "user" and "resource" dimension. Do not set values for "user" or "resource" in the dimension map.
	// Example: {"provider": "Foo Inc"} where "provider" is a service specific dimension.
	// +mapType=granular
	Dimensions map[string]*string `json:"dimensions,omitempty" tf:"dimensions,omitempty"`

	// The list of quota safety checks to be ignored.
	// Default value is QUOTA_SAFETY_CHECK_UNSPECIFIED.
	// Possible values are: QUOTA_SAFETY_CHECK_UNSPECIFIED, QUOTA_DECREASE_BELOW_USAGE, QUOTA_DECREASE_PERCENTAGE_TOO_HIGH.
	IgnoreSafetyChecks *string `json:"ignoreSafetyChecks,omitempty" tf:"ignore_safety_checks,omitempty"`

	// The reason / justification for this quota preference.
	Justification *string `json:"justification,omitempty" tf:"justification,omitempty"`

	// The preferred quota configuration.
	// Structure is documented below.
	QuotaConfig *QuotaConfigInitParameters `json:"quotaConfig,omitempty" tf:"quota_config,omitempty"`

	// The id of the quota to which the quota preference is applied. A quota id is unique in the service.
	// Example: CPUS-per-project-region.
	QuotaID *string `json:"quotaId,omitempty" tf:"quota_id,omitempty"`

	// The name of the service to which the quota preference is applied.
	Service *string `json:"service,omitempty" tf:"service,omitempty"`
}

type QuotaPreferenceObservation struct {

	// An email address that can be used for quota related communication between the Google Cloud and the user in case the Google Cloud needs further information to make a decision on whether the user preferred quota can be granted.
	// The Google account for the email address must have quota update permission for the project, folder or organization this quota preference is for.
	ContactEmail *string `json:"contactEmail,omitempty" tf:"contact_email,omitempty"`

	// Create time stamp.
	// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine fractional digits. Examples: 2014-10-02T15:01:23Z and 2014-10-02T15:01:23.045123456Z.
	CreateTime *string `json:"createTime,omitempty" tf:"create_time,omitempty"`

	// The dimensions that this quota preference applies to. The key of the map entry is the name of a dimension, such as "region", "zone", "network_id", and the value of the map entry is the dimension value. If a dimension is missing from the map of dimensions, the quota preference applies to all the dimension values except for those that have other quota preferences configured for the specific value.
	// NOTE: QuotaPreferences can only be applied across all values of "user" and "resource" dimension. Do not set values for "user" or "resource" in the dimension map.
	// Example: {"provider": "Foo Inc"} where "provider" is a service specific dimension.
	// +mapType=granular
	Dimensions map[string]*string `json:"dimensions,omitempty" tf:"dimensions,omitempty"`

	// The current etag of the quota preference. If an etag is provided on update and does not match the current server's etag of the quota preference, the request will be blocked and an ABORTED error will be returned. See https://google.aip.dev/134#etags for more details on etags.
	Etag *string `json:"etag,omitempty" tf:"etag,omitempty"`

	// an identifier for the resource with format {{parent}}/locations/global/quotaPreferences/{{name}}
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// The list of quota safety checks to be ignored.
	// Default value is QUOTA_SAFETY_CHECK_UNSPECIFIED.
	// Possible values are: QUOTA_SAFETY_CHECK_UNSPECIFIED, QUOTA_DECREASE_BELOW_USAGE, QUOTA_DECREASE_PERCENTAGE_TOO_HIGH.
	IgnoreSafetyChecks *string `json:"ignoreSafetyChecks,omitempty" tf:"ignore_safety_checks,omitempty"`

	// The reason / justification for this quota preference.
	Justification *string `json:"justification,omitempty" tf:"justification,omitempty"`

	// The parent of the quota preference. Allowed parents are "projects/[project-id / number]" or "folders/[folder-id / number]" or "organizations/[org-id / number]".
	Parent *string `json:"parent,omitempty" tf:"parent,omitempty"`

	// The preferred quota configuration.
	// Structure is documented below.
	QuotaConfig *QuotaConfigObservation `json:"quotaConfig,omitempty" tf:"quota_config,omitempty"`

	// The id of the quota to which the quota preference is applied. A quota id is unique in the service.
	// Example: CPUS-per-project-region.
	QuotaID *string `json:"quotaId,omitempty" tf:"quota_id,omitempty"`

	// Is the quota preference pending Google Cloud approval and fulfillment.
	Reconciling *bool `json:"reconciling,omitempty" tf:"reconciling,omitempty"`

	// The name of the service to which the quota preference is applied.
	Service *string `json:"service,omitempty" tf:"service,omitempty"`

	// Update time stamp.
	// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine fractional digits. Examples: 2014-10-02T15:01:23Z and 2014-10-02T15:01:23.045123456Z.
	UpdateTime *string `json:"updateTime,omitempty" tf:"update_time,omitempty"`
}

type QuotaPreferenceParameters struct {

	// An email address that can be used for quota related communication between the Google Cloud and the user in case the Google Cloud needs further information to make a decision on whether the user preferred quota can be granted.
	// The Google account for the email address must have quota update permission for the project, folder or organization this quota preference is for.
	// +kubebuilder:validation:Optional
	ContactEmail *string `json:"contactEmail,omitempty" tf:"contact_email,omitempty"`

	// The dimensions that this quota preference applies to. The key of the map entry is the name of a dimension, such as "region", "zone", "network_id", and the value of the map entry is the dimension value. If a dimension is missing from the map of dimensions, the quota preference applies to all the dimension values except for those that have other quota preferences configured for the specific value.
	// NOTE: QuotaPreferences can only be applied across all values of "user" and "resource" dimension. Do not set values for "user" or "resource" in the dimension map.
	// Example: {"provider": "Foo Inc"} where "provider" is a service specific dimension.
	// +kubebuilder:validation:Optional
	// +mapType=granular
	Dimensions map[string]*string `json:"dimensions,omitempty" tf:"dimensions,omitempty"`

	// The list of quota safety checks to be ignored.
	// Default value is QUOTA_SAFETY_CHECK_UNSPECIFIED.
	// Possible values are: QUOTA_SAFETY_CHECK_UNSPECIFIED, QUOTA_DECREASE_BELOW_USAGE, QUOTA_DECREASE_PERCENTAGE_TOO_HIGH.
	// +kubebuilder:validation:Optional
	IgnoreSafetyChecks *string `json:"ignoreSafetyChecks,omitempty" tf:"ignore_safety_checks,omitempty"`

	// The reason / justification for this quota preference.
	// +kubebuilder:validation:Optional
	Justification *string `json:"justification,omitempty" tf:"justification,omitempty"`

	// The parent of the quota preference. Allowed parents are "projects/[project-id / number]" or "folders/[folder-id / number]" or "organizations/[org-id / number]".
	// +kubebuilder:validation:Optional
	Parent *string `json:"parent,omitempty" tf:"parent,omitempty"`

	// The preferred quota configuration.
	// Structure is documented below.
	// +kubebuilder:validation:Optional
	QuotaConfig *QuotaConfigParameters `json:"quotaConfig,omitempty" tf:"quota_config,omitempty"`

	// The id of the quota to which the quota preference is applied. A quota id is unique in the service.
	// Example: CPUS-per-project-region.
	// +kubebuilder:validation:Optional
	QuotaID *string `json:"quotaId,omitempty" tf:"quota_id,omitempty"`

	// The name of the service to which the quota preference is applied.
	// +kubebuilder:validation:Optional
	Service *string `json:"service,omitempty" tf:"service,omitempty"`
}

// QuotaPreferenceSpec defines the desired state of QuotaPreference
type QuotaPreferenceSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     QuotaPreferenceParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider QuotaPreferenceInitParameters `json:"initProvider,omitempty"`
}

// QuotaPreferenceStatus defines the observed state of QuotaPreference.
type QuotaPreferenceStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        QuotaPreferenceObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// QuotaPreference is the Schema for the QuotaPreferences API. QuotaPreference represents the preferred quota configuration specified for a project, folder or organization.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,gcp}
type QuotaPreference struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.quotaConfig) || (has(self.initProvider) && has(self.initProvider.quotaConfig))",message="spec.forProvider.quotaConfig is a required parameter"
	Spec   QuotaPreferenceSpec   `json:"spec"`
	Status QuotaPreferenceStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// QuotaPreferenceList contains a list of QuotaPreferences
type QuotaPreferenceList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []QuotaPreference `json:"items"`
}

// Repository type metadata.
var (
	QuotaPreference_Kind             = "QuotaPreference"
	QuotaPreference_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: QuotaPreference_Kind}.String()
	QuotaPreference_KindAPIVersion   = QuotaPreference_Kind + "." + CRDGroupVersion.String()
	QuotaPreference_GroupVersionKind = CRDGroupVersion.WithKind(QuotaPreference_Kind)
)

func init() {
	SchemeBuilder.Register(&QuotaPreference{}, &QuotaPreferenceList{})
}
