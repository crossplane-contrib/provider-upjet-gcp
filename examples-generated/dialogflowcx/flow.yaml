apiVersion: dialogflowcx.gcp.upbound.io/v1beta1
kind: Flow
metadata:
  annotations:
    meta.upbound.io/example-id: dialogflowcx/v1beta1/flow
  labels:
    testing.upbound.io/example-name: basic_flow
  name: basic-flow
spec:
  forProvider:
    description: Test Flow
    displayName: MyFlow
    eventHandlers:
    - event: custom-event
      triggerFulfillment:
      - messages:
        - text:
          - text:
            - I didn't get that. Can you say it again?
        returnPartialResponses: false
    - event: sys.no-match-default
      triggerFulfillment:
      - messages:
        - text:
          - text:
            - Sorry, could you say that again?
        returnPartialResponses: false
    - event: sys.no-input-default
      triggerFulfillment:
      - messages:
        - text:
          - text:
            - One more time?
        returnPartialResponses: false
    - event: another-event
      triggerFulfillment:
      - conditionalCases:
        - cases: |-
            ${jsonencode([
                      {
                        condition = "$sys.func.RAND() < 0.5",
                        caseContent = [
                          {
                            message = { text = { text = ["First case"] } }
                          },
                          {
                            additionalCases = {
                              cases = [
                                {
                                  condition = "$sys.func.RAND() < 0.2"
                                  caseContent = [
                                    {
                                      message = { text = { text = ["Nested case"] } }
                                    }
                                  ]
                                }
                              ]
                            }
                          }
                        ]
                      },
                      {
                        caseContent = [
                          {
                            message = { text = { text = ["Final case"] } }
                          }
                        ]
                      },
                    ])}
        messages:
        - channel: some-channel
          text:
          - text:
            - Some text
        - payload: |2
                      {"some-key": "some-value", "other-key": ["other-value"]}
        - conversationSuccess:
          - metadata: |2
                          {"some-metadata-key": "some-value", "other-metadata-key": 1234}
        - outputAudioText:
          - text: some output text
        - outputAudioText:
          - ssml: |2
                          <speak>Some example <say-as interpret-as="characters">SSML XML</say-as></speak>
        - liveAgentHandoff:
          - metadata: |2
                          {"some-metadata-key": "some-value", "other-metadata-key": 1234}
        - playAudio:
          - audioUri: http://example.com/some-audio-file.mp3
        - telephonyTransferCall:
          - phoneNumber: 1-234-567-8901
        returnPartialResponses: true
        setParameterActions:
        - parameter: some-param
          value: "123.45"
        - parameter: another-param
          value: ${jsonencode("abc")}
        - parameter: other-param
          value: ${jsonencode(["foo"])}
    nluSettings:
    - classificationThreshold: 0.3
      modelType: MODEL_TYPE_STANDARD
    parentSelector:
      matchLabels:
        testing.upbound.io/example-name: agent
    transitionRoutes:
    - condition: "true"
      targetFlowSelector:
        matchLabels:
          testing.upbound.io/example-name: agent
      triggerFulfillment:
      - conditionalCases:
        - cases: |-
            ${jsonencode([
                      {
                        condition = "$sys.func.RAND() < 0.5",
                        caseContent = [
                          {
                            message = { text = { text = ["First case"] } }
                          },
                          {
                            additionalCases = {
                              cases = [
                                {
                                  condition = "$sys.func.RAND() < 0.2"
                                  caseContent = [
                                    {
                                      message = { text = { text = ["Nested case"] } }
                                    }
                                  ]
                                }
                              ]
                            }
                          }
                        ]
                      },
                      {
                        caseContent = [
                          {
                            message = { text = { text = ["Final case"] } }
                          }
                        ]
                      },
                    ])}
        messages:
        - channel: some-channel
          text:
          - text:
            - Some text
        - payload: |2
                      {"some-key": "some-value", "other-key": ["other-value"]}
        - conversationSuccess:
          - metadata: |2
                          {"some-metadata-key": "some-value", "other-metadata-key": 1234}
        - outputAudioText:
          - text: some output text
        - outputAudioText:
          - ssml: |2
                          <speak>Some example <say-as interpret-as="characters">SSML XML</say-as></speak>
        - liveAgentHandoff:
          - metadata: |2
                          {"some-metadata-key": "some-value", "other-metadata-key": 1234}
        - playAudio:
          - audioUri: http://example.com/some-audio-file.mp3
        - telephonyTransferCall:
          - phoneNumber: 1-234-567-8901
        returnPartialResponses: true
        setParameterActions:
        - parameter: some-param
          value: "123.45"
        - parameter: another-param
          value: ${jsonencode("abc")}
        - parameter: other-param
          value: ${jsonencode(["foo"])}

---

apiVersion: dialogflowcx.gcp.upbound.io/v1beta1
kind: Agent
metadata:
  annotations:
    meta.upbound.io/example-id: dialogflowcx/v1beta1/flow
  labels:
    testing.upbound.io/example-name: agent
  name: agent
spec:
  forProvider:
    avatarUri: https://cloud.google.com/_static/images/cloud/icons/favicons/onecloud/super_cloud.png
    defaultLanguageCode: en
    description: Example description.
    displayName: dialogflowcx-agent
    enableSpellCorrection: true
    enableStackdriverLogging: true
    location: global
    speechToTextSettings:
    - enableSpeechAdaptation: true
    supportedLanguageCodes:
    - fr
    - de
    - es
    timeZone: America/New_York
