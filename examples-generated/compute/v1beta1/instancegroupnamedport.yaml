apiVersion: compute.gcp.upbound.io/v1beta1
kind: InstanceGroupNamedPort
metadata:
  annotations:
    meta.upbound.io/example-id: compute/v1beta1/instancegroupnamedport
  labels:
    testing.upbound.io/example-name: my_port
  name: my-port
spec:
  forProvider:
    group: ${google_container_cluster.my_cluster.node_pool[0].instance_group_urls[0]}
    name: http
    port: 8080
    zone: us-central1-a

---

apiVersion: compute.gcp.upbound.io/v1beta1
kind: Network
metadata:
  annotations:
    meta.upbound.io/example-id: compute/v1beta1/instancegroupnamedport
  labels:
    testing.upbound.io/example-name: container_network
  name: container-network
spec:
  forProvider:
    autoCreateSubnetworks: false

---

apiVersion: compute.gcp.upbound.io/v1beta1
kind: Subnetwork
metadata:
  annotations:
    meta.upbound.io/example-id: compute/v1beta1/instancegroupnamedport
  labels:
    testing.upbound.io/example-name: container_subnetwork
  name: container-subnetwork
spec:
  forProvider:
    ipCidrRange: 10.0.36.0/24
    networkSelector:
      matchLabels:
        testing.upbound.io/example-name: example
    region: us-central1

---

apiVersion: container.gcp.upbound.io/v1beta1
kind: Cluster
metadata:
  annotations:
    meta.upbound.io/example-id: compute/v1beta1/instancegroupnamedport
  labels:
    testing.upbound.io/example-name: my_cluster
  name: my-cluster
spec:
  forProvider:
    initialNodeCount: 1
    ipAllocationPolicy:
    - clusterIpv4CidrBlock: /19
      servicesIpv4CidrBlock: /22
    location: us-central1-a
    networkSelector:
      matchLabels:
        testing.upbound.io/example-name: example
    subnetworkSelector:
      matchLabels:
        testing.upbound.io/example-name: example
