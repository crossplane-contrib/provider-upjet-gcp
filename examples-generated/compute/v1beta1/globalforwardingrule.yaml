apiVersion: compute.gcp.upbound.io/v1beta1
kind: GlobalForwardingRule
metadata:
  annotations:
    meta.upbound.io/example-id: compute/v1beta1/globalforwardingrule
  labels:
    testing.upbound.io/example-name: default
  name: default
spec:
  forProvider:
    ipAddressSelector:
      matchLabels:
        testing.upbound.io/example-name: default
    ipProtocol: TCP
    loadBalancingScheme: EXTERNAL
    portRange: "443"
    provider: ${google}
    targetSelector:
      matchLabels:
        testing.upbound.io/example-name: default

---

apiVersion: compute.gcp.upbound.io/v1beta1
kind: BackendService
metadata:
  annotations:
    meta.upbound.io/example-id: compute/v1beta1/globalforwardingrule
  labels:
    testing.upbound.io/example-name: default
  name: default
spec:
  forProvider:
    backend:
    - balancingMode: UTILIZATION
      capacityScaler: 1
      groupSelector:
        matchLabels:
          testing.upbound.io/example-name: default
      maxUtilization: 1
    healthChecksRefs:
    - name: default
    loadBalancingScheme: EXTERNAL
    portName: tcp
    protocol: SSL
    timeoutSec: 10

---

apiVersion: compute.gcp.upbound.io/v1beta1
kind: Firewall
metadata:
  annotations:
    meta.upbound.io/example-id: compute/v1beta1/globalforwardingrule
  labels:
    testing.upbound.io/example-name: default
  name: default
spec:
  forProvider:
    allow:
    - protocol: tcp
    direction: INGRESS
    networkSelector:
      matchLabels:
        testing.upbound.io/example-name: default
    provider: ${google}
    sourceRanges:
    - 130.211.0.0/22
    - 35.191.0.0/16
    targetTags:
    - allow-health-check

---

apiVersion: compute.gcp.upbound.io/v1beta1
kind: GlobalAddress
metadata:
  annotations:
    meta.upbound.io/example-id: compute/v1beta1/globalforwardingrule
  labels:
    testing.upbound.io/example-name: default
  name: default
spec:
  forProvider: {}

---

apiVersion: compute.gcp.upbound.io/v1beta1
kind: HealthCheck
metadata:
  annotations:
    meta.upbound.io/example-id: compute/v1beta1/globalforwardingrule
  labels:
    testing.upbound.io/example-name: default
  name: default
spec:
  forProvider:
    checkIntervalSec: 1
    tcpHealthCheck:
    - port: "443"
    timeoutSec: 1

---

apiVersion: compute.gcp.upbound.io/v1beta1
kind: InstanceGroupManager
metadata:
  annotations:
    meta.upbound.io/example-id: compute/v1beta1/globalforwardingrule
  labels:
    testing.upbound.io/example-name: default
  name: default
spec:
  forProvider:
    baseInstanceName: vm
    namedPort:
    - name: tcp
      port: 443
    provider: ${google}
    targetSize: 2
    version:
    - instanceTemplateSelector:
        matchLabels:
          testing.upbound.io/example-name: default
      name: primary
    zone: us-central1-c

---

apiVersion: compute.gcp.upbound.io/v1beta1
kind: InstanceTemplate
metadata:
  annotations:
    meta.upbound.io/example-id: compute/v1beta1/globalforwardingrule
  labels:
    testing.upbound.io/example-name: default
  name: default
spec:
  forProvider:
    disk:
    - autoDelete: true
      boot: true
      sourceImage: debian-cloud/debian-10
    machineType: e2-small
    metadata:
      startup-script: |
        #! /bin/bash
        set -euo pipefail
        export DEBIAN_FRONTEND=noninteractive
        sudo apt-get update
        sudo apt-get install  -y apache2 jq
        sudo a2ensite default-ssl
        sudo a2enmod ssl
        sudo service apache2 restart
        NAME=$(curl -H "Metadata-Flavor: Google" "http://metadata.google.internal/computeMetadata/v1/instance/hostname")
        IP=$(curl -H "Metadata-Flavor: Google" "http://metadata.google.internal/computeMetadata/v1/instance/network-interfaces/0/ip")
        METADATA=$(curl -f -H "Metadata-Flavor: Google" "http://metadata.google.internal/computeMetadata/v1/instance/attributes/?recursive=True" | jq 'del(.["startup-script"])')
        cat <<EOF > /var/www/html/index.html
        <h1>SSL Load Balancer</h1>
        <pre>
        Name: $NAME
        IP: $IP
        Metadata: $METADATA
        </pre>
        EOF
    name: ssl-proxy-xlb-mig-template
    networkInterface:
    - accessConfig:
      - {}
      networkSelector:
        matchLabels:
          testing.upbound.io/example-name: default
      subnetworkSelector:
        matchLabels:
          testing.upbound.io/example-name: default
    provider: ${google}
    tags:
    - allow-health-check

---

apiVersion: compute.gcp.upbound.io/v1beta1
kind: Network
metadata:
  annotations:
    meta.upbound.io/example-id: compute/v1beta1/globalforwardingrule
  labels:
    testing.upbound.io/example-name: default
  name: default
spec:
  forProvider:
    autoCreateSubnetworks: false
    provider: ${google}

---

apiVersion: compute.gcp.upbound.io/v1beta1
kind: SSLCertificate
metadata:
  annotations:
    meta.upbound.io/example-id: compute/v1beta1/globalforwardingrule
  labels:
    testing.upbound.io/example-name: default
  name: default
spec:
  forProvider:
    certificateSecretRef:
      key: attribute.cert_pem
      name: example-self-signed-cert
      namespace: upbound-system
    privateKeySecretRef:
      key: attribute.private_key_pem
      name: example-private-key
      namespace: upbound-system

---

apiVersion: compute.gcp.upbound.io/v1beta1
kind: Subnetwork
metadata:
  annotations:
    meta.upbound.io/example-id: compute/v1beta1/globalforwardingrule
  labels:
    testing.upbound.io/example-name: default
  name: default
spec:
  forProvider:
    ipCidrRange: 10.0.1.0/24
    networkSelector:
      matchLabels:
        testing.upbound.io/example-name: default
    provider: ${google}
    region: us-central1

---

apiVersion: compute.gcp.upbound.io/v1beta1
kind: TargetSSLProxy
metadata:
  annotations:
    meta.upbound.io/example-id: compute/v1beta1/globalforwardingrule
  labels:
    testing.upbound.io/example-name: default
  name: default
spec:
  forProvider:
    backendServiceSelector:
      matchLabels:
        testing.upbound.io/example-name: default
    sslCertificatesRefs:
    - name: default
